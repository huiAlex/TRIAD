<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="Java" filename="flatCode/DroneFlightStateManager.java" pos:tabs="8"><package pos:start="1:1" pos:end="1:38">package <name pos:start="1:9" pos:end="1:37"><name pos:start="1:9" pos:end="1:11">edu</name><operator pos:start="1:12" pos:end="1:12">.</operator><name pos:start="1:13" pos:end="1:14">nd</name><operator pos:start="1:15" pos:end="1:15">.</operator><name pos:start="1:16" pos:end="1:24">dronology</name><operator pos:start="1:25" pos:end="1:25">.</operator><name pos:start="1:26" pos:end="1:29">core</name><operator pos:start="1:30" pos:end="1:30">.</operator><name pos:start="1:31" pos:end="1:37">vehicle</name></name>;</package>

<import pos:start="3:1" pos:end="3:27">import <name pos:start="3:8" pos:end="3:26"><name pos:start="3:8" pos:end="3:11">java</name><operator pos:start="3:12" pos:end="3:12">.</operator><name pos:start="3:13" pos:end="3:16">util</name><operator pos:start="3:17" pos:end="3:17">.</operator><name pos:start="3:18" pos:end="3:26">ArrayList</name></name>;</import>
<import pos:start="4:1" pos:end="4:22">import <name pos:start="4:8" pos:end="4:21"><name pos:start="4:8" pos:end="4:11">java</name><operator pos:start="4:12" pos:end="4:12">.</operator><name pos:start="4:13" pos:end="4:16">util</name><operator pos:start="4:17" pos:end="4:17">.</operator><name pos:start="4:18" pos:end="4:21">List</name></name>;</import>

<import pos:start="6:1" pos:end="6:49">import <name pos:start="6:8" pos:end="6:48"><name pos:start="6:8" pos:end="6:10">com</name><operator pos:start="6:11" pos:end="6:11">.</operator><name pos:start="6:12" pos:end="6:17">github</name><operator pos:start="6:18" pos:end="6:18">.</operator><name pos:start="6:19" pos:end="6:23">oxo42</name><operator pos:start="6:24" pos:end="6:24">.</operator><name pos:start="6:25" pos:end="6:35">stateless4j</name><operator pos:start="6:36" pos:end="6:36">.</operator><name pos:start="6:37" pos:end="6:48">StateMachine</name></name>;</import>

<import pos:start="8:1" pos:end="8:60">import <name pos:start="8:8" pos:end="8:59"><name pos:start="8:8" pos:end="8:10">edu</name><operator pos:start="8:11" pos:end="8:11">.</operator><name pos:start="8:12" pos:end="8:13">nd</name><operator pos:start="8:14" pos:end="8:14">.</operator><name pos:start="8:15" pos:end="8:23">dronology</name><operator pos:start="8:24" pos:end="8:24">.</operator><name pos:start="8:25" pos:end="8:28">core</name><operator pos:start="8:29" pos:end="8:29">.</operator><name pos:start="8:30" pos:end="8:39">exceptions</name><operator pos:start="8:40" pos:end="8:40">.</operator><name pos:start="8:41" pos:end="8:59">FlightZoneException</name></name>;</import>
<import pos:start="9:1" pos:end="9:67">import <name pos:start="9:8" pos:end="9:66"><name pos:start="9:8" pos:end="9:10">edu</name><operator pos:start="9:11" pos:end="9:11">.</operator><name pos:start="9:12" pos:end="9:13">nd</name><operator pos:start="9:14" pos:end="9:14">.</operator><name pos:start="9:15" pos:end="9:23">dronology</name><operator pos:start="9:24" pos:end="9:24">.</operator><name pos:start="9:25" pos:end="9:28">core</name><operator pos:start="9:29" pos:end="9:29">.</operator><name pos:start="9:30" pos:end="9:39">monitoring</name><operator pos:start="9:40" pos:end="9:40">.</operator><name pos:start="9:41" pos:end="9:66">DronologyMonitoringManager</name></name>;</import>
<import pos:start="10:1" pos:end="10:58">import <name pos:start="10:8" pos:end="10:57"><name pos:start="10:8" pos:end="10:10">edu</name><operator pos:start="10:11" pos:end="10:11">.</operator><name pos:start="10:12" pos:end="10:13">nd</name><operator pos:start="10:14" pos:end="10:14">.</operator><name pos:start="10:15" pos:end="10:23">dronology</name><operator pos:start="10:24" pos:end="10:24">.</operator><name pos:start="10:25" pos:end="10:28">core</name><operator pos:start="10:29" pos:end="10:29">.</operator><name pos:start="10:30" pos:end="10:39">monitoring</name><operator pos:start="10:40" pos:end="10:40">.</operator><name pos:start="10:41" pos:end="10:57">MessageMarshaller</name></name>;</import>
<import pos:start="11:1" pos:end="11:30">import <name pos:start="11:8" pos:end="11:29"><name pos:start="11:8" pos:end="11:10">net</name><operator pos:start="11:11" pos:end="11:11">.</operator><name pos:start="11:12" pos:end="11:13">mv</name><operator pos:start="11:14" pos:end="11:14">.</operator><name pos:start="11:15" pos:end="11:21">logging</name><operator pos:start="11:22" pos:end="11:22">.</operator><name pos:start="11:23" pos:end="11:29">ILogger</name></name>;</import>
<import pos:start="12:1" pos:end="12:37">import <name pos:start="12:8" pos:end="12:36"><name pos:start="12:8" pos:end="12:10">net</name><operator pos:start="12:11" pos:end="12:11">.</operator><name pos:start="12:12" pos:end="12:13">mv</name><operator pos:start="12:14" pos:end="12:14">.</operator><name pos:start="12:15" pos:end="12:21">logging</name><operator pos:start="12:22" pos:end="12:22">.</operator><name pos:start="12:23" pos:end="12:36">LoggerProvider</name></name>;</import>

<comment type="block" format="javadoc" pos:start="14:1" pos:end="21:3">/**
 * Associates a drone state object with a drone. &lt;br&gt;
 * Normal behavior : ON_GROUND -&gt; AWAITING_TAKEOFF_CLEARANCE -&gt; TAKING_OFF -&gt; FLYING -&gt; In IN_AIR -&gt; LANDING &lt;br&gt;
 * Unavailable transitions will result in an exception being thrown.
 *  
 * @author Jane Cleland-Huang
 *
 */</comment>
<class pos:start="22:1" pos:end="285:1"><specifier pos:start="22:1" pos:end="22:6">public</specifier> class <name pos:start="22:14" pos:end="22:36">DroneFlightStateManager</name> <block pos:start="22:38" pos:end="285:1">{

	<decl_stmt pos:start="24:9" pos:end="24:102"><decl pos:start="24:9" pos:end="24:101"><type pos:start="24:9" pos:end="24:36"><specifier pos:start="24:9" pos:end="24:15">private</specifier> <specifier pos:start="24:17" pos:end="24:22">static</specifier> <specifier pos:start="24:24" pos:end="24:28">final</specifier> <name pos:start="24:30" pos:end="24:36">ILogger</name></type> <name pos:start="24:38" pos:end="24:43">LOGGER</name> <init pos:start="24:45" pos:end="24:101">= <expr pos:start="24:47" pos:end="24:101"><call pos:start="24:47" pos:end="24:101"><name pos:start="24:47" pos:end="24:70"><name pos:start="24:47" pos:end="24:60">LoggerProvider</name><operator pos:start="24:61" pos:end="24:61">.</operator><name pos:start="24:62" pos:end="24:70">getLogger</name></name><argument_list pos:start="24:71" pos:end="24:101">(<argument pos:start="24:72" pos:end="24:100"><expr pos:start="24:72" pos:end="24:100"><name pos:start="24:72" pos:end="24:100"><name pos:start="24:72" pos:end="24:94">DroneFlightStateManager</name><operator pos:start="24:95" pos:end="24:95">.</operator><name pos:start="24:96" pos:end="24:100">class</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

	<enum pos:start="26:9" pos:end="28:9"><specifier pos:start="26:9" pos:end="26:14">public</specifier> enum <name pos:start="26:21" pos:end="26:30">FlightMode</name> <block pos:start="26:32" pos:end="28:9">{
		<decl pos:start="27:17" pos:end="27:25"><name pos:start="27:17" pos:end="27:25">ON_GROUND</name></decl>, <decl pos:start="27:28" pos:end="27:53"><name pos:start="27:28" pos:end="27:53">AWAITING_TAKEOFF_CLEARANCE</name></decl>, <decl pos:start="27:56" pos:end="27:65"><name pos:start="27:56" pos:end="27:65">TAKING_OFF</name></decl>, <decl pos:start="27:68" pos:end="27:73"><name pos:start="27:68" pos:end="27:73">FLYING</name></decl>, <decl pos:start="27:76" pos:end="27:81"><name pos:start="27:76" pos:end="27:81">IN_AIR</name></decl>, <decl pos:start="27:84" pos:end="27:90"><name pos:start="27:84" pos:end="27:90">LANDING</name></decl>, <decl pos:start="27:93" pos:end="27:107"><name pos:start="27:93" pos:end="27:107">USER_CONTROLLED</name></decl>
	}</block></enum>

	<enum pos:start="30:9" pos:end="32:9"><specifier pos:start="30:9" pos:end="30:15">private</specifier> enum <name pos:start="30:22" pos:end="30:41">FlightModeTransition</name> <block pos:start="30:43" pos:end="32:9">{
		<decl pos:start="31:17" pos:end="31:28"><name pos:start="31:17" pos:end="31:28">TO_ON_GROUND</name></decl>, <decl pos:start="31:31" pos:end="31:43"><name pos:start="31:31" pos:end="31:43">PLAN_ASSIGNED</name></decl>, <decl pos:start="31:46" pos:end="31:60"><name pos:start="31:46" pos:end="31:60">TAKEOFF_GRANTED</name></decl>, <decl pos:start="31:63" pos:end="31:85"><name pos:start="31:63" pos:end="31:85">TARGET_ALTITUED_REACHED</name></decl>, <decl pos:start="31:88" pos:end="31:100"><name pos:start="31:88" pos:end="31:100">PLAN_COMPLETE</name></decl>, <decl pos:start="31:103" pos:end="31:123"><name pos:start="31:103" pos:end="31:123">ZERO_ALTITUED_REACHED</name></decl>, <decl pos:start="31:126" pos:end="31:140"><name pos:start="31:126" pos:end="31:140">LANDING_GRANTED</name></decl>, <decl pos:start="31:143" pos:end="31:157"><name pos:start="31:143" pos:end="31:157">MANUAL_TAKEOFER</name></decl>;
	}</block></enum>

	<decl_stmt pos:start="34:9" pos:end="34:88"><decl pos:start="34:9" pos:end="34:87"><type pos:start="34:9" pos:end="34:71"><specifier pos:start="34:9" pos:end="34:15">private</specifier> <specifier pos:start="34:17" pos:end="34:24">volatile</specifier> <name pos:start="34:26" pos:end="34:71"><name pos:start="34:26" pos:end="34:37">StateMachine</name><argument_list type="generic" pos:start="34:38" pos:end="34:71">&lt;<argument pos:start="34:39" pos:end="34:48"><name pos:start="34:39" pos:end="34:48">FlightMode</name></argument>, <argument pos:start="34:51" pos:end="34:70"><name pos:start="34:51" pos:end="34:70">FlightModeTransition</name></argument>&gt;</argument_list></name></type> <name pos:start="34:73" pos:end="34:87">uavStateMachine</name></decl>;</decl_stmt>

	<decl_stmt pos:start="36:9" pos:end="36:35"><decl pos:start="36:9" pos:end="36:34"><type pos:start="36:9" pos:end="36:28"><specifier pos:start="36:9" pos:end="36:15">private</specifier> <specifier pos:start="36:17" pos:end="36:21">final</specifier> <name pos:start="36:23" pos:end="36:28">String</name></type> <name pos:start="36:30" pos:end="36:34">uavid</name></decl>;</decl_stmt>

	<decl_stmt pos:start="38:9" pos:end="38:85"><decl pos:start="38:9" pos:end="38:84"><type pos:start="38:9" pos:end="38:54"><specifier pos:start="38:9" pos:end="38:15">private</specifier> <name pos:start="38:17" pos:end="38:54"><name pos:start="38:17" pos:end="38:20">List</name><argument_list type="generic" pos:start="38:21" pos:end="38:54">&lt;<argument pos:start="38:22" pos:end="38:53"><name pos:start="38:22" pos:end="38:53">IManagedDroneStateChangeListener</name></argument>&gt;</argument_list></name></type> <name pos:start="38:56" pos:end="38:64">listeners</name> <init pos:start="38:66" pos:end="38:84">= <expr pos:start="38:68" pos:end="38:84"><operator pos:start="38:68" pos:end="38:70">new</operator> <call pos:start="38:72" pos:end="38:84"><name pos:start="38:72" pos:end="38:82"><name pos:start="38:72" pos:end="38:80">ArrayList</name><argument_list type="generic" pos:start="38:81" pos:end="38:82">&lt;&gt;</argument_list></name><argument_list pos:start="38:83" pos:end="38:84">()</argument_list></call></expr></init></decl>;</decl_stmt>

	<comment type="block" format="javadoc" pos:start="40:9" pos:end="45:11">/**
	 * Constructor States for both FlightMode and SafetyMode set to initial state
	 * 
	 * @param uav
	 *          The UAV the state manager is assigned to.
	 */</comment>
	<constructor pos:start="46:9" pos:end="49:9"><specifier pos:start="46:9" pos:end="46:14">public</specifier> <name pos:start="46:16" pos:end="46:38">DroneFlightStateManager</name><parameter_list pos:start="46:39" pos:end="46:56">(<parameter pos:start="46:40" pos:end="46:55"><decl pos:start="46:40" pos:end="46:55"><type pos:start="46:40" pos:end="46:51"><name pos:start="46:40" pos:end="46:51">ManagedDrone</name></type> <name pos:start="46:53" pos:end="46:55">uav</name></decl></parameter>)</parameter_list> <block pos:start="46:58" pos:end="49:9">{<block_content pos:start="47:17" pos:end="48:36">
		<expr_stmt pos:start="47:17" pos:end="47:48"><expr pos:start="47:17" pos:end="47:47"><name pos:start="47:17" pos:end="47:26"><name pos:start="47:17" pos:end="47:20">this</name><operator pos:start="47:21" pos:end="47:21">.</operator><name pos:start="47:22" pos:end="47:26">uavid</name></name> <operator pos:start="47:28" pos:end="47:28">=</operator> <call pos:start="47:30" pos:end="47:47"><name pos:start="47:30" pos:end="47:45"><name pos:start="47:30" pos:end="47:32">uav</name><operator pos:start="47:33" pos:end="47:33">.</operator><name pos:start="47:34" pos:end="47:45">getDroneName</name></name><argument_list pos:start="47:46" pos:end="47:47">()</argument_list></call></expr>;</expr_stmt>
		<expr_stmt pos:start="48:17" pos:end="48:36"><expr pos:start="48:17" pos:end="48:35"><call pos:start="48:17" pos:end="48:35"><name pos:start="48:17" pos:end="48:33">buildStateMachine</name><argument_list pos:start="48:34" pos:end="48:35">()</argument_list></call></expr>;</expr_stmt>
	</block_content>}</block></constructor>

	<function pos:start="51:9" pos:end="78:9"><type pos:start="51:9" pos:end="51:20"><specifier pos:start="51:9" pos:end="51:15">private</specifier> <name pos:start="51:17" pos:end="51:20">void</name></type> <name pos:start="51:22" pos:end="51:38">buildStateMachine</name><parameter_list pos:start="51:39" pos:end="51:40">()</parameter_list> <block pos:start="51:42" pos:end="78:9">{<block_content pos:start="52:17" pos:end="76:60">
		<expr_stmt pos:start="52:17" pos:end="52:75"><expr pos:start="52:17" pos:end="52:74"><name pos:start="52:17" pos:end="52:31">uavStateMachine</name> <operator pos:start="52:33" pos:end="52:33">=</operator> <operator pos:start="52:35" pos:end="52:37">new</operator> <call pos:start="52:39" pos:end="52:74"><name pos:start="52:39" pos:end="52:52"><name pos:start="52:39" pos:end="52:50">StateMachine</name><argument_list type="generic" pos:start="52:51" pos:end="52:52">&lt;&gt;</argument_list></name><argument_list pos:start="52:53" pos:end="52:74">(<argument pos:start="52:54" pos:end="52:73"><expr pos:start="52:54" pos:end="52:73"><name pos:start="52:54" pos:end="52:73"><name pos:start="52:54" pos:end="52:63">FlightMode</name><operator pos:start="52:64" pos:end="52:64">.</operator><name pos:start="52:65" pos:end="52:73">ON_GROUND</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt pos:start="53:17" pos:end="54:71"><expr pos:start="53:17" pos:end="54:70"><call pos:start="53:17" pos:end="53:63"><name pos:start="53:17" pos:end="53:41"><name pos:start="53:17" pos:end="53:31">uavStateMachine</name><operator pos:start="53:32" pos:end="53:32">.</operator><name pos:start="53:33" pos:end="53:41">configure</name></name><argument_list pos:start="53:42" pos:end="53:63">(<argument pos:start="53:43" pos:end="53:62"><expr pos:start="53:43" pos:end="53:62"><name pos:start="53:43" pos:end="53:62"><name pos:start="53:43" pos:end="53:52">FlightMode</name><operator pos:start="53:53" pos:end="53:53">.</operator><name pos:start="53:54" pos:end="53:62">ON_GROUND</name></name></expr></argument>)</argument_list></call><operator pos:start="53:64" pos:end="53:64">.</operator><call pos:start="53:65" pos:end="54:70"><name pos:start="53:65" pos:end="53:70">permit</name><argument_list pos:start="53:71" pos:end="54:70">(<argument pos:start="53:72" pos:end="53:105"><expr pos:start="53:72" pos:end="53:105"><name pos:start="53:72" pos:end="53:105"><name pos:start="53:72" pos:end="53:91">FlightModeTransition</name><operator pos:start="53:92" pos:end="53:92">.</operator><name pos:start="53:93" pos:end="53:105">PLAN_ASSIGNED</name></name></expr></argument>,
				<argument pos:start="54:33" pos:end="54:69"><expr pos:start="54:33" pos:end="54:69"><name pos:start="54:33" pos:end="54:69"><name pos:start="54:33" pos:end="54:42">FlightMode</name><operator pos:start="54:43" pos:end="54:43">.</operator><name pos:start="54:44" pos:end="54:69">AWAITING_TAKEOFF_CLEARANCE</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt pos:start="55:17" pos:end="56:55"><expr pos:start="55:17" pos:end="56:54"><call pos:start="55:17" pos:end="55:80"><name pos:start="55:17" pos:end="55:41"><name pos:start="55:17" pos:end="55:31">uavStateMachine</name><operator pos:start="55:32" pos:end="55:32">.</operator><name pos:start="55:33" pos:end="55:41">configure</name></name><argument_list pos:start="55:42" pos:end="55:80">(<argument pos:start="55:43" pos:end="55:79"><expr pos:start="55:43" pos:end="55:79"><name pos:start="55:43" pos:end="55:79"><name pos:start="55:43" pos:end="55:52">FlightMode</name><operator pos:start="55:53" pos:end="55:53">.</operator><name pos:start="55:54" pos:end="55:79">AWAITING_TAKEOFF_CLEARANCE</name></name></expr></argument>)</argument_list></call><operator pos:start="55:81" pos:end="55:81">.</operator><call pos:start="55:82" pos:end="56:54"><name pos:start="55:82" pos:end="55:87">permit</name><argument_list pos:start="55:88" pos:end="56:54">(<argument pos:start="55:89" pos:end="55:124"><expr pos:start="55:89" pos:end="55:124"><name pos:start="55:89" pos:end="55:124"><name pos:start="55:89" pos:end="55:108">FlightModeTransition</name><operator pos:start="55:109" pos:end="55:109">.</operator><name pos:start="55:110" pos:end="55:124">TAKEOFF_GRANTED</name></name></expr></argument>,
				<argument pos:start="56:33" pos:end="56:53"><expr pos:start="56:33" pos:end="56:53"><name pos:start="56:33" pos:end="56:53"><name pos:start="56:33" pos:end="56:42">FlightMode</name><operator pos:start="56:43" pos:end="56:43">.</operator><name pos:start="56:44" pos:end="56:53">TAKING_OFF</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt pos:start="57:17" pos:end="58:51"><expr pos:start="57:17" pos:end="58:50"><call pos:start="57:17" pos:end="57:64"><name pos:start="57:17" pos:end="57:41"><name pos:start="57:17" pos:end="57:31">uavStateMachine</name><operator pos:start="57:32" pos:end="57:32">.</operator><name pos:start="57:33" pos:end="57:41">configure</name></name><argument_list pos:start="57:42" pos:end="57:64">(<argument pos:start="57:43" pos:end="57:63"><expr pos:start="57:43" pos:end="57:63"><name pos:start="57:43" pos:end="57:63"><name pos:start="57:43" pos:end="57:52">FlightMode</name><operator pos:start="57:53" pos:end="57:53">.</operator><name pos:start="57:54" pos:end="57:63">TAKING_OFF</name></name></expr></argument>)</argument_list></call><operator pos:start="57:65" pos:end="57:65">.</operator><call pos:start="57:66" pos:end="58:50"><name pos:start="57:66" pos:end="57:71">permit</name><argument_list pos:start="57:72" pos:end="58:50">(<argument pos:start="57:73" pos:end="57:116"><expr pos:start="57:73" pos:end="57:116"><name pos:start="57:73" pos:end="57:116"><name pos:start="57:73" pos:end="57:92">FlightModeTransition</name><operator pos:start="57:93" pos:end="57:93">.</operator><name pos:start="57:94" pos:end="57:116">TARGET_ALTITUED_REACHED</name></name></expr></argument>,
				<argument pos:start="58:33" pos:end="58:49"><expr pos:start="58:33" pos:end="58:49"><name pos:start="58:33" pos:end="58:49"><name pos:start="58:33" pos:end="58:42">FlightMode</name><operator pos:start="58:43" pos:end="58:43">.</operator><name pos:start="58:44" pos:end="58:49">FLYING</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt pos:start="59:17" pos:end="59:123"><expr pos:start="59:17" pos:end="59:122"><call pos:start="59:17" pos:end="59:60"><name pos:start="59:17" pos:end="59:41"><name pos:start="59:17" pos:end="59:31">uavStateMachine</name><operator pos:start="59:32" pos:end="59:32">.</operator><name pos:start="59:33" pos:end="59:41">configure</name></name><argument_list pos:start="59:42" pos:end="59:60">(<argument pos:start="59:43" pos:end="59:59"><expr pos:start="59:43" pos:end="59:59"><name pos:start="59:43" pos:end="59:59"><name pos:start="59:43" pos:end="59:52">FlightMode</name><operator pos:start="59:53" pos:end="59:53">.</operator><name pos:start="59:54" pos:end="59:59">FLYING</name></name></expr></argument>)</argument_list></call><operator pos:start="59:61" pos:end="59:61">.</operator><call pos:start="59:62" pos:end="59:122"><name pos:start="59:62" pos:end="59:67">permit</name><argument_list pos:start="59:68" pos:end="59:122">(<argument pos:start="59:69" pos:end="59:102"><expr pos:start="59:69" pos:end="59:102"><name pos:start="59:69" pos:end="59:102"><name pos:start="59:69" pos:end="59:88">FlightModeTransition</name><operator pos:start="59:89" pos:end="59:89">.</operator><name pos:start="59:90" pos:end="59:102">PLAN_COMPLETE</name></name></expr></argument>, <argument pos:start="59:105" pos:end="59:121"><expr pos:start="59:105" pos:end="59:121"><name pos:start="59:105" pos:end="59:121"><name pos:start="59:105" pos:end="59:114">FlightMode</name><operator pos:start="59:115" pos:end="59:115">.</operator><name pos:start="59:116" pos:end="59:121">IN_AIR</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt pos:start="60:17" pos:end="60:123"><expr pos:start="60:17" pos:end="60:122"><call pos:start="60:17" pos:end="60:60"><name pos:start="60:17" pos:end="60:41"><name pos:start="60:17" pos:end="60:31">uavStateMachine</name><operator pos:start="60:32" pos:end="60:32">.</operator><name pos:start="60:33" pos:end="60:41">configure</name></name><argument_list pos:start="60:42" pos:end="60:60">(<argument pos:start="60:43" pos:end="60:59"><expr pos:start="60:43" pos:end="60:59"><name pos:start="60:43" pos:end="60:59"><name pos:start="60:43" pos:end="60:52">FlightMode</name><operator pos:start="60:53" pos:end="60:53">.</operator><name pos:start="60:54" pos:end="60:59">IN_AIR</name></name></expr></argument>)</argument_list></call><operator pos:start="60:61" pos:end="60:61">.</operator><call pos:start="60:62" pos:end="60:122"><name pos:start="60:62" pos:end="60:67">permit</name><argument_list pos:start="60:68" pos:end="60:122">(<argument pos:start="60:69" pos:end="60:102"><expr pos:start="60:69" pos:end="60:102"><name pos:start="60:69" pos:end="60:102"><name pos:start="60:69" pos:end="60:88">FlightModeTransition</name><operator pos:start="60:89" pos:end="60:89">.</operator><name pos:start="60:90" pos:end="60:102">PLAN_ASSIGNED</name></name></expr></argument>, <argument pos:start="60:105" pos:end="60:121"><expr pos:start="60:105" pos:end="60:121"><name pos:start="60:105" pos:end="60:121"><name pos:start="60:105" pos:end="60:114">FlightMode</name><operator pos:start="60:115" pos:end="60:115">.</operator><name pos:start="60:116" pos:end="60:121">FLYING</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt pos:start="61:17" pos:end="61:126"><expr pos:start="61:17" pos:end="61:125"><call pos:start="61:17" pos:end="61:60"><name pos:start="61:17" pos:end="61:41"><name pos:start="61:17" pos:end="61:31">uavStateMachine</name><operator pos:start="61:32" pos:end="61:32">.</operator><name pos:start="61:33" pos:end="61:41">configure</name></name><argument_list pos:start="61:42" pos:end="61:60">(<argument pos:start="61:43" pos:end="61:59"><expr pos:start="61:43" pos:end="61:59"><name pos:start="61:43" pos:end="61:59"><name pos:start="61:43" pos:end="61:52">FlightMode</name><operator pos:start="61:53" pos:end="61:53">.</operator><name pos:start="61:54" pos:end="61:59">IN_AIR</name></name></expr></argument>)</argument_list></call><operator pos:start="61:61" pos:end="61:61">.</operator><call pos:start="61:62" pos:end="61:125"><name pos:start="61:62" pos:end="61:67">permit</name><argument_list pos:start="61:68" pos:end="61:125">(<argument pos:start="61:69" pos:end="61:104"><expr pos:start="61:69" pos:end="61:104"><name pos:start="61:69" pos:end="61:104"><name pos:start="61:69" pos:end="61:88">FlightModeTransition</name><operator pos:start="61:89" pos:end="61:89">.</operator><name pos:start="61:90" pos:end="61:104">LANDING_GRANTED</name></name></expr></argument>, <argument pos:start="61:107" pos:end="61:124"><expr pos:start="61:107" pos:end="61:124"><name pos:start="61:107" pos:end="61:124"><name pos:start="61:107" pos:end="61:116">FlightMode</name><operator pos:start="61:117" pos:end="61:117">.</operator><name pos:start="61:118" pos:end="61:124">LANDING</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt pos:start="62:17" pos:end="63:54"><expr pos:start="62:17" pos:end="63:53"><call pos:start="62:17" pos:end="62:61"><name pos:start="62:17" pos:end="62:41"><name pos:start="62:17" pos:end="62:31">uavStateMachine</name><operator pos:start="62:32" pos:end="62:32">.</operator><name pos:start="62:33" pos:end="62:41">configure</name></name><argument_list pos:start="62:42" pos:end="62:61">(<argument pos:start="62:43" pos:end="62:60"><expr pos:start="62:43" pos:end="62:60"><name pos:start="62:43" pos:end="62:60"><name pos:start="62:43" pos:end="62:52">FlightMode</name><operator pos:start="62:53" pos:end="62:53">.</operator><name pos:start="62:54" pos:end="62:60">LANDING</name></name></expr></argument>)</argument_list></call><operator pos:start="62:62" pos:end="62:62">.</operator><call pos:start="62:63" pos:end="63:53"><name pos:start="62:63" pos:end="62:68">permit</name><argument_list pos:start="62:69" pos:end="63:53">(<argument pos:start="62:70" pos:end="62:111"><expr pos:start="62:70" pos:end="62:111"><name pos:start="62:70" pos:end="62:111"><name pos:start="62:70" pos:end="62:89">FlightModeTransition</name><operator pos:start="62:90" pos:end="62:90">.</operator><name pos:start="62:91" pos:end="62:111">ZERO_ALTITUED_REACHED</name></name></expr></argument>,
				<argument pos:start="63:33" pos:end="63:52"><expr pos:start="63:33" pos:end="63:52"><name pos:start="63:33" pos:end="63:52"><name pos:start="63:33" pos:end="63:42">FlightMode</name><operator pos:start="63:43" pos:end="63:43">.</operator><name pos:start="63:44" pos:end="63:52">ON_GROUND</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		<expr_stmt pos:start="65:17" pos:end="66:60"><expr pos:start="65:17" pos:end="66:59"><call pos:start="65:17" pos:end="65:63"><name pos:start="65:17" pos:end="65:41"><name pos:start="65:17" pos:end="65:31">uavStateMachine</name><operator pos:start="65:32" pos:end="65:32">.</operator><name pos:start="65:33" pos:end="65:41">configure</name></name><argument_list pos:start="65:42" pos:end="65:63">(<argument pos:start="65:43" pos:end="65:62"><expr pos:start="65:43" pos:end="65:62"><name pos:start="65:43" pos:end="65:62"><name pos:start="65:43" pos:end="65:52">FlightMode</name><operator pos:start="65:53" pos:end="65:53">.</operator><name pos:start="65:54" pos:end="65:62">ON_GROUND</name></name></expr></argument>)</argument_list></call><operator pos:start="65:64" pos:end="65:64">.</operator><call pos:start="65:65" pos:end="66:59"><name pos:start="65:65" pos:end="65:70">permit</name><argument_list pos:start="65:71" pos:end="66:59">(<argument pos:start="65:72" pos:end="65:107"><expr pos:start="65:72" pos:end="65:107"><name pos:start="65:72" pos:end="65:107"><name pos:start="65:72" pos:end="65:91">FlightModeTransition</name><operator pos:start="65:92" pos:end="65:92">.</operator><name pos:start="65:93" pos:end="65:107">MANUAL_TAKEOFER</name></name></expr></argument>,
				<argument pos:start="66:33" pos:end="66:58"><expr pos:start="66:33" pos:end="66:58"><name pos:start="66:33" pos:end="66:58"><name pos:start="66:33" pos:end="66:42">FlightMode</name><operator pos:start="66:43" pos:end="66:43">.</operator><name pos:start="66:44" pos:end="66:58">USER_CONTROLLED</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt pos:start="67:17" pos:end="68:60"><expr pos:start="67:17" pos:end="68:59"><call pos:start="67:17" pos:end="67:80"><name pos:start="67:17" pos:end="67:41"><name pos:start="67:17" pos:end="67:31">uavStateMachine</name><operator pos:start="67:32" pos:end="67:32">.</operator><name pos:start="67:33" pos:end="67:41">configure</name></name><argument_list pos:start="67:42" pos:end="67:80">(<argument pos:start="67:43" pos:end="67:79"><expr pos:start="67:43" pos:end="67:79"><name pos:start="67:43" pos:end="67:79"><name pos:start="67:43" pos:end="67:52">FlightMode</name><operator pos:start="67:53" pos:end="67:53">.</operator><name pos:start="67:54" pos:end="67:79">AWAITING_TAKEOFF_CLEARANCE</name></name></expr></argument>)</argument_list></call><operator pos:start="67:81" pos:end="67:81">.</operator><call pos:start="67:82" pos:end="68:59"><name pos:start="67:82" pos:end="67:87">permit</name><argument_list pos:start="67:88" pos:end="68:59">(<argument pos:start="67:89" pos:end="67:124"><expr pos:start="67:89" pos:end="67:124"><name pos:start="67:89" pos:end="67:124"><name pos:start="67:89" pos:end="67:108">FlightModeTransition</name><operator pos:start="67:109" pos:end="67:109">.</operator><name pos:start="67:110" pos:end="67:124">MANUAL_TAKEOFER</name></name></expr></argument>,
				<argument pos:start="68:33" pos:end="68:58"><expr pos:start="68:33" pos:end="68:58"><name pos:start="68:33" pos:end="68:58"><name pos:start="68:33" pos:end="68:42">FlightMode</name><operator pos:start="68:43" pos:end="68:43">.</operator><name pos:start="68:44" pos:end="68:58">USER_CONTROLLED</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt pos:start="69:17" pos:end="70:60"><expr pos:start="69:17" pos:end="70:59"><call pos:start="69:17" pos:end="69:64"><name pos:start="69:17" pos:end="69:41"><name pos:start="69:17" pos:end="69:31">uavStateMachine</name><operator pos:start="69:32" pos:end="69:32">.</operator><name pos:start="69:33" pos:end="69:41">configure</name></name><argument_list pos:start="69:42" pos:end="69:64">(<argument pos:start="69:43" pos:end="69:63"><expr pos:start="69:43" pos:end="69:63"><name pos:start="69:43" pos:end="69:63"><name pos:start="69:43" pos:end="69:52">FlightMode</name><operator pos:start="69:53" pos:end="69:53">.</operator><name pos:start="69:54" pos:end="69:63">TAKING_OFF</name></name></expr></argument>)</argument_list></call><operator pos:start="69:65" pos:end="69:65">.</operator><call pos:start="69:66" pos:end="70:59"><name pos:start="69:66" pos:end="69:71">permit</name><argument_list pos:start="69:72" pos:end="70:59">(<argument pos:start="69:73" pos:end="69:108"><expr pos:start="69:73" pos:end="69:108"><name pos:start="69:73" pos:end="69:108"><name pos:start="69:73" pos:end="69:92">FlightModeTransition</name><operator pos:start="69:93" pos:end="69:93">.</operator><name pos:start="69:94" pos:end="69:108">MANUAL_TAKEOFER</name></name></expr></argument>,
				<argument pos:start="70:33" pos:end="70:58"><expr pos:start="70:33" pos:end="70:58"><name pos:start="70:33" pos:end="70:58"><name pos:start="70:33" pos:end="70:42">FlightMode</name><operator pos:start="70:43" pos:end="70:43">.</operator><name pos:start="70:44" pos:end="70:58">USER_CONTROLLED</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt pos:start="71:17" pos:end="72:60"><expr pos:start="71:17" pos:end="72:59"><call pos:start="71:17" pos:end="71:60"><name pos:start="71:17" pos:end="71:41"><name pos:start="71:17" pos:end="71:31">uavStateMachine</name><operator pos:start="71:32" pos:end="71:32">.</operator><name pos:start="71:33" pos:end="71:41">configure</name></name><argument_list pos:start="71:42" pos:end="71:60">(<argument pos:start="71:43" pos:end="71:59"><expr pos:start="71:43" pos:end="71:59"><name pos:start="71:43" pos:end="71:59"><name pos:start="71:43" pos:end="71:52">FlightMode</name><operator pos:start="71:53" pos:end="71:53">.</operator><name pos:start="71:54" pos:end="71:59">FLYING</name></name></expr></argument>)</argument_list></call><operator pos:start="71:61" pos:end="71:61">.</operator><call pos:start="71:62" pos:end="72:59"><name pos:start="71:62" pos:end="71:67">permit</name><argument_list pos:start="71:68" pos:end="72:59">(<argument pos:start="71:69" pos:end="71:104"><expr pos:start="71:69" pos:end="71:104"><name pos:start="71:69" pos:end="71:104"><name pos:start="71:69" pos:end="71:88">FlightModeTransition</name><operator pos:start="71:89" pos:end="71:89">.</operator><name pos:start="71:90" pos:end="71:104">MANUAL_TAKEOFER</name></name></expr></argument>,
				<argument pos:start="72:33" pos:end="72:58"><expr pos:start="72:33" pos:end="72:58"><name pos:start="72:33" pos:end="72:58"><name pos:start="72:33" pos:end="72:42">FlightMode</name><operator pos:start="72:43" pos:end="72:43">.</operator><name pos:start="72:44" pos:end="72:58">USER_CONTROLLED</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt pos:start="73:17" pos:end="74:60"><expr pos:start="73:17" pos:end="74:59"><call pos:start="73:17" pos:end="73:60"><name pos:start="73:17" pos:end="73:41"><name pos:start="73:17" pos:end="73:31">uavStateMachine</name><operator pos:start="73:32" pos:end="73:32">.</operator><name pos:start="73:33" pos:end="73:41">configure</name></name><argument_list pos:start="73:42" pos:end="73:60">(<argument pos:start="73:43" pos:end="73:59"><expr pos:start="73:43" pos:end="73:59"><name pos:start="73:43" pos:end="73:59"><name pos:start="73:43" pos:end="73:52">FlightMode</name><operator pos:start="73:53" pos:end="73:53">.</operator><name pos:start="73:54" pos:end="73:59">IN_AIR</name></name></expr></argument>)</argument_list></call><operator pos:start="73:61" pos:end="73:61">.</operator><call pos:start="73:62" pos:end="74:59"><name pos:start="73:62" pos:end="73:67">permit</name><argument_list pos:start="73:68" pos:end="74:59">(<argument pos:start="73:69" pos:end="73:104"><expr pos:start="73:69" pos:end="73:104"><name pos:start="73:69" pos:end="73:104"><name pos:start="73:69" pos:end="73:88">FlightModeTransition</name><operator pos:start="73:89" pos:end="73:89">.</operator><name pos:start="73:90" pos:end="73:104">MANUAL_TAKEOFER</name></name></expr></argument>,
				<argument pos:start="74:33" pos:end="74:58"><expr pos:start="74:33" pos:end="74:58"><name pos:start="74:33" pos:end="74:58"><name pos:start="74:33" pos:end="74:42">FlightMode</name><operator pos:start="74:43" pos:end="74:43">.</operator><name pos:start="74:44" pos:end="74:58">USER_CONTROLLED</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt pos:start="75:17" pos:end="76:60"><expr pos:start="75:17" pos:end="76:59"><call pos:start="75:17" pos:end="75:61"><name pos:start="75:17" pos:end="75:41"><name pos:start="75:17" pos:end="75:31">uavStateMachine</name><operator pos:start="75:32" pos:end="75:32">.</operator><name pos:start="75:33" pos:end="75:41">configure</name></name><argument_list pos:start="75:42" pos:end="75:61">(<argument pos:start="75:43" pos:end="75:60"><expr pos:start="75:43" pos:end="75:60"><name pos:start="75:43" pos:end="75:60"><name pos:start="75:43" pos:end="75:52">FlightMode</name><operator pos:start="75:53" pos:end="75:53">.</operator><name pos:start="75:54" pos:end="75:60">LANDING</name></name></expr></argument>)</argument_list></call><operator pos:start="75:62" pos:end="75:62">.</operator><call pos:start="75:63" pos:end="76:59"><name pos:start="75:63" pos:end="75:68">permit</name><argument_list pos:start="75:69" pos:end="76:59">(<argument pos:start="75:70" pos:end="75:105"><expr pos:start="75:70" pos:end="75:105"><name pos:start="75:70" pos:end="75:105"><name pos:start="75:70" pos:end="75:89">FlightModeTransition</name><operator pos:start="75:90" pos:end="75:90">.</operator><name pos:start="75:91" pos:end="75:105">MANUAL_TAKEOFER</name></name></expr></argument>,
				<argument pos:start="76:33" pos:end="76:58"><expr pos:start="76:33" pos:end="76:58"><name pos:start="76:33" pos:end="76:58"><name pos:start="76:33" pos:end="76:42">FlightMode</name><operator pos:start="76:43" pos:end="76:43">.</operator><name pos:start="76:44" pos:end="76:58">USER_CONTROLLED</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	</block_content>}</block></function>

	<comment type="block" format="javadoc" pos:start="80:9" pos:end="85:11">/**
	 * Set Flight Mode to OnGround
	 * 
	 * @throws FlightZoneException
	 *           if mode change does not follow allowed state transition.
	 */</comment>
	<function pos:start="86:9" pos:end="98:9"><type pos:start="86:9" pos:end="86:19"><specifier pos:start="86:9" pos:end="86:14">public</specifier> <name pos:start="86:16" pos:end="86:19">void</name></type> <name pos:start="86:21" pos:end="86:37">setModeToOnGround</name><parameter_list pos:start="86:38" pos:end="86:39">()</parameter_list> <throws pos:start="86:41" pos:end="86:66">throws <argument pos:start="86:48" pos:end="86:66"><expr pos:start="86:48" pos:end="86:66"><name pos:start="86:48" pos:end="86:66">FlightZoneException</name></expr></argument></throws> <block pos:start="86:68" pos:end="98:9">{<block_content pos:start="87:17" pos:end="97:17">
		<decl_stmt pos:start="87:17" pos:end="87:65"><decl pos:start="87:17" pos:end="87:64"><type pos:start="87:17" pos:end="87:26"><name pos:start="87:17" pos:end="87:26">FlightMode</name></type> <name pos:start="87:28" pos:end="87:35">oldState</name> <init pos:start="87:37" pos:end="87:64">= <expr pos:start="87:39" pos:end="87:64"><call pos:start="87:39" pos:end="87:64"><name pos:start="87:39" pos:end="87:62"><name pos:start="87:39" pos:end="87:53">uavStateMachine</name><operator pos:start="87:54" pos:end="87:54">.</operator><name pos:start="87:55" pos:end="87:62">getState</name></name><argument_list pos:start="87:63" pos:end="87:64">()</argument_list></call></expr></init></decl>;</decl_stmt>
		<if_stmt pos:start="88:17" pos:end="97:17"><if pos:start="88:17" pos:end="92:17">if <condition pos:start="88:20" pos:end="88:88">(<expr pos:start="88:21" pos:end="88:87"><call pos:start="88:21" pos:end="88:87"><name pos:start="88:21" pos:end="88:43"><name pos:start="88:21" pos:end="88:35">uavStateMachine</name><operator pos:start="88:36" pos:end="88:36">.</operator><name pos:start="88:37" pos:end="88:43">canFire</name></name><argument_list pos:start="88:44" pos:end="88:87">(<argument pos:start="88:45" pos:end="88:86"><expr pos:start="88:45" pos:end="88:86"><name pos:start="88:45" pos:end="88:86"><name pos:start="88:45" pos:end="88:64">FlightModeTransition</name><operator pos:start="88:65" pos:end="88:65">.</operator><name pos:start="88:66" pos:end="88:86">ZERO_ALTITUED_REACHED</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="88:90" pos:end="92:17">{<block_content pos:start="89:25" pos:end="90:80">
			<expr_stmt pos:start="89:25" pos:end="89:89"><expr pos:start="89:25" pos:end="89:88"><call pos:start="89:25" pos:end="89:88"><name pos:start="89:25" pos:end="89:44"><name pos:start="89:25" pos:end="89:39">uavStateMachine</name><operator pos:start="89:40" pos:end="89:40">.</operator><name pos:start="89:41" pos:end="89:44">fire</name></name><argument_list pos:start="89:45" pos:end="89:88">(<argument pos:start="89:46" pos:end="89:87"><expr pos:start="89:46" pos:end="89:87"><name pos:start="89:46" pos:end="89:87"><name pos:start="89:46" pos:end="89:65">FlightModeTransition</name><operator pos:start="89:66" pos:end="89:66">.</operator><name pos:start="89:67" pos:end="89:87">ZERO_ALTITUED_REACHED</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt pos:start="90:25" pos:end="90:80"><expr pos:start="90:25" pos:end="90:79"><call pos:start="90:25" pos:end="90:79"><name pos:start="90:25" pos:end="90:41">notifyStateChange</name><argument_list pos:start="90:42" pos:end="90:79">(<argument pos:start="90:43" pos:end="90:50"><expr pos:start="90:43" pos:end="90:50"><name pos:start="90:43" pos:end="90:50">oldState</name></expr></argument>, <argument pos:start="90:53" pos:end="90:78"><expr pos:start="90:53" pos:end="90:78"><call pos:start="90:53" pos:end="90:78"><name pos:start="90:53" pos:end="90:76"><name pos:start="90:53" pos:end="90:67">uavStateMachine</name><operator pos:start="90:68" pos:end="90:68">.</operator><name pos:start="90:69" pos:end="90:76">getState</name></name><argument_list pos:start="90:77" pos:end="90:78">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		</block_content>}</block></if> <else pos:start="92:19" pos:end="97:17">else <block pos:start="92:24" pos:end="97:17">{<block_content pos:start="93:25" pos:end="96:142">
			<expr_stmt pos:start="93:25" pos:end="94:92"><expr pos:start="93:25" pos:end="94:91"><call pos:start="93:25" pos:end="94:91"><name pos:start="93:25" pos:end="93:36"><name pos:start="93:25" pos:end="93:30">LOGGER</name><operator pos:start="93:31" pos:end="93:31">.</operator><name pos:start="93:32" pos:end="93:36">error</name></name><argument_list pos:start="93:37" pos:end="94:91">(<argument pos:start="93:38" pos:end="94:90"><expr pos:start="93:38" pos:end="94:90"><literal type="string" pos:start="93:38" pos:end="93:68">"You may not transition from '"</literal> <operator pos:start="93:70" pos:end="93:70">+</operator> <call pos:start="93:72" pos:end="93:97"><name pos:start="93:72" pos:end="93:95"><name pos:start="93:72" pos:end="93:86">uavStateMachine</name><operator pos:start="93:87" pos:end="93:87">.</operator><name pos:start="93:88" pos:end="93:95">getState</name></name><argument_list pos:start="93:96" pos:end="93:97">()</argument_list></call> <operator pos:start="93:99" pos:end="93:99">+</operator> <literal type="string" pos:start="93:101" pos:end="93:118">"' with trigger '"</literal>
					<operator pos:start="94:41" pos:end="94:41">+</operator> <name pos:start="94:43" pos:end="94:84"><name pos:start="94:43" pos:end="94:62">FlightModeTransition</name><operator pos:start="94:63" pos:end="94:63">.</operator><name pos:start="94:64" pos:end="94:84">ZERO_ALTITUED_REACHED</name></name> <operator pos:start="94:86" pos:end="94:86">+</operator> <literal type="string" pos:start="94:88" pos:end="94:90">"'"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<throw pos:start="95:25" pos:end="96:142">throw <expr pos:start="95:31" pos:end="96:141"><operator pos:start="95:31" pos:end="95:33">new</operator> <call pos:start="95:35" pos:end="96:141"><name pos:start="95:35" pos:end="95:53">FlightZoneException</name><argument_list pos:start="95:54" pos:end="96:141">(
					<argument pos:start="96:41" pos:end="96:140"><expr pos:start="96:41" pos:end="96:140"><literal type="string" pos:start="96:41" pos:end="96:68">"You may not transition to "</literal> <operator pos:start="96:70" pos:end="96:70">+</operator> <name pos:start="96:72" pos:end="96:91"><name pos:start="96:72" pos:end="96:81">FlightMode</name><operator pos:start="96:82" pos:end="96:82">.</operator><name pos:start="96:83" pos:end="96:91">ON_GROUND</name></name> <operator pos:start="96:93" pos:end="96:93">+</operator> <literal type="string" pos:start="96:95" pos:end="96:111">" directly from "</literal> <operator pos:start="96:113" pos:end="96:113">+</operator> <call pos:start="96:115" pos:end="96:140"><name pos:start="96:115" pos:end="96:138"><name pos:start="96:115" pos:end="96:129">uavStateMachine</name><operator pos:start="96:130" pos:end="96:130">.</operator><name pos:start="96:131" pos:end="96:138">getState</name></name><argument_list pos:start="96:139" pos:end="96:140">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</throw>
		</block_content>}</block></else></if_stmt>
	</block_content>}</block></function>

	<comment type="block" format="javadoc" pos:start="100:9" pos:end="103:11">/**
	 * Set Flight Mode to UserControlled
	 * 
	 */</comment> 
	<function pos:start="104:9" pos:end="117:9"><type pos:start="104:9" pos:end="104:19"><specifier pos:start="104:9" pos:end="104:14">public</specifier> <name pos:start="104:16" pos:end="104:19">void</name></type> <name pos:start="104:21" pos:end="104:43">setModeToUserControlled</name><parameter_list pos:start="104:44" pos:end="104:45">()</parameter_list> <throws pos:start="104:47" pos:end="104:72">throws <argument pos:start="104:54" pos:end="104:72"><expr pos:start="104:54" pos:end="104:72"><name pos:start="104:54" pos:end="104:72">FlightZoneException</name></expr></argument></throws> <block pos:start="104:74" pos:end="117:9">{<block_content pos:start="105:17" pos:end="115:17">
		<decl_stmt pos:start="105:17" pos:end="105:65"><decl pos:start="105:17" pos:end="105:64"><type pos:start="105:17" pos:end="105:26"><name pos:start="105:17" pos:end="105:26">FlightMode</name></type> <name pos:start="105:28" pos:end="105:35">oldState</name> <init pos:start="105:37" pos:end="105:64">= <expr pos:start="105:39" pos:end="105:64"><call pos:start="105:39" pos:end="105:64"><name pos:start="105:39" pos:end="105:62"><name pos:start="105:39" pos:end="105:53">uavStateMachine</name><operator pos:start="105:54" pos:end="105:54">.</operator><name pos:start="105:55" pos:end="105:62">getState</name></name><argument_list pos:start="105:63" pos:end="105:64">()</argument_list></call></expr></init></decl>;</decl_stmt>
		<if_stmt pos:start="106:17" pos:end="115:17"><if pos:start="106:17" pos:end="110:17">if <condition pos:start="106:20" pos:end="106:82">(<expr pos:start="106:21" pos:end="106:81"><call pos:start="106:21" pos:end="106:81"><name pos:start="106:21" pos:end="106:43"><name pos:start="106:21" pos:end="106:35">uavStateMachine</name><operator pos:start="106:36" pos:end="106:36">.</operator><name pos:start="106:37" pos:end="106:43">canFire</name></name><argument_list pos:start="106:44" pos:end="106:81">(<argument pos:start="106:45" pos:end="106:80"><expr pos:start="106:45" pos:end="106:80"><name pos:start="106:45" pos:end="106:80"><name pos:start="106:45" pos:end="106:64">FlightModeTransition</name><operator pos:start="106:65" pos:end="106:65">.</operator><name pos:start="106:66" pos:end="106:80">MANUAL_TAKEOFER</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="106:84" pos:end="110:17">{<block_content pos:start="107:25" pos:end="108:80">
			<expr_stmt pos:start="107:25" pos:end="107:83"><expr pos:start="107:25" pos:end="107:82"><call pos:start="107:25" pos:end="107:82"><name pos:start="107:25" pos:end="107:44"><name pos:start="107:25" pos:end="107:39">uavStateMachine</name><operator pos:start="107:40" pos:end="107:40">.</operator><name pos:start="107:41" pos:end="107:44">fire</name></name><argument_list pos:start="107:45" pos:end="107:82">(<argument pos:start="107:46" pos:end="107:81"><expr pos:start="107:46" pos:end="107:81"><name pos:start="107:46" pos:end="107:81"><name pos:start="107:46" pos:end="107:65">FlightModeTransition</name><operator pos:start="107:66" pos:end="107:66">.</operator><name pos:start="107:67" pos:end="107:81">MANUAL_TAKEOFER</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt pos:start="108:25" pos:end="108:80"><expr pos:start="108:25" pos:end="108:79"><call pos:start="108:25" pos:end="108:79"><name pos:start="108:25" pos:end="108:41">notifyStateChange</name><argument_list pos:start="108:42" pos:end="108:79">(<argument pos:start="108:43" pos:end="108:50"><expr pos:start="108:43" pos:end="108:50"><name pos:start="108:43" pos:end="108:50">oldState</name></expr></argument>, <argument pos:start="108:53" pos:end="108:78"><expr pos:start="108:53" pos:end="108:78"><call pos:start="108:53" pos:end="108:78"><name pos:start="108:53" pos:end="108:76"><name pos:start="108:53" pos:end="108:67">uavStateMachine</name><operator pos:start="108:68" pos:end="108:68">.</operator><name pos:start="108:69" pos:end="108:76">getState</name></name><argument_list pos:start="108:77" pos:end="108:78">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		</block_content>}</block></if> <else pos:start="110:19" pos:end="115:17">else <block pos:start="110:24" pos:end="115:17">{<block_content pos:start="111:25" pos:end="114:142">
			<expr_stmt pos:start="111:25" pos:end="112:86"><expr pos:start="111:25" pos:end="112:85"><call pos:start="111:25" pos:end="112:85"><name pos:start="111:25" pos:end="111:36"><name pos:start="111:25" pos:end="111:30">LOGGER</name><operator pos:start="111:31" pos:end="111:31">.</operator><name pos:start="111:32" pos:end="111:36">error</name></name><argument_list pos:start="111:37" pos:end="112:85">(<argument pos:start="111:38" pos:end="112:84"><expr pos:start="111:38" pos:end="112:84"><literal type="string" pos:start="111:38" pos:end="111:68">"You may not transition from '"</literal> <operator pos:start="111:70" pos:end="111:70">+</operator> <call pos:start="111:72" pos:end="111:97"><name pos:start="111:72" pos:end="111:95"><name pos:start="111:72" pos:end="111:86">uavStateMachine</name><operator pos:start="111:87" pos:end="111:87">.</operator><name pos:start="111:88" pos:end="111:95">getState</name></name><argument_list pos:start="111:96" pos:end="111:97">()</argument_list></call> <operator pos:start="111:99" pos:end="111:99">+</operator> <literal type="string" pos:start="111:101" pos:end="111:118">"' with trigger '"</literal>
					<operator pos:start="112:41" pos:end="112:41">+</operator> <name pos:start="112:43" pos:end="112:78"><name pos:start="112:43" pos:end="112:62">FlightModeTransition</name><operator pos:start="112:63" pos:end="112:63">.</operator><name pos:start="112:64" pos:end="112:78">MANUAL_TAKEOFER</name></name> <operator pos:start="112:80" pos:end="112:80">+</operator> <literal type="string" pos:start="112:82" pos:end="112:84">"'"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<throw pos:start="113:25" pos:end="114:142">throw <expr pos:start="113:31" pos:end="114:141"><operator pos:start="113:31" pos:end="113:33">new</operator> <call pos:start="113:35" pos:end="114:141"><name pos:start="113:35" pos:end="113:53">FlightZoneException</name><argument_list pos:start="113:54" pos:end="114:141">(
					<argument pos:start="114:41" pos:end="114:140"><expr pos:start="114:41" pos:end="114:140"><literal type="string" pos:start="114:41" pos:end="114:68">"You may not transition to "</literal> <operator pos:start="114:70" pos:end="114:70">+</operator> <name pos:start="114:72" pos:end="114:91"><name pos:start="114:72" pos:end="114:81">FlightMode</name><operator pos:start="114:82" pos:end="114:82">.</operator><name pos:start="114:83" pos:end="114:91">ON_GROUND</name></name> <operator pos:start="114:93" pos:end="114:93">+</operator> <literal type="string" pos:start="114:95" pos:end="114:111">" directly from "</literal> <operator pos:start="114:113" pos:end="114:113">+</operator> <call pos:start="114:115" pos:end="114:140"><name pos:start="114:115" pos:end="114:138"><name pos:start="114:115" pos:end="114:129">uavStateMachine</name><operator pos:start="114:130" pos:end="114:130">.</operator><name pos:start="114:131" pos:end="114:138">getState</name></name><argument_list pos:start="114:139" pos:end="114:140">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</throw>
		</block_content>}</block></else></if_stmt>

	</block_content>}</block></function>

	<comment type="block" format="javadoc" pos:start="119:9" pos:end="124:11">/**
	 * Set Flight mode to awaiting Takeoff Clearance
	 * 
	 * @throws FlightZoneException
	 *           if mode change does not follow allowed state transition.
	 */</comment>
	<function pos:start="125:9" pos:end="137:9"><type pos:start="125:9" pos:end="125:19"><specifier pos:start="125:9" pos:end="125:14">public</specifier> <name pos:start="125:16" pos:end="125:19">void</name></type> <name pos:start="125:21" pos:end="125:53">setModeToAwaitingTakeOffClearance</name><parameter_list pos:start="125:54" pos:end="125:55">()</parameter_list> <throws pos:start="125:57" pos:end="125:82">throws <argument pos:start="125:64" pos:end="125:82"><expr pos:start="125:64" pos:end="125:82"><name pos:start="125:64" pos:end="125:82">FlightZoneException</name></expr></argument></throws> <block pos:start="125:84" pos:end="137:9">{<block_content pos:start="126:17" pos:end="135:17">
		<decl_stmt pos:start="126:17" pos:end="126:65"><decl pos:start="126:17" pos:end="126:64"><type pos:start="126:17" pos:end="126:26"><name pos:start="126:17" pos:end="126:26">FlightMode</name></type> <name pos:start="126:28" pos:end="126:35">oldState</name> <init pos:start="126:37" pos:end="126:64">= <expr pos:start="126:39" pos:end="126:64"><call pos:start="126:39" pos:end="126:64"><name pos:start="126:39" pos:end="126:62"><name pos:start="126:39" pos:end="126:53">uavStateMachine</name><operator pos:start="126:54" pos:end="126:54">.</operator><name pos:start="126:55" pos:end="126:62">getState</name></name><argument_list pos:start="126:63" pos:end="126:64">()</argument_list></call></expr></init></decl>;</decl_stmt>
		<if_stmt pos:start="127:17" pos:end="135:17"><if pos:start="127:17" pos:end="130:17">if <condition pos:start="127:20" pos:end="127:80">(<expr pos:start="127:21" pos:end="127:79"><call pos:start="127:21" pos:end="127:79"><name pos:start="127:21" pos:end="127:43"><name pos:start="127:21" pos:end="127:35">uavStateMachine</name><operator pos:start="127:36" pos:end="127:36">.</operator><name pos:start="127:37" pos:end="127:43">canFire</name></name><argument_list pos:start="127:44" pos:end="127:79">(<argument pos:start="127:45" pos:end="127:78"><expr pos:start="127:45" pos:end="127:78"><name pos:start="127:45" pos:end="127:78"><name pos:start="127:45" pos:end="127:64">FlightModeTransition</name><operator pos:start="127:65" pos:end="127:65">.</operator><name pos:start="127:66" pos:end="127:78">PLAN_ASSIGNED</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="127:82" pos:end="130:17">{<block_content pos:start="128:25" pos:end="129:80">
			<expr_stmt pos:start="128:25" pos:end="128:81"><expr pos:start="128:25" pos:end="128:80"><call pos:start="128:25" pos:end="128:80"><name pos:start="128:25" pos:end="128:44"><name pos:start="128:25" pos:end="128:39">uavStateMachine</name><operator pos:start="128:40" pos:end="128:40">.</operator><name pos:start="128:41" pos:end="128:44">fire</name></name><argument_list pos:start="128:45" pos:end="128:80">(<argument pos:start="128:46" pos:end="128:79"><expr pos:start="128:46" pos:end="128:79"><name pos:start="128:46" pos:end="128:79"><name pos:start="128:46" pos:end="128:65">FlightModeTransition</name><operator pos:start="128:66" pos:end="128:66">.</operator><name pos:start="128:67" pos:end="128:79">PLAN_ASSIGNED</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt pos:start="129:25" pos:end="129:80"><expr pos:start="129:25" pos:end="129:79"><call pos:start="129:25" pos:end="129:79"><name pos:start="129:25" pos:end="129:41">notifyStateChange</name><argument_list pos:start="129:42" pos:end="129:79">(<argument pos:start="129:43" pos:end="129:50"><expr pos:start="129:43" pos:end="129:50"><name pos:start="129:43" pos:end="129:50">oldState</name></expr></argument>, <argument pos:start="129:53" pos:end="129:78"><expr pos:start="129:53" pos:end="129:78"><call pos:start="129:53" pos:end="129:78"><name pos:start="129:53" pos:end="129:76"><name pos:start="129:53" pos:end="129:67">uavStateMachine</name><operator pos:start="129:68" pos:end="129:68">.</operator><name pos:start="129:69" pos:end="129:76">getState</name></name><argument_list pos:start="129:77" pos:end="129:78">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		</block_content>}</block></if> <else pos:start="130:19" pos:end="135:17">else <block pos:start="130:24" pos:end="135:17">{<block_content pos:start="131:25" pos:end="134:90">
			<expr_stmt pos:start="131:25" pos:end="132:84"><expr pos:start="131:25" pos:end="132:83"><call pos:start="131:25" pos:end="132:83"><name pos:start="131:25" pos:end="131:36"><name pos:start="131:25" pos:end="131:30">LOGGER</name><operator pos:start="131:31" pos:end="131:31">.</operator><name pos:start="131:32" pos:end="131:36">error</name></name><argument_list pos:start="131:37" pos:end="132:83">(<argument pos:start="131:38" pos:end="132:82"><expr pos:start="131:38" pos:end="132:82"><literal type="string" pos:start="131:38" pos:end="131:68">"You may not transition from '"</literal> <operator pos:start="131:70" pos:end="131:70">+</operator> <call pos:start="131:72" pos:end="131:97"><name pos:start="131:72" pos:end="131:95"><name pos:start="131:72" pos:end="131:86">uavStateMachine</name><operator pos:start="131:87" pos:end="131:87">.</operator><name pos:start="131:88" pos:end="131:95">getState</name></name><argument_list pos:start="131:96" pos:end="131:97">()</argument_list></call> <operator pos:start="131:99" pos:end="131:99">+</operator> <literal type="string" pos:start="131:101" pos:end="131:118">"' with trigger '"</literal>
					<operator pos:start="132:41" pos:end="132:41">+</operator> <name pos:start="132:43" pos:end="132:76"><name pos:start="132:43" pos:end="132:62">FlightModeTransition</name><operator pos:start="132:63" pos:end="132:63">.</operator><name pos:start="132:64" pos:end="132:76">PLAN_ASSIGNED</name></name> <operator pos:start="132:78" pos:end="132:78">+</operator> <literal type="string" pos:start="132:80" pos:end="132:82">"'"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<throw pos:start="133:25" pos:end="134:90">throw <expr pos:start="133:31" pos:end="134:89"><operator pos:start="133:31" pos:end="133:33">new</operator> <call pos:start="133:35" pos:end="134:89"><name pos:start="133:35" pos:end="133:53">FlightZoneException</name><argument_list pos:start="133:54" pos:end="134:89">(<argument pos:start="133:55" pos:end="134:88"><expr pos:start="133:55" pos:end="134:88"><literal type="string" pos:start="133:55" pos:end="133:82">"You may not transition to "</literal> <operator pos:start="133:84" pos:end="133:84">+</operator> <name pos:start="133:86" pos:end="133:122"><name pos:start="133:86" pos:end="133:95">FlightMode</name><operator pos:start="133:96" pos:end="133:96">.</operator><name pos:start="133:97" pos:end="133:122">AWAITING_TAKEOFF_CLEARANCE</name></name>
					<operator pos:start="134:41" pos:end="134:41">+</operator> <literal type="string" pos:start="134:43" pos:end="134:59">" directly from "</literal> <operator pos:start="134:61" pos:end="134:61">+</operator> <call pos:start="134:63" pos:end="134:88"><name pos:start="134:63" pos:end="134:86"><name pos:start="134:63" pos:end="134:77">uavStateMachine</name><operator pos:start="134:78" pos:end="134:78">.</operator><name pos:start="134:79" pos:end="134:86">getState</name></name><argument_list pos:start="134:87" pos:end="134:88">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</throw>
		</block_content>}</block></else></if_stmt>

	</block_content>}</block></function>

	<comment type="block" format="javadoc" pos:start="139:9" pos:end="144:11">/**
	 * Set flight mode to Taking off
	 * 
	 * @throws FlightZoneException
	 *           if mode change does not follow allowed state transition.
	 */</comment>
	<function pos:start="145:9" pos:end="157:9"><type pos:start="145:9" pos:end="145:19"><specifier pos:start="145:9" pos:end="145:14">public</specifier> <name pos:start="145:16" pos:end="145:19">void</name></type> <name pos:start="145:21" pos:end="145:38">setModeToTakingOff</name><parameter_list pos:start="145:39" pos:end="145:40">()</parameter_list> <throws pos:start="145:42" pos:end="145:67">throws <argument pos:start="145:49" pos:end="145:67"><expr pos:start="145:49" pos:end="145:67"><name pos:start="145:49" pos:end="145:67">FlightZoneException</name></expr></argument></throws> <block pos:start="145:69" pos:end="157:9">{<block_content pos:start="146:17" pos:end="155:17">
		<decl_stmt pos:start="146:17" pos:end="146:65"><decl pos:start="146:17" pos:end="146:64"><type pos:start="146:17" pos:end="146:26"><name pos:start="146:17" pos:end="146:26">FlightMode</name></type> <name pos:start="146:28" pos:end="146:35">oldState</name> <init pos:start="146:37" pos:end="146:64">= <expr pos:start="146:39" pos:end="146:64"><call pos:start="146:39" pos:end="146:64"><name pos:start="146:39" pos:end="146:62"><name pos:start="146:39" pos:end="146:53">uavStateMachine</name><operator pos:start="146:54" pos:end="146:54">.</operator><name pos:start="146:55" pos:end="146:62">getState</name></name><argument_list pos:start="146:63" pos:end="146:64">()</argument_list></call></expr></init></decl>;</decl_stmt>
		<if_stmt pos:start="147:17" pos:end="155:17"><if pos:start="147:17" pos:end="150:17">if <condition pos:start="147:20" pos:end="147:82">(<expr pos:start="147:21" pos:end="147:81"><call pos:start="147:21" pos:end="147:81"><name pos:start="147:21" pos:end="147:43"><name pos:start="147:21" pos:end="147:35">uavStateMachine</name><operator pos:start="147:36" pos:end="147:36">.</operator><name pos:start="147:37" pos:end="147:43">canFire</name></name><argument_list pos:start="147:44" pos:end="147:81">(<argument pos:start="147:45" pos:end="147:80"><expr pos:start="147:45" pos:end="147:80"><name pos:start="147:45" pos:end="147:80"><name pos:start="147:45" pos:end="147:64">FlightModeTransition</name><operator pos:start="147:65" pos:end="147:65">.</operator><name pos:start="147:66" pos:end="147:80">TAKEOFF_GRANTED</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="147:84" pos:end="150:17">{<block_content pos:start="148:25" pos:end="149:80">
			<expr_stmt pos:start="148:25" pos:end="148:83"><expr pos:start="148:25" pos:end="148:82"><call pos:start="148:25" pos:end="148:82"><name pos:start="148:25" pos:end="148:44"><name pos:start="148:25" pos:end="148:39">uavStateMachine</name><operator pos:start="148:40" pos:end="148:40">.</operator><name pos:start="148:41" pos:end="148:44">fire</name></name><argument_list pos:start="148:45" pos:end="148:82">(<argument pos:start="148:46" pos:end="148:81"><expr pos:start="148:46" pos:end="148:81"><name pos:start="148:46" pos:end="148:81"><name pos:start="148:46" pos:end="148:65">FlightModeTransition</name><operator pos:start="148:66" pos:end="148:66">.</operator><name pos:start="148:67" pos:end="148:81">TAKEOFF_GRANTED</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt pos:start="149:25" pos:end="149:80"><expr pos:start="149:25" pos:end="149:79"><call pos:start="149:25" pos:end="149:79"><name pos:start="149:25" pos:end="149:41">notifyStateChange</name><argument_list pos:start="149:42" pos:end="149:79">(<argument pos:start="149:43" pos:end="149:50"><expr pos:start="149:43" pos:end="149:50"><name pos:start="149:43" pos:end="149:50">oldState</name></expr></argument>, <argument pos:start="149:53" pos:end="149:78"><expr pos:start="149:53" pos:end="149:78"><call pos:start="149:53" pos:end="149:78"><name pos:start="149:53" pos:end="149:76"><name pos:start="149:53" pos:end="149:67">uavStateMachine</name><operator pos:start="149:68" pos:end="149:68">.</operator><name pos:start="149:69" pos:end="149:76">getState</name></name><argument_list pos:start="149:77" pos:end="149:78">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		</block_content>}</block></if> <else pos:start="150:19" pos:end="155:17">else <block pos:start="150:24" pos:end="155:17">{<block_content pos:start="151:25" pos:end="154:143">
			<expr_stmt pos:start="151:25" pos:end="152:86"><expr pos:start="151:25" pos:end="152:85"><call pos:start="151:25" pos:end="152:85"><name pos:start="151:25" pos:end="151:36"><name pos:start="151:25" pos:end="151:30">LOGGER</name><operator pos:start="151:31" pos:end="151:31">.</operator><name pos:start="151:32" pos:end="151:36">error</name></name><argument_list pos:start="151:37" pos:end="152:85">(<argument pos:start="151:38" pos:end="152:84"><expr pos:start="151:38" pos:end="152:84"><literal type="string" pos:start="151:38" pos:end="151:68">"You may not transition from '"</literal> <operator pos:start="151:70" pos:end="151:70">+</operator> <call pos:start="151:72" pos:end="151:97"><name pos:start="151:72" pos:end="151:95"><name pos:start="151:72" pos:end="151:86">uavStateMachine</name><operator pos:start="151:87" pos:end="151:87">.</operator><name pos:start="151:88" pos:end="151:95">getState</name></name><argument_list pos:start="151:96" pos:end="151:97">()</argument_list></call> <operator pos:start="151:99" pos:end="151:99">+</operator> <literal type="string" pos:start="151:101" pos:end="151:118">"' with trigger '"</literal>
					<operator pos:start="152:41" pos:end="152:41">+</operator> <name pos:start="152:43" pos:end="152:78"><name pos:start="152:43" pos:end="152:62">FlightModeTransition</name><operator pos:start="152:63" pos:end="152:63">.</operator><name pos:start="152:64" pos:end="152:78">TAKEOFF_GRANTED</name></name> <operator pos:start="152:80" pos:end="152:80">+</operator> <literal type="string" pos:start="152:82" pos:end="152:84">"'"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<throw pos:start="153:25" pos:end="154:143">throw <expr pos:start="153:31" pos:end="154:142"><operator pos:start="153:31" pos:end="153:33">new</operator> <call pos:start="153:35" pos:end="154:142"><name pos:start="153:35" pos:end="153:53">FlightZoneException</name><argument_list pos:start="153:54" pos:end="154:142">(
					<argument pos:start="154:41" pos:end="154:141"><expr pos:start="154:41" pos:end="154:141"><literal type="string" pos:start="154:41" pos:end="154:68">"You may not transition to "</literal> <operator pos:start="154:70" pos:end="154:70">+</operator> <name pos:start="154:72" pos:end="154:92"><name pos:start="154:72" pos:end="154:81">FlightMode</name><operator pos:start="154:82" pos:end="154:82">.</operator><name pos:start="154:83" pos:end="154:92">TAKING_OFF</name></name> <operator pos:start="154:94" pos:end="154:94">+</operator> <literal type="string" pos:start="154:96" pos:end="154:112">" directly from "</literal> <operator pos:start="154:114" pos:end="154:114">+</operator> <call pos:start="154:116" pos:end="154:141"><name pos:start="154:116" pos:end="154:139"><name pos:start="154:116" pos:end="154:130">uavStateMachine</name><operator pos:start="154:131" pos:end="154:131">.</operator><name pos:start="154:132" pos:end="154:139">getState</name></name><argument_list pos:start="154:140" pos:end="154:141">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</throw>
		</block_content>}</block></else></if_stmt>

	</block_content>}</block></function>

	<comment type="block" format="javadoc" pos:start="159:9" pos:end="164:11">/**
	 * Set flight mode to Flying
	 * 
	 * @throws FlightZoneException
	 *           if mode change does not follow allowed state transition.
	 */</comment>
	<function pos:start="165:9" pos:end="180:9"><type pos:start="165:9" pos:end="165:19"><specifier pos:start="165:9" pos:end="165:14">public</specifier> <name pos:start="165:16" pos:end="165:19">void</name></type> <name pos:start="165:21" pos:end="165:35">setModeToFlying</name><parameter_list pos:start="165:36" pos:end="165:37">()</parameter_list> <throws pos:start="165:39" pos:end="165:64">throws <argument pos:start="165:46" pos:end="165:64"><expr pos:start="165:46" pos:end="165:64"><name pos:start="165:46" pos:end="165:64">FlightZoneException</name></expr></argument></throws> <block pos:start="165:66" pos:end="180:9">{<block_content pos:start="166:17" pos:end="178:17">
		<decl_stmt pos:start="166:17" pos:end="166:65"><decl pos:start="166:17" pos:end="166:64"><type pos:start="166:17" pos:end="166:26"><name pos:start="166:17" pos:end="166:26">FlightMode</name></type> <name pos:start="166:28" pos:end="166:35">oldState</name> <init pos:start="166:37" pos:end="166:64">= <expr pos:start="166:39" pos:end="166:64"><call pos:start="166:39" pos:end="166:64"><name pos:start="166:39" pos:end="166:62"><name pos:start="166:39" pos:end="166:53">uavStateMachine</name><operator pos:start="166:54" pos:end="166:54">.</operator><name pos:start="166:55" pos:end="166:62">getState</name></name><argument_list pos:start="166:63" pos:end="166:64">()</argument_list></call></expr></init></decl>;</decl_stmt>
		<if_stmt pos:start="167:17" pos:end="178:17"><if pos:start="167:17" pos:end="170:17">if <condition pos:start="167:20" pos:end="167:90">(<expr pos:start="167:21" pos:end="167:89"><call pos:start="167:21" pos:end="167:89"><name pos:start="167:21" pos:end="167:43"><name pos:start="167:21" pos:end="167:35">uavStateMachine</name><operator pos:start="167:36" pos:end="167:36">.</operator><name pos:start="167:37" pos:end="167:43">canFire</name></name><argument_list pos:start="167:44" pos:end="167:89">(<argument pos:start="167:45" pos:end="167:88"><expr pos:start="167:45" pos:end="167:88"><name pos:start="167:45" pos:end="167:88"><name pos:start="167:45" pos:end="167:64">FlightModeTransition</name><operator pos:start="167:65" pos:end="167:65">.</operator><name pos:start="167:66" pos:end="167:88">TARGET_ALTITUED_REACHED</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="167:92" pos:end="170:17">{<block_content pos:start="168:25" pos:end="169:80">
			<expr_stmt pos:start="168:25" pos:end="168:91"><expr pos:start="168:25" pos:end="168:90"><call pos:start="168:25" pos:end="168:90"><name pos:start="168:25" pos:end="168:44"><name pos:start="168:25" pos:end="168:39">uavStateMachine</name><operator pos:start="168:40" pos:end="168:40">.</operator><name pos:start="168:41" pos:end="168:44">fire</name></name><argument_list pos:start="168:45" pos:end="168:90">(<argument pos:start="168:46" pos:end="168:89"><expr pos:start="168:46" pos:end="168:89"><name pos:start="168:46" pos:end="168:89"><name pos:start="168:46" pos:end="168:65">FlightModeTransition</name><operator pos:start="168:66" pos:end="168:66">.</operator><name pos:start="168:67" pos:end="168:89">TARGET_ALTITUED_REACHED</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt pos:start="169:25" pos:end="169:80"><expr pos:start="169:25" pos:end="169:79"><call pos:start="169:25" pos:end="169:79"><name pos:start="169:25" pos:end="169:41">notifyStateChange</name><argument_list pos:start="169:42" pos:end="169:79">(<argument pos:start="169:43" pos:end="169:50"><expr pos:start="169:43" pos:end="169:50"><name pos:start="169:43" pos:end="169:50">oldState</name></expr></argument>, <argument pos:start="169:53" pos:end="169:78"><expr pos:start="169:53" pos:end="169:78"><call pos:start="169:53" pos:end="169:78"><name pos:start="169:53" pos:end="169:76"><name pos:start="169:53" pos:end="169:67">uavStateMachine</name><operator pos:start="169:68" pos:end="169:68">.</operator><name pos:start="169:69" pos:end="169:76">getState</name></name><argument_list pos:start="169:77" pos:end="169:78">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		</block_content>}</block></if> <if type="elseif" pos:start="170:19" pos:end="173:17">else if <condition pos:start="170:27" pos:end="170:87">(<expr pos:start="170:28" pos:end="170:86"><call pos:start="170:28" pos:end="170:86"><name pos:start="170:28" pos:end="170:50"><name pos:start="170:28" pos:end="170:42">uavStateMachine</name><operator pos:start="170:43" pos:end="170:43">.</operator><name pos:start="170:44" pos:end="170:50">canFire</name></name><argument_list pos:start="170:51" pos:end="170:86">(<argument pos:start="170:52" pos:end="170:85"><expr pos:start="170:52" pos:end="170:85"><name pos:start="170:52" pos:end="170:85"><name pos:start="170:52" pos:end="170:71">FlightModeTransition</name><operator pos:start="170:72" pos:end="170:72">.</operator><name pos:start="170:73" pos:end="170:85">PLAN_ASSIGNED</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="170:89" pos:end="173:17">{<block_content pos:start="171:25" pos:end="172:80">
			<expr_stmt pos:start="171:25" pos:end="171:81"><expr pos:start="171:25" pos:end="171:80"><call pos:start="171:25" pos:end="171:80"><name pos:start="171:25" pos:end="171:44"><name pos:start="171:25" pos:end="171:39">uavStateMachine</name><operator pos:start="171:40" pos:end="171:40">.</operator><name pos:start="171:41" pos:end="171:44">fire</name></name><argument_list pos:start="171:45" pos:end="171:80">(<argument pos:start="171:46" pos:end="171:79"><expr pos:start="171:46" pos:end="171:79"><name pos:start="171:46" pos:end="171:79"><name pos:start="171:46" pos:end="171:65">FlightModeTransition</name><operator pos:start="171:66" pos:end="171:66">.</operator><name pos:start="171:67" pos:end="171:79">PLAN_ASSIGNED</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt pos:start="172:25" pos:end="172:80"><expr pos:start="172:25" pos:end="172:79"><call pos:start="172:25" pos:end="172:79"><name pos:start="172:25" pos:end="172:41">notifyStateChange</name><argument_list pos:start="172:42" pos:end="172:79">(<argument pos:start="172:43" pos:end="172:50"><expr pos:start="172:43" pos:end="172:50"><name pos:start="172:43" pos:end="172:50">oldState</name></expr></argument>, <argument pos:start="172:53" pos:end="172:78"><expr pos:start="172:53" pos:end="172:78"><call pos:start="172:53" pos:end="172:78"><name pos:start="172:53" pos:end="172:76"><name pos:start="172:53" pos:end="172:67">uavStateMachine</name><operator pos:start="172:68" pos:end="172:68">.</operator><name pos:start="172:69" pos:end="172:76">getState</name></name><argument_list pos:start="172:77" pos:end="172:78">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		</block_content>}</block></if> <else pos:start="173:19" pos:end="178:17">else <block pos:start="173:24" pos:end="178:17">{<block_content pos:start="174:25" pos:end="177:139">
			<expr_stmt pos:start="174:25" pos:end="175:94"><expr pos:start="174:25" pos:end="175:93"><call pos:start="174:25" pos:end="175:93"><name pos:start="174:25" pos:end="174:36"><name pos:start="174:25" pos:end="174:30">LOGGER</name><operator pos:start="174:31" pos:end="174:31">.</operator><name pos:start="174:32" pos:end="174:36">error</name></name><argument_list pos:start="174:37" pos:end="175:93">(<argument pos:start="174:38" pos:end="175:92"><expr pos:start="174:38" pos:end="175:92"><literal type="string" pos:start="174:38" pos:end="174:68">"You may not transition from '"</literal> <operator pos:start="174:70" pos:end="174:70">+</operator> <call pos:start="174:72" pos:end="174:97"><name pos:start="174:72" pos:end="174:95"><name pos:start="174:72" pos:end="174:86">uavStateMachine</name><operator pos:start="174:87" pos:end="174:87">.</operator><name pos:start="174:88" pos:end="174:95">getState</name></name><argument_list pos:start="174:96" pos:end="174:97">()</argument_list></call> <operator pos:start="174:99" pos:end="174:99">+</operator> <literal type="string" pos:start="174:101" pos:end="174:118">"' with trigger '"</literal>
					<operator pos:start="175:41" pos:end="175:41">+</operator> <name pos:start="175:43" pos:end="175:86"><name pos:start="175:43" pos:end="175:62">FlightModeTransition</name><operator pos:start="175:63" pos:end="175:63">.</operator><name pos:start="175:64" pos:end="175:86">TARGET_ALTITUED_REACHED</name></name> <operator pos:start="175:88" pos:end="175:88">+</operator> <literal type="string" pos:start="175:90" pos:end="175:92">"'"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<throw pos:start="176:25" pos:end="177:139">throw <expr pos:start="176:31" pos:end="177:138"><operator pos:start="176:31" pos:end="176:33">new</operator> <call pos:start="176:35" pos:end="177:138"><name pos:start="176:35" pos:end="176:53">FlightZoneException</name><argument_list pos:start="176:54" pos:end="177:138">(
					<argument pos:start="177:41" pos:end="177:137"><expr pos:start="177:41" pos:end="177:137"><literal type="string" pos:start="177:41" pos:end="177:68">"You may not transition to "</literal> <operator pos:start="177:70" pos:end="177:70">+</operator> <name pos:start="177:72" pos:end="177:88"><name pos:start="177:72" pos:end="177:81">FlightMode</name><operator pos:start="177:82" pos:end="177:82">.</operator><name pos:start="177:83" pos:end="177:88">FLYING</name></name> <operator pos:start="177:90" pos:end="177:90">+</operator> <literal type="string" pos:start="177:92" pos:end="177:108">" directly from "</literal> <operator pos:start="177:110" pos:end="177:110">+</operator> <call pos:start="177:112" pos:end="177:137"><name pos:start="177:112" pos:end="177:135"><name pos:start="177:112" pos:end="177:126">uavStateMachine</name><operator pos:start="177:127" pos:end="177:127">.</operator><name pos:start="177:128" pos:end="177:135">getState</name></name><argument_list pos:start="177:136" pos:end="177:137">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</throw>
		</block_content>}</block></else></if_stmt>

	</block_content>}</block></function>

	<comment type="block" format="javadoc" pos:start="182:9" pos:end="187:11">/**
	 * Set flight mode to Landing
	 * 
	 * @throws FlightZoneException
	 *           if mode change does not follow allowed state transition.
	 */</comment>
	<function pos:start="188:9" pos:end="200:9"><type pos:start="188:9" pos:end="188:19"><specifier pos:start="188:9" pos:end="188:14">public</specifier> <name pos:start="188:16" pos:end="188:19">void</name></type> <name pos:start="188:21" pos:end="188:36">setModeToLanding</name><parameter_list pos:start="188:37" pos:end="188:38">()</parameter_list> <throws pos:start="188:40" pos:end="188:65">throws <argument pos:start="188:47" pos:end="188:65"><expr pos:start="188:47" pos:end="188:65"><name pos:start="188:47" pos:end="188:65">FlightZoneException</name></expr></argument></throws> <block pos:start="188:67" pos:end="200:9">{<block_content pos:start="189:17" pos:end="198:17">
		<decl_stmt pos:start="189:17" pos:end="189:65"><decl pos:start="189:17" pos:end="189:64"><type pos:start="189:17" pos:end="189:26"><name pos:start="189:17" pos:end="189:26">FlightMode</name></type> <name pos:start="189:28" pos:end="189:35">oldState</name> <init pos:start="189:37" pos:end="189:64">= <expr pos:start="189:39" pos:end="189:64"><call pos:start="189:39" pos:end="189:64"><name pos:start="189:39" pos:end="189:62"><name pos:start="189:39" pos:end="189:53">uavStateMachine</name><operator pos:start="189:54" pos:end="189:54">.</operator><name pos:start="189:55" pos:end="189:62">getState</name></name><argument_list pos:start="189:63" pos:end="189:64">()</argument_list></call></expr></init></decl>;</decl_stmt>
		<if_stmt pos:start="190:17" pos:end="198:17"><if pos:start="190:17" pos:end="193:17">if <condition pos:start="190:20" pos:end="190:82">(<expr pos:start="190:21" pos:end="190:81"><call pos:start="190:21" pos:end="190:81"><name pos:start="190:21" pos:end="190:43"><name pos:start="190:21" pos:end="190:35">uavStateMachine</name><operator pos:start="190:36" pos:end="190:36">.</operator><name pos:start="190:37" pos:end="190:43">canFire</name></name><argument_list pos:start="190:44" pos:end="190:81">(<argument pos:start="190:45" pos:end="190:80"><expr pos:start="190:45" pos:end="190:80"><name pos:start="190:45" pos:end="190:80"><name pos:start="190:45" pos:end="190:64">FlightModeTransition</name><operator pos:start="190:65" pos:end="190:65">.</operator><name pos:start="190:66" pos:end="190:80">LANDING_GRANTED</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="190:84" pos:end="193:17">{<block_content pos:start="191:25" pos:end="192:80">
			<expr_stmt pos:start="191:25" pos:end="191:83"><expr pos:start="191:25" pos:end="191:82"><call pos:start="191:25" pos:end="191:82"><name pos:start="191:25" pos:end="191:44"><name pos:start="191:25" pos:end="191:39">uavStateMachine</name><operator pos:start="191:40" pos:end="191:40">.</operator><name pos:start="191:41" pos:end="191:44">fire</name></name><argument_list pos:start="191:45" pos:end="191:82">(<argument pos:start="191:46" pos:end="191:81"><expr pos:start="191:46" pos:end="191:81"><name pos:start="191:46" pos:end="191:81"><name pos:start="191:46" pos:end="191:65">FlightModeTransition</name><operator pos:start="191:66" pos:end="191:66">.</operator><name pos:start="191:67" pos:end="191:81">LANDING_GRANTED</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt pos:start="192:25" pos:end="192:80"><expr pos:start="192:25" pos:end="192:79"><call pos:start="192:25" pos:end="192:79"><name pos:start="192:25" pos:end="192:41">notifyStateChange</name><argument_list pos:start="192:42" pos:end="192:79">(<argument pos:start="192:43" pos:end="192:50"><expr pos:start="192:43" pos:end="192:50"><name pos:start="192:43" pos:end="192:50">oldState</name></expr></argument>, <argument pos:start="192:53" pos:end="192:78"><expr pos:start="192:53" pos:end="192:78"><call pos:start="192:53" pos:end="192:78"><name pos:start="192:53" pos:end="192:76"><name pos:start="192:53" pos:end="192:67">uavStateMachine</name><operator pos:start="192:68" pos:end="192:68">.</operator><name pos:start="192:69" pos:end="192:76">getState</name></name><argument_list pos:start="192:77" pos:end="192:78">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		</block_content>}</block></if> <else pos:start="193:19" pos:end="198:17">else <block pos:start="193:24" pos:end="198:17">{<block_content pos:start="194:25" pos:end="197:140">
			<expr_stmt pos:start="194:25" pos:end="195:86"><expr pos:start="194:25" pos:end="195:85"><call pos:start="194:25" pos:end="195:85"><name pos:start="194:25" pos:end="194:36"><name pos:start="194:25" pos:end="194:30">LOGGER</name><operator pos:start="194:31" pos:end="194:31">.</operator><name pos:start="194:32" pos:end="194:36">error</name></name><argument_list pos:start="194:37" pos:end="195:85">(<argument pos:start="194:38" pos:end="195:84"><expr pos:start="194:38" pos:end="195:84"><literal type="string" pos:start="194:38" pos:end="194:68">"You may not transition from '"</literal> <operator pos:start="194:70" pos:end="194:70">+</operator> <call pos:start="194:72" pos:end="194:97"><name pos:start="194:72" pos:end="194:95"><name pos:start="194:72" pos:end="194:86">uavStateMachine</name><operator pos:start="194:87" pos:end="194:87">.</operator><name pos:start="194:88" pos:end="194:95">getState</name></name><argument_list pos:start="194:96" pos:end="194:97">()</argument_list></call> <operator pos:start="194:99" pos:end="194:99">+</operator> <literal type="string" pos:start="194:101" pos:end="194:118">"' with trigger '"</literal>
					<operator pos:start="195:41" pos:end="195:41">+</operator> <name pos:start="195:43" pos:end="195:78"><name pos:start="195:43" pos:end="195:62">FlightModeTransition</name><operator pos:start="195:63" pos:end="195:63">.</operator><name pos:start="195:64" pos:end="195:78">LANDING_GRANTED</name></name> <operator pos:start="195:80" pos:end="195:80">+</operator> <literal type="string" pos:start="195:82" pos:end="195:84">"'"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<throw pos:start="196:25" pos:end="197:140">throw <expr pos:start="196:31" pos:end="197:139"><operator pos:start="196:31" pos:end="196:33">new</operator> <call pos:start="196:35" pos:end="197:139"><name pos:start="196:35" pos:end="196:53">FlightZoneException</name><argument_list pos:start="196:54" pos:end="197:139">(
					<argument pos:start="197:41" pos:end="197:138"><expr pos:start="197:41" pos:end="197:138"><literal type="string" pos:start="197:41" pos:end="197:68">"You may not transition to "</literal> <operator pos:start="197:70" pos:end="197:70">+</operator> <name pos:start="197:72" pos:end="197:89"><name pos:start="197:72" pos:end="197:81">FlightMode</name><operator pos:start="197:82" pos:end="197:82">.</operator><name pos:start="197:83" pos:end="197:89">LANDING</name></name> <operator pos:start="197:91" pos:end="197:91">+</operator> <literal type="string" pos:start="197:93" pos:end="197:109">" directly from "</literal> <operator pos:start="197:111" pos:end="197:111">+</operator> <call pos:start="197:113" pos:end="197:138"><name pos:start="197:113" pos:end="197:136"><name pos:start="197:113" pos:end="197:127">uavStateMachine</name><operator pos:start="197:128" pos:end="197:128">.</operator><name pos:start="197:129" pos:end="197:136">getState</name></name><argument_list pos:start="197:137" pos:end="197:138">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</throw>
		</block_content>}</block></else></if_stmt>

	</block_content>}</block></function>

	<comment type="block" format="javadoc" pos:start="202:9" pos:end="205:11">/**
	 * 
	 * @return true if drone is currently on the ground, false otherwise
	 */</comment>
	<function pos:start="206:9" pos:end="209:9"><type pos:start="206:9" pos:end="206:22"><specifier pos:start="206:9" pos:end="206:14">public</specifier> <name pos:start="206:16" pos:end="206:22">boolean</name></type> <name pos:start="206:24" pos:end="206:33">isOnGround</name><parameter_list pos:start="206:34" pos:end="206:35">()</parameter_list> <block pos:start="206:37" pos:end="209:9">{<block_content pos:start="207:17" pos:end="207:74">
		<return pos:start="207:17" pos:end="207:74">return <expr pos:start="207:24" pos:end="207:73"><call pos:start="207:24" pos:end="207:49"><name pos:start="207:24" pos:end="207:47"><name pos:start="207:24" pos:end="207:38">uavStateMachine</name><operator pos:start="207:39" pos:end="207:39">.</operator><name pos:start="207:40" pos:end="207:47">getState</name></name><argument_list pos:start="207:48" pos:end="207:49">()</argument_list></call> <operator pos:start="207:51" pos:end="207:52">==</operator> <name pos:start="207:54" pos:end="207:73"><name pos:start="207:54" pos:end="207:63">FlightMode</name><operator pos:start="207:64" pos:end="207:64">.</operator><name pos:start="207:65" pos:end="207:73">ON_GROUND</name></name></expr>;</return>

	</block_content>}</block></function>

	<comment type="block" format="javadoc" pos:start="211:9" pos:end="214:11">/**
	 * 
	 * @return true if drone is currently in AwaitingTakeOffClearance mode, false otherwise
	 */</comment>
	<function pos:start="215:9" pos:end="218:9"><type pos:start="215:9" pos:end="215:22"><specifier pos:start="215:9" pos:end="215:14">public</specifier> <name pos:start="215:16" pos:end="215:22">boolean</name></type> <name pos:start="215:24" pos:end="215:49">isAwaitingTakeoffClearance</name><parameter_list pos:start="215:50" pos:end="215:51">()</parameter_list> <block pos:start="215:53" pos:end="218:9">{<block_content pos:start="216:17" pos:end="216:91">
		<return pos:start="216:17" pos:end="216:91">return <expr pos:start="216:24" pos:end="216:90"><call pos:start="216:24" pos:end="216:49"><name pos:start="216:24" pos:end="216:47"><name pos:start="216:24" pos:end="216:38">uavStateMachine</name><operator pos:start="216:39" pos:end="216:39">.</operator><name pos:start="216:40" pos:end="216:47">getState</name></name><argument_list pos:start="216:48" pos:end="216:49">()</argument_list></call> <operator pos:start="216:51" pos:end="216:52">==</operator> <name pos:start="216:54" pos:end="216:90"><name pos:start="216:54" pos:end="216:63">FlightMode</name><operator pos:start="216:64" pos:end="216:64">.</operator><name pos:start="216:65" pos:end="216:90">AWAITING_TAKEOFF_CLEARANCE</name></name></expr>;</return>

	</block_content>}</block></function>

	<comment type="block" format="javadoc" pos:start="220:9" pos:end="223:11">/**
	 * 
	 * @return true if drone is currently taking off, false otherwise
	 */</comment>
	<function pos:start="224:9" pos:end="226:9"><type pos:start="224:9" pos:end="224:22"><specifier pos:start="224:9" pos:end="224:14">public</specifier> <name pos:start="224:16" pos:end="224:22">boolean</name></type> <name pos:start="224:24" pos:end="224:34">isTakingOff</name><parameter_list pos:start="224:35" pos:end="224:36">()</parameter_list> <block pos:start="224:38" pos:end="226:9">{<block_content pos:start="225:17" pos:end="225:75">
		<return pos:start="225:17" pos:end="225:75">return <expr pos:start="225:24" pos:end="225:74"><call pos:start="225:24" pos:end="225:49"><name pos:start="225:24" pos:end="225:47"><name pos:start="225:24" pos:end="225:38">uavStateMachine</name><operator pos:start="225:39" pos:end="225:39">.</operator><name pos:start="225:40" pos:end="225:47">getState</name></name><argument_list pos:start="225:48" pos:end="225:49">()</argument_list></call> <operator pos:start="225:51" pos:end="225:52">==</operator> <name pos:start="225:54" pos:end="225:74"><name pos:start="225:54" pos:end="225:63">FlightMode</name><operator pos:start="225:64" pos:end="225:64">.</operator><name pos:start="225:65" pos:end="225:74">TAKING_OFF</name></name></expr>;</return>
	</block_content>}</block></function>

	<comment type="block" format="javadoc" pos:start="228:9" pos:end="231:11">/**
	 * 
	 * @return true if drone is currently flying, false otherwise
	 */</comment>
	<function pos:start="232:9" pos:end="235:9"><type pos:start="232:9" pos:end="232:22"><specifier pos:start="232:9" pos:end="232:14">public</specifier> <name pos:start="232:16" pos:end="232:22">boolean</name></type> <name pos:start="232:24" pos:end="232:31">isFlying</name><parameter_list pos:start="232:32" pos:end="232:33">()</parameter_list> <block pos:start="232:35" pos:end="235:9">{<block_content pos:start="233:17" pos:end="233:71">
		<return pos:start="233:17" pos:end="233:71">return <expr pos:start="233:24" pos:end="233:70"><call pos:start="233:24" pos:end="233:49"><name pos:start="233:24" pos:end="233:47"><name pos:start="233:24" pos:end="233:38">uavStateMachine</name><operator pos:start="233:39" pos:end="233:39">.</operator><name pos:start="233:40" pos:end="233:47">getState</name></name><argument_list pos:start="233:48" pos:end="233:49">()</argument_list></call> <operator pos:start="233:51" pos:end="233:52">==</operator> <name pos:start="233:54" pos:end="233:70"><name pos:start="233:54" pos:end="233:63">FlightMode</name><operator pos:start="233:64" pos:end="233:64">.</operator><name pos:start="233:65" pos:end="233:70">FLYING</name></name></expr>;</return>

	</block_content>}</block></function>

	<comment type="block" format="javadoc" pos:start="237:9" pos:end="240:11">/**
	 * 
	 * @return true if drone is currently landing, false otherwise
	 */</comment>
	<function pos:start="241:9" pos:end="244:9"><type pos:start="241:9" pos:end="241:22"><specifier pos:start="241:9" pos:end="241:14">public</specifier> <name pos:start="241:16" pos:end="241:22">boolean</name></type> <name pos:start="241:24" pos:end="241:32">isLanding</name><parameter_list pos:start="241:33" pos:end="241:34">()</parameter_list> <block pos:start="241:36" pos:end="244:9">{<block_content pos:start="242:17" pos:end="242:72">
		<return pos:start="242:17" pos:end="242:72">return <expr pos:start="242:24" pos:end="242:71"><call pos:start="242:24" pos:end="242:49"><name pos:start="242:24" pos:end="242:47"><name pos:start="242:24" pos:end="242:38">uavStateMachine</name><operator pos:start="242:39" pos:end="242:39">.</operator><name pos:start="242:40" pos:end="242:47">getState</name></name><argument_list pos:start="242:48" pos:end="242:49">()</argument_list></call> <operator pos:start="242:51" pos:end="242:52">==</operator> <name pos:start="242:54" pos:end="242:71"><name pos:start="242:54" pos:end="242:63">FlightMode</name><operator pos:start="242:64" pos:end="242:64">.</operator><name pos:start="242:65" pos:end="242:71">LANDING</name></name></expr>;</return>

	</block_content>}</block></function>

	<comment type="block" format="javadoc" pos:start="246:9" pos:end="249:11">/**
	 * 
	 * @return current status
	 */</comment>
	<function pos:start="250:9" pos:end="253:9"><type pos:start="250:9" pos:end="250:21"><specifier pos:start="250:9" pos:end="250:14">public</specifier> <name pos:start="250:16" pos:end="250:21">String</name></type> <name pos:start="250:23" pos:end="250:31">getStatus</name><parameter_list pos:start="250:32" pos:end="250:33">()</parameter_list> <block pos:start="250:35" pos:end="253:9">{<block_content pos:start="251:17" pos:end="251:61">
		<return pos:start="251:17" pos:end="251:61">return <expr pos:start="251:24" pos:end="251:60"><call pos:start="251:24" pos:end="251:49"><name pos:start="251:24" pos:end="251:47"><name pos:start="251:24" pos:end="251:38">uavStateMachine</name><operator pos:start="251:39" pos:end="251:39">.</operator><name pos:start="251:40" pos:end="251:47">getState</name></name><argument_list pos:start="251:48" pos:end="251:49">()</argument_list></call><operator pos:start="251:50" pos:end="251:50">.</operator><call pos:start="251:51" pos:end="251:60"><name pos:start="251:51" pos:end="251:58">toString</name><argument_list pos:start="251:59" pos:end="251:60">()</argument_list></call></expr>;</return>
		<comment type="line" pos:start="252:17" pos:end="252:55">// return currentFlightMode.toString();</comment>
	</block_content>}</block></function>

	<function pos:start="255:9" pos:end="261:9"><type pos:start="255:9" pos:end="255:33"><specifier pos:start="255:9" pos:end="255:15">private</specifier> <specifier pos:start="255:17" pos:end="255:28">synchronized</specifier> <name pos:start="255:30" pos:end="255:33">void</name></type> <name pos:start="255:35" pos:end="255:51">notifyStateChange</name><parameter_list pos:start="255:52" pos:end="255:93">(<parameter pos:start="255:53" pos:end="255:71"><decl pos:start="255:53" pos:end="255:71"><type pos:start="255:53" pos:end="255:71"><name pos:start="255:53" pos:end="255:62">FlightMode</name></type> <name pos:start="255:64" pos:end="255:71">oldState</name></decl></parameter>, <parameter pos:start="255:74" pos:end="255:92"><decl pos:start="255:74" pos:end="255:92"><type pos:start="255:74" pos:end="255:92"><name pos:start="255:74" pos:end="255:83">FlightMode</name></type> <name pos:start="255:85" pos:end="255:92">newState</name></decl></parameter>)</parameter_list> <block pos:start="255:95" pos:end="261:9">{<block_content pos:start="256:17" pos:end="260:17">
		<expr_stmt pos:start="256:17" pos:end="256:91"><expr pos:start="256:17" pos:end="256:90"><call pos:start="256:17" pos:end="256:90"><name pos:start="256:17" pos:end="256:27"><name pos:start="256:17" pos:end="256:22">LOGGER</name><operator pos:start="256:23" pos:end="256:23">.</operator><name pos:start="256:24" pos:end="256:27">info</name></name><argument_list pos:start="256:28" pos:end="256:90">(<argument pos:start="256:29" pos:end="256:89"><expr pos:start="256:29" pos:end="256:89"><literal type="string" pos:start="256:29" pos:end="256:37">"Drone '"</literal> <operator pos:start="256:39" pos:end="256:39">+</operator> <name pos:start="256:41" pos:end="256:45">uavid</name> <operator pos:start="256:47" pos:end="256:47">+</operator> <literal type="string" pos:start="256:49" pos:end="256:60">"' set to: "</literal> <operator pos:start="256:62" pos:end="256:62">+</operator> <call pos:start="256:64" pos:end="256:89"><name pos:start="256:64" pos:end="256:87"><name pos:start="256:64" pos:end="256:78">uavStateMachine</name><operator pos:start="256:79" pos:end="256:79">.</operator><name pos:start="256:80" pos:end="256:87">getState</name></name><argument_list pos:start="256:88" pos:end="256:89">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt pos:start="257:17" pos:end="257:118"><expr pos:start="257:17" pos:end="257:117"><call pos:start="257:17" pos:end="257:56"><name pos:start="257:17" pos:end="257:54"><name pos:start="257:17" pos:end="257:42">DronologyMonitoringManager</name><operator pos:start="257:43" pos:end="257:43">.</operator><name pos:start="257:44" pos:end="257:54">getInstance</name></name><argument_list pos:start="257:55" pos:end="257:56">()</argument_list></call><operator pos:start="257:57" pos:end="257:57">.</operator><call pos:start="257:58" pos:end="257:117"><name pos:start="257:58" pos:end="257:64">publish</name><argument_list pos:start="257:65" pos:end="257:117">(<argument pos:start="257:66" pos:end="257:116"><expr pos:start="257:66" pos:end="257:116"><call pos:start="257:66" pos:end="257:116"><name pos:start="257:66" pos:end="257:89"><name pos:start="257:66" pos:end="257:82">MessageMarshaller</name><operator pos:start="257:83" pos:end="257:83">.</operator><name pos:start="257:84" pos:end="257:89">create</name></name><argument_list pos:start="257:90" pos:end="257:116">(<argument pos:start="257:91" pos:end="257:95"><expr pos:start="257:91" pos:end="257:95"><name pos:start="257:91" pos:end="257:95">uavid</name></expr></argument>, <argument pos:start="257:98" pos:end="257:105"><expr pos:start="257:98" pos:end="257:105"><name pos:start="257:98" pos:end="257:105">oldState</name></expr></argument>, <argument pos:start="257:108" pos:end="257:115"><expr pos:start="257:108" pos:end="257:115"><name pos:start="257:108" pos:end="257:115">newState</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<for pos:start="258:17" pos:end="260:17">for <control pos:start="258:21" pos:end="258:75">(<init pos:start="258:22" pos:end="258:74"><decl pos:start="258:22" pos:end="258:74"><type pos:start="258:22" pos:end="258:53"><name pos:start="258:22" pos:end="258:53">IManagedDroneStateChangeListener</name></type> <name pos:start="258:55" pos:end="258:62">listener</name> <range pos:start="258:64" pos:end="258:74">: <expr pos:start="258:66" pos:end="258:74"><name pos:start="258:66" pos:end="258:74">listeners</name></expr></range></decl></init>)</control> <block pos:start="258:77" pos:end="260:17">{<block_content pos:start="259:25" pos:end="259:53">
			<expr_stmt pos:start="259:25" pos:end="259:53"><expr pos:start="259:25" pos:end="259:52"><call pos:start="259:25" pos:end="259:52"><name pos:start="259:25" pos:end="259:50"><name pos:start="259:25" pos:end="259:32">listener</name><operator pos:start="259:33" pos:end="259:33">.</operator><name pos:start="259:34" pos:end="259:50">notifyStateChange</name></name><argument_list pos:start="259:51" pos:end="259:52">()</argument_list></call></expr>;</expr_stmt>
		</block_content>}</block></for>
	</block_content>}</block></function>

	<function pos:start="263:9" pos:end="265:9"><type pos:start="263:9" pos:end="263:22"><specifier pos:start="263:9" pos:end="263:14">public</specifier> <name pos:start="263:16" pos:end="263:22">boolean</name></type> <name pos:start="263:24" pos:end="263:30">isInAir</name><parameter_list pos:start="263:31" pos:end="263:32">()</parameter_list> <block pos:start="263:34" pos:end="265:9">{<block_content pos:start="264:17" pos:end="264:71">
		<return pos:start="264:17" pos:end="264:71">return <expr pos:start="264:24" pos:end="264:70"><call pos:start="264:24" pos:end="264:49"><name pos:start="264:24" pos:end="264:47"><name pos:start="264:24" pos:end="264:38">uavStateMachine</name><operator pos:start="264:39" pos:end="264:39">.</operator><name pos:start="264:40" pos:end="264:47">getState</name></name><argument_list pos:start="264:48" pos:end="264:49">()</argument_list></call> <operator pos:start="264:51" pos:end="264:52">==</operator> <name pos:start="264:54" pos:end="264:70"><name pos:start="264:54" pos:end="264:63">FlightMode</name><operator pos:start="264:64" pos:end="264:64">.</operator><name pos:start="264:65" pos:end="264:70">IN_AIR</name></name></expr>;</return>
	</block_content>}</block></function>

	<function pos:start="267:9" pos:end="278:9"><type pos:start="267:9" pos:end="267:19"><specifier pos:start="267:9" pos:end="267:14">public</specifier> <name pos:start="267:16" pos:end="267:19">void</name></type> <name pos:start="267:21" pos:end="267:34">setModeToInAir</name><parameter_list pos:start="267:35" pos:end="267:36">()</parameter_list> <throws pos:start="267:38" pos:end="267:63">throws <argument pos:start="267:45" pos:end="267:63"><expr pos:start="267:45" pos:end="267:63"><name pos:start="267:45" pos:end="267:63">FlightZoneException</name></expr></argument></throws> <block pos:start="267:65" pos:end="278:9">{<block_content pos:start="268:17" pos:end="277:17">
		<decl_stmt pos:start="268:17" pos:end="268:65"><decl pos:start="268:17" pos:end="268:64"><type pos:start="268:17" pos:end="268:26"><name pos:start="268:17" pos:end="268:26">FlightMode</name></type> <name pos:start="268:28" pos:end="268:35">oldState</name> <init pos:start="268:37" pos:end="268:64">= <expr pos:start="268:39" pos:end="268:64"><call pos:start="268:39" pos:end="268:64"><name pos:start="268:39" pos:end="268:62"><name pos:start="268:39" pos:end="268:53">uavStateMachine</name><operator pos:start="268:54" pos:end="268:54">.</operator><name pos:start="268:55" pos:end="268:62">getState</name></name><argument_list pos:start="268:63" pos:end="268:64">()</argument_list></call></expr></init></decl>;</decl_stmt>
		<if_stmt pos:start="269:17" pos:end="277:17"><if pos:start="269:17" pos:end="272:17">if <condition pos:start="269:20" pos:end="269:80">(<expr pos:start="269:21" pos:end="269:79"><call pos:start="269:21" pos:end="269:79"><name pos:start="269:21" pos:end="269:43"><name pos:start="269:21" pos:end="269:35">uavStateMachine</name><operator pos:start="269:36" pos:end="269:36">.</operator><name pos:start="269:37" pos:end="269:43">canFire</name></name><argument_list pos:start="269:44" pos:end="269:79">(<argument pos:start="269:45" pos:end="269:78"><expr pos:start="269:45" pos:end="269:78"><name pos:start="269:45" pos:end="269:78"><name pos:start="269:45" pos:end="269:64">FlightModeTransition</name><operator pos:start="269:65" pos:end="269:65">.</operator><name pos:start="269:66" pos:end="269:78">PLAN_COMPLETE</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="269:82" pos:end="272:17">{<block_content pos:start="270:25" pos:end="271:80">
			<expr_stmt pos:start="270:25" pos:end="270:81"><expr pos:start="270:25" pos:end="270:80"><call pos:start="270:25" pos:end="270:80"><name pos:start="270:25" pos:end="270:44"><name pos:start="270:25" pos:end="270:39">uavStateMachine</name><operator pos:start="270:40" pos:end="270:40">.</operator><name pos:start="270:41" pos:end="270:44">fire</name></name><argument_list pos:start="270:45" pos:end="270:80">(<argument pos:start="270:46" pos:end="270:79"><expr pos:start="270:46" pos:end="270:79"><name pos:start="270:46" pos:end="270:79"><name pos:start="270:46" pos:end="270:65">FlightModeTransition</name><operator pos:start="270:66" pos:end="270:66">.</operator><name pos:start="270:67" pos:end="270:79">PLAN_COMPLETE</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt pos:start="271:25" pos:end="271:80"><expr pos:start="271:25" pos:end="271:79"><call pos:start="271:25" pos:end="271:79"><name pos:start="271:25" pos:end="271:41">notifyStateChange</name><argument_list pos:start="271:42" pos:end="271:79">(<argument pos:start="271:43" pos:end="271:50"><expr pos:start="271:43" pos:end="271:50"><name pos:start="271:43" pos:end="271:50">oldState</name></expr></argument>, <argument pos:start="271:53" pos:end="271:78"><expr pos:start="271:53" pos:end="271:78"><call pos:start="271:53" pos:end="271:78"><name pos:start="271:53" pos:end="271:76"><name pos:start="271:53" pos:end="271:67">uavStateMachine</name><operator pos:start="271:68" pos:end="271:68">.</operator><name pos:start="271:69" pos:end="271:76">getState</name></name><argument_list pos:start="271:77" pos:end="271:78">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		</block_content>}</block></if> <else pos:start="272:19" pos:end="277:17">else <block pos:start="272:24" pos:end="277:17">{<block_content pos:start="273:25" pos:end="276:139">
			<expr_stmt pos:start="273:25" pos:end="274:84"><expr pos:start="273:25" pos:end="274:83"><call pos:start="273:25" pos:end="274:83"><name pos:start="273:25" pos:end="273:36"><name pos:start="273:25" pos:end="273:30">LOGGER</name><operator pos:start="273:31" pos:end="273:31">.</operator><name pos:start="273:32" pos:end="273:36">error</name></name><argument_list pos:start="273:37" pos:end="274:83">(<argument pos:start="273:38" pos:end="274:82"><expr pos:start="273:38" pos:end="274:82"><literal type="string" pos:start="273:38" pos:end="273:68">"You may not transition from '"</literal> <operator pos:start="273:70" pos:end="273:70">+</operator> <call pos:start="273:72" pos:end="273:97"><name pos:start="273:72" pos:end="273:95"><name pos:start="273:72" pos:end="273:86">uavStateMachine</name><operator pos:start="273:87" pos:end="273:87">.</operator><name pos:start="273:88" pos:end="273:95">getState</name></name><argument_list pos:start="273:96" pos:end="273:97">()</argument_list></call> <operator pos:start="273:99" pos:end="273:99">+</operator> <literal type="string" pos:start="273:101" pos:end="273:118">"' with trigger '"</literal>
					<operator pos:start="274:41" pos:end="274:41">+</operator> <name pos:start="274:43" pos:end="274:76"><name pos:start="274:43" pos:end="274:62">FlightModeTransition</name><operator pos:start="274:63" pos:end="274:63">.</operator><name pos:start="274:64" pos:end="274:76">PLAN_COMPLETE</name></name> <operator pos:start="274:78" pos:end="274:78">+</operator> <literal type="string" pos:start="274:80" pos:end="274:82">"'"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<throw pos:start="275:25" pos:end="276:139">throw <expr pos:start="275:31" pos:end="276:138"><operator pos:start="275:31" pos:end="275:33">new</operator> <call pos:start="275:35" pos:end="276:138"><name pos:start="275:35" pos:end="275:53">FlightZoneException</name><argument_list pos:start="275:54" pos:end="276:138">(
					<argument pos:start="276:41" pos:end="276:137"><expr pos:start="276:41" pos:end="276:137"><literal type="string" pos:start="276:41" pos:end="276:68">"You may not transition to "</literal> <operator pos:start="276:70" pos:end="276:70">+</operator> <name pos:start="276:72" pos:end="276:88"><name pos:start="276:72" pos:end="276:81">FlightMode</name><operator pos:start="276:82" pos:end="276:82">.</operator><name pos:start="276:83" pos:end="276:88">IN_AIR</name></name> <operator pos:start="276:90" pos:end="276:90">+</operator> <literal type="string" pos:start="276:92" pos:end="276:108">" directly from "</literal> <operator pos:start="276:110" pos:end="276:110">+</operator> <call pos:start="276:112" pos:end="276:137"><name pos:start="276:112" pos:end="276:135"><name pos:start="276:112" pos:end="276:126">uavStateMachine</name><operator pos:start="276:127" pos:end="276:127">.</operator><name pos:start="276:128" pos:end="276:135">getState</name></name><argument_list pos:start="276:136" pos:end="276:137">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</throw>
		</block_content>}</block></else></if_stmt>
	</block_content>}</block></function>

	<function pos:start="280:9" pos:end="283:9"><type pos:start="280:9" pos:end="280:19"><specifier pos:start="280:9" pos:end="280:14">public</specifier> <name pos:start="280:16" pos:end="280:19">void</name></type> <name pos:start="280:21" pos:end="280:42">addStateChangeListener</name><parameter_list pos:start="280:43" pos:end="280:85">(<parameter pos:start="280:44" pos:end="280:84"><decl pos:start="280:44" pos:end="280:84"><type pos:start="280:44" pos:end="280:75"><name pos:start="280:44" pos:end="280:75">IManagedDroneStateChangeListener</name></type> <name pos:start="280:77" pos:end="280:84">listener</name></decl></parameter>)</parameter_list> <block pos:start="280:87" pos:end="283:9">{<block_content pos:start="281:17" pos:end="281:40">
		<expr_stmt pos:start="281:17" pos:end="281:40"><expr pos:start="281:17" pos:end="281:39"><call pos:start="281:17" pos:end="281:39"><name pos:start="281:17" pos:end="281:29"><name pos:start="281:17" pos:end="281:25">listeners</name><operator pos:start="281:26" pos:end="281:26">.</operator><name pos:start="281:27" pos:end="281:29">add</name></name><argument_list pos:start="281:30" pos:end="281:39">(<argument pos:start="281:31" pos:end="281:38"><expr pos:start="281:31" pos:end="281:38"><name pos:start="281:31" pos:end="281:38">listener</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	</block_content>}</block></function>

}</block></class>
</unit>
