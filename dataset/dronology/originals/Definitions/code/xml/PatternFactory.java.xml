<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="Java" filename="flatCode/PatternFactory.java" pos:tabs="8"><package pos:start="1:1" pos:end="1:70">package <name pos:start="1:9" pos:end="1:69"><name pos:start="1:9" pos:end="1:11">edu</name><operator pos:start="1:12" pos:end="1:12">.</operator><name pos:start="1:13" pos:end="1:14">nd</name><operator pos:start="1:15" pos:end="1:15">.</operator><name pos:start="1:16" pos:end="1:24">dronology</name><operator pos:start="1:25" pos:end="1:25">.</operator><name pos:start="1:26" pos:end="1:33">services</name><operator pos:start="1:34" pos:end="1:34">.</operator><name pos:start="1:35" pos:end="1:44">extensions</name><operator pos:start="1:45" pos:end="1:45">.</operator><name pos:start="1:46" pos:end="1:60">missionplanning</name><operator pos:start="1:61" pos:end="1:61">.</operator><name pos:start="1:62" pos:end="1:69">patterns</name></name>;</package>

<comment type="block" format="javadoc" pos:start="3:1" pos:end="8:3">/**
 * Factory class for predefined {@link IFlightPattern}.
 * 
 * @author Michael Vierhauser
 *
 */</comment>
<class pos:start="9:1" pos:end="36:1"><specifier pos:start="9:1" pos:end="9:6">public</specifier> class <name pos:start="9:14" pos:end="9:27">PatternFactory</name> <block pos:start="9:29" pos:end="36:1">{

	<enum pos:start="11:9" pos:end="13:9"><specifier pos:start="11:9" pos:end="11:14">public</specifier> enum <name pos:start="11:21" pos:end="11:31">PatternType</name> <block pos:start="11:33" pos:end="13:9">{
		<decl pos:start="12:17" pos:end="12:35"><name pos:start="12:17" pos:end="12:35">COORDINATED_TAKEOFF</name></decl>, <decl pos:start="12:38" pos:end="12:56"><name pos:start="12:38" pos:end="12:56">COORDINATED_LANDING</name></decl>
	}</block></enum>

	<comment type="block" format="javadoc" pos:start="15:9" pos:end="22:11">/**
	 * 
	 * @param type
	 *          The {@link PatternType} of the flight pattern to create.
	 * @return A flight pattern for the given pattern type.
	 * @throws An
	 * @{@link IllegalArgumentException} in case the pattern is not supported.
	 */</comment>
	<function pos:start="23:9" pos:end="34:9"><type pos:start="23:9" pos:end="23:36"><specifier pos:start="23:9" pos:end="23:14">public</specifier> <specifier pos:start="23:16" pos:end="23:21">static</specifier> <name pos:start="23:23" pos:end="23:36">IFlightPattern</name></type> <name pos:start="23:38" pos:end="23:47">getPattern</name><parameter_list pos:start="23:48" pos:end="23:65">(<parameter pos:start="23:49" pos:end="23:64"><decl pos:start="23:49" pos:end="23:64"><type pos:start="23:49" pos:end="23:59"><name pos:start="23:49" pos:end="23:59">PatternType</name></type> <name pos:start="23:61" pos:end="23:64">type</name></decl></parameter>)</parameter_list> <block pos:start="23:67" pos:end="34:9">{<block_content pos:start="24:17" pos:end="33:17">
		<switch pos:start="24:17" pos:end="33:17">switch <condition pos:start="24:24" pos:end="24:29">(<expr pos:start="24:25" pos:end="24:28"><name pos:start="24:25" pos:end="24:28">type</name></expr>)</condition> <block pos:start="24:31" pos:end="33:17">{<block_content pos:start="25:25" pos:end="32:102">
			<case pos:start="25:25" pos:end="25:49">case <expr pos:start="25:30" pos:end="25:48"><name pos:start="25:30" pos:end="25:48">COORDINATED_TAKEOFF</name></expr>:</case>
				<return pos:start="26:33" pos:end="26:71">return <expr pos:start="26:40" pos:end="26:70"><operator pos:start="26:40" pos:end="26:42">new</operator> <call pos:start="26:44" pos:end="26:70"><name pos:start="26:44" pos:end="26:68">CoordinatedTakeoffPattern</name><argument_list pos:start="26:69" pos:end="26:70">()</argument_list></call></expr>;</return>

			<case pos:start="28:25" pos:end="28:49">case <expr pos:start="28:30" pos:end="28:48"><name pos:start="28:30" pos:end="28:48">COORDINATED_LANDING</name></expr>:</case>
				<return pos:start="29:33" pos:end="29:71">return <expr pos:start="29:40" pos:end="29:70"><operator pos:start="29:40" pos:end="29:42">new</operator> <call pos:start="29:44" pos:end="29:70"><name pos:start="29:44" pos:end="29:68">CoordinatedLandingPattern</name><argument_list pos:start="29:69" pos:end="29:70">()</argument_list></call></expr>;</return>

			<default pos:start="31:25" pos:end="31:32">default:</default>
				<throw pos:start="32:33" pos:end="32:102">throw <expr pos:start="32:39" pos:end="32:101"><operator pos:start="32:39" pos:end="32:41">new</operator> <call pos:start="32:43" pos:end="32:101"><name pos:start="32:43" pos:end="32:66">IllegalArgumentException</name><argument_list pos:start="32:67" pos:end="32:101">(<argument pos:start="32:68" pos:end="32:100"><expr pos:start="32:68" pos:end="32:100"><literal type="string" pos:start="32:68" pos:end="32:74">"Type "</literal> <operator pos:start="32:76" pos:end="32:76">+</operator> <name pos:start="32:78" pos:end="32:81">type</name> <operator pos:start="32:83" pos:end="32:83">+</operator> <literal type="string" pos:start="32:85" pos:end="32:100">" not supported"</literal></expr></argument>)</argument_list></call></expr>;</throw>
		</block_content>}</block></switch>
	</block_content>}</block></function>

}</block></class>
</unit>
