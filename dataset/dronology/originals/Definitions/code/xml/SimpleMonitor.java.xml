<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="Java" filename="flatCode/SimpleMonitor.java" pos:tabs="8"><package pos:start="1:1" pos:end="1:58">package <name pos:start="1:9" pos:end="1:57"><name pos:start="1:9" pos:end="1:11">edu</name><operator pos:start="1:12" pos:end="1:12">.</operator><name pos:start="1:13" pos:end="1:14">nd</name><operator pos:start="1:15" pos:end="1:15">.</operator><name pos:start="1:16" pos:end="1:24">dronology</name><operator pos:start="1:25" pos:end="1:25">.</operator><name pos:start="1:26" pos:end="1:35">monitoring</name><operator pos:start="1:36" pos:end="1:36">.</operator><name pos:start="1:37" pos:end="1:49">simplechecker</name><operator pos:start="1:50" pos:end="1:50">.</operator><name pos:start="1:51" pos:end="1:57">monitor</name></name>;</package>

<import pos:start="3:1" pos:end="3:59">import <name pos:start="3:8" pos:end="3:58"><name pos:start="3:8" pos:end="3:10">edu</name><operator pos:start="3:11" pos:end="3:11">.</operator><name pos:start="3:12" pos:end="3:13">nd</name><operator pos:start="3:14" pos:end="3:14">.</operator><name pos:start="3:15" pos:end="3:23">dronology</name><operator pos:start="3:24" pos:end="3:24">.</operator><name pos:start="3:25" pos:end="3:28">core</name><operator pos:start="3:29" pos:end="3:29">.</operator><name pos:start="3:30" pos:end="3:39">monitoring</name><operator pos:start="3:40" pos:end="3:40">.</operator><name pos:start="3:41" pos:end="3:58">ArtifactIdentifier</name></name>;</import>

<import pos:start="5:1" pos:end="5:73">import <name pos:start="5:8" pos:end="5:72"><name pos:start="5:8" pos:end="5:10">edu</name><operator pos:start="5:11" pos:end="5:11">.</operator><name pos:start="5:12" pos:end="5:13">nd</name><operator pos:start="5:14" pos:end="5:14">.</operator><name pos:start="5:15" pos:end="5:23">dronology</name><operator pos:start="5:24" pos:end="5:24">.</operator><name pos:start="5:25" pos:end="5:34">monitoring</name><operator pos:start="5:35" pos:end="5:35">.</operator><name pos:start="5:36" pos:end="5:42">service</name><operator pos:start="5:43" pos:end="5:43">.</operator><name pos:start="5:44" pos:end="5:72">IDroneMonitoringRemoteService</name></name>;</import>
<import pos:start="6:1" pos:end="6:69">import <name pos:start="6:8" pos:end="6:68"><name pos:start="6:8" pos:end="6:10">edu</name><operator pos:start="6:11" pos:end="6:11">.</operator><name pos:start="6:12" pos:end="6:13">nd</name><operator pos:start="6:14" pos:end="6:14">.</operator><name pos:start="6:15" pos:end="6:23">dronology</name><operator pos:start="6:24" pos:end="6:24">.</operator><name pos:start="6:25" pos:end="6:34">monitoring</name><operator pos:start="6:35" pos:end="6:35">.</operator><name pos:start="6:36" pos:end="6:48">simplechecker</name><operator pos:start="6:49" pos:end="6:49">.</operator><name pos:start="6:50" pos:end="6:68">BaseServiceProvider</name></name>;</import>

<class pos:start="8:1" pos:end="46:1"><specifier pos:start="8:1" pos:end="8:6">public</specifier> class <name pos:start="8:14" pos:end="8:26">SimpleMonitor</name> <block pos:start="8:28" pos:end="46:1">{

	<function pos:start="10:9" pos:end="44:9"><type pos:start="10:9" pos:end="10:26"><specifier pos:start="10:9" pos:end="10:14">public</specifier> <specifier pos:start="10:16" pos:end="10:21">static</specifier> <name pos:start="10:23" pos:end="10:26">void</name></type> <name pos:start="10:28" pos:end="10:31">main</name><parameter_list pos:start="10:32" pos:end="10:46">(<parameter pos:start="10:33" pos:end="10:45"><decl pos:start="10:33" pos:end="10:45"><type pos:start="10:33" pos:end="10:40"><name pos:start="10:33" pos:end="10:40"><name pos:start="10:33" pos:end="10:38">String</name><index pos:start="10:39" pos:end="10:40">[]</index></name></type> <name pos:start="10:42" pos:end="10:45">args</name></decl></parameter>)</parameter_list> <block pos:start="10:48" pos:end="44:9">{<block_content pos:start="12:17" pos:end="43:17">

		<decl_stmt pos:start="12:17" pos:end="12:59"><decl pos:start="12:17" pos:end="12:58"><type pos:start="12:17" pos:end="12:29"><name pos:start="12:17" pos:end="12:29">MonitorDialog</name></type> <name pos:start="12:31" pos:end="12:36">dialog</name> <init pos:start="12:38" pos:end="12:58">= <expr pos:start="12:40" pos:end="12:58"><operator pos:start="12:40" pos:end="12:42">new</operator> <call pos:start="12:44" pos:end="12:58"><name pos:start="12:44" pos:end="12:56">MonitorDialog</name><argument_list pos:start="12:57" pos:end="12:58">()</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt pos:start="13:17" pos:end="19:27"><expr pos:start="13:17" pos:end="19:26"><operator pos:start="13:17" pos:end="13:19">new</operator> <call pos:start="13:21" pos:end="19:18"><name pos:start="13:21" pos:end="13:26">Thread</name><argument_list pos:start="13:27" pos:end="19:18">(<argument pos:start="13:28" pos:end="19:17"><expr pos:start="13:28" pos:end="19:17"><operator pos:start="13:28" pos:end="13:30">new</operator> <class pos:start="13:32" pos:end="19:17"><super pos:start="13:32" pos:end="13:39"><name pos:start="13:32" pos:end="13:39">Runnable</name></super><argument_list pos:start="13:40" pos:end="13:41">()</argument_list> <block pos:start="13:43" pos:end="19:17">{

			<function pos:start="15:25" pos:end="18:25"><annotation pos:start="15:25" pos:end="15:33">@<name pos:start="15:26" pos:end="15:33">Override</name></annotation>
			<type pos:start="16:25" pos:end="16:35"><specifier pos:start="16:25" pos:end="16:30">public</specifier> <name pos:start="16:32" pos:end="16:35">void</name></type> <name pos:start="16:37" pos:end="16:39">run</name><parameter_list pos:start="16:40" pos:end="16:41">()</parameter_list> <block pos:start="16:43" pos:end="18:25">{<block_content pos:start="17:33" pos:end="17:50">
				<expr_stmt pos:start="17:33" pos:end="17:50"><expr pos:start="17:33" pos:end="17:49"><call pos:start="17:33" pos:end="17:49"><name pos:start="17:33" pos:end="17:43"><name pos:start="17:33" pos:end="17:38">dialog</name><operator pos:start="17:39" pos:end="17:39">.</operator><name pos:start="17:40" pos:end="17:43">main</name></name><argument_list pos:start="17:44" pos:end="17:49">(<argument pos:start="17:45" pos:end="17:48"><expr pos:start="17:45" pos:end="17:48"><name pos:start="17:45" pos:end="17:48">args</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			</block_content>}</block></function>
		}</block></class></expr></argument>)</argument_list></call><operator pos:start="19:19" pos:end="19:19">.</operator><call pos:start="19:20" pos:end="19:26"><name pos:start="19:20" pos:end="19:24">start</name><argument_list pos:start="19:25" pos:end="19:26">()</argument_list></call></expr>;</expr_stmt>
		<try pos:start="20:17" pos:end="25:17">try <block pos:start="20:21" pos:end="22:17">{<block_content pos:start="21:25" pos:end="21:43">
			<expr_stmt pos:start="21:25" pos:end="21:43"><expr pos:start="21:25" pos:end="21:42"><call pos:start="21:25" pos:end="21:42"><name pos:start="21:25" pos:end="21:36"><name pos:start="21:25" pos:end="21:30">Thread</name><operator pos:start="21:31" pos:end="21:31">.</operator><name pos:start="21:32" pos:end="21:36">sleep</name></name><argument_list pos:start="21:37" pos:end="21:42">(<argument pos:start="21:38" pos:end="21:41"><expr pos:start="21:38" pos:end="21:41"><literal type="number" pos:start="21:38" pos:end="21:41">3000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		</block_content>}</block> <catch pos:start="22:19" pos:end="25:17">catch <parameter_list pos:start="22:25" pos:end="22:48">(<parameter pos:start="22:26" pos:end="22:47"><decl pos:start="22:26" pos:end="22:47"><type pos:start="22:26" pos:end="22:47"><name pos:start="22:26" pos:end="22:45">InterruptedException</name></type> <name pos:start="22:47" pos:end="22:47">e</name></decl></parameter>)</parameter_list> <block pos:start="22:50" pos:end="25:17">{<block_content pos:start="24:25" pos:end="24:44">
			<comment type="line" pos:start="23:25" pos:end="23:58">// TODO Auto-generated catch block</comment>
			<expr_stmt pos:start="24:25" pos:end="24:44"><expr pos:start="24:25" pos:end="24:43"><call pos:start="24:25" pos:end="24:43"><name pos:start="24:25" pos:end="24:41"><name pos:start="24:25" pos:end="24:25">e</name><operator pos:start="24:26" pos:end="24:26">.</operator><name pos:start="24:27" pos:end="24:41">printStackTrace</name></name><argument_list pos:start="24:42" pos:end="24:43">()</argument_list></call></expr>;</expr_stmt>
		</block_content>}</block></catch></try>

		<decl_stmt pos:start="27:17" pos:end="27:73"><decl pos:start="27:17" pos:end="27:72"><type pos:start="27:17" pos:end="27:35"><name pos:start="27:17" pos:end="27:35">BaseServiceProvider</name></type> <name pos:start="27:37" pos:end="27:44">provider</name> <init pos:start="27:46" pos:end="27:72">= <expr pos:start="27:48" pos:end="27:72"><operator pos:start="27:48" pos:end="27:50">new</operator> <call pos:start="27:52" pos:end="27:72"><name pos:start="27:52" pos:end="27:70">BaseServiceProvider</name><argument_list pos:start="27:71" pos:end="27:72">()</argument_list></call></expr></init></decl>;</decl_stmt>

		<try pos:start="29:17" pos:end="43:17">try <block pos:start="29:21" pos:end="40:17">{<block_content pos:start="30:25" pos:end="39:78">
			<expr_stmt pos:start="30:25" pos:end="30:84"><expr pos:start="30:25" pos:end="30:83"><call pos:start="30:25" pos:end="30:83"><name pos:start="30:25" pos:end="30:42"><name pos:start="30:25" pos:end="30:30">System</name><operator pos:start="30:31" pos:end="30:31">.</operator><name pos:start="30:32" pos:end="30:42">setProperty</name></name><argument_list pos:start="30:43" pos:end="30:83">(<argument pos:start="30:44" pos:end="30:69"><expr pos:start="30:44" pos:end="30:69"><literal type="string" pos:start="30:44" pos:end="30:69">"java.rmi.server.hostname"</literal></expr></argument>, <argument pos:start="30:72" pos:end="30:82"><expr pos:start="30:72" pos:end="30:82"><literal type="string" pos:start="30:72" pos:end="30:82">"localhost"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

			<decl_stmt pos:start="32:25" pos:end="33:89"><decl pos:start="32:25" pos:end="33:88"><type pos:start="32:25" pos:end="32:53"><name pos:start="32:25" pos:end="32:53">IDroneMonitoringRemoteService</name></type> <name pos:start="32:55" pos:end="32:60">sevice</name> <init pos:start="32:62" pos:end="33:88">= <expr pos:start="32:64" pos:end="33:88"><operator pos:start="32:64" pos:end="32:64">(</operator><name pos:start="32:65" pos:end="32:93">IDroneMonitoringRemoteService</name><operator pos:start="32:94" pos:end="32:94">)</operator> <call pos:start="32:96" pos:end="32:122"><name pos:start="32:96" pos:end="32:120"><name pos:start="32:96" pos:end="32:103">provider</name><operator pos:start="32:104" pos:end="32:104">.</operator><name pos:start="32:105" pos:end="32:120">getRemoteManager</name></name><argument_list pos:start="32:121" pos:end="32:122">()</argument_list></call>
					<operator pos:start="33:41" pos:end="33:41">.</operator><call pos:start="33:42" pos:end="33:88"><name pos:start="33:42" pos:end="33:51">getService</name><argument_list pos:start="33:52" pos:end="33:88">(<argument pos:start="33:53" pos:end="33:87"><expr pos:start="33:53" pos:end="33:87"><name pos:start="33:53" pos:end="33:87"><name pos:start="33:53" pos:end="33:81">IDroneMonitoringRemoteService</name><operator pos:start="33:82" pos:end="33:82">.</operator><name pos:start="33:83" pos:end="33:87">class</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

			<decl_stmt pos:start="35:25" pos:end="35:128"><decl pos:start="35:25" pos:end="35:127"><type pos:start="35:25" pos:end="35:42"><name pos:start="35:25" pos:end="35:42">ArtifactIdentifier</name></type> <name pos:start="35:44" pos:end="35:45">id</name> <init pos:start="35:47" pos:end="35:127">= <expr pos:start="35:49" pos:end="35:127"><operator pos:start="35:49" pos:end="35:51">new</operator> <call pos:start="35:53" pos:end="35:127"><name pos:start="35:53" pos:end="35:70">ArtifactIdentifier</name><argument_list pos:start="35:71" pos:end="35:127">(<argument pos:start="35:72" pos:end="35:94"><expr pos:start="35:72" pos:end="35:94"><name pos:start="35:72" pos:end="35:94"><name pos:start="35:72" pos:end="35:89">ArtifactIdentifier</name><operator pos:start="35:90" pos:end="35:90">.</operator><name pos:start="35:91" pos:end="35:94">ROOT</name></name></expr></argument>, <argument pos:start="35:97" pos:end="35:106"><expr pos:start="35:97" pos:end="35:106"><literal type="string" pos:start="35:97" pos:end="35:106">"INTERNAL"</literal></expr></argument>, <argument pos:start="35:109" pos:end="35:126"><expr pos:start="35:109" pos:end="35:126"><literal type="string" pos:start="35:109" pos:end="35:126">"MISSION_WAYPOINT"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<decl_stmt pos:start="36:25" pos:end="36:122"><decl pos:start="36:25" pos:end="36:121"><type pos:start="36:25" pos:end="36:42"><name pos:start="36:25" pos:end="36:42">ArtifactIdentifier</name></type> <name pos:start="36:44" pos:end="36:46">id2</name> <init pos:start="36:48" pos:end="36:121">= <expr pos:start="36:50" pos:end="36:121"><operator pos:start="36:50" pos:end="36:52">new</operator> <call pos:start="36:54" pos:end="36:121"><name pos:start="36:54" pos:end="36:71">ArtifactIdentifier</name><argument_list pos:start="36:72" pos:end="36:121">(<argument pos:start="36:73" pos:end="36:95"><expr pos:start="36:73" pos:end="36:95"><name pos:start="36:73" pos:end="36:95"><name pos:start="36:73" pos:end="36:90">ArtifactIdentifier</name><operator pos:start="36:91" pos:end="36:91">.</operator><name pos:start="36:92" pos:end="36:95">ROOT</name></name></expr></argument>, <argument pos:start="36:98" pos:end="36:107"><expr pos:start="36:98" pos:end="36:107"><literal type="string" pos:start="36:98" pos:end="36:107">"INTERNAL"</literal></expr></argument>, <argument pos:start="36:110" pos:end="36:120"><expr pos:start="36:110" pos:end="36:120"><literal type="string" pos:start="36:110" pos:end="36:120">"COLLISION"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<decl_stmt pos:start="37:25" pos:end="37:88"><decl pos:start="37:25" pos:end="37:87"><type pos:start="37:25" pos:end="37:44"><name pos:start="37:25" pos:end="37:44">RemoteMessageHandler</name></type> <name pos:start="37:46" pos:end="37:52">handler</name> <init pos:start="37:54" pos:end="37:87">= <expr pos:start="37:56" pos:end="37:87"><operator pos:start="37:56" pos:end="37:58">new</operator> <call pos:start="37:60" pos:end="37:87"><name pos:start="37:60" pos:end="37:79">RemoteMessageHandler</name><argument_list pos:start="37:80" pos:end="37:87">(<argument pos:start="37:81" pos:end="37:86"><expr pos:start="37:81" pos:end="37:86"><name pos:start="37:81" pos:end="37:86">dialog</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<expr_stmt pos:start="38:25" pos:end="38:77"><expr pos:start="38:25" pos:end="38:76"><call pos:start="38:25" pos:end="38:76"><name pos:start="38:25" pos:end="38:63"><name pos:start="38:25" pos:end="38:30">sevice</name><operator pos:start="38:31" pos:end="38:31">.</operator><name pos:start="38:32" pos:end="38:63">registerMonitoringMessageHandler</name></name><argument_list pos:start="38:64" pos:end="38:76">(<argument pos:start="38:65" pos:end="38:71"><expr pos:start="38:65" pos:end="38:71"><name pos:start="38:65" pos:end="38:71">handler</name></expr></argument>, <argument pos:start="38:74" pos:end="38:75"><expr pos:start="38:74" pos:end="38:75"><name pos:start="38:74" pos:end="38:75">id</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt pos:start="39:25" pos:end="39:78"><expr pos:start="39:25" pos:end="39:77"><call pos:start="39:25" pos:end="39:77"><name pos:start="39:25" pos:end="39:63"><name pos:start="39:25" pos:end="39:30">sevice</name><operator pos:start="39:31" pos:end="39:31">.</operator><name pos:start="39:32" pos:end="39:63">registerMonitoringMessageHandler</name></name><argument_list pos:start="39:64" pos:end="39:77">(<argument pos:start="39:65" pos:end="39:71"><expr pos:start="39:65" pos:end="39:71"><name pos:start="39:65" pos:end="39:71">handler</name></expr></argument>, <argument pos:start="39:74" pos:end="39:76"><expr pos:start="39:74" pos:end="39:76"><name pos:start="39:74" pos:end="39:76">id2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		</block_content>}</block> <catch pos:start="40:19" pos:end="43:17">catch <parameter_list pos:start="40:25" pos:end="40:37">(<parameter pos:start="40:26" pos:end="40:36"><decl pos:start="40:26" pos:end="40:36"><type pos:start="40:26" pos:end="40:36"><name pos:start="40:26" pos:end="40:34">Throwable</name></type> <name pos:start="40:36" pos:end="40:36">e</name></decl></parameter>)</parameter_list> <block pos:start="40:39" pos:end="43:17">{<block_content pos:start="42:25" pos:end="42:44">
			<comment type="line" pos:start="41:25" pos:end="41:58">// TODO Auto-generated catch block</comment>
			<expr_stmt pos:start="42:25" pos:end="42:44"><expr pos:start="42:25" pos:end="42:43"><call pos:start="42:25" pos:end="42:43"><name pos:start="42:25" pos:end="42:41"><name pos:start="42:25" pos:end="42:25">e</name><operator pos:start="42:26" pos:end="42:26">.</operator><name pos:start="42:27" pos:end="42:41">printStackTrace</name></name><argument_list pos:start="42:42" pos:end="42:43">()</argument_list></call></expr>;</expr_stmt>
		</block_content>}</block></catch></try>
	</block_content>}</block></function>

}</block></class>
</unit>
