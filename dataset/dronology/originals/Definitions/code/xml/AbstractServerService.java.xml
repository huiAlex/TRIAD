<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="Java" filename="flatCode/AbstractServerService.java" pos:tabs="8"><package pos:start="1:1" pos:end="1:44">package <name pos:start="1:9" pos:end="1:43"><name pos:start="1:9" pos:end="1:11">edu</name><operator pos:start="1:12" pos:end="1:12">.</operator><name pos:start="1:13" pos:end="1:14">nd</name><operator pos:start="1:15" pos:end="1:15">.</operator><name pos:start="1:16" pos:end="1:24">dronology</name><operator pos:start="1:25" pos:end="1:25">.</operator><name pos:start="1:26" pos:end="1:33">services</name><operator pos:start="1:34" pos:end="1:34">.</operator><name pos:start="1:35" pos:end="1:38">core</name><operator pos:start="1:39" pos:end="1:39">.</operator><name pos:start="1:40" pos:end="1:43">base</name></name>;</package>

<import pos:start="3:1" pos:end="3:27">import <name pos:start="3:8" pos:end="3:26"><name pos:start="3:8" pos:end="3:11">java</name><operator pos:start="3:12" pos:end="3:12">.</operator><name pos:start="3:13" pos:end="3:16">util</name><operator pos:start="3:17" pos:end="3:17">.</operator><name pos:start="3:18" pos:end="3:26">ArrayList</name></name>;</import>
<import pos:start="4:1" pos:end="4:29">import <name pos:start="4:8" pos:end="4:28"><name pos:start="4:8" pos:end="4:11">java</name><operator pos:start="4:12" pos:end="4:12">.</operator><name pos:start="4:13" pos:end="4:16">util</name><operator pos:start="4:17" pos:end="4:17">.</operator><name pos:start="4:18" pos:end="4:28">Collections</name></name>;</import>
<import pos:start="5:1" pos:end="5:22">import <name pos:start="5:8" pos:end="5:21"><name pos:start="5:8" pos:end="5:11">java</name><operator pos:start="5:12" pos:end="5:12">.</operator><name pos:start="5:13" pos:end="5:16">util</name><operator pos:start="5:17" pos:end="5:17">.</operator><name pos:start="5:18" pos:end="5:21">List</name></name>;</import>
<import pos:start="6:1" pos:end="6:49">import <name pos:start="6:8" pos:end="6:48"><name pos:start="6:8" pos:end="6:11">java</name><operator pos:start="6:12" pos:end="6:12">.</operator><name pos:start="6:13" pos:end="6:16">util</name><operator pos:start="6:17" pos:end="6:17">.</operator><name pos:start="6:18" pos:end="6:27">concurrent</name><operator pos:start="6:28" pos:end="6:28">.</operator><name pos:start="6:29" pos:end="6:34">atomic</name><operator pos:start="6:35" pos:end="6:35">.</operator><name pos:start="6:36" pos:end="6:48">AtomicBoolean</name></name>;</import>

<import pos:start="8:1" pos:end="8:59">import <name pos:start="8:8" pos:end="8:58"><name pos:start="8:8" pos:end="8:10">edu</name><operator pos:start="8:11" pos:end="8:11">.</operator><name pos:start="8:12" pos:end="8:13">nd</name><operator pos:start="8:14" pos:end="8:14">.</operator><name pos:start="8:15" pos:end="8:23">dronology</name><operator pos:start="8:24" pos:end="8:24">.</operator><name pos:start="8:25" pos:end="8:32">services</name><operator pos:start="8:33" pos:end="8:33">.</operator><name pos:start="8:34" pos:end="8:37">core</name><operator pos:start="8:38" pos:end="8:38">.</operator><name pos:start="8:39" pos:end="8:41">api</name><operator pos:start="8:42" pos:end="8:42">.</operator><name pos:start="8:43" pos:end="8:58">IServiceInstance</name></name>;</import>
<import pos:start="9:1" pos:end="9:54">import <name pos:start="9:8" pos:end="9:53"><name pos:start="9:8" pos:end="9:10">edu</name><operator pos:start="9:11" pos:end="9:11">.</operator><name pos:start="9:12" pos:end="9:13">nd</name><operator pos:start="9:14" pos:end="9:14">.</operator><name pos:start="9:15" pos:end="9:23">dronology</name><operator pos:start="9:24" pos:end="9:24">.</operator><name pos:start="9:25" pos:end="9:32">services</name><operator pos:start="9:33" pos:end="9:33">.</operator><name pos:start="9:34" pos:end="9:37">core</name><operator pos:start="9:38" pos:end="9:38">.</operator><name pos:start="9:39" pos:end="9:41">api</name><operator pos:start="9:42" pos:end="9:42">.</operator><name pos:start="9:43" pos:end="9:53">ServiceInfo</name></name>;</import>
<import pos:start="10:1" pos:end="10:64">import <name pos:start="10:8" pos:end="10:63"><name pos:start="10:8" pos:end="10:10">edu</name><operator pos:start="10:11" pos:end="10:11">.</operator><name pos:start="10:12" pos:end="10:13">nd</name><operator pos:start="10:14" pos:end="10:14">.</operator><name pos:start="10:15" pos:end="10:23">dronology</name><operator pos:start="10:24" pos:end="10:24">.</operator><name pos:start="10:25" pos:end="10:32">services</name><operator pos:start="10:33" pos:end="10:33">.</operator><name pos:start="10:34" pos:end="10:37">core</name><operator pos:start="10:38" pos:end="10:38">.</operator><name pos:start="10:39" pos:end="10:46">listener</name><operator pos:start="10:47" pos:end="10:47">.</operator><name pos:start="10:48" pos:end="10:63">IServiceListener</name></name>;</import>
<import pos:start="11:1" pos:end="11:69">import <name pos:start="11:8" pos:end="11:68"><name pos:start="11:8" pos:end="11:10">edu</name><operator pos:start="11:11" pos:end="11:11">.</operator><name pos:start="11:12" pos:end="11:13">nd</name><operator pos:start="11:14" pos:end="11:14">.</operator><name pos:start="11:15" pos:end="11:23">dronology</name><operator pos:start="11:24" pos:end="11:24">.</operator><name pos:start="11:25" pos:end="11:32">services</name><operator pos:start="11:33" pos:end="11:33">.</operator><name pos:start="11:34" pos:end="11:37">core</name><operator pos:start="11:38" pos:end="11:38">.</operator><name pos:start="11:39" pos:end="11:42">util</name><operator pos:start="11:43" pos:end="11:43">.</operator><name pos:start="11:44" pos:end="11:68">DronologyServiceException</name></name>;</import>
<import pos:start="12:1" pos:end="12:38">import <name pos:start="12:8" pos:end="12:37"><name pos:start="12:8" pos:end="12:10">edu</name><operator pos:start="12:11" pos:end="12:11">.</operator><name pos:start="12:12" pos:end="12:13">nd</name><operator pos:start="12:14" pos:end="12:14">.</operator><name pos:start="12:15" pos:end="12:23">dronology</name><operator pos:start="12:24" pos:end="12:24">.</operator><name pos:start="12:25" pos:end="12:28">util</name><operator pos:start="12:29" pos:end="12:29">.</operator><name pos:start="12:30" pos:end="12:37">NullUtil</name></name>;</import>
<import pos:start="13:1" pos:end="13:30">import <name pos:start="13:8" pos:end="13:29"><name pos:start="13:8" pos:end="13:10">net</name><operator pos:start="13:11" pos:end="13:11">.</operator><name pos:start="13:12" pos:end="13:13">mv</name><operator pos:start="13:14" pos:end="13:14">.</operator><name pos:start="13:15" pos:end="13:21">logging</name><operator pos:start="13:22" pos:end="13:22">.</operator><name pos:start="13:23" pos:end="13:29">ILogger</name></name>;</import>
<import pos:start="14:1" pos:end="14:37">import <name pos:start="14:8" pos:end="14:36"><name pos:start="14:8" pos:end="14:10">net</name><operator pos:start="14:11" pos:end="14:11">.</operator><name pos:start="14:12" pos:end="14:13">mv</name><operator pos:start="14:14" pos:end="14:14">.</operator><name pos:start="14:15" pos:end="14:21">logging</name><operator pos:start="14:22" pos:end="14:22">.</operator><name pos:start="14:23" pos:end="14:36">LoggerProvider</name></name>;</import>

<class pos:start="16:1" pos:end="188:1"><specifier pos:start="16:1" pos:end="16:6">public</specifier> <specifier pos:start="16:8" pos:end="16:15">abstract</specifier> class <name pos:start="16:23" pos:end="16:71"><name pos:start="16:23" pos:end="16:43">AbstractServerService</name><parameter_list pos:start="16:44" pos:end="16:71">&lt;<parameter pos:start="16:45" pos:end="16:70"><name pos:start="16:45" pos:end="16:45">S</name> <extends pos:start="16:47" pos:end="16:70">extends <name pos:start="16:55" pos:end="16:70">IServiceInstance</name></extends></parameter>&gt;</parameter_list></name> <block pos:start="16:73" pos:end="188:1">{

	<decl_stmt pos:start="18:9" pos:end="18:100"><decl pos:start="18:9" pos:end="18:99"><type pos:start="18:9" pos:end="18:36"><specifier pos:start="18:9" pos:end="18:15">private</specifier> <specifier pos:start="18:17" pos:end="18:22">static</specifier> <specifier pos:start="18:24" pos:end="18:28">final</specifier> <name pos:start="18:30" pos:end="18:36">ILogger</name></type> <name pos:start="18:38" pos:end="18:43">LOGGER</name> <init pos:start="18:45" pos:end="18:99">= <expr pos:start="18:47" pos:end="18:99"><call pos:start="18:47" pos:end="18:99"><name pos:start="18:47" pos:end="18:70"><name pos:start="18:47" pos:end="18:60">LoggerProvider</name><operator pos:start="18:61" pos:end="18:61">.</operator><name pos:start="18:62" pos:end="18:70">getLogger</name></name><argument_list pos:start="18:71" pos:end="18:99">(<argument pos:start="18:72" pos:end="18:98"><expr pos:start="18:72" pos:end="18:98"><name pos:start="18:72" pos:end="18:98"><name pos:start="18:72" pos:end="18:92">AbstractServerService</name><operator pos:start="18:93" pos:end="18:93">.</operator><name pos:start="18:94" pos:end="18:98">class</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

	<decl_stmt pos:start="20:9" pos:end="20:36"><decl pos:start="20:9" pos:end="20:35"><type pos:start="20:9" pos:end="20:19"><specifier pos:start="20:9" pos:end="20:17">protected</specifier> <name pos:start="20:19" pos:end="20:19">S</name></type> <name pos:start="20:21" pos:end="20:35">serviceInstance</name></decl>;</decl_stmt>
	<decl_stmt pos:start="21:9" pos:end="21:69"><decl pos:start="21:9" pos:end="21:68"><type pos:start="21:9" pos:end="21:31"><specifier pos:start="21:9" pos:end="21:17">protected</specifier> <name pos:start="21:19" pos:end="21:31">AtomicBoolean</name></type> <name pos:start="21:33" pos:end="21:41">isStarted</name> <init pos:start="21:43" pos:end="21:68">= <expr pos:start="21:45" pos:end="21:68"><operator pos:start="21:45" pos:end="21:47">new</operator> <call pos:start="21:49" pos:end="21:68"><name pos:start="21:49" pos:end="21:61">AtomicBoolean</name><argument_list pos:start="21:62" pos:end="21:68">(<argument pos:start="21:63" pos:end="21:67"><expr pos:start="21:63" pos:end="21:67"><literal type="boolean" pos:start="21:63" pos:end="21:67">false</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<decl_stmt pos:start="22:9" pos:end="22:80"><decl pos:start="22:9" pos:end="22:79"><type pos:start="22:9" pos:end="22:50"><specifier pos:start="22:9" pos:end="22:15">private</specifier> <specifier pos:start="22:17" pos:end="22:22">static</specifier> <name pos:start="22:24" pos:end="22:50"><name pos:start="22:24" pos:end="22:27">List</name><argument_list type="generic" pos:start="22:28" pos:end="22:50">&lt;<argument pos:start="22:29" pos:end="22:49"><name pos:start="22:29" pos:end="22:49">AbstractServerService</name></argument>&gt;</argument_list></name></type> <name pos:start="22:52" pos:end="22:59">services</name> <init pos:start="22:61" pos:end="22:79">= <expr pos:start="22:63" pos:end="22:79"><operator pos:start="22:63" pos:end="22:65">new</operator> <call pos:start="22:67" pos:end="22:79"><name pos:start="22:67" pos:end="22:77"><name pos:start="22:67" pos:end="22:75">ArrayList</name><argument_list type="generic" pos:start="22:76" pos:end="22:77">&lt;&gt;</argument_list></name><argument_list pos:start="22:78" pos:end="22:79">()</argument_list></call></expr></init></decl>;</decl_stmt>
	<decl_stmt pos:start="23:9" pos:end="23:46"><decl pos:start="23:9" pos:end="23:45"><type pos:start="23:9" pos:end="23:29"><specifier pos:start="23:9" pos:end="23:15">private</specifier> <specifier pos:start="23:17" pos:end="23:22">static</specifier> <name pos:start="23:24" pos:end="23:29">String</name></type> <name pos:start="23:31" pos:end="23:45">customWorkspace</name></decl>;</decl_stmt>



	<constructor pos:start="27:9" pos:end="30:9"><specifier pos:start="27:9" pos:end="27:14">public</specifier> <name pos:start="27:16" pos:end="27:36">AbstractServerService</name><parameter_list pos:start="27:37" pos:end="27:38">()</parameter_list> <block pos:start="27:40" pos:end="30:9">{<block_content pos:start="28:17" pos:end="29:56">
		<expr_stmt pos:start="28:17" pos:end="28:35"><expr pos:start="28:17" pos:end="28:34"><call pos:start="28:17" pos:end="28:34"><name pos:start="28:17" pos:end="28:28"><name pos:start="28:17" pos:end="28:24">services</name><operator pos:start="28:25" pos:end="28:25">.</operator><name pos:start="28:26" pos:end="28:28">add</name></name><argument_list pos:start="28:29" pos:end="28:34">(<argument pos:start="28:30" pos:end="28:33"><expr pos:start="28:30" pos:end="28:33"><name pos:start="28:30" pos:end="28:33">this</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt pos:start="29:17" pos:end="29:56"><expr pos:start="29:17" pos:end="29:55"><name pos:start="29:17" pos:end="29:31">serviceInstance</name> <operator pos:start="29:33" pos:end="29:33">=</operator> <call pos:start="29:35" pos:end="29:55"><name pos:start="29:35" pos:end="29:53">initServiceInstance</name><argument_list pos:start="29:54" pos:end="29:55">()</argument_list></call></expr>;</expr_stmt>
	</block_content>}</block></constructor>

	<function pos:start="32:9" pos:end="34:9"><type pos:start="32:9" pos:end="32:16"><specifier pos:start="32:9" pos:end="32:14">public</specifier> <name pos:start="32:16" pos:end="32:16">S</name></type> <name pos:start="32:18" pos:end="32:26">getServer</name><parameter_list pos:start="32:27" pos:end="32:28">()</parameter_list> <block pos:start="32:30" pos:end="34:9">{<block_content pos:start="33:17" pos:end="33:39">
		<return pos:start="33:17" pos:end="33:39">return <expr pos:start="33:24" pos:end="33:38"><name pos:start="33:24" pos:end="33:38">serviceInstance</name></expr>;</return>
	</block_content>}</block></function>

	<function pos:start="36:9" pos:end="42:9"><type pos:start="36:9" pos:end="36:19"><specifier pos:start="36:9" pos:end="36:14">public</specifier> <name pos:start="36:16" pos:end="36:19">void</name></type> <name pos:start="36:21" pos:end="36:32">startService</name><parameter_list pos:start="36:33" pos:end="36:34">()</parameter_list> <throws pos:start="36:36" pos:end="36:67">throws <argument pos:start="36:43" pos:end="36:67"><expr pos:start="36:43" pos:end="36:67"><name pos:start="36:43" pos:end="36:67">DronologyServiceException</name></expr></argument></throws> <block pos:start="36:69" pos:end="42:9">{<block_content pos:start="37:17" pos:end="41:17">
		<if_stmt pos:start="37:17" pos:end="41:17"><if pos:start="37:17" pos:end="41:17">if <condition pos:start="37:20" pos:end="37:57">(<expr pos:start="37:21" pos:end="37:56"><call pos:start="37:21" pos:end="37:56"><name pos:start="37:21" pos:end="37:43"><name pos:start="37:21" pos:end="37:29">isStarted</name><operator pos:start="37:30" pos:end="37:30">.</operator><name pos:start="37:31" pos:end="37:43">compareAndSet</name></name><argument_list pos:start="37:44" pos:end="37:56">(<argument pos:start="37:45" pos:end="37:49"><expr pos:start="37:45" pos:end="37:49"><literal type="boolean" pos:start="37:45" pos:end="37:49">false</literal></expr></argument>, <argument pos:start="37:52" pos:end="37:55"><expr pos:start="37:52" pos:end="37:55"><literal type="boolean" pos:start="37:52" pos:end="37:55">true</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="37:59" pos:end="41:17">{<block_content pos:start="39:25" pos:end="39:55">
			<comment type="line" pos:start="38:25" pos:end="38:100">// LOGGER.info("Service '" + this.getClass().getSimpleName() + "' started");</comment>
			<expr_stmt pos:start="39:25" pos:end="39:55"><expr pos:start="39:25" pos:end="39:54"><call pos:start="39:25" pos:end="39:54"><name pos:start="39:25" pos:end="39:52"><name pos:start="39:25" pos:end="39:39">serviceInstance</name><operator pos:start="39:40" pos:end="39:40">.</operator><name pos:start="39:41" pos:end="39:52">startService</name></name><argument_list pos:start="39:53" pos:end="39:54">()</argument_list></call></expr>;</expr_stmt>
			<comment type="line" pos:start="40:25" pos:end="40:69">// ServiceOrchestrator.registerService(this);</comment>
		</block_content>}</block></if></if_stmt>
	</block_content>}</block></function>

	<function pos:start="44:9" pos:end="50:9"><type pos:start="44:9" pos:end="44:19"><specifier pos:start="44:9" pos:end="44:14">public</specifier> <name pos:start="44:16" pos:end="44:19">void</name></type> <name pos:start="44:21" pos:end="44:31">stopService</name><parameter_list pos:start="44:32" pos:end="44:33">()</parameter_list> <throws pos:start="44:35" pos:end="44:66">throws <argument pos:start="44:42" pos:end="44:66"><expr pos:start="44:42" pos:end="44:66"><name pos:start="44:42" pos:end="44:66">DronologyServiceException</name></expr></argument></throws> <block pos:start="44:68" pos:end="50:9">{<block_content pos:start="45:17" pos:end="49:17">
		<if_stmt pos:start="45:17" pos:end="49:17"><if pos:start="45:17" pos:end="49:17">if <condition pos:start="45:20" pos:end="45:57">(<expr pos:start="45:21" pos:end="45:56"><call pos:start="45:21" pos:end="45:56"><name pos:start="45:21" pos:end="45:43"><name pos:start="45:21" pos:end="45:29">isStarted</name><operator pos:start="45:30" pos:end="45:30">.</operator><name pos:start="45:31" pos:end="45:43">compareAndSet</name></name><argument_list pos:start="45:44" pos:end="45:56">(<argument pos:start="45:45" pos:end="45:48"><expr pos:start="45:45" pos:end="45:48"><literal type="boolean" pos:start="45:45" pos:end="45:48">true</literal></expr></argument>, <argument pos:start="45:51" pos:end="45:55"><expr pos:start="45:51" pos:end="45:55"><literal type="boolean" pos:start="45:51" pos:end="45:55">false</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="45:59" pos:end="49:17">{<block_content pos:start="47:25" pos:end="47:54">
			<comment type="line" pos:start="46:25" pos:end="46:100">// LOGGER.info("Service '" + this.getClass().getSimpleName() + "' stopped");</comment>
			<expr_stmt pos:start="47:25" pos:end="47:54"><expr pos:start="47:25" pos:end="47:53"><call pos:start="47:25" pos:end="47:53"><name pos:start="47:25" pos:end="47:51"><name pos:start="47:25" pos:end="47:39">serviceInstance</name><operator pos:start="47:40" pos:end="47:40">.</operator><name pos:start="47:41" pos:end="47:51">stopService</name></name><argument_list pos:start="47:52" pos:end="47:53">()</argument_list></call></expr>;</expr_stmt>
			<comment type="line" pos:start="48:25" pos:end="48:71">// ServiceOrchestrator.unregisterService(this);</comment>
		</block_content>}</block></if></if_stmt>
	</block_content>}</block></function>

	<function pos:start="52:9" pos:end="65:9"><type pos:start="52:9" pos:end="52:19"><specifier pos:start="52:9" pos:end="52:14">public</specifier> <name pos:start="52:16" pos:end="52:19">void</name></type> <name pos:start="52:21" pos:end="52:34">restartService</name><parameter_list pos:start="52:35" pos:end="52:36">()</parameter_list> <throws pos:start="52:38" pos:end="52:69">throws <argument pos:start="52:45" pos:end="52:69"><expr pos:start="52:45" pos:end="52:69"><name pos:start="52:45" pos:end="52:69">DronologyServiceException</name></expr></argument></throws> <block pos:start="52:71" pos:end="65:9">{<block_content pos:start="53:17" pos:end="64:17">
		<expr_stmt pos:start="53:17" pos:end="53:72"><expr pos:start="53:17" pos:end="53:71"><call pos:start="53:17" pos:end="53:71"><name pos:start="53:17" pos:end="53:27"><name pos:start="53:17" pos:end="53:22">LOGGER</name><operator pos:start="53:23" pos:end="53:23">.</operator><name pos:start="53:24" pos:end="53:27">info</name></name><argument_list pos:start="53:28" pos:end="53:71">(<argument pos:start="53:29" pos:end="53:70"><expr pos:start="53:29" pos:end="53:70"><literal type="string" pos:start="53:29" pos:end="53:41">"Restarting "</literal> <operator pos:start="53:43" pos:end="53:43">+</operator> <call pos:start="53:45" pos:end="53:54"><name pos:start="53:45" pos:end="53:52">getClass</name><argument_list pos:start="53:53" pos:end="53:54">()</argument_list></call><operator pos:start="53:55" pos:end="53:55">.</operator><call pos:start="53:56" pos:end="53:70"><name pos:start="53:56" pos:end="53:68">getSimpleName</name><argument_list pos:start="53:69" pos:end="53:70">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<if_stmt pos:start="54:17" pos:end="64:17"><if pos:start="54:17" pos:end="56:17">if <condition pos:start="54:20" pos:end="54:37">(<expr pos:start="54:21" pos:end="54:36"><operator pos:start="54:21" pos:end="54:21">!</operator><call pos:start="54:22" pos:end="54:36"><name pos:start="54:22" pos:end="54:34"><name pos:start="54:22" pos:end="54:30">isStarted</name><operator pos:start="54:31" pos:end="54:31">.</operator><name pos:start="54:32" pos:end="54:34">get</name></name><argument_list pos:start="54:35" pos:end="54:36">()</argument_list></call></expr>)</condition> <block pos:start="54:39" pos:end="56:17">{<block_content pos:start="55:25" pos:end="55:39">
			<expr_stmt pos:start="55:25" pos:end="55:39"><expr pos:start="55:25" pos:end="55:38"><call pos:start="55:25" pos:end="55:38"><name pos:start="55:25" pos:end="55:36">startService</name><argument_list pos:start="55:37" pos:end="55:38">()</argument_list></call></expr>;</expr_stmt>
		</block_content>}</block></if> <else pos:start="56:19" pos:end="64:17">else <block pos:start="56:24" pos:end="64:17">{<block_content pos:start="57:25" pos:end="63:39">
			<expr_stmt pos:start="57:25" pos:end="57:38"><expr pos:start="57:25" pos:end="57:37"><call pos:start="57:25" pos:end="57:37"><name pos:start="57:25" pos:end="57:35">stopService</name><argument_list pos:start="57:36" pos:end="57:37">()</argument_list></call></expr>;</expr_stmt>
			<try pos:start="58:25" pos:end="62:25">try <block pos:start="58:29" pos:end="60:25">{<block_content pos:start="59:33" pos:end="59:50">
				<expr_stmt pos:start="59:33" pos:end="59:50"><expr pos:start="59:33" pos:end="59:49"><call pos:start="59:33" pos:end="59:49"><name pos:start="59:33" pos:end="59:44"><name pos:start="59:33" pos:end="59:38">Thread</name><operator pos:start="59:39" pos:end="59:39">.</operator><name pos:start="59:40" pos:end="59:44">sleep</name></name><argument_list pos:start="59:45" pos:end="59:49">(<argument pos:start="59:46" pos:end="59:48"><expr pos:start="59:46" pos:end="59:48"><literal type="number" pos:start="59:46" pos:end="59:48">300</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			</block_content>}</block> <catch pos:start="60:27" pos:end="62:25">catch <parameter_list pos:start="60:33" pos:end="60:56">(<parameter pos:start="60:34" pos:end="60:55"><decl pos:start="60:34" pos:end="60:55"><type pos:start="60:34" pos:end="60:55"><name pos:start="60:34" pos:end="60:53">InterruptedException</name></type> <name pos:start="60:55" pos:end="60:55">e</name></decl></parameter>)</parameter_list> <block pos:start="60:58" pos:end="62:25">{<block_content pos:start="61:33" pos:end="61:48">
				<expr_stmt pos:start="61:33" pos:end="61:48"><expr pos:start="61:33" pos:end="61:47"><call pos:start="61:33" pos:end="61:47"><name pos:start="61:33" pos:end="61:44"><name pos:start="61:33" pos:end="61:38">LOGGER</name><operator pos:start="61:39" pos:end="61:39">.</operator><name pos:start="61:40" pos:end="61:44">error</name></name><argument_list pos:start="61:45" pos:end="61:47">(<argument pos:start="61:46" pos:end="61:46"><expr pos:start="61:46" pos:end="61:46"><name pos:start="61:46" pos:end="61:46">e</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			</block_content>}</block></catch></try>
			<expr_stmt pos:start="63:25" pos:end="63:39"><expr pos:start="63:25" pos:end="63:38"><call pos:start="63:25" pos:end="63:38"><name pos:start="63:25" pos:end="63:36">startService</name><argument_list pos:start="63:37" pos:end="63:38">()</argument_list></call></expr>;</expr_stmt>
		</block_content>}</block></else></if_stmt>
	</block_content>}</block></function>

	<function pos:start="67:9" pos:end="70:9"><type pos:start="67:9" pos:end="67:22"><specifier pos:start="67:9" pos:end="67:14">public</specifier> <name pos:start="67:16" pos:end="67:22">boolean</name></type> <name pos:start="67:24" pos:end="67:41">addServiceListener</name><parameter_list pos:start="67:42" pos:end="67:75">(<parameter pos:start="67:43" pos:end="67:74"><decl pos:start="67:43" pos:end="67:74"><type pos:start="67:43" pos:end="67:58"><name pos:start="67:43" pos:end="67:58">IServiceListener</name></type> <name pos:start="67:60" pos:end="67:74">processListener</name></decl></parameter>)</parameter_list> <block pos:start="67:77" pos:end="70:9">{<block_content pos:start="68:17" pos:end="68:75">
		<return pos:start="68:17" pos:end="68:75">return <expr pos:start="68:24" pos:end="68:74"><call pos:start="68:24" pos:end="68:74"><name pos:start="68:24" pos:end="68:57"><name pos:start="68:24" pos:end="68:38">serviceInstance</name><operator pos:start="68:39" pos:end="68:39">.</operator><name pos:start="68:40" pos:end="68:57">addServiceListener</name></name><argument_list pos:start="68:58" pos:end="68:74">(<argument pos:start="68:59" pos:end="68:73"><expr pos:start="68:59" pos:end="68:73"><name pos:start="68:59" pos:end="68:73">processListener</name></expr></argument>)</argument_list></call></expr>;</return>

	</block_content>}</block></function>

	<function pos:start="72:9" pos:end="74:9"><type pos:start="72:9" pos:end="72:22"><specifier pos:start="72:9" pos:end="72:14">public</specifier> <name pos:start="72:16" pos:end="72:22">boolean</name></type> <name pos:start="72:24" pos:end="72:44">removeServiceListener</name><parameter_list pos:start="72:45" pos:end="72:78">(<parameter pos:start="72:46" pos:end="72:77"><decl pos:start="72:46" pos:end="72:77"><type pos:start="72:46" pos:end="72:61"><name pos:start="72:46" pos:end="72:61">IServiceListener</name></type> <name pos:start="72:63" pos:end="72:77">processListener</name></decl></parameter>)</parameter_list> <block pos:start="72:80" pos:end="74:9">{<block_content pos:start="73:17" pos:end="73:78">
		<return pos:start="73:17" pos:end="73:78">return <expr pos:start="73:24" pos:end="73:77"><call pos:start="73:24" pos:end="73:77"><name pos:start="73:24" pos:end="73:60"><name pos:start="73:24" pos:end="73:38">serviceInstance</name><operator pos:start="73:39" pos:end="73:39">.</operator><name pos:start="73:40" pos:end="73:60">remoteServiceListener</name></name><argument_list pos:start="73:61" pos:end="73:77">(<argument pos:start="73:62" pos:end="73:76"><expr pos:start="73:62" pos:end="73:76"><name pos:start="73:62" pos:end="73:76">processListener</name></expr></argument>)</argument_list></call></expr>;</return>
	</block_content>}</block></function>

	<function pos:start="76:9" pos:end="78:9"><type pos:start="76:9" pos:end="76:26"><specifier pos:start="76:9" pos:end="76:14">public</specifier> <name pos:start="76:16" pos:end="76:26">ServiceInfo</name></type> <name pos:start="76:28" pos:end="76:40">getServerInfo</name><parameter_list pos:start="76:41" pos:end="76:42">()</parameter_list> <block pos:start="76:44" pos:end="78:9">{<block_content pos:start="77:17" pos:end="77:56">
		<return pos:start="77:17" pos:end="77:56">return <expr pos:start="77:24" pos:end="77:55"><call pos:start="77:24" pos:end="77:55"><name pos:start="77:24" pos:end="77:53"><name pos:start="77:24" pos:end="77:38">serviceInstance</name><operator pos:start="77:39" pos:end="77:39">.</operator><name pos:start="77:40" pos:end="77:53">getServiceInfo</name></name><argument_list pos:start="77:54" pos:end="77:55">()</argument_list></call></expr>;</return>
	</block_content>}</block></function>

	<function pos:start="80:9" pos:end="86:9"><type pos:start="80:9" pos:end="80:26"><specifier pos:start="80:9" pos:end="80:14">public</specifier> <specifier pos:start="80:16" pos:end="80:21">static</specifier> <name pos:start="80:23" pos:end="80:26">void</name></type> <name pos:start="80:28" pos:end="80:55">addUniversialServiceListener</name><parameter_list pos:start="80:56" pos:end="80:89">(<parameter pos:start="80:57" pos:end="80:88"><decl pos:start="80:57" pos:end="80:88"><type pos:start="80:57" pos:end="80:72"><name pos:start="80:57" pos:end="80:72">IServiceListener</name></type> <name pos:start="80:74" pos:end="80:88">processListener</name></decl></parameter>)</parameter_list> <block pos:start="80:91" pos:end="86:9">{<block_content pos:start="81:17" pos:end="85:17">
		<synchronized pos:start="81:17" pos:end="85:17">synchronized <init pos:start="81:30" pos:end="81:39">(<expr pos:start="81:31" pos:end="81:38"><name pos:start="81:31" pos:end="81:38">services</name></expr>)</init> <block pos:start="81:41" pos:end="85:17">{<block_content pos:start="82:25" pos:end="84:25">
			<for pos:start="82:25" pos:end="84:25">for <control pos:start="82:29" pos:end="82:70">(<init pos:start="82:30" pos:end="82:69"><decl pos:start="82:30" pos:end="82:69"><type pos:start="82:30" pos:end="82:50"><name pos:start="82:30" pos:end="82:50">AbstractServerService</name></type> <name pos:start="82:52" pos:end="82:58">service</name> <range pos:start="82:60" pos:end="82:69">: <expr pos:start="82:62" pos:end="82:69"><name pos:start="82:62" pos:end="82:69">services</name></expr></range></decl></init>)</control> <block pos:start="82:72" pos:end="84:25">{<block_content pos:start="83:33" pos:end="83:92">
				<expr_stmt pos:start="83:33" pos:end="83:92"><expr pos:start="83:33" pos:end="83:91"><call pos:start="83:33" pos:end="83:91"><name pos:start="83:33" pos:end="83:74"><name pos:start="83:33" pos:end="83:39">service</name><operator pos:start="83:40" pos:end="83:40">.</operator><name pos:start="83:41" pos:end="83:55">serviceInstance</name><operator pos:start="83:56" pos:end="83:56">.</operator><name pos:start="83:57" pos:end="83:74">addServiceListener</name></name><argument_list pos:start="83:75" pos:end="83:91">(<argument pos:start="83:76" pos:end="83:90"><expr pos:start="83:76" pos:end="83:90"><name pos:start="83:76" pos:end="83:90">processListener</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			</block_content>}</block></for>
		</block_content>}</block></synchronized>
	</block_content>}</block></function>

	<function pos:start="88:9" pos:end="91:9"><type pos:start="88:9" pos:end="88:26"><specifier pos:start="88:9" pos:end="88:14">public</specifier> <specifier pos:start="88:16" pos:end="88:21">static</specifier> <name pos:start="88:23" pos:end="88:26">void</name></type> <name pos:start="88:28" pos:end="88:39">setWorkspace</name><parameter_list pos:start="88:40" pos:end="88:63">(<parameter pos:start="88:41" pos:end="88:62"><decl pos:start="88:41" pos:end="88:62"><type pos:start="88:41" pos:end="88:46"><name pos:start="88:41" pos:end="88:46">String</name></type> <name pos:start="88:48" pos:end="88:62">customWorkspace</name></decl></parameter>)</parameter_list> <block pos:start="88:65" pos:end="91:9">{<block_content pos:start="89:17" pos:end="90:72">
		<expr_stmt pos:start="89:17" pos:end="89:52"><expr pos:start="89:17" pos:end="89:51"><call pos:start="89:17" pos:end="89:51"><name pos:start="89:17" pos:end="89:34"><name pos:start="89:17" pos:end="89:24">NullUtil</name><operator pos:start="89:25" pos:end="89:25">.</operator><name pos:start="89:26" pos:end="89:34">checkNull</name></name><argument_list pos:start="89:35" pos:end="89:51">(<argument pos:start="89:36" pos:end="89:50"><expr pos:start="89:36" pos:end="89:50"><name pos:start="89:36" pos:end="89:50">customWorkspace</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt pos:start="90:17" pos:end="90:72"><expr pos:start="90:17" pos:end="90:71"><name pos:start="90:17" pos:end="90:53"><name pos:start="90:17" pos:end="90:37">AbstractServerService</name><operator pos:start="90:38" pos:end="90:38">.</operator><name pos:start="90:39" pos:end="90:53">customWorkspace</name></name> <operator pos:start="90:55" pos:end="90:55">=</operator> <name pos:start="90:57" pos:end="90:71">customWorkspace</name></expr>;</expr_stmt>
	</block_content>}</block></function>
	

	<function pos:start="94:9" pos:end="96:9"><type pos:start="94:9" pos:end="94:28"><specifier pos:start="94:9" pos:end="94:14">public</specifier> <specifier pos:start="94:16" pos:end="94:21">static</specifier> <name pos:start="94:23" pos:end="94:28">String</name></type> <name pos:start="94:30" pos:end="94:41">getWorkspace</name><parameter_list pos:start="94:42" pos:end="94:43">()</parameter_list> <block pos:start="94:45" pos:end="96:9">{<block_content pos:start="95:17" pos:end="95:39">
		<return pos:start="95:17" pos:end="95:39">return <expr pos:start="95:24" pos:end="95:38"><name pos:start="95:24" pos:end="95:38">customWorkspace</name></expr>;</return>
	</block_content>}</block></function>

	<function pos:start="98:9" pos:end="104:9"><type pos:start="98:9" pos:end="98:26"><specifier pos:start="98:9" pos:end="98:14">public</specifier> <specifier pos:start="98:16" pos:end="98:21">static</specifier> <name pos:start="98:23" pos:end="98:26">void</name></type> <name pos:start="98:28" pos:end="98:58">removeUniversialServiceListener</name><parameter_list pos:start="98:59" pos:end="98:92">(<parameter pos:start="98:60" pos:end="98:91"><decl pos:start="98:60" pos:end="98:91"><type pos:start="98:60" pos:end="98:75"><name pos:start="98:60" pos:end="98:75">IServiceListener</name></type> <name pos:start="98:77" pos:end="98:91">processListener</name></decl></parameter>)</parameter_list> <block pos:start="98:94" pos:end="104:9">{<block_content pos:start="99:17" pos:end="103:17">
		<synchronized pos:start="99:17" pos:end="103:17">synchronized <init pos:start="99:30" pos:end="99:39">(<expr pos:start="99:31" pos:end="99:38"><name pos:start="99:31" pos:end="99:38">services</name></expr>)</init> <block pos:start="99:41" pos:end="103:17">{<block_content pos:start="100:25" pos:end="102:25">
			<for pos:start="100:25" pos:end="102:25">for <control pos:start="100:29" pos:end="100:70">(<init pos:start="100:30" pos:end="100:69"><decl pos:start="100:30" pos:end="100:69"><type pos:start="100:30" pos:end="100:50"><name pos:start="100:30" pos:end="100:50">AbstractServerService</name></type> <name pos:start="100:52" pos:end="100:58">service</name> <range pos:start="100:60" pos:end="100:69">: <expr pos:start="100:62" pos:end="100:69"><name pos:start="100:62" pos:end="100:69">services</name></expr></range></decl></init>)</control> <block pos:start="100:72" pos:end="102:25">{<block_content pos:start="101:33" pos:end="101:92">
				<expr_stmt pos:start="101:33" pos:end="101:92"><expr pos:start="101:33" pos:end="101:91"><call pos:start="101:33" pos:end="101:91"><name pos:start="101:33" pos:end="101:74"><name pos:start="101:33" pos:end="101:39">service</name><operator pos:start="101:40" pos:end="101:40">.</operator><name pos:start="101:41" pos:end="101:55">serviceInstance</name><operator pos:start="101:56" pos:end="101:56">.</operator><name pos:start="101:57" pos:end="101:74">addServiceListener</name></name><argument_list pos:start="101:75" pos:end="101:91">(<argument pos:start="101:76" pos:end="101:90"><expr pos:start="101:76" pos:end="101:90"><name pos:start="101:76" pos:end="101:90">processListener</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			</block_content>}</block></for>
		</block_content>}</block></synchronized>
	</block_content>}</block></function>

	<function_decl pos:start="106:9" pos:end="106:51"><type pos:start="106:9" pos:end="106:28"><specifier pos:start="106:9" pos:end="106:17">protected</specifier> <specifier pos:start="106:19" pos:end="106:26">abstract</specifier> <name pos:start="106:28" pos:end="106:28">S</name></type> <name pos:start="106:30" pos:end="106:48">initServiceInstance</name><parameter_list pos:start="106:49" pos:end="106:50">()</parameter_list>;</function_decl>

	<function pos:start="108:9" pos:end="121:9"><type pos:start="108:9" pos:end="108:39"><specifier pos:start="108:9" pos:end="108:14">public</specifier> <specifier pos:start="108:16" pos:end="108:21">static</specifier> <name pos:start="108:23" pos:end="108:39"><name pos:start="108:23" pos:end="108:26">List</name><argument_list type="generic" pos:start="108:27" pos:end="108:39">&lt;<argument pos:start="108:28" pos:end="108:38"><name pos:start="108:28" pos:end="108:38">ServiceInfo</name></argument>&gt;</argument_list></name></type> <name pos:start="108:41" pos:end="108:55">getServiceInfos</name><parameter_list pos:start="108:56" pos:end="108:57">()</parameter_list> <throws pos:start="108:59" pos:end="108:90">throws <argument pos:start="108:66" pos:end="108:90"><expr pos:start="108:66" pos:end="108:90"><name pos:start="108:66" pos:end="108:90">DronologyServiceException</name></expr></argument></throws> <block pos:start="108:92" pos:end="121:9">{<block_content pos:start="109:17" pos:end="120:60">
		<decl_stmt pos:start="109:17" pos:end="109:61"><decl pos:start="109:17" pos:end="109:60"><type pos:start="109:17" pos:end="109:33"><name pos:start="109:17" pos:end="109:33"><name pos:start="109:17" pos:end="109:20">List</name><argument_list type="generic" pos:start="109:21" pos:end="109:33">&lt;<argument pos:start="109:22" pos:end="109:32"><name pos:start="109:22" pos:end="109:32">ServiceInfo</name></argument>&gt;</argument_list></name></type> <name pos:start="109:35" pos:end="109:40">sInfos</name> <init pos:start="109:42" pos:end="109:60">= <expr pos:start="109:44" pos:end="109:60"><operator pos:start="109:44" pos:end="109:46">new</operator> <call pos:start="109:48" pos:end="109:60"><name pos:start="109:48" pos:end="109:58"><name pos:start="109:48" pos:end="109:56">ArrayList</name><argument_list type="generic" pos:start="109:57" pos:end="109:58">&lt;&gt;</argument_list></name><argument_list pos:start="109:59" pos:end="109:60">()</argument_list></call></expr></init></decl>;</decl_stmt>
		<synchronized pos:start="110:17" pos:end="119:17">synchronized <init pos:start="110:30" pos:end="110:39">(<expr pos:start="110:31" pos:end="110:38"><name pos:start="110:31" pos:end="110:38">services</name></expr>)</init> <block pos:start="110:41" pos:end="119:17">{<block_content pos:start="111:25" pos:end="118:25">
			<for pos:start="111:25" pos:end="118:25">for <control pos:start="111:29" pos:end="111:70">(<init pos:start="111:30" pos:end="111:69"><decl pos:start="111:30" pos:end="111:69"><type pos:start="111:30" pos:end="111:50"><name pos:start="111:30" pos:end="111:50">AbstractServerService</name></type> <name pos:start="111:52" pos:end="111:58">service</name> <range pos:start="111:60" pos:end="111:69">: <expr pos:start="111:62" pos:end="111:69"><name pos:start="111:62" pos:end="111:69">services</name></expr></range></decl></init>)</control> <block pos:start="111:72" pos:end="118:25">{<block_content pos:start="112:33" pos:end="117:50">
				<decl_stmt pos:start="112:33" pos:end="112:76"><decl pos:start="112:33" pos:end="112:75"><type pos:start="112:33" pos:end="112:43"><name pos:start="112:33" pos:end="112:43">ServiceInfo</name></type> <name pos:start="112:45" pos:end="112:49">sInfo</name> <init pos:start="112:51" pos:end="112:75">= <expr pos:start="112:53" pos:end="112:75"><call pos:start="112:53" pos:end="112:75"><name pos:start="112:53" pos:end="112:73"><name pos:start="112:53" pos:end="112:59">service</name><operator pos:start="112:60" pos:end="112:60">.</operator><name pos:start="112:61" pos:end="112:73">getServerInfo</name></name><argument_list pos:start="112:74" pos:end="112:75">()</argument_list></call></expr></init></decl>;</decl_stmt>
				<if_stmt pos:start="113:33" pos:end="116:33"><if pos:start="113:33" pos:end="116:33">if <condition pos:start="113:36" pos:end="113:50">(<expr pos:start="113:37" pos:end="113:49"><name pos:start="113:37" pos:end="113:41">sInfo</name> <operator pos:start="113:43" pos:end="113:44">==</operator> <literal type="null" pos:start="113:46" pos:end="113:49">null</literal></expr>)</condition> <block pos:start="113:52" pos:end="116:33">{<block_content pos:start="114:41" pos:end="115:100">
					<throw pos:start="114:41" pos:end="115:100">throw <expr pos:start="114:47" pos:end="115:99"><operator pos:start="114:47" pos:end="114:49">new</operator> <call pos:start="114:51" pos:end="115:99"><name pos:start="114:51" pos:end="114:75">DronologyServiceException</name><argument_list pos:start="114:76" pos:end="115:99">(<argument pos:start="114:77" pos:end="115:98"><expr pos:start="114:77" pos:end="115:98"><literal type="string" pos:start="114:77" pos:end="114:121">"Error retrieving service information from '"</literal>
							<operator pos:start="115:57" pos:end="115:57">+</operator> <call pos:start="115:59" pos:end="115:76"><name pos:start="115:59" pos:end="115:74"><name pos:start="115:59" pos:end="115:65">service</name><operator pos:start="115:66" pos:end="115:66">.</operator><name pos:start="115:67" pos:end="115:74">getClass</name></name><argument_list pos:start="115:75" pos:end="115:76">()</argument_list></call><operator pos:start="115:77" pos:end="115:77">.</operator><call pos:start="115:78" pos:end="115:92"><name pos:start="115:78" pos:end="115:90">getSimpleName</name><argument_list pos:start="115:91" pos:end="115:92">()</argument_list></call> <operator pos:start="115:94" pos:end="115:94">+</operator> <literal type="string" pos:start="115:96" pos:end="115:98">"'"</literal></expr></argument>)</argument_list></call></expr>;</throw>
				</block_content>}</block></if></if_stmt>
				<expr_stmt pos:start="117:33" pos:end="117:50"><expr pos:start="117:33" pos:end="117:49"><call pos:start="117:33" pos:end="117:49"><name pos:start="117:33" pos:end="117:42"><name pos:start="117:33" pos:end="117:38">sInfos</name><operator pos:start="117:39" pos:end="117:39">.</operator><name pos:start="117:40" pos:end="117:42">add</name></name><argument_list pos:start="117:43" pos:end="117:49">(<argument pos:start="117:44" pos:end="117:48"><expr pos:start="117:44" pos:end="117:48"><name pos:start="117:44" pos:end="117:48">sInfo</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			</block_content>}</block></for>
		</block_content>}</block></synchronized>
		<return pos:start="120:17" pos:end="120:60">return <expr pos:start="120:24" pos:end="120:59"><call pos:start="120:24" pos:end="120:59"><name pos:start="120:24" pos:end="120:51"><name pos:start="120:24" pos:end="120:34">Collections</name><operator pos:start="120:35" pos:end="120:35">.</operator><name pos:start="120:36" pos:end="120:51">unmodifiableList</name></name><argument_list pos:start="120:52" pos:end="120:59">(<argument pos:start="120:53" pos:end="120:58"><expr pos:start="120:53" pos:end="120:58"><name pos:start="120:53" pos:end="120:58">sInfos</name></expr></argument>)</argument_list></call></expr>;</return>
	</block_content>}</block></function>

	<function pos:start="123:9" pos:end="138:9"><type pos:start="123:9" pos:end="123:39"><specifier pos:start="123:9" pos:end="123:14">public</specifier> <specifier pos:start="123:16" pos:end="123:21">static</specifier> <name pos:start="123:23" pos:end="123:39"><name pos:start="123:23" pos:end="123:26">List</name><argument_list type="generic" pos:start="123:27" pos:end="123:39">&lt;<argument pos:start="123:28" pos:end="123:38"><name pos:start="123:28" pos:end="123:38">ServiceInfo</name></argument>&gt;</argument_list></name></type> <name pos:start="123:41" pos:end="123:59">getFileServiceInfos</name><parameter_list pos:start="123:60" pos:end="123:61">()</parameter_list> <throws pos:start="123:63" pos:end="123:94">throws <argument pos:start="123:70" pos:end="123:94"><expr pos:start="123:70" pos:end="123:94"><name pos:start="123:70" pos:end="123:94">DronologyServiceException</name></expr></argument></throws> <block pos:start="123:96" pos:end="138:9">{<block_content pos:start="124:17" pos:end="137:60">
		<decl_stmt pos:start="124:17" pos:end="124:61"><decl pos:start="124:17" pos:end="124:60"><type pos:start="124:17" pos:end="124:33"><name pos:start="124:17" pos:end="124:33"><name pos:start="124:17" pos:end="124:20">List</name><argument_list type="generic" pos:start="124:21" pos:end="124:33">&lt;<argument pos:start="124:22" pos:end="124:32"><name pos:start="124:22" pos:end="124:32">ServiceInfo</name></argument>&gt;</argument_list></name></type> <name pos:start="124:35" pos:end="124:40">sInfos</name> <init pos:start="124:42" pos:end="124:60">= <expr pos:start="124:44" pos:end="124:60"><operator pos:start="124:44" pos:end="124:46">new</operator> <call pos:start="124:48" pos:end="124:60"><name pos:start="124:48" pos:end="124:58"><name pos:start="124:48" pos:end="124:56">ArrayList</name><argument_list type="generic" pos:start="124:57" pos:end="124:58">&lt;&gt;</argument_list></name><argument_list pos:start="124:59" pos:end="124:60">()</argument_list></call></expr></init></decl>;</decl_stmt>
		<synchronized pos:start="125:17" pos:end="136:17">synchronized <init pos:start="125:30" pos:end="125:39">(<expr pos:start="125:31" pos:end="125:38"><name pos:start="125:31" pos:end="125:38">services</name></expr>)</init> <block pos:start="125:41" pos:end="136:17">{<block_content pos:start="126:25" pos:end="135:25">
			<for pos:start="126:25" pos:end="135:25">for <control pos:start="126:29" pos:end="126:70">(<init pos:start="126:30" pos:end="126:69"><decl pos:start="126:30" pos:end="126:69"><type pos:start="126:30" pos:end="126:50"><name pos:start="126:30" pos:end="126:50">AbstractServerService</name></type> <name pos:start="126:52" pos:end="126:58">service</name> <range pos:start="126:60" pos:end="126:69">: <expr pos:start="126:62" pos:end="126:69"><name pos:start="126:62" pos:end="126:69">services</name></expr></range></decl></init>)</control> <block pos:start="126:72" pos:end="135:25">{<block_content pos:start="127:33" pos:end="134:33">
				<decl_stmt pos:start="127:33" pos:end="127:76"><decl pos:start="127:33" pos:end="127:75"><type pos:start="127:33" pos:end="127:43"><name pos:start="127:33" pos:end="127:43">ServiceInfo</name></type> <name pos:start="127:45" pos:end="127:49">sInfo</name> <init pos:start="127:51" pos:end="127:75">= <expr pos:start="127:53" pos:end="127:75"><call pos:start="127:53" pos:end="127:75"><name pos:start="127:53" pos:end="127:73"><name pos:start="127:53" pos:end="127:59">service</name><operator pos:start="127:60" pos:end="127:60">.</operator><name pos:start="127:61" pos:end="127:73">getServerInfo</name></name><argument_list pos:start="127:74" pos:end="127:75">()</argument_list></call></expr></init></decl>;</decl_stmt>
				<if_stmt pos:start="128:33" pos:end="131:33"><if pos:start="128:33" pos:end="131:33">if <condition pos:start="128:36" pos:end="128:50">(<expr pos:start="128:37" pos:end="128:49"><name pos:start="128:37" pos:end="128:41">sInfo</name> <operator pos:start="128:43" pos:end="128:44">==</operator> <literal type="null" pos:start="128:46" pos:end="128:49">null</literal></expr>)</condition> <block pos:start="128:52" pos:end="131:33">{<block_content pos:start="129:41" pos:end="130:100">
					<throw pos:start="129:41" pos:end="130:100">throw <expr pos:start="129:47" pos:end="130:99"><operator pos:start="129:47" pos:end="129:49">new</operator> <call pos:start="129:51" pos:end="130:99"><name pos:start="129:51" pos:end="129:75">DronologyServiceException</name><argument_list pos:start="129:76" pos:end="130:99">(<argument pos:start="129:77" pos:end="130:98"><expr pos:start="129:77" pos:end="130:98"><literal type="string" pos:start="129:77" pos:end="129:121">"Error retrieving service information from '"</literal>
							<operator pos:start="130:57" pos:end="130:57">+</operator> <call pos:start="130:59" pos:end="130:76"><name pos:start="130:59" pos:end="130:74"><name pos:start="130:59" pos:end="130:65">service</name><operator pos:start="130:66" pos:end="130:66">.</operator><name pos:start="130:67" pos:end="130:74">getClass</name></name><argument_list pos:start="130:75" pos:end="130:76">()</argument_list></call><operator pos:start="130:77" pos:end="130:77">.</operator><call pos:start="130:78" pos:end="130:92"><name pos:start="130:78" pos:end="130:90">getSimpleName</name><argument_list pos:start="130:91" pos:end="130:92">()</argument_list></call> <operator pos:start="130:94" pos:end="130:94">+</operator> <literal type="string" pos:start="130:96" pos:end="130:98">"'"</literal></expr></argument>)</argument_list></call></expr>;</throw>
				</block_content>}</block></if></if_stmt>
				<if_stmt pos:start="132:33" pos:end="134:33"><if pos:start="132:33" pos:end="134:33">if <condition pos:start="132:36" pos:end="132:95">(<expr pos:start="132:37" pos:end="132:94"><name pos:start="132:37" pos:end="132:43">service</name> <operator pos:start="132:45" pos:end="132:54">instanceof</operator> <name pos:start="132:56" pos:end="132:94"><name pos:start="132:56" pos:end="132:88">AbstractFileTransmitServerService</name><argument_list type="generic" pos:start="132:89" pos:end="132:94">&lt;<argument pos:start="132:90" pos:end="132:90"><name pos:start="132:90" pos:end="132:90">?</name></argument>, <argument pos:start="132:93" pos:end="132:93"><name pos:start="132:93" pos:end="132:93">?</name></argument>&gt;</argument_list></name></expr>)</condition> <block pos:start="132:97" pos:end="134:33">{<block_content pos:start="133:41" pos:end="133:58">
					<expr_stmt pos:start="133:41" pos:end="133:58"><expr pos:start="133:41" pos:end="133:57"><call pos:start="133:41" pos:end="133:57"><name pos:start="133:41" pos:end="133:50"><name pos:start="133:41" pos:end="133:46">sInfos</name><operator pos:start="133:47" pos:end="133:47">.</operator><name pos:start="133:48" pos:end="133:50">add</name></name><argument_list pos:start="133:51" pos:end="133:57">(<argument pos:start="133:52" pos:end="133:56"><expr pos:start="133:52" pos:end="133:56"><name pos:start="133:52" pos:end="133:56">sInfo</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				</block_content>}</block></if></if_stmt>
			</block_content>}</block></for>
		</block_content>}</block></synchronized>
		<return pos:start="137:17" pos:end="137:60">return <expr pos:start="137:24" pos:end="137:59"><call pos:start="137:24" pos:end="137:59"><name pos:start="137:24" pos:end="137:51"><name pos:start="137:24" pos:end="137:34">Collections</name><operator pos:start="137:35" pos:end="137:35">.</operator><name pos:start="137:36" pos:end="137:51">unmodifiableList</name></name><argument_list pos:start="137:52" pos:end="137:59">(<argument pos:start="137:53" pos:end="137:58"><expr pos:start="137:53" pos:end="137:58"><name pos:start="137:53" pos:end="137:58">sInfos</name></expr></argument>)</argument_list></call></expr>;</return>
	</block_content>}</block></function>

	<function pos:start="140:9" pos:end="148:9"><type pos:start="140:9" pos:end="140:26"><specifier pos:start="140:9" pos:end="140:14">public</specifier> <specifier pos:start="140:16" pos:end="140:21">static</specifier> <name pos:start="140:23" pos:end="140:26">void</name></type> <name pos:start="140:28" pos:end="140:34">stopAll</name><parameter_list pos:start="140:35" pos:end="140:36">()</parameter_list> <block pos:start="140:38" pos:end="148:9">{<block_content pos:start="141:17" pos:end="147:17">
		<for pos:start="141:17" pos:end="147:17">for <control pos:start="141:21" pos:end="141:62">(<init pos:start="141:22" pos:end="141:61"><decl pos:start="141:22" pos:end="141:61"><type pos:start="141:22" pos:end="141:42"><name pos:start="141:22" pos:end="141:42">AbstractServerService</name></type> <name pos:start="141:44" pos:end="141:50">service</name> <range pos:start="141:52" pos:end="141:61">: <expr pos:start="141:54" pos:end="141:61"><name pos:start="141:54" pos:end="141:61">services</name></expr></range></decl></init>)</control> <block pos:start="141:64" pos:end="147:17">{<block_content pos:start="142:25" pos:end="146:25">
			<try pos:start="142:25" pos:end="146:25">try <block pos:start="142:29" pos:end="144:25">{<block_content pos:start="143:33" pos:end="143:54">
				<expr_stmt pos:start="143:33" pos:end="143:54"><expr pos:start="143:33" pos:end="143:53"><call pos:start="143:33" pos:end="143:53"><name pos:start="143:33" pos:end="143:51"><name pos:start="143:33" pos:end="143:39">service</name><operator pos:start="143:40" pos:end="143:40">.</operator><name pos:start="143:41" pos:end="143:51">stopService</name></name><argument_list pos:start="143:52" pos:end="143:53">()</argument_list></call></expr>;</expr_stmt>
			</block_content>}</block> <catch pos:start="144:27" pos:end="146:25">catch <parameter_list pos:start="144:33" pos:end="144:61">(<parameter pos:start="144:34" pos:end="144:60"><decl pos:start="144:34" pos:end="144:60"><type pos:start="144:34" pos:end="144:60"><name pos:start="144:34" pos:end="144:58">DronologyServiceException</name></type> <name pos:start="144:60" pos:end="144:60">e</name></decl></parameter>)</parameter_list> <block pos:start="144:63" pos:end="146:25">{<block_content pos:start="145:33" pos:end="145:48">
				<expr_stmt pos:start="145:33" pos:end="145:48"><expr pos:start="145:33" pos:end="145:47"><call pos:start="145:33" pos:end="145:47"><name pos:start="145:33" pos:end="145:44"><name pos:start="145:33" pos:end="145:38">LOGGER</name><operator pos:start="145:39" pos:end="145:39">.</operator><name pos:start="145:40" pos:end="145:44">error</name></name><argument_list pos:start="145:45" pos:end="145:47">(<argument pos:start="145:46" pos:end="145:46"><expr pos:start="145:46" pos:end="145:46"><name pos:start="145:46" pos:end="145:46">e</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			</block_content>}</block></catch></try>
		</block_content>}</block></for>
	</block_content>}</block></function>

	<function pos:start="150:9" pos:end="158:9"><type pos:start="150:9" pos:end="150:26"><specifier pos:start="150:9" pos:end="150:14">public</specifier> <specifier pos:start="150:16" pos:end="150:21">static</specifier> <name pos:start="150:23" pos:end="150:26">void</name></type> <name pos:start="150:28" pos:end="150:37">restartAll</name><parameter_list pos:start="150:38" pos:end="150:39">()</parameter_list> <block pos:start="150:41" pos:end="158:9">{<block_content pos:start="151:17" pos:end="157:17">
		<for pos:start="151:17" pos:end="157:17">for <control pos:start="151:21" pos:end="151:62">(<init pos:start="151:22" pos:end="151:61"><decl pos:start="151:22" pos:end="151:61"><type pos:start="151:22" pos:end="151:42"><name pos:start="151:22" pos:end="151:42">AbstractServerService</name></type> <name pos:start="151:44" pos:end="151:50">service</name> <range pos:start="151:52" pos:end="151:61">: <expr pos:start="151:54" pos:end="151:61"><name pos:start="151:54" pos:end="151:61">services</name></expr></range></decl></init>)</control> <block pos:start="151:64" pos:end="157:17">{<block_content pos:start="152:25" pos:end="156:25">
			<try pos:start="152:25" pos:end="156:25">try <block pos:start="152:29" pos:end="154:25">{<block_content pos:start="153:33" pos:end="153:57">
				<expr_stmt pos:start="153:33" pos:end="153:57"><expr pos:start="153:33" pos:end="153:56"><call pos:start="153:33" pos:end="153:56"><name pos:start="153:33" pos:end="153:54"><name pos:start="153:33" pos:end="153:39">service</name><operator pos:start="153:40" pos:end="153:40">.</operator><name pos:start="153:41" pos:end="153:54">restartService</name></name><argument_list pos:start="153:55" pos:end="153:56">()</argument_list></call></expr>;</expr_stmt>
			</block_content>}</block> <catch pos:start="154:27" pos:end="156:25">catch <parameter_list pos:start="154:33" pos:end="154:61">(<parameter pos:start="154:34" pos:end="154:60"><decl pos:start="154:34" pos:end="154:60"><type pos:start="154:34" pos:end="154:60"><name pos:start="154:34" pos:end="154:58">DronologyServiceException</name></type> <name pos:start="154:60" pos:end="154:60">e</name></decl></parameter>)</parameter_list> <block pos:start="154:63" pos:end="156:25">{<block_content pos:start="155:33" pos:end="155:48">
				<expr_stmt pos:start="155:33" pos:end="155:48"><expr pos:start="155:33" pos:end="155:47"><call pos:start="155:33" pos:end="155:47"><name pos:start="155:33" pos:end="155:44"><name pos:start="155:33" pos:end="155:38">LOGGER</name><operator pos:start="155:39" pos:end="155:39">.</operator><name pos:start="155:40" pos:end="155:44">error</name></name><argument_list pos:start="155:45" pos:end="155:47">(<argument pos:start="155:46" pos:end="155:46"><expr pos:start="155:46" pos:end="155:46"><name pos:start="155:46" pos:end="155:46">e</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			</block_content>}</block></catch></try>
		</block_content>}</block></for>
	</block_content>}</block></function>

	<function pos:start="160:9" pos:end="167:9"><type pos:start="160:9" pos:end="160:39"><specifier pos:start="160:9" pos:end="160:17">protected</specifier> <name pos:start="160:19" pos:end="160:39">AbstractServerService</name></type> <name pos:start="160:41" pos:end="160:50">getService</name><parameter_list pos:start="160:51" pos:end="160:71">(<parameter pos:start="160:52" pos:end="160:70"><decl pos:start="160:52" pos:end="160:70"><type pos:start="160:52" pos:end="160:57"><name pos:start="160:52" pos:end="160:57">String</name></type> <name pos:start="160:59" pos:end="160:70">serviceClass</name></decl></parameter>)</parameter_list> <throws pos:start="160:73" pos:end="160:104">throws <argument pos:start="160:80" pos:end="160:104"><expr pos:start="160:80" pos:end="160:104"><name pos:start="160:80" pos:end="160:104">DronologyServiceException</name></expr></argument></throws> <block pos:start="160:106" pos:end="167:9">{<block_content pos:start="161:17" pos:end="166:97">
		<for pos:start="161:17" pos:end="165:17">for <control pos:start="161:21" pos:end="161:62">(<init pos:start="161:22" pos:end="161:61"><decl pos:start="161:22" pos:end="161:61"><type pos:start="161:22" pos:end="161:42"><name pos:start="161:22" pos:end="161:42">AbstractServerService</name></type> <name pos:start="161:44" pos:end="161:50">service</name> <range pos:start="161:52" pos:end="161:61">: <expr pos:start="161:54" pos:end="161:61"><name pos:start="161:54" pos:end="161:61">services</name></expr></range></decl></init>)</control> <block pos:start="161:64" pos:end="165:17">{<block_content pos:start="162:25" pos:end="164:25">
			<if_stmt pos:start="162:25" pos:end="164:25"><if pos:start="162:25" pos:end="164:25">if <condition pos:start="162:28" pos:end="162:87">(<expr pos:start="162:29" pos:end="162:86"><call pos:start="162:29" pos:end="162:46"><name pos:start="162:29" pos:end="162:44"><name pos:start="162:29" pos:end="162:35">service</name><operator pos:start="162:36" pos:end="162:36">.</operator><name pos:start="162:37" pos:end="162:44">getClass</name></name><argument_list pos:start="162:45" pos:end="162:46">()</argument_list></call><operator pos:start="162:47" pos:end="162:47">.</operator><call pos:start="162:48" pos:end="162:65"><name pos:start="162:48" pos:end="162:63">getCanonicalName</name><argument_list pos:start="162:64" pos:end="162:65">()</argument_list></call><operator pos:start="162:66" pos:end="162:66">.</operator><call pos:start="162:67" pos:end="162:86"><name pos:start="162:67" pos:end="162:72">equals</name><argument_list pos:start="162:73" pos:end="162:86">(<argument pos:start="162:74" pos:end="162:85"><expr pos:start="162:74" pos:end="162:85"><name pos:start="162:74" pos:end="162:85">serviceClass</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="162:89" pos:end="164:25">{<block_content pos:start="163:33" pos:end="163:47">
				<return pos:start="163:33" pos:end="163:47">return <expr pos:start="163:40" pos:end="163:46"><name pos:start="163:40" pos:end="163:46">service</name></expr>;</return>
			</block_content>}</block></if></if_stmt>
		</block_content>}</block></for>
		<throw pos:start="166:17" pos:end="166:97">throw <expr pos:start="166:23" pos:end="166:96"><operator pos:start="166:23" pos:end="166:25">new</operator> <call pos:start="166:27" pos:end="166:96"><name pos:start="166:27" pos:end="166:51">DronologyServiceException</name><argument_list pos:start="166:52" pos:end="166:96">(<argument pos:start="166:53" pos:end="166:95"><expr pos:start="166:53" pos:end="166:95"><literal type="string" pos:start="166:53" pos:end="166:63">"Service '"</literal> <operator pos:start="166:65" pos:end="166:65">+</operator> <name pos:start="166:67" pos:end="166:78">serviceClass</name> <operator pos:start="166:80" pos:end="166:80">+</operator> <literal type="string" pos:start="166:82" pos:end="166:95">"' not found!"</literal></expr></argument>)</argument_list></call></expr>;</throw>
	</block_content>}</block></function>

	<function pos:start="169:9" pos:end="184:9"><type pos:start="169:9" pos:end="169:39"><specifier pos:start="169:9" pos:end="169:14">public</specifier> <specifier pos:start="169:16" pos:end="169:21">static</specifier> <name pos:start="169:23" pos:end="169:39"><name pos:start="169:23" pos:end="169:26">List</name><argument_list type="generic" pos:start="169:27" pos:end="169:39">&lt;<argument pos:start="169:28" pos:end="169:38"><name pos:start="169:28" pos:end="169:38">ServiceInfo</name></argument>&gt;</argument_list></name></type> <name pos:start="169:41" pos:end="169:55">getCoreServices</name><parameter_list pos:start="169:56" pos:end="169:57">()</parameter_list> <throws pos:start="169:59" pos:end="169:90">throws <argument pos:start="169:66" pos:end="169:90"><expr pos:start="169:66" pos:end="169:90"><name pos:start="169:66" pos:end="169:90">DronologyServiceException</name></expr></argument></throws> <block pos:start="169:92" pos:end="184:9">{<block_content pos:start="170:17" pos:end="183:60">
		<decl_stmt pos:start="170:17" pos:end="170:61"><decl pos:start="170:17" pos:end="170:60"><type pos:start="170:17" pos:end="170:33"><name pos:start="170:17" pos:end="170:33"><name pos:start="170:17" pos:end="170:20">List</name><argument_list type="generic" pos:start="170:21" pos:end="170:33">&lt;<argument pos:start="170:22" pos:end="170:32"><name pos:start="170:22" pos:end="170:32">ServiceInfo</name></argument>&gt;</argument_list></name></type> <name pos:start="170:35" pos:end="170:40">sInfos</name> <init pos:start="170:42" pos:end="170:60">= <expr pos:start="170:44" pos:end="170:60"><operator pos:start="170:44" pos:end="170:46">new</operator> <call pos:start="170:48" pos:end="170:60"><name pos:start="170:48" pos:end="170:58"><name pos:start="170:48" pos:end="170:56">ArrayList</name><argument_list type="generic" pos:start="170:57" pos:end="170:58">&lt;&gt;</argument_list></name><argument_list pos:start="170:59" pos:end="170:60">()</argument_list></call></expr></init></decl>;</decl_stmt>
		<synchronized pos:start="171:17" pos:end="182:17">synchronized <init pos:start="171:30" pos:end="171:39">(<expr pos:start="171:31" pos:end="171:38"><name pos:start="171:31" pos:end="171:38">services</name></expr>)</init> <block pos:start="171:41" pos:end="182:17">{<block_content pos:start="172:25" pos:end="181:25">
			<for pos:start="172:25" pos:end="181:25">for <control pos:start="172:29" pos:end="172:70">(<init pos:start="172:30" pos:end="172:69"><decl pos:start="172:30" pos:end="172:69"><type pos:start="172:30" pos:end="172:50"><name pos:start="172:30" pos:end="172:50">AbstractServerService</name></type> <name pos:start="172:52" pos:end="172:58">service</name> <range pos:start="172:60" pos:end="172:69">: <expr pos:start="172:62" pos:end="172:69"><name pos:start="172:62" pos:end="172:69">services</name></expr></range></decl></init>)</control> <block pos:start="172:72" pos:end="181:25">{<block_content pos:start="173:33" pos:end="180:33">
				<decl_stmt pos:start="173:33" pos:end="173:76"><decl pos:start="173:33" pos:end="173:75"><type pos:start="173:33" pos:end="173:43"><name pos:start="173:33" pos:end="173:43">ServiceInfo</name></type> <name pos:start="173:45" pos:end="173:49">sInfo</name> <init pos:start="173:51" pos:end="173:75">= <expr pos:start="173:53" pos:end="173:75"><call pos:start="173:53" pos:end="173:75"><name pos:start="173:53" pos:end="173:73"><name pos:start="173:53" pos:end="173:59">service</name><operator pos:start="173:60" pos:end="173:60">.</operator><name pos:start="173:61" pos:end="173:73">getServerInfo</name></name><argument_list pos:start="173:74" pos:end="173:75">()</argument_list></call></expr></init></decl>;</decl_stmt>
				<if_stmt pos:start="174:33" pos:end="177:33"><if pos:start="174:33" pos:end="177:33">if <condition pos:start="174:36" pos:end="174:50">(<expr pos:start="174:37" pos:end="174:49"><name pos:start="174:37" pos:end="174:41">sInfo</name> <operator pos:start="174:43" pos:end="174:44">==</operator> <literal type="null" pos:start="174:46" pos:end="174:49">null</literal></expr>)</condition> <block pos:start="174:52" pos:end="177:33">{<block_content pos:start="175:41" pos:end="176:100">
					<throw pos:start="175:41" pos:end="176:100">throw <expr pos:start="175:47" pos:end="176:99"><operator pos:start="175:47" pos:end="175:49">new</operator> <call pos:start="175:51" pos:end="176:99"><name pos:start="175:51" pos:end="175:75">DronologyServiceException</name><argument_list pos:start="175:76" pos:end="176:99">(<argument pos:start="175:77" pos:end="176:98"><expr pos:start="175:77" pos:end="176:98"><literal type="string" pos:start="175:77" pos:end="175:121">"Error retrieving service information from '"</literal>
							<operator pos:start="176:57" pos:end="176:57">+</operator> <call pos:start="176:59" pos:end="176:76"><name pos:start="176:59" pos:end="176:74"><name pos:start="176:59" pos:end="176:65">service</name><operator pos:start="176:66" pos:end="176:66">.</operator><name pos:start="176:67" pos:end="176:74">getClass</name></name><argument_list pos:start="176:75" pos:end="176:76">()</argument_list></call><operator pos:start="176:77" pos:end="176:77">.</operator><call pos:start="176:78" pos:end="176:92"><name pos:start="176:78" pos:end="176:90">getSimpleName</name><argument_list pos:start="176:91" pos:end="176:92">()</argument_list></call> <operator pos:start="176:94" pos:end="176:94">+</operator> <literal type="string" pos:start="176:96" pos:end="176:98">"'"</literal></expr></argument>)</argument_list></call></expr>;</throw>
				</block_content>}</block></if></if_stmt>
				<if_stmt pos:start="178:33" pos:end="180:33"><if pos:start="178:33" pos:end="180:33">if <condition pos:start="178:36" pos:end="178:98">(<expr pos:start="178:37" pos:end="178:97"><operator pos:start="178:37" pos:end="178:37">!</operator><operator pos:start="178:38" pos:end="178:38">(</operator><name pos:start="178:39" pos:end="178:45">service</name> <operator pos:start="178:47" pos:end="178:56">instanceof</operator> <name pos:start="178:58" pos:end="178:96"><name pos:start="178:58" pos:end="178:90">AbstractFileTransmitServerService</name><argument_list type="generic" pos:start="178:91" pos:end="178:96">&lt;<argument pos:start="178:92" pos:end="178:92"><name pos:start="178:92" pos:end="178:92">?</name></argument>, <argument pos:start="178:95" pos:end="178:95"><name pos:start="178:95" pos:end="178:95">?</name></argument>&gt;</argument_list></name><operator pos:start="178:97" pos:end="178:97">)</operator></expr>)</condition> <block pos:start="178:100" pos:end="180:33">{<block_content pos:start="179:41" pos:end="179:58">
					<expr_stmt pos:start="179:41" pos:end="179:58"><expr pos:start="179:41" pos:end="179:57"><call pos:start="179:41" pos:end="179:57"><name pos:start="179:41" pos:end="179:50"><name pos:start="179:41" pos:end="179:46">sInfos</name><operator pos:start="179:47" pos:end="179:47">.</operator><name pos:start="179:48" pos:end="179:50">add</name></name><argument_list pos:start="179:51" pos:end="179:57">(<argument pos:start="179:52" pos:end="179:56"><expr pos:start="179:52" pos:end="179:56"><name pos:start="179:52" pos:end="179:56">sInfo</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				</block_content>}</block></if></if_stmt>
			</block_content>}</block></for>
		</block_content>}</block></synchronized>
		<return pos:start="183:17" pos:end="183:60">return <expr pos:start="183:24" pos:end="183:59"><call pos:start="183:24" pos:end="183:59"><name pos:start="183:24" pos:end="183:51"><name pos:start="183:24" pos:end="183:34">Collections</name><operator pos:start="183:35" pos:end="183:35">.</operator><name pos:start="183:36" pos:end="183:51">unmodifiableList</name></name><argument_list pos:start="183:52" pos:end="183:59">(<argument pos:start="183:53" pos:end="183:58"><expr pos:start="183:53" pos:end="183:58"><name pos:start="183:53" pos:end="183:58">sInfos</name></expr></argument>)</argument_list></call></expr>;</return>
	</block_content>}</block></function>



}</block></class>
</unit>
