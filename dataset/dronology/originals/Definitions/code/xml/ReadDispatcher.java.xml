<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="Java" filename="flatCode/ReadDispatcher.java" pos:tabs="8"><package pos:start="1:1" pos:end="1:53">package <name pos:start="1:9" pos:end="1:52"><name pos:start="1:9" pos:end="1:11">edu</name><operator pos:start="1:12" pos:end="1:12">.</operator><name pos:start="1:13" pos:end="1:14">nd</name><operator pos:start="1:15" pos:end="1:15">.</operator><name pos:start="1:16" pos:end="1:24">dronology</name><operator pos:start="1:25" pos:end="1:25">.</operator><name pos:start="1:26" pos:end="1:33">gstation</name><operator pos:start="1:34" pos:end="1:34">.</operator><name pos:start="1:35" pos:end="1:43">connector</name><operator pos:start="1:44" pos:end="1:44">.</operator><name pos:start="1:45" pos:end="1:52">dispatch</name></name>;</package>

<import pos:start="3:1" pos:end="3:30">import <name pos:start="3:8" pos:end="3:29"><name pos:start="3:8" pos:end="3:11">java</name><operator pos:start="3:12" pos:end="3:12">.</operator><name pos:start="3:13" pos:end="3:14">io</name><operator pos:start="3:15" pos:end="3:15">.</operator><name pos:start="3:16" pos:end="3:29">BufferedReader</name></name>;</import>
<import pos:start="4:1" pos:end="4:27">import <name pos:start="4:8" pos:end="4:26"><name pos:start="4:8" pos:end="4:11">java</name><operator pos:start="4:12" pos:end="4:12">.</operator><name pos:start="4:13" pos:end="4:14">io</name><operator pos:start="4:15" pos:end="4:15">.</operator><name pos:start="4:16" pos:end="4:26">IOException</name></name>;</import>
<import pos:start="5:1" pos:end="5:27">import <name pos:start="5:8" pos:end="5:26"><name pos:start="5:8" pos:end="5:11">java</name><operator pos:start="5:12" pos:end="5:12">.</operator><name pos:start="5:13" pos:end="5:14">io</name><operator pos:start="5:15" pos:end="5:15">.</operator><name pos:start="5:16" pos:end="5:26">InputStream</name></name>;</import>
<import pos:start="6:1" pos:end="6:33">import <name pos:start="6:8" pos:end="6:32"><name pos:start="6:8" pos:end="6:11">java</name><operator pos:start="6:12" pos:end="6:12">.</operator><name pos:start="6:13" pos:end="6:14">io</name><operator pos:start="6:15" pos:end="6:15">.</operator><name pos:start="6:16" pos:end="6:32">InputStreamReader</name></name>;</import>
<import pos:start="7:1" pos:end="7:23">import <name pos:start="7:8" pos:end="7:22"><name pos:start="7:8" pos:end="7:11">java</name><operator pos:start="7:12" pos:end="7:12">.</operator><name pos:start="7:13" pos:end="7:15">net</name><operator pos:start="7:16" pos:end="7:16">.</operator><name pos:start="7:17" pos:end="7:22">Socket</name></name>;</import>
<import pos:start="8:1" pos:end="8:32">import <name pos:start="8:8" pos:end="8:31"><name pos:start="8:8" pos:end="8:11">java</name><operator pos:start="8:12" pos:end="8:12">.</operator><name pos:start="8:13" pos:end="8:15">net</name><operator pos:start="8:16" pos:end="8:16">.</operator><name pos:start="8:17" pos:end="8:31">SocketException</name></name>;</import>
<import pos:start="9:1" pos:end="9:49">import <name pos:start="9:8" pos:end="9:48"><name pos:start="9:8" pos:end="9:11">java</name><operator pos:start="9:12" pos:end="9:12">.</operator><name pos:start="9:13" pos:end="9:16">util</name><operator pos:start="9:17" pos:end="9:17">.</operator><name pos:start="9:18" pos:end="9:27">concurrent</name><operator pos:start="9:28" pos:end="9:28">.</operator><name pos:start="9:29" pos:end="9:34">atomic</name><operator pos:start="9:35" pos:end="9:35">.</operator><name pos:start="9:36" pos:end="9:48">AtomicBoolean</name></name>;</import>

<import pos:start="11:1" pos:end="11:67">import <name pos:start="11:8" pos:end="11:66"><name pos:start="11:8" pos:end="11:10">edu</name><operator pos:start="11:11" pos:end="11:11">.</operator><name pos:start="11:12" pos:end="11:13">nd</name><operator pos:start="11:14" pos:end="11:14">.</operator><name pos:start="11:15" pos:end="11:23">dronology</name><operator pos:start="11:24" pos:end="11:24">.</operator><name pos:start="11:25" pos:end="11:28">core</name><operator pos:start="11:29" pos:end="11:29">.</operator><name pos:start="11:30" pos:end="11:39">monitoring</name><operator pos:start="11:40" pos:end="11:40">.</operator><name pos:start="11:41" pos:end="11:66">DronologyMonitoringManager</name></name>;</import>
<import pos:start="12:1" pos:end="12:45">import <name pos:start="12:8" pos:end="12:44"><name pos:start="12:8" pos:end="12:10">edu</name><operator pos:start="12:11" pos:end="12:11">.</operator><name pos:start="12:12" pos:end="12:13">nd</name><operator pos:start="12:14" pos:end="12:14">.</operator><name pos:start="12:15" pos:end="12:23">dronology</name><operator pos:start="12:24" pos:end="12:24">.</operator><name pos:start="12:25" pos:end="12:28">core</name><operator pos:start="12:29" pos:end="12:29">.</operator><name pos:start="12:30" pos:end="12:33">util</name><operator pos:start="12:34" pos:end="12:34">.</operator><name pos:start="12:35" pos:end="12:44">FormatUtil</name></name>;</import>
<import pos:start="13:1" pos:end="13:71">import <name pos:start="13:8" pos:end="13:70"><name pos:start="13:8" pos:end="13:10">edu</name><operator pos:start="13:11" pos:end="13:11">.</operator><name pos:start="13:12" pos:end="13:13">nd</name><operator pos:start="13:14" pos:end="13:14">.</operator><name pos:start="13:15" pos:end="13:23">dronology</name><operator pos:start="13:24" pos:end="13:24">.</operator><name pos:start="13:25" pos:end="13:32">gstation</name><operator pos:start="13:33" pos:end="13:33">.</operator><name pos:start="13:34" pos:end="13:42">connector</name><operator pos:start="13:43" pos:end="13:43">.</operator><name pos:start="13:44" pos:end="13:51">messages</name><operator pos:start="13:52" pos:end="13:52">.</operator><name pos:start="13:53" pos:end="13:70">AbstractUAVMessage</name></name>;</import>
<import pos:start="14:1" pos:end="14:74">import <name pos:start="14:8" pos:end="14:73"><name pos:start="14:8" pos:end="14:10">edu</name><operator pos:start="14:11" pos:end="14:11">.</operator><name pos:start="14:12" pos:end="14:13">nd</name><operator pos:start="14:14" pos:end="14:14">.</operator><name pos:start="14:15" pos:end="14:23">dronology</name><operator pos:start="14:24" pos:end="14:24">.</operator><name pos:start="14:25" pos:end="14:32">gstation</name><operator pos:start="14:33" pos:end="14:33">.</operator><name pos:start="14:34" pos:end="14:42">connector</name><operator pos:start="14:43" pos:end="14:43">.</operator><name pos:start="14:44" pos:end="14:51">messages</name><operator pos:start="14:52" pos:end="14:52">.</operator><name pos:start="14:53" pos:end="14:73">UAVAcknowledgeMessage</name></name>;</import>
<import pos:start="15:1" pos:end="15:72">import <name pos:start="15:8" pos:end="15:71"><name pos:start="15:8" pos:end="15:10">edu</name><operator pos:start="15:11" pos:end="15:11">.</operator><name pos:start="15:12" pos:end="15:13">nd</name><operator pos:start="15:14" pos:end="15:14">.</operator><name pos:start="15:15" pos:end="15:23">dronology</name><operator pos:start="15:24" pos:end="15:24">.</operator><name pos:start="15:25" pos:end="15:32">gstation</name><operator pos:start="15:33" pos:end="15:33">.</operator><name pos:start="15:34" pos:end="15:42">connector</name><operator pos:start="15:43" pos:end="15:43">.</operator><name pos:start="15:44" pos:end="15:51">messages</name><operator pos:start="15:52" pos:end="15:52">.</operator><name pos:start="15:53" pos:end="15:71">UAVHandshakeMessage</name></name>;</import>
<import pos:start="16:1" pos:end="16:70">import <name pos:start="16:8" pos:end="16:69"><name pos:start="16:8" pos:end="16:10">edu</name><operator pos:start="16:11" pos:end="16:11">.</operator><name pos:start="16:12" pos:end="16:13">nd</name><operator pos:start="16:14" pos:end="16:14">.</operator><name pos:start="16:15" pos:end="16:23">dronology</name><operator pos:start="16:24" pos:end="16:24">.</operator><name pos:start="16:25" pos:end="16:32">gstation</name><operator pos:start="16:33" pos:end="16:33">.</operator><name pos:start="16:34" pos:end="16:42">connector</name><operator pos:start="16:43" pos:end="16:43">.</operator><name pos:start="16:44" pos:end="16:51">messages</name><operator pos:start="16:52" pos:end="16:52">.</operator><name pos:start="16:53" pos:end="16:69">UAVMessageFactory</name></name>;</import>
<import pos:start="17:1" pos:end="17:73">import <name pos:start="17:8" pos:end="17:72"><name pos:start="17:8" pos:end="17:10">edu</name><operator pos:start="17:11" pos:end="17:11">.</operator><name pos:start="17:12" pos:end="17:13">nd</name><operator pos:start="17:14" pos:end="17:14">.</operator><name pos:start="17:15" pos:end="17:23">dronology</name><operator pos:start="17:24" pos:end="17:24">.</operator><name pos:start="17:25" pos:end="17:32">gstation</name><operator pos:start="17:33" pos:end="17:33">.</operator><name pos:start="17:34" pos:end="17:42">connector</name><operator pos:start="17:43" pos:end="17:43">.</operator><name pos:start="17:44" pos:end="17:51">messages</name><operator pos:start="17:52" pos:end="17:52">.</operator><name pos:start="17:53" pos:end="17:72">UAVModeChangeMessage</name></name>;</import>
<import pos:start="18:1" pos:end="18:73">import <name pos:start="18:8" pos:end="18:72"><name pos:start="18:8" pos:end="18:10">edu</name><operator pos:start="18:11" pos:end="18:11">.</operator><name pos:start="18:12" pos:end="18:13">nd</name><operator pos:start="18:14" pos:end="18:14">.</operator><name pos:start="18:15" pos:end="18:23">dronology</name><operator pos:start="18:24" pos:end="18:24">.</operator><name pos:start="18:25" pos:end="18:32">gstation</name><operator pos:start="18:33" pos:end="18:33">.</operator><name pos:start="18:34" pos:end="18:42">connector</name><operator pos:start="18:43" pos:end="18:43">.</operator><name pos:start="18:44" pos:end="18:51">messages</name><operator pos:start="18:52" pos:end="18:52">.</operator><name pos:start="18:53" pos:end="18:72">UAVMonitoringMessage</name></name>;</import>
<import pos:start="19:1" pos:end="19:68">import <name pos:start="19:8" pos:end="19:67"><name pos:start="19:8" pos:end="19:10">edu</name><operator pos:start="19:11" pos:end="19:11">.</operator><name pos:start="19:12" pos:end="19:13">nd</name><operator pos:start="19:14" pos:end="19:14">.</operator><name pos:start="19:15" pos:end="19:23">dronology</name><operator pos:start="19:24" pos:end="19:24">.</operator><name pos:start="19:25" pos:end="19:32">gstation</name><operator pos:start="19:33" pos:end="19:33">.</operator><name pos:start="19:34" pos:end="19:42">connector</name><operator pos:start="19:43" pos:end="19:43">.</operator><name pos:start="19:44" pos:end="19:51">messages</name><operator pos:start="19:52" pos:end="19:52">.</operator><name pos:start="19:53" pos:end="19:67">UAVStateMessage</name></name>;</import>
<import pos:start="20:1" pos:end="20:30">import <name pos:start="20:8" pos:end="20:29"><name pos:start="20:8" pos:end="20:10">net</name><operator pos:start="20:11" pos:end="20:11">.</operator><name pos:start="20:12" pos:end="20:13">mv</name><operator pos:start="20:14" pos:end="20:14">.</operator><name pos:start="20:15" pos:end="20:21">logging</name><operator pos:start="20:22" pos:end="20:22">.</operator><name pos:start="20:23" pos:end="20:29">ILogger</name></name>;</import>
<import pos:start="21:1" pos:end="21:37">import <name pos:start="21:8" pos:end="21:36"><name pos:start="21:8" pos:end="21:10">net</name><operator pos:start="21:11" pos:end="21:11">.</operator><name pos:start="21:12" pos:end="21:13">mv</name><operator pos:start="21:14" pos:end="21:14">.</operator><name pos:start="21:15" pos:end="21:21">logging</name><operator pos:start="21:22" pos:end="21:22">.</operator><name pos:start="21:23" pos:end="21:36">LoggerProvider</name></name>;</import>

<comment type="block" format="javadoc" pos:start="23:1" pos:end="33:3">/**
 * 
 * 
 * Threat handling incoming messages from a GCS. &lt;br&gt;
 * The {@link ReadDispatcher} can handle json messages that are transformed into UAV Messages (extending {@link AbstractUAVMessage}) by the {@link UAVMessageFactory}.
 * 
 * 
 * @author Michael Vierhauser
 * 
 *
 */</comment>
<class pos:start="34:1" pos:end="148:1"><specifier pos:start="34:1" pos:end="34:6">public</specifier> class <name pos:start="34:14" pos:end="34:27">ReadDispatcher</name> <super_list pos:start="34:29" pos:end="34:47"><implements pos:start="34:29" pos:end="34:47">implements <super pos:start="34:40" pos:end="34:47"><name pos:start="34:40" pos:end="34:47">Runnable</name></super></implements></super_list> <block pos:start="34:49" pos:end="148:1">{

	<decl_stmt pos:start="36:9" pos:end="36:40"><decl pos:start="36:9" pos:end="36:39"><type pos:start="36:9" pos:end="36:27"><specifier pos:start="36:9" pos:end="36:15">private</specifier> <name pos:start="36:17" pos:end="36:27">InputStream</name></type> <name pos:start="36:29" pos:end="36:39">inputStream</name></decl>;</decl_stmt>
	<decl_stmt pos:start="37:9" pos:end="37:62"><decl pos:start="37:9" pos:end="37:61"><type pos:start="37:9" pos:end="37:29"><specifier pos:start="37:9" pos:end="37:15">private</specifier> <name pos:start="37:17" pos:end="37:29">AtomicBoolean</name></type> <name pos:start="37:31" pos:end="37:34">cont</name> <init pos:start="37:36" pos:end="37:61">= <expr pos:start="37:38" pos:end="37:61"><operator pos:start="37:38" pos:end="37:40">new</operator> <call pos:start="37:42" pos:end="37:61"><name pos:start="37:42" pos:end="37:54">AtomicBoolean</name><argument_list pos:start="37:55" pos:end="37:61">(<argument pos:start="37:56" pos:end="37:60"><expr pos:start="37:56" pos:end="37:60"><literal type="boolean" pos:start="37:56" pos:end="37:60">false</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<decl_stmt pos:start="38:9" pos:end="38:93"><decl pos:start="38:9" pos:end="38:92"><type pos:start="38:9" pos:end="38:36"><specifier pos:start="38:9" pos:end="38:15">private</specifier> <specifier pos:start="38:17" pos:end="38:22">static</specifier> <specifier pos:start="38:24" pos:end="38:28">final</specifier> <name pos:start="38:30" pos:end="38:36">ILogger</name></type> <name pos:start="38:38" pos:end="38:43">LOGGER</name> <init pos:start="38:45" pos:end="38:92">= <expr pos:start="38:47" pos:end="38:92"><call pos:start="38:47" pos:end="38:92"><name pos:start="38:47" pos:end="38:70"><name pos:start="38:47" pos:end="38:60">LoggerProvider</name><operator pos:start="38:61" pos:end="38:61">.</operator><name pos:start="38:62" pos:end="38:70">getLogger</name></name><argument_list pos:start="38:71" pos:end="38:92">(<argument pos:start="38:72" pos:end="38:91"><expr pos:start="38:72" pos:end="38:91"><name pos:start="38:72" pos:end="38:91"><name pos:start="38:72" pos:end="38:85">ReadDispatcher</name><operator pos:start="38:86" pos:end="38:86">.</operator><name pos:start="38:87" pos:end="38:91">class</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

	<decl_stmt pos:start="40:9" pos:end="40:38"><decl pos:start="40:9" pos:end="40:37"><type pos:start="40:9" pos:end="40:30"><specifier pos:start="40:9" pos:end="40:15">private</specifier> <name pos:start="40:17" pos:end="40:30">BufferedReader</name></type> <name pos:start="40:32" pos:end="40:37">reader</name></decl>;</decl_stmt>
	<decl_stmt pos:start="41:9" pos:end="41:58"><decl pos:start="41:9" pos:end="41:57"><type pos:start="41:9" pos:end="41:36"><specifier pos:start="41:9" pos:end="41:15">private</specifier> <name pos:start="41:17" pos:end="41:36">DispatchQueueManager</name></type> <name pos:start="41:38" pos:end="41:57">dispatchQueueManager</name></decl>;</decl_stmt>

	<constructor pos:start="43:9" pos:end="51:9"><specifier pos:start="43:9" pos:end="43:14">public</specifier> <name pos:start="43:16" pos:end="43:29">ReadDispatcher</name><parameter_list pos:start="43:30" pos:end="43:93">(<parameter pos:start="43:31" pos:end="43:49"><decl pos:start="43:31" pos:end="43:49"><type pos:start="43:31" pos:end="43:49"><name pos:start="43:31" pos:end="43:36">Socket</name></type> <name pos:start="43:38" pos:end="43:49">pythonSocket</name></decl></parameter>, <parameter pos:start="43:52" pos:end="43:92"><decl pos:start="43:52" pos:end="43:92"><type pos:start="43:52" pos:end="43:92"><name pos:start="43:52" pos:end="43:71">DispatchQueueManager</name></type> <name pos:start="43:73" pos:end="43:92">dispatchQueueManager</name></decl></parameter>)</parameter_list> <block pos:start="43:95" pos:end="51:9">{<block_content pos:start="44:17" pos:end="50:17">
		<try pos:start="44:17" pos:end="50:17">try <block pos:start="44:21" pos:end="48:17">{<block_content pos:start="45:25" pos:end="47:39">
			<expr_stmt pos:start="45:25" pos:end="45:73"><expr pos:start="45:25" pos:end="45:72"><name pos:start="45:25" pos:end="45:49"><name pos:start="45:25" pos:end="45:28">this</name><operator pos:start="45:29" pos:end="45:29">.</operator><name pos:start="45:30" pos:end="45:49">dispatchQueueManager</name></name> <operator pos:start="45:51" pos:end="45:51">=</operator> <name pos:start="45:53" pos:end="45:72">dispatchQueueManager</name></expr>;</expr_stmt>
			<expr_stmt pos:start="46:25" pos:end="46:68"><expr pos:start="46:25" pos:end="46:67"><name pos:start="46:25" pos:end="46:35">inputStream</name> <operator pos:start="46:37" pos:end="46:37">=</operator> <call pos:start="46:39" pos:end="46:67"><name pos:start="46:39" pos:end="46:65"><name pos:start="46:39" pos:end="46:50">pythonSocket</name><operator pos:start="46:51" pos:end="46:51">.</operator><name pos:start="46:52" pos:end="46:65">getInputStream</name></name><argument_list pos:start="46:66" pos:end="46:67">()</argument_list></call></expr>;</expr_stmt>
			<expr_stmt pos:start="47:25" pos:end="47:39"><expr pos:start="47:25" pos:end="47:38"><call pos:start="47:25" pos:end="47:38"><name pos:start="47:25" pos:end="47:32"><name pos:start="47:25" pos:end="47:28">cont</name><operator pos:start="47:29" pos:end="47:29">.</operator><name pos:start="47:30" pos:end="47:32">set</name></name><argument_list pos:start="47:33" pos:end="47:38">(<argument pos:start="47:34" pos:end="47:37"><expr pos:start="47:34" pos:end="47:37"><literal type="boolean" pos:start="47:34" pos:end="47:37">true</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		</block_content>}</block> <catch pos:start="48:19" pos:end="50:17">catch <parameter_list pos:start="48:25" pos:end="48:39">(<parameter pos:start="48:26" pos:end="48:38"><decl pos:start="48:26" pos:end="48:38"><type pos:start="48:26" pos:end="48:38"><name pos:start="48:26" pos:end="48:36">IOException</name></type> <name pos:start="48:38" pos:end="48:38">e</name></decl></parameter>)</parameter_list> <block pos:start="48:41" pos:end="50:17">{<block_content pos:start="49:25" pos:end="49:40">
			<expr_stmt pos:start="49:25" pos:end="49:40"><expr pos:start="49:25" pos:end="49:39"><call pos:start="49:25" pos:end="49:39"><name pos:start="49:25" pos:end="49:36"><name pos:start="49:25" pos:end="49:30">LOGGER</name><operator pos:start="49:31" pos:end="49:31">.</operator><name pos:start="49:32" pos:end="49:36">error</name></name><argument_list pos:start="49:37" pos:end="49:39">(<argument pos:start="49:38" pos:end="49:38"><expr pos:start="49:38" pos:end="49:38"><name pos:start="49:38" pos:end="49:38">e</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		</block_content>}</block></catch></try>
	</block_content>}</block></constructor>

	<function pos:start="53:9" pos:end="118:9"><annotation pos:start="53:9" pos:end="53:17">@<name pos:start="53:10" pos:end="53:17">Override</name></annotation>
	<type pos:start="54:9" pos:end="54:19"><specifier pos:start="54:9" pos:end="54:14">public</specifier> <name pos:start="54:16" pos:end="54:19">void</name></type> <name pos:start="54:21" pos:end="54:23">run</name><parameter_list pos:start="54:24" pos:end="54:25">()</parameter_list> <block pos:start="54:27" pos:end="118:9">{<block_content pos:start="55:17" pos:end="117:17">
		<try pos:start="55:17" pos:end="117:17">try <block pos:start="55:21" pos:end="94:17">{<block_content pos:start="56:25" pos:end="92:25">
			<expr_stmt pos:start="56:25" pos:end="56:63"><expr pos:start="56:25" pos:end="56:62"><call pos:start="56:25" pos:end="56:62"><name pos:start="56:25" pos:end="56:35"><name pos:start="56:25" pos:end="56:30">LOGGER</name><operator pos:start="56:31" pos:end="56:31">.</operator><name pos:start="56:32" pos:end="56:35">info</name></name><argument_list pos:start="56:36" pos:end="56:62">(<argument pos:start="56:37" pos:end="56:61"><expr pos:start="56:37" pos:end="56:61"><literal type="string" pos:start="56:37" pos:end="56:61">"Read-Dispatcher started"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt pos:start="57:25" pos:end="57:88"><expr pos:start="57:25" pos:end="57:87"><name pos:start="57:25" pos:end="57:30">reader</name> <operator pos:start="57:32" pos:end="57:32">=</operator> <operator pos:start="57:34" pos:end="57:36">new</operator> <call pos:start="57:38" pos:end="57:87"><name pos:start="57:38" pos:end="57:51">BufferedReader</name><argument_list pos:start="57:52" pos:end="57:87">(<argument pos:start="57:53" pos:end="57:86"><expr pos:start="57:53" pos:end="57:86"><operator pos:start="57:53" pos:end="57:55">new</operator> <call pos:start="57:57" pos:end="57:86"><name pos:start="57:57" pos:end="57:73">InputStreamReader</name><argument_list pos:start="57:74" pos:end="57:86">(<argument pos:start="57:75" pos:end="57:85"><expr pos:start="57:75" pos:end="57:85"><name pos:start="57:75" pos:end="57:85">inputStream</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<while pos:start="58:25" pos:end="80:25">while <condition pos:start="58:31" pos:end="58:83">(<expr pos:start="58:32" pos:end="58:82"><call pos:start="58:32" pos:end="58:41"><name pos:start="58:32" pos:end="58:39"><name pos:start="58:32" pos:end="58:35">cont</name><operator pos:start="58:36" pos:end="58:36">.</operator><name pos:start="58:37" pos:end="58:39">get</name></name><argument_list pos:start="58:40" pos:end="58:41">()</argument_list></call> <operator pos:start="58:43" pos:end="58:44">&amp;&amp;</operator> <operator pos:start="58:46" pos:end="58:46">!</operator><call pos:start="58:47" pos:end="58:68"><name pos:start="58:47" pos:end="58:66"><name pos:start="58:47" pos:end="58:52">Thread</name><operator pos:start="58:53" pos:end="58:53">.</operator><name pos:start="58:54" pos:end="58:66">currentThread</name></name><argument_list pos:start="58:67" pos:end="58:68">()</argument_list></call><operator pos:start="58:69" pos:end="58:69">.</operator><call pos:start="58:70" pos:end="58:82"><name pos:start="58:70" pos:end="58:80">interrupted</name><argument_list pos:start="58:81" pos:end="58:82">()</argument_list></call></expr>)</condition> <block pos:start="58:85" pos:end="80:25">{<block_content pos:start="59:33" pos:end="78:33">
				<decl_stmt pos:start="59:33" pos:end="59:64"><decl pos:start="59:33" pos:end="59:63"><type pos:start="59:33" pos:end="59:38"><name pos:start="59:33" pos:end="59:38">String</name></type> <name pos:start="59:40" pos:end="59:43">line</name> <init pos:start="59:45" pos:end="59:63">= <expr pos:start="59:47" pos:end="59:63"><call pos:start="59:47" pos:end="59:63"><name pos:start="59:47" pos:end="59:61"><name pos:start="59:47" pos:end="59:52">reader</name><operator pos:start="59:53" pos:end="59:53">.</operator><name pos:start="59:54" pos:end="59:61">readLine</name></name><argument_list pos:start="59:62" pos:end="59:63">()</argument_list></call></expr></init></decl>;</decl_stmt>
				<if_stmt pos:start="60:33" pos:end="78:33"><if pos:start="60:33" pos:end="75:33">if <condition pos:start="60:36" pos:end="60:49">(<expr pos:start="60:37" pos:end="60:48"><name pos:start="60:37" pos:end="60:40">line</name> <operator pos:start="60:42" pos:end="60:43">!=</operator> <literal type="null" pos:start="60:45" pos:end="60:48">null</literal></expr>)</condition> <block pos:start="60:51" pos:end="75:33">{<block_content pos:start="63:41" pos:end="73:41">
					<comment type="line" pos:start="61:41" pos:end="61:94">// TODO: create the timestamp before deserializing the</comment>
					<comment type="line" pos:start="62:41" pos:end="62:53">// object....</comment>
					<try pos:start="63:41" pos:end="73:41">try <block pos:start="63:45" pos:end="70:41">{<block_content pos:start="64:49" pos:end="68:49">
						<decl_stmt pos:start="64:49" pos:end="64:107"><decl pos:start="64:49" pos:end="64:106"><type pos:start="64:49" pos:end="64:69"><name pos:start="64:49" pos:end="64:69"><name pos:start="64:49" pos:end="64:66">AbstractUAVMessage</name><argument_list type="generic" pos:start="64:67" pos:end="64:69">&lt;<argument pos:start="64:68" pos:end="64:68"><name pos:start="64:68" pos:end="64:68">?</name></argument>&gt;</argument_list></name></type> <name pos:start="64:71" pos:end="64:73">msg</name> <init pos:start="64:75" pos:end="64:106">= <expr pos:start="64:77" pos:end="64:106"><call pos:start="64:77" pos:end="64:106"><name pos:start="64:77" pos:end="64:100"><name pos:start="64:77" pos:end="64:93">UAVMessageFactory</name><operator pos:start="64:94" pos:end="64:94">.</operator><name pos:start="64:95" pos:end="64:100">create</name></name><argument_list pos:start="64:101" pos:end="64:106">(<argument pos:start="64:102" pos:end="64:105"><expr pos:start="64:102" pos:end="64:105"><name pos:start="64:102" pos:end="64:105">line</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
						<expr_stmt pos:start="65:49" pos:end="65:68"><expr pos:start="65:49" pos:end="65:67"><call pos:start="65:49" pos:end="65:67"><name pos:start="65:49" pos:end="65:62">processMessage</name><argument_list pos:start="65:63" pos:end="65:67">(<argument pos:start="65:64" pos:end="65:66"><expr pos:start="65:64" pos:end="65:66"><name pos:start="65:64" pos:end="65:66">msg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
						<if_stmt pos:start="66:49" pos:end="68:49"><if pos:start="66:49" pos:end="68:49">if <condition pos:start="66:52" pos:end="66:64">(<expr pos:start="66:53" pos:end="66:63"><name pos:start="66:53" pos:end="66:55">msg</name> <operator pos:start="66:57" pos:end="66:58">==</operator> <literal type="null" pos:start="66:60" pos:end="66:63">null</literal></expr>)</condition> <block pos:start="66:66" pos:end="68:49">{<block_content pos:start="67:57" pos:end="67:126">
							<expr_stmt pos:start="67:57" pos:end="67:126"><expr pos:start="67:57" pos:end="67:125"><call pos:start="67:57" pos:end="67:125"><name pos:start="67:57" pos:end="67:70"><name pos:start="67:57" pos:end="67:62">LOGGER</name><operator pos:start="67:63" pos:end="67:63">.</operator><name pos:start="67:64" pos:end="67:70">hwFatal</name></name><argument_list pos:start="67:71" pos:end="67:125">(<argument pos:start="67:72" pos:end="67:124"><expr pos:start="67:72" pos:end="67:124"><literal type="string" pos:start="67:72" pos:end="67:111">"Error when parsing incomming message '"</literal> <operator pos:start="67:113" pos:end="67:113">+</operator> <name pos:start="67:115" pos:end="67:118">line</name> <operator pos:start="67:120" pos:end="67:120">+</operator> <literal type="string" pos:start="67:122" pos:end="67:124">"'"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
						</block_content>}</block></if></if_stmt>

					</block_content>}</block> <catch pos:start="70:43" pos:end="73:41">catch <parameter_list pos:start="70:49" pos:end="70:62">(<parameter pos:start="70:50" pos:end="70:61"><decl pos:start="70:50" pos:end="70:61"><type pos:start="70:50" pos:end="70:61"><name pos:start="70:50" pos:end="70:58">Exception</name></type> <name pos:start="70:60" pos:end="70:61">ex</name></decl></parameter>)</parameter_list> <block pos:start="70:64" pos:end="73:41">{<block_content pos:start="71:49" pos:end="72:137">
						<expr_stmt pos:start="71:49" pos:end="71:69"><expr pos:start="71:49" pos:end="71:68"><call pos:start="71:49" pos:end="71:68"><name pos:start="71:49" pos:end="71:66"><name pos:start="71:49" pos:end="71:50">ex</name><operator pos:start="71:51" pos:end="71:51">.</operator><name pos:start="71:52" pos:end="71:66">printStackTrace</name></name><argument_list pos:start="71:67" pos:end="71:68">()</argument_list></call></expr>;</expr_stmt>
						<expr_stmt pos:start="72:49" pos:end="72:137"><expr pos:start="72:49" pos:end="72:136"><call pos:start="72:49" pos:end="72:136"><name pos:start="72:49" pos:end="72:62"><name pos:start="72:49" pos:end="72:54">LOGGER</name><operator pos:start="72:55" pos:end="72:55">.</operator><name pos:start="72:56" pos:end="72:62">hwFatal</name></name><argument_list pos:start="72:63" pos:end="72:136">(<argument pos:start="72:64" pos:end="72:135"><expr pos:start="72:64" pos:end="72:135"><literal type="string" pos:start="72:64" pos:end="72:103">"Error when parsing incomming message '"</literal> <operator pos:start="72:105" pos:end="72:105">+</operator> <name pos:start="72:107" pos:end="72:110">line</name> <operator pos:start="72:112" pos:end="72:112">+</operator> <literal type="string" pos:start="72:114" pos:end="72:117">"' "</literal> <operator pos:start="72:119" pos:end="72:119">+</operator> <call pos:start="72:121" pos:end="72:135"><name pos:start="72:121" pos:end="72:133"><name pos:start="72:121" pos:end="72:122">ex</name><operator pos:start="72:123" pos:end="72:123">.</operator><name pos:start="72:124" pos:end="72:133">getMessage</name></name><argument_list pos:start="72:134" pos:end="72:135">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					</block_content>}</block></catch></try> 

				</block_content>}</block></if> <else pos:start="75:35" pos:end="78:33">else <block pos:start="75:40" pos:end="78:33">{<block_content pos:start="76:41" pos:end="77:51">
					<expr_stmt pos:start="76:41" pos:end="76:96"><expr pos:start="76:41" pos:end="76:95"><call pos:start="76:41" pos:end="76:95"><name pos:start="76:41" pos:end="76:53"><name pos:start="76:41" pos:end="76:46">LOGGER</name><operator pos:start="76:47" pos:end="76:47">.</operator><name pos:start="76:48" pos:end="76:53">hwInfo</name></name><argument_list pos:start="76:54" pos:end="76:95">(<argument pos:start="76:55" pos:end="76:94"><expr pos:start="76:55" pos:end="76:94"><literal type="string" pos:start="76:55" pos:end="76:94">"null message received: closing socket."</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<expr_stmt pos:start="77:41" pos:end="77:51"><expr pos:start="77:41" pos:end="77:50"><call pos:start="77:41" pos:end="77:50"><name pos:start="77:41" pos:end="77:48">tearDown</name><argument_list pos:start="77:49" pos:end="77:50">()</argument_list></call></expr>;</expr_stmt>
				</block_content>}</block></else></if_stmt>

			</block_content>}</block></while>
			<expr_stmt pos:start="81:25" pos:end="81:62"><expr pos:start="81:25" pos:end="81:61"><call pos:start="81:25" pos:end="81:61"><name pos:start="81:25" pos:end="81:35"><name pos:start="81:25" pos:end="81:30">LOGGER</name><operator pos:start="81:31" pos:end="81:31">.</operator><name pos:start="81:32" pos:end="81:35">info</name></name><argument_list pos:start="81:36" pos:end="81:61">(<argument pos:start="81:37" pos:end="81:60"><expr pos:start="81:37" pos:end="81:60"><literal type="string" pos:start="81:37" pos:end="81:60">"Reader Thread shutdown"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<try pos:start="82:25" pos:end="92:25">try <block pos:start="82:29" pos:end="90:25">{<block_content pos:start="83:33" pos:end="88:33">
				<if_stmt pos:start="83:33" pos:end="85:33"><if pos:start="83:33" pos:end="85:33">if <condition pos:start="83:36" pos:end="83:56">(<expr pos:start="83:37" pos:end="83:55"><name pos:start="83:37" pos:end="83:47">inputStream</name> <operator pos:start="83:49" pos:end="83:50">!=</operator> <literal type="null" pos:start="83:52" pos:end="83:55">null</literal></expr>)</condition> <block pos:start="83:58" pos:end="85:33">{<block_content pos:start="84:41" pos:end="84:60">
					<expr_stmt pos:start="84:41" pos:end="84:60"><expr pos:start="84:41" pos:end="84:59"><call pos:start="84:41" pos:end="84:59"><name pos:start="84:41" pos:end="84:57"><name pos:start="84:41" pos:end="84:51">inputStream</name><operator pos:start="84:52" pos:end="84:52">.</operator><name pos:start="84:53" pos:end="84:57">close</name></name><argument_list pos:start="84:58" pos:end="84:59">()</argument_list></call></expr>;</expr_stmt>
				</block_content>}</block></if></if_stmt>
				<if_stmt pos:start="86:33" pos:end="88:33"><if pos:start="86:33" pos:end="88:33">if <condition pos:start="86:36" pos:end="86:51">(<expr pos:start="86:37" pos:end="86:50"><name pos:start="86:37" pos:end="86:42">reader</name> <operator pos:start="86:44" pos:end="86:45">!=</operator> <literal type="null" pos:start="86:47" pos:end="86:50">null</literal></expr>)</condition> <block pos:start="86:53" pos:end="88:33">{<block_content pos:start="87:41" pos:end="87:55">
					<expr_stmt pos:start="87:41" pos:end="87:55"><expr pos:start="87:41" pos:end="87:54"><call pos:start="87:41" pos:end="87:54"><name pos:start="87:41" pos:end="87:52"><name pos:start="87:41" pos:end="87:46">reader</name><operator pos:start="87:47" pos:end="87:47">.</operator><name pos:start="87:48" pos:end="87:52">close</name></name><argument_list pos:start="87:53" pos:end="87:54">()</argument_list></call></expr>;</expr_stmt>
				</block_content>}</block></if></if_stmt>

			</block_content>}</block> <catch pos:start="90:27" pos:end="92:25">catch <parameter_list pos:start="90:33" pos:end="90:47">(<parameter pos:start="90:34" pos:end="90:46"><decl pos:start="90:34" pos:end="90:46"><type pos:start="90:34" pos:end="90:46"><name pos:start="90:34" pos:end="90:44">IOException</name></type> <name pos:start="90:46" pos:end="90:46">e</name></decl></parameter>)</parameter_list> <block pos:start="90:49" pos:end="92:25">{<block_content pos:start="91:33" pos:end="91:48">
				<expr_stmt pos:start="91:33" pos:end="91:48"><expr pos:start="91:33" pos:end="91:47"><call pos:start="91:33" pos:end="91:47"><name pos:start="91:33" pos:end="91:44"><name pos:start="91:33" pos:end="91:38">LOGGER</name><operator pos:start="91:39" pos:end="91:39">.</operator><name pos:start="91:40" pos:end="91:44">error</name></name><argument_list pos:start="91:45" pos:end="91:47">(<argument pos:start="91:46" pos:end="91:46"><expr pos:start="91:46" pos:end="91:46"><name pos:start="91:46" pos:end="91:46">e</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			</block_content>}</block></catch></try>

		</block_content>}</block> <catch pos:start="94:19" pos:end="100:17">catch <parameter_list pos:start="94:25" pos:end="94:45">(<parameter pos:start="94:26" pos:end="94:44"><decl pos:start="94:26" pos:end="94:44"><type pos:start="94:26" pos:end="94:44"><name pos:start="94:26" pos:end="94:40">SocketException</name></type> <name pos:start="94:42" pos:end="94:44">sex</name></decl></parameter>)</parameter_list> <block pos:start="94:47" pos:end="100:17">{<block_content pos:start="95:25" pos:end="98:40">
			<expr_stmt pos:start="95:25" pos:end="96:116"><expr pos:start="95:25" pos:end="96:115"><call pos:start="95:25" pos:end="96:115"><name pos:start="95:25" pos:end="95:36"><name pos:start="95:25" pos:end="95:30">LOGGER</name><operator pos:start="95:31" pos:end="95:31">.</operator><name pos:start="95:32" pos:end="95:36">error</name></name><argument_list pos:start="95:37" pos:end="96:115">(<argument pos:start="95:38" pos:end="96:114"><expr pos:start="95:38" pos:end="96:114"><literal type="string" pos:start="95:38" pos:end="95:70">"Socket Exception groundstation "</literal> <operator pos:start="95:72" pos:end="95:72">+</operator> <call pos:start="95:74" pos:end="95:114"><name pos:start="95:74" pos:end="95:112"><name pos:start="95:74" pos:end="95:93">dispatchQueueManager</name><operator pos:start="95:94" pos:end="95:94">.</operator><name pos:start="95:95" pos:end="95:112">getGroundstationid</name></name><argument_list pos:start="95:113" pos:end="95:114">()</argument_list></call>
					<operator pos:start="96:41" pos:end="96:41">+</operator> <literal type="string" pos:start="96:43" pos:end="96:95">" disconnected - shutting down connection -- Error: "</literal> <operator pos:start="96:97" pos:end="96:97">+</operator> <call pos:start="96:99" pos:end="96:114"><name pos:start="96:99" pos:end="96:112"><name pos:start="96:99" pos:end="96:101">sex</name><operator pos:start="96:102" pos:end="96:102">.</operator><name pos:start="96:103" pos:end="96:112">getMessage</name></name><argument_list pos:start="96:113" pos:end="96:114">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt pos:start="97:25" pos:end="97:56"><expr pos:start="97:25" pos:end="97:55"><call pos:start="97:25" pos:end="97:55"><name pos:start="97:25" pos:end="97:53"><name pos:start="97:25" pos:end="97:44">dispatchQueueManager</name><operator pos:start="97:45" pos:end="97:45">.</operator><name pos:start="97:46" pos:end="97:53">tearDown</name></name><argument_list pos:start="97:54" pos:end="97:55">()</argument_list></call></expr>;</expr_stmt>
			<expr_stmt pos:start="98:25" pos:end="98:40"><expr pos:start="98:25" pos:end="98:39"><call pos:start="98:25" pos:end="98:39"><name pos:start="98:25" pos:end="98:32"><name pos:start="98:25" pos:end="98:28">cont</name><operator pos:start="98:29" pos:end="98:29">.</operator><name pos:start="98:30" pos:end="98:32">set</name></name><argument_list pos:start="98:33" pos:end="98:39">(<argument pos:start="98:34" pos:end="98:38"><expr pos:start="98:34" pos:end="98:38"><literal type="boolean" pos:start="98:34" pos:end="98:38">false</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		</block_content>}</block></catch> <catch pos:start="100:19" pos:end="102:17">catch <parameter_list pos:start="100:25" pos:end="100:37">(<parameter pos:start="100:26" pos:end="100:36"><decl pos:start="100:26" pos:end="100:36"><type pos:start="100:26" pos:end="100:36"><name pos:start="100:26" pos:end="100:34">Throwable</name></type> <name pos:start="100:36" pos:end="100:36">t</name></decl></parameter>)</parameter_list> <block pos:start="100:39" pos:end="102:17">{<block_content pos:start="101:25" pos:end="101:40">
			<expr_stmt pos:start="101:25" pos:end="101:40"><expr pos:start="101:25" pos:end="101:39"><call pos:start="101:25" pos:end="101:39"><name pos:start="101:25" pos:end="101:36"><name pos:start="101:25" pos:end="101:30">LOGGER</name><operator pos:start="101:31" pos:end="101:31">.</operator><name pos:start="101:32" pos:end="101:36">error</name></name><argument_list pos:start="101:37" pos:end="101:39">(<argument pos:start="101:38" pos:end="101:38"><expr pos:start="101:38" pos:end="101:38"><name pos:start="101:38" pos:end="101:38">t</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		</block_content>}</block></catch> <finally pos:start="102:19" pos:end="117:17">finally <block pos:start="102:27" pos:end="117:17">{<block_content pos:start="103:25" pos:end="116:25">
			<if_stmt pos:start="103:25" pos:end="109:25"><if pos:start="103:25" pos:end="109:25">if <condition pos:start="103:28" pos:end="103:48">(<expr pos:start="103:29" pos:end="103:47"><name pos:start="103:29" pos:end="103:39">inputStream</name> <operator pos:start="103:41" pos:end="103:42">!=</operator> <literal type="null" pos:start="103:44" pos:end="103:47">null</literal></expr>)</condition> <block pos:start="103:50" pos:end="109:25">{<block_content pos:start="104:33" pos:end="108:33">
				<try pos:start="104:33" pos:end="108:33">try <block pos:start="104:37" pos:end="106:33">{<block_content pos:start="105:41" pos:end="105:60">
					<expr_stmt pos:start="105:41" pos:end="105:60"><expr pos:start="105:41" pos:end="105:59"><call pos:start="105:41" pos:end="105:59"><name pos:start="105:41" pos:end="105:57"><name pos:start="105:41" pos:end="105:51">inputStream</name><operator pos:start="105:52" pos:end="105:52">.</operator><name pos:start="105:53" pos:end="105:57">close</name></name><argument_list pos:start="105:58" pos:end="105:59">()</argument_list></call></expr>;</expr_stmt>
				</block_content>}</block> <catch pos:start="106:35" pos:end="108:33">catch <parameter_list pos:start="106:41" pos:end="106:55">(<parameter pos:start="106:42" pos:end="106:54"><decl pos:start="106:42" pos:end="106:54"><type pos:start="106:42" pos:end="106:54"><name pos:start="106:42" pos:end="106:52">IOException</name></type> <name pos:start="106:54" pos:end="106:54">e</name></decl></parameter>)</parameter_list> <block pos:start="106:57" pos:end="108:33">{<block_content pos:start="107:41" pos:end="107:56">
					<expr_stmt pos:start="107:41" pos:end="107:56"><expr pos:start="107:41" pos:end="107:55"><call pos:start="107:41" pos:end="107:55"><name pos:start="107:41" pos:end="107:52"><name pos:start="107:41" pos:end="107:46">LOGGER</name><operator pos:start="107:47" pos:end="107:47">.</operator><name pos:start="107:48" pos:end="107:52">error</name></name><argument_list pos:start="107:53" pos:end="107:55">(<argument pos:start="107:54" pos:end="107:54"><expr pos:start="107:54" pos:end="107:54"><name pos:start="107:54" pos:end="107:54">e</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				</block_content>}</block></catch></try>
			</block_content>}</block></if></if_stmt>
			<if_stmt pos:start="110:25" pos:end="116:25"><if pos:start="110:25" pos:end="116:25">if <condition pos:start="110:28" pos:end="110:43">(<expr pos:start="110:29" pos:end="110:42"><name pos:start="110:29" pos:end="110:34">reader</name> <operator pos:start="110:36" pos:end="110:37">!=</operator> <literal type="null" pos:start="110:39" pos:end="110:42">null</literal></expr>)</condition> <block pos:start="110:45" pos:end="116:25">{<block_content pos:start="111:33" pos:end="115:33">
				<try pos:start="111:33" pos:end="115:33">try <block pos:start="111:37" pos:end="113:33">{<block_content pos:start="112:41" pos:end="112:55">
					<expr_stmt pos:start="112:41" pos:end="112:55"><expr pos:start="112:41" pos:end="112:54"><call pos:start="112:41" pos:end="112:54"><name pos:start="112:41" pos:end="112:52"><name pos:start="112:41" pos:end="112:46">reader</name><operator pos:start="112:47" pos:end="112:47">.</operator><name pos:start="112:48" pos:end="112:52">close</name></name><argument_list pos:start="112:53" pos:end="112:54">()</argument_list></call></expr>;</expr_stmt>
				</block_content>}</block> <catch pos:start="113:35" pos:end="115:33">catch <parameter_list pos:start="113:41" pos:end="113:55">(<parameter pos:start="113:42" pos:end="113:54"><decl pos:start="113:42" pos:end="113:54"><type pos:start="113:42" pos:end="113:54"><name pos:start="113:42" pos:end="113:52">IOException</name></type> <name pos:start="113:54" pos:end="113:54">e</name></decl></parameter>)</parameter_list> <block pos:start="113:57" pos:end="115:33">{<block_content pos:start="114:41" pos:end="114:56">
					<expr_stmt pos:start="114:41" pos:end="114:56"><expr pos:start="114:41" pos:end="114:55"><call pos:start="114:41" pos:end="114:55"><name pos:start="114:41" pos:end="114:52"><name pos:start="114:41" pos:end="114:46">LOGGER</name><operator pos:start="114:47" pos:end="114:47">.</operator><name pos:start="114:48" pos:end="114:52">error</name></name><argument_list pos:start="114:53" pos:end="114:55">(<argument pos:start="114:54" pos:end="114:54"><expr pos:start="114:54" pos:end="114:54"><name pos:start="114:54" pos:end="114:54">e</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				</block_content>}</block></catch></try>
			</block_content>}</block></if></if_stmt>
		</block_content>}</block></finally></try>
	</block_content>}</block></function>

	<function pos:start="120:9" pos:end="138:9"><type pos:start="120:9" pos:end="120:20"><specifier pos:start="120:9" pos:end="120:15">private</specifier> <name pos:start="120:17" pos:end="120:20">void</name></type> <name pos:start="120:22" pos:end="120:35">processMessage</name><parameter_list pos:start="120:36" pos:end="120:66">(<parameter pos:start="120:37" pos:end="120:65"><decl pos:start="120:37" pos:end="120:65"><type pos:start="120:37" pos:end="120:57"><name pos:start="120:37" pos:end="120:57"><name pos:start="120:37" pos:end="120:54">AbstractUAVMessage</name><argument_list type="generic" pos:start="120:55" pos:end="120:57">&lt;<argument pos:start="120:56" pos:end="120:56"><name pos:start="120:56" pos:end="120:56">?</name></argument>&gt;</argument_list></name></type> <name pos:start="120:59" pos:end="120:65">message</name></decl></parameter>)</parameter_list> <block pos:start="120:68" pos:end="138:9">{<block_content pos:start="121:17" pos:end="137:17">
		<if_stmt pos:start="121:17" pos:end="137:17"><if pos:start="121:17" pos:end="125:17">if <condition pos:start="121:20" pos:end="121:55">(<expr pos:start="121:21" pos:end="121:54"><name pos:start="121:21" pos:end="121:27">message</name> <operator pos:start="121:29" pos:end="121:38">instanceof</operator> <name pos:start="121:40" pos:end="121:54">UAVStateMessage</name></expr>)</condition> <block pos:start="121:57" pos:end="125:17">{<block_content pos:start="122:25" pos:end="123:96">
			<expr_stmt pos:start="122:25" pos:end="122:74"><expr pos:start="122:25" pos:end="122:73"><call pos:start="122:25" pos:end="122:73"><name pos:start="122:25" pos:end="122:38"><name pos:start="122:25" pos:end="122:30">LOGGER</name><operator pos:start="122:31" pos:end="122:31">.</operator><name pos:start="122:32" pos:end="122:38">hwTrace</name></name><argument_list pos:start="122:39" pos:end="122:73">(<argument pos:start="122:40" pos:end="122:72"><expr pos:start="122:40" pos:end="122:72"><call pos:start="122:40" pos:end="122:72"><name pos:start="122:40" pos:end="122:63"><name pos:start="122:40" pos:end="122:56">UAVMessageFactory</name><operator pos:start="122:57" pos:end="122:57">.</operator><name pos:start="122:58" pos:end="122:63">toJson</name></name><argument_list pos:start="122:64" pos:end="122:72">(<argument pos:start="122:65" pos:end="122:71"><expr pos:start="122:65" pos:end="122:71"><name pos:start="122:65" pos:end="122:71">message</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt pos:start="123:25" pos:end="123:96"><expr pos:start="123:25" pos:end="123:95"><call pos:start="123:25" pos:end="123:95"><name pos:start="123:25" pos:end="123:66"><name pos:start="123:25" pos:end="123:44">dispatchQueueManager</name><operator pos:start="123:45" pos:end="123:45">.</operator><name pos:start="123:46" pos:end="123:66">postDroneStatusUpdate</name></name><argument_list pos:start="123:67" pos:end="123:95">(<argument pos:start="123:68" pos:end="123:85"><expr pos:start="123:68" pos:end="123:85"><call pos:start="123:68" pos:end="123:85"><name pos:start="123:68" pos:end="123:83"><name pos:start="123:68" pos:end="123:74">message</name><operator pos:start="123:75" pos:end="123:75">.</operator><name pos:start="123:76" pos:end="123:83">getUavid</name></name><argument_list pos:start="123:84" pos:end="123:85">()</argument_list></call></expr></argument>, <argument pos:start="123:88" pos:end="123:94"><expr pos:start="123:88" pos:end="123:94"><name pos:start="123:88" pos:end="123:94">message</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		</block_content>}</block></if> <if type="elseif" pos:start="125:19" pos:end="127:17">else if <condition pos:start="125:27" pos:end="125:67">(<expr pos:start="125:28" pos:end="125:66"><name pos:start="125:28" pos:end="125:34">message</name> <operator pos:start="125:36" pos:end="125:45">instanceof</operator> <name pos:start="125:47" pos:end="125:66">UAVModeChangeMessage</name></expr>)</condition> <block pos:start="125:69" pos:end="127:17">{<block_content pos:start="126:25" pos:end="126:96">
			<expr_stmt pos:start="126:25" pos:end="126:96"><expr pos:start="126:25" pos:end="126:95"><call pos:start="126:25" pos:end="126:95"><name pos:start="126:25" pos:end="126:66"><name pos:start="126:25" pos:end="126:44">dispatchQueueManager</name><operator pos:start="126:45" pos:end="126:45">.</operator><name pos:start="126:46" pos:end="126:66">postDroneStatusUpdate</name></name><argument_list pos:start="126:67" pos:end="126:95">(<argument pos:start="126:68" pos:end="126:85"><expr pos:start="126:68" pos:end="126:85"><call pos:start="126:68" pos:end="126:85"><name pos:start="126:68" pos:end="126:83"><name pos:start="126:68" pos:end="126:74">message</name><operator pos:start="126:75" pos:end="126:75">.</operator><name pos:start="126:76" pos:end="126:83">getUavid</name></name><argument_list pos:start="126:84" pos:end="126:85">()</argument_list></call></expr></argument>, <argument pos:start="126:88" pos:end="126:94"><expr pos:start="126:88" pos:end="126:94"><name pos:start="126:88" pos:end="126:94">message</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		</block_content>}</block></if> <if type="elseif" pos:start="127:19" pos:end="132:17">else if <condition pos:start="127:27" pos:end="127:66">(<expr pos:start="127:28" pos:end="127:65"><name pos:start="127:28" pos:end="127:34">message</name> <operator pos:start="127:36" pos:end="127:45">instanceof</operator> <name pos:start="127:47" pos:end="127:65">UAVHandshakeMessage</name></expr>)</condition> <block pos:start="127:68" pos:end="132:17">{<block_content pos:start="128:25" pos:end="130:121">
			<expr_stmt pos:start="128:25" pos:end="129:62"><expr pos:start="128:25" pos:end="129:61"><call pos:start="128:25" pos:end="129:61"><name pos:start="128:25" pos:end="128:37"><name pos:start="128:25" pos:end="128:30">LOGGER</name><operator pos:start="128:31" pos:end="128:31">.</operator><name pos:start="128:32" pos:end="128:37">hwInfo</name></name><argument_list pos:start="128:38" pos:end="129:61">(<argument pos:start="128:39" pos:end="129:60"><expr pos:start="128:39" pos:end="129:60"><call pos:start="128:39" pos:end="128:125"><name pos:start="128:39" pos:end="128:64"><name pos:start="128:39" pos:end="128:48">FormatUtil</name><operator pos:start="128:49" pos:end="128:49">.</operator><name pos:start="128:50" pos:end="128:64">formatTimestamp</name></name><argument_list pos:start="128:65" pos:end="128:125">(<argument pos:start="128:66" pos:end="128:87"><expr pos:start="128:66" pos:end="128:87"><call pos:start="128:66" pos:end="128:87"><name pos:start="128:66" pos:end="128:85"><name pos:start="128:66" pos:end="128:72">message</name><operator pos:start="128:73" pos:end="128:73">.</operator><name pos:start="128:74" pos:end="128:85">getTimestamp</name></name><argument_list pos:start="128:86" pos:end="128:87">()</argument_list></call></expr></argument>, <argument pos:start="128:90" pos:end="128:124"><expr pos:start="128:90" pos:end="128:124"><name pos:start="128:90" pos:end="128:124"><name pos:start="128:90" pos:end="128:99">FormatUtil</name><operator pos:start="128:100" pos:end="128:100">.</operator><name pos:start="128:101" pos:end="128:124">FORMAT_YEAR_FIRST_MILLIS</name></name></expr></argument>)</argument_list></call> <operator pos:start="128:127" pos:end="128:127">+</operator> <literal type="string" pos:start="128:129" pos:end="128:133">" - "</literal>
					<operator pos:start="129:41" pos:end="129:41">+</operator> <call pos:start="129:43" pos:end="129:60"><name pos:start="129:43" pos:end="129:58"><name pos:start="129:43" pos:end="129:49">message</name><operator pos:start="129:50" pos:end="129:50">.</operator><name pos:start="129:51" pos:end="129:58">toString</name></name><argument_list pos:start="129:59" pos:end="129:60">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt> 
			<expr_stmt pos:start="130:25" pos:end="130:121"><expr pos:start="130:25" pos:end="130:120"><call pos:start="130:25" pos:end="130:120"><name pos:start="130:25" pos:end="130:69"><name pos:start="130:25" pos:end="130:44">dispatchQueueManager</name><operator pos:start="130:45" pos:end="130:45">.</operator><name pos:start="130:46" pos:end="130:69">postDoneHandshakeMessage</name></name><argument_list pos:start="130:70" pos:end="130:120">(<argument pos:start="130:71" pos:end="130:88"><expr pos:start="130:71" pos:end="130:88"><call pos:start="130:71" pos:end="130:88"><name pos:start="130:71" pos:end="130:86"><name pos:start="130:71" pos:end="130:77">message</name><operator pos:start="130:78" pos:end="130:78">.</operator><name pos:start="130:79" pos:end="130:86">getUavid</name></name><argument_list pos:start="130:87" pos:end="130:88">()</argument_list></call></expr></argument>, <argument pos:start="130:91" pos:end="130:119"><expr pos:start="130:91" pos:end="130:119"><operator pos:start="130:91" pos:end="130:91">(</operator><name pos:start="130:92" pos:end="130:110">UAVHandshakeMessage</name><operator pos:start="130:111" pos:end="130:111">)</operator> <name pos:start="130:113" pos:end="130:119">message</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
 
		</block_content>}</block></if> <if type="elseif" pos:start="132:19" pos:end="135:17">else if <condition pos:start="132:27" pos:end="132:67">(<expr pos:start="132:28" pos:end="132:66"><name pos:start="132:28" pos:end="132:34">message</name> <operator pos:start="132:36" pos:end="132:45">instanceof</operator> <name pos:start="132:47" pos:end="132:66">UAVMonitoringMessage</name></expr>)</condition> <block pos:start="132:69" pos:end="135:17">{<block_content pos:start="133:25" pos:end="133:99">
			<expr_stmt pos:start="133:25" pos:end="133:99"><expr pos:start="133:25" pos:end="133:98"><call pos:start="133:25" pos:end="133:98"><name pos:start="133:25" pos:end="133:66"><name pos:start="133:25" pos:end="133:44">dispatchQueueManager</name><operator pos:start="133:45" pos:end="133:45">.</operator><name pos:start="133:46" pos:end="133:66">postMonitoringMessage</name></name><argument_list pos:start="133:67" pos:end="133:98">(<argument pos:start="133:68" pos:end="133:97"><expr pos:start="133:68" pos:end="133:97"><operator pos:start="133:68" pos:end="133:68">(</operator><name pos:start="133:69" pos:end="133:88">UAVMonitoringMessage</name><operator pos:start="133:89" pos:end="133:89">)</operator> <name pos:start="133:91" pos:end="133:97">message</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		</block_content>}</block></if> <if type="elseif" pos:start="135:19" pos:end="137:17">else if <condition pos:start="135:27" pos:end="135:68">(<expr pos:start="135:28" pos:end="135:67"><name pos:start="135:28" pos:end="135:34">message</name> <operator pos:start="135:36" pos:end="135:45">instanceof</operator> <name pos:start="135:47" pos:end="135:67">UAVAcknowledgeMessage</name></expr>)</condition> <block pos:start="135:70" pos:end="137:17">{<block_content pos:start="136:25" pos:end="136:82">
			<expr_stmt pos:start="136:25" pos:end="136:82"><expr pos:start="136:25" pos:end="136:81"><call pos:start="136:25" pos:end="136:64"><name pos:start="136:25" pos:end="136:62"><name pos:start="136:25" pos:end="136:50">DronologyMonitoringManager</name><operator pos:start="136:51" pos:end="136:51">.</operator><name pos:start="136:52" pos:end="136:62">getInstance</name></name><argument_list pos:start="136:63" pos:end="136:64">()</argument_list></call><operator pos:start="136:65" pos:end="136:65">.</operator><call pos:start="136:66" pos:end="136:81"><name pos:start="136:66" pos:end="136:72">publish</name><argument_list pos:start="136:73" pos:end="136:81">(<argument pos:start="136:74" pos:end="136:80"><expr pos:start="136:74" pos:end="136:80"><name pos:start="136:74" pos:end="136:80">message</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		</block_content>}</block></if></if_stmt>
	</block_content>}</block></function>

	<function pos:start="140:9" pos:end="143:9"><type pos:start="140:9" pos:end="140:19"><specifier pos:start="140:9" pos:end="140:14">public</specifier> <name pos:start="140:16" pos:end="140:19">void</name></type> <name pos:start="140:21" pos:end="140:28">tearDown</name><parameter_list pos:start="140:29" pos:end="140:30">()</parameter_list> <block pos:start="140:32" pos:end="143:9">{<block_content pos:start="141:17" pos:end="142:48">
		<expr_stmt pos:start="141:17" pos:end="141:32"><expr pos:start="141:17" pos:end="141:31"><call pos:start="141:17" pos:end="141:31"><name pos:start="141:17" pos:end="141:24"><name pos:start="141:17" pos:end="141:20">cont</name><operator pos:start="141:21" pos:end="141:21">.</operator><name pos:start="141:22" pos:end="141:24">set</name></name><argument_list pos:start="141:25" pos:end="141:31">(<argument pos:start="141:26" pos:end="141:30"><expr pos:start="141:26" pos:end="141:30"><literal type="boolean" pos:start="141:26" pos:end="141:30">false</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt pos:start="142:17" pos:end="142:48"><expr pos:start="142:17" pos:end="142:47"><call pos:start="142:17" pos:end="142:47"><name pos:start="142:17" pos:end="142:45"><name pos:start="142:17" pos:end="142:36">dispatchQueueManager</name><operator pos:start="142:37" pos:end="142:37">.</operator><name pos:start="142:38" pos:end="142:45">tearDown</name></name><argument_list pos:start="142:46" pos:end="142:47">()</argument_list></call></expr>;</expr_stmt>
	</block_content>}</block></function>

	<function pos:start="145:9" pos:end="147:9"><type pos:start="145:9" pos:end="145:21"><specifier pos:start="145:9" pos:end="145:14">public</specifier> <name pos:start="145:16" pos:end="145:21">String</name></type> <name pos:start="145:23" pos:end="145:37">getConnectionId</name><parameter_list pos:start="145:38" pos:end="145:39">()</parameter_list> <block pos:start="145:41" pos:end="147:9">{<block_content pos:start="146:17" pos:end="146:29">
		<return pos:start="146:17" pos:end="146:29">return <expr pos:start="146:24" pos:end="146:28"><literal type="string" pos:start="146:24" pos:end="146:28">"ADS"</literal></expr>;</return>
	</block_content>}</block></function>
}</block></class>
</unit>
