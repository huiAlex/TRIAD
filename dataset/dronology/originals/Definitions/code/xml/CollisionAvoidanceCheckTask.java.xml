<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="Java" filename="flatCode/CollisionAvoidanceCheckTask.java" pos:tabs="8"><package pos:start="1:1" pos:end="1:49">package <name pos:start="1:9" pos:end="1:48"><name pos:start="1:9" pos:end="1:11">edu</name><operator pos:start="1:12" pos:end="1:12">.</operator><name pos:start="1:13" pos:end="1:14">nd</name><operator pos:start="1:15" pos:end="1:15">.</operator><name pos:start="1:16" pos:end="1:24">dronology</name><operator pos:start="1:25" pos:end="1:25">.</operator><name pos:start="1:26" pos:end="1:29">core</name><operator pos:start="1:30" pos:end="1:30">.</operator><name pos:start="1:31" pos:end="1:48">collisionavoidance</name></name>;</package>

<import pos:start="3:1" pos:end="3:53">import <name pos:start="3:8" pos:end="3:52"><name pos:start="3:8" pos:end="3:10">edu</name><operator pos:start="3:11" pos:end="3:11">.</operator><name pos:start="3:12" pos:end="3:13">nd</name><operator pos:start="3:14" pos:end="3:14">.</operator><name pos:start="3:15" pos:end="3:23">dronology</name><operator pos:start="3:24" pos:end="3:24">.</operator><name pos:start="3:25" pos:end="3:28">core</name><operator pos:start="3:29" pos:end="3:29">.</operator><name pos:start="3:30" pos:end="3:34">fleet</name><operator pos:start="3:35" pos:end="3:35">.</operator><name pos:start="3:36" pos:end="3:52">DroneFleetManager</name></name>;</import>
<import pos:start="4:1" pos:end="4:50">import <name pos:start="4:8" pos:end="4:49"><name pos:start="4:8" pos:end="4:10">edu</name><operator pos:start="4:11" pos:end="4:11">.</operator><name pos:start="4:12" pos:end="4:13">nd</name><operator pos:start="4:14" pos:end="4:14">.</operator><name pos:start="4:15" pos:end="4:23">dronology</name><operator pos:start="4:24" pos:end="4:24">.</operator><name pos:start="4:25" pos:end="4:28">core</name><operator pos:start="4:29" pos:end="4:29">.</operator><name pos:start="4:30" pos:end="4:36">vehicle</name><operator pos:start="4:37" pos:end="4:37">.</operator><name pos:start="4:38" pos:end="4:49">ManagedDrone</name></name>;</import>
<import pos:start="5:1" pos:end="5:30">import <name pos:start="5:8" pos:end="5:29"><name pos:start="5:8" pos:end="5:10">net</name><operator pos:start="5:11" pos:end="5:11">.</operator><name pos:start="5:12" pos:end="5:13">mv</name><operator pos:start="5:14" pos:end="5:14">.</operator><name pos:start="5:15" pos:end="5:21">logging</name><operator pos:start="5:22" pos:end="5:22">.</operator><name pos:start="5:23" pos:end="5:29">ILogger</name></name>;</import>
<import pos:start="6:1" pos:end="6:37">import <name pos:start="6:8" pos:end="6:36"><name pos:start="6:8" pos:end="6:10">net</name><operator pos:start="6:11" pos:end="6:11">.</operator><name pos:start="6:12" pos:end="6:13">mv</name><operator pos:start="6:14" pos:end="6:14">.</operator><name pos:start="6:15" pos:end="6:21">logging</name><operator pos:start="6:22" pos:end="6:22">.</operator><name pos:start="6:23" pos:end="6:36">LoggerProvider</name></name>;</import>

<import pos:start="8:1" pos:end="8:19">import <name pos:start="8:8" pos:end="8:18"><name pos:start="8:8" pos:end="8:11">java</name><operator pos:start="8:12" pos:end="8:12">.</operator><name pos:start="8:13" pos:end="8:16">util</name><operator pos:start="8:17" pos:end="8:17">.</operator><name pos:start="8:18" pos:end="8:18">*</name></name>;</import>
<import pos:start="9:1" pos:end="9:47">import <name pos:start="9:8" pos:end="9:46"><name pos:start="9:8" pos:end="9:11">java</name><operator pos:start="9:12" pos:end="9:12">.</operator><name pos:start="9:13" pos:end="9:16">util</name><operator pos:start="9:17" pos:end="9:17">.</operator><name pos:start="9:18" pos:end="9:27">concurrent</name><operator pos:start="9:28" pos:end="9:28">.</operator><name pos:start="9:29" pos:end="9:46">ArrayBlockingQueue</name></name>;</import>
<import pos:start="10:1" pos:end="10:37">import <name pos:start="10:8" pos:end="10:36"><name pos:start="10:8" pos:end="10:11">java</name><operator pos:start="10:12" pos:end="10:12">.</operator><name pos:start="10:13" pos:end="10:16">util</name><operator pos:start="10:17" pos:end="10:17">.</operator><name pos:start="10:18" pos:end="10:27">concurrent</name><operator pos:start="10:28" pos:end="10:28">.</operator><name pos:start="10:29" pos:end="10:36">TimeUnit</name></name>;</import>
<import pos:start="11:1" pos:end="11:34">import <name pos:start="11:8" pos:end="11:33"><name pos:start="11:8" pos:end="11:11">java</name><operator pos:start="11:12" pos:end="11:12">.</operator><name pos:start="11:13" pos:end="11:16">util</name><operator pos:start="11:17" pos:end="11:17">.</operator><name pos:start="11:18" pos:end="11:23">stream</name><operator pos:start="11:24" pos:end="11:24">.</operator><name pos:start="11:25" pos:end="11:33">Collector</name></name>;</import>
<import pos:start="12:1" pos:end="12:35">import <name pos:start="12:8" pos:end="12:34"><name pos:start="12:8" pos:end="12:11">java</name><operator pos:start="12:12" pos:end="12:12">.</operator><name pos:start="12:13" pos:end="12:16">util</name><operator pos:start="12:17" pos:end="12:17">.</operator><name pos:start="12:18" pos:end="12:23">stream</name><operator pos:start="12:24" pos:end="12:24">.</operator><name pos:start="12:25" pos:end="12:34">Collectors</name></name>;</import>

<class pos:start="14:1" pos:end="73:1"><specifier pos:start="14:1" pos:end="14:6">public</specifier> class <name pos:start="14:14" pos:end="14:40">CollisionAvoidanceCheckTask</name> <super_list pos:start="14:42" pos:end="14:58"><extends pos:start="14:42" pos:end="14:58">extends <super pos:start="14:50" pos:end="14:58"><name pos:start="14:50" pos:end="14:58">TimerTask</name></super></extends></super_list> <block pos:start="14:60" pos:end="73:1">{
    <decl_stmt pos:start="15:5" pos:end="15:102"><decl pos:start="15:5" pos:end="15:101"><type pos:start="15:5" pos:end="15:32"><specifier pos:start="15:5" pos:end="15:11">private</specifier> <specifier pos:start="15:13" pos:end="15:18">static</specifier> <specifier pos:start="15:20" pos:end="15:24">final</specifier> <name pos:start="15:26" pos:end="15:32">ILogger</name></type> <name pos:start="15:34" pos:end="15:39">LOGGER</name> <init pos:start="15:41" pos:end="15:101">= <expr pos:start="15:43" pos:end="15:101"><call pos:start="15:43" pos:end="15:101"><name pos:start="15:43" pos:end="15:66"><name pos:start="15:43" pos:end="15:56">LoggerProvider</name><operator pos:start="15:57" pos:end="15:57">.</operator><name pos:start="15:58" pos:end="15:66">getLogger</name></name><argument_list pos:start="15:67" pos:end="15:101">(<argument pos:start="15:68" pos:end="15:100"><expr pos:start="15:68" pos:end="15:100"><name pos:start="15:68" pos:end="15:100"><name pos:start="15:68" pos:end="15:94">CollisionAvoidanceCheckTask</name><operator pos:start="15:95" pos:end="15:95">.</operator><name pos:start="15:96" pos:end="15:100">class</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="16:5" pos:end="16:51"><decl pos:start="16:5" pos:end="16:50"><type pos:start="16:5" pos:end="16:34"><specifier pos:start="16:5" pos:end="16:11">private</specifier> <specifier pos:start="16:13" pos:end="16:17">final</specifier> <name pos:start="16:19" pos:end="16:34">CollisionAvoider</name></type> <name pos:start="16:36" pos:end="16:50">avoiderStrategy</name></decl>;</decl_stmt>
    <decl_stmt pos:start="17:5" pos:end="17:42"><decl pos:start="17:5" pos:end="17:41"><type pos:start="17:5" pos:end="17:26"><specifier pos:start="17:5" pos:end="17:11">private</specifier> <name pos:start="17:13" pos:end="17:26">DroneCollector</name></type> <name pos:start="17:28" pos:end="17:41">droneCollector</name></decl>;</decl_stmt>
    <decl_stmt pos:start="18:5" pos:end="18:71"><decl pos:start="18:5" pos:end="18:70"><type pos:start="18:5" pos:end="18:48"><specifier pos:start="18:5" pos:end="18:11">private</specifier> <specifier pos:start="18:13" pos:end="18:17">final</specifier> <name pos:start="18:19" pos:end="18:48"><name pos:start="18:19" pos:end="18:25">HashMap</name><argument_list type="generic" pos:start="18:26" pos:end="18:48">&lt;<argument pos:start="18:27" pos:end="18:32"><name pos:start="18:27" pos:end="18:32">String</name></argument>, <argument pos:start="18:35" pos:end="18:47"><name pos:start="18:35" pos:end="18:47">DroneSnapshot</name></argument>&gt;</argument_list></name></type> <name pos:start="18:50" pos:end="18:52">tmp</name> <init pos:start="18:54" pos:end="18:70">= <expr pos:start="18:56" pos:end="18:70"><operator pos:start="18:56" pos:end="18:58">new</operator> <call pos:start="18:60" pos:end="18:70"><name pos:start="18:60" pos:end="18:68"><name pos:start="18:60" pos:end="18:66">HashMap</name><argument_list type="generic" pos:start="18:67" pos:end="18:68">&lt;&gt;</argument_list></name><argument_list pos:start="18:69" pos:end="18:70">()</argument_list></call></expr></init></decl>;</decl_stmt>

    <constructor pos:start="20:5" pos:end="29:5"><specifier pos:start="20:5" pos:end="20:10">public</specifier> <name pos:start="20:12" pos:end="20:38">CollisionAvoidanceCheckTask</name><parameter_list pos:start="20:39" pos:end="20:72">(<parameter pos:start="20:40" pos:end="20:71"><decl pos:start="20:40" pos:end="20:71"><type pos:start="20:40" pos:end="20:55"><name pos:start="20:40" pos:end="20:55">CollisionAvoider</name></type> <name pos:start="20:57" pos:end="20:71">avoiderStrategy</name></decl></parameter>)</parameter_list> <block pos:start="20:74" pos:end="29:5">{<block_content pos:start="21:9" pos:end="28:10">
        <expr_stmt pos:start="21:9" pos:end="21:47"><expr pos:start="21:9" pos:end="21:46"><name pos:start="21:9" pos:end="21:28"><name pos:start="21:9" pos:end="21:12">this</name><operator pos:start="21:13" pos:end="21:13">.</operator><name pos:start="21:14" pos:end="21:28">avoiderStrategy</name></name> <operator pos:start="21:30" pos:end="21:30">=</operator> <name pos:start="21:32" pos:end="21:46">avoiderStrategy</name></expr>;</expr_stmt>
        <expr_stmt pos:start="22:9" pos:end="28:10"><expr pos:start="22:9" pos:end="28:9"><name pos:start="22:9" pos:end="22:27"><name pos:start="22:9" pos:end="22:12">this</name><operator pos:start="22:13" pos:end="22:13">.</operator><name pos:start="22:14" pos:end="22:27">droneCollector</name></name> <operator pos:start="22:29" pos:end="22:29">=</operator> <operator pos:start="22:31" pos:end="22:33">new</operator> <class pos:start="22:35" pos:end="28:9"><super pos:start="22:35" pos:end="22:48"><name pos:start="22:35" pos:end="22:48">DroneCollector</name></super><argument_list pos:start="22:49" pos:end="22:50">()</argument_list> <block pos:start="22:52" pos:end="28:9">{
            <function pos:start="23:13" pos:end="27:13"><annotation pos:start="23:13" pos:end="23:21">@<name pos:start="23:14" pos:end="23:21">Override</name></annotation>
            <type pos:start="24:13" pos:end="24:37"><specifier pos:start="24:13" pos:end="24:18">public</specifier> <name pos:start="24:20" pos:end="24:37"><name pos:start="24:20" pos:end="24:23">List</name><argument_list type="generic" pos:start="24:24" pos:end="24:37">&lt;<argument pos:start="24:25" pos:end="24:36"><name pos:start="24:25" pos:end="24:36">ManagedDrone</name></argument>&gt;</argument_list></name></type> <name pos:start="24:39" pos:end="24:54">getManagedDrones</name><parameter_list pos:start="24:55" pos:end="24:56">()</parameter_list> <block pos:start="24:58" pos:end="27:13">{<block_content pos:start="25:17" pos:end="25:77">
                <return pos:start="25:17" pos:end="25:77">return <expr pos:start="25:24" pos:end="25:76"><call pos:start="25:24" pos:end="25:54"><name pos:start="25:24" pos:end="25:52"><name pos:start="25:24" pos:end="25:40">DroneFleetManager</name><operator pos:start="25:41" pos:end="25:41">.</operator><name pos:start="25:42" pos:end="25:52">getInstance</name></name><argument_list pos:start="25:53" pos:end="25:54">()</argument_list></call><operator pos:start="25:55" pos:end="25:55">.</operator><call pos:start="25:56" pos:end="25:76"><name pos:start="25:56" pos:end="25:74">getRegisteredDrones</name><argument_list pos:start="25:75" pos:end="25:76">()</argument_list></call></expr>;</return>
<comment type="line" pos:start="26:1" pos:end="26:63">//                return Collections.&lt;ManagedDrone&gt;emptyList();</comment>
            </block_content>}</block></function>
        }</block></class></expr>;</expr_stmt>
    </block_content>}</block></constructor>

    <function pos:start="31:5" pos:end="71:5"><annotation pos:start="31:5" pos:end="31:13">@<name pos:start="31:6" pos:end="31:13">Override</name></annotation>
    <type pos:start="32:5" pos:end="32:15"><specifier pos:start="32:5" pos:end="32:10">public</specifier> <name pos:start="32:12" pos:end="32:15">void</name></type> <name pos:start="32:17" pos:end="32:19">run</name><parameter_list pos:start="32:20" pos:end="32:21">()</parameter_list> <block pos:start="32:23" pos:end="71:5">{<block_content pos:start="33:9" pos:end="70:9">
        <expr_stmt pos:start="33:9" pos:end="33:46"><expr pos:start="33:9" pos:end="33:45"><call pos:start="33:9" pos:end="33:45"><name pos:start="33:9" pos:end="33:20"><name pos:start="33:9" pos:end="33:14">LOGGER</name><operator pos:start="33:15" pos:end="33:15">.</operator><name pos:start="33:16" pos:end="33:20">debug</name></name><argument_list pos:start="33:21" pos:end="33:45">(<argument pos:start="33:22" pos:end="33:44"><expr pos:start="33:22" pos:end="33:44"><literal type="string" pos:start="33:22" pos:end="33:44">"CA timer task started"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <decl_stmt pos:start="34:9" pos:end="37:40"><decl pos:start="34:9" pos:end="37:39"><type pos:start="34:9" pos:end="34:26"><name pos:start="34:9" pos:end="34:26"><name pos:start="34:9" pos:end="34:12">List</name><argument_list type="generic" pos:start="34:13" pos:end="34:26">&lt;<argument pos:start="34:14" pos:end="34:25"><name pos:start="34:14" pos:end="34:25">ManagedDrone</name></argument>&gt;</argument_list></name></type> <name pos:start="34:28" pos:end="34:36">allDrones</name> <init pos:start="34:38" pos:end="37:39">= <expr pos:start="34:40" pos:end="37:39"><call pos:start="34:40" pos:end="34:72"><name pos:start="34:40" pos:end="34:70"><name pos:start="34:40" pos:end="34:53">droneCollector</name><operator pos:start="34:54" pos:end="34:54">.</operator><name pos:start="34:55" pos:end="34:70">getManagedDrones</name></name><argument_list pos:start="34:71" pos:end="34:72">()</argument_list></call><operator pos:start="34:73" pos:end="34:73">.</operator><call pos:start="34:74" pos:end="34:81"><name pos:start="34:74" pos:end="34:79">stream</name><argument_list pos:start="34:80" pos:end="34:81">()</argument_list></call><operator pos:start="34:82" pos:end="34:82">.</operator><call pos:start="34:83" pos:end="37:10"><name pos:start="34:83" pos:end="34:88">filter</name><argument_list pos:start="34:89" pos:end="37:10">(<argument pos:start="34:90" pos:end="37:9"><expr pos:start="34:90" pos:end="37:9"><lambda pos:start="34:90" pos:end="37:9"><parameter_list type="pseudo" pos:start="34:90" pos:end="34:92"><parameter pos:start="34:90" pos:end="34:92"><decl pos:start="34:90" pos:end="34:92"><name pos:start="34:90" pos:end="34:92">uav</name></decl></parameter></parameter_list> -&gt; <block pos:start="34:97" pos:end="37:9">{<block_content pos:start="36:13" pos:end="36:35">
            <comment type="line" pos:start="35:13" pos:end="35:96">// return uav.getFlightModeState().isInAir() || uav.getFlightModeState().isFlying();</comment>
            <return pos:start="36:13" pos:end="36:35">return <expr pos:start="36:20" pos:end="36:34"><call pos:start="36:20" pos:end="36:34"><name pos:start="36:20" pos:end="36:32"><name pos:start="36:20" pos:end="36:22">uav</name><operator pos:start="36:23" pos:end="36:23">.</operator><name pos:start="36:24" pos:end="36:32">isStarted</name></name><argument_list pos:start="36:33" pos:end="36:34">()</argument_list></call></expr>;</return>
        </block_content>}</block></lambda></expr></argument>)</argument_list></call><operator pos:start="37:11" pos:end="37:11">.</operator><call pos:start="37:12" pos:end="37:39"><name pos:start="37:12" pos:end="37:18">collect</name><argument_list pos:start="37:19" pos:end="37:39">(<argument pos:start="37:20" pos:end="37:38"><expr pos:start="37:20" pos:end="37:38"><call pos:start="37:20" pos:end="37:38"><name pos:start="37:20" pos:end="37:36"><name pos:start="37:20" pos:end="37:29">Collectors</name><operator pos:start="37:30" pos:end="37:30">.</operator><name pos:start="37:31" pos:end="37:36">toList</name></name><argument_list pos:start="37:37" pos:end="37:38">()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <if_stmt pos:start="38:9" pos:end="40:9"><if pos:start="38:9" pos:end="40:9">if <condition pos:start="38:12" pos:end="38:33">(<expr pos:start="38:13" pos:end="38:32"><call pos:start="38:13" pos:end="38:28"><name pos:start="38:13" pos:end="38:26"><name pos:start="38:13" pos:end="38:21">allDrones</name><operator pos:start="38:22" pos:end="38:22">.</operator><name pos:start="38:23" pos:end="38:26">size</name></name><argument_list pos:start="38:27" pos:end="38:28">()</argument_list></call> <operator pos:start="38:30" pos:end="38:30">&lt;</operator> <literal type="number" pos:start="38:32" pos:end="38:32">1</literal></expr>)</condition> <block pos:start="38:35" pos:end="40:9">{<block_content pos:start="39:13" pos:end="39:19">
            <return pos:start="39:13" pos:end="39:19">return;</return>
        </block_content>}</block></if></if_stmt>
        <decl_stmt pos:start="41:9" pos:end="41:105"><decl pos:start="41:9" pos:end="41:104"><type pos:start="41:9" pos:end="41:47"><name pos:start="41:9" pos:end="41:47"><name pos:start="41:9" pos:end="41:26">ArrayBlockingQueue</name><argument_list type="generic" pos:start="41:27" pos:end="41:47">&lt;<argument pos:start="41:28" pos:end="41:46"><name pos:start="41:28" pos:end="41:46">DroneSnapshotOption</name></argument>&gt;</argument_list></name></type> <name pos:start="41:49" pos:end="41:59">returnQueue</name> <init pos:start="41:61" pos:end="41:104">= <expr pos:start="41:63" pos:end="41:104"><operator pos:start="41:63" pos:end="41:65">new</operator> <call pos:start="41:67" pos:end="41:104"><name pos:start="41:67" pos:end="41:86"><name pos:start="41:67" pos:end="41:84">ArrayBlockingQueue</name><argument_list type="generic" pos:start="41:85" pos:end="41:86">&lt;&gt;</argument_list></name><argument_list pos:start="41:87" pos:end="41:104">(<argument pos:start="41:88" pos:end="41:103"><expr pos:start="41:88" pos:end="41:103"><call pos:start="41:88" pos:end="41:103"><name pos:start="41:88" pos:end="41:101"><name pos:start="41:88" pos:end="41:96">allDrones</name><operator pos:start="41:97" pos:end="41:97">.</operator><name pos:start="41:98" pos:end="41:101">size</name></name><argument_list pos:start="41:102" pos:end="41:103">()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt pos:start="42:9" pos:end="42:59"><decl pos:start="42:9" pos:end="42:58"><type pos:start="42:9" pos:end="42:32"><name pos:start="42:9" pos:end="42:32"><name pos:start="42:9" pos:end="42:17">ArrayList</name><argument_list type="generic" pos:start="42:18" pos:end="42:32">&lt;<argument pos:start="42:19" pos:end="42:31"><name pos:start="42:19" pos:end="42:31">DroneSnapshot</name></argument>&gt;</argument_list></name></type> <name pos:start="42:34" pos:end="42:38">input</name> <init pos:start="42:40" pos:end="42:58">= <expr pos:start="42:42" pos:end="42:58"><operator pos:start="42:42" pos:end="42:44">new</operator> <call pos:start="42:46" pos:end="42:58"><name pos:start="42:46" pos:end="42:56"><name pos:start="42:46" pos:end="42:54">ArrayList</name><argument_list type="generic" pos:start="42:55" pos:end="42:56">&lt;&gt;</argument_list></name><argument_list pos:start="42:57" pos:end="42:58">()</argument_list></call></expr></init></decl>;</decl_stmt>
        <expr_stmt pos:start="43:9" pos:end="43:20"><expr pos:start="43:9" pos:end="43:19"><call pos:start="43:9" pos:end="43:19"><name pos:start="43:9" pos:end="43:17"><name pos:start="43:9" pos:end="43:11">tmp</name><operator pos:start="43:12" pos:end="43:12">.</operator><name pos:start="43:13" pos:end="43:17">clear</name></name><argument_list pos:start="43:18" pos:end="43:19">()</argument_list></call></expr>;</expr_stmt>
        <for pos:start="44:9" pos:end="46:9">for <control pos:start="44:13" pos:end="44:51">(<init pos:start="44:14" pos:end="44:50"><decl pos:start="44:14" pos:end="44:50"><type pos:start="44:14" pos:end="44:25"><name pos:start="44:14" pos:end="44:25">ManagedDrone</name></type> <name pos:start="44:27" pos:end="44:38">managedDrone</name> <range pos:start="44:40" pos:end="44:50">: <expr pos:start="44:42" pos:end="44:50"><name pos:start="44:42" pos:end="44:50">allDrones</name></expr></range></decl></init>)</control> <block pos:start="44:53" pos:end="46:9">{<block_content pos:start="45:13" pos:end="45:65">
            <expr_stmt pos:start="45:13" pos:end="45:65"><expr pos:start="45:13" pos:end="45:64"><call pos:start="45:13" pos:end="45:39"><name pos:start="45:13" pos:end="45:37"><name pos:start="45:13" pos:end="45:24">managedDrone</name><operator pos:start="45:25" pos:end="45:25">.</operator><name pos:start="45:26" pos:end="45:37">getMessenger</name></name><argument_list pos:start="45:38" pos:end="45:39">()</argument_list></call><operator pos:start="45:40" pos:end="45:40">.</operator><call pos:start="45:41" pos:end="45:64"><name pos:start="45:41" pos:end="45:51">getSnapshot</name><argument_list pos:start="45:52" pos:end="45:64">(<argument pos:start="45:53" pos:end="45:63"><expr pos:start="45:53" pos:end="45:63"><name pos:start="45:53" pos:end="45:63">returnQueue</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></for>
        <for pos:start="47:9" pos:end="61:9">for <control pos:start="47:13" pos:end="47:50">(<init pos:start="47:14" pos:end="47:49"><decl pos:start="47:14" pos:end="47:49"><type pos:start="47:14" pos:end="47:25"><name pos:start="47:14" pos:end="47:25">ManagedDrone</name></type> <name pos:start="47:27" pos:end="47:38">managedDrone</name><range pos:start="47:39" pos:end="47:49">: <expr pos:start="47:41" pos:end="47:49"><name pos:start="47:41" pos:end="47:49">allDrones</name></expr></range></decl></init>)</control> <block pos:start="47:52" pos:end="61:9">{<block_content pos:start="48:13" pos:end="60:13">
            <try pos:start="48:13" pos:end="60:13">try <block pos:start="48:17" pos:end="57:13">{<block_content pos:start="49:17" pos:end="56:17">
                <decl_stmt pos:start="49:17" pos:end="49:72"><decl pos:start="49:17" pos:end="49:71"><type pos:start="49:17" pos:end="49:35"><name pos:start="49:17" pos:end="49:35">DroneSnapshotOption</name></type> <name pos:start="49:37" pos:end="49:50">snapshotOption</name> <init pos:start="49:52" pos:end="49:71">= <expr pos:start="49:54" pos:end="49:71"><call pos:start="49:54" pos:end="49:71"><name pos:start="49:54" pos:end="49:69"><name pos:start="49:54" pos:end="49:64">returnQueue</name><operator pos:start="49:65" pos:end="49:65">.</operator><name pos:start="49:66" pos:end="49:69">take</name></name><argument_list pos:start="49:70" pos:end="49:71">()</argument_list></call></expr></init></decl>;</decl_stmt>
                <decl_stmt pos:start="50:17" pos:end="50:65"><decl pos:start="50:17" pos:end="50:64"><type pos:start="50:17" pos:end="50:29"><name pos:start="50:17" pos:end="50:29">DroneSnapshot</name></type> <name pos:start="50:31" pos:end="50:38">snapshot</name> <init pos:start="50:40" pos:end="50:64">= <expr pos:start="50:42" pos:end="50:64"><name pos:start="50:42" pos:end="50:64"><name pos:start="50:42" pos:end="50:55">snapshotOption</name><operator pos:start="50:56" pos:end="50:56">.</operator><name pos:start="50:57" pos:end="50:64">snapshot</name></name></expr></init></decl>;</decl_stmt>
                <if_stmt pos:start="51:17" pos:end="56:17"><if pos:start="51:17" pos:end="54:17">if <condition pos:start="51:20" pos:end="51:46">(<expr pos:start="51:21" pos:end="51:45"><call pos:start="51:21" pos:end="51:45"><name pos:start="51:21" pos:end="51:35"><name pos:start="51:21" pos:end="51:27">Objects</name><operator pos:start="51:28" pos:end="51:28">.</operator><name pos:start="51:29" pos:end="51:35">nonNull</name></name><argument_list pos:start="51:36" pos:end="51:45">(<argument pos:start="51:37" pos:end="51:44"><expr pos:start="51:37" pos:end="51:44"><name pos:start="51:37" pos:end="51:44">snapshot</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="51:48" pos:end="54:17">{<block_content pos:start="52:21" pos:end="53:58">
                    <expr_stmt pos:start="52:21" pos:end="52:40"><expr pos:start="52:21" pos:end="52:39"><call pos:start="52:21" pos:end="52:39"><name pos:start="52:21" pos:end="52:29"><name pos:start="52:21" pos:end="52:25">input</name><operator pos:start="52:26" pos:end="52:26">.</operator><name pos:start="52:27" pos:end="52:29">add</name></name><argument_list pos:start="52:30" pos:end="52:39">(<argument pos:start="52:31" pos:end="52:38"><expr pos:start="52:31" pos:end="52:38"><name pos:start="52:31" pos:end="52:38">snapshot</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                    <expr_stmt pos:start="53:21" pos:end="53:58"><expr pos:start="53:21" pos:end="53:57"><call pos:start="53:21" pos:end="53:57"><name pos:start="53:21" pos:end="53:27"><name pos:start="53:21" pos:end="53:23">tmp</name><operator pos:start="53:24" pos:end="53:24">.</operator><name pos:start="53:25" pos:end="53:27">put</name></name><argument_list pos:start="53:28" pos:end="53:57">(<argument pos:start="53:29" pos:end="53:46"><expr pos:start="53:29" pos:end="53:46"><call pos:start="53:29" pos:end="53:46"><name pos:start="53:29" pos:end="53:44"><name pos:start="53:29" pos:end="53:36">snapshot</name><operator pos:start="53:37" pos:end="53:37">.</operator><name pos:start="53:38" pos:end="53:44">getName</name></name><argument_list pos:start="53:45" pos:end="53:46">()</argument_list></call></expr></argument>, <argument pos:start="53:49" pos:end="53:56"><expr pos:start="53:49" pos:end="53:56"><name pos:start="53:49" pos:end="53:56">snapshot</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                </block_content>}</block></if> <else pos:start="54:19" pos:end="56:17">else <block pos:start="54:24" pos:end="56:17">{<block_content pos:start="55:21" pos:end="55:91">
                    <expr_stmt pos:start="55:21" pos:end="55:91"><expr pos:start="55:21" pos:end="55:90"><call pos:start="55:21" pos:end="55:90"><name pos:start="55:21" pos:end="55:32"><name pos:start="55:21" pos:end="55:26">LOGGER</name><operator pos:start="55:27" pos:end="55:27">.</operator><name pos:start="55:28" pos:end="55:32">debug</name></name><argument_list pos:start="55:33" pos:end="55:90">(<argument pos:start="55:34" pos:end="55:89"><expr pos:start="55:34" pos:end="55:89"><name pos:start="55:34" pos:end="55:57"><name pos:start="55:34" pos:end="55:47">snapshotOption</name><operator pos:start="55:48" pos:end="55:48">.</operator><name pos:start="55:49" pos:end="55:57">droneName</name></name> <operator pos:start="55:59" pos:end="55:59">+</operator> <literal type="string" pos:start="55:61" pos:end="55:89">" didn't provide a snapshot."</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                </block_content>}</block></else></if_stmt>
            </block_content>}</block> <catch pos:start="57:15" pos:end="60:13">catch <parameter_list pos:start="57:21" pos:end="57:33">(<parameter pos:start="57:22" pos:end="57:32"><decl pos:start="57:22" pos:end="57:32"><type pos:start="57:22" pos:end="57:32"><name pos:start="57:22" pos:end="57:30">Exception</name></type> <name pos:start="57:32" pos:end="57:32">e</name></decl></parameter>)</parameter_list> <block pos:start="57:35" pos:end="60:13">{<block_content pos:start="58:17" pos:end="59:23">
                <expr_stmt pos:start="58:17" pos:end="58:32"><expr pos:start="58:17" pos:end="58:31"><call pos:start="58:17" pos:end="58:31"><name pos:start="58:17" pos:end="58:28"><name pos:start="58:17" pos:end="58:22">LOGGER</name><operator pos:start="58:23" pos:end="58:23">.</operator><name pos:start="58:24" pos:end="58:28">error</name></name><argument_list pos:start="58:29" pos:end="58:31">(<argument pos:start="58:30" pos:end="58:30"><expr pos:start="58:30" pos:end="58:30"><name pos:start="58:30" pos:end="58:30">e</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <return pos:start="59:17" pos:end="59:23">return;</return>
            </block_content>}</block></catch></try>
        </block_content>}</block></for>

        <expr_stmt pos:start="63:9" pos:end="63:69"><expr pos:start="63:9" pos:end="63:68"><call pos:start="63:9" pos:end="63:68"><name pos:start="63:9" pos:end="63:20"><name pos:start="63:9" pos:end="63:14">LOGGER</name><operator pos:start="63:15" pos:end="63:15">.</operator><name pos:start="63:16" pos:end="63:20">debug</name></name><argument_list pos:start="63:21" pos:end="63:68">(<argument pos:start="63:22" pos:end="63:67"><expr pos:start="63:22" pos:end="63:67"><literal type="string" pos:start="63:22" pos:end="63:40">"Running avoid on "</literal> <operator pos:start="63:42" pos:end="63:42">+</operator> <call pos:start="63:44" pos:end="63:55"><name pos:start="63:44" pos:end="63:53"><name pos:start="63:44" pos:end="63:48">input</name><operator pos:start="63:49" pos:end="63:49">.</operator><name pos:start="63:50" pos:end="63:53">size</name></name><argument_list pos:start="63:54" pos:end="63:55">()</argument_list></call> <operator pos:start="63:57" pos:end="63:57">+</operator> <literal type="string" pos:start="63:59" pos:end="63:67">" drones"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt pos:start="64:9" pos:end="64:37"><expr pos:start="64:9" pos:end="64:36"><call pos:start="64:9" pos:end="64:36"><name pos:start="64:9" pos:end="64:29"><name pos:start="64:9" pos:end="64:23">avoiderStrategy</name><operator pos:start="64:24" pos:end="64:24">.</operator><name pos:start="64:25" pos:end="64:29">avoid</name></name><argument_list pos:start="64:30" pos:end="64:36">(<argument pos:start="64:31" pos:end="64:35"><expr pos:start="64:31" pos:end="64:35"><name pos:start="64:31" pos:end="64:35">input</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <for pos:start="66:9" pos:end="70:9">for <control pos:start="66:13" pos:end="66:51">(<init pos:start="66:14" pos:end="66:50"><decl pos:start="66:14" pos:end="66:50"><type pos:start="66:14" pos:end="66:25"><name pos:start="66:14" pos:end="66:25">ManagedDrone</name></type> <name pos:start="66:27" pos:end="66:38">managedDrone</name> <range pos:start="66:40" pos:end="66:50">: <expr pos:start="66:42" pos:end="66:50"><name pos:start="66:42" pos:end="66:50">allDrones</name></expr></range></decl></init>)</control> <block pos:start="66:53" pos:end="70:9">{<block_content pos:start="67:13" pos:end="69:13">
            <if_stmt pos:start="67:13" pos:end="69:13"><if pos:start="67:13" pos:end="69:13">if <condition pos:start="67:16" pos:end="67:61">(<expr pos:start="67:17" pos:end="67:60"><call pos:start="67:17" pos:end="67:60"><name pos:start="67:17" pos:end="67:31"><name pos:start="67:17" pos:end="67:19">tmp</name><operator pos:start="67:20" pos:end="67:20">.</operator><name pos:start="67:21" pos:end="67:31">containsKey</name></name><argument_list pos:start="67:32" pos:end="67:60">(<argument pos:start="67:33" pos:end="67:59"><expr pos:start="67:33" pos:end="67:59"><call pos:start="67:33" pos:end="67:59"><name pos:start="67:33" pos:end="67:57"><name pos:start="67:33" pos:end="67:44">managedDrone</name><operator pos:start="67:45" pos:end="67:45">.</operator><name pos:start="67:46" pos:end="67:57">getDroneName</name></name><argument_list pos:start="67:58" pos:end="67:59">()</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="67:63" pos:end="69:13">{<block_content pos:start="68:17" pos:end="68:111">
                <expr_stmt pos:start="68:17" pos:end="68:111"><expr pos:start="68:17" pos:end="68:110"><call pos:start="68:17" pos:end="68:43"><name pos:start="68:17" pos:end="68:41"><name pos:start="68:17" pos:end="68:28">managedDrone</name><operator pos:start="68:29" pos:end="68:29">.</operator><name pos:start="68:30" pos:end="68:41">getMessenger</name></name><argument_list pos:start="68:42" pos:end="68:43">()</argument_list></call><operator pos:start="68:44" pos:end="68:44">.</operator><call pos:start="68:45" pos:end="68:110"><name pos:start="68:45" pos:end="68:58">updateGuidance</name><argument_list pos:start="68:59" pos:end="68:110">(<argument pos:start="68:60" pos:end="68:109"><expr pos:start="68:60" pos:end="68:109"><call pos:start="68:60" pos:end="68:95"><name pos:start="68:60" pos:end="68:66"><name pos:start="68:60" pos:end="68:62">tmp</name><operator pos:start="68:63" pos:end="68:63">.</operator><name pos:start="68:64" pos:end="68:66">get</name></name><argument_list pos:start="68:67" pos:end="68:95">(<argument pos:start="68:68" pos:end="68:94"><expr pos:start="68:68" pos:end="68:94"><call pos:start="68:68" pos:end="68:94"><name pos:start="68:68" pos:end="68:92"><name pos:start="68:68" pos:end="68:79">managedDrone</name><operator pos:start="68:80" pos:end="68:80">.</operator><name pos:start="68:81" pos:end="68:92">getDroneName</name></name><argument_list pos:start="68:93" pos:end="68:94">()</argument_list></call></expr></argument>)</argument_list></call><operator pos:start="68:96" pos:end="68:96">.</operator><call pos:start="68:97" pos:end="68:109"><name pos:start="68:97" pos:end="68:107">getCommands</name><argument_list pos:start="68:108" pos:end="68:109">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            </block_content>}</block></if></if_stmt>
        </block_content>}</block></for>
    </block_content>}</block></function>

}</block></class>
</unit>
