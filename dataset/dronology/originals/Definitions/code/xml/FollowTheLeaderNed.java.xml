<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="Java" filename="flatCode/FollowTheLeaderNed.java" pos:tabs="8"><package pos:start="1:1" pos:end="1:58">package <name pos:start="1:9" pos:end="1:57"><name pos:start="1:9" pos:end="1:11">edu</name><operator pos:start="1:12" pos:end="1:12">.</operator><name pos:start="1:13" pos:end="1:14">nd</name><operator pos:start="1:15" pos:end="1:15">.</operator><name pos:start="1:16" pos:end="1:24">dronology</name><operator pos:start="1:25" pos:end="1:25">.</operator><name pos:start="1:26" pos:end="1:29">core</name><operator pos:start="1:30" pos:end="1:30">.</operator><name pos:start="1:31" pos:end="1:48">collisionavoidance</name><operator pos:start="1:49" pos:end="1:49">.</operator><name pos:start="1:50" pos:end="1:57">strategy</name></name>;</package>

<import pos:start="3:1" pos:end="3:27">import <name pos:start="3:8" pos:end="3:26"><name pos:start="3:8" pos:end="3:11">java</name><operator pos:start="3:12" pos:end="3:12">.</operator><name pos:start="3:13" pos:end="3:16">util</name><operator pos:start="3:17" pos:end="3:17">.</operator><name pos:start="3:18" pos:end="3:26">ArrayList</name></name>;</import>

<import pos:start="5:1" pos:end="5:67">import <name pos:start="5:8" pos:end="5:66"><name pos:start="5:8" pos:end="5:10">org</name><operator pos:start="5:11" pos:end="5:11">.</operator><name pos:start="5:12" pos:end="5:17">apache</name><operator pos:start="5:18" pos:end="5:18">.</operator><name pos:start="5:19" pos:end="5:25">commons</name><operator pos:start="5:26" pos:end="5:26">.</operator><name pos:start="5:27" pos:end="5:31">math3</name><operator pos:start="5:32" pos:end="5:32">.</operator><name pos:start="5:33" pos:end="5:40">geometry</name><operator pos:start="5:41" pos:end="5:41">.</operator><name pos:start="5:42" pos:end="5:50">euclidean</name><operator pos:start="5:51" pos:end="5:51">.</operator><name pos:start="5:52" pos:end="5:57">threed</name><operator pos:start="5:58" pos:end="5:58">.</operator><name pos:start="5:59" pos:end="5:66">Vector3D</name></name>;</import>

<import pos:start="7:1" pos:end="7:65">import <name pos:start="7:8" pos:end="7:64"><name pos:start="7:8" pos:end="7:10">edu</name><operator pos:start="7:11" pos:end="7:11">.</operator><name pos:start="7:12" pos:end="7:13">nd</name><operator pos:start="7:14" pos:end="7:14">.</operator><name pos:start="7:15" pos:end="7:23">dronology</name><operator pos:start="7:24" pos:end="7:24">.</operator><name pos:start="7:25" pos:end="7:28">core</name><operator pos:start="7:29" pos:end="7:29">.</operator><name pos:start="7:30" pos:end="7:47">collisionavoidance</name><operator pos:start="7:48" pos:end="7:48">.</operator><name pos:start="7:49" pos:end="7:64">CollisionAvoider</name></name>;</import>
<import pos:start="8:1" pos:end="8:62">import <name pos:start="8:8" pos:end="8:61"><name pos:start="8:8" pos:end="8:10">edu</name><operator pos:start="8:11" pos:end="8:11">.</operator><name pos:start="8:12" pos:end="8:13">nd</name><operator pos:start="8:14" pos:end="8:14">.</operator><name pos:start="8:15" pos:end="8:23">dronology</name><operator pos:start="8:24" pos:end="8:24">.</operator><name pos:start="8:25" pos:end="8:28">core</name><operator pos:start="8:29" pos:end="8:29">.</operator><name pos:start="8:30" pos:end="8:47">collisionavoidance</name><operator pos:start="8:48" pos:end="8:48">.</operator><name pos:start="8:49" pos:end="8:61">DroneSnapshot</name></name>;</import>
<import pos:start="9:1" pos:end="9:76">import <name pos:start="9:8" pos:end="9:75"><name pos:start="9:8" pos:end="9:10">edu</name><operator pos:start="9:11" pos:end="9:11">.</operator><name pos:start="9:12" pos:end="9:13">nd</name><operator pos:start="9:14" pos:end="9:14">.</operator><name pos:start="9:15" pos:end="9:23">dronology</name><operator pos:start="9:24" pos:end="9:24">.</operator><name pos:start="9:25" pos:end="9:28">core</name><operator pos:start="9:29" pos:end="9:29">.</operator><name pos:start="9:30" pos:end="9:47">collisionavoidance</name><operator pos:start="9:48" pos:end="9:48">.</operator><name pos:start="9:49" pos:end="9:64">guidancecommands</name><operator pos:start="9:65" pos:end="9:65">.</operator><name pos:start="9:66" pos:end="9:75">NedCommand</name></name>;</import>
<import pos:start="10:1" pos:end="10:54">import <name pos:start="10:8" pos:end="10:53"><name pos:start="10:8" pos:end="10:10">edu</name><operator pos:start="10:11" pos:end="10:11">.</operator><name pos:start="10:12" pos:end="10:13">nd</name><operator pos:start="10:14" pos:end="10:14">.</operator><name pos:start="10:15" pos:end="10:23">dronology</name><operator pos:start="10:24" pos:end="10:24">.</operator><name pos:start="10:25" pos:end="10:28">core</name><operator pos:start="10:29" pos:end="10:29">.</operator><name pos:start="10:30" pos:end="10:39">coordinate</name><operator pos:start="10:40" pos:end="10:40">.</operator><name pos:start="10:41" pos:end="10:53">LlaCoordinate</name></name>;</import>
<import pos:start="11:1" pos:end="11:55">import <name pos:start="11:8" pos:end="11:54"><name pos:start="11:8" pos:end="11:10">edu</name><operator pos:start="11:11" pos:end="11:11">.</operator><name pos:start="11:12" pos:end="11:13">nd</name><operator pos:start="11:14" pos:end="11:14">.</operator><name pos:start="11:15" pos:end="11:23">dronology</name><operator pos:start="11:24" pos:end="11:24">.</operator><name pos:start="11:25" pos:end="11:28">core</name><operator pos:start="11:29" pos:end="11:29">.</operator><name pos:start="11:30" pos:end="11:33">goal</name><operator pos:start="11:34" pos:end="11:34">.</operator><name pos:start="11:35" pos:end="11:54">WaypointGoalSnapshot</name></name>;</import>

<class pos:start="13:1" pos:end="71:1"><specifier pos:start="13:1" pos:end="13:6">public</specifier> class <name pos:start="13:14" pos:end="13:31">FollowTheLeaderNed</name> <super_list pos:start="13:33" pos:end="13:59"><implements pos:start="13:33" pos:end="13:59">implements <super pos:start="13:44" pos:end="13:59"><name pos:start="13:44" pos:end="13:59">CollisionAvoider</name></super></implements></super_list> <block pos:start="13:61" pos:end="71:1">{

    <decl_stmt pos:start="15:5" pos:end="15:57"><decl pos:start="15:5" pos:end="15:56"><type pos:start="15:5" pos:end="15:31"><specifier pos:start="15:5" pos:end="15:11">private</specifier> <specifier pos:start="15:13" pos:end="15:18">static</specifier> <specifier pos:start="15:20" pos:end="15:24">final</specifier> <name pos:start="15:26" pos:end="15:31">double</name></type> <name pos:start="15:33" pos:end="15:50">THRESHOLD_DISTANCE</name> <init pos:start="15:52" pos:end="15:56">= <expr pos:start="15:54" pos:end="15:56"><literal type="number" pos:start="15:54" pos:end="15:56">1.0</literal></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="16:5" pos:end="16:55"><decl pos:start="16:5" pos:end="16:54"><type pos:start="16:5" pos:end="16:31"><specifier pos:start="16:5" pos:end="16:11">private</specifier> <specifier pos:start="16:13" pos:end="16:18">static</specifier> <specifier pos:start="16:20" pos:end="16:24">final</specifier> <name pos:start="16:26" pos:end="16:31">double</name></type> <name pos:start="16:33" pos:end="16:47">FOLLOW_DISTANCE</name> <init pos:start="16:49" pos:end="16:54">= <expr pos:start="16:51" pos:end="16:54"><literal type="number" pos:start="16:51" pos:end="16:54">10.0</literal></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="17:5" pos:end="17:84"><decl pos:start="17:5" pos:end="17:83"><type pos:start="17:5" pos:end="17:33"><specifier pos:start="17:5" pos:end="17:11">private</specifier> <specifier pos:start="17:13" pos:end="17:18">static</specifier> <specifier pos:start="17:20" pos:end="17:24">final</specifier> <name pos:start="17:26" pos:end="17:33">Vector3D</name></type> <name pos:start="17:35" pos:end="17:44">NED_OFFSET</name> <init pos:start="17:46" pos:end="17:83">= <expr pos:start="17:48" pos:end="17:83"><operator pos:start="17:48" pos:end="17:50">new</operator> <call pos:start="17:52" pos:end="17:83"><name pos:start="17:52" pos:end="17:59">Vector3D</name><argument_list pos:start="17:60" pos:end="17:83">(<argument pos:start="17:61" pos:end="17:61"><expr pos:start="17:61" pos:end="17:61"><literal type="number" pos:start="17:61" pos:end="17:61">0</literal></expr></argument>, <argument pos:start="17:64" pos:end="17:64"><expr pos:start="17:64" pos:end="17:64"><literal type="number" pos:start="17:64" pos:end="17:64">0</literal></expr></argument>, <argument pos:start="17:67" pos:end="17:82"><expr pos:start="17:67" pos:end="17:82"><operator pos:start="17:67" pos:end="17:67">-</operator><name pos:start="17:68" pos:end="17:82">FOLLOW_DISTANCE</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

	<function pos:start="19:9" pos:end="41:5"><annotation pos:start="19:9" pos:end="19:17">@<name pos:start="19:10" pos:end="19:17">Override</name></annotation>
	<type pos:start="20:9" pos:end="20:19"><specifier pos:start="20:9" pos:end="20:14">public</specifier> <name pos:start="20:16" pos:end="20:19">void</name></type> <name pos:start="20:21" pos:end="20:25">avoid</name><parameter_list pos:start="20:26" pos:end="20:58">(<parameter pos:start="20:27" pos:end="20:57"><decl pos:start="20:27" pos:end="20:57"><type pos:start="20:27" pos:end="20:50"><name pos:start="20:27" pos:end="20:50"><name pos:start="20:27" pos:end="20:35">ArrayList</name><argument_list type="generic" pos:start="20:36" pos:end="20:50">&lt;<argument pos:start="20:37" pos:end="20:49"><name pos:start="20:37" pos:end="20:49">DroneSnapshot</name></argument>&gt;</argument_list></name></type> <name pos:start="20:52" pos:end="20:57">drones</name></decl></parameter>)</parameter_list> <block pos:start="20:60" pos:end="41:5">{<block_content pos:start="21:9" pos:end="40:9">
        <decl_stmt pos:start="21:9" pos:end="21:50"><decl pos:start="21:9" pos:end="21:49"><type pos:start="21:9" pos:end="21:21"><name pos:start="21:9" pos:end="21:21">DroneSnapshot</name></type> <name pos:start="21:23" pos:end="21:28">leader</name> <init pos:start="21:30" pos:end="21:49">= <expr pos:start="21:32" pos:end="21:49"><call pos:start="21:32" pos:end="21:49"><name pos:start="21:32" pos:end="21:41">findLeader</name><argument_list pos:start="21:42" pos:end="21:49">(<argument pos:start="21:43" pos:end="21:48"><expr pos:start="21:43" pos:end="21:48"><name pos:start="21:43" pos:end="21:48">drones</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt pos:start="22:9" pos:end="22:54"><decl pos:start="22:9" pos:end="22:53"><type pos:start="22:9" pos:end="22:21"><name pos:start="22:9" pos:end="22:21">DroneSnapshot</name></type> <name pos:start="22:23" pos:end="22:30">follower</name> <init pos:start="22:32" pos:end="22:53">= <expr pos:start="22:34" pos:end="22:53"><call pos:start="22:34" pos:end="22:53"><name pos:start="22:34" pos:end="22:45">findFollower</name><argument_list pos:start="22:46" pos:end="22:53">(<argument pos:start="22:47" pos:end="22:52"><expr pos:start="22:47" pos:end="22:52"><name pos:start="22:47" pos:end="22:52">drones</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <if_stmt pos:start="24:9" pos:end="40:9"><if pos:start="24:9" pos:end="35:9">if <condition pos:start="24:12" pos:end="24:27">(<expr pos:start="24:13" pos:end="24:26"><name pos:start="24:13" pos:end="24:18">leader</name> <operator pos:start="24:20" pos:end="24:21">!=</operator> <literal type="null" pos:start="24:23" pos:end="24:26">null</literal></expr>)</condition> <block pos:start="24:29" pos:end="35:9">{<block_content pos:start="25:13" pos:end="34:13">
            <decl_stmt pos:start="25:13" pos:end="25:93"><decl pos:start="25:13" pos:end="25:92"><type pos:start="25:13" pos:end="25:32"><name pos:start="25:13" pos:end="25:32">WaypointGoalSnapshot</name></type> <name pos:start="25:34" pos:end="25:35">wp</name> <init pos:start="25:37" pos:end="25:92">= <expr pos:start="25:39" pos:end="25:92"><call pos:start="25:39" pos:end="25:92"><name pos:start="25:39" pos:end="25:73"><name pos:start="25:39" pos:end="25:50">StopEveryone</name><operator pos:start="25:51" pos:end="25:51">.</operator><name pos:start="25:52" pos:end="25:73">findActiveWaypointGoal</name></name><argument_list pos:start="25:74" pos:end="25:92">(<argument pos:start="25:75" pos:end="25:91"><expr pos:start="25:75" pos:end="25:91"><call pos:start="25:75" pos:end="25:91"><name pos:start="25:75" pos:end="25:89"><name pos:start="25:75" pos:end="25:80">leader</name><operator pos:start="25:81" pos:end="25:81">.</operator><name pos:start="25:82" pos:end="25:89">getGoals</name></name><argument_list pos:start="25:90" pos:end="25:91">()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
            <if_stmt pos:start="26:13" pos:end="28:13"><if pos:start="26:13" pos:end="28:13">if <condition pos:start="26:16" pos:end="26:27">(<expr pos:start="26:17" pos:end="26:26"><name pos:start="26:17" pos:end="26:18">wp</name> <operator pos:start="26:20" pos:end="26:21">!=</operator> <literal type="null" pos:start="26:23" pos:end="26:26">null</literal></expr>)</condition> <block pos:start="26:29" pos:end="28:13">{<block_content pos:start="27:17" pos:end="27:63">
                <expr_stmt pos:start="27:17" pos:end="27:63"><expr pos:start="27:17" pos:end="27:62"><call pos:start="27:17" pos:end="27:62"><name pos:start="27:17" pos:end="27:50"><name pos:start="27:17" pos:end="27:28">StopEveryone</name><operator pos:start="27:29" pos:end="27:29">.</operator><name pos:start="27:30" pos:end="27:50">flyToGoalIfNotAlready</name></name><argument_list pos:start="27:51" pos:end="27:62">(<argument pos:start="27:52" pos:end="27:57"><expr pos:start="27:52" pos:end="27:57"><name pos:start="27:52" pos:end="27:57">leader</name></expr></argument>, <argument pos:start="27:60" pos:end="27:61"><expr pos:start="27:60" pos:end="27:61"><name pos:start="27:60" pos:end="27:61">wp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            </block_content>}</block></if></if_stmt>

            <if_stmt pos:start="30:13" pos:end="34:13"><if pos:start="30:13" pos:end="34:13">if <condition pos:start="30:16" pos:end="30:33">(<expr pos:start="30:17" pos:end="30:32"><name pos:start="30:17" pos:end="30:24">follower</name> <operator pos:start="30:26" pos:end="30:27">!=</operator> <literal type="null" pos:start="30:29" pos:end="30:32">null</literal></expr>)</condition> <block pos:start="30:35" pos:end="34:13">{<block_content pos:start="31:17" pos:end="33:100">
                <decl_stmt pos:start="31:17" pos:end="31:96"><decl pos:start="31:17" pos:end="31:95"><type pos:start="31:17" pos:end="31:24"><name pos:start="31:17" pos:end="31:24">Vector3D</name></type> <name pos:start="31:26" pos:end="31:28">ned</name> <init pos:start="31:30" pos:end="31:95">= <expr pos:start="31:32" pos:end="31:95"><call pos:start="31:32" pos:end="31:95"><name pos:start="31:32" pos:end="31:49">findFollowVelocity</name><argument_list pos:start="31:50" pos:end="31:95">(<argument pos:start="31:51" pos:end="31:70"><expr pos:start="31:51" pos:end="31:70"><call pos:start="31:51" pos:end="31:70"><name pos:start="31:51" pos:end="31:68"><name pos:start="31:51" pos:end="31:56">leader</name><operator pos:start="31:57" pos:end="31:57">.</operator><name pos:start="31:58" pos:end="31:68">getPosition</name></name><argument_list pos:start="31:69" pos:end="31:70">()</argument_list></call></expr></argument>, <argument pos:start="31:73" pos:end="31:94"><expr pos:start="31:73" pos:end="31:94"><call pos:start="31:73" pos:end="31:94"><name pos:start="31:73" pos:end="31:92"><name pos:start="31:73" pos:end="31:80">follower</name><operator pos:start="31:81" pos:end="31:81">.</operator><name pos:start="31:82" pos:end="31:92">getPosition</name></name><argument_list pos:start="31:93" pos:end="31:94">()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
                <expr_stmt pos:start="32:17" pos:end="32:47"><expr pos:start="32:17" pos:end="32:46"><call pos:start="32:17" pos:end="32:38"><name pos:start="32:17" pos:end="32:36"><name pos:start="32:17" pos:end="32:24">follower</name><operator pos:start="32:25" pos:end="32:25">.</operator><name pos:start="32:26" pos:end="32:36">getCommands</name></name><argument_list pos:start="32:37" pos:end="32:38">()</argument_list></call><operator pos:start="32:39" pos:end="32:39">.</operator><call pos:start="32:40" pos:end="32:46"><name pos:start="32:40" pos:end="32:44">clear</name><argument_list pos:start="32:45" pos:end="32:46">()</argument_list></call></expr>;</expr_stmt>
                <expr_stmt pos:start="33:17" pos:end="33:100"><expr pos:start="33:17" pos:end="33:99"><call pos:start="33:17" pos:end="33:38"><name pos:start="33:17" pos:end="33:36"><name pos:start="33:17" pos:end="33:24">follower</name><operator pos:start="33:25" pos:end="33:25">.</operator><name pos:start="33:26" pos:end="33:36">getCommands</name></name><argument_list pos:start="33:37" pos:end="33:38">()</argument_list></call><operator pos:start="33:39" pos:end="33:39">.</operator><call pos:start="33:40" pos:end="33:99"><name pos:start="33:40" pos:end="33:42">add</name><argument_list pos:start="33:43" pos:end="33:99">(<argument pos:start="33:44" pos:end="33:98"><expr pos:start="33:44" pos:end="33:98"><operator pos:start="33:44" pos:end="33:46">new</operator> <call pos:start="33:48" pos:end="33:98"><name pos:start="33:48" pos:end="33:57">NedCommand</name><argument_list pos:start="33:58" pos:end="33:98">(<argument pos:start="33:59" pos:end="33:68"><expr pos:start="33:59" pos:end="33:68"><call pos:start="33:59" pos:end="33:68"><name pos:start="33:59" pos:end="33:66"><name pos:start="33:59" pos:end="33:61">ned</name><operator pos:start="33:62" pos:end="33:62">.</operator><name pos:start="33:63" pos:end="33:66">getX</name></name><argument_list pos:start="33:67" pos:end="33:68">()</argument_list></call></expr></argument>, <argument pos:start="33:71" pos:end="33:80"><expr pos:start="33:71" pos:end="33:80"><call pos:start="33:71" pos:end="33:80"><name pos:start="33:71" pos:end="33:78"><name pos:start="33:71" pos:end="33:73">ned</name><operator pos:start="33:74" pos:end="33:74">.</operator><name pos:start="33:75" pos:end="33:78">getY</name></name><argument_list pos:start="33:79" pos:end="33:80">()</argument_list></call></expr></argument>, <argument pos:start="33:83" pos:end="33:92"><expr pos:start="33:83" pos:end="33:92"><call pos:start="33:83" pos:end="33:92"><name pos:start="33:83" pos:end="33:90"><name pos:start="33:83" pos:end="33:85">ned</name><operator pos:start="33:86" pos:end="33:86">.</operator><name pos:start="33:87" pos:end="33:90">getZ</name></name><argument_list pos:start="33:91" pos:end="33:92">()</argument_list></call></expr></argument>, <argument pos:start="33:95" pos:end="33:97"><expr pos:start="33:95" pos:end="33:97"><literal type="number" pos:start="33:95" pos:end="33:97">2.0</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            </block_content>}</block></if></if_stmt>
        </block_content>}</block></if> <if type="elseif" pos:start="35:11" pos:end="40:9">else if <condition pos:start="35:19" pos:end="35:36">(<expr pos:start="35:20" pos:end="35:35"><name pos:start="35:20" pos:end="35:27">follower</name> <operator pos:start="35:29" pos:end="35:30">!=</operator> <literal type="null" pos:start="35:32" pos:end="35:35">null</literal></expr>)</condition> <block pos:start="35:38" pos:end="40:9">{<block_content pos:start="36:13" pos:end="39:13">
            <decl_stmt pos:start="36:13" pos:end="36:95"><decl pos:start="36:13" pos:end="36:94"><type pos:start="36:13" pos:end="36:32"><name pos:start="36:13" pos:end="36:32">WaypointGoalSnapshot</name></type> <name pos:start="36:34" pos:end="36:35">wp</name> <init pos:start="36:37" pos:end="36:94">= <expr pos:start="36:39" pos:end="36:94"><call pos:start="36:39" pos:end="36:94"><name pos:start="36:39" pos:end="36:73"><name pos:start="36:39" pos:end="36:50">StopEveryone</name><operator pos:start="36:51" pos:end="36:51">.</operator><name pos:start="36:52" pos:end="36:73">findActiveWaypointGoal</name></name><argument_list pos:start="36:74" pos:end="36:94">(<argument pos:start="36:75" pos:end="36:93"><expr pos:start="36:75" pos:end="36:93"><call pos:start="36:75" pos:end="36:93"><name pos:start="36:75" pos:end="36:91"><name pos:start="36:75" pos:end="36:82">follower</name><operator pos:start="36:83" pos:end="36:83">.</operator><name pos:start="36:84" pos:end="36:91">getGoals</name></name><argument_list pos:start="36:92" pos:end="36:93">()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
            <if_stmt pos:start="37:13" pos:end="39:13"><if pos:start="37:13" pos:end="39:13">if <condition pos:start="37:16" pos:end="37:27">(<expr pos:start="37:17" pos:end="37:26"><name pos:start="37:17" pos:end="37:18">wp</name> <operator pos:start="37:20" pos:end="37:21">!=</operator> <literal type="null" pos:start="37:23" pos:end="37:26">null</literal></expr>)</condition> <block pos:start="37:29" pos:end="39:13">{<block_content pos:start="38:17" pos:end="38:65">
                <expr_stmt pos:start="38:17" pos:end="38:65"><expr pos:start="38:17" pos:end="38:64"><call pos:start="38:17" pos:end="38:64"><name pos:start="38:17" pos:end="38:50"><name pos:start="38:17" pos:end="38:28">StopEveryone</name><operator pos:start="38:29" pos:end="38:29">.</operator><name pos:start="38:30" pos:end="38:50">flyToGoalIfNotAlready</name></name><argument_list pos:start="38:51" pos:end="38:64">(<argument pos:start="38:52" pos:end="38:59"><expr pos:start="38:52" pos:end="38:59"><name pos:start="38:52" pos:end="38:59">follower</name></expr></argument>, <argument pos:start="38:62" pos:end="38:63"><expr pos:start="38:62" pos:end="38:63"><name pos:start="38:62" pos:end="38:63">wp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            </block_content>}</block></if></if_stmt>   
        </block_content>}</block></if></if_stmt>
    </block_content>}</block></function>

    <function pos:start="43:5" pos:end="52:5"><type pos:start="43:5" pos:end="43:12"><name pos:start="43:5" pos:end="43:12">Vector3D</name></type> <name pos:start="43:14" pos:end="43:31">findFollowVelocity</name><parameter_list pos:start="43:32" pos:end="43:77">(<parameter pos:start="43:33" pos:end="43:52"><decl pos:start="43:33" pos:end="43:52"><type pos:start="43:33" pos:end="43:52"><name pos:start="43:33" pos:end="43:45">LlaCoordinate</name></type> <name pos:start="43:47" pos:end="43:52">leader</name></decl></parameter>, <parameter pos:start="43:55" pos:end="43:76"><decl pos:start="43:55" pos:end="43:76"><type pos:start="43:55" pos:end="43:76"><name pos:start="43:55" pos:end="43:67">LlaCoordinate</name></type> <name pos:start="43:69" pos:end="43:76">follower</name></decl></parameter>)</parameter_list> <block pos:start="43:79" pos:end="52:5">{<block_content pos:start="44:9" pos:end="51:29">
        <decl_stmt pos:start="44:9" pos:end="44:63"><decl pos:start="44:9" pos:end="44:62"><type pos:start="44:9" pos:end="44:21"><name pos:start="44:9" pos:end="44:21">LlaCoordinate</name></type> <name pos:start="44:23" pos:end="44:33">followPoint</name> <init pos:start="44:35" pos:end="44:62">= <expr pos:start="44:37" pos:end="44:62"><call pos:start="44:37" pos:end="44:62"><name pos:start="44:37" pos:end="44:50"><name pos:start="44:37" pos:end="44:42">leader</name><operator pos:start="44:43" pos:end="44:43">.</operator><name pos:start="44:44" pos:end="44:50">findLla</name></name><argument_list pos:start="44:51" pos:end="44:62">(<argument pos:start="44:52" pos:end="44:61"><expr pos:start="44:52" pos:end="44:61"><name pos:start="44:52" pos:end="44:61">NED_OFFSET</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt pos:start="45:9" pos:end="45:57"><decl pos:start="45:9" pos:end="45:56"><type pos:start="45:9" pos:end="45:14"><name pos:start="45:9" pos:end="45:14">double</name></type> <name pos:start="45:16" pos:end="45:23">distance</name> <init pos:start="45:25" pos:end="45:56">= <expr pos:start="45:27" pos:end="45:56"><call pos:start="45:27" pos:end="45:56"><name pos:start="45:27" pos:end="45:46"><name pos:start="45:27" pos:end="45:37">followPoint</name><operator pos:start="45:38" pos:end="45:38">.</operator><name pos:start="45:39" pos:end="45:46">distance</name></name><argument_list pos:start="45:47" pos:end="45:56">(<argument pos:start="45:48" pos:end="45:55"><expr pos:start="45:48" pos:end="45:55"><name pos:start="45:48" pos:end="45:55">follower</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <if_stmt pos:start="46:9" pos:end="50:9"><if pos:start="46:9" pos:end="50:9">if <condition pos:start="46:12" pos:end="46:42">(<expr pos:start="46:13" pos:end="46:41"><name pos:start="46:13" pos:end="46:20">distance</name> <operator pos:start="46:22" pos:end="46:22">&gt;</operator> <name pos:start="46:24" pos:end="46:41">THRESHOLD_DISTANCE</name></expr>)</condition> <block pos:start="46:44" pos:end="50:9">{<block_content pos:start="47:13" pos:end="49:59">    
            <decl_stmt pos:start="47:13" pos:end="47:51"><decl pos:start="47:13" pos:end="47:50"><type pos:start="47:13" pos:end="47:18"><name pos:start="47:13" pos:end="47:18">double</name></type> <name pos:start="47:20" pos:end="47:24">speed</name> <init pos:start="47:26" pos:end="47:50">= <expr pos:start="47:28" pos:end="47:50"><call pos:start="47:28" pos:end="47:50"><name pos:start="47:28" pos:end="47:35"><name pos:start="47:28" pos:end="47:31">Math</name><operator pos:start="47:32" pos:end="47:32">.</operator><name pos:start="47:33" pos:end="47:35">min</name></name><argument_list pos:start="47:36" pos:end="47:50">(<argument pos:start="47:37" pos:end="47:44"><expr pos:start="47:37" pos:end="47:44"><name pos:start="47:37" pos:end="47:44">distance</name></expr></argument>, <argument pos:start="47:47" pos:end="47:49"><expr pos:start="47:47" pos:end="47:49"><literal type="number" pos:start="47:47" pos:end="47:49">7.0</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
            <decl_stmt pos:start="48:13" pos:end="48:59"><decl pos:start="48:13" pos:end="48:58"><type pos:start="48:13" pos:end="48:20"><name pos:start="48:13" pos:end="48:20">Vector3D</name></type> <name pos:start="48:22" pos:end="48:26">arrow</name> <init pos:start="48:28" pos:end="48:58">= <expr pos:start="48:30" pos:end="48:58"><call pos:start="48:30" pos:end="48:58"><name pos:start="48:30" pos:end="48:45"><name pos:start="48:30" pos:end="48:37">follower</name><operator pos:start="48:38" pos:end="48:38">.</operator><name pos:start="48:39" pos:end="48:45">findNed</name></name><argument_list pos:start="48:46" pos:end="48:58">(<argument pos:start="48:47" pos:end="48:57"><expr pos:start="48:47" pos:end="48:57"><name pos:start="48:47" pos:end="48:57">followPoint</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
            <return pos:start="49:13" pos:end="49:59">return <expr pos:start="49:20" pos:end="49:58"><call pos:start="49:20" pos:end="49:36"><name pos:start="49:20" pos:end="49:34"><name pos:start="49:20" pos:end="49:24">arrow</name><operator pos:start="49:25" pos:end="49:25">.</operator><name pos:start="49:26" pos:end="49:34">normalize</name></name><argument_list pos:start="49:35" pos:end="49:36">()</argument_list></call><operator pos:start="49:37" pos:end="49:37">.</operator><call pos:start="49:38" pos:end="49:58"><name pos:start="49:38" pos:end="49:51">scalarMultiply</name><argument_list pos:start="49:52" pos:end="49:58">(<argument pos:start="49:53" pos:end="49:57"><expr pos:start="49:53" pos:end="49:57"><name pos:start="49:53" pos:end="49:57">speed</name></expr></argument>)</argument_list></call></expr>;</return>
        </block_content>}</block></if></if_stmt>
        <return pos:start="51:9" pos:end="51:29">return <expr pos:start="51:16" pos:end="51:28"><name pos:start="51:16" pos:end="51:28"><name pos:start="51:16" pos:end="51:23">Vector3D</name><operator pos:start="51:24" pos:end="51:24">.</operator><name pos:start="51:25" pos:end="51:28">ZERO</name></name></expr>;</return>
    </block_content>}</block></function>
    
    <function pos:start="54:5" pos:end="61:5"><type pos:start="54:5" pos:end="54:24"><specifier pos:start="54:5" pos:end="54:10">static</specifier> <name pos:start="54:12" pos:end="54:24">DroneSnapshot</name></type> <name pos:start="54:26" pos:end="54:35">findLeader</name><parameter_list pos:start="54:36" pos:end="54:68">(<parameter pos:start="54:37" pos:end="54:67"><decl pos:start="54:37" pos:end="54:67"><type pos:start="54:37" pos:end="54:60"><name pos:start="54:37" pos:end="54:60"><name pos:start="54:37" pos:end="54:45">ArrayList</name><argument_list type="generic" pos:start="54:46" pos:end="54:60">&lt;<argument pos:start="54:47" pos:end="54:59"><name pos:start="54:47" pos:end="54:59">DroneSnapshot</name></argument>&gt;</argument_list></name></type> <name pos:start="54:62" pos:end="54:67">drones</name></decl></parameter>)</parameter_list> <block pos:start="54:70" pos:end="61:5">{<block_content pos:start="55:9" pos:end="60:20">
        <for pos:start="55:9" pos:end="59:9">for <control pos:start="55:13" pos:end="55:41">(<init pos:start="55:14" pos:end="55:40"><decl pos:start="55:14" pos:end="55:40"><type pos:start="55:14" pos:end="55:26"><name pos:start="55:14" pos:end="55:26">DroneSnapshot</name></type> <name pos:start="55:28" pos:end="55:32">drone</name><range pos:start="55:33" pos:end="55:40">: <expr pos:start="55:35" pos:end="55:40"><name pos:start="55:35" pos:end="55:40">drones</name></expr></range></decl></init>)</control> <block pos:start="55:43" pos:end="59:9">{<block_content pos:start="56:13" pos:end="58:13">
            <if_stmt pos:start="56:13" pos:end="58:13"><if pos:start="56:13" pos:end="58:13">if <condition pos:start="56:16" pos:end="56:49">(<expr pos:start="56:17" pos:end="56:48"><literal type="string" pos:start="56:17" pos:end="56:24">"LEADER"</literal><operator pos:start="56:25" pos:end="56:25">.</operator><call pos:start="56:26" pos:end="56:48"><name pos:start="56:26" pos:end="56:31">equals</name><argument_list pos:start="56:32" pos:end="56:48">(<argument pos:start="56:33" pos:end="56:47"><expr pos:start="56:33" pos:end="56:47"><call pos:start="56:33" pos:end="56:47"><name pos:start="56:33" pos:end="56:45"><name pos:start="56:33" pos:end="56:37">drone</name><operator pos:start="56:38" pos:end="56:38">.</operator><name pos:start="56:39" pos:end="56:45">getName</name></name><argument_list pos:start="56:46" pos:end="56:47">()</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="56:51" pos:end="58:13">{<block_content pos:start="57:17" pos:end="57:29">
                <return pos:start="57:17" pos:end="57:29">return <expr pos:start="57:24" pos:end="57:28"><name pos:start="57:24" pos:end="57:28">drone</name></expr>;</return>
            </block_content>}</block></if></if_stmt>
        </block_content>}</block></for>
        <return pos:start="60:9" pos:end="60:20">return <expr pos:start="60:16" pos:end="60:19"><literal type="null" pos:start="60:16" pos:end="60:19">null</literal></expr>;</return>
    </block_content>}</block></function>

    <function pos:start="63:5" pos:end="70:6"><type pos:start="63:5" pos:end="63:24"><specifier pos:start="63:5" pos:end="63:10">static</specifier> <name pos:start="63:12" pos:end="63:24">DroneSnapshot</name></type> <name pos:start="63:26" pos:end="63:37">findFollower</name><parameter_list pos:start="63:38" pos:end="63:70">(<parameter pos:start="63:39" pos:end="63:69"><decl pos:start="63:39" pos:end="63:69"><type pos:start="63:39" pos:end="63:62"><name pos:start="63:39" pos:end="63:62"><name pos:start="63:39" pos:end="63:47">ArrayList</name><argument_list type="generic" pos:start="63:48" pos:end="63:62">&lt;<argument pos:start="63:49" pos:end="63:61"><name pos:start="63:49" pos:end="63:61">DroneSnapshot</name></argument>&gt;</argument_list></name></type> <name pos:start="63:64" pos:end="63:69">drones</name></decl></parameter>)</parameter_list> <block pos:start="63:72" pos:end="70:6">{<block_content pos:start="64:9" pos:end="69:20">
        <for pos:start="64:9" pos:end="68:9">for <control pos:start="64:13" pos:end="64:41">(<init pos:start="64:14" pos:end="64:40"><decl pos:start="64:14" pos:end="64:40"><type pos:start="64:14" pos:end="64:26"><name pos:start="64:14" pos:end="64:26">DroneSnapshot</name></type> <name pos:start="64:28" pos:end="64:32">drone</name><range pos:start="64:33" pos:end="64:40">: <expr pos:start="64:35" pos:end="64:40"><name pos:start="64:35" pos:end="64:40">drones</name></expr></range></decl></init>)</control> <block pos:start="64:43" pos:end="68:9">{<block_content pos:start="65:13" pos:end="67:13">
            <if_stmt pos:start="65:13" pos:end="67:13"><if pos:start="65:13" pos:end="67:13">if <condition pos:start="65:16" pos:end="65:50">(<expr pos:start="65:17" pos:end="65:49"><operator pos:start="65:17" pos:end="65:17">!</operator><literal type="string" pos:start="65:18" pos:end="65:25">"LEADER"</literal><operator pos:start="65:26" pos:end="65:26">.</operator><call pos:start="65:27" pos:end="65:49"><name pos:start="65:27" pos:end="65:32">equals</name><argument_list pos:start="65:33" pos:end="65:49">(<argument pos:start="65:34" pos:end="65:48"><expr pos:start="65:34" pos:end="65:48"><call pos:start="65:34" pos:end="65:48"><name pos:start="65:34" pos:end="65:46"><name pos:start="65:34" pos:end="65:38">drone</name><operator pos:start="65:39" pos:end="65:39">.</operator><name pos:start="65:40" pos:end="65:46">getName</name></name><argument_list pos:start="65:47" pos:end="65:48">()</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="65:52" pos:end="67:13">{<block_content pos:start="66:17" pos:end="66:29">
                <return pos:start="66:17" pos:end="66:29">return <expr pos:start="66:24" pos:end="66:28"><name pos:start="66:24" pos:end="66:28">drone</name></expr>;</return>
            </block_content>}</block></if></if_stmt>
        </block_content>}</block></for>
        <return pos:start="69:9" pos:end="69:20">return <expr pos:start="69:16" pos:end="69:19"><literal type="null" pos:start="69:16" pos:end="69:19">null</literal></expr>;</return>
     </block_content>}</block></function>
}</block></class></unit>
