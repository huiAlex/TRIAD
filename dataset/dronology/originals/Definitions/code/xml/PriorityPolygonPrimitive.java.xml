<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="Java" filename="flatCode/PriorityPolygonPrimitive.java" pos:tabs="8"><package pos:start="1:1" pos:end="1:66">package <name pos:start="1:9" pos:end="1:65"><name pos:start="1:9" pos:end="1:11">edu</name><operator pos:start="1:12" pos:end="1:12">.</operator><name pos:start="1:13" pos:end="1:14">nd</name><operator pos:start="1:15" pos:end="1:15">.</operator><name pos:start="1:16" pos:end="1:24">dronology</name><operator pos:start="1:25" pos:end="1:25">.</operator><name pos:start="1:26" pos:end="1:33">services</name><operator pos:start="1:34" pos:end="1:34">.</operator><name pos:start="1:35" pos:end="1:44">extensions</name><operator pos:start="1:45" pos:end="1:45">.</operator><name pos:start="1:46" pos:end="1:56">areamapping</name><operator pos:start="1:57" pos:end="1:57">.</operator><name pos:start="1:58" pos:end="1:65">internal</name></name>;</package>


<import pos:start="4:1" pos:end="4:22">import <name pos:start="4:8" pos:end="4:21"><name pos:start="4:8" pos:end="4:11">java</name><operator pos:start="4:12" pos:end="4:12">.</operator><name pos:start="4:13" pos:end="4:15">awt</name><operator pos:start="4:16" pos:end="4:16">.</operator><name pos:start="4:17" pos:end="4:21">Point</name></name>;</import>
<import pos:start="5:1" pos:end="5:28">import <name pos:start="5:8" pos:end="5:27"><name pos:start="5:8" pos:end="5:11">java</name><operator pos:start="5:12" pos:end="5:12">.</operator><name pos:start="5:13" pos:end="5:15">awt</name><operator pos:start="5:16" pos:end="5:16">.</operator><name pos:start="5:17" pos:end="5:20">geom</name><operator pos:start="5:21" pos:end="5:21">.</operator><name pos:start="5:22" pos:end="5:27">Line2D</name></name>;</import>
<import pos:start="6:1" pos:end="6:29">import <name pos:start="6:8" pos:end="6:28"><name pos:start="6:8" pos:end="6:11">java</name><operator pos:start="6:12" pos:end="6:12">.</operator><name pos:start="6:13" pos:end="6:15">awt</name><operator pos:start="6:16" pos:end="6:16">.</operator><name pos:start="6:17" pos:end="6:20">geom</name><operator pos:start="6:21" pos:end="6:21">.</operator><name pos:start="6:22" pos:end="6:28">Point2D</name></name>;</import>
<import pos:start="7:1" pos:end="7:27">import <name pos:start="7:8" pos:end="7:26"><name pos:start="7:8" pos:end="7:11">java</name><operator pos:start="7:12" pos:end="7:12">.</operator><name pos:start="7:13" pos:end="7:16">util</name><operator pos:start="7:17" pos:end="7:17">.</operator><name pos:start="7:18" pos:end="7:26">ArrayList</name></name>;</import>
<import pos:start="8:1" pos:end="8:29">import <name pos:start="8:8" pos:end="8:28"><name pos:start="8:8" pos:end="8:11">java</name><operator pos:start="8:12" pos:end="8:12">.</operator><name pos:start="8:13" pos:end="8:16">util</name><operator pos:start="8:17" pos:end="8:17">.</operator><name pos:start="8:18" pos:end="8:28">Collections</name></name>;</import>
<import pos:start="9:1" pos:end="9:28">import <name pos:start="9:8" pos:end="9:27"><name pos:start="9:8" pos:end="9:11">java</name><operator pos:start="9:12" pos:end="9:12">.</operator><name pos:start="9:13" pos:end="9:16">util</name><operator pos:start="9:17" pos:end="9:17">.</operator><name pos:start="9:18" pos:end="9:27">Comparator</name></name>;</import>
<import pos:start="10:1" pos:end="10:22">import <name pos:start="10:8" pos:end="10:21"><name pos:start="10:8" pos:end="10:11">java</name><operator pos:start="10:12" pos:end="10:12">.</operator><name pos:start="10:13" pos:end="10:16">util</name><operator pos:start="10:17" pos:end="10:17">.</operator><name pos:start="10:18" pos:end="10:21">List</name></name>;</import>
<import pos:start="11:1" pos:end="11:27">import <name pos:start="11:8" pos:end="11:26"><name pos:start="11:8" pos:end="11:11">java</name><operator pos:start="11:12" pos:end="11:12">.</operator><name pos:start="11:13" pos:end="11:16">util</name><operator pos:start="11:17" pos:end="11:17">.</operator><name pos:start="11:18" pos:end="11:26">SortedSet</name></name>;</import>
<import pos:start="12:1" pos:end="12:24">import <name pos:start="12:8" pos:end="12:23"><name pos:start="12:8" pos:end="12:11">java</name><operator pos:start="12:12" pos:end="12:12">.</operator><name pos:start="12:13" pos:end="12:16">util</name><operator pos:start="12:17" pos:end="12:17">.</operator><name pos:start="12:18" pos:end="12:23">Vector</name></name>;</import>

<import pos:start="14:1" pos:end="14:34">import <name pos:start="14:8" pos:end="14:33"><name pos:start="14:8" pos:end="14:12">javax</name><operator pos:start="14:13" pos:end="14:13">.</operator><name pos:start="14:14" pos:end="14:16">xml</name><operator pos:start="14:17" pos:end="14:17">.</operator><name pos:start="14:18" pos:end="14:26">transform</name><operator pos:start="14:27" pos:end="14:27">.</operator><name pos:start="14:28" pos:end="14:33">Source</name></name>;</import>

<import pos:start="16:1" pos:end="16:78">import <name pos:start="16:8" pos:end="16:77"><name pos:start="16:8" pos:end="16:10">edu</name><operator pos:start="16:11" pos:end="16:11">.</operator><name pos:start="16:12" pos:end="16:13">nd</name><operator pos:start="16:14" pos:end="16:14">.</operator><name pos:start="16:15" pos:end="16:23">dronology</name><operator pos:start="16:24" pos:end="16:24">.</operator><name pos:start="16:25" pos:end="16:32">services</name><operator pos:start="16:33" pos:end="16:33">.</operator><name pos:start="16:34" pos:end="16:43">extensions</name><operator pos:start="16:44" pos:end="16:44">.</operator><name pos:start="16:45" pos:end="16:55">areamapping</name><operator pos:start="16:56" pos:end="16:56">.</operator><name pos:start="16:57" pos:end="16:61">model</name><operator pos:start="16:62" pos:end="16:62">.</operator><name pos:start="16:63" pos:end="16:77">RiverSubsegment</name></name>;</import>
<import pos:start="17:1" pos:end="17:77">import <name pos:start="17:8" pos:end="17:76"><name pos:start="17:8" pos:end="17:10">edu</name><operator pos:start="17:11" pos:end="17:11">.</operator><name pos:start="17:12" pos:end="17:13">nd</name><operator pos:start="17:14" pos:end="17:14">.</operator><name pos:start="17:15" pos:end="17:23">dronology</name><operator pos:start="17:24" pos:end="17:24">.</operator><name pos:start="17:25" pos:end="17:32">services</name><operator pos:start="17:33" pos:end="17:33">.</operator><name pos:start="17:34" pos:end="17:43">extensions</name><operator pos:start="17:44" pos:end="17:44">.</operator><name pos:start="17:45" pos:end="17:55">areamapping</name><operator pos:start="17:56" pos:end="17:56">.</operator><name pos:start="17:57" pos:end="17:61">model</name><operator pos:start="17:62" pos:end="17:62">.</operator><name pos:start="17:63" pos:end="17:76">RoutePrimitive</name></name>;</import>
<import pos:start="18:1" pos:end="18:87">import <name pos:start="18:8" pos:end="18:86"><name pos:start="18:8" pos:end="18:10">edu</name><operator pos:start="18:11" pos:end="18:11">.</operator><name pos:start="18:12" pos:end="18:13">nd</name><operator pos:start="18:14" pos:end="18:14">.</operator><name pos:start="18:15" pos:end="18:23">dronology</name><operator pos:start="18:24" pos:end="18:24">.</operator><name pos:start="18:25" pos:end="18:32">services</name><operator pos:start="18:33" pos:end="18:33">.</operator><name pos:start="18:34" pos:end="18:43">extensions</name><operator pos:start="18:44" pos:end="18:44">.</operator><name pos:start="18:45" pos:end="18:55">areamapping</name><operator pos:start="18:56" pos:end="18:56">.</operator><name pos:start="18:57" pos:end="18:61">model</name><operator pos:start="18:62" pos:end="18:62">.</operator><name pos:start="18:63" pos:end="18:76">RoutePrimitive</name><operator pos:start="18:77" pos:end="18:77">.</operator><name pos:start="18:78" pos:end="18:86">RouteType</name></name>;</import>
<import pos:start="19:1" pos:end="19:71">import <name pos:start="19:8" pos:end="19:70"><name pos:start="19:8" pos:end="19:10">edu</name><operator pos:start="19:11" pos:end="19:11">.</operator><name pos:start="19:12" pos:end="19:13">nd</name><operator pos:start="19:14" pos:end="19:14">.</operator><name pos:start="19:15" pos:end="19:23">dronology</name><operator pos:start="19:24" pos:end="19:24">.</operator><name pos:start="19:25" pos:end="19:32">services</name><operator pos:start="19:33" pos:end="19:33">.</operator><name pos:start="19:34" pos:end="19:43">extensions</name><operator pos:start="19:44" pos:end="19:44">.</operator><name pos:start="19:45" pos:end="19:55">areamapping</name><operator pos:start="19:56" pos:end="19:56">.</operator><name pos:start="19:57" pos:end="19:60">util</name><operator pos:start="19:61" pos:end="19:61">.</operator><name pos:start="19:62" pos:end="19:70">Utilities</name></name>;</import>

<class pos:start="21:1" pos:end="101:1"><specifier pos:start="21:1" pos:end="21:6">public</specifier> class <name pos:start="21:14" pos:end="21:37">PriorityPolygonPrimitive</name> <super_list pos:start="21:39" pos:end="21:70"><implements pos:start="21:39" pos:end="21:70">implements <super pos:start="21:50" pos:end="21:70"><name pos:start="21:50" pos:end="21:70">SearchPatternStrategy</name></super></implements></super_list> <block pos:start="21:72" pos:end="101:1">{
	<decl_stmt pos:start="22:9" pos:end="22:48"><decl pos:start="22:9" pos:end="22:47"><type pos:start="22:9" pos:end="22:34"><specifier pos:start="22:9" pos:end="22:15">private</specifier> <name pos:start="22:17" pos:end="22:34"><name pos:start="22:17" pos:end="22:20">List</name><argument_list type="generic" pos:start="22:21" pos:end="22:34">&lt;<argument pos:start="22:22" pos:end="22:33"><name pos:start="22:22" pos:end="22:33">SourcePoints</name></argument>&gt;</argument_list></name></type> <name pos:start="22:36" pos:end="22:47">sourcePoints</name></decl>;</decl_stmt>
	<decl_stmt pos:start="23:9" pos:end="23:59"><decl pos:start="23:9" pos:end="23:58"><type pos:start="23:9" pos:end="23:36"><specifier pos:start="23:9" pos:end="23:15">private</specifier> <name pos:start="23:17" pos:end="23:36"><name pos:start="23:17" pos:end="23:20">List</name><argument_list type="generic" pos:start="23:21" pos:end="23:36">&lt;<argument pos:start="23:22" pos:end="23:35"><name pos:start="23:22" pos:end="23:35"><name pos:start="23:22" pos:end="23:28">Point2D</name><operator pos:start="23:29" pos:end="23:29">.</operator><name pos:start="23:30" pos:end="23:35">Double</name></name></argument>&gt;</argument_list></name></type> <name pos:start="23:38" pos:end="23:58">priorityPolygonPoints</name></decl>;</decl_stmt>
	<decl_stmt pos:start="24:9" pos:end="24:51"><decl pos:start="24:9" pos:end="24:50"><type pos:start="24:9" pos:end="24:40"><specifier pos:start="24:9" pos:end="24:15">private</specifier> <name pos:start="24:17" pos:end="24:40"><name pos:start="24:17" pos:end="24:30">RoutePrimitive</name><operator pos:start="24:31" pos:end="24:31">.</operator><name pos:start="24:32" pos:end="24:40">RouteType</name></name></type> <name pos:start="24:42" pos:end="24:50">routeType</name></decl>;</decl_stmt>
	
	<function pos:start="26:9" pos:end="29:9"><annotation pos:start="26:9" pos:end="26:17">@<name pos:start="26:10" pos:end="26:17">Override</name></annotation>
	<type pos:start="27:9" pos:end="27:19"><specifier pos:start="27:9" pos:end="27:14">public</specifier> <name pos:start="27:16" pos:end="27:19">void</name></type> <name pos:start="27:21" pos:end="27:35">setSourcePoints</name><parameter_list pos:start="27:36" pos:end="27:62">(<parameter pos:start="27:37" pos:end="27:61"><decl pos:start="27:37" pos:end="27:61"><type pos:start="27:37" pos:end="27:54"><name pos:start="27:37" pos:end="27:54"><name pos:start="27:37" pos:end="27:40">List</name><argument_list type="generic" pos:start="27:41" pos:end="27:54">&lt;<argument pos:start="27:42" pos:end="27:53"><name pos:start="27:42" pos:end="27:53">SourcePoints</name></argument>&gt;</argument_list></name></type> <name pos:start="27:56" pos:end="27:61">points</name></decl></parameter>)</parameter_list> <block pos:start="27:64" pos:end="29:9">{<block_content pos:start="28:17" pos:end="28:38">
		<expr_stmt pos:start="28:17" pos:end="28:38"><expr pos:start="28:17" pos:end="28:37"><name pos:start="28:17" pos:end="28:28">sourcePoints</name> <operator pos:start="28:30" pos:end="28:30">=</operator> <name pos:start="28:32" pos:end="28:37">points</name></expr>;</expr_stmt>
	</block_content>}</block></function>
	
	<function pos:start="31:9" pos:end="34:9"><annotation pos:start="31:9" pos:end="31:17">@<name pos:start="31:10" pos:end="31:17">Override</name></annotation>
	<type pos:start="32:9" pos:end="32:19"><specifier pos:start="32:9" pos:end="32:14">public</specifier> <name pos:start="32:16" pos:end="32:19">void</name></type> <name pos:start="32:21" pos:end="32:32">setRouteType</name><parameter_list pos:start="32:33" pos:end="32:53">(<parameter pos:start="32:34" pos:end="32:52"><decl pos:start="32:34" pos:end="32:52"><type pos:start="32:34" pos:end="32:42"><name pos:start="32:34" pos:end="32:42">RouteType</name></type> <name pos:start="32:44" pos:end="32:52">routeType</name></decl></parameter>)</parameter_list> <block pos:start="32:55" pos:end="34:9">{<block_content pos:start="33:17" pos:end="33:43">
		<expr_stmt pos:start="33:17" pos:end="33:43"><expr pos:start="33:17" pos:end="33:42"><name pos:start="33:17" pos:end="33:30"><name pos:start="33:17" pos:end="33:20">this</name><operator pos:start="33:21" pos:end="33:21">.</operator><name pos:start="33:22" pos:end="33:30">routeType</name></name> <operator pos:start="33:32" pos:end="33:32">=</operator> <name pos:start="33:34" pos:end="33:42">routeType</name></expr>;</expr_stmt>
	</block_content>}</block></function>
	
	<function pos:start="36:9" pos:end="52:9"><type pos:start="36:9" pos:end="36:35"><specifier pos:start="36:9" pos:end="36:15">private</specifier> <name pos:start="36:17" pos:end="36:35"><name pos:start="36:17" pos:end="36:20">List</name><argument_list type="generic" pos:start="36:21" pos:end="36:35">&lt;<argument pos:start="36:22" pos:end="36:34"><name pos:start="36:22" pos:end="36:34"><name pos:start="36:22" pos:end="36:27">Line2D</name><operator pos:start="36:28" pos:end="36:28">.</operator><name pos:start="36:29" pos:end="36:34">Double</name></name></argument>&gt;</argument_list></name></type> <name pos:start="36:37" pos:end="36:70">findBoundingRectangleCrossingLines</name><parameter_list pos:start="36:71" pos:end="36:168">(<parameter pos:start="36:72" pos:end="36:94"><decl pos:start="36:72" pos:end="36:94"><type pos:start="36:72" pos:end="36:94"><name pos:start="36:72" pos:end="36:85"><name pos:start="36:72" pos:end="36:78">Point2D</name><operator pos:start="36:79" pos:end="36:79">.</operator><name pos:start="36:80" pos:end="36:85">Double</name></name></type> <name pos:start="36:87" pos:end="36:94">minPoint</name></decl></parameter>, <parameter pos:start="36:97" pos:end="36:119"><decl pos:start="36:97" pos:end="36:119"><type pos:start="36:97" pos:end="36:119"><name pos:start="36:97" pos:end="36:110"><name pos:start="36:97" pos:end="36:103">Point2D</name><operator pos:start="36:104" pos:end="36:104">.</operator><name pos:start="36:105" pos:end="36:110">Double</name></name></type> <name pos:start="36:112" pos:end="36:119">maxPoint</name></decl></parameter>, <parameter pos:start="36:122" pos:end="36:144"><decl pos:start="36:122" pos:end="36:144"><type pos:start="36:122" pos:end="36:144"><name pos:start="36:122" pos:end="36:127">double</name></type> <name pos:start="36:129" pos:end="36:144">APERATURE_HEIGHT</name></decl></parameter>, <parameter pos:start="36:147" pos:end="36:167"><decl pos:start="36:147" pos:end="36:167"><type pos:start="36:147" pos:end="36:167"><name pos:start="36:147" pos:end="36:152">double</name></type> <name pos:start="36:154" pos:end="36:167">OVERLAP_FACTOR</name></decl></parameter>)</parameter_list><block pos:start="36:169" pos:end="52:9">{<block_content pos:start="37:17" pos:end="51:37">
		<decl_stmt pos:start="37:17" pos:end="37:70"><decl pos:start="37:17" pos:end="37:69"><type pos:start="37:17" pos:end="37:35"><name pos:start="37:17" pos:end="37:35"><name pos:start="37:17" pos:end="37:20">List</name><argument_list type="generic" pos:start="37:21" pos:end="37:35">&lt;<argument pos:start="37:22" pos:end="37:34"><name pos:start="37:22" pos:end="37:34"><name pos:start="37:22" pos:end="37:27">Line2D</name><operator pos:start="37:28" pos:end="37:28">.</operator><name pos:start="37:29" pos:end="37:34">Double</name></name></argument>&gt;</argument_list></name></type> <name pos:start="37:37" pos:end="37:49">crossingLines</name> <init pos:start="37:51" pos:end="37:69">= <expr pos:start="37:53" pos:end="37:69"><operator pos:start="37:53" pos:end="37:55">new</operator> <call pos:start="37:57" pos:end="37:69"><name pos:start="37:57" pos:end="37:67"><name pos:start="37:57" pos:end="37:65">ArrayList</name><argument_list type="generic" pos:start="37:66" pos:end="37:67">&lt;&gt;</argument_list></name><argument_list pos:start="37:68" pos:end="37:69">()</argument_list></call></expr></init></decl>;</decl_stmt>
		<decl_stmt pos:start="38:17" pos:end="38:93"><decl pos:start="38:17" pos:end="38:92"><type pos:start="38:17" pos:end="38:30"><name pos:start="38:17" pos:end="38:30"><name pos:start="38:17" pos:end="38:23">Point2D</name><operator pos:start="38:24" pos:end="38:24">.</operator><name pos:start="38:25" pos:end="38:30">Double</name></name></type> <name pos:start="38:32" pos:end="38:37">pointA</name> <init pos:start="38:39" pos:end="38:92">= <expr pos:start="38:41" pos:end="38:92"><operator pos:start="38:41" pos:end="38:43">new</operator> <call pos:start="38:45" pos:end="38:92"><name pos:start="38:45" pos:end="38:58"><name pos:start="38:45" pos:end="38:51">Point2D</name><operator pos:start="38:52" pos:end="38:52">.</operator><name pos:start="38:53" pos:end="38:58">Double</name></name><argument_list pos:start="38:59" pos:end="38:92">(<argument pos:start="38:60" pos:end="38:74"><expr pos:start="38:60" pos:end="38:74"><call pos:start="38:60" pos:end="38:74"><name pos:start="38:60" pos:end="38:72"><name pos:start="38:60" pos:end="38:67">minPoint</name><operator pos:start="38:68" pos:end="38:68">.</operator><name pos:start="38:69" pos:end="38:72">getX</name></name><argument_list pos:start="38:73" pos:end="38:74">()</argument_list></call></expr></argument>, <argument pos:start="38:77" pos:end="38:91"><expr pos:start="38:77" pos:end="38:91"><call pos:start="38:77" pos:end="38:91"><name pos:start="38:77" pos:end="38:89"><name pos:start="38:77" pos:end="38:84">maxPoint</name><operator pos:start="38:85" pos:end="38:85">.</operator><name pos:start="38:86" pos:end="38:89">getY</name></name><argument_list pos:start="38:90" pos:end="38:91">()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<decl_stmt pos:start="39:17" pos:end="39:49"><decl pos:start="39:17" pos:end="39:48"><type pos:start="39:17" pos:end="39:30"><name pos:start="39:17" pos:end="39:30"><name pos:start="39:17" pos:end="39:23">Point2D</name><operator pos:start="39:24" pos:end="39:24">.</operator><name pos:start="39:25" pos:end="39:30">Double</name></name></type> <name pos:start="39:32" pos:end="39:37">pointB</name> <init pos:start="39:39" pos:end="39:48">= <expr pos:start="39:41" pos:end="39:48"><name pos:start="39:41" pos:end="39:48">minPoint</name></expr></init></decl>;</decl_stmt>
		<decl_stmt pos:start="40:17" pos:end="40:64"><decl pos:start="40:17" pos:end="40:63"><type pos:start="40:17" pos:end="40:30"><name pos:start="40:17" pos:end="40:30"><name pos:start="40:17" pos:end="40:23">Point2D</name><operator pos:start="40:24" pos:end="40:24">.</operator><name pos:start="40:25" pos:end="40:30">Double</name></name></type> <name pos:start="40:32" pos:end="40:39">newPoint</name>  <init pos:start="40:42" pos:end="40:63">= <expr pos:start="40:44" pos:end="40:63"><operator pos:start="40:44" pos:end="40:46">new</operator> <call pos:start="40:48" pos:end="40:63"><name pos:start="40:48" pos:end="40:61"><name pos:start="40:48" pos:end="40:54">Point2D</name><operator pos:start="40:55" pos:end="40:55">.</operator><name pos:start="40:56" pos:end="40:61">Double</name></name><argument_list pos:start="40:62" pos:end="40:63">()</argument_list></call></expr></init></decl>;</decl_stmt>
		<decl_stmt pos:start="41:17" pos:end="41:86"><decl pos:start="41:17" pos:end="41:85"><type pos:start="41:17" pos:end="41:22"><name pos:start="41:17" pos:end="41:22">double</name></type> <name pos:start="41:24" pos:end="41:36">totalDistance</name> <init pos:start="41:38" pos:end="41:85">= <expr pos:start="41:40" pos:end="41:85"><call pos:start="41:40" pos:end="41:85"><name pos:start="41:40" pos:end="41:69"><name pos:start="41:40" pos:end="41:47">Geometry</name><operator pos:start="41:48" pos:end="41:48">.</operator><name pos:start="41:49" pos:end="41:69">findCartesianDistance</name></name><argument_list pos:start="41:70" pos:end="41:85">(<argument pos:start="41:71" pos:end="41:76"><expr pos:start="41:71" pos:end="41:76"><name pos:start="41:71" pos:end="41:76">pointA</name></expr></argument>, <argument pos:start="41:79" pos:end="41:84"><expr pos:start="41:79" pos:end="41:84"><name pos:start="41:79" pos:end="41:84">pointB</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<decl_stmt pos:start="42:17" pos:end="42:62"><decl pos:start="42:17" pos:end="42:61"><type pos:start="42:17" pos:end="42:22"><name pos:start="42:17" pos:end="42:22">double</name></type> <name pos:start="42:24" pos:end="42:39">traverseDistance</name> <init pos:start="42:41" pos:end="42:61">= <expr pos:start="42:43" pos:end="42:61"><literal type="number" pos:start="42:43" pos:end="42:44">10</literal> <operator pos:start="42:46" pos:end="42:46">*</operator> <name pos:start="42:48" pos:end="42:61">OVERLAP_FACTOR</name></expr></init></decl>;</decl_stmt>
		<expr_stmt pos:start="43:17" pos:end="43:71"><expr pos:start="43:17" pos:end="43:70"><call pos:start="43:17" pos:end="43:70"><name pos:start="43:17" pos:end="43:33"><name pos:start="43:17" pos:end="43:29">crossingLines</name><operator pos:start="43:30" pos:end="43:30">.</operator><name pos:start="43:31" pos:end="43:33">add</name></name><argument_list pos:start="43:34" pos:end="43:70">(<argument pos:start="43:35" pos:end="43:69"><expr pos:start="43:35" pos:end="43:69"><operator pos:start="43:35" pos:end="43:37">new</operator> <call pos:start="43:39" pos:end="43:69"><name pos:start="43:39" pos:end="43:51"><name pos:start="43:39" pos:end="43:44">Line2D</name><operator pos:start="43:45" pos:end="43:45">.</operator><name pos:start="43:46" pos:end="43:51">Double</name></name><argument_list pos:start="43:52" pos:end="43:69">(<argument pos:start="43:53" pos:end="43:58"><expr pos:start="43:53" pos:end="43:58"><name pos:start="43:53" pos:end="43:58">pointA</name></expr></argument>, <argument pos:start="43:61" pos:end="43:68"><expr pos:start="43:61" pos:end="43:68"><name pos:start="43:61" pos:end="43:68">maxPoint</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<while pos:start="44:17" pos:end="49:17">while<condition pos:start="44:22" pos:end="44:55">(<expr pos:start="44:23" pos:end="44:54"><name pos:start="44:23" pos:end="44:38">traverseDistance</name> <operator pos:start="44:40" pos:end="44:40">&lt;</operator> <name pos:start="44:42" pos:end="44:54">totalDistance</name></expr>)</condition> <block pos:start="44:57" pos:end="49:17">{<block_content pos:start="45:25" pos:end="48:73">
			<expr_stmt pos:start="45:25" pos:end="45:110"><expr pos:start="45:25" pos:end="45:109"><name pos:start="45:25" pos:end="45:32">newPoint</name> <operator pos:start="45:34" pos:end="45:34">=</operator> <call pos:start="45:36" pos:end="45:109"><name pos:start="45:36" pos:end="45:59"><name pos:start="45:36" pos:end="45:43">Geometry</name><operator pos:start="45:44" pos:end="45:44">.</operator><name pos:start="45:45" pos:end="45:59">findOffsetPoint</name></name><argument_list pos:start="45:60" pos:end="45:109">(<argument pos:start="45:61" pos:end="45:66"><expr pos:start="45:61" pos:end="45:66"><name pos:start="45:61" pos:end="45:66">pointA</name></expr></argument>, <argument pos:start="45:69" pos:end="45:74"><expr pos:start="45:69" pos:end="45:74"><name pos:start="45:69" pos:end="45:74">pointB</name></expr></argument>, <argument pos:start="45:77" pos:end="45:108"><expr pos:start="45:77" pos:end="45:108"><name pos:start="45:77" pos:end="45:92">traverseDistance</name> <operator pos:start="45:94" pos:end="45:94">/</operator> <name pos:start="45:96" pos:end="45:108">totalDistance</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt pos:start="46:25" pos:end="46:125"><expr pos:start="46:25" pos:end="46:124"><call pos:start="46:25" pos:end="46:124"><name pos:start="46:25" pos:end="46:41"><name pos:start="46:25" pos:end="46:37">crossingLines</name><operator pos:start="46:38" pos:end="46:38">.</operator><name pos:start="46:39" pos:end="46:41">add</name></name><argument_list pos:start="46:42" pos:end="46:124">(<argument pos:start="46:43" pos:end="46:123"><expr pos:start="46:43" pos:end="46:123"><operator pos:start="46:43" pos:end="46:45">new</operator> <call pos:start="46:47" pos:end="46:123"><name pos:start="46:47" pos:end="46:59"><name pos:start="46:47" pos:end="46:52">Line2D</name><operator pos:start="46:53" pos:end="46:53">.</operator><name pos:start="46:54" pos:end="46:59">Double</name></name><argument_list pos:start="46:60" pos:end="46:123">(<argument pos:start="46:61" pos:end="46:68"><expr pos:start="46:61" pos:end="46:68"><name pos:start="46:61" pos:end="46:68">newPoint</name></expr></argument>, <argument pos:start="46:71" pos:end="46:122"><expr pos:start="46:71" pos:end="46:122"><operator pos:start="46:71" pos:end="46:73">new</operator> <call pos:start="46:75" pos:end="46:122"><name pos:start="46:75" pos:end="46:88"><name pos:start="46:75" pos:end="46:81">Point2D</name><operator pos:start="46:82" pos:end="46:82">.</operator><name pos:start="46:83" pos:end="46:88">Double</name></name><argument_list pos:start="46:89" pos:end="46:122">(<argument pos:start="46:90" pos:end="46:104"><expr pos:start="46:90" pos:end="46:104"><call pos:start="46:90" pos:end="46:104"><name pos:start="46:90" pos:end="46:102"><name pos:start="46:90" pos:end="46:97">maxPoint</name><operator pos:start="46:98" pos:end="46:98">.</operator><name pos:start="46:99" pos:end="46:102">getX</name></name><argument_list pos:start="46:103" pos:end="46:104">()</argument_list></call></expr></argument>, <argument pos:start="46:107" pos:end="46:121"><expr pos:start="46:107" pos:end="46:121"><call pos:start="46:107" pos:end="46:121"><name pos:start="46:107" pos:end="46:119"><name pos:start="46:107" pos:end="46:114">newPoint</name><operator pos:start="46:115" pos:end="46:115">.</operator><name pos:start="46:116" pos:end="46:119">getY</name></name><argument_list pos:start="46:120" pos:end="46:121">()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt pos:start="47:25" pos:end="47:42"><expr pos:start="47:25" pos:end="47:41"><name pos:start="47:25" pos:end="47:30">pointA</name> <operator pos:start="47:32" pos:end="47:32">=</operator> <name pos:start="47:34" pos:end="47:41">newPoint</name></expr>;</expr_stmt>
			<expr_stmt pos:start="48:25" pos:end="48:73"><expr pos:start="48:25" pos:end="48:72"><name pos:start="48:25" pos:end="48:37">totalDistance</name> <operator pos:start="48:39" pos:end="48:39">=</operator> <name pos:start="48:41" pos:end="48:53">totalDistance</name> <operator pos:start="48:55" pos:end="48:55">-</operator> <name pos:start="48:57" pos:end="48:72">traverseDistance</name></expr>;</expr_stmt>
		</block_content>}</block></while>
		<expr_stmt pos:start="50:17" pos:end="50:116"><expr pos:start="50:17" pos:end="50:115"><call pos:start="50:17" pos:end="50:115"><name pos:start="50:17" pos:end="50:33"><name pos:start="50:17" pos:end="50:29">crossingLines</name><operator pos:start="50:30" pos:end="50:30">.</operator><name pos:start="50:31" pos:end="50:33">add</name></name><argument_list pos:start="50:34" pos:end="50:115">(<argument pos:start="50:35" pos:end="50:114"><expr pos:start="50:35" pos:end="50:114"><operator pos:start="50:35" pos:end="50:37">new</operator> <call pos:start="50:39" pos:end="50:114"><name pos:start="50:39" pos:end="50:51"><name pos:start="50:39" pos:end="50:44">Line2D</name><operator pos:start="50:45" pos:end="50:45">.</operator><name pos:start="50:46" pos:end="50:51">Double</name></name><argument_list pos:start="50:52" pos:end="50:114">(<argument pos:start="50:53" pos:end="50:60"><expr pos:start="50:53" pos:end="50:60"><name pos:start="50:53" pos:end="50:60">minPoint</name></expr></argument>, <argument pos:start="50:63" pos:end="50:113"><expr pos:start="50:63" pos:end="50:113"><operator pos:start="50:63" pos:end="50:65">new</operator> <call pos:start="50:67" pos:end="50:113"><name pos:start="50:67" pos:end="50:80"><name pos:start="50:67" pos:end="50:73">Point2D</name><operator pos:start="50:74" pos:end="50:74">.</operator><name pos:start="50:75" pos:end="50:80">Double</name></name><argument_list pos:start="50:81" pos:end="50:113">(<argument pos:start="50:82" pos:end="50:96"><expr pos:start="50:82" pos:end="50:96"><call pos:start="50:82" pos:end="50:96"><name pos:start="50:82" pos:end="50:94"><name pos:start="50:82" pos:end="50:89">maxPoint</name><operator pos:start="50:90" pos:end="50:90">.</operator><name pos:start="50:91" pos:end="50:94">getX</name></name><argument_list pos:start="50:95" pos:end="50:96">()</argument_list></call></expr></argument>,<argument pos:start="50:98" pos:end="50:112"><expr pos:start="50:98" pos:end="50:112"><call pos:start="50:98" pos:end="50:112"><name pos:start="50:98" pos:end="50:110"><name pos:start="50:98" pos:end="50:105">minPoint</name><operator pos:start="50:106" pos:end="50:106">.</operator><name pos:start="50:107" pos:end="50:110">getY</name></name><argument_list pos:start="50:111" pos:end="50:112">()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<return pos:start="51:17" pos:end="51:37">return <expr pos:start="51:24" pos:end="51:36"><name pos:start="51:24" pos:end="51:36">crossingLines</name></expr>;</return>
	</block_content>}</block></function>
	
	<function pos:start="54:9" pos:end="75:9"><type pos:start="54:9" pos:end="54:30"><specifier pos:start="54:9" pos:end="54:15">private</specifier> <name pos:start="54:17" pos:end="54:30">RoutePrimitive</name></type> <name pos:start="54:32" pos:end="54:53">generateRouteWaypoints</name><parameter_list pos:start="54:54" pos:end="54:115">(<parameter pos:start="54:55" pos:end="54:87"><decl pos:start="54:55" pos:end="54:87"><type pos:start="54:55" pos:end="54:87"><name pos:start="54:55" pos:end="54:73"><name pos:start="54:55" pos:end="54:58">List</name><argument_list type="generic" pos:start="54:59" pos:end="54:73">&lt;<argument pos:start="54:60" pos:end="54:72"><name pos:start="54:60" pos:end="54:72"><name pos:start="54:60" pos:end="54:65">Line2D</name><operator pos:start="54:66" pos:end="54:66">.</operator><name pos:start="54:67" pos:end="54:72">Double</name></name></argument>&gt;</argument_list></name></type> <name pos:start="54:75" pos:end="54:87">crossingLines</name></decl></parameter>, <parameter pos:start="54:90" pos:end="54:114"><decl pos:start="54:90" pos:end="54:114"><type pos:start="54:90" pos:end="54:114"><name pos:start="54:90" pos:end="54:101">SourcePoints</name></type> <name pos:start="54:103" pos:end="54:114">sourcePoints</name></decl></parameter>)</parameter_list> <block pos:start="54:117" pos:end="75:9">{<block_content pos:start="55:17" pos:end="74:41">
		<decl_stmt pos:start="55:17" pos:end="55:107"><decl pos:start="55:17" pos:end="55:106"><type pos:start="55:17" pos:end="55:30"><name pos:start="55:17" pos:end="55:30">RoutePrimitive</name></type> <name pos:start="55:32" pos:end="55:48">newRoutePrimitive</name> <init pos:start="55:50" pos:end="55:106">= <expr pos:start="55:52" pos:end="55:106"><operator pos:start="55:52" pos:end="55:54">new</operator> <call pos:start="55:56" pos:end="55:106"><name pos:start="55:56" pos:end="55:69">RoutePrimitive</name><argument_list pos:start="55:70" pos:end="55:106">(<argument pos:start="55:71" pos:end="55:79"><expr pos:start="55:71" pos:end="55:79"><name pos:start="55:71" pos:end="55:79">routeType</name></expr></argument>, <argument pos:start="55:82" pos:end="55:105"><expr pos:start="55:82" pos:end="55:105"><call pos:start="55:82" pos:end="55:105"><name pos:start="55:82" pos:end="55:103"><name pos:start="55:82" pos:end="55:93">sourcePoints</name><operator pos:start="55:94" pos:end="55:94">.</operator><name pos:start="55:95" pos:end="55:103">getWeight</name></name><argument_list pos:start="55:104" pos:end="55:105">()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<decl_stmt pos:start="56:17" pos:end="56:67"><decl pos:start="56:17" pos:end="56:66"><type pos:start="56:17" pos:end="56:29"><name pos:start="56:17" pos:end="56:29"><name pos:start="56:17" pos:end="56:22">Line2D</name><operator pos:start="56:23" pos:end="56:23">.</operator><name pos:start="56:24" pos:end="56:29">Double</name></name></type> <name pos:start="56:31" pos:end="56:44">polygonSegment</name> <init pos:start="56:46" pos:end="56:66">= <expr pos:start="56:48" pos:end="56:66"><operator pos:start="56:48" pos:end="56:50">new</operator> <call pos:start="56:52" pos:end="56:66"><name pos:start="56:52" pos:end="56:64"><name pos:start="56:52" pos:end="56:57">Line2D</name><operator pos:start="56:58" pos:end="56:58">.</operator><name pos:start="56:59" pos:end="56:64">Double</name></name><argument_list pos:start="56:65" pos:end="56:66">()</argument_list></call></expr></init></decl>;</decl_stmt>
		<for pos:start="57:17" pos:end="73:17">for<control pos:start="57:20" pos:end="57:61">(<init pos:start="57:21" pos:end="57:30"><decl pos:start="57:21" pos:end="57:29"><type pos:start="57:21" pos:end="57:23"><name pos:start="57:21" pos:end="57:23">int</name></type> <name pos:start="57:25" pos:end="57:25">i</name> <init pos:start="57:27" pos:end="57:29">= <expr pos:start="57:29" pos:end="57:29"><literal type="number" pos:start="57:29" pos:end="57:29">0</literal></expr></init></decl>;</init> <condition pos:start="57:32" pos:end="57:56"><expr pos:start="57:32" pos:end="57:55"><name pos:start="57:32" pos:end="57:32">i</name> <operator pos:start="57:34" pos:end="57:34">&lt;</operator> <call pos:start="57:36" pos:end="57:55"><name pos:start="57:36" pos:end="57:53"><name pos:start="57:36" pos:end="57:48">crossingLines</name><operator pos:start="57:49" pos:end="57:49">.</operator><name pos:start="57:50" pos:end="57:53">size</name></name><argument_list pos:start="57:54" pos:end="57:55">()</argument_list></call></expr>;</condition> <incr pos:start="57:58" pos:end="57:60"><expr pos:start="57:58" pos:end="57:60"><name pos:start="57:58" pos:end="57:58">i</name><operator pos:start="57:59" pos:end="57:60">++</operator></expr></incr>)</control> <block pos:start="57:63" pos:end="73:17">{<block_content pos:start="58:25" pos:end="72:25">
			<decl_stmt pos:start="58:25" pos:end="58:84"><decl pos:start="58:25" pos:end="58:83"><type pos:start="58:25" pos:end="58:44"><name pos:start="58:25" pos:end="58:44"><name pos:start="58:25" pos:end="58:28">List</name><argument_list type="generic" pos:start="58:29" pos:end="58:44">&lt;<argument pos:start="58:30" pos:end="58:43"><name pos:start="58:30" pos:end="58:43"><name pos:start="58:30" pos:end="58:36">Point2D</name><operator pos:start="58:37" pos:end="58:37">.</operator><name pos:start="58:38" pos:end="58:43">Double</name></name></argument>&gt;</argument_list></name></type> <name pos:start="58:46" pos:end="58:63">intersectionPoints</name> <init pos:start="58:65" pos:end="58:83">= <expr pos:start="58:67" pos:end="58:83"><operator pos:start="58:67" pos:end="58:69">new</operator> <call pos:start="58:71" pos:end="58:83"><name pos:start="58:71" pos:end="58:81"><name pos:start="58:71" pos:end="58:79">ArrayList</name><argument_list type="generic" pos:start="58:80" pos:end="58:81">&lt;&gt;</argument_list></name><argument_list pos:start="58:82" pos:end="58:83">()</argument_list></call></expr></init></decl>;</decl_stmt>
			<for pos:start="59:25" pos:end="64:25">for<control pos:start="59:28" pos:end="59:79">(<init pos:start="59:29" pos:end="59:38"><decl pos:start="59:29" pos:end="59:37"><type pos:start="59:29" pos:end="59:31"><name pos:start="59:29" pos:end="59:31">int</name></type> <name pos:start="59:33" pos:end="59:33">j</name> <init pos:start="59:35" pos:end="59:37">= <expr pos:start="59:37" pos:end="59:37"><literal type="number" pos:start="59:37" pos:end="59:37">0</literal></expr></init></decl>;</init> <condition pos:start="59:40" pos:end="59:74"><expr pos:start="59:40" pos:end="59:73"><name pos:start="59:40" pos:end="59:40">j</name> <operator pos:start="59:42" pos:end="59:42">&lt;</operator> <call pos:start="59:44" pos:end="59:71"><name pos:start="59:44" pos:end="59:69"><name pos:start="59:44" pos:end="59:64">priorityPolygonPoints</name><operator pos:start="59:65" pos:end="59:65">.</operator><name pos:start="59:66" pos:end="59:69">size</name></name><argument_list pos:start="59:70" pos:end="59:71">()</argument_list></call><operator pos:start="59:72" pos:end="59:72">-</operator><literal type="number" pos:start="59:73" pos:end="59:73">1</literal></expr>;</condition> <incr pos:start="59:76" pos:end="59:78"><expr pos:start="59:76" pos:end="59:78"><name pos:start="59:76" pos:end="59:76">j</name><operator pos:start="59:77" pos:end="59:78">++</operator></expr></incr>)</control> <block pos:start="59:81" pos:end="64:25">{<block_content pos:start="60:33" pos:end="63:33">
				<expr_stmt pos:start="60:33" pos:end="60:117"><expr pos:start="60:33" pos:end="60:116"><call pos:start="60:33" pos:end="60:116"><name pos:start="60:33" pos:end="60:54"><name pos:start="60:33" pos:end="60:46">polygonSegment</name><operator pos:start="60:47" pos:end="60:47">.</operator><name pos:start="60:48" pos:end="60:54">setLine</name></name><argument_list pos:start="60:55" pos:end="60:116">(<argument pos:start="60:56" pos:end="60:83"><expr pos:start="60:56" pos:end="60:83"><call pos:start="60:56" pos:end="60:83"><name pos:start="60:56" pos:end="60:80"><name pos:start="60:56" pos:end="60:76">priorityPolygonPoints</name><operator pos:start="60:77" pos:end="60:77">.</operator><name pos:start="60:78" pos:end="60:80">get</name></name><argument_list pos:start="60:81" pos:end="60:83">(<argument pos:start="60:82" pos:end="60:82"><expr pos:start="60:82" pos:end="60:82"><name pos:start="60:82" pos:end="60:82">j</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="60:86" pos:end="60:115"><expr pos:start="60:86" pos:end="60:115"><call pos:start="60:86" pos:end="60:115"><name pos:start="60:86" pos:end="60:110"><name pos:start="60:86" pos:end="60:106">priorityPolygonPoints</name><operator pos:start="60:107" pos:end="60:107">.</operator><name pos:start="60:108" pos:end="60:110">get</name></name><argument_list pos:start="60:111" pos:end="60:115">(<argument pos:start="60:112" pos:end="60:114"><expr pos:start="60:112" pos:end="60:114"><name pos:start="60:112" pos:end="60:112">j</name><operator pos:start="60:113" pos:end="60:113">+</operator><literal type="number" pos:start="60:114" pos:end="60:114">1</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<if_stmt pos:start="61:33" pos:end="63:33"><if pos:start="61:33" pos:end="63:33">if<condition pos:start="61:35" pos:end="61:87">(<expr pos:start="61:36" pos:end="61:86"><call pos:start="61:36" pos:end="61:55"><name pos:start="61:36" pos:end="61:52"><name pos:start="61:36" pos:end="61:48">crossingLines</name><operator pos:start="61:49" pos:end="61:49">.</operator><name pos:start="61:50" pos:end="61:52">get</name></name><argument_list pos:start="61:53" pos:end="61:55">(<argument pos:start="61:54" pos:end="61:54"><expr pos:start="61:54" pos:end="61:54"><name pos:start="61:54" pos:end="61:54">i</name></expr></argument>)</argument_list></call><operator pos:start="61:56" pos:end="61:56">.</operator><call pos:start="61:57" pos:end="61:86"><name pos:start="61:57" pos:end="61:70">intersectsLine</name><argument_list pos:start="61:71" pos:end="61:86">(<argument pos:start="61:72" pos:end="61:85"><expr pos:start="61:72" pos:end="61:85"><name pos:start="61:72" pos:end="61:85">polygonSegment</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="61:89" pos:end="63:33">{<block_content pos:start="62:41" pos:end="62:132">
					<expr_stmt pos:start="62:41" pos:end="62:132"><expr pos:start="62:41" pos:end="62:131"><call pos:start="62:41" pos:end="62:131"><name pos:start="62:41" pos:end="62:62"><name pos:start="62:41" pos:end="62:58">intersectionPoints</name><operator pos:start="62:59" pos:end="62:59">.</operator><name pos:start="62:60" pos:end="62:62">add</name></name><argument_list pos:start="62:63" pos:end="62:131">(<argument pos:start="62:64" pos:end="62:130"><expr pos:start="62:64" pos:end="62:130"><call pos:start="62:64" pos:end="62:130"><name pos:start="62:64" pos:end="62:92"><name pos:start="62:64" pos:end="62:71">Geometry</name><operator pos:start="62:72" pos:end="62:72">.</operator><name pos:start="62:73" pos:end="62:92">findLineIntersection</name></name><argument_list pos:start="62:93" pos:end="62:130">(<argument pos:start="62:94" pos:end="62:113"><expr pos:start="62:94" pos:end="62:113"><call pos:start="62:94" pos:end="62:113"><name pos:start="62:94" pos:end="62:110"><name pos:start="62:94" pos:end="62:106">crossingLines</name><operator pos:start="62:107" pos:end="62:107">.</operator><name pos:start="62:108" pos:end="62:110">get</name></name><argument_list pos:start="62:111" pos:end="62:113">(<argument pos:start="62:112" pos:end="62:112"><expr pos:start="62:112" pos:end="62:112"><name pos:start="62:112" pos:end="62:112">i</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="62:116" pos:end="62:129"><expr pos:start="62:116" pos:end="62:129"><name pos:start="62:116" pos:end="62:129">polygonSegment</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				</block_content>}</block></if></if_stmt>
			</block_content>}</block></for>
			<comment type="line" pos:start="65:25" pos:end="65:59">//does this comparison thing work? </comment>
			<expr_stmt pos:start="66:25" pos:end="66:111"><expr pos:start="66:25" pos:end="66:110"><call pos:start="66:25" pos:end="66:110"><name pos:start="66:25" pos:end="66:40"><name pos:start="66:25" pos:end="66:35">Collections</name><operator pos:start="66:36" pos:end="66:36">.</operator><name pos:start="66:37" pos:end="66:40">sort</name></name><argument_list pos:start="66:41" pos:end="66:110">(<argument pos:start="66:42" pos:end="66:59"><expr pos:start="66:42" pos:end="66:59"><name pos:start="66:42" pos:end="66:59">intersectionPoints</name></expr></argument>, <argument pos:start="66:62" pos:end="66:109"><expr pos:start="66:62" pos:end="66:109"><call pos:start="66:62" pos:end="66:109"><name pos:start="66:62" pos:end="66:87"><name pos:start="66:62" pos:end="66:71">Comparator</name><operator pos:start="66:72" pos:end="66:72">.</operator><name pos:start="66:73" pos:end="66:87">comparingDouble</name></name><argument_list pos:start="66:88" pos:end="66:109">(<argument pos:start="66:89" pos:end="66:108"><expr pos:start="66:89" pos:end="66:108"><name pos:start="66:89" pos:end="66:102"><name pos:start="66:89" pos:end="66:95">Point2D</name><operator pos:start="66:96" pos:end="66:96">.</operator><name pos:start="66:97" pos:end="66:102">Double</name></name><operator pos:start="66:103" pos:end="66:104">::</operator><name pos:start="66:105" pos:end="66:108">getX</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<for pos:start="67:25" pos:end="72:25">for<control pos:start="67:28" pos:end="67:70">(<init pos:start="67:29" pos:end="67:69"><decl pos:start="67:29" pos:end="67:69"><type pos:start="67:29" pos:end="67:42"><name pos:start="67:29" pos:end="67:42"><name pos:start="67:29" pos:end="67:35">Point2D</name><operator pos:start="67:36" pos:end="67:36">.</operator><name pos:start="67:37" pos:end="67:42">Double</name></name></type> <name pos:start="67:44" pos:end="67:48">entry</name> <range pos:start="67:50" pos:end="67:69">: <expr pos:start="67:52" pos:end="67:69"><name pos:start="67:52" pos:end="67:69">intersectionPoints</name></expr></range></decl></init>)</control> <block pos:start="67:72" pos:end="72:25">{<block_content pos:start="69:33" pos:end="71:33">
				<comment type="line" pos:start="68:33" pos:end="68:75">//there is probably a better way to do this</comment>
				<if_stmt pos:start="69:33" pos:end="71:33"><if pos:start="69:33" pos:end="71:33">if<condition pos:start="69:35" pos:end="69:81">(<expr pos:start="69:36" pos:end="69:80"><operator pos:start="69:36" pos:end="69:36">!</operator><call pos:start="69:37" pos:end="69:64"><name pos:start="69:37" pos:end="69:62"><name pos:start="69:37" pos:end="69:53">newRoutePrimitive</name><operator pos:start="69:54" pos:end="69:54">.</operator><name pos:start="69:55" pos:end="69:62">getRoute</name></name><argument_list pos:start="69:63" pos:end="69:64">()</argument_list></call><operator pos:start="69:65" pos:end="69:65">.</operator><call pos:start="69:66" pos:end="69:80"><name pos:start="69:66" pos:end="69:73">contains</name><argument_list pos:start="69:74" pos:end="69:80">(<argument pos:start="69:75" pos:end="69:79"><expr pos:start="69:75" pos:end="69:79"><name pos:start="69:75" pos:end="69:79">entry</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="69:83" pos:end="71:33">{<block_content pos:start="70:41" pos:end="70:82">
					<expr_stmt pos:start="70:41" pos:end="70:82"><expr pos:start="70:41" pos:end="70:81"><call pos:start="70:41" pos:end="70:81"><name pos:start="70:41" pos:end="70:74"><name pos:start="70:41" pos:end="70:57">newRoutePrimitive</name><operator pos:start="70:58" pos:end="70:58">.</operator><name pos:start="70:59" pos:end="70:74">addRouteWaypoint</name></name><argument_list pos:start="70:75" pos:end="70:81">(<argument pos:start="70:76" pos:end="70:80"><expr pos:start="70:76" pos:end="70:80"><name pos:start="70:76" pos:end="70:80">entry</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				</block_content>}</block></if></if_stmt>
			</block_content>}</block></for>
		</block_content>}</block></for>
		<return pos:start="74:17" pos:end="74:41">return <expr pos:start="74:24" pos:end="74:40"><name pos:start="74:24" pos:end="74:40">newRoutePrimitive</name></expr>;</return> 
	</block_content>}</block></function>

	<function pos:start="77:9" pos:end="100:9"><annotation pos:start="77:9" pos:end="77:17">@<name pos:start="77:10" pos:end="77:17">Override</name></annotation>
	<type pos:start="78:9" pos:end="78:35"><specifier pos:start="78:9" pos:end="78:14">public</specifier> <name pos:start="78:16" pos:end="78:35"><name pos:start="78:16" pos:end="78:19">List</name><argument_list type="generic" pos:start="78:20" pos:end="78:35">&lt;<argument pos:start="78:21" pos:end="78:34"><name pos:start="78:21" pos:end="78:34">RoutePrimitive</name></argument>&gt;</argument_list></name></type> <name pos:start="78:37" pos:end="78:58">generateRoutePrimitive</name><parameter_list pos:start="78:59" pos:end="78:106">(<parameter pos:start="78:60" pos:end="78:82"><decl pos:start="78:60" pos:end="78:82"><type pos:start="78:60" pos:end="78:82"><name pos:start="78:60" pos:end="78:65">double</name></type> <name pos:start="78:67" pos:end="78:82">APERATURE_HEIGHT</name></decl></parameter>, <parameter pos:start="78:85" pos:end="78:105"><decl pos:start="78:85" pos:end="78:105"><type pos:start="78:85" pos:end="78:105"><name pos:start="78:85" pos:end="78:90">double</name></type> <name pos:start="78:92" pos:end="78:105">OVERLAP_FACTOR</name></decl></parameter>)</parameter_list> <block pos:start="78:108" pos:end="100:9">{<block_content pos:start="79:17" pos:end="99:44">
		<decl_stmt pos:start="79:17" pos:end="79:78"><decl pos:start="79:17" pos:end="79:77"><type pos:start="79:17" pos:end="79:36"><name pos:start="79:17" pos:end="79:36"><name pos:start="79:17" pos:end="79:20">List</name><argument_list type="generic" pos:start="79:21" pos:end="79:36">&lt;<argument pos:start="79:22" pos:end="79:35"><name pos:start="79:22" pos:end="79:35">RoutePrimitive</name></argument>&gt;</argument_list></name></type> <name pos:start="79:38" pos:end="79:57">priorityPolygonRoute</name> <init pos:start="79:59" pos:end="79:77">= <expr pos:start="79:61" pos:end="79:77"><operator pos:start="79:61" pos:end="79:63">new</operator> <call pos:start="79:65" pos:end="79:77"><name pos:start="79:65" pos:end="79:75"><name pos:start="79:65" pos:end="79:73">ArrayList</name><argument_list type="generic" pos:start="79:74" pos:end="79:75">&lt;&gt;</argument_list></name><argument_list pos:start="79:76" pos:end="79:77">()</argument_list></call></expr></init></decl>;</decl_stmt>
		<decl_stmt pos:start="80:17" pos:end="80:69"><decl pos:start="80:17" pos:end="80:68"><type pos:start="80:17" pos:end="80:34"><name pos:start="80:17" pos:end="80:34"><name pos:start="80:17" pos:end="80:20">List</name><argument_list type="generic" pos:start="80:21" pos:end="80:34">&lt;<argument pos:start="80:22" pos:end="80:33"><name pos:start="80:22" pos:end="80:33">SourcePoints</name></argument>&gt;</argument_list></name></type> <name pos:start="80:36" pos:end="80:48">priorityAreas</name> <init pos:start="80:50" pos:end="80:68">= <expr pos:start="80:52" pos:end="80:68"><operator pos:start="80:52" pos:end="80:54">new</operator> <call pos:start="80:56" pos:end="80:68"><name pos:start="80:56" pos:end="80:66"><name pos:start="80:56" pos:end="80:64">ArrayList</name><argument_list type="generic" pos:start="80:65" pos:end="80:66">&lt;&gt;</argument_list></name><argument_list pos:start="80:67" pos:end="80:68">()</argument_list></call></expr></init></decl>;</decl_stmt>
		<for pos:start="81:17" pos:end="94:17">for<control pos:start="81:20" pos:end="81:55">(<init pos:start="81:21" pos:end="81:54"><decl pos:start="81:21" pos:end="81:54"><type pos:start="81:21" pos:end="81:32"><name pos:start="81:21" pos:end="81:32">SourcePoints</name></type> <name pos:start="81:34" pos:end="81:39">source</name> <range pos:start="81:41" pos:end="81:54">: <expr pos:start="81:43" pos:end="81:54"><name pos:start="81:43" pos:end="81:54">sourcePoints</name></expr></range></decl></init>)</control> <block pos:start="81:57" pos:end="94:17">{<block_content pos:start="82:25" pos:end="93:48">
			<expr_stmt pos:start="82:25" pos:end="82:90"><expr pos:start="82:25" pos:end="82:89"><name pos:start="82:25" pos:end="82:45">priorityPolygonPoints</name> <operator pos:start="82:47" pos:end="82:47">=</operator> <operator pos:start="82:49" pos:end="82:51">new</operator> <call pos:start="82:53" pos:end="82:89"><name pos:start="82:53" pos:end="82:63"><name pos:start="82:53" pos:end="82:61">ArrayList</name><argument_list type="generic" pos:start="82:62" pos:end="82:63">&lt;&gt;</argument_list></name><argument_list pos:start="82:64" pos:end="82:89">(<argument pos:start="82:65" pos:end="82:88"><expr pos:start="82:65" pos:end="82:88"><call pos:start="82:65" pos:end="82:88"><name pos:start="82:65" pos:end="82:86"><name pos:start="82:65" pos:end="82:70">source</name><operator pos:start="82:71" pos:end="82:71">.</operator><name pos:start="82:72" pos:end="82:86">getSourcePoints</name></name><argument_list pos:start="82:87" pos:end="82:88">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt pos:start="83:25" pos:end="83:80"><expr pos:start="83:25" pos:end="83:79"><call pos:start="83:25" pos:end="83:79"><name pos:start="83:25" pos:end="83:49"><name pos:start="83:25" pos:end="83:45">priorityPolygonPoints</name><operator pos:start="83:46" pos:end="83:46">.</operator><name pos:start="83:47" pos:end="83:49">add</name></name><argument_list pos:start="83:50" pos:end="83:79">(<argument pos:start="83:51" pos:end="83:78"><expr pos:start="83:51" pos:end="83:78"><call pos:start="83:51" pos:end="83:78"><name pos:start="83:51" pos:end="83:75"><name pos:start="83:51" pos:end="83:71">priorityPolygonPoints</name><operator pos:start="83:72" pos:end="83:72">.</operator><name pos:start="83:73" pos:end="83:75">get</name></name><argument_list pos:start="83:76" pos:end="83:78">(<argument pos:start="83:77" pos:end="83:77"><expr pos:start="83:77" pos:end="83:77"><literal type="number" pos:start="83:77" pos:end="83:77">0</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<decl_stmt pos:start="84:25" pos:end="84:132"><decl pos:start="84:25" pos:end="84:131"><type pos:start="84:25" pos:end="84:46"><name pos:start="84:25" pos:end="84:46"><name pos:start="84:25" pos:end="84:30">Vector</name><argument_list type="generic" pos:start="84:31" pos:end="84:46">&lt;<argument pos:start="84:32" pos:end="84:45"><name pos:start="84:32" pos:end="84:45"><name pos:start="84:32" pos:end="84:38">Point2D</name><operator pos:start="84:39" pos:end="84:39">.</operator><name pos:start="84:40" pos:end="84:45">Double</name></name></argument>&gt;</argument_list></name></type> <name pos:start="84:48" pos:end="84:58">boundPoints</name> <init pos:start="84:60" pos:end="84:131">= <expr pos:start="84:62" pos:end="84:131"><call pos:start="84:62" pos:end="84:131"><name pos:start="84:62" pos:end="84:108"><name pos:start="84:62" pos:end="84:69">Geometry</name><operator pos:start="84:70" pos:end="84:70">.</operator><name pos:start="84:71" pos:end="84:108">simplePriorityPolygonBoundingRectangle</name></name><argument_list pos:start="84:109" pos:end="84:131">(<argument pos:start="84:110" pos:end="84:130"><expr pos:start="84:110" pos:end="84:130"><name pos:start="84:110" pos:end="84:130">priorityPolygonPoints</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<decl_stmt pos:start="85:25" pos:end="85:169"><decl pos:start="85:25" pos:end="85:168"><type pos:start="85:25" pos:end="85:43"><name pos:start="85:25" pos:end="85:43"><name pos:start="85:25" pos:end="85:28">List</name><argument_list type="generic" pos:start="85:29" pos:end="85:43">&lt;<argument pos:start="85:30" pos:end="85:42"><name pos:start="85:30" pos:end="85:42"><name pos:start="85:30" pos:end="85:35">Line2D</name><operator pos:start="85:36" pos:end="85:36">.</operator><name pos:start="85:37" pos:end="85:42">Double</name></name></argument>&gt;</argument_list></name></type> <name pos:start="85:45" pos:end="85:57">crossingLines</name> <init pos:start="85:59" pos:end="85:168">= <expr pos:start="85:61" pos:end="85:168"><call pos:start="85:61" pos:end="85:168"><name pos:start="85:61" pos:end="85:94">findBoundingRectangleCrossingLines</name><argument_list pos:start="85:95" pos:end="85:168">(<argument pos:start="85:96" pos:end="85:113"><expr pos:start="85:96" pos:end="85:113"><call pos:start="85:96" pos:end="85:113"><name pos:start="85:96" pos:end="85:110"><name pos:start="85:96" pos:end="85:106">boundPoints</name><operator pos:start="85:107" pos:end="85:107">.</operator><name pos:start="85:108" pos:end="85:110">get</name></name><argument_list pos:start="85:111" pos:end="85:113">(<argument pos:start="85:112" pos:end="85:112"><expr pos:start="85:112" pos:end="85:112"><literal type="number" pos:start="85:112" pos:end="85:112">0</literal></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="85:116" pos:end="85:133"><expr pos:start="85:116" pos:end="85:133"><call pos:start="85:116" pos:end="85:133"><name pos:start="85:116" pos:end="85:130"><name pos:start="85:116" pos:end="85:126">boundPoints</name><operator pos:start="85:127" pos:end="85:127">.</operator><name pos:start="85:128" pos:end="85:130">get</name></name><argument_list pos:start="85:131" pos:end="85:133">(<argument pos:start="85:132" pos:end="85:132"><expr pos:start="85:132" pos:end="85:132"><literal type="number" pos:start="85:132" pos:end="85:132">1</literal></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="85:136" pos:end="85:151"><expr pos:start="85:136" pos:end="85:151"><name pos:start="85:136" pos:end="85:151">APERATURE_HEIGHT</name></expr></argument>, <argument pos:start="85:154" pos:end="85:167"><expr pos:start="85:154" pos:end="85:167"><name pos:start="85:154" pos:end="85:167">OVERLAP_FACTOR</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<decl_stmt pos:start="86:25" pos:end="86:96"><decl pos:start="86:25" pos:end="86:95"><type pos:start="86:25" pos:end="86:38"><name pos:start="86:25" pos:end="86:38">RoutePrimitive</name></type> <name pos:start="86:40" pos:end="86:47">newRoute</name> <init pos:start="86:49" pos:end="86:95">= <expr pos:start="86:51" pos:end="86:95"><call pos:start="86:51" pos:end="86:95"><name pos:start="86:51" pos:end="86:72">generateRouteWaypoints</name><argument_list pos:start="86:73" pos:end="86:95">(<argument pos:start="86:74" pos:end="86:86"><expr pos:start="86:74" pos:end="86:86"><name pos:start="86:74" pos:end="86:86">crossingLines</name></expr></argument>, <argument pos:start="86:89" pos:end="86:94"><expr pos:start="86:89" pos:end="86:94"><name pos:start="86:89" pos:end="86:94">source</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<expr_stmt pos:start="87:25" pos:end="87:59"><expr pos:start="87:25" pos:end="87:58"><call pos:start="87:25" pos:end="87:58"><name pos:start="87:25" pos:end="87:48"><name pos:start="87:25" pos:end="87:44">priorityPolygonRoute</name><operator pos:start="87:45" pos:end="87:45">.</operator><name pos:start="87:46" pos:end="87:48">add</name></name><argument_list pos:start="87:49" pos:end="87:58">(<argument pos:start="87:50" pos:end="87:57"><expr pos:start="87:50" pos:end="87:57"><name pos:start="87:50" pos:end="87:57">newRoute</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt pos:start="88:25" pos:end="88:101"><expr pos:start="88:25" pos:end="88:100"><call pos:start="88:25" pos:end="88:100"><name pos:start="88:25" pos:end="88:56"><name pos:start="88:25" pos:end="88:33">Utilities</name><operator pos:start="88:34" pos:end="88:34">.</operator><name pos:start="88:35" pos:end="88:56">generateImageWaypoints</name></name><argument_list pos:start="88:57" pos:end="88:100">(<argument pos:start="88:58" pos:end="88:65"><expr pos:start="88:58" pos:end="88:65"><name pos:start="88:58" pos:end="88:65">newRoute</name></expr></argument>, <argument pos:start="88:68" pos:end="88:83"><expr pos:start="88:68" pos:end="88:83"><name pos:start="88:68" pos:end="88:83">APERATURE_HEIGHT</name></expr></argument>, <argument pos:start="88:86" pos:end="88:99"><expr pos:start="88:86" pos:end="88:99"><name pos:start="88:86" pos:end="88:99">OVERLAP_FACTOR</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			
			<comment type="line" pos:start="90:25" pos:end="90:68">//simply for printout visualization purposes</comment>
			<decl_stmt pos:start="91:25" pos:end="91:63"><decl pos:start="91:25" pos:end="91:62"><type pos:start="91:25" pos:end="91:36"><name pos:start="91:25" pos:end="91:36">SourcePoints</name></type> <name pos:start="91:38" pos:end="91:41">area</name> <init pos:start="91:43" pos:end="91:62">= <expr pos:start="91:45" pos:end="91:62"><operator pos:start="91:45" pos:end="91:47">new</operator> <call pos:start="91:49" pos:end="91:62"><name pos:start="91:49" pos:end="91:60">SourcePoints</name><argument_list pos:start="91:61" pos:end="91:62">()</argument_list></call></expr></init></decl>;</decl_stmt>
			<expr_stmt pos:start="92:25" pos:end="92:68"><expr pos:start="92:25" pos:end="92:67"><call pos:start="92:25" pos:end="92:67"><name pos:start="92:25" pos:end="92:44"><name pos:start="92:25" pos:end="92:28">area</name><operator pos:start="92:29" pos:end="92:29">.</operator><name pos:start="92:30" pos:end="92:44">setSourcePoints</name></name><argument_list pos:start="92:45" pos:end="92:67">(<argument pos:start="92:46" pos:end="92:66"><expr pos:start="92:46" pos:end="92:66"><name pos:start="92:46" pos:end="92:66">priorityPolygonPoints</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt pos:start="93:25" pos:end="93:48"><expr pos:start="93:25" pos:end="93:47"><call pos:start="93:25" pos:end="93:47"><name pos:start="93:25" pos:end="93:41"><name pos:start="93:25" pos:end="93:37">priorityAreas</name><operator pos:start="93:38" pos:end="93:38">.</operator><name pos:start="93:39" pos:end="93:41">add</name></name><argument_list pos:start="93:42" pos:end="93:47">(<argument pos:start="93:43" pos:end="93:46"><expr pos:start="93:43" pos:end="93:46"><name pos:start="93:43" pos:end="93:46">area</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		</block_content>}</block></for>
		<expr_stmt pos:start="95:17" pos:end="95:65"><expr pos:start="95:17" pos:end="95:64"><call pos:start="95:17" pos:end="95:64"><name pos:start="95:17" pos:end="95:34"><name pos:start="95:17" pos:end="95:22">System</name><operator pos:start="95:23" pos:end="95:23">.</operator><name pos:start="95:24" pos:end="95:26">out</name><operator pos:start="95:27" pos:end="95:27">.</operator><name pos:start="95:28" pos:end="95:34">println</name></name><argument_list pos:start="95:35" pos:end="95:64">(<argument pos:start="95:36" pos:end="95:63"><expr pos:start="95:36" pos:end="95:63"><literal type="string" pos:start="95:36" pos:end="95:63">"Priority area boundaries: "</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt pos:start="96:17" pos:end="96:59"><expr pos:start="96:17" pos:end="96:58"><call pos:start="96:17" pos:end="96:58"><name pos:start="96:17" pos:end="96:43"><name pos:start="96:17" pos:end="96:25">Utilities</name><operator pos:start="96:26" pos:end="96:26">.</operator><name pos:start="96:27" pos:end="96:43">printSourcePoints</name></name><argument_list pos:start="96:44" pos:end="96:58">(<argument pos:start="96:45" pos:end="96:57"><expr pos:start="96:45" pos:end="96:57"><name pos:start="96:45" pos:end="96:57">priorityAreas</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt pos:start="97:17" pos:end="97:69"><expr pos:start="97:17" pos:end="97:68"><call pos:start="97:17" pos:end="97:68"><name pos:start="97:17" pos:end="97:46"><name pos:start="97:17" pos:end="97:25">Utilities</name><operator pos:start="97:26" pos:end="97:26">.</operator><name pos:start="97:27" pos:end="97:46">printRoutePrimitives</name></name><argument_list pos:start="97:47" pos:end="97:68">(<argument pos:start="97:48" pos:end="97:67"><expr pos:start="97:48" pos:end="97:67"><name pos:start="97:48" pos:end="97:67">priorityPolygonRoute</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt pos:start="98:17" pos:end="98:68"><expr pos:start="98:17" pos:end="98:67"><call pos:start="98:17" pos:end="98:67"><name pos:start="98:17" pos:end="98:45"><name pos:start="98:17" pos:end="98:25">Utilities</name><operator pos:start="98:26" pos:end="98:26">.</operator><name pos:start="98:27" pos:end="98:45">printImageWaypoints</name></name><argument_list pos:start="98:46" pos:end="98:67">(<argument pos:start="98:47" pos:end="98:66"><expr pos:start="98:47" pos:end="98:66"><name pos:start="98:47" pos:end="98:66">priorityPolygonRoute</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<return pos:start="99:17" pos:end="99:44">return <expr pos:start="99:24" pos:end="99:43"><name pos:start="99:24" pos:end="99:43">priorityPolygonRoute</name></expr>;</return>
	</block_content>}</block></function>
}</block></class>
</unit>
