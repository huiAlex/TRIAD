<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="Java" filename="flatCode/ManagedDrone.java" pos:tabs="8"><package pos:start="1:1" pos:end="1:38">package <name pos:start="1:9" pos:end="1:37"><name pos:start="1:9" pos:end="1:11">edu</name><operator pos:start="1:12" pos:end="1:12">.</operator><name pos:start="1:13" pos:end="1:14">nd</name><operator pos:start="1:15" pos:end="1:15">.</operator><name pos:start="1:16" pos:end="1:24">dronology</name><operator pos:start="1:25" pos:end="1:25">.</operator><name pos:start="1:26" pos:end="1:29">core</name><operator pos:start="1:30" pos:end="1:30">.</operator><name pos:start="1:31" pos:end="1:37">vehicle</name></name>;</package>

<import pos:start="3:1" pos:end="3:19">import <name pos:start="3:8" pos:end="3:18"><name pos:start="3:8" pos:end="3:11">java</name><operator pos:start="3:12" pos:end="3:12">.</operator><name pos:start="3:13" pos:end="3:16">util</name><operator pos:start="3:17" pos:end="3:17">.</operator><name pos:start="3:18" pos:end="3:18">*</name></name>;</import>
<import pos:start="4:1" pos:end="4:47">import <name pos:start="4:8" pos:end="4:46"><name pos:start="4:8" pos:end="4:11">java</name><operator pos:start="4:12" pos:end="4:12">.</operator><name pos:start="4:13" pos:end="4:16">util</name><operator pos:start="4:17" pos:end="4:17">.</operator><name pos:start="4:18" pos:end="4:27">concurrent</name><operator pos:start="4:28" pos:end="4:28">.</operator><name pos:start="4:29" pos:end="4:46">ArrayBlockingQueue</name></name>;</import>
<import pos:start="5:1" pos:end="5:43">import <name pos:start="5:8" pos:end="5:42"><name pos:start="5:8" pos:end="5:11">java</name><operator pos:start="5:12" pos:end="5:12">.</operator><name pos:start="5:13" pos:end="5:16">util</name><operator pos:start="5:17" pos:end="5:17">.</operator><name pos:start="5:18" pos:end="5:27">concurrent</name><operator pos:start="5:28" pos:end="5:28">.</operator><name pos:start="5:29" pos:end="5:42">CountDownLatch</name></name>;</import>
<import pos:start="6:1" pos:end="6:44">import <name pos:start="6:8" pos:end="6:43"><name pos:start="6:8" pos:end="6:11">java</name><operator pos:start="6:12" pos:end="6:12">.</operator><name pos:start="6:13" pos:end="6:16">util</name><operator pos:start="6:17" pos:end="6:17">.</operator><name pos:start="6:18" pos:end="6:27">concurrent</name><operator pos:start="6:28" pos:end="6:28">.</operator><name pos:start="6:29" pos:end="6:43">ExecutorService</name></name>;</import>
<import pos:start="7:1" pos:end="7:38">import <name pos:start="7:8" pos:end="7:37"><name pos:start="7:8" pos:end="7:11">java</name><operator pos:start="7:12" pos:end="7:12">.</operator><name pos:start="7:13" pos:end="7:16">util</name><operator pos:start="7:17" pos:end="7:17">.</operator><name pos:start="7:18" pos:end="7:27">concurrent</name><operator pos:start="7:28" pos:end="7:28">.</operator><name pos:start="7:29" pos:end="7:37">Executors</name></name>;</import>
<import pos:start="8:1" pos:end="8:37">import <name pos:start="8:8" pos:end="8:36"><name pos:start="8:8" pos:end="8:11">java</name><operator pos:start="8:12" pos:end="8:12">.</operator><name pos:start="8:13" pos:end="8:16">util</name><operator pos:start="8:17" pos:end="8:17">.</operator><name pos:start="8:18" pos:end="8:27">concurrent</name><operator pos:start="8:28" pos:end="8:28">.</operator><name pos:start="8:29" pos:end="8:36">TimeUnit</name></name>;</import>
<import pos:start="9:1" pos:end="9:49">import <name pos:start="9:8" pos:end="9:48"><name pos:start="9:8" pos:end="9:11">java</name><operator pos:start="9:12" pos:end="9:12">.</operator><name pos:start="9:13" pos:end="9:16">util</name><operator pos:start="9:17" pos:end="9:17">.</operator><name pos:start="9:18" pos:end="9:27">concurrent</name><operator pos:start="9:28" pos:end="9:28">.</operator><name pos:start="9:29" pos:end="9:34">atomic</name><operator pos:start="9:35" pos:end="9:35">.</operator><name pos:start="9:36" pos:end="9:48">AtomicBoolean</name></name>;</import>
<import pos:start="10:1" pos:end="10:35">import <name pos:start="10:8" pos:end="10:34"><name pos:start="10:8" pos:end="10:11">java</name><operator pos:start="10:12" pos:end="10:12">.</operator><name pos:start="10:13" pos:end="10:16">util</name><operator pos:start="10:17" pos:end="10:17">.</operator><name pos:start="10:18" pos:end="10:23">stream</name><operator pos:start="10:24" pos:end="10:24">.</operator><name pos:start="10:25" pos:end="10:34">Collectors</name></name>;</import>

<import pos:start="12:1" pos:end="12:53">import <name pos:start="12:8" pos:end="12:52"><name pos:start="12:8" pos:end="12:10">com</name><operator pos:start="12:11" pos:end="12:11">.</operator><name pos:start="12:12" pos:end="12:17">google</name><operator pos:start="12:18" pos:end="12:18">.</operator><name pos:start="12:19" pos:end="12:24">common</name><operator pos:start="12:25" pos:end="12:25">.</operator><name pos:start="12:26" pos:end="12:29">util</name><operator pos:start="12:30" pos:end="12:30">.</operator><name pos:start="12:31" pos:end="12:40">concurrent</name><operator pos:start="12:41" pos:end="12:41">.</operator><name pos:start="12:42" pos:end="12:52">RateLimiter</name></name>;</import>

<import pos:start="14:1" pos:end="14:37">import <name pos:start="14:8" pos:end="14:36"><name pos:start="14:8" pos:end="14:10">edu</name><operator pos:start="14:11" pos:end="14:11">.</operator><name pos:start="14:12" pos:end="14:13">nd</name><operator pos:start="14:14" pos:end="14:14">.</operator><name pos:start="14:15" pos:end="14:23">dronology</name><operator pos:start="14:24" pos:end="14:24">.</operator><name pos:start="14:25" pos:end="14:28">core</name><operator pos:start="14:29" pos:end="14:29">.</operator><name pos:start="14:30" pos:end="14:36">Discuss</name></name>;</import>
<import pos:start="15:1" pos:end="15:48">import <name pos:start="15:8" pos:end="15:47"><name pos:start="15:8" pos:end="15:10">edu</name><operator pos:start="15:11" pos:end="15:11">.</operator><name pos:start="15:12" pos:end="15:13">nd</name><operator pos:start="15:14" pos:end="15:14">.</operator><name pos:start="15:15" pos:end="15:23">dronology</name><operator pos:start="15:24" pos:end="15:24">.</operator><name pos:start="15:25" pos:end="15:28">core</name><operator pos:start="15:29" pos:end="15:29">.</operator><name pos:start="15:30" pos:end="15:47">DronologyConstants</name></name>;</import>
<import pos:start="16:1" pos:end="16:62">import <name pos:start="16:8" pos:end="16:61"><name pos:start="16:8" pos:end="16:10">edu</name><operator pos:start="16:11" pos:end="16:11">.</operator><name pos:start="16:12" pos:end="16:13">nd</name><operator pos:start="16:14" pos:end="16:14">.</operator><name pos:start="16:15" pos:end="16:23">dronology</name><operator pos:start="16:24" pos:end="16:24">.</operator><name pos:start="16:25" pos:end="16:28">core</name><operator pos:start="16:29" pos:end="16:29">.</operator><name pos:start="16:30" pos:end="16:47">collisionavoidance</name><operator pos:start="16:48" pos:end="16:48">.</operator><name pos:start="16:49" pos:end="16:61">DroneSnapshot</name></name>;</import>
<import pos:start="17:1" pos:end="17:70">import <name pos:start="17:8" pos:end="17:69"><name pos:start="17:8" pos:end="17:10">edu</name><operator pos:start="17:11" pos:end="17:11">.</operator><name pos:start="17:12" pos:end="17:13">nd</name><operator pos:start="17:14" pos:end="17:14">.</operator><name pos:start="17:15" pos:end="17:23">dronology</name><operator pos:start="17:24" pos:end="17:24">.</operator><name pos:start="17:25" pos:end="17:28">core</name><operator pos:start="17:29" pos:end="17:29">.</operator><name pos:start="17:30" pos:end="17:47">collisionavoidance</name><operator pos:start="17:48" pos:end="17:48">.</operator><name pos:start="17:49" pos:end="17:69">DroneSnapshotInternal</name></name>;</import>
<import pos:start="18:1" pos:end="18:68">import <name pos:start="18:8" pos:end="18:67"><name pos:start="18:8" pos:end="18:10">edu</name><operator pos:start="18:11" pos:end="18:11">.</operator><name pos:start="18:12" pos:end="18:13">nd</name><operator pos:start="18:14" pos:end="18:14">.</operator><name pos:start="18:15" pos:end="18:23">dronology</name><operator pos:start="18:24" pos:end="18:24">.</operator><name pos:start="18:25" pos:end="18:28">core</name><operator pos:start="18:29" pos:end="18:29">.</operator><name pos:start="18:30" pos:end="18:47">collisionavoidance</name><operator pos:start="18:48" pos:end="18:48">.</operator><name pos:start="18:49" pos:end="18:67">DroneSnapshotOption</name></name>;</import>
<import pos:start="19:1" pos:end="19:73">import <name pos:start="19:8" pos:end="19:72"><name pos:start="19:8" pos:end="19:10">edu</name><operator pos:start="19:11" pos:end="19:11">.</operator><name pos:start="19:12" pos:end="19:13">nd</name><operator pos:start="19:14" pos:end="19:14">.</operator><name pos:start="19:15" pos:end="19:23">dronology</name><operator pos:start="19:24" pos:end="19:24">.</operator><name pos:start="19:25" pos:end="19:28">core</name><operator pos:start="19:29" pos:end="19:29">.</operator><name pos:start="19:30" pos:end="19:47">collisionavoidance</name><operator pos:start="19:48" pos:end="19:48">.</operator><name pos:start="19:49" pos:end="19:64">guidancecommands</name><operator pos:start="19:65" pos:end="19:65">.</operator><name pos:start="19:66" pos:end="19:72">Command</name></name>;</import>
<import pos:start="20:1" pos:end="20:76">import <name pos:start="20:8" pos:end="20:75"><name pos:start="20:8" pos:end="20:10">edu</name><operator pos:start="20:11" pos:end="20:11">.</operator><name pos:start="20:12" pos:end="20:13">nd</name><operator pos:start="20:14" pos:end="20:14">.</operator><name pos:start="20:15" pos:end="20:23">dronology</name><operator pos:start="20:24" pos:end="20:24">.</operator><name pos:start="20:25" pos:end="20:28">core</name><operator pos:start="20:29" pos:end="20:29">.</operator><name pos:start="20:30" pos:end="20:47">collisionavoidance</name><operator pos:start="20:48" pos:end="20:48">.</operator><name pos:start="20:49" pos:end="20:64">guidancecommands</name><operator pos:start="20:65" pos:end="20:65">.</operator><name pos:start="20:66" pos:end="20:75">NedCommand</name></name>;</import>
<import pos:start="21:1" pos:end="21:77">import <name pos:start="21:8" pos:end="21:76"><name pos:start="21:8" pos:end="21:10">edu</name><operator pos:start="21:11" pos:end="21:11">.</operator><name pos:start="21:12" pos:end="21:13">nd</name><operator pos:start="21:14" pos:end="21:14">.</operator><name pos:start="21:15" pos:end="21:23">dronology</name><operator pos:start="21:24" pos:end="21:24">.</operator><name pos:start="21:25" pos:end="21:28">core</name><operator pos:start="21:29" pos:end="21:29">.</operator><name pos:start="21:30" pos:end="21:47">collisionavoidance</name><operator pos:start="21:48" pos:end="21:48">.</operator><name pos:start="21:49" pos:end="21:64">guidancecommands</name><operator pos:start="21:65" pos:end="21:65">.</operator><name pos:start="21:66" pos:end="21:76">StopCommand</name></name>;</import>
<import pos:start="22:1" pos:end="22:81">import <name pos:start="22:8" pos:end="22:80"><name pos:start="22:8" pos:end="22:10">edu</name><operator pos:start="22:11" pos:end="22:11">.</operator><name pos:start="22:12" pos:end="22:13">nd</name><operator pos:start="22:14" pos:end="22:14">.</operator><name pos:start="22:15" pos:end="22:23">dronology</name><operator pos:start="22:24" pos:end="22:24">.</operator><name pos:start="22:25" pos:end="22:28">core</name><operator pos:start="22:29" pos:end="22:29">.</operator><name pos:start="22:30" pos:end="22:47">collisionavoidance</name><operator pos:start="22:48" pos:end="22:48">.</operator><name pos:start="22:49" pos:end="22:64">guidancecommands</name><operator pos:start="22:65" pos:end="22:65">.</operator><name pos:start="22:66" pos:end="22:80">WaypointCommand</name></name>;</import>
<import pos:start="23:1" pos:end="23:57">import <name pos:start="23:8" pos:end="23:56"><name pos:start="23:8" pos:end="23:10">edu</name><operator pos:start="23:11" pos:end="23:11">.</operator><name pos:start="23:12" pos:end="23:13">nd</name><operator pos:start="23:14" pos:end="23:14">.</operator><name pos:start="23:15" pos:end="23:23">dronology</name><operator pos:start="23:24" pos:end="23:24">.</operator><name pos:start="23:25" pos:end="23:28">core</name><operator pos:start="23:29" pos:end="23:29">.</operator><name pos:start="23:30" pos:end="23:39">coordinate</name><operator pos:start="23:40" pos:end="23:40">.</operator><name pos:start="23:41" pos:end="23:56">AbstractPosition</name></name>;</import>
<import pos:start="24:1" pos:end="24:47">import <name pos:start="24:8" pos:end="24:46"><name pos:start="24:8" pos:end="24:10">edu</name><operator pos:start="24:11" pos:end="24:11">.</operator><name pos:start="24:12" pos:end="24:13">nd</name><operator pos:start="24:14" pos:end="24:14">.</operator><name pos:start="24:15" pos:end="24:23">dronology</name><operator pos:start="24:24" pos:end="24:24">.</operator><name pos:start="24:25" pos:end="24:28">core</name><operator pos:start="24:29" pos:end="24:29">.</operator><name pos:start="24:30" pos:end="24:33">goal</name><operator pos:start="24:34" pos:end="24:34">.</operator><name pos:start="24:35" pos:end="24:46">AbstractGoal</name></name>;</import>
<import pos:start="25:1" pos:end="25:57">import <name pos:start="25:8" pos:end="25:56"><name pos:start="25:8" pos:end="25:10">edu</name><operator pos:start="25:11" pos:end="25:11">.</operator><name pos:start="25:12" pos:end="25:13">nd</name><operator pos:start="25:14" pos:end="25:14">.</operator><name pos:start="25:15" pos:end="25:23">dronology</name><operator pos:start="25:24" pos:end="25:24">.</operator><name pos:start="25:25" pos:end="25:28">core</name><operator pos:start="25:29" pos:end="25:29">.</operator><name pos:start="25:30" pos:end="25:33">goal</name><operator pos:start="25:34" pos:end="25:34">.</operator><name pos:start="25:35" pos:end="25:46">AbstractGoal</name><operator pos:start="25:47" pos:end="25:47">.</operator><name pos:start="25:48" pos:end="25:56">GoalState</name></name>;</import>
<import pos:start="26:1" pos:end="26:54">import <name pos:start="26:8" pos:end="26:53"><name pos:start="26:8" pos:end="26:10">edu</name><operator pos:start="26:11" pos:end="26:11">.</operator><name pos:start="26:12" pos:end="26:13">nd</name><operator pos:start="26:14" pos:end="26:14">.</operator><name pos:start="26:15" pos:end="26:23">dronology</name><operator pos:start="26:24" pos:end="26:24">.</operator><name pos:start="26:25" pos:end="26:28">core</name><operator pos:start="26:29" pos:end="26:29">.</operator><name pos:start="26:30" pos:end="26:39">coordinate</name><operator pos:start="26:40" pos:end="26:40">.</operator><name pos:start="26:41" pos:end="26:53">LlaCoordinate</name></name>;</import>
<import pos:start="27:1" pos:end="27:55">import <name pos:start="27:8" pos:end="27:54"><name pos:start="27:8" pos:end="27:10">edu</name><operator pos:start="27:11" pos:end="27:11">.</operator><name pos:start="27:12" pos:end="27:13">nd</name><operator pos:start="27:14" pos:end="27:14">.</operator><name pos:start="27:15" pos:end="27:23">dronology</name><operator pos:start="27:24" pos:end="27:24">.</operator><name pos:start="27:25" pos:end="27:28">core</name><operator pos:start="27:29" pos:end="27:29">.</operator><name pos:start="27:30" pos:end="27:39">exceptions</name><operator pos:start="27:40" pos:end="27:40">.</operator><name pos:start="27:41" pos:end="27:54">DroneException</name></name>;</import>
<import pos:start="28:1" pos:end="28:60">import <name pos:start="28:8" pos:end="28:59"><name pos:start="28:8" pos:end="28:10">edu</name><operator pos:start="28:11" pos:end="28:11">.</operator><name pos:start="28:12" pos:end="28:13">nd</name><operator pos:start="28:14" pos:end="28:14">.</operator><name pos:start="28:15" pos:end="28:23">dronology</name><operator pos:start="28:24" pos:end="28:24">.</operator><name pos:start="28:25" pos:end="28:28">core</name><operator pos:start="28:29" pos:end="28:29">.</operator><name pos:start="28:30" pos:end="28:39">exceptions</name><operator pos:start="28:40" pos:end="28:40">.</operator><name pos:start="28:41" pos:end="28:59">FlightZoneException</name></name>;</import>
<import pos:start="29:1" pos:end="29:53">import <name pos:start="29:8" pos:end="29:52"><name pos:start="29:8" pos:end="29:10">edu</name><operator pos:start="29:11" pos:end="29:11">.</operator><name pos:start="29:12" pos:end="29:13">nd</name><operator pos:start="29:14" pos:end="29:14">.</operator><name pos:start="29:15" pos:end="29:23">dronology</name><operator pos:start="29:24" pos:end="29:24">.</operator><name pos:start="29:25" pos:end="29:28">core</name><operator pos:start="29:29" pos:end="29:29">.</operator><name pos:start="29:30" pos:end="29:34">fleet</name><operator pos:start="29:35" pos:end="29:35">.</operator><name pos:start="29:36" pos:end="29:52">DroneFleetManager</name></name>;</import>
<import pos:start="30:1" pos:end="30:58">import <name pos:start="30:8" pos:end="30:57"><name pos:start="30:8" pos:end="30:10">edu</name><operator pos:start="30:11" pos:end="30:11">.</operator><name pos:start="30:12" pos:end="30:13">nd</name><operator pos:start="30:14" pos:end="30:14">.</operator><name pos:start="30:15" pos:end="30:23">dronology</name><operator pos:start="30:24" pos:end="30:24">.</operator><name pos:start="30:25" pos:end="30:28">core</name><operator pos:start="30:29" pos:end="30:29">.</operator><name pos:start="30:30" pos:end="30:35">flight</name><operator pos:start="30:36" pos:end="30:36">.</operator><name pos:start="30:37" pos:end="30:57">FlightDirectorFactory</name></name>;</import>
<import pos:start="31:1" pos:end="31:52">import <name pos:start="31:8" pos:end="31:51"><name pos:start="31:8" pos:end="31:10">edu</name><operator pos:start="31:11" pos:end="31:11">.</operator><name pos:start="31:12" pos:end="31:13">nd</name><operator pos:start="31:14" pos:end="31:14">.</operator><name pos:start="31:15" pos:end="31:23">dronology</name><operator pos:start="31:24" pos:end="31:24">.</operator><name pos:start="31:25" pos:end="31:28">core</name><operator pos:start="31:29" pos:end="31:29">.</operator><name pos:start="31:30" pos:end="31:35">flight</name><operator pos:start="31:36" pos:end="31:36">.</operator><name pos:start="31:37" pos:end="31:51">IFlightDirector</name></name>;</import>
<import pos:start="32:1" pos:end="32:67">import <name pos:start="32:8" pos:end="32:66"><name pos:start="32:8" pos:end="32:10">edu</name><operator pos:start="32:11" pos:end="32:11">.</operator><name pos:start="32:12" pos:end="32:13">nd</name><operator pos:start="32:14" pos:end="32:14">.</operator><name pos:start="32:15" pos:end="32:23">dronology</name><operator pos:start="32:24" pos:end="32:24">.</operator><name pos:start="32:25" pos:end="32:28">core</name><operator pos:start="32:29" pos:end="32:29">.</operator><name pos:start="32:30" pos:end="32:39">monitoring</name><operator pos:start="32:40" pos:end="32:40">.</operator><name pos:start="32:41" pos:end="32:66">DronologyMonitoringManager</name></name>;</import>
<import pos:start="33:1" pos:end="33:58">import <name pos:start="33:8" pos:end="33:57"><name pos:start="33:8" pos:end="33:10">edu</name><operator pos:start="33:11" pos:end="33:11">.</operator><name pos:start="33:12" pos:end="33:13">nd</name><operator pos:start="33:14" pos:end="33:14">.</operator><name pos:start="33:15" pos:end="33:23">dronology</name><operator pos:start="33:24" pos:end="33:24">.</operator><name pos:start="33:25" pos:end="33:28">core</name><operator pos:start="33:29" pos:end="33:29">.</operator><name pos:start="33:30" pos:end="33:39">monitoring</name><operator pos:start="33:40" pos:end="33:40">.</operator><name pos:start="33:41" pos:end="33:57">MessageMarshaller</name></name>;</import>
<import pos:start="34:1" pos:end="34:83">import <name pos:start="34:8" pos:end="34:82"><name pos:start="34:8" pos:end="34:10">edu</name><operator pos:start="34:11" pos:end="34:11">.</operator><name pos:start="34:12" pos:end="34:13">nd</name><operator pos:start="34:14" pos:end="34:14">.</operator><name pos:start="34:15" pos:end="34:23">dronology</name><operator pos:start="34:24" pos:end="34:24">.</operator><name pos:start="34:25" pos:end="34:28">core</name><operator pos:start="34:29" pos:end="34:29">.</operator><name pos:start="34:30" pos:end="34:39">monitoring</name><operator pos:start="34:40" pos:end="34:40">.</operator><name pos:start="34:41" pos:end="34:48">messages</name><operator pos:start="34:49" pos:end="34:49">.</operator><name pos:start="34:50" pos:end="34:70">UAVMonitorableMessage</name><operator pos:start="34:71" pos:end="34:71">.</operator><name pos:start="34:72" pos:end="34:82">MessageType</name></name>;</import>
<import pos:start="35:1" pos:end="35:48">import <name pos:start="35:8" pos:end="35:47"><name pos:start="35:8" pos:end="35:10">edu</name><operator pos:start="35:11" pos:end="35:11">.</operator><name pos:start="35:12" pos:end="35:13">nd</name><operator pos:start="35:14" pos:end="35:14">.</operator><name pos:start="35:15" pos:end="35:23">dronology</name><operator pos:start="35:24" pos:end="35:24">.</operator><name pos:start="35:25" pos:end="35:28">core</name><operator pos:start="35:29" pos:end="35:29">.</operator><name pos:start="35:30" pos:end="35:33">goal</name><operator pos:start="35:34" pos:end="35:34">.</operator><name pos:start="35:35" pos:end="35:47">IGoalSnapshot</name></name>;</import>
<import pos:start="36:1" pos:end="36:47">import <name pos:start="36:8" pos:end="36:46"><name pos:start="36:8" pos:end="36:10">edu</name><operator pos:start="36:11" pos:end="36:11">.</operator><name pos:start="36:12" pos:end="36:13">nd</name><operator pos:start="36:14" pos:end="36:14">.</operator><name pos:start="36:15" pos:end="36:23">dronology</name><operator pos:start="36:24" pos:end="36:24">.</operator><name pos:start="36:25" pos:end="36:28">core</name><operator pos:start="36:29" pos:end="36:29">.</operator><name pos:start="36:30" pos:end="36:33">goal</name><operator pos:start="36:34" pos:end="36:34">.</operator><name pos:start="36:35" pos:end="36:46">WaypointGoal</name></name>;</import>
<import pos:start="37:1" pos:end="37:43">import <name pos:start="37:8" pos:end="37:42"><name pos:start="37:8" pos:end="37:10">edu</name><operator pos:start="37:11" pos:end="37:11">.</operator><name pos:start="37:12" pos:end="37:13">nd</name><operator pos:start="37:14" pos:end="37:14">.</operator><name pos:start="37:15" pos:end="37:23">dronology</name><operator pos:start="37:24" pos:end="37:24">.</operator><name pos:start="37:25" pos:end="37:28">core</name><operator pos:start="37:29" pos:end="37:29">.</operator><name pos:start="37:30" pos:end="37:33">util</name><operator pos:start="37:34" pos:end="37:34">.</operator><name pos:start="37:35" pos:end="37:42">Waypoint</name></name>;</import>
<import pos:start="38:1" pos:end="38:67">import <name pos:start="38:8" pos:end="38:66"><name pos:start="38:8" pos:end="38:10">edu</name><operator pos:start="38:11" pos:end="38:11">.</operator><name pos:start="38:12" pos:end="38:13">nd</name><operator pos:start="38:14" pos:end="38:14">.</operator><name pos:start="38:15" pos:end="38:23">dronology</name><operator pos:start="38:24" pos:end="38:24">.</operator><name pos:start="38:25" pos:end="38:28">core</name><operator pos:start="38:29" pos:end="38:29">.</operator><name pos:start="38:30" pos:end="38:36">vehicle</name><operator pos:start="38:37" pos:end="38:37">.</operator><name pos:start="38:38" pos:end="38:45">commands</name><operator pos:start="38:46" pos:end="38:46">.</operator><name pos:start="38:47" pos:end="38:66">AbstractDroneCommand</name></name>;</import>
<import pos:start="39:1" pos:end="39:67">import <name pos:start="39:8" pos:end="39:66"><name pos:start="39:8" pos:end="39:10">edu</name><operator pos:start="39:11" pos:end="39:11">.</operator><name pos:start="39:12" pos:end="39:13">nd</name><operator pos:start="39:14" pos:end="39:14">.</operator><name pos:start="39:15" pos:end="39:23">dronology</name><operator pos:start="39:24" pos:end="39:24">.</operator><name pos:start="39:25" pos:end="39:28">core</name><operator pos:start="39:29" pos:end="39:29">.</operator><name pos:start="39:30" pos:end="39:36">vehicle</name><operator pos:start="39:37" pos:end="39:37">.</operator><name pos:start="39:38" pos:end="39:45">commands</name><operator pos:start="39:46" pos:end="39:46">.</operator><name pos:start="39:47" pos:end="39:66">EmergencyStopCommand</name></name>;</import>
<import pos:start="40:1" pos:end="40:60">import <name pos:start="40:8" pos:end="40:59"><name pos:start="40:8" pos:end="40:10">edu</name><operator pos:start="40:11" pos:end="40:11">.</operator><name pos:start="40:12" pos:end="40:13">nd</name><operator pos:start="40:14" pos:end="40:14">.</operator><name pos:start="40:15" pos:end="40:23">dronology</name><operator pos:start="40:24" pos:end="40:24">.</operator><name pos:start="40:25" pos:end="40:28">core</name><operator pos:start="40:29" pos:end="40:29">.</operator><name pos:start="40:30" pos:end="40:36">vehicle</name><operator pos:start="40:37" pos:end="40:37">.</operator><name pos:start="40:38" pos:end="40:57">manageddroneinternal</name><operator pos:start="40:58" pos:end="40:58">.</operator><name pos:start="40:59" pos:end="40:59">*</name></name>;</import>
<import pos:start="41:1" pos:end="41:82">import <name pos:start="41:8" pos:end="41:81"><name pos:start="41:8" pos:end="41:10">edu</name><operator pos:start="41:11" pos:end="41:11">.</operator><name pos:start="41:12" pos:end="41:13">nd</name><operator pos:start="41:14" pos:end="41:14">.</operator><name pos:start="41:15" pos:end="41:23">dronology</name><operator pos:start="41:24" pos:end="41:24">.</operator><name pos:start="41:25" pos:end="41:28">core</name><operator pos:start="41:29" pos:end="41:29">.</operator><name pos:start="41:30" pos:end="41:36">vehicle</name><operator pos:start="41:37" pos:end="41:37">.</operator><name pos:start="41:38" pos:end="41:57">manageddroneinternal</name><operator pos:start="41:58" pos:end="41:58">.</operator><name pos:start="41:59" pos:end="41:65">message</name><operator pos:start="41:66" pos:end="41:66">.</operator><name pos:start="41:67" pos:end="41:81">AbstractMessage</name></name>;</import>
<import pos:start="42:1" pos:end="42:86">import <name pos:start="42:8" pos:end="42:85"><name pos:start="42:8" pos:end="42:10">edu</name><operator pos:start="42:11" pos:end="42:11">.</operator><name pos:start="42:12" pos:end="42:13">nd</name><operator pos:start="42:14" pos:end="42:14">.</operator><name pos:start="42:15" pos:end="42:23">dronology</name><operator pos:start="42:24" pos:end="42:24">.</operator><name pos:start="42:25" pos:end="42:28">core</name><operator pos:start="42:29" pos:end="42:29">.</operator><name pos:start="42:30" pos:end="42:36">vehicle</name><operator pos:start="42:37" pos:end="42:37">.</operator><name pos:start="42:38" pos:end="42:57">manageddroneinternal</name><operator pos:start="42:58" pos:end="42:58">.</operator><name pos:start="42:59" pos:end="42:65">message</name><operator pos:start="42:66" pos:end="42:66">.</operator><name pos:start="42:67" pos:end="42:85">AssignFlightMessage</name></name>;</import>
<import pos:start="43:1" pos:end="43:85">import <name pos:start="43:8" pos:end="43:84"><name pos:start="43:8" pos:end="43:10">edu</name><operator pos:start="43:11" pos:end="43:11">.</operator><name pos:start="43:12" pos:end="43:13">nd</name><operator pos:start="43:14" pos:end="43:14">.</operator><name pos:start="43:15" pos:end="43:23">dronology</name><operator pos:start="43:24" pos:end="43:24">.</operator><name pos:start="43:25" pos:end="43:28">core</name><operator pos:start="43:29" pos:end="43:29">.</operator><name pos:start="43:30" pos:end="43:36">vehicle</name><operator pos:start="43:37" pos:end="43:37">.</operator><name pos:start="43:38" pos:end="43:57">manageddroneinternal</name><operator pos:start="43:58" pos:end="43:58">.</operator><name pos:start="43:59" pos:end="43:65">message</name><operator pos:start="43:66" pos:end="43:66">.</operator><name pos:start="43:67" pos:end="43:84">GetSnapshotMessage</name></name>;</import>
<import pos:start="44:1" pos:end="44:84">import <name pos:start="44:8" pos:end="44:83"><name pos:start="44:8" pos:end="44:10">edu</name><operator pos:start="44:11" pos:end="44:11">.</operator><name pos:start="44:12" pos:end="44:13">nd</name><operator pos:start="44:14" pos:end="44:14">.</operator><name pos:start="44:15" pos:end="44:23">dronology</name><operator pos:start="44:24" pos:end="44:24">.</operator><name pos:start="44:25" pos:end="44:28">core</name><operator pos:start="44:29" pos:end="44:29">.</operator><name pos:start="44:30" pos:end="44:36">vehicle</name><operator pos:start="44:37" pos:end="44:37">.</operator><name pos:start="44:38" pos:end="44:57">manageddroneinternal</name><operator pos:start="44:58" pos:end="44:58">.</operator><name pos:start="44:59" pos:end="44:65">message</name><operator pos:start="44:66" pos:end="44:66">.</operator><name pos:start="44:67" pos:end="44:83">GoalUpdateMessage</name></name>;</import>
<import pos:start="45:1" pos:end="45:88">import <name pos:start="45:8" pos:end="45:87"><name pos:start="45:8" pos:end="45:10">edu</name><operator pos:start="45:11" pos:end="45:11">.</operator><name pos:start="45:12" pos:end="45:13">nd</name><operator pos:start="45:14" pos:end="45:14">.</operator><name pos:start="45:15" pos:end="45:23">dronology</name><operator pos:start="45:24" pos:end="45:24">.</operator><name pos:start="45:25" pos:end="45:28">core</name><operator pos:start="45:29" pos:end="45:29">.</operator><name pos:start="45:30" pos:end="45:36">vehicle</name><operator pos:start="45:37" pos:end="45:37">.</operator><name pos:start="45:38" pos:end="45:57">manageddroneinternal</name><operator pos:start="45:58" pos:end="45:58">.</operator><name pos:start="45:59" pos:end="45:65">message</name><operator pos:start="45:66" pos:end="45:66">.</operator><name pos:start="45:67" pos:end="45:87">UnassignFlightMessage</name></name>;</import>
<import pos:start="46:1" pos:end="46:88">import <name pos:start="46:8" pos:end="46:87"><name pos:start="46:8" pos:end="46:10">edu</name><operator pos:start="46:11" pos:end="46:11">.</operator><name pos:start="46:12" pos:end="46:13">nd</name><operator pos:start="46:14" pos:end="46:14">.</operator><name pos:start="46:15" pos:end="46:23">dronology</name><operator pos:start="46:24" pos:end="46:24">.</operator><name pos:start="46:25" pos:end="46:28">core</name><operator pos:start="46:29" pos:end="46:29">.</operator><name pos:start="46:30" pos:end="46:36">vehicle</name><operator pos:start="46:37" pos:end="46:37">.</operator><name pos:start="46:38" pos:end="46:57">manageddroneinternal</name><operator pos:start="46:58" pos:end="46:58">.</operator><name pos:start="46:59" pos:end="46:65">message</name><operator pos:start="46:66" pos:end="46:66">.</operator><name pos:start="46:67" pos:end="46:87">UpdateGuidanceMessage</name></name>;</import>
<import pos:start="47:1" pos:end="47:59">import <name pos:start="47:8" pos:end="47:58"><name pos:start="47:8" pos:end="47:10">edu</name><operator pos:start="47:11" pos:end="47:11">.</operator><name pos:start="47:12" pos:end="47:13">nd</name><operator pos:start="47:14" pos:end="47:14">.</operator><name pos:start="47:15" pos:end="47:23">dronology</name><operator pos:start="47:24" pos:end="47:24">.</operator><name pos:start="47:25" pos:end="47:28">core</name><operator pos:start="47:29" pos:end="47:29">.</operator><name pos:start="47:30" pos:end="47:36">vehicle</name><operator pos:start="47:37" pos:end="47:37">.</operator><name pos:start="47:38" pos:end="47:42">proxy</name><operator pos:start="47:43" pos:end="47:43">.</operator><name pos:start="47:44" pos:end="47:58">UAVProxyManager</name></name>;</import>
<import pos:start="48:1" pos:end="48:48">import <name pos:start="48:8" pos:end="48:47"><name pos:start="48:8" pos:end="48:10">edu</name><operator pos:start="48:11" pos:end="48:11">.</operator><name pos:start="48:12" pos:end="48:13">nd</name><operator pos:start="48:14" pos:end="48:14">.</operator><name pos:start="48:15" pos:end="48:23">dronology</name><operator pos:start="48:24" pos:end="48:24">.</operator><name pos:start="48:25" pos:end="48:28">util</name><operator pos:start="48:29" pos:end="48:29">.</operator><name pos:start="48:30" pos:end="48:47">NamedThreadFactory</name></name>;</import>
<import pos:start="49:1" pos:end="49:38">import <name pos:start="49:8" pos:end="49:37"><name pos:start="49:8" pos:end="49:10">edu</name><operator pos:start="49:11" pos:end="49:11">.</operator><name pos:start="49:12" pos:end="49:13">nd</name><operator pos:start="49:14" pos:end="49:14">.</operator><name pos:start="49:15" pos:end="49:23">dronology</name><operator pos:start="49:24" pos:end="49:24">.</operator><name pos:start="49:25" pos:end="49:28">util</name><operator pos:start="49:29" pos:end="49:29">.</operator><name pos:start="49:30" pos:end="49:37">NullUtil</name></name>;</import>
<import pos:start="50:1" pos:end="50:30">import <name pos:start="50:8" pos:end="50:29"><name pos:start="50:8" pos:end="50:10">net</name><operator pos:start="50:11" pos:end="50:11">.</operator><name pos:start="50:12" pos:end="50:13">mv</name><operator pos:start="50:14" pos:end="50:14">.</operator><name pos:start="50:15" pos:end="50:21">logging</name><operator pos:start="50:22" pos:end="50:22">.</operator><name pos:start="50:23" pos:end="50:29">ILogger</name></name>;</import>
<import pos:start="51:1" pos:end="51:37">import <name pos:start="51:8" pos:end="51:36"><name pos:start="51:8" pos:end="51:10">net</name><operator pos:start="51:11" pos:end="51:11">.</operator><name pos:start="51:12" pos:end="51:13">mv</name><operator pos:start="51:14" pos:end="51:14">.</operator><name pos:start="51:15" pos:end="51:21">logging</name><operator pos:start="51:22" pos:end="51:22">.</operator><name pos:start="51:23" pos:end="51:36">LoggerProvider</name></name>;</import>

<comment type="block" format="javadoc" pos:start="53:1" pos:end="61:3">/**
 * 
 * Handler class for both {@link VirtualDrone} and {@link PhysicalDrone}.&lt;br&gt;
 * Handles basic functionality that is independent of a virtual or physical endpoint.&lt;br&gt;
 * Contains information on coordinates, state, and flight instructions.
 *  
 *  
 * @author Jane Cleland-Huang
 */</comment>
<class pos:start="62:1" pos:end="684:1"><annotation pos:start="62:1" pos:end="62:59">@<name pos:start="62:2" pos:end="62:8">Discuss</name><argument_list pos:start="62:9" pos:end="62:59">(<argument pos:start="62:10" pos:end="62:58"><expr pos:start="62:10" pos:end="62:58"><name pos:start="62:10" pos:end="62:16">discuss</name> <operator pos:start="62:18" pos:end="62:18">=</operator> <literal type="string" pos:start="62:20" pos:end="62:58">"does the drone need to be observable?"</literal></expr></argument>)</argument_list></annotation>
<specifier pos:start="63:1" pos:end="63:6">public</specifier> class <name pos:start="63:14" pos:end="63:25">ManagedDrone</name> <super_list pos:start="63:27" pos:end="63:74"><extends pos:start="63:27" pos:end="63:44">extends <super pos:start="63:35" pos:end="63:44"><name pos:start="63:35" pos:end="63:44">Observable</name></super></extends> <implements pos:start="63:46" pos:end="63:74">implements <super pos:start="63:57" pos:end="63:64"><name pos:start="63:57" pos:end="63:64">Runnable</name></super>, <super pos:start="63:67" pos:end="63:74"><name pos:start="63:67" pos:end="63:74">Observer</name></super></implements></super_list> <block pos:start="63:76" pos:end="684:1">{
	<comment type="line" pos:start="64:9" pos:end="64:24">// region fields</comment>
	<decl_stmt pos:start="65:9" pos:end="65:91"><decl pos:start="65:9" pos:end="65:90"><type pos:start="65:9" pos:end="65:36"><specifier pos:start="65:9" pos:end="65:15">private</specifier> <specifier pos:start="65:17" pos:end="65:22">static</specifier> <specifier pos:start="65:24" pos:end="65:28">final</specifier> <name pos:start="65:30" pos:end="65:36">ILogger</name></type> <name pos:start="65:38" pos:end="65:43">LOGGER</name> <init pos:start="65:45" pos:end="65:90">= <expr pos:start="65:47" pos:end="65:90"><call pos:start="65:47" pos:end="65:90"><name pos:start="65:47" pos:end="65:70"><name pos:start="65:47" pos:end="65:60">LoggerProvider</name><operator pos:start="65:61" pos:end="65:61">.</operator><name pos:start="65:62" pos:end="65:70">getLogger</name></name><argument_list pos:start="65:71" pos:end="65:90">(<argument pos:start="65:72" pos:end="65:89"><expr pos:start="65:72" pos:end="65:89"><name pos:start="65:72" pos:end="65:89"><name pos:start="65:72" pos:end="65:83">ManagedDrone</name><operator pos:start="65:84" pos:end="65:84">.</operator><name pos:start="65:85" pos:end="65:89">class</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

	<decl_stmt pos:start="67:9" pos:end="67:61"><decl pos:start="67:9" pos:end="67:60"><type pos:start="67:9" pos:end="67:29"><specifier pos:start="67:9" pos:end="67:15">private</specifier> <name pos:start="67:17" pos:end="67:29">AtomicBoolean</name></type> <name pos:start="67:31" pos:end="67:34">cont</name> <init pos:start="67:36" pos:end="67:60">= <expr pos:start="67:38" pos:end="67:60"><operator pos:start="67:38" pos:end="67:40">new</operator> <call pos:start="67:42" pos:end="67:60"><name pos:start="67:42" pos:end="67:54">AtomicBoolean</name><argument_list pos:start="67:55" pos:end="67:60">(<argument pos:start="67:56" pos:end="67:59"><expr pos:start="67:56" pos:end="67:59"><literal type="boolean" pos:start="67:56" pos:end="67:59">true</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

	<decl_stmt pos:start="69:9" pos:end="69:61"><decl pos:start="69:9" pos:end="69:60"><type pos:start="69:9" pos:end="69:27"><specifier pos:start="69:9" pos:end="69:15">private</specifier> <name pos:start="69:17" pos:end="69:27">RateLimiter</name></type> <name pos:start="69:29" pos:end="69:35">LIMITER</name> <init pos:start="69:37" pos:end="69:60">= <expr pos:start="69:39" pos:end="69:60"><call pos:start="69:39" pos:end="69:60"><name pos:start="69:39" pos:end="69:56"><name pos:start="69:39" pos:end="69:49">RateLimiter</name><operator pos:start="69:50" pos:end="69:50">.</operator><name pos:start="69:51" pos:end="69:56">create</name></name><argument_list pos:start="69:57" pos:end="69:60">(<argument pos:start="69:58" pos:end="69:59"><expr pos:start="69:58" pos:end="69:59"><literal type="number" pos:start="69:58" pos:end="69:59">10</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

	<decl_stmt pos:start="71:9" pos:end="72:122"><decl pos:start="71:9" pos:end="72:121"><type pos:start="71:9" pos:end="71:44"><specifier pos:start="71:9" pos:end="71:15">private</specifier> <specifier pos:start="71:17" pos:end="71:22">static</specifier> <specifier pos:start="71:24" pos:end="71:28">final</specifier> <name pos:start="71:30" pos:end="71:44">ExecutorService</name></type> <name pos:start="71:46" pos:end="71:61">EXECUTOR_SERVICE</name> <init pos:start="71:63" pos:end="72:121">= <expr pos:start="71:65" pos:end="72:121"><call pos:start="71:65" pos:end="72:121"><name pos:start="71:65" pos:end="72:43"><name pos:start="71:65" pos:end="71:73">Executors</name>
			<operator pos:start="72:25" pos:end="72:25">.</operator><name pos:start="72:26" pos:end="72:43">newFixedThreadPool</name></name><argument_list pos:start="72:44" pos:end="72:121">(<argument pos:start="72:45" pos:end="72:80"><expr pos:start="72:45" pos:end="72:80"><name pos:start="72:45" pos:end="72:80"><name pos:start="72:45" pos:end="72:62">DronologyConstants</name><operator pos:start="72:63" pos:end="72:63">.</operator><name pos:start="72:64" pos:end="72:80">MAX_DRONE_THREADS</name></name></expr></argument>, <argument pos:start="72:83" pos:end="72:120"><expr pos:start="72:83" pos:end="72:120"><operator pos:start="72:83" pos:end="72:85">new</operator> <call pos:start="72:87" pos:end="72:120"><name pos:start="72:87" pos:end="72:104">NamedThreadFactory</name><argument_list pos:start="72:105" pos:end="72:120">(<argument pos:start="72:106" pos:end="72:119"><expr pos:start="72:106" pos:end="72:119"><literal type="string" pos:start="72:106" pos:end="72:119">"ManagedDrone"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

	<decl_stmt pos:start="74:9" pos:end="74:35"><decl pos:start="74:9" pos:end="74:34"><type pos:start="74:9" pos:end="74:28"><specifier pos:start="74:9" pos:end="74:15">private</specifier> <specifier pos:start="74:17" pos:end="74:21">final</specifier> <name pos:start="74:23" pos:end="74:28">IDrone</name></type> <name pos:start="74:30" pos:end="74:34">drone</name></decl>;</decl_stmt> <comment type="line" pos:start="74:37" pos:end="74:83">// Controls primitive flight commands for drone</comment>

	<decl_stmt pos:start="76:9" pos:end="76:51"><decl pos:start="76:9" pos:end="76:50"><type pos:start="76:9" pos:end="76:39"><specifier pos:start="76:9" pos:end="76:15">private</specifier> <name pos:start="76:17" pos:end="76:39">DroneFlightStateManager</name></type> <name pos:start="76:41" pos:end="76:50">droneState</name></decl>;</decl_stmt>
	<decl_stmt pos:start="77:9" pos:end="77:57"><decl pos:start="77:9" pos:end="77:56"><type pos:start="77:9" pos:end="77:39"><specifier pos:start="77:9" pos:end="77:15">private</specifier> <name pos:start="77:17" pos:end="77:39">DroneSafetyStateManager</name></type> <name pos:start="77:41" pos:end="77:56">droneSafetyState</name></decl>;</decl_stmt>

	<decl_stmt pos:start="79:9" pos:end="80:54"><decl pos:start="79:9" pos:end="80:53"><annotation pos:start="79:9" pos:end="79:84">@<name pos:start="79:10" pos:end="79:16">Discuss</name><argument_list pos:start="79:17" pos:end="79:84">(<argument pos:start="79:18" pos:end="79:83"><expr pos:start="79:18" pos:end="79:83"><name pos:start="79:18" pos:end="79:24">discuss</name> <operator pos:start="79:26" pos:end="79:26">=</operator> <literal type="string" pos:start="79:28" pos:end="79:83">"why not final? - new flight director for each flight??"</literal></expr></argument>)</argument_list></annotation>
	<type pos:start="80:9" pos:end="80:31"><specifier pos:start="80:9" pos:end="80:15">private</specifier> <name pos:start="80:17" pos:end="80:31">IFlightDirector</name></type> <name pos:start="80:33" pos:end="80:46">flightDirector</name> <init pos:start="80:48" pos:end="80:53">= <expr pos:start="80:50" pos:end="80:53"><literal type="null" pos:start="80:50" pos:end="80:53">null</literal></expr></init></decl>;</decl_stmt> <comment type="line" pos:start="80:56" pos:end="80:84">// Each drone can be assigned</comment>
	<comment type="line" pos:start="81:9" pos:end="81:32">// a single flight plan.</comment>
	<decl_stmt pos:start="82:9" pos:end="82:51"><decl pos:start="82:9" pos:end="82:50"><type pos:start="82:9" pos:end="82:31"><specifier pos:start="82:9" pos:end="82:15">private</specifier> <specifier pos:start="82:17" pos:end="82:24">volatile</specifier> <name pos:start="82:26" pos:end="82:31">double</name></type> <name pos:start="82:33" pos:end="82:46">targetAltitude</name> <init pos:start="82:48" pos:end="82:50">= <expr pos:start="82:50" pos:end="82:50"><literal type="number" pos:start="82:50" pos:end="82:50">0</literal></expr></init></decl>;</decl_stmt>

	<decl_stmt pos:start="84:9" pos:end="84:46"><decl pos:start="84:9" pos:end="84:45"><type pos:start="84:9" pos:end="84:21"><specifier pos:start="84:9" pos:end="84:15">private</specifier> <name pos:start="84:17" pos:end="84:21">Timer</name></type> <name pos:start="84:23" pos:end="84:31">haltTimer</name> <init pos:start="84:33" pos:end="84:45">= <expr pos:start="84:35" pos:end="84:45"><operator pos:start="84:35" pos:end="84:37">new</operator> <call pos:start="84:39" pos:end="84:45"><name pos:start="84:39" pos:end="84:43">Timer</name><argument_list pos:start="84:44" pos:end="84:45">()</argument_list></call></expr></init></decl>;</decl_stmt>
	<decl_stmt pos:start="85:9" pos:end="85:47"><decl pos:start="85:9" pos:end="85:46"><type pos:start="85:9" pos:end="85:29"><specifier pos:start="85:9" pos:end="85:15">private</specifier> <name pos:start="85:17" pos:end="85:29">HaltTimerTask</name></type> <name pos:start="85:31" pos:end="85:46">currentHaltTimer</name></decl>;</decl_stmt>

	<decl_stmt pos:start="87:9" pos:end="87:41"><decl pos:start="87:9" pos:end="87:40"><type pos:start="87:9" pos:end="87:34"><specifier pos:start="87:9" pos:end="87:15">private</specifier> <name pos:start="87:17" pos:end="87:34"><name pos:start="87:17" pos:end="87:20">List</name><argument_list type="generic" pos:start="87:21" pos:end="87:34">&lt;<argument pos:start="87:22" pos:end="87:33"><name pos:start="87:22" pos:end="87:33">AbstractGoal</name></argument>&gt;</argument_list></name></type> <name pos:start="87:36" pos:end="87:40">goals</name></decl>;</decl_stmt>
	<decl_stmt pos:start="88:9" pos:end="88:64"><decl pos:start="88:9" pos:end="88:63"><type pos:start="88:9" pos:end="88:33"><specifier pos:start="88:9" pos:end="88:15">private</specifier> <name pos:start="88:17" pos:end="88:33"><name pos:start="88:17" pos:end="88:19">Set</name><argument_list type="generic" pos:start="88:20" pos:end="88:33">&lt;<argument pos:start="88:21" pos:end="88:32"><name pos:start="88:21" pos:end="88:32">AbstractGoal</name></argument>&gt;</argument_list></name></type> <name pos:start="88:35" pos:end="88:45">activeGoals</name> <init pos:start="88:47" pos:end="88:63">= <expr pos:start="88:49" pos:end="88:63"><operator pos:start="88:49" pos:end="88:51">new</operator> <call pos:start="88:53" pos:end="88:63"><name pos:start="88:53" pos:end="88:61"><name pos:start="88:53" pos:end="88:59">HashSet</name><argument_list type="generic" pos:start="88:60" pos:end="88:61">&lt;&gt;</argument_list></name><argument_list pos:start="88:62" pos:end="88:63">()</argument_list></call></expr></init></decl>;</decl_stmt>
	<decl_stmt pos:start="89:9" pos:end="89:63"><decl pos:start="89:9" pos:end="89:62"><type pos:start="89:9" pos:end="89:29"><specifier pos:start="89:9" pos:end="89:15">private</specifier> <name pos:start="89:17" pos:end="89:29"><name pos:start="89:17" pos:end="89:20">List</name><argument_list type="generic" pos:start="89:21" pos:end="89:29">&lt;<argument pos:start="89:22" pos:end="89:28"><name pos:start="89:22" pos:end="89:28">Command</name></argument>&gt;</argument_list></name></type> <name pos:start="89:31" pos:end="89:42">commandQueue</name> <init pos:start="89:44" pos:end="89:62">= <expr pos:start="89:46" pos:end="89:62"><operator pos:start="89:46" pos:end="89:48">new</operator> <call pos:start="89:50" pos:end="89:62"><name pos:start="89:50" pos:end="89:60"><name pos:start="89:50" pos:end="89:58">ArrayList</name><argument_list type="generic" pos:start="89:59" pos:end="89:60">&lt;&gt;</argument_list></name><argument_list pos:start="89:61" pos:end="89:62">()</argument_list></call></expr></init></decl>;</decl_stmt>
	<decl_stmt pos:start="90:9" pos:end="90:68"><decl pos:start="90:9" pos:end="90:67"><type pos:start="90:9" pos:end="90:29"><specifier pos:start="90:9" pos:end="90:15">private</specifier> <name pos:start="90:17" pos:end="90:29"><name pos:start="90:17" pos:end="90:20">List</name><argument_list type="generic" pos:start="90:21" pos:end="90:29">&lt;<argument pos:start="90:22" pos:end="90:28"><name pos:start="90:22" pos:end="90:28">Command</name></argument>&gt;</argument_list></name></type> <name pos:start="90:31" pos:end="90:47">completedCommands</name> <init pos:start="90:49" pos:end="90:67">= <expr pos:start="90:51" pos:end="90:67"><operator pos:start="90:51" pos:end="90:53">new</operator> <call pos:start="90:55" pos:end="90:67"><name pos:start="90:55" pos:end="90:65"><name pos:start="90:55" pos:end="90:63">ArrayList</name><argument_list type="generic" pos:start="90:64" pos:end="90:65">&lt;&gt;</argument_list></name><argument_list pos:start="90:66" pos:end="90:67">()</argument_list></call></expr></init></decl>;</decl_stmt>
	<decl_stmt pos:start="91:9" pos:end="91:39"><decl pos:start="91:9" pos:end="91:38"><type pos:start="91:9" pos:end="91:23"><specifier pos:start="91:9" pos:end="91:15">private</specifier> <name pos:start="91:17" pos:end="91:23">Command</name></type> <name pos:start="91:25" pos:end="91:38">currentCommand</name></decl>;</decl_stmt>
	<decl_stmt pos:start="92:9" pos:end="92:48"><decl pos:start="92:9" pos:end="92:47"><type pos:start="92:9" pos:end="92:31"><specifier pos:start="92:9" pos:end="92:15">private</specifier> <name pos:start="92:17" pos:end="92:31">CommandExecutor</name></type> <name pos:start="92:33" pos:end="92:47">currentExecutor</name></decl>;</decl_stmt>

	<decl_stmt pos:start="94:9" pos:end="94:54"><decl pos:start="94:9" pos:end="94:53"><type pos:start="94:9" pos:end="94:43"><specifier pos:start="94:9" pos:end="94:15">private</specifier> <specifier pos:start="94:17" pos:end="94:21">final</specifier> <name pos:start="94:23" pos:end="94:43">ManagedDroneMessenger</name></type> <name pos:start="94:45" pos:end="94:53">messenger</name></decl>;</decl_stmt>
	<comment type="line" pos:start="95:9" pos:end="95:52">// TODO figure out what this value should be</comment>
	<decl_stmt pos:start="96:9" pos:end="96:55"><decl pos:start="96:9" pos:end="96:54"><type pos:start="96:9" pos:end="96:32"><specifier pos:start="96:9" pos:end="96:15">private</specifier> <specifier pos:start="96:17" pos:end="96:22">static</specifier> <specifier pos:start="96:24" pos:end="96:28">final</specifier> <name pos:start="96:30" pos:end="96:32">int</name></type> <name pos:start="96:34" pos:end="96:49">MAILBOX_CAPACITY</name> <init pos:start="96:51" pos:end="96:54">= <expr pos:start="96:53" pos:end="96:54"><literal type="number" pos:start="96:53" pos:end="96:54">50</literal></expr></init></decl>;</decl_stmt>
	<decl_stmt pos:start="97:9" pos:end="97:57"><decl pos:start="97:9" pos:end="97:56"><type pos:start="97:9" pos:end="97:36"><specifier pos:start="97:9" pos:end="97:15">private</specifier> <specifier pos:start="97:17" pos:end="97:22">static</specifier> <specifier pos:start="97:24" pos:end="97:28">final</specifier> <name pos:start="97:30" pos:end="97:36">boolean</name></type> <name pos:start="97:38" pos:end="97:49">FIFO_MAILBOX</name> <init pos:start="97:51" pos:end="97:56">= <expr pos:start="97:53" pos:end="97:56"><literal type="boolean" pos:start="97:53" pos:end="97:56">true</literal></expr></init></decl>;</decl_stmt>
	<decl_stmt pos:start="98:9" pos:end="99:38"><decl pos:start="98:9" pos:end="99:37"><type pos:start="98:9" pos:end="98:57"><specifier pos:start="98:9" pos:end="98:15">private</specifier> <specifier pos:start="98:17" pos:end="98:21">final</specifier> <name pos:start="98:23" pos:end="98:57"><name pos:start="98:23" pos:end="98:40">ArrayBlockingQueue</name><argument_list type="generic" pos:start="98:41" pos:end="98:57">&lt;<argument pos:start="98:42" pos:end="98:56"><name pos:start="98:42" pos:end="98:56">AbstractMessage</name></argument>&gt;</argument_list></name></type> <name pos:start="98:59" pos:end="98:65">mailbox</name> <init pos:start="98:67" pos:end="99:37">= <expr pos:start="98:69" pos:end="99:37"><operator pos:start="98:69" pos:end="98:71">new</operator> <call pos:start="98:73" pos:end="99:37"><name pos:start="98:73" pos:end="98:92"><name pos:start="98:73" pos:end="98:90">ArrayBlockingQueue</name><argument_list type="generic" pos:start="98:91" pos:end="98:92">&lt;&gt;</argument_list></name><argument_list pos:start="98:93" pos:end="99:37">(<argument pos:start="98:94" pos:end="98:109"><expr pos:start="98:94" pos:end="98:109"><name pos:start="98:94" pos:end="98:109">MAILBOX_CAPACITY</name></expr></argument>,
			<argument pos:start="99:25" pos:end="99:36"><expr pos:start="99:25" pos:end="99:36"><name pos:start="99:25" pos:end="99:36">FIFO_MAILBOX</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<decl_stmt pos:start="100:9" pos:end="100:61"><decl pos:start="100:9" pos:end="100:60"><type pos:start="100:9" pos:end="100:44"><specifier pos:start="100:9" pos:end="100:15">private</specifier> <specifier pos:start="100:17" pos:end="100:21">final</specifier> <name pos:start="100:23" pos:end="100:44">CommandExecutorFactory</name></type> <name pos:start="100:46" pos:end="100:60">executorFactory</name></decl>;</decl_stmt>
	<decl_stmt pos:start="101:9" pos:end="101:71"><decl pos:start="101:9" pos:end="101:70"><type pos:start="101:9" pos:end="101:36"><specifier pos:start="101:9" pos:end="101:15">private</specifier> <specifier pos:start="101:17" pos:end="101:21">final</specifier> <name pos:start="101:23" pos:end="101:36">CountDownLatch</name></type> <name pos:start="101:38" pos:end="101:46">startGate</name> <init pos:start="101:48" pos:end="101:70">= <expr pos:start="101:50" pos:end="101:70"><operator pos:start="101:50" pos:end="101:52">new</operator> <call pos:start="101:54" pos:end="101:70"><name pos:start="101:54" pos:end="101:67">CountDownLatch</name><argument_list pos:start="101:68" pos:end="101:70">(<argument pos:start="101:69" pos:end="101:69"><expr pos:start="101:69" pos:end="101:69"><literal type="number" pos:start="101:69" pos:end="101:69">1</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<comment type="line" pos:start="102:9" pos:end="102:20">// endregion</comment>

	<comment type="block" format="javadoc" pos:start="104:9" pos:end="108:11">/**
	 * Constructs drone
	 *
	 * @param drone
	 */</comment>
	<constructor pos:start="109:9" pos:end="120:9"><specifier pos:start="109:9" pos:end="109:14">public</specifier> <name pos:start="109:16" pos:end="109:27">ManagedDrone</name><parameter_list pos:start="109:28" pos:end="109:41">(<parameter pos:start="109:29" pos:end="109:40"><decl pos:start="109:29" pos:end="109:40"><type pos:start="109:29" pos:end="109:34"><name pos:start="109:29" pos:end="109:34">IDrone</name></type> <name pos:start="109:36" pos:end="109:40">drone</name></decl></parameter>)</parameter_list> <block pos:start="109:43" pos:end="120:9">{<block_content pos:start="110:17" pos:end="119:78">
		<expr_stmt pos:start="110:17" pos:end="110:42"><expr pos:start="110:17" pos:end="110:41"><call pos:start="110:17" pos:end="110:41"><name pos:start="110:17" pos:end="110:34"><name pos:start="110:17" pos:end="110:24">NullUtil</name><operator pos:start="110:25" pos:end="110:25">.</operator><name pos:start="110:26" pos:end="110:34">checkNull</name></name><argument_list pos:start="110:35" pos:end="110:41">(<argument pos:start="110:36" pos:end="110:40"><expr pos:start="110:36" pos:end="110:40"><name pos:start="110:36" pos:end="110:40">drone</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt pos:start="111:17" pos:end="111:35"><expr pos:start="111:17" pos:end="111:34"><name pos:start="111:17" pos:end="111:26"><name pos:start="111:17" pos:end="111:20">this</name><operator pos:start="111:21" pos:end="111:21">.</operator><name pos:start="111:22" pos:end="111:26">drone</name></name> <operator pos:start="111:28" pos:end="111:28">=</operator> <name pos:start="111:30" pos:end="111:34">drone</name></expr>;</expr_stmt><comment type="line" pos:start="111:36" pos:end="111:45">// specify</comment>
		<expr_stmt pos:start="112:17" pos:end="112:63"><expr pos:start="112:17" pos:end="112:62"><name pos:start="112:17" pos:end="112:26">droneState</name> <operator pos:start="112:28" pos:end="112:28">=</operator> <operator pos:start="112:30" pos:end="112:32">new</operator> <call pos:start="112:34" pos:end="112:62"><name pos:start="112:34" pos:end="112:56">DroneFlightStateManager</name><argument_list pos:start="112:57" pos:end="112:62">(<argument pos:start="112:58" pos:end="112:61"><expr pos:start="112:58" pos:end="112:61"><name pos:start="112:58" pos:end="112:61">this</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt pos:start="113:17" pos:end="113:65"><expr pos:start="113:17" pos:end="113:64"><name pos:start="113:17" pos:end="113:32">droneSafetyState</name> <operator pos:start="113:34" pos:end="113:34">=</operator> <operator pos:start="113:36" pos:end="113:38">new</operator> <call pos:start="113:40" pos:end="113:64"><name pos:start="113:40" pos:end="113:62">DroneSafetyStateManager</name><argument_list pos:start="113:63" pos:end="113:64">()</argument_list></call></expr>;</expr_stmt>
		<expr_stmt pos:start="114:17" pos:end="114:73"><expr pos:start="114:17" pos:end="114:72"><call pos:start="114:17" pos:end="114:38"><name pos:start="114:17" pos:end="114:36"><name pos:start="114:17" pos:end="114:21">drone</name><operator pos:start="114:22" pos:end="114:22">.</operator><name pos:start="114:23" pos:end="114:36">getDroneStatus</name></name><argument_list pos:start="114:37" pos:end="114:38">()</argument_list></call><operator pos:start="114:39" pos:end="114:39">.</operator><call pos:start="114:40" pos:end="114:72"><name pos:start="114:40" pos:end="114:48">setStatus</name><argument_list pos:start="114:49" pos:end="114:72">(<argument pos:start="114:50" pos:end="114:71"><expr pos:start="114:50" pos:end="114:71"><call pos:start="114:50" pos:end="114:71"><name pos:start="114:50" pos:end="114:69"><name pos:start="114:50" pos:end="114:59">droneState</name><operator pos:start="114:60" pos:end="114:60">.</operator><name pos:start="114:61" pos:end="114:69">getStatus</name></name><argument_list pos:start="114:70" pos:end="114:71">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt pos:start="115:17" pos:end="115:84"><expr pos:start="115:17" pos:end="115:83"><name pos:start="115:17" pos:end="115:35"><name pos:start="115:17" pos:end="115:20">this</name><operator pos:start="115:21" pos:end="115:21">.</operator><name pos:start="115:22" pos:end="115:35">flightDirector</name></name> <operator pos:start="115:37" pos:end="115:37">=</operator> <call pos:start="115:39" pos:end="115:83"><name pos:start="115:39" pos:end="115:77"><name pos:start="115:39" pos:end="115:59">FlightDirectorFactory</name><operator pos:start="115:60" pos:end="115:60">.</operator><name pos:start="115:61" pos:end="115:77">getFlightDirector</name></name><argument_list pos:start="115:78" pos:end="115:83">(<argument pos:start="115:79" pos:end="115:82"><expr pos:start="115:79" pos:end="115:82"><name pos:start="115:79" pos:end="115:82">this</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:start="115:86" pos:end="115:93">// Don't</comment>
		<expr_stmt pos:start="116:17" pos:end="116:77"><expr pos:start="116:17" pos:end="116:76"><call pos:start="116:17" pos:end="116:76"><name pos:start="116:17" pos:end="116:49"><name pos:start="116:17" pos:end="116:26">droneState</name><operator pos:start="116:27" pos:end="116:27">.</operator><name pos:start="116:28" pos:end="116:49">addStateChangeListener</name></name><argument_list pos:start="116:50" pos:end="116:76">(<argument pos:start="116:51" pos:end="116:75"><expr pos:start="116:51" pos:end="116:75"><lambda pos:start="116:51" pos:end="116:75"><parameter_list pos:start="116:51" pos:end="116:52">()</parameter_list> -&gt;<block type="pseudo" pos:start="116:57" pos:end="116:75"><block_content pos:start="116:57" pos:end="116:75"> <expr pos:start="116:57" pos:end="116:75"><call pos:start="116:57" pos:end="116:75"><name pos:start="116:57" pos:end="116:73">notifyStateChange</name><argument_list pos:start="116:74" pos:end="116:75">()</argument_list></call></expr></block_content></block></lambda></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt pos:start="117:17" pos:end="117:47"><expr pos:start="117:17" pos:end="117:46"><name pos:start="117:17" pos:end="117:26"><name pos:start="117:17" pos:end="117:20">this</name><operator pos:start="117:21" pos:end="117:21">.</operator><name pos:start="117:22" pos:end="117:26">goals</name></name> <operator pos:start="117:28" pos:end="117:28">=</operator> <operator pos:start="117:30" pos:end="117:32">new</operator> <call pos:start="117:34" pos:end="117:46"><name pos:start="117:34" pos:end="117:44"><name pos:start="117:34" pos:end="117:42">ArrayList</name><argument_list type="generic" pos:start="117:43" pos:end="117:44">&lt;&gt;</argument_list></name><argument_list pos:start="117:45" pos:end="117:46">()</argument_list></call></expr>;</expr_stmt>
		<expr_stmt pos:start="118:17" pos:end="118:68"><expr pos:start="118:17" pos:end="118:67"><name pos:start="118:17" pos:end="118:30"><name pos:start="118:17" pos:end="118:20">this</name><operator pos:start="118:21" pos:end="118:21">.</operator><name pos:start="118:22" pos:end="118:30">messenger</name></name> <operator pos:start="118:32" pos:end="118:32">=</operator> <operator pos:start="118:34" pos:end="118:36">new</operator> <call pos:start="118:38" pos:end="118:67"><name pos:start="118:38" pos:end="118:58">ManagedDroneMessenger</name><argument_list pos:start="118:59" pos:end="118:67">(<argument pos:start="118:60" pos:end="118:66"><expr pos:start="118:60" pos:end="118:66"><name pos:start="118:60" pos:end="118:66">mailbox</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt pos:start="119:17" pos:end="119:78"><expr pos:start="119:17" pos:end="119:77"><name pos:start="119:17" pos:end="119:36"><name pos:start="119:17" pos:end="119:20">this</name><operator pos:start="119:21" pos:end="119:21">.</operator><name pos:start="119:22" pos:end="119:36">executorFactory</name></name> <operator pos:start="119:38" pos:end="119:38">=</operator> <operator pos:start="119:40" pos:end="119:42">new</operator> <call pos:start="119:44" pos:end="119:77"><name pos:start="119:44" pos:end="119:65">CommandExecutorFactory</name><argument_list pos:start="119:66" pos:end="119:77">(<argument pos:start="119:67" pos:end="119:76"><expr pos:start="119:67" pos:end="119:76"><name pos:start="119:67" pos:end="119:76"><name pos:start="119:67" pos:end="119:70">this</name><operator pos:start="119:71" pos:end="119:71">.</operator><name pos:start="119:72" pos:end="119:76">drone</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	</block_content>}</block></constructor>

	<class pos:start="122:9" pos:end="142:9"><specifier pos:start="122:9" pos:end="122:15">private</specifier> class <name pos:start="122:23" pos:end="122:35">HaltTimerTask</name> <super_list pos:start="122:37" pos:end="122:53"><extends pos:start="122:37" pos:end="122:53">extends <super pos:start="122:45" pos:end="122:53"><name pos:start="122:45" pos:end="122:53">TimerTask</name></super></extends></super_list> <block pos:start="122:55" pos:end="142:9">{

		<function pos:start="124:17" pos:end="140:17"><annotation pos:start="124:17" pos:end="124:25">@<name pos:start="124:18" pos:end="124:25">Override</name></annotation>
		<type pos:start="125:17" pos:end="125:27"><specifier pos:start="125:17" pos:end="125:22">public</specifier> <name pos:start="125:24" pos:end="125:27">void</name></type> <name pos:start="125:29" pos:end="125:31">run</name><parameter_list pos:start="125:32" pos:end="125:33">()</parameter_list> <block pos:start="125:35" pos:end="140:17">{<block_content pos:start="126:25" pos:end="139:25">
			<synchronized pos:start="126:25" pos:end="139:25">synchronized <init pos:start="126:38" pos:end="126:55">(<expr pos:start="126:39" pos:end="126:54"><name pos:start="126:39" pos:end="126:54">droneSafetyState</name></expr>)</init> <block pos:start="126:57" pos:end="139:25">{<block_content pos:start="127:33" pos:end="138:33">
				<if_stmt pos:start="127:33" pos:end="130:33"><if pos:start="127:33" pos:end="130:33">if <condition pos:start="127:36" pos:end="127:75">(<expr pos:start="127:37" pos:end="127:74"><operator pos:start="127:37" pos:end="127:37">!</operator><call pos:start="127:38" pos:end="127:74"><name pos:start="127:38" pos:end="127:72"><name pos:start="127:38" pos:end="127:53">droneSafetyState</name><operator pos:start="127:54" pos:end="127:54">.</operator><name pos:start="127:55" pos:end="127:72">isSafetyModeHalted</name></name><argument_list pos:start="127:73" pos:end="127:74">()</argument_list></call></expr>)</condition> <block pos:start="127:77" pos:end="130:33">{<block_content pos:start="128:41" pos:end="129:47">
					<expr_stmt pos:start="128:41" pos:end="128:64"><expr pos:start="128:41" pos:end="128:63"><name pos:start="128:41" pos:end="128:56">currentHaltTimer</name> <operator pos:start="128:58" pos:end="128:58">=</operator> <literal type="null" pos:start="128:60" pos:end="128:63">null</literal></expr>;</expr_stmt>
					<return pos:start="129:41" pos:end="129:47">return;</return>
				</block_content>}</block></if></if_stmt>

				<try pos:start="132:33" pos:end="138:33">try <block pos:start="132:37" pos:end="136:33">{<block_content pos:start="133:41" pos:end="135:64">
					<expr_stmt pos:start="133:41" pos:end="133:81"><expr pos:start="133:41" pos:end="133:80"><call pos:start="133:41" pos:end="133:80"><name pos:start="133:41" pos:end="133:78"><name pos:start="133:41" pos:end="133:56">droneSafetyState</name><operator pos:start="133:57" pos:end="133:57">.</operator><name pos:start="133:58" pos:end="133:78">setSafetyModeToNormal</name></name><argument_list pos:start="133:79" pos:end="133:80">()</argument_list></call></expr>;</expr_stmt>
					<expr_stmt pos:start="134:41" pos:end="134:69"><expr pos:start="134:41" pos:end="134:68"><call pos:start="134:41" pos:end="134:68"><name pos:start="134:41" pos:end="134:66"><name pos:start="134:41" pos:end="134:50">droneState</name><operator pos:start="134:51" pos:end="134:51">.</operator><name pos:start="134:52" pos:end="134:66">setModeToFlying</name></name><argument_list pos:start="134:67" pos:end="134:68">()</argument_list></call></expr>;</expr_stmt>
					<expr_stmt pos:start="135:41" pos:end="135:64"><expr pos:start="135:41" pos:end="135:63"><name pos:start="135:41" pos:end="135:56">currentHaltTimer</name> <operator pos:start="135:58" pos:end="135:58">=</operator> <literal type="null" pos:start="135:60" pos:end="135:63">null</literal></expr>;</expr_stmt>
				</block_content>}</block> <catch pos:start="136:35" pos:end="138:33">catch <parameter_list pos:start="136:41" pos:end="136:63">(<parameter pos:start="136:42" pos:end="136:62"><decl pos:start="136:42" pos:end="136:62"><type pos:start="136:42" pos:end="136:62"><name pos:start="136:42" pos:end="136:60">FlightZoneException</name></type> <name pos:start="136:62" pos:end="136:62">e</name></decl></parameter>)</parameter_list> <block pos:start="136:65" pos:end="138:33">{<block_content pos:start="137:41" pos:end="137:56">
					<expr_stmt pos:start="137:41" pos:end="137:56"><expr pos:start="137:41" pos:end="137:55"><call pos:start="137:41" pos:end="137:55"><name pos:start="137:41" pos:end="137:52"><name pos:start="137:41" pos:end="137:46">LOGGER</name><operator pos:start="137:47" pos:end="137:47">.</operator><name pos:start="137:48" pos:end="137:52">error</name></name><argument_list pos:start="137:53" pos:end="137:55">(<argument pos:start="137:54" pos:end="137:54"><expr pos:start="137:54" pos:end="137:54"><name pos:start="137:54" pos:end="137:54">e</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				</block_content>}</block></catch></try>
			</block_content>}</block></synchronized>
		</block_content>}</block></function>

	}</block></class>

	<comment type="line" pos:start="144:9" pos:end="144:32">// region public methods</comment>
	<comment type="block" format="javadoc" pos:start="145:9" pos:end="151:11">/**
	 * Get the messenger associated with this drone. Client code needing to access
	 * this drone's functionality must do so through the messenger.
	 * 
	 * @return The messenger that can command this managed drone to carry out
	 *         operations.
	 */</comment>
	<function pos:start="152:9" pos:end="154:9"><type pos:start="152:9" pos:end="152:36"><specifier pos:start="152:9" pos:end="152:14">public</specifier> <name pos:start="152:16" pos:end="152:36">ManagedDroneMessenger</name></type> <name pos:start="152:38" pos:end="152:49">getMessenger</name><parameter_list pos:start="152:50" pos:end="152:51">()</parameter_list> <block pos:start="152:53" pos:end="154:9">{<block_content pos:start="153:17" pos:end="153:33">
		<return pos:start="153:17" pos:end="153:33">return <expr pos:start="153:24" pos:end="153:32"><name pos:start="153:24" pos:end="153:32">messenger</name></expr>;</return>
	</block_content>}</block></function>

	<comment type="block" format="javadoc" pos:start="156:9" pos:end="158:11">/**
	 * Blocks until the ManagedDrone run method has been called.
	 */</comment>
	<function pos:start="159:9" pos:end="165:9"><type pos:start="159:9" pos:end="159:19"><specifier pos:start="159:9" pos:end="159:14">public</specifier> <name pos:start="159:16" pos:end="159:19">void</name></type> <name pos:start="159:21" pos:end="159:30">awaitStart</name><parameter_list pos:start="159:31" pos:end="159:32">()</parameter_list> <block pos:start="159:34" pos:end="165:9">{<block_content pos:start="160:17" pos:end="164:17">
		<try pos:start="160:17" pos:end="164:17">try <block pos:start="160:21" pos:end="162:17">{<block_content pos:start="161:25" pos:end="161:47">
			<expr_stmt pos:start="161:25" pos:end="161:47"><expr pos:start="161:25" pos:end="161:46"><call pos:start="161:25" pos:end="161:46"><name pos:start="161:25" pos:end="161:44"><name pos:start="161:25" pos:end="161:28">this</name><operator pos:start="161:29" pos:end="161:29">.</operator><name pos:start="161:30" pos:end="161:38">startGate</name><operator pos:start="161:39" pos:end="161:39">.</operator><name pos:start="161:40" pos:end="161:44">await</name></name><argument_list pos:start="161:45" pos:end="161:46">()</argument_list></call></expr>;</expr_stmt>
		</block_content>}</block> <catch pos:start="162:19" pos:end="164:17">catch <parameter_list pos:start="162:25" pos:end="162:48">(<parameter pos:start="162:26" pos:end="162:47"><decl pos:start="162:26" pos:end="162:47"><type pos:start="162:26" pos:end="162:47"><name pos:start="162:26" pos:end="162:45">InterruptedException</name></type> <name pos:start="162:47" pos:end="162:47">e</name></decl></parameter>)</parameter_list> <block pos:start="162:50" pos:end="164:17">{<block_content pos:start="163:25" pos:end="163:54">
			<throw pos:start="163:25" pos:end="163:54">throw <expr pos:start="163:31" pos:end="163:53"><operator pos:start="163:31" pos:end="163:33">new</operator> <call pos:start="163:35" pos:end="163:53"><name pos:start="163:35" pos:end="163:50">RuntimeException</name><argument_list pos:start="163:51" pos:end="163:53">(<argument pos:start="163:52" pos:end="163:52"><expr pos:start="163:52" pos:end="163:52"><name pos:start="163:52" pos:end="163:52">e</name></expr></argument>)</argument_list></call></expr>;</throw>
		</block_content>}</block></catch></try>
	</block_content>}</block></function>

	<function pos:start="167:9" pos:end="178:9"><type pos:start="167:9" pos:end="167:19"><specifier pos:start="167:9" pos:end="167:14">public</specifier> <name pos:start="167:16" pos:end="167:19">void</name></type> <name pos:start="167:21" pos:end="167:32">returnToHome</name><parameter_list pos:start="167:33" pos:end="167:34">()</parameter_list> <block pos:start="167:36" pos:end="178:9">{<block_content pos:start="168:17" pos:end="176:17">
		<synchronized pos:start="168:17" pos:end="176:17">synchronized <init pos:start="168:30" pos:end="168:47">(<expr pos:start="168:31" pos:end="168:46"><name pos:start="168:31" pos:end="168:46">droneSafetyState</name></expr>)</init> <block pos:start="168:49" pos:end="176:17">{<block_content pos:start="169:25" pos:end="174:25">
			<expr_stmt pos:start="169:25" pos:end="169:75"><expr pos:start="169:25" pos:end="169:74"><call pos:start="169:25" pos:end="169:50"><name pos:start="169:25" pos:end="169:48">getFlightSafetyModeState</name><argument_list pos:start="169:49" pos:end="169:50">()</argument_list></call><operator pos:start="169:51" pos:end="169:51">.</operator><call pos:start="169:52" pos:end="169:74"><name pos:start="169:52" pos:end="169:72">setSafetyModeToNormal</name><argument_list pos:start="169:73" pos:end="169:74">()</argument_list></call></expr>;</expr_stmt>

			<if_stmt pos:start="171:25" pos:end="174:25"><if pos:start="171:25" pos:end="174:25">if <condition pos:start="171:28" pos:end="171:53">(<expr pos:start="171:29" pos:end="171:52"><name pos:start="171:29" pos:end="171:44">currentHaltTimer</name> <operator pos:start="171:46" pos:end="171:47">!=</operator> <literal type="null" pos:start="171:49" pos:end="171:52">null</literal></expr>)</condition> <block pos:start="171:55" pos:end="174:25">{<block_content pos:start="172:33" pos:end="173:56">
				<expr_stmt pos:start="172:33" pos:end="172:58"><expr pos:start="172:33" pos:end="172:57"><call pos:start="172:33" pos:end="172:57"><name pos:start="172:33" pos:end="172:55"><name pos:start="172:33" pos:end="172:48">currentHaltTimer</name><operator pos:start="172:49" pos:end="172:49">.</operator><name pos:start="172:50" pos:end="172:55">cancel</name></name><argument_list pos:start="172:56" pos:end="172:57">()</argument_list></call></expr>;</expr_stmt>
				<expr_stmt pos:start="173:33" pos:end="173:56"><expr pos:start="173:33" pos:end="173:55"><name pos:start="173:33" pos:end="173:48">currentHaltTimer</name> <operator pos:start="173:50" pos:end="173:50">=</operator> <literal type="null" pos:start="173:52" pos:end="173:55">null</literal></expr>;</expr_stmt>
			</block_content>}</block></if></if_stmt>

		</block_content>}</block></synchronized>

	</block_content>}</block></function>

	<comment type="block" format="javadoc" pos:start="180:9" pos:end="183:11">/**
	 *
	 * @param targetAltitude Sets target altitude for takeoff
	 */</comment>
	<function pos:start="184:9" pos:end="186:9"><type pos:start="184:9" pos:end="184:19"><specifier pos:start="184:9" pos:end="184:14">public</specifier> <name pos:start="184:16" pos:end="184:19">void</name></type> <name pos:start="184:21" pos:end="184:37">setTargetAltitude</name><parameter_list pos:start="184:38" pos:end="184:60">(<parameter pos:start="184:39" pos:end="184:59"><decl pos:start="184:39" pos:end="184:59"><type pos:start="184:39" pos:end="184:44"><name pos:start="184:39" pos:end="184:44">double</name></type> <name pos:start="184:46" pos:end="184:59">targetAltitude</name></decl></parameter>)</parameter_list> <block pos:start="184:62" pos:end="186:9">{<block_content pos:start="185:17" pos:end="185:53">
		<expr_stmt pos:start="185:17" pos:end="185:53"><expr pos:start="185:17" pos:end="185:52"><name pos:start="185:17" pos:end="185:35"><name pos:start="185:17" pos:end="185:20">this</name><operator pos:start="185:21" pos:end="185:21">.</operator><name pos:start="185:22" pos:end="185:35">targetAltitude</name></name> <operator pos:start="185:37" pos:end="185:37">=</operator> <name pos:start="185:39" pos:end="185:52">targetAltitude</name></expr>;</expr_stmt>
	</block_content>}</block></function>

	<comment type="block" format="javadoc" pos:start="188:9" pos:end="192:11">/**
	 * Controls takeoff of drone
	 *
	 * @throws FlightZoneException
	 */</comment>
	<function pos:start="193:9" pos:end="200:9"><type pos:start="193:9" pos:end="193:19"><specifier pos:start="193:9" pos:end="193:14">public</specifier> <name pos:start="193:16" pos:end="193:19">void</name></type> <name pos:start="193:21" pos:end="193:27">takeOff</name><parameter_list pos:start="193:28" pos:end="193:29">()</parameter_list> <throws pos:start="193:31" pos:end="193:56">throws <argument pos:start="193:38" pos:end="193:56"><expr pos:start="193:38" pos:end="193:56"><name pos:start="193:38" pos:end="193:56">FlightZoneException</name></expr></argument></throws> <block pos:start="193:58" pos:end="200:9">{<block_content pos:start="194:17" pos:end="198:46">
		<if_stmt pos:start="194:17" pos:end="196:17"><if pos:start="194:17" pos:end="196:17">if <condition pos:start="194:20" pos:end="194:40">(<expr pos:start="194:21" pos:end="194:39"><name pos:start="194:21" pos:end="194:34">targetAltitude</name> <operator pos:start="194:36" pos:end="194:37">==</operator> <literal type="number" pos:start="194:39" pos:end="194:39">0</literal></expr>)</condition> <block pos:start="194:42" pos:end="196:17">{<block_content pos:start="195:25" pos:end="195:78">
			<throw pos:start="195:25" pos:end="195:78">throw <expr pos:start="195:31" pos:end="195:77"><operator pos:start="195:31" pos:end="195:33">new</operator> <call pos:start="195:35" pos:end="195:77"><name pos:start="195:35" pos:end="195:53">FlightZoneException</name><argument_list pos:start="195:54" pos:end="195:77">(<argument pos:start="195:55" pos:end="195:76"><expr pos:start="195:55" pos:end="195:76"><literal type="string" pos:start="195:55" pos:end="195:76">"Target Altitude is 0"</literal></expr></argument>)</argument_list></call></expr>;</throw>
		</block_content>}</block></if></if_stmt>
		<expr_stmt pos:start="197:17" pos:end="197:48"><expr pos:start="197:17" pos:end="197:47"><call pos:start="197:17" pos:end="197:47"><name pos:start="197:17" pos:end="197:45"><name pos:start="197:17" pos:end="197:26">droneState</name><operator pos:start="197:27" pos:end="197:27">.</operator><name pos:start="197:28" pos:end="197:45">setModeToTakingOff</name></name><argument_list pos:start="197:46" pos:end="197:47">()</argument_list></call></expr>;</expr_stmt>
		<expr_stmt pos:start="198:17" pos:end="198:46"><expr pos:start="198:17" pos:end="198:45"><call pos:start="198:17" pos:end="198:45"><name pos:start="198:17" pos:end="198:29"><name pos:start="198:17" pos:end="198:21">drone</name><operator pos:start="198:22" pos:end="198:22">.</operator><name pos:start="198:23" pos:end="198:29">takeOff</name></name><argument_list pos:start="198:30" pos:end="198:45">(<argument pos:start="198:31" pos:end="198:44"><expr pos:start="198:31" pos:end="198:44"><name pos:start="198:31" pos:end="198:44">targetAltitude</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	</block_content>}</block></function>

	<comment type="block" format="javadoc" pos:start="202:9" pos:end="207:11">/**
	 * Delegates flyto behavior to virtual or physical drone
	 *
	 * @param targetCoordinates
	 * @param speed
	 */</comment>
	<function pos:start="208:9" pos:end="210:9"><type pos:start="208:9" pos:end="208:19"><specifier pos:start="208:9" pos:end="208:14">public</specifier> <name pos:start="208:16" pos:end="208:19">void</name></type> <name pos:start="208:21" pos:end="208:25">flyTo</name><parameter_list pos:start="208:26" pos:end="208:72">(<parameter pos:start="208:27" pos:end="208:57"><decl pos:start="208:27" pos:end="208:57"><type pos:start="208:27" pos:end="208:57"><name pos:start="208:27" pos:end="208:39">LlaCoordinate</name></type> <name pos:start="208:41" pos:end="208:57">targetCoordinates</name></decl></parameter>, <parameter pos:start="208:60" pos:end="208:71"><decl pos:start="208:60" pos:end="208:71"><type pos:start="208:60" pos:end="208:71"><name pos:start="208:60" pos:end="208:65">Double</name></type> <name pos:start="208:67" pos:end="208:71">speed</name></decl></parameter>)</parameter_list> <block pos:start="208:74" pos:end="210:9">{<block_content pos:start="209:17" pos:end="209:54">
		<expr_stmt pos:start="209:17" pos:end="209:54"><expr pos:start="209:17" pos:end="209:53"><call pos:start="209:17" pos:end="209:53"><name pos:start="209:17" pos:end="209:27"><name pos:start="209:17" pos:end="209:21">drone</name><operator pos:start="209:22" pos:end="209:22">.</operator><name pos:start="209:23" pos:end="209:27">flyTo</name></name><argument_list pos:start="209:28" pos:end="209:53">(<argument pos:start="209:29" pos:end="209:45"><expr pos:start="209:29" pos:end="209:45"><name pos:start="209:29" pos:end="209:45">targetCoordinates</name></expr></argument>, <argument pos:start="209:48" pos:end="209:52"><expr pos:start="209:48" pos:end="209:52"><name pos:start="209:48" pos:end="209:52">speed</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	</block_content>}</block></function>

	<comment type="block" format="javadoc" pos:start="212:9" pos:end="216:11">/**
	 * Gets current coordinates from virtual or physical drone
	 *
	 * @return current coordinates
	 */</comment>
	<function pos:start="217:9" pos:end="219:9"><type pos:start="217:9" pos:end="217:28"><specifier pos:start="217:9" pos:end="217:14">public</specifier> <name pos:start="217:16" pos:end="217:28">LlaCoordinate</name></type> <name pos:start="217:30" pos:end="217:43">getCoordinates</name><parameter_list pos:start="217:44" pos:end="217:45">()</parameter_list> <block pos:start="217:47" pos:end="219:9">{<block_content pos:start="218:17" pos:end="218:46">
		<return pos:start="218:17" pos:end="218:46">return <expr pos:start="218:24" pos:end="218:45"><call pos:start="218:24" pos:end="218:45"><name pos:start="218:24" pos:end="218:43"><name pos:start="218:24" pos:end="218:28">drone</name><operator pos:start="218:29" pos:end="218:29">.</operator><name pos:start="218:30" pos:end="218:43">getCoordinates</name></name><argument_list pos:start="218:44" pos:end="218:45">()</argument_list></call></expr>;</return>
	</block_content>}</block></function>

	<function pos:start="221:9" pos:end="225:9"><type pos:start="221:9" pos:end="221:19"><specifier pos:start="221:9" pos:end="221:14">public</specifier> <name pos:start="221:16" pos:end="221:19">void</name></type> <name pos:start="221:21" pos:end="221:25">start</name><parameter_list pos:start="221:26" pos:end="221:27">()</parameter_list> <block pos:start="221:29" pos:end="225:9">{<block_content pos:start="223:17" pos:end="224:46">
		<comment type="line" pos:start="222:17" pos:end="222:34">// thread.start();</comment>
		<expr_stmt pos:start="223:17" pos:end="223:77"><expr pos:start="223:17" pos:end="223:76"><call pos:start="223:17" pos:end="223:76"><name pos:start="223:17" pos:end="223:27"><name pos:start="223:17" pos:end="223:22">LOGGER</name><operator pos:start="223:23" pos:end="223:23">.</operator><name pos:start="223:24" pos:end="223:27">info</name></name><argument_list pos:start="223:28" pos:end="223:76">(<argument pos:start="223:29" pos:end="223:75"><expr pos:start="223:29" pos:end="223:75"><literal type="string" pos:start="223:29" pos:end="223:46">"Starting Drone '"</literal> <operator pos:start="223:48" pos:end="223:48">+</operator> <call pos:start="223:50" pos:end="223:69"><name pos:start="223:50" pos:end="223:67"><name pos:start="223:50" pos:end="223:54">drone</name><operator pos:start="223:55" pos:end="223:55">.</operator><name pos:start="223:56" pos:end="223:67">getDroneName</name></name><argument_list pos:start="223:68" pos:end="223:69">()</argument_list></call> <operator pos:start="223:71" pos:end="223:71">+</operator> <literal type="string" pos:start="223:73" pos:end="223:75">"'"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt pos:start="224:17" pos:end="224:46"><expr pos:start="224:17" pos:end="224:45"><call pos:start="224:17" pos:end="224:45"><name pos:start="224:17" pos:end="224:39"><name pos:start="224:17" pos:end="224:32">EXECUTOR_SERVICE</name><operator pos:start="224:33" pos:end="224:33">.</operator><name pos:start="224:34" pos:end="224:39">submit</name></name><argument_list pos:start="224:40" pos:end="224:45">(<argument pos:start="224:41" pos:end="224:44"><expr pos:start="224:41" pos:end="224:44"><name pos:start="224:41" pos:end="224:44">this</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	</block_content>}</block></function>

	<function pos:start="227:9" pos:end="234:9"><type pos:start="227:9" pos:end="227:22"><specifier pos:start="227:9" pos:end="227:14">public</specifier> <name pos:start="227:16" pos:end="227:22">boolean</name></type> <name pos:start="227:24" pos:end="227:32">isStarted</name><parameter_list pos:start="227:33" pos:end="227:34">()</parameter_list> <block pos:start="227:36" pos:end="234:9">{<block_content pos:start="228:9" pos:end="233:17">
    	<try pos:start="228:9" pos:end="233:17">try <block pos:start="228:13" pos:end="230:17">{<block_content pos:start="229:25" pos:end="229:77">
			<return pos:start="229:25" pos:end="229:77">return <expr pos:start="229:32" pos:end="229:76"><call pos:start="229:32" pos:end="229:76"><name pos:start="229:32" pos:end="229:51"><name pos:start="229:32" pos:end="229:35">this</name><operator pos:start="229:36" pos:end="229:36">.</operator><name pos:start="229:37" pos:end="229:45">startGate</name><operator pos:start="229:46" pos:end="229:46">.</operator><name pos:start="229:47" pos:end="229:51">await</name></name><argument_list pos:start="229:52" pos:end="229:76">(<argument pos:start="229:53" pos:end="229:53"><expr pos:start="229:53" pos:end="229:53"><literal type="number" pos:start="229:53" pos:end="229:53">0</literal></expr></argument>, <argument pos:start="229:56" pos:end="229:75"><expr pos:start="229:56" pos:end="229:75"><name pos:start="229:56" pos:end="229:75"><name pos:start="229:56" pos:end="229:63">TimeUnit</name><operator pos:start="229:64" pos:end="229:64">.</operator><name pos:start="229:65" pos:end="229:75">NANOSECONDS</name></name></expr></argument>)</argument_list></call></expr>;</return>
		</block_content>}</block> <catch pos:start="230:19" pos:end="233:17">catch <parameter_list pos:start="230:25" pos:end="230:48">(<parameter pos:start="230:26" pos:end="230:47"><decl pos:start="230:26" pos:end="230:47"><type pos:start="230:26" pos:end="230:47"><name pos:start="230:26" pos:end="230:45">InterruptedException</name></type> <name pos:start="230:47" pos:end="230:47">e</name></decl></parameter>)</parameter_list> <block pos:start="230:50" pos:end="233:17">{<block_content pos:start="231:25" pos:end="232:37">
			<expr_stmt pos:start="231:25" pos:end="231:40"><expr pos:start="231:25" pos:end="231:39"><call pos:start="231:25" pos:end="231:39"><name pos:start="231:25" pos:end="231:36"><name pos:start="231:25" pos:end="231:30">LOGGER</name><operator pos:start="231:31" pos:end="231:31">.</operator><name pos:start="231:32" pos:end="231:36">error</name></name><argument_list pos:start="231:37" pos:end="231:39">(<argument pos:start="231:38" pos:end="231:38"><expr pos:start="231:38" pos:end="231:38"><name pos:start="231:38" pos:end="231:38">e</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<return pos:start="232:25" pos:end="232:37">return <expr pos:start="232:32" pos:end="232:36"><literal type="boolean" pos:start="232:32" pos:end="232:36">false</literal></expr>;</return>
		</block_content>}</block></catch></try>
	</block_content>}</block></function>
		

	<function pos:start="237:9" pos:end="274:9"><annotation pos:start="237:9" pos:end="237:17">@<name pos:start="237:10" pos:end="237:17">Override</name></annotation>
	<type pos:start="238:9" pos:end="238:19"><specifier pos:start="238:9" pos:end="238:14">public</specifier> <name pos:start="238:16" pos:end="238:19">void</name></type> <name pos:start="238:21" pos:end="238:23">run</name><parameter_list pos:start="238:24" pos:end="238:25">()</parameter_list> <block pos:start="238:27" pos:end="274:9">{<block_content pos:start="239:17" pos:end="273:74">
		<try pos:start="239:17" pos:end="271:17">try <block pos:start="239:21" pos:end="269:17">{<block_content pos:start="240:25" pos:end="268:25">
			<expr_stmt pos:start="240:25" pos:end="240:51"><expr pos:start="240:25" pos:end="240:50"><call pos:start="240:25" pos:end="240:50"><name pos:start="240:25" pos:end="240:48"><name pos:start="240:25" pos:end="240:28">this</name><operator pos:start="240:29" pos:end="240:29">.</operator><name pos:start="240:30" pos:end="240:38">startGate</name><operator pos:start="240:39" pos:end="240:39">.</operator><name pos:start="240:40" pos:end="240:48">countDown</name></name><argument_list pos:start="240:49" pos:end="240:50">()</argument_list></call></expr>;</expr_stmt>
			<while pos:start="241:25" pos:end="268:25">while <condition pos:start="241:31" pos:end="241:85">(<expr pos:start="241:32" pos:end="241:84"><call pos:start="241:32" pos:end="241:41"><name pos:start="241:32" pos:end="241:39"><name pos:start="241:32" pos:end="241:35">cont</name><operator pos:start="241:36" pos:end="241:36">.</operator><name pos:start="241:37" pos:end="241:39">get</name></name><argument_list pos:start="241:40" pos:end="241:41">()</argument_list></call> <operator pos:start="241:43" pos:end="241:44">&amp;&amp;</operator> <operator pos:start="241:46" pos:end="241:46">!</operator><call pos:start="241:47" pos:end="241:68"><name pos:start="241:47" pos:end="241:66"><name pos:start="241:47" pos:end="241:52">Thread</name><operator pos:start="241:53" pos:end="241:53">.</operator><name pos:start="241:54" pos:end="241:66">currentThread</name></name><argument_list pos:start="241:67" pos:end="241:68">()</argument_list></call><operator pos:start="241:69" pos:end="241:69">.</operator><call pos:start="241:70" pos:end="241:84"><name pos:start="241:70" pos:end="241:82">isInterrupted</name><argument_list pos:start="241:83" pos:end="241:84">()</argument_list></call></expr>)</condition> <block pos:start="241:87" pos:end="268:25">{<block_content pos:start="242:33" pos:end="267:33">
				<expr_stmt pos:start="242:33" pos:end="242:50"><expr pos:start="242:33" pos:end="242:49"><call pos:start="242:33" pos:end="242:49"><name pos:start="242:33" pos:end="242:47"><name pos:start="242:33" pos:end="242:39">LIMITER</name><operator pos:start="242:40" pos:end="242:40">.</operator><name pos:start="242:41" pos:end="242:47">acquire</name></name><argument_list pos:start="242:48" pos:end="242:49">()</argument_list></call></expr>;</expr_stmt>
				
				<expr_stmt pos:start="244:33" pos:end="244:53"><expr pos:start="244:33" pos:end="244:52"><call pos:start="244:33" pos:end="244:52"><name pos:start="244:33" pos:end="244:50">processAllMessages</name><argument_list pos:start="244:51" pos:end="244:52">()</argument_list></call></expr>;</expr_stmt>

				<comment type="line" pos:start="246:33" pos:end="246:109">// Probably not necessary anymore... TODO: fix- do not try to assign point in</comment>
				<comment type="line" pos:start="247:33" pos:end="247:65">// every iteration of the loop...</comment>
				<if_stmt pos:start="248:33" pos:end="257:33"><if pos:start="248:33" pos:end="257:33">if <condition pos:start="248:36" pos:end="248:84">(<expr pos:start="248:37" pos:end="248:83"><name pos:start="248:37" pos:end="248:50">flightDirector</name> <operator pos:start="248:52" pos:end="248:53">!=</operator> <literal type="null" pos:start="248:55" pos:end="248:58">null</literal> <operator pos:start="248:60" pos:end="248:61">&amp;&amp;</operator> <call pos:start="248:63" pos:end="248:83"><name pos:start="248:63" pos:end="248:81"><name pos:start="248:63" pos:end="248:72">droneState</name><operator pos:start="248:73" pos:end="248:73">.</operator><name pos:start="248:74" pos:end="248:81">isFlying</name></name><argument_list pos:start="248:82" pos:end="248:83">()</argument_list></call></expr>)</condition> <block pos:start="248:86" pos:end="257:33">{<block_content pos:start="249:41" pos:end="256:62">
					<expr_stmt pos:start="249:41" pos:end="249:56"><expr pos:start="249:41" pos:end="249:55"><call pos:start="249:41" pos:end="249:55"><name pos:start="249:41" pos:end="249:53"><name pos:start="249:41" pos:end="249:44">this</name><operator pos:start="249:45" pos:end="249:45">.</operator><name pos:start="249:46" pos:end="249:53">flyDrone</name></name><argument_list pos:start="249:54" pos:end="249:55">()</argument_list></call></expr>;</expr_stmt>
					<comment type="block" pos:start="250:41" pos:end="255:43">/*
					 * LlaCoordinate targetCoordinates = flightDirector.flyToNextPoint();
					 * drone.flyTo(); if (!drone.move(0.1)) {
					 * LOGGER.missionInfo(drone.getDroneName() + " - Waypoint reached - " +
					 * targetCoordinates.toString()); flightDirector.clearCurrentWayPoint(); }
					 */</comment>
					<expr_stmt pos:start="256:41" pos:end="256:62"><expr pos:start="256:41" pos:end="256:61"><call pos:start="256:41" pos:end="256:61"><name pos:start="256:41" pos:end="256:59">checkForEndOfFlight</name><argument_list pos:start="256:60" pos:end="256:61">()</argument_list></call></expr>;</expr_stmt>
				</block_content>}</block></if></if_stmt>
				<if_stmt pos:start="258:33" pos:end="267:33"><if pos:start="258:33" pos:end="267:33">if <condition pos:start="258:36" pos:end="258:61">(<expr pos:start="258:37" pos:end="258:60"><call pos:start="258:37" pos:end="258:60"><name pos:start="258:37" pos:end="258:58"><name pos:start="258:37" pos:end="258:46">droneState</name><operator pos:start="258:47" pos:end="258:47">.</operator><name pos:start="258:48" pos:end="258:58">isTakingOff</name></name><argument_list pos:start="258:59" pos:end="258:60">()</argument_list></call></expr>)</condition> <block pos:start="258:63" pos:end="267:33">{<block_content pos:start="259:41" pos:end="266:41">
					<if_stmt pos:start="259:41" pos:end="266:41"><if pos:start="259:41" pos:end="266:41">if <condition pos:start="259:44" pos:end="259:137">(<expr pos:start="259:45" pos:end="259:136"><call pos:start="259:45" pos:end="259:90"><name pos:start="259:45" pos:end="259:52"><name pos:start="259:45" pos:end="259:48">Math</name><operator pos:start="259:49" pos:end="259:49">.</operator><name pos:start="259:50" pos:end="259:52">abs</name></name><argument_list pos:start="259:53" pos:end="259:90">(<argument pos:start="259:54" pos:end="259:89"><expr pos:start="259:54" pos:end="259:89"><call pos:start="259:54" pos:end="259:72"><name pos:start="259:54" pos:end="259:70"><name pos:start="259:54" pos:end="259:58">drone</name><operator pos:start="259:59" pos:end="259:59">.</operator><name pos:start="259:60" pos:end="259:70">getAltitude</name></name><argument_list pos:start="259:71" pos:end="259:72">()</argument_list></call> <operator pos:start="259:74" pos:end="259:74">-</operator> <name pos:start="259:76" pos:end="259:89">targetAltitude</name></expr></argument>)</argument_list></call> <operator pos:start="259:92" pos:end="259:92">&lt;</operator> <name pos:start="259:94" pos:end="259:136"><name pos:start="259:94" pos:end="259:111">DronologyConstants</name><operator pos:start="259:112" pos:end="259:112">.</operator><name pos:start="259:113" pos:end="259:136">THRESHOLD_TAKEOFF_HEIGHT</name></name></expr>)</condition> <block pos:start="259:139" pos:end="266:41">{<block_content pos:start="260:49" pos:end="265:49">
						<expr_stmt pos:start="260:49" pos:end="260:106"><expr pos:start="260:49" pos:end="260:105"><call pos:start="260:49" pos:end="260:105"><name pos:start="260:49" pos:end="260:59"><name pos:start="260:49" pos:end="260:54">LOGGER</name><operator pos:start="260:55" pos:end="260:55">.</operator><name pos:start="260:56" pos:end="260:59">info</name></name><argument_list pos:start="260:60" pos:end="260:105">(<argument pos:start="260:61" pos:end="260:104"><expr pos:start="260:61" pos:end="260:104"><literal type="string" pos:start="260:61" pos:end="260:104">"Target Altitude reached - ready for flying"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
						<try pos:start="261:49" pos:end="265:49">try <block pos:start="261:53" pos:end="263:49">{<block_content pos:start="262:57" pos:end="262:85">
							<expr_stmt pos:start="262:57" pos:end="262:85"><expr pos:start="262:57" pos:end="262:84"><call pos:start="262:57" pos:end="262:84"><name pos:start="262:57" pos:end="262:82"><name pos:start="262:57" pos:end="262:66">droneState</name><operator pos:start="262:67" pos:end="262:67">.</operator><name pos:start="262:68" pos:end="262:82">setModeToFlying</name></name><argument_list pos:start="262:83" pos:end="262:84">()</argument_list></call></expr>;</expr_stmt>
						</block_content>}</block> <catch pos:start="263:51" pos:end="265:49">catch <parameter_list pos:start="263:57" pos:end="263:79">(<parameter pos:start="263:58" pos:end="263:78"><decl pos:start="263:58" pos:end="263:78"><type pos:start="263:58" pos:end="263:78"><name pos:start="263:58" pos:end="263:76">FlightZoneException</name></type> <name pos:start="263:78" pos:end="263:78">e</name></decl></parameter>)</parameter_list> <block pos:start="263:81" pos:end="265:49">{<block_content pos:start="264:57" pos:end="264:72">
							<expr_stmt pos:start="264:57" pos:end="264:72"><expr pos:start="264:57" pos:end="264:71"><call pos:start="264:57" pos:end="264:71"><name pos:start="264:57" pos:end="264:68"><name pos:start="264:57" pos:end="264:62">LOGGER</name><operator pos:start="264:63" pos:end="264:63">.</operator><name pos:start="264:64" pos:end="264:68">error</name></name><argument_list pos:start="264:69" pos:end="264:71">(<argument pos:start="264:70" pos:end="264:70"><expr pos:start="264:70" pos:end="264:70"><name pos:start="264:70" pos:end="264:70">e</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
						</block_content>}</block></catch></try>
					</block_content>}</block></if></if_stmt>
				</block_content>}</block></if></if_stmt>
			</block_content>}</block></while>
		</block_content>}</block> <catch pos:start="269:19" pos:end="271:17">catch <parameter_list pos:start="269:25" pos:end="269:37">(<parameter pos:start="269:26" pos:end="269:36"><decl pos:start="269:26" pos:end="269:36"><type pos:start="269:26" pos:end="269:36"><name pos:start="269:26" pos:end="269:34">Throwable</name></type> <name pos:start="269:36" pos:end="269:36">e</name></decl></parameter>)</parameter_list> <block pos:start="269:39" pos:end="271:17">{<block_content pos:start="270:25" pos:end="270:40">
			<expr_stmt pos:start="270:25" pos:end="270:40"><expr pos:start="270:25" pos:end="270:39"><call pos:start="270:25" pos:end="270:39"><name pos:start="270:25" pos:end="270:36"><name pos:start="270:25" pos:end="270:30">LOGGER</name><operator pos:start="270:31" pos:end="270:31">.</operator><name pos:start="270:32" pos:end="270:36">error</name></name><argument_list pos:start="270:37" pos:end="270:39">(<argument pos:start="270:38" pos:end="270:38"><expr pos:start="270:38" pos:end="270:38"><name pos:start="270:38" pos:end="270:38">e</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		</block_content>}</block></catch></try>
		<expr_stmt pos:start="272:17" pos:end="272:84"><expr pos:start="272:17" pos:end="272:83"><call pos:start="272:17" pos:end="272:83"><name pos:start="272:17" pos:end="272:27"><name pos:start="272:17" pos:end="272:22">LOGGER</name><operator pos:start="272:23" pos:end="272:23">.</operator><name pos:start="272:24" pos:end="272:27">info</name></name><argument_list pos:start="272:28" pos:end="272:83">(<argument pos:start="272:29" pos:end="272:82"><expr pos:start="272:29" pos:end="272:82"><literal type="string" pos:start="272:29" pos:end="272:42">"UAV-Thread '"</literal> <operator pos:start="272:44" pos:end="272:44">+</operator> <call pos:start="272:46" pos:end="272:65"><name pos:start="272:46" pos:end="272:63"><name pos:start="272:46" pos:end="272:50">drone</name><operator pos:start="272:51" pos:end="272:51">.</operator><name pos:start="272:52" pos:end="272:63">getDroneName</name></name><argument_list pos:start="272:64" pos:end="272:65">()</argument_list></call> <operator pos:start="272:67" pos:end="272:67">+</operator> <literal type="string" pos:start="272:69" pos:end="272:82">"' terminated"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt pos:start="273:17" pos:end="273:74"><expr pos:start="273:17" pos:end="273:73"><call pos:start="273:17" pos:end="273:45"><name pos:start="273:17" pos:end="273:43"><name pos:start="273:17" pos:end="273:31">UAVProxyManager</name><operator pos:start="273:32" pos:end="273:32">.</operator><name pos:start="273:33" pos:end="273:43">getInstance</name></name><argument_list pos:start="273:44" pos:end="273:45">()</argument_list></call><operator pos:start="273:46" pos:end="273:46">.</operator><call pos:start="273:47" pos:end="273:73"><name pos:start="273:47" pos:end="273:57">removeDrone</name><argument_list pos:start="273:58" pos:end="273:73">(<argument pos:start="273:59" pos:end="273:72"><expr pos:start="273:59" pos:end="273:72"><call pos:start="273:59" pos:end="273:72"><name pos:start="273:59" pos:end="273:70">getDroneName</name><argument_list pos:start="273:71" pos:end="273:72">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	</block_content>}</block></function>
	<comment type="line" pos:start="275:9" pos:end="275:54">// needs refactoring to improve performance...</comment>
	<function pos:start="276:9" pos:end="291:9"><type pos:start="276:9" pos:end="276:22"><specifier pos:start="276:9" pos:end="276:14">public</specifier> <name pos:start="276:16" pos:end="276:22">boolean</name></type> <name pos:start="276:24" pos:end="276:43">permissionForTakeoff</name><parameter_list pos:start="276:44" pos:end="276:45">()</parameter_list> <block pos:start="276:47" pos:end="291:9">{<block_content pos:start="277:17" pos:end="290:28">
		<decl_stmt pos:start="277:17" pos:end="277:40"><decl pos:start="277:17" pos:end="277:39"><type pos:start="277:17" pos:end="277:22"><name pos:start="277:17" pos:end="277:22">double</name></type> <name pos:start="277:24" pos:end="277:35">dronDistance</name> <init pos:start="277:37" pos:end="277:39">= <expr pos:start="277:39" pos:end="277:39"><literal type="number" pos:start="277:39" pos:end="277:39">0</literal></expr></init></decl>;</decl_stmt>
		<decl_stmt pos:start="278:17" pos:end="278:104"><decl pos:start="278:17" pos:end="278:103"><type pos:start="278:17" pos:end="278:34"><name pos:start="278:17" pos:end="278:34"><name pos:start="278:17" pos:end="278:20">List</name><argument_list type="generic" pos:start="278:21" pos:end="278:34">&lt;<argument pos:start="278:22" pos:end="278:33"><name pos:start="278:22" pos:end="278:33">ManagedDrone</name></argument>&gt;</argument_list></name></type> <name pos:start="278:36" pos:end="278:47">flyingDrones</name> <init pos:start="278:49" pos:end="278:103">= <expr pos:start="278:51" pos:end="278:103"><call pos:start="278:51" pos:end="278:81"><name pos:start="278:51" pos:end="278:79"><name pos:start="278:51" pos:end="278:67">DroneFleetManager</name><operator pos:start="278:68" pos:end="278:68">.</operator><name pos:start="278:69" pos:end="278:79">getInstance</name></name><argument_list pos:start="278:80" pos:end="278:81">()</argument_list></call><operator pos:start="278:82" pos:end="278:82">.</operator><call pos:start="278:83" pos:end="278:103"><name pos:start="278:83" pos:end="278:101">getRegisteredDrones</name><argument_list pos:start="278:102" pos:end="278:103">()</argument_list></call></expr></init></decl>;</decl_stmt>
		<for pos:start="279:17" pos:end="289:17">for <control pos:start="279:21" pos:end="279:56">(<init pos:start="279:22" pos:end="279:55"><decl pos:start="279:22" pos:end="279:55"><type pos:start="279:22" pos:end="279:33"><name pos:start="279:22" pos:end="279:33">ManagedDrone</name></type> <name pos:start="279:35" pos:end="279:40">drone2</name> <range pos:start="279:42" pos:end="279:55">: <expr pos:start="279:44" pos:end="279:55"><name pos:start="279:44" pos:end="279:55">flyingDrones</name></expr></range></decl></init>)</control> <block pos:start="279:58" pos:end="289:17">{<block_content pos:start="280:25" pos:end="288:25">
			<if_stmt pos:start="280:25" pos:end="288:25"><if pos:start="280:25" pos:end="288:25">if <condition pos:start="280:28" pos:end="281:125">(<expr pos:start="280:29" pos:end="281:124"><operator pos:start="280:29" pos:end="280:29">!</operator><call pos:start="280:30" pos:end="280:54"><name pos:start="280:30" pos:end="280:40"><name pos:start="280:30" pos:end="280:33">this</name><operator pos:start="280:34" pos:end="280:34">.</operator><name pos:start="280:35" pos:end="280:40">equals</name></name><argument_list pos:start="280:41" pos:end="280:54">(<argument pos:start="280:42" pos:end="280:53"><expr pos:start="280:42" pos:end="280:53"><name pos:start="280:42" pos:end="280:53">flyingDrones</name></expr></argument>)</argument_list></call> 
					<operator pos:start="281:41" pos:end="281:42">&amp;&amp;</operator> <operator pos:start="281:44" pos:end="281:44">(</operator><call pos:start="281:45" pos:end="281:71"><name pos:start="281:45" pos:end="281:69"><name pos:start="281:45" pos:end="281:50">drone2</name><operator pos:start="281:51" pos:end="281:51">.</operator><name pos:start="281:52" pos:end="281:69">getFlightModeState</name></name><argument_list pos:start="281:70" pos:end="281:71">()</argument_list></call><operator pos:start="281:72" pos:end="281:72">.</operator><call pos:start="281:73" pos:end="281:82"><name pos:start="281:73" pos:end="281:80">isFlying</name><argument_list pos:start="281:81" pos:end="281:82">()</argument_list></call> <operator pos:start="281:84" pos:end="281:85">||</operator> <call pos:start="281:87" pos:end="281:113"><name pos:start="281:87" pos:end="281:111"><name pos:start="281:87" pos:end="281:92">drone2</name><operator pos:start="281:93" pos:end="281:93">.</operator><name pos:start="281:94" pos:end="281:111">getFlightModeState</name></name><argument_list pos:start="281:112" pos:end="281:113">()</argument_list></call><operator pos:start="281:114" pos:end="281:114">.</operator><call pos:start="281:115" pos:end="281:123"><name pos:start="281:115" pos:end="281:121">isInAir</name><argument_list pos:start="281:122" pos:end="281:123">()</argument_list></call><operator pos:start="281:124" pos:end="281:124">)</operator></expr>)</condition> <block pos:start="281:127" pos:end="288:25">{<block_content pos:start="282:33" pos:end="287:33">
				<expr_stmt pos:start="282:33" pos:end="282:103"><expr pos:start="282:33" pos:end="282:102"><name pos:start="282:33" pos:end="282:44">dronDistance</name> <operator pos:start="282:46" pos:end="282:46">=</operator> <call pos:start="282:48" pos:end="282:68"><name pos:start="282:48" pos:end="282:66"><name pos:start="282:48" pos:end="282:51">this</name><operator pos:start="282:52" pos:end="282:52">.</operator><name pos:start="282:53" pos:end="282:66">getCoordinates</name></name><argument_list pos:start="282:67" pos:end="282:68">()</argument_list></call><operator pos:start="282:69" pos:end="282:69">.</operator><call pos:start="282:70" pos:end="282:102"><name pos:start="282:70" pos:end="282:77">distance</name><argument_list pos:start="282:78" pos:end="282:102">(<argument pos:start="282:79" pos:end="282:101"><expr pos:start="282:79" pos:end="282:101"><call pos:start="282:79" pos:end="282:101"><name pos:start="282:79" pos:end="282:99"><name pos:start="282:79" pos:end="282:84">drone2</name><operator pos:start="282:85" pos:end="282:85">.</operator><name pos:start="282:86" pos:end="282:99">getCoordinates</name></name><argument_list pos:start="282:100" pos:end="282:101">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<if_stmt pos:start="283:33" pos:end="287:33"><if pos:start="283:33" pos:end="287:33">if <condition pos:start="283:36" pos:end="283:82">(<expr pos:start="283:37" pos:end="283:81"><name pos:start="283:37" pos:end="283:48">dronDistance</name> <operator pos:start="283:50" pos:end="283:50">&lt;</operator> <name pos:start="283:52" pos:end="283:81"><name pos:start="283:52" pos:end="283:69">DronologyConstants</name><operator pos:start="283:70" pos:end="283:70">.</operator><name pos:start="283:71" pos:end="283:81">SAFETY_ZONE</name></name></expr>)</condition> <block pos:start="283:84" pos:end="287:33">{<block_content pos:start="284:41" pos:end="286:53">
					<expr_stmt pos:start="284:41" pos:end="285:133"><expr pos:start="284:41" pos:end="285:132"><call pos:start="284:41" pos:end="285:132"><name pos:start="284:41" pos:end="284:52"><name pos:start="284:41" pos:end="284:46">LOGGER</name><operator pos:start="284:47" pos:end="284:47">.</operator><name pos:start="284:48" pos:end="284:52">error</name></name><argument_list pos:start="284:53" pos:end="285:132">(<argument pos:start="284:54" pos:end="285:131"><expr pos:start="284:54" pos:end="285:131"><literal type="string" pos:start="284:54" pos:end="284:123">"Safety Distance Violation - Drone not allowed to TakeOff! distance: "</literal> <operator pos:start="284:125" pos:end="284:125">+</operator> <name pos:start="284:127" pos:end="284:138">dronDistance</name>
							<operator pos:start="285:57" pos:end="285:57">+</operator> <literal type="string" pos:start="285:59" pos:end="285:74">" safety zone: "</literal> <operator pos:start="285:76" pos:end="285:76">+</operator> <name pos:start="285:78" pos:end="285:107"><name pos:start="285:78" pos:end="285:95">DronologyConstants</name><operator pos:start="285:96" pos:end="285:96">.</operator><name pos:start="285:97" pos:end="285:107">SAFETY_ZONE</name></name> <operator pos:start="285:109" pos:end="285:109">+</operator> <literal type="string" pos:start="285:111" pos:end="285:116">" =&gt; "</literal> <operator pos:start="285:118" pos:end="285:118">+</operator> <name pos:start="285:120" pos:end="285:131">dronDistance</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<return pos:start="286:41" pos:end="286:53">return <expr pos:start="286:48" pos:end="286:52"><literal type="boolean" pos:start="286:48" pos:end="286:52">false</literal></expr>;</return>
				</block_content>}</block></if></if_stmt>
			</block_content>}</block></if></if_stmt>
		</block_content>}</block></for>
		<return pos:start="290:17" pos:end="290:28">return <expr pos:start="290:24" pos:end="290:27"><literal type="boolean" pos:start="290:24" pos:end="290:27">true</literal></expr>;</return>
	</block_content>}</block></function>

	<comment type="block" format="javadoc" pos:start="293:9" pos:end="296:11">/**
	 *
	 * @return unique drone ID
	 */</comment>
	<function pos:start="297:9" pos:end="299:9"><type pos:start="297:9" pos:end="297:21"><specifier pos:start="297:9" pos:end="297:14">public</specifier> <name pos:start="297:16" pos:end="297:21">String</name></type> <name pos:start="297:23" pos:end="297:34">getDroneName</name><parameter_list pos:start="297:35" pos:end="297:36">()</parameter_list> <block pos:start="297:38" pos:end="299:9">{<block_content pos:start="298:17" pos:end="298:44">
		<return pos:start="298:17" pos:end="298:44">return <expr pos:start="298:24" pos:end="298:43"><call pos:start="298:24" pos:end="298:43"><name pos:start="298:24" pos:end="298:41"><name pos:start="298:24" pos:end="298:28">drone</name><operator pos:start="298:29" pos:end="298:29">.</operator><name pos:start="298:30" pos:end="298:41">getDroneName</name></name><argument_list pos:start="298:42" pos:end="298:43">()</argument_list></call></expr>;</return>
	</block_content>}</block></function>

	<comment type="block" format="javadoc" pos:start="301:9" pos:end="305:11">/**
	 * Land the drone. Delegate land functions to virtual or physical drone
	 *
	 * @throws FlightZoneException
	 */</comment>
	<function pos:start="306:9" pos:end="313:9"><type pos:start="306:9" pos:end="306:19"><specifier pos:start="306:9" pos:end="306:14">public</specifier> <name pos:start="306:16" pos:end="306:19">void</name></type> <name pos:start="306:21" pos:end="306:24">land</name><parameter_list pos:start="306:25" pos:end="306:26">()</parameter_list> <throws pos:start="306:28" pos:end="306:53">throws <argument pos:start="306:35" pos:end="306:53"><expr pos:start="306:35" pos:end="306:53"><name pos:start="306:35" pos:end="306:53">FlightZoneException</name></expr></argument></throws> <block pos:start="306:55" pos:end="313:9">{<block_content pos:start="307:17" pos:end="312:17">
		<if_stmt pos:start="307:17" pos:end="312:17"><if pos:start="307:17" pos:end="312:17">if <condition pos:start="307:20" pos:end="307:72">(<expr pos:start="307:21" pos:end="307:71"><operator pos:start="307:21" pos:end="307:21">!</operator><call pos:start="307:22" pos:end="307:43"><name pos:start="307:22" pos:end="307:41"><name pos:start="307:22" pos:end="307:31">droneState</name><operator pos:start="307:32" pos:end="307:32">.</operator><name pos:start="307:33" pos:end="307:41">isLanding</name></name><argument_list pos:start="307:42" pos:end="307:43">()</argument_list></call> <operator pos:start="307:45" pos:end="307:46">||</operator> <operator pos:start="307:48" pos:end="307:48">!</operator><call pos:start="307:49" pos:end="307:71"><name pos:start="307:49" pos:end="307:69"><name pos:start="307:49" pos:end="307:58">droneState</name><operator pos:start="307:59" pos:end="307:59">.</operator><name pos:start="307:60" pos:end="307:69">isOnGround</name></name><argument_list pos:start="307:70" pos:end="307:71">()</argument_list></call></expr>)</condition> <block pos:start="307:74" pos:end="312:17">{<block_content pos:start="308:25" pos:end="311:41">
			<expr_stmt pos:start="308:25" pos:end="308:54"><expr pos:start="308:25" pos:end="308:53"><call pos:start="308:25" pos:end="308:53"><name pos:start="308:25" pos:end="308:51"><name pos:start="308:25" pos:end="308:34">droneState</name><operator pos:start="308:35" pos:end="308:35">.</operator><name pos:start="308:36" pos:end="308:51">setModeToLanding</name></name><argument_list pos:start="308:52" pos:end="308:53">()</argument_list></call></expr>;</expr_stmt>
			<expr_stmt pos:start="309:25" pos:end="309:37"><expr pos:start="309:25" pos:end="309:36"><call pos:start="309:25" pos:end="309:36"><name pos:start="309:25" pos:end="309:34"><name pos:start="309:25" pos:end="309:29">drone</name><operator pos:start="309:30" pos:end="309:30">.</operator><name pos:start="309:31" pos:end="309:34">land</name></name><argument_list pos:start="309:35" pos:end="309:36">()</argument_list></call></expr>;</expr_stmt>
			<expr_stmt pos:start="310:25" pos:end="310:55"><expr pos:start="310:25" pos:end="310:54"><call pos:start="310:25" pos:end="310:54"><name pos:start="310:25" pos:end="310:52"><name pos:start="310:25" pos:end="310:34">droneState</name><operator pos:start="310:35" pos:end="310:35">.</operator><name pos:start="310:36" pos:end="310:52">setModeToOnGround</name></name><argument_list pos:start="310:53" pos:end="310:54">()</argument_list></call></expr>;</expr_stmt>
			<expr_stmt pos:start="311:25" pos:end="311:41"><expr pos:start="311:25" pos:end="311:40"><call pos:start="311:25" pos:end="311:40"><name pos:start="311:25" pos:end="311:38">unassignFlight</name><argument_list pos:start="311:39" pos:end="311:40">()</argument_list></call></expr>;</expr_stmt>
		</block_content>}</block></if></if_stmt>
	</block_content>}</block></function>

	<comment type="block" format="javadoc" pos:start="315:9" pos:end="319:11">/**
	 * Temporarily Halt
	 *
	 * @param haltinms
	 */</comment>
	<function pos:start="320:9" pos:end="340:9"><type pos:start="320:9" pos:end="320:19"><specifier pos:start="320:9" pos:end="320:14">public</specifier> <name pos:start="320:16" pos:end="320:19">void</name></type> <name pos:start="320:21" pos:end="320:31">haltInPlace</name><parameter_list pos:start="320:32" pos:end="320:45">(<parameter pos:start="320:33" pos:end="320:44"><decl pos:start="320:33" pos:end="320:44"><type pos:start="320:33" pos:end="320:35"><name pos:start="320:33" pos:end="320:35">int</name></type> <name pos:start="320:37" pos:end="320:44">haltinms</name></decl></parameter>)</parameter_list> <block pos:start="320:47" pos:end="340:9">{<block_content pos:start="321:17" pos:end="339:17">
		<synchronized pos:start="321:17" pos:end="339:17">synchronized <init pos:start="321:30" pos:end="321:47">(<expr pos:start="321:31" pos:end="321:46"><name pos:start="321:31" pos:end="321:46">droneSafetyState</name></expr>)</init> <block pos:start="321:49" pos:end="339:17">{<block_content pos:start="322:25" pos:end="338:25">
			<try pos:start="322:25" pos:end="338:25">try <block pos:start="322:29" pos:end="336:25">{<block_content pos:start="323:33" pos:end="334:33">
				<if_stmt pos:start="323:33" pos:end="334:33"><if pos:start="323:33" pos:end="329:33">if <condition pos:start="323:36" pos:end="323:61">(<expr pos:start="323:37" pos:end="323:60"><name pos:start="323:37" pos:end="323:52">currentHaltTimer</name> <operator pos:start="323:54" pos:end="323:55">!=</operator> <literal type="null" pos:start="323:57" pos:end="323:60">null</literal></expr>)</condition> <block pos:start="323:63" pos:end="329:33">{<block_content pos:start="324:41" pos:end="324:47">
					<return pos:start="324:41" pos:end="324:47">return;</return>
					<comment type="line" pos:start="325:41" pos:end="325:69">// currentHaltTimer.cancel();</comment>
					<comment type="line" pos:start="326:41" pos:end="326:84">// droneSafetyState.setSafetyModeToNormal();</comment>
					<comment type="line" pos:start="327:41" pos:end="327:72">// droneState.setModeToFlying();</comment>
					<comment type="line" pos:start="328:41" pos:end="328:67">// currentHaltTimer = null;</comment>
				</block_content>}</block></if> <else pos:start="329:35" pos:end="334:33">else <block pos:start="329:40" pos:end="334:33">{<block_content pos:start="330:41" pos:end="333:87">
					<expr_stmt pos:start="330:41" pos:end="330:81"><expr pos:start="330:41" pos:end="330:80"><call pos:start="330:41" pos:end="330:80"><name pos:start="330:41" pos:end="330:78"><name pos:start="330:41" pos:end="330:56">droneSafetyState</name><operator pos:start="330:57" pos:end="330:57">.</operator><name pos:start="330:58" pos:end="330:78">setSafetyModeToHalted</name></name><argument_list pos:start="330:79" pos:end="330:80">()</argument_list></call></expr>;</expr_stmt>
					<expr_stmt pos:start="331:41" pos:end="331:68"><expr pos:start="331:41" pos:end="331:67"><call pos:start="331:41" pos:end="331:67"><name pos:start="331:41" pos:end="331:65"><name pos:start="331:41" pos:end="331:50">droneState</name><operator pos:start="331:51" pos:end="331:51">.</operator><name pos:start="331:52" pos:end="331:65">setModeToInAir</name></name><argument_list pos:start="331:66" pos:end="331:67">()</argument_list></call></expr>;</expr_stmt>
					<expr_stmt pos:start="332:41" pos:end="332:79"><expr pos:start="332:41" pos:end="332:78"><name pos:start="332:41" pos:end="332:56">currentHaltTimer</name> <operator pos:start="332:58" pos:end="332:58">=</operator> <operator pos:start="332:60" pos:end="332:62">new</operator> <call pos:start="332:64" pos:end="332:78"><name pos:start="332:64" pos:end="332:76">HaltTimerTask</name><argument_list pos:start="332:77" pos:end="332:78">()</argument_list></call></expr>;</expr_stmt>
					<expr_stmt pos:start="333:41" pos:end="333:87"><expr pos:start="333:41" pos:end="333:86"><call pos:start="333:41" pos:end="333:86"><name pos:start="333:41" pos:end="333:58"><name pos:start="333:41" pos:end="333:49">haltTimer</name><operator pos:start="333:50" pos:end="333:50">.</operator><name pos:start="333:51" pos:end="333:58">schedule</name></name><argument_list pos:start="333:59" pos:end="333:86">(<argument pos:start="333:60" pos:end="333:75"><expr pos:start="333:60" pos:end="333:75"><name pos:start="333:60" pos:end="333:75">currentHaltTimer</name></expr></argument>, <argument pos:start="333:78" pos:end="333:85"><expr pos:start="333:78" pos:end="333:85"><name pos:start="333:78" pos:end="333:85">haltinms</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				</block_content>}</block></else></if_stmt>

			</block_content>}</block> <catch pos:start="336:27" pos:end="338:25">catch <parameter_list pos:start="336:33" pos:end="336:55">(<parameter pos:start="336:34" pos:end="336:54"><decl pos:start="336:34" pos:end="336:54"><type pos:start="336:34" pos:end="336:54"><name pos:start="336:34" pos:end="336:52">FlightZoneException</name></type> <name pos:start="336:54" pos:end="336:54">e</name></decl></parameter>)</parameter_list> <block pos:start="336:57" pos:end="338:25">{<block_content pos:start="337:33" pos:end="337:48">
				<expr_stmt pos:start="337:33" pos:end="337:48"><expr pos:start="337:33" pos:end="337:47"><call pos:start="337:33" pos:end="337:47"><name pos:start="337:33" pos:end="337:44"><name pos:start="337:33" pos:end="337:38">LOGGER</name><operator pos:start="337:39" pos:end="337:39">.</operator><name pos:start="337:40" pos:end="337:44">error</name></name><argument_list pos:start="337:45" pos:end="337:47">(<argument pos:start="337:46" pos:end="337:46"><expr pos:start="337:46" pos:end="337:46"><name pos:start="337:46" pos:end="337:46">e</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			</block_content>}</block></catch></try>
		</block_content>}</block></synchronized>
	</block_content>}</block></function>

	<comment type="block" format="javadoc" pos:start="342:9" pos:end="347:11">/**
	 * Temporarily Halt
	 * 
	 * @param haltinms
	 * @throws FlightZoneException
	 */</comment>
	<function pos:start="348:9" pos:end="359:9"><type pos:start="348:9" pos:end="348:19"><specifier pos:start="348:9" pos:end="348:14">public</specifier> <name pos:start="348:16" pos:end="348:19">void</name></type> <name pos:start="348:21" pos:end="348:32">resumeFlight</name><parameter_list pos:start="348:33" pos:end="348:34">()</parameter_list> <throws pos:start="348:36" pos:end="348:61">throws <argument pos:start="348:43" pos:end="348:61"><expr pos:start="348:43" pos:end="348:61"><name pos:start="348:43" pos:end="348:61">FlightZoneException</name></expr></argument></throws> <block pos:start="348:63" pos:end="359:9">{<block_content pos:start="349:17" pos:end="358:17">
		<synchronized pos:start="349:17" pos:end="358:17">synchronized <init pos:start="349:30" pos:end="349:47">(<expr pos:start="349:31" pos:end="349:46"><name pos:start="349:31" pos:end="349:46">droneSafetyState</name></expr>)</init> <block pos:start="349:49" pos:end="358:17">{<block_content pos:start="350:25" pos:end="357:25">
			<if_stmt pos:start="350:25" pos:end="357:25"><if pos:start="350:25" pos:end="352:25">if <condition pos:start="350:28" pos:end="350:53">(<expr pos:start="350:29" pos:end="350:52"><name pos:start="350:29" pos:end="350:44">currentHaltTimer</name> <operator pos:start="350:46" pos:end="350:47">==</operator> <literal type="null" pos:start="350:49" pos:end="350:52">null</literal></expr>)</condition> <block pos:start="350:55" pos:end="352:25">{<block_content pos:start="351:33" pos:end="351:80">
				<throw pos:start="351:33" pos:end="351:80">throw <expr pos:start="351:39" pos:end="351:79"><operator pos:start="351:39" pos:end="351:41">new</operator> <call pos:start="351:43" pos:end="351:79"><name pos:start="351:43" pos:end="351:61">FlightZoneException</name><argument_list pos:start="351:62" pos:end="351:79">(<argument pos:start="351:63" pos:end="351:78"><expr pos:start="351:63" pos:end="351:78"><literal type="string" pos:start="351:63" pos:end="351:78">"UAV not halted"</literal></expr></argument>)</argument_list></call></expr>;</throw>
			</block_content>}</block></if> <else pos:start="352:27" pos:end="357:25">else <block pos:start="352:32" pos:end="357:25">{<block_content pos:start="353:33" pos:end="356:56">
				<expr_stmt pos:start="353:33" pos:end="353:58"><expr pos:start="353:33" pos:end="353:57"><call pos:start="353:33" pos:end="353:57"><name pos:start="353:33" pos:end="353:55"><name pos:start="353:33" pos:end="353:48">currentHaltTimer</name><operator pos:start="353:49" pos:end="353:49">.</operator><name pos:start="353:50" pos:end="353:55">cancel</name></name><argument_list pos:start="353:56" pos:end="353:57">()</argument_list></call></expr>;</expr_stmt>
				<expr_stmt pos:start="354:33" pos:end="354:73"><expr pos:start="354:33" pos:end="354:72"><call pos:start="354:33" pos:end="354:72"><name pos:start="354:33" pos:end="354:70"><name pos:start="354:33" pos:end="354:48">droneSafetyState</name><operator pos:start="354:49" pos:end="354:49">.</operator><name pos:start="354:50" pos:end="354:70">setSafetyModeToNormal</name></name><argument_list pos:start="354:71" pos:end="354:72">()</argument_list></call></expr>;</expr_stmt>
				<expr_stmt pos:start="355:33" pos:end="355:61"><expr pos:start="355:33" pos:end="355:60"><call pos:start="355:33" pos:end="355:60"><name pos:start="355:33" pos:end="355:58"><name pos:start="355:33" pos:end="355:42">droneState</name><operator pos:start="355:43" pos:end="355:43">.</operator><name pos:start="355:44" pos:end="355:58">setModeToFlying</name></name><argument_list pos:start="355:59" pos:end="355:60">()</argument_list></call></expr>;</expr_stmt>
				<expr_stmt pos:start="356:33" pos:end="356:56"><expr pos:start="356:33" pos:end="356:55"><name pos:start="356:33" pos:end="356:48">currentHaltTimer</name> <operator pos:start="356:50" pos:end="356:50">=</operator> <literal type="null" pos:start="356:52" pos:end="356:55">null</literal></expr>;</expr_stmt>
			</block_content>}</block></else></if_stmt>
		</block_content>}</block></synchronized>
	</block_content>}</block></function>

	<comment type="block" format="javadoc" pos:start="361:9" pos:end="367:11">/**
	 * 
	 *
	 * return current flight mode state
	 *
	 * @return droneState
	 */</comment>
	<function pos:start="368:9" pos:end="370:9"><type pos:start="368:9" pos:end="368:38"><specifier pos:start="368:9" pos:end="368:14">public</specifier> <name pos:start="368:16" pos:end="368:38">DroneFlightStateManager</name></type> <name pos:start="368:40" pos:end="368:57">getFlightModeState</name><parameter_list pos:start="368:58" pos:end="368:59">()</parameter_list> <block pos:start="368:61" pos:end="370:9">{<block_content pos:start="369:17" pos:end="369:34">
		<return pos:start="369:17" pos:end="369:34">return <expr pos:start="369:24" pos:end="369:33"><name pos:start="369:24" pos:end="369:33">droneState</name></expr>;</return>
	</block_content>}</block></function>

	<function pos:start="372:9" pos:end="374:9"><type pos:start="372:9" pos:end="372:28"><specifier pos:start="372:9" pos:end="372:14">public</specifier> <name pos:start="372:16" pos:end="372:28">LlaCoordinate</name></type> <name pos:start="372:30" pos:end="372:47">getBaseCoordinates</name><parameter_list pos:start="372:48" pos:end="372:49">()</parameter_list> <block pos:start="372:51" pos:end="374:9">{<block_content pos:start="373:17" pos:end="373:50">
		<return pos:start="373:17" pos:end="373:50">return <expr pos:start="373:24" pos:end="373:49"><call pos:start="373:24" pos:end="373:49"><name pos:start="373:24" pos:end="373:47"><name pos:start="373:24" pos:end="373:28">drone</name><operator pos:start="373:29" pos:end="373:29">.</operator><name pos:start="373:30" pos:end="373:47">getBaseCoordinates</name></name><argument_list pos:start="373:48" pos:end="373:49">()</argument_list></call></expr>;</return>
	</block_content>}</block></function>

	<function pos:start="376:9" pos:end="379:9"><type pos:start="376:9" pos:end="376:19"><specifier pos:start="376:9" pos:end="376:14">public</specifier> <name pos:start="376:16" pos:end="376:19">void</name></type> <name pos:start="376:21" pos:end="376:31">sendCommand</name><parameter_list pos:start="376:32" pos:end="376:61">(<parameter pos:start="376:33" pos:end="376:60"><decl pos:start="376:33" pos:end="376:60"><type pos:start="376:33" pos:end="376:52"><name pos:start="376:33" pos:end="376:52">AbstractDroneCommand</name></type> <name pos:start="376:54" pos:end="376:60">command</name></decl></parameter>)</parameter_list> <throws pos:start="376:63" pos:end="376:83">throws <argument pos:start="376:70" pos:end="376:83"><expr pos:start="376:70" pos:end="376:83"><name pos:start="376:70" pos:end="376:83">DroneException</name></expr></argument></throws> <block pos:start="376:85" pos:end="379:9">{<block_content pos:start="377:17" pos:end="377:43">
		<expr_stmt pos:start="377:17" pos:end="377:43"><expr pos:start="377:17" pos:end="377:42"><call pos:start="377:17" pos:end="377:42"><name pos:start="377:17" pos:end="377:33"><name pos:start="377:17" pos:end="377:21">drone</name><operator pos:start="377:22" pos:end="377:22">.</operator><name pos:start="377:23" pos:end="377:33">sendCommand</name></name><argument_list pos:start="377:34" pos:end="377:42">(<argument pos:start="377:35" pos:end="377:41"><expr pos:start="377:35" pos:end="377:41"><name pos:start="377:35" pos:end="377:41">command</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	</block_content>}</block></function>

	<function pos:start="381:9" pos:end="389:9"><type pos:start="381:9" pos:end="381:19"><specifier pos:start="381:9" pos:end="381:14">public</specifier> <name pos:start="381:16" pos:end="381:19">void</name></type> <name pos:start="381:21" pos:end="381:24">stop</name><parameter_list pos:start="381:25" pos:end="381:26">()</parameter_list> <block pos:start="381:28" pos:end="389:9">{<block_content pos:start="382:17" pos:end="388:35">
		<if_stmt pos:start="382:17" pos:end="386:17"><if pos:start="382:17" pos:end="384:17">if <condition pos:start="382:20" pos:end="382:45">(<expr pos:start="382:21" pos:end="382:44"><operator pos:start="382:21" pos:end="382:21">!</operator><call pos:start="382:22" pos:end="382:44"><name pos:start="382:22" pos:end="382:42"><name pos:start="382:22" pos:end="382:31">droneState</name><operator pos:start="382:32" pos:end="382:32">.</operator><name pos:start="382:33" pos:end="382:42">isOnGround</name></name><argument_list pos:start="382:43" pos:end="382:44">()</argument_list></call></expr>)</condition> <block pos:start="382:47" pos:end="384:17">{<block_content pos:start="383:25" pos:end="383:124">
			<expr_stmt pos:start="383:25" pos:end="383:124"><expr pos:start="383:25" pos:end="383:123"><call pos:start="383:25" pos:end="383:123"><name pos:start="383:25" pos:end="383:35"><name pos:start="383:25" pos:end="383:30">LOGGER</name><operator pos:start="383:31" pos:end="383:31">.</operator><name pos:start="383:32" pos:end="383:35">warn</name></name><argument_list pos:start="383:36" pos:end="383:123">(<argument pos:start="383:37" pos:end="383:122"><expr pos:start="383:37" pos:end="383:122"><literal type="string" pos:start="383:37" pos:end="383:52">"Removing UAV '"</literal> <operator pos:start="383:54" pos:end="383:54">+</operator> <call pos:start="383:56" pos:end="383:75"><name pos:start="383:56" pos:end="383:73"><name pos:start="383:56" pos:end="383:60">drone</name><operator pos:start="383:61" pos:end="383:61">.</operator><name pos:start="383:62" pos:end="383:73">getDroneName</name></name><argument_list pos:start="383:74" pos:end="383:75">()</argument_list></call> <operator pos:start="383:77" pos:end="383:77">+</operator> <literal type="string" pos:start="383:79" pos:end="383:97">"' while in state "</literal> <operator pos:start="383:99" pos:end="383:99">+</operator> <call pos:start="383:101" pos:end="383:122"><name pos:start="383:101" pos:end="383:120"><name pos:start="383:101" pos:end="383:110">droneState</name><operator pos:start="383:111" pos:end="383:111">.</operator><name pos:start="383:112" pos:end="383:120">getStatus</name></name><argument_list pos:start="383:121" pos:end="383:122">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		</block_content>}</block></if> <else pos:start="384:19" pos:end="386:17">else <block pos:start="384:24" pos:end="386:17">{<block_content pos:start="385:25" pos:end="385:83">
			<expr_stmt pos:start="385:25" pos:end="385:83"><expr pos:start="385:25" pos:end="385:82"><call pos:start="385:25" pos:end="385:82"><name pos:start="385:25" pos:end="385:35"><name pos:start="385:25" pos:end="385:30">LOGGER</name><operator pos:start="385:31" pos:end="385:31">.</operator><name pos:start="385:32" pos:end="385:35">info</name></name><argument_list pos:start="385:36" pos:end="385:82">(<argument pos:start="385:37" pos:end="385:81"><expr pos:start="385:37" pos:end="385:81"><literal type="string" pos:start="385:37" pos:end="385:52">"Removing UAV '"</literal> <operator pos:start="385:54" pos:end="385:54">+</operator> <call pos:start="385:56" pos:end="385:75"><name pos:start="385:56" pos:end="385:73"><name pos:start="385:56" pos:end="385:60">drone</name><operator pos:start="385:61" pos:end="385:61">.</operator><name pos:start="385:62" pos:end="385:73">getDroneName</name></name><argument_list pos:start="385:74" pos:end="385:75">()</argument_list></call> <operator pos:start="385:77" pos:end="385:77">+</operator> <literal type="string" pos:start="385:79" pos:end="385:81">"'"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		</block_content>}</block></else></if_stmt>
		<expr_stmt pos:start="387:17" pos:end="387:32"><expr pos:start="387:17" pos:end="387:31"><call pos:start="387:17" pos:end="387:31"><name pos:start="387:17" pos:end="387:24"><name pos:start="387:17" pos:end="387:20">cont</name><operator pos:start="387:21" pos:end="387:21">.</operator><name pos:start="387:22" pos:end="387:24">set</name></name><argument_list pos:start="387:25" pos:end="387:31">(<argument pos:start="387:26" pos:end="387:30"><expr pos:start="387:26" pos:end="387:30"><literal type="boolean" pos:start="387:26" pos:end="387:30">false</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt pos:start="388:17" pos:end="388:35"><expr pos:start="388:17" pos:end="388:34"><call pos:start="388:17" pos:end="388:34"><name pos:start="388:17" pos:end="388:32"><name pos:start="388:17" pos:end="388:25">haltTimer</name><operator pos:start="388:26" pos:end="388:26">.</operator><name pos:start="388:27" pos:end="388:32">cancel</name></name><argument_list pos:start="388:33" pos:end="388:34">()</argument_list></call></expr>;</expr_stmt>
	</block_content>}</block></function>

	<function pos:start="391:9" pos:end="395:9"><type pos:start="391:9" pos:end="391:19"><specifier pos:start="391:9" pos:end="391:14">public</specifier> <name pos:start="391:16" pos:end="391:19">void</name></type> <name pos:start="391:21" pos:end="391:33">emergencyStop</name><parameter_list pos:start="391:34" pos:end="391:35">()</parameter_list> <throws pos:start="391:37" pos:end="391:57">throws <argument pos:start="391:44" pos:end="391:57"><expr pos:start="391:44" pos:end="391:57"><name pos:start="391:44" pos:end="391:57">DroneException</name></expr></argument></throws> <block pos:start="391:59" pos:end="395:9">{<block_content pos:start="392:17" pos:end="393:76">
		<expr_stmt pos:start="392:17" pos:end="392:95"><expr pos:start="392:17" pos:end="392:94"><call pos:start="392:17" pos:end="392:94"><name pos:start="392:17" pos:end="392:27"><name pos:start="392:17" pos:end="392:22">LOGGER</name><operator pos:start="392:23" pos:end="392:23">.</operator><name pos:start="392:24" pos:end="392:27">warn</name></name><argument_list pos:start="392:28" pos:end="392:94">(<argument pos:start="392:29" pos:end="392:93"><expr pos:start="392:29" pos:end="392:93"><literal type="string" pos:start="392:29" pos:end="392:54">"Emergency stop for UAV '"</literal> <operator pos:start="392:56" pos:end="392:56">+</operator> <call pos:start="392:58" pos:end="392:77"><name pos:start="392:58" pos:end="392:75"><name pos:start="392:58" pos:end="392:62">drone</name><operator pos:start="392:63" pos:end="392:63">.</operator><name pos:start="392:64" pos:end="392:75">getDroneName</name></name><argument_list pos:start="392:76" pos:end="392:77">()</argument_list></call> <operator pos:start="392:79" pos:end="392:79">+</operator> <literal type="string" pos:start="392:81" pos:end="392:93">"' requested"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt pos:start="393:17" pos:end="393:76"><expr pos:start="393:17" pos:end="393:75"><call pos:start="393:17" pos:end="393:75"><name pos:start="393:17" pos:end="393:27">sendCommand</name><argument_list pos:start="393:28" pos:end="393:75">(<argument pos:start="393:29" pos:end="393:74"><expr pos:start="393:29" pos:end="393:74"><operator pos:start="393:29" pos:end="393:31">new</operator> <call pos:start="393:33" pos:end="393:74"><name pos:start="393:33" pos:end="393:52">EmergencyStopCommand</name><argument_list pos:start="393:53" pos:end="393:74">(<argument pos:start="393:54" pos:end="393:73"><expr pos:start="393:54" pos:end="393:73"><call pos:start="393:54" pos:end="393:73"><name pos:start="393:54" pos:end="393:71"><name pos:start="393:54" pos:end="393:58">drone</name><operator pos:start="393:59" pos:end="393:59">.</operator><name pos:start="393:60" pos:end="393:71">getDroneName</name></name><argument_list pos:start="393:72" pos:end="393:73">()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	</block_content>}</block></function>

	<function pos:start="397:9" pos:end="400:9"><type pos:start="397:9" pos:end="397:19"><specifier pos:start="397:9" pos:end="397:14">public</specifier> <name pos:start="397:16" pos:end="397:19">void</name></type> <name pos:start="397:21" pos:end="397:33">resendCommand</name><parameter_list pos:start="397:34" pos:end="397:35">()</parameter_list> <throws pos:start="397:37" pos:end="397:57">throws <argument pos:start="397:44" pos:end="397:57"><expr pos:start="397:44" pos:end="397:57"><name pos:start="397:44" pos:end="397:57">DroneException</name></expr></argument></throws> <block pos:start="397:59" pos:end="400:9">{<block_content pos:start="398:17" pos:end="398:38">
		<expr_stmt pos:start="398:17" pos:end="398:38"><expr pos:start="398:17" pos:end="398:37"><call pos:start="398:17" pos:end="398:37"><name pos:start="398:17" pos:end="398:35"><name pos:start="398:17" pos:end="398:21">drone</name><operator pos:start="398:22" pos:end="398:22">.</operator><name pos:start="398:23" pos:end="398:35">resendCommand</name></name><argument_list pos:start="398:36" pos:end="398:37">()</argument_list></call></expr>;</expr_stmt>

	</block_content>}</block></function>

	<function pos:start="402:9" pos:end="424:9"><type pos:start="402:9" pos:end="402:28"><specifier pos:start="402:9" pos:end="402:14">public</specifier> <name pos:start="402:16" pos:end="402:28">DroneSnapshot</name></type> <name pos:start="402:30" pos:end="402:40">getSnapshot</name><parameter_list pos:start="402:41" pos:end="402:42">()</parameter_list> <block pos:start="402:44" pos:end="424:9">{<block_content pos:start="403:17" pos:end="423:32">
		<decl_stmt pos:start="403:17" pos:end="403:80"><decl pos:start="403:17" pos:end="403:79"><type pos:start="403:17" pos:end="403:37"><name pos:start="403:17" pos:end="403:37">DroneSnapshotInternal</name></type> <name pos:start="403:39" pos:end="403:46">snapshot</name> <init pos:start="403:48" pos:end="403:79">= <expr pos:start="403:50" pos:end="403:79"><call pos:start="403:50" pos:end="403:79"><name pos:start="403:50" pos:end="403:77"><name pos:start="403:50" pos:end="403:54">drone</name><operator pos:start="403:55" pos:end="403:55">.</operator><name pos:start="403:56" pos:end="403:77">getLatestDroneSnapshot</name></name><argument_list pos:start="403:78" pos:end="403:79">()</argument_list></call></expr></init></decl>;</decl_stmt>
		<if_stmt pos:start="404:17" pos:end="407:17"><if pos:start="404:17" pos:end="407:17">if <condition pos:start="404:20" pos:end="404:37">(<expr pos:start="404:21" pos:end="404:36"><name pos:start="404:21" pos:end="404:28">snapshot</name> <operator pos:start="404:30" pos:end="404:31">==</operator> <literal type="null" pos:start="404:33" pos:end="404:36">null</literal></expr>)</condition> <block pos:start="404:39" pos:end="407:17">{<block_content pos:start="405:25" pos:end="406:36">
			<expr_stmt pos:start="405:25" pos:end="405:84"><expr pos:start="405:25" pos:end="405:83"><call pos:start="405:25" pos:end="405:83"><name pos:start="405:25" pos:end="405:36"><name pos:start="405:25" pos:end="405:30">LOGGER</name><operator pos:start="405:31" pos:end="405:31">.</operator><name pos:start="405:32" pos:end="405:36">debug</name></name><argument_list pos:start="405:37" pos:end="405:83">(<argument pos:start="405:38" pos:end="405:82"><expr pos:start="405:38" pos:end="405:82"><literal type="string" pos:start="405:38" pos:end="405:82">"The backend drone didn't provide a snapshot"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<return pos:start="406:25" pos:end="406:36">return <expr pos:start="406:32" pos:end="406:35"><literal type="null" pos:start="406:32" pos:end="406:35">null</literal></expr>;</return>
		</block_content>}</block></if></if_stmt>
		<expr_stmt pos:start="408:17" pos:end="408:55"><expr pos:start="408:17" pos:end="408:54"><call pos:start="408:17" pos:end="408:54"><name pos:start="408:17" pos:end="408:32"><name pos:start="408:17" pos:end="408:24">snapshot</name><operator pos:start="408:25" pos:end="408:25">.</operator><name pos:start="408:26" pos:end="408:32">setName</name></name><argument_list pos:start="408:33" pos:end="408:54">(<argument pos:start="408:34" pos:end="408:53"><expr pos:start="408:34" pos:end="408:53"><call pos:start="408:34" pos:end="408:53"><name pos:start="408:34" pos:end="408:51"><name pos:start="408:34" pos:end="408:38">drone</name><operator pos:start="408:39" pos:end="408:39">.</operator><name pos:start="408:40" pos:end="408:51">getDroneName</name></name><argument_list pos:start="408:52" pos:end="408:53">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt pos:start="409:17" pos:end="409:47"><expr pos:start="409:17" pos:end="409:46"><call pos:start="409:17" pos:end="409:38"><name pos:start="409:17" pos:end="409:36"><name pos:start="409:17" pos:end="409:24">snapshot</name><operator pos:start="409:25" pos:end="409:25">.</operator><name pos:start="409:26" pos:end="409:36">getCommands</name></name><argument_list pos:start="409:37" pos:end="409:38">()</argument_list></call><operator pos:start="409:39" pos:end="409:39">.</operator><call pos:start="409:40" pos:end="409:46"><name pos:start="409:40" pos:end="409:44">clear</name><argument_list pos:start="409:45" pos:end="409:46">()</argument_list></call></expr>;</expr_stmt>
		<for pos:start="410:17" pos:end="412:17">for <control pos:start="410:21" pos:end="410:48">(<init pos:start="410:22" pos:end="410:47"><decl pos:start="410:22" pos:end="410:47"><type pos:start="410:22" pos:end="410:28"><name pos:start="410:22" pos:end="410:28">Command</name></type> <name pos:start="410:30" pos:end="410:32">cmd</name> <range pos:start="410:34" pos:end="410:47">: <expr pos:start="410:36" pos:end="410:47"><name pos:start="410:36" pos:end="410:47">commandQueue</name></expr></range></decl></init>)</control> <block pos:start="410:50" pos:end="412:17">{<block_content pos:start="411:25" pos:end="411:56">
			<expr_stmt pos:start="411:25" pos:end="411:56"><expr pos:start="411:25" pos:end="411:55"><call pos:start="411:25" pos:end="411:46"><name pos:start="411:25" pos:end="411:44"><name pos:start="411:25" pos:end="411:32">snapshot</name><operator pos:start="411:33" pos:end="411:33">.</operator><name pos:start="411:34" pos:end="411:44">getCommands</name></name><argument_list pos:start="411:45" pos:end="411:46">()</argument_list></call><operator pos:start="411:47" pos:end="411:47">.</operator><call pos:start="411:48" pos:end="411:55"><name pos:start="411:48" pos:end="411:50">add</name><argument_list pos:start="411:51" pos:end="411:55">(<argument pos:start="411:52" pos:end="411:54"><expr pos:start="411:52" pos:end="411:54"><name pos:start="411:52" pos:end="411:54">cmd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		</block_content>}</block></for>

		<expr_stmt pos:start="414:17" pos:end="414:58"><expr pos:start="414:17" pos:end="414:57"><call pos:start="414:17" pos:end="414:57"><name pos:start="414:17" pos:end="414:33"><name pos:start="414:17" pos:end="414:24">snapshot</name><operator pos:start="414:25" pos:end="414:25">.</operator><name pos:start="414:26" pos:end="414:33">setState</name></name><argument_list pos:start="414:34" pos:end="414:57">(<argument pos:start="414:35" pos:end="414:56"><expr pos:start="414:35" pos:end="414:56"><call pos:start="414:35" pos:end="414:56"><name pos:start="414:35" pos:end="414:54"><name pos:start="414:35" pos:end="414:44">droneState</name><operator pos:start="414:45" pos:end="414:45">.</operator><name pos:start="414:46" pos:end="414:54">getStatus</name></name><argument_list pos:start="414:55" pos:end="414:56">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		<decl_stmt pos:start="416:17" pos:end="416:77"><decl pos:start="416:17" pos:end="416:76"><type pos:start="416:17" pos:end="416:38"><name pos:start="416:17" pos:end="416:38"><name pos:start="416:17" pos:end="416:23">HashSet</name><argument_list type="generic" pos:start="416:24" pos:end="416:38">&lt;<argument pos:start="416:25" pos:end="416:37"><name pos:start="416:25" pos:end="416:37">IGoalSnapshot</name></argument>&gt;</argument_list></name></type> <name pos:start="416:40" pos:end="416:58">activeGoalSnapshots</name> <init pos:start="416:60" pos:end="416:76">= <expr pos:start="416:62" pos:end="416:76"><operator pos:start="416:62" pos:end="416:64">new</operator> <call pos:start="416:66" pos:end="416:76"><name pos:start="416:66" pos:end="416:74"><name pos:start="416:66" pos:end="416:72">HashSet</name><argument_list type="generic" pos:start="416:73" pos:end="416:74">&lt;&gt;</argument_list></name><argument_list pos:start="416:75" pos:end="416:76">()</argument_list></call></expr></init></decl>;</decl_stmt>
		<comment type="line" pos:start="417:17" pos:end="417:73">// need a thread safe way to copy the set of active goals</comment>
		<for pos:start="418:17" pos:end="420:17">for <control pos:start="418:21" pos:end="418:53">(<init pos:start="418:22" pos:end="418:52"><decl pos:start="418:22" pos:end="418:52"><type pos:start="418:22" pos:end="418:33"><name pos:start="418:22" pos:end="418:33">AbstractGoal</name></type> <name pos:start="418:35" pos:end="418:38">goal</name> <range pos:start="418:40" pos:end="418:52">: <expr pos:start="418:42" pos:end="418:52"><name pos:start="418:42" pos:end="418:52">activeGoals</name></expr></range></decl></init>)</control> <block pos:start="418:55" pos:end="420:17">{<block_content pos:start="419:25" pos:end="419:70">
			<expr_stmt pos:start="419:25" pos:end="419:70"><expr pos:start="419:25" pos:end="419:69"><call pos:start="419:25" pos:end="419:69"><name pos:start="419:25" pos:end="419:47"><name pos:start="419:25" pos:end="419:43">activeGoalSnapshots</name><operator pos:start="419:44" pos:end="419:44">.</operator><name pos:start="419:45" pos:end="419:47">add</name></name><argument_list pos:start="419:48" pos:end="419:69">(<argument pos:start="419:49" pos:end="419:68"><expr pos:start="419:49" pos:end="419:68"><call pos:start="419:49" pos:end="419:68"><name pos:start="419:49" pos:end="419:66"><name pos:start="419:49" pos:end="419:52">goal</name><operator pos:start="419:53" pos:end="419:53">.</operator><name pos:start="419:54" pos:end="419:66">buildSnapshot</name></name><argument_list pos:start="419:67" pos:end="419:68">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		</block_content>}</block></for>
		<expr_stmt pos:start="421:17" pos:end="421:55"><expr pos:start="421:17" pos:end="421:54"><call pos:start="421:17" pos:end="421:54"><name pos:start="421:17" pos:end="421:33"><name pos:start="421:17" pos:end="421:24">snapshot</name><operator pos:start="421:25" pos:end="421:25">.</operator><name pos:start="421:26" pos:end="421:33">setGoals</name></name><argument_list pos:start="421:34" pos:end="421:54">(<argument pos:start="421:35" pos:end="421:53"><expr pos:start="421:35" pos:end="421:53"><name pos:start="421:35" pos:end="421:53">activeGoalSnapshots</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		<return pos:start="423:17" pos:end="423:32">return <expr pos:start="423:24" pos:end="423:31"><name pos:start="423:24" pos:end="423:31">snapshot</name></expr>;</return>
	</block_content>}</block></function>

	<function pos:start="426:9" pos:end="431:9"><annotation pos:start="426:9" pos:end="426:17">@<name pos:start="426:10" pos:end="426:17">Override</name></annotation>
	<type pos:start="427:9" pos:end="427:19"><specifier pos:start="427:9" pos:end="427:14">public</specifier> <name pos:start="427:16" pos:end="427:19">void</name></type> <name pos:start="427:21" pos:end="427:26">update</name><parameter_list pos:start="427:27" pos:end="427:59">(<parameter pos:start="427:28" pos:end="427:48"><decl pos:start="427:28" pos:end="427:48"><type pos:start="427:28" pos:end="427:48"><name pos:start="427:28" pos:end="427:37">Observable</name></type> <name pos:start="427:39" pos:end="427:48">observable</name></decl></parameter>, <parameter pos:start="427:51" pos:end="427:58"><decl pos:start="427:51" pos:end="427:58"><type pos:start="427:51" pos:end="427:58"><name pos:start="427:51" pos:end="427:56">Object</name></type> <name pos:start="427:58" pos:end="427:58">o</name></decl></parameter>)</parameter_list> <block pos:start="427:61" pos:end="431:9">{<block_content pos:start="428:17" pos:end="430:17">
		<if_stmt pos:start="428:17" pos:end="430:17"><if pos:start="428:17" pos:end="430:17">if <condition pos:start="428:20" pos:end="428:55">(<expr pos:start="428:21" pos:end="428:54"><name pos:start="428:21" pos:end="428:30">observable</name> <operator pos:start="428:32" pos:end="428:41">instanceof</operator> <name pos:start="428:43" pos:end="428:54">AbstractGoal</name></expr>)</condition> <block pos:start="428:57" pos:end="430:17">{<block_content pos:start="429:25" pos:end="429:77">
			<expr_stmt pos:start="429:25" pos:end="429:77"><expr pos:start="429:25" pos:end="429:76"><call pos:start="429:25" pos:end="429:76"><name pos:start="429:25" pos:end="429:49"><name pos:start="429:25" pos:end="429:28">this</name><operator pos:start="429:29" pos:end="429:29">.</operator><name pos:start="429:30" pos:end="429:38">messenger</name><operator pos:start="429:39" pos:end="429:39">.</operator><name pos:start="429:40" pos:end="429:49">updateGoal</name></name><argument_list pos:start="429:50" pos:end="429:76">(<argument pos:start="429:51" pos:end="429:75"><expr pos:start="429:51" pos:end="429:75"><operator pos:start="429:51" pos:end="429:51">(</operator><name pos:start="429:52" pos:end="429:63">AbstractGoal</name><operator pos:start="429:64" pos:end="429:64">)</operator> <name pos:start="429:66" pos:end="429:75">observable</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		</block_content>}</block></if></if_stmt>
	</block_content>}</block></function>
	
	<function pos:start="433:9" pos:end="440:9"><type pos:start="433:9" pos:end="433:20"><specifier pos:start="433:9" pos:end="433:15">private</specifier> <name pos:start="433:17" pos:end="433:20">void</name></type> <name pos:start="433:22" pos:end="433:32">updateGoals</name><parameter_list pos:start="433:33" pos:end="433:51">(<parameter pos:start="433:34" pos:end="433:50"><decl pos:start="433:34" pos:end="433:50"><type pos:start="433:34" pos:end="433:45"><name pos:start="433:34" pos:end="433:45">AbstractGoal</name></type> <name pos:start="433:47" pos:end="433:50">goal</name></decl></parameter>)</parameter_list> <block pos:start="433:53" pos:end="440:9">{<block_content pos:start="434:17" pos:end="439:17">
		<decl_stmt pos:start="434:17" pos:end="434:50"><decl pos:start="434:17" pos:end="434:49"><type pos:start="434:17" pos:end="434:25"><name pos:start="434:17" pos:end="434:25">GoalState</name></type> <name pos:start="434:27" pos:end="434:31">state</name> <init pos:start="434:33" pos:end="434:49">= <expr pos:start="434:35" pos:end="434:49"><call pos:start="434:35" pos:end="434:49"><name pos:start="434:35" pos:end="434:47"><name pos:start="434:35" pos:end="434:38">goal</name><operator pos:start="434:39" pos:end="434:39">.</operator><name pos:start="434:40" pos:end="434:47">getState</name></name><argument_list pos:start="434:48" pos:end="434:49">()</argument_list></call></expr></init></decl>;</decl_stmt>
		<if_stmt pos:start="435:17" pos:end="439:17"><if pos:start="435:17" pos:end="437:17">if <condition pos:start="435:20" pos:end="435:46">(<expr pos:start="435:21" pos:end="435:45"><name pos:start="435:21" pos:end="435:25">state</name> <operator pos:start="435:27" pos:end="435:28">==</operator> <name pos:start="435:30" pos:end="435:45"><name pos:start="435:30" pos:end="435:38">GoalState</name><operator pos:start="435:39" pos:end="435:39">.</operator><name pos:start="435:40" pos:end="435:45">ACTIVE</name></name></expr>)</condition> <block pos:start="435:48" pos:end="437:17">{<block_content pos:start="436:25" pos:end="436:46">
			<expr_stmt pos:start="436:25" pos:end="436:46"><expr pos:start="436:25" pos:end="436:45"><call pos:start="436:25" pos:end="436:45"><name pos:start="436:25" pos:end="436:39"><name pos:start="436:25" pos:end="436:35">activeGoals</name><operator pos:start="436:36" pos:end="436:36">.</operator><name pos:start="436:37" pos:end="436:39">add</name></name><argument_list pos:start="436:40" pos:end="436:45">(<argument pos:start="436:41" pos:end="436:44"><expr pos:start="436:41" pos:end="436:44"><name pos:start="436:41" pos:end="436:44">goal</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		</block_content>}</block></if> <else pos:start="437:19" pos:end="439:17">else <block pos:start="437:24" pos:end="439:17">{<block_content pos:start="438:25" pos:end="438:49">
			<expr_stmt pos:start="438:25" pos:end="438:49"><expr pos:start="438:25" pos:end="438:48"><call pos:start="438:25" pos:end="438:48"><name pos:start="438:25" pos:end="438:42"><name pos:start="438:25" pos:end="438:35">activeGoals</name><operator pos:start="438:36" pos:end="438:36">.</operator><name pos:start="438:37" pos:end="438:42">remove</name></name><argument_list pos:start="438:43" pos:end="438:48">(<argument pos:start="438:44" pos:end="438:47"><expr pos:start="438:44" pos:end="438:47"><name pos:start="438:44" pos:end="438:47">goal</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		</block_content>}</block></else></if_stmt>
	</block_content>}</block></function>
	<comment type="line" pos:start="441:9" pos:end="441:20">// endregion</comment>

	<comment type="line" pos:start="443:9" pos:end="443:33">// region private methods</comment>

	<function pos:start="445:9" pos:end="456:9"><type pos:start="445:9" pos:end="445:20"><specifier pos:start="445:9" pos:end="445:15">private</specifier> <name pos:start="445:17" pos:end="445:20">void</name></type> <name pos:start="445:22" pos:end="445:39">processAllMessages</name><parameter_list pos:start="445:40" pos:end="445:41">()</parameter_list> <block pos:start="445:43" pos:end="456:9">{<block_content pos:start="446:17" pos:end="455:17">
		<try pos:start="446:17" pos:end="455:17">try <block pos:start="446:21" pos:end="453:17">{<block_content pos:start="447:25" pos:end="451:25">
			<decl_stmt pos:start="447:25" pos:end="447:89"><decl pos:start="447:25" pos:end="447:88"><type pos:start="447:25" pos:end="447:39"><name pos:start="447:25" pos:end="447:39">AbstractMessage</name></type> <name pos:start="447:41" pos:end="447:43">msg</name> <init pos:start="447:45" pos:end="447:88">= <expr pos:start="447:47" pos:end="447:88"><call pos:start="447:47" pos:end="447:88"><name pos:start="447:47" pos:end="447:63"><name pos:start="447:47" pos:end="447:50">this</name><operator pos:start="447:51" pos:end="447:51">.</operator><name pos:start="447:52" pos:end="447:58">mailbox</name><operator pos:start="447:59" pos:end="447:59">.</operator><name pos:start="447:60" pos:end="447:63">poll</name></name><argument_list pos:start="447:64" pos:end="447:88">(<argument pos:start="447:65" pos:end="447:65"><expr pos:start="447:65" pos:end="447:65"><literal type="number" pos:start="447:65" pos:end="447:65">0</literal></expr></argument>, <argument pos:start="447:68" pos:end="447:87"><expr pos:start="447:68" pos:end="447:87"><name pos:start="447:68" pos:end="447:87"><name pos:start="447:68" pos:end="447:75">TimeUnit</name><operator pos:start="447:76" pos:end="447:76">.</operator><name pos:start="447:77" pos:end="447:87">NANOSECONDS</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<while pos:start="448:25" pos:end="451:25">while <condition pos:start="448:31" pos:end="448:43">(<expr pos:start="448:32" pos:end="448:42"><name pos:start="448:32" pos:end="448:34">msg</name> <operator pos:start="448:36" pos:end="448:37">!=</operator> <literal type="null" pos:start="448:39" pos:end="448:42">null</literal></expr>)</condition> <block pos:start="448:45" pos:end="451:25">{<block_content pos:start="449:33" pos:end="450:81">
				<expr_stmt pos:start="449:33" pos:end="449:54"><expr pos:start="449:33" pos:end="449:53"><call pos:start="449:33" pos:end="449:53"><name pos:start="449:33" pos:end="449:48">processesMessage</name><argument_list pos:start="449:49" pos:end="449:53">(<argument pos:start="449:50" pos:end="449:52"><expr pos:start="449:50" pos:end="449:52"><name pos:start="449:50" pos:end="449:52">msg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<expr_stmt pos:start="450:33" pos:end="450:81"><expr pos:start="450:33" pos:end="450:80"><name pos:start="450:33" pos:end="450:35">msg</name> <operator pos:start="450:37" pos:end="450:37">=</operator> <call pos:start="450:39" pos:end="450:80"><name pos:start="450:39" pos:end="450:55"><name pos:start="450:39" pos:end="450:42">this</name><operator pos:start="450:43" pos:end="450:43">.</operator><name pos:start="450:44" pos:end="450:50">mailbox</name><operator pos:start="450:51" pos:end="450:51">.</operator><name pos:start="450:52" pos:end="450:55">poll</name></name><argument_list pos:start="450:56" pos:end="450:80">(<argument pos:start="450:57" pos:end="450:57"><expr pos:start="450:57" pos:end="450:57"><literal type="number" pos:start="450:57" pos:end="450:57">0</literal></expr></argument>, <argument pos:start="450:60" pos:end="450:79"><expr pos:start="450:60" pos:end="450:79"><name pos:start="450:60" pos:end="450:79"><name pos:start="450:60" pos:end="450:67">TimeUnit</name><operator pos:start="450:68" pos:end="450:68">.</operator><name pos:start="450:69" pos:end="450:79">NANOSECONDS</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			</block_content>}</block></while>
			
		</block_content>}</block> <catch pos:start="453:19" pos:end="455:17">catch <parameter_list pos:start="453:25" pos:end="453:37">(<parameter pos:start="453:26" pos:end="453:36"><decl pos:start="453:26" pos:end="453:36"><type pos:start="453:26" pos:end="453:36"><name pos:start="453:26" pos:end="453:34">Exception</name></type> <name pos:start="453:36" pos:end="453:36">e</name></decl></parameter>)</parameter_list> <block pos:start="453:39" pos:end="455:17">{<block_content pos:start="454:25" pos:end="454:40">
			<expr_stmt pos:start="454:25" pos:end="454:40"><expr pos:start="454:25" pos:end="454:39"><call pos:start="454:25" pos:end="454:39"><name pos:start="454:25" pos:end="454:36"><name pos:start="454:25" pos:end="454:30">LOGGER</name><operator pos:start="454:31" pos:end="454:31">.</operator><name pos:start="454:32" pos:end="454:36">error</name></name><argument_list pos:start="454:37" pos:end="454:39">(<argument pos:start="454:38" pos:end="454:38"><expr pos:start="454:38" pos:end="454:38"><name pos:start="454:38" pos:end="454:38">e</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		</block_content>}</block></catch></try>
	</block_content>}</block></function>

	<function pos:start="458:9" pos:end="470:9"><type pos:start="458:9" pos:end="458:20"><specifier pos:start="458:9" pos:end="458:15">private</specifier> <name pos:start="458:17" pos:end="458:20">void</name></type> <name pos:start="458:22" pos:end="458:37">processesMessage</name><parameter_list pos:start="458:38" pos:end="458:58">(<parameter pos:start="458:39" pos:end="458:57"><decl pos:start="458:39" pos:end="458:57"><type pos:start="458:39" pos:end="458:53"><name pos:start="458:39" pos:end="458:53">AbstractMessage</name></type> <name pos:start="458:55" pos:end="458:57">msg</name></decl></parameter>)</parameter_list> <block pos:start="458:60" pos:end="470:9">{<block_content pos:start="459:17" pos:end="469:17">
		<if_stmt pos:start="459:17" pos:end="469:17"><if pos:start="459:17" pos:end="461:17">if <condition pos:start="459:20" pos:end="459:54">(<expr pos:start="459:21" pos:end="459:53"><name pos:start="459:21" pos:end="459:23">msg</name> <operator pos:start="459:25" pos:end="459:34">instanceof</operator> <name pos:start="459:36" pos:end="459:53">GetSnapshotMessage</name></expr>)</condition> <block pos:start="459:56" pos:end="461:17">{<block_content pos:start="460:25" pos:end="460:76">
			<expr_stmt pos:start="460:25" pos:end="460:76"><expr pos:start="460:25" pos:end="460:75"><call pos:start="460:25" pos:end="460:75"><name pos:start="460:25" pos:end="460:49">processGetSnapshotMessage</name><argument_list pos:start="460:50" pos:end="460:75">(<argument pos:start="460:51" pos:end="460:74"><expr pos:start="460:51" pos:end="460:74"><operator pos:start="460:51" pos:end="460:51">(</operator><name pos:start="460:52" pos:end="460:69">GetSnapshotMessage</name><operator pos:start="460:70" pos:end="460:70">)</operator> <name pos:start="460:72" pos:end="460:74">msg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		</block_content>}</block></if> <if type="elseif" pos:start="461:19" pos:end="463:17">else if <condition pos:start="461:27" pos:end="461:64">(<expr pos:start="461:28" pos:end="461:63"><name pos:start="461:28" pos:end="461:30">msg</name> <operator pos:start="461:32" pos:end="461:41">instanceof</operator> <name pos:start="461:43" pos:end="461:63">UpdateGuidanceMessage</name></expr>)</condition> <block pos:start="461:66" pos:end="463:17">{<block_content pos:start="462:25" pos:end="462:82">
			<expr_stmt pos:start="462:25" pos:end="462:82"><expr pos:start="462:25" pos:end="462:81"><call pos:start="462:25" pos:end="462:81"><name pos:start="462:25" pos:end="462:52">processUpdateGuidanceMessage</name><argument_list pos:start="462:53" pos:end="462:81">(<argument pos:start="462:54" pos:end="462:80"><expr pos:start="462:54" pos:end="462:80"><operator pos:start="462:54" pos:end="462:54">(</operator><name pos:start="462:55" pos:end="462:75">UpdateGuidanceMessage</name><operator pos:start="462:76" pos:end="462:76">)</operator> <name pos:start="462:78" pos:end="462:80">msg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		</block_content>}</block></if> <if type="elseif" pos:start="463:19" pos:end="465:17">else if <condition pos:start="463:27" pos:end="463:62">(<expr pos:start="463:28" pos:end="463:61"><name pos:start="463:28" pos:end="463:30">msg</name> <operator pos:start="463:32" pos:end="463:41">instanceof</operator> <name pos:start="463:43" pos:end="463:61">AssignFlightMessage</name></expr>)</condition> <block pos:start="463:64" pos:end="465:17">{<block_content pos:start="464:25" pos:end="464:78">
			<expr_stmt pos:start="464:25" pos:end="464:78"><expr pos:start="464:25" pos:end="464:77"><call pos:start="464:25" pos:end="464:77"><name pos:start="464:25" pos:end="464:50">processAssignFlightMessage</name><argument_list pos:start="464:51" pos:end="464:77">(<argument pos:start="464:52" pos:end="464:76"><expr pos:start="464:52" pos:end="464:76"><operator pos:start="464:52" pos:end="464:52">(</operator><name pos:start="464:53" pos:end="464:71">AssignFlightMessage</name><operator pos:start="464:72" pos:end="464:72">)</operator> <name pos:start="464:74" pos:end="464:76">msg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		</block_content>}</block></if> <if type="elseif" pos:start="465:19" pos:end="467:17">else if <condition pos:start="465:27" pos:end="465:64">(<expr pos:start="465:28" pos:end="465:63"><name pos:start="465:28" pos:end="465:30">msg</name> <operator pos:start="465:32" pos:end="465:41">instanceof</operator> <name pos:start="465:43" pos:end="465:63">UnassignFlightMessage</name></expr>)</condition> <block pos:start="465:66" pos:end="467:17">{<block_content pos:start="466:25" pos:end="466:82">
			<expr_stmt pos:start="466:25" pos:end="466:82"><expr pos:start="466:25" pos:end="466:81"><call pos:start="466:25" pos:end="466:81"><name pos:start="466:25" pos:end="466:52">processUnassignFlightMessage</name><argument_list pos:start="466:53" pos:end="466:81">(<argument pos:start="466:54" pos:end="466:80"><expr pos:start="466:54" pos:end="466:80"><operator pos:start="466:54" pos:end="466:54">(</operator><name pos:start="466:55" pos:end="466:75">UnassignFlightMessage</name><operator pos:start="466:76" pos:end="466:76">)</operator> <name pos:start="466:78" pos:end="466:80">msg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		</block_content>}</block></if> <if type="elseif" pos:start="467:19" pos:end="469:17">else if <condition pos:start="467:27" pos:end="467:60">(<expr pos:start="467:28" pos:end="467:59"><name pos:start="467:28" pos:end="467:30">msg</name> <operator pos:start="467:32" pos:end="467:41">instanceof</operator> <name pos:start="467:43" pos:end="467:59">GoalUpdateMessage</name></expr>)</condition> <block pos:start="467:62" pos:end="469:17">{<block_content pos:start="468:25" pos:end="468:74">
			<expr_stmt pos:start="468:25" pos:end="468:74"><expr pos:start="468:25" pos:end="468:73"><call pos:start="468:25" pos:end="468:73"><name pos:start="468:25" pos:end="468:48">processGoalUpdateMessage</name><argument_list pos:start="468:49" pos:end="468:73">(<argument pos:start="468:50" pos:end="468:72"><expr pos:start="468:50" pos:end="468:72"><operator pos:start="468:50" pos:end="468:50">(</operator><name pos:start="468:51" pos:end="468:67">GoalUpdateMessage</name><operator pos:start="468:68" pos:end="468:68">)</operator> <name pos:start="468:70" pos:end="468:72">msg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		</block_content>}</block></if></if_stmt>
	</block_content>}</block></function>

	<function pos:start="472:9" pos:end="479:9"><type pos:start="472:9" pos:end="472:20"><specifier pos:start="472:9" pos:end="472:15">private</specifier> <name pos:start="472:17" pos:end="472:20">void</name></type> <name pos:start="472:22" pos:end="472:46">processGetSnapshotMessage</name><parameter_list pos:start="472:47" pos:end="472:70">(<parameter pos:start="472:48" pos:end="472:69"><decl pos:start="472:48" pos:end="472:69"><type pos:start="472:48" pos:end="472:65"><name pos:start="472:48" pos:end="472:65">GetSnapshotMessage</name></type> <name pos:start="472:67" pos:end="472:69">msg</name></decl></parameter>)</parameter_list> <block pos:start="472:72" pos:end="479:9">{<block_content pos:start="473:17" pos:end="478:17">
		<try pos:start="473:17" pos:end="478:17">try <block pos:start="473:21" pos:end="475:17">{<block_content pos:start="474:25" pos:end="474:108">
			<expr_stmt pos:start="474:25" pos:end="474:108"><expr pos:start="474:25" pos:end="474:107"><call pos:start="474:25" pos:end="474:107"><name pos:start="474:25" pos:end="474:41"><name pos:start="474:25" pos:end="474:27">msg</name><operator pos:start="474:28" pos:end="474:28">.</operator><name pos:start="474:29" pos:end="474:37">returnBox</name><operator pos:start="474:38" pos:end="474:38">.</operator><name pos:start="474:39" pos:end="474:41">put</name></name><argument_list pos:start="474:42" pos:end="474:107">(<argument pos:start="474:43" pos:end="474:106"><expr pos:start="474:43" pos:end="474:106"><operator pos:start="474:43" pos:end="474:45">new</operator> <call pos:start="474:47" pos:end="474:106"><name pos:start="474:47" pos:end="474:65">DroneSnapshotOption</name><argument_list pos:start="474:66" pos:end="474:106">(<argument pos:start="474:67" pos:end="474:84"><expr pos:start="474:67" pos:end="474:84"><call pos:start="474:67" pos:end="474:84"><name pos:start="474:67" pos:end="474:82"><name pos:start="474:67" pos:end="474:70">this</name><operator pos:start="474:71" pos:end="474:71">.</operator><name pos:start="474:72" pos:end="474:82">getSnapshot</name></name><argument_list pos:start="474:83" pos:end="474:84">()</argument_list></call></expr></argument>, <argument pos:start="474:87" pos:end="474:105"><expr pos:start="474:87" pos:end="474:105"><call pos:start="474:87" pos:end="474:105"><name pos:start="474:87" pos:end="474:103"><name pos:start="474:87" pos:end="474:90">this</name><operator pos:start="474:91" pos:end="474:91">.</operator><name pos:start="474:92" pos:end="474:103">getDroneName</name></name><argument_list pos:start="474:104" pos:end="474:105">()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		</block_content>}</block> <catch pos:start="475:19" pos:end="478:17">catch <parameter_list pos:start="475:25" pos:end="475:48">(<parameter pos:start="475:26" pos:end="475:47"><decl pos:start="475:26" pos:end="475:47"><type pos:start="475:26" pos:end="475:47"><name pos:start="475:26" pos:end="475:45">InterruptedException</name></type> <name pos:start="475:47" pos:end="475:47">e</name></decl></parameter>)</parameter_list> <block pos:start="475:50" pos:end="478:17">{<block_content pos:start="476:25" pos:end="477:40">
			<expr_stmt pos:start="476:25" pos:end="476:44"><expr pos:start="476:25" pos:end="476:43"><call pos:start="476:25" pos:end="476:43"><name pos:start="476:25" pos:end="476:41"><name pos:start="476:25" pos:end="476:25">e</name><operator pos:start="476:26" pos:end="476:26">.</operator><name pos:start="476:27" pos:end="476:41">printStackTrace</name></name><argument_list pos:start="476:42" pos:end="476:43">()</argument_list></call></expr>;</expr_stmt>
			<expr_stmt pos:start="477:25" pos:end="477:40"><expr pos:start="477:25" pos:end="477:39"><call pos:start="477:25" pos:end="477:39"><name pos:start="477:25" pos:end="477:36"><name pos:start="477:25" pos:end="477:30">LOGGER</name><operator pos:start="477:31" pos:end="477:31">.</operator><name pos:start="477:32" pos:end="477:36">error</name></name><argument_list pos:start="477:37" pos:end="477:39">(<argument pos:start="477:38" pos:end="477:38"><expr pos:start="477:38" pos:end="477:38"><name pos:start="477:38" pos:end="477:38">e</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		</block_content>}</block></catch></try>
	</block_content>}</block></function>

	<function pos:start="481:9" pos:end="483:9"><type pos:start="481:9" pos:end="481:20"><specifier pos:start="481:9" pos:end="481:15">private</specifier> <name pos:start="481:17" pos:end="481:20">void</name></type> <name pos:start="481:22" pos:end="481:49">processUpdateGuidanceMessage</name><parameter_list pos:start="481:50" pos:end="481:76">(<parameter pos:start="481:51" pos:end="481:75"><decl pos:start="481:51" pos:end="481:75"><type pos:start="481:51" pos:end="481:71"><name pos:start="481:51" pos:end="481:71">UpdateGuidanceMessage</name></type> <name pos:start="481:73" pos:end="481:75">msg</name></decl></parameter>)</parameter_list> <block pos:start="481:78" pos:end="483:9">{<block_content pos:start="482:17" pos:end="482:50">
		<expr_stmt pos:start="482:17" pos:end="482:50"><expr pos:start="482:17" pos:end="482:49"><call pos:start="482:17" pos:end="482:49"><name pos:start="482:17" pos:end="482:35"><name pos:start="482:17" pos:end="482:20">this</name><operator pos:start="482:21" pos:end="482:21">.</operator><name pos:start="482:22" pos:end="482:35">updateGuidance</name></name><argument_list pos:start="482:36" pos:end="482:49">(<argument pos:start="482:37" pos:end="482:48"><expr pos:start="482:37" pos:end="482:48"><name pos:start="482:37" pos:end="482:48"><name pos:start="482:37" pos:end="482:39">msg</name><operator pos:start="482:40" pos:end="482:40">.</operator><name pos:start="482:41" pos:end="482:48">commands</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	</block_content>}</block></function>

	<function pos:start="485:9" pos:end="487:9"><type pos:start="485:9" pos:end="485:20"><specifier pos:start="485:9" pos:end="485:15">private</specifier> <name pos:start="485:17" pos:end="485:20">void</name></type> <name pos:start="485:22" pos:end="485:47">processAssignFlightMessage</name><parameter_list pos:start="485:48" pos:end="485:72">(<parameter pos:start="485:49" pos:end="485:71"><decl pos:start="485:49" pos:end="485:71"><type pos:start="485:49" pos:end="485:67"><name pos:start="485:49" pos:end="485:67">AssignFlightMessage</name></type> <name pos:start="485:69" pos:end="485:71">msg</name></decl></parameter>)</parameter_list> <block pos:start="485:74" pos:end="487:9">{<block_content pos:start="486:17" pos:end="486:50">
		<expr_stmt pos:start="486:17" pos:end="486:50"><expr pos:start="486:17" pos:end="486:49"><call pos:start="486:17" pos:end="486:49"><name pos:start="486:17" pos:end="486:28">assignFlight</name><argument_list pos:start="486:29" pos:end="486:49">(<argument pos:start="486:30" pos:end="486:48"><expr pos:start="486:30" pos:end="486:48"><name pos:start="486:30" pos:end="486:48"><name pos:start="486:30" pos:end="486:32">msg</name><operator pos:start="486:33" pos:end="486:33">.</operator><name pos:start="486:34" pos:end="486:48">flightDirective</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	</block_content>}</block></function>

	<function pos:start="489:9" pos:end="491:9"><type pos:start="489:9" pos:end="489:20"><specifier pos:start="489:9" pos:end="489:15">private</specifier> <name pos:start="489:17" pos:end="489:20">void</name></type> <name pos:start="489:22" pos:end="489:49">processUnassignFlightMessage</name><parameter_list pos:start="489:50" pos:end="489:76">(<parameter pos:start="489:51" pos:end="489:75"><decl pos:start="489:51" pos:end="489:75"><type pos:start="489:51" pos:end="489:71"><name pos:start="489:51" pos:end="489:71">UnassignFlightMessage</name></type> <name pos:start="489:73" pos:end="489:75">msg</name></decl></parameter>)</parameter_list> <block pos:start="489:78" pos:end="491:9">{<block_content pos:start="490:17" pos:end="490:33">
		<expr_stmt pos:start="490:17" pos:end="490:33"><expr pos:start="490:17" pos:end="490:32"><call pos:start="490:17" pos:end="490:32"><name pos:start="490:17" pos:end="490:30">unassignFlight</name><argument_list pos:start="490:31" pos:end="490:32">()</argument_list></call></expr>;</expr_stmt>
	</block_content>}</block></function>

	<function pos:start="493:9" pos:end="495:9"><type pos:start="493:9" pos:end="493:20"><specifier pos:start="493:9" pos:end="493:15">private</specifier> <name pos:start="493:17" pos:end="493:20">void</name></type> <name pos:start="493:22" pos:end="493:45">processGoalUpdateMessage</name><parameter_list pos:start="493:46" pos:end="493:68">(<parameter pos:start="493:47" pos:end="493:67"><decl pos:start="493:47" pos:end="493:67"><type pos:start="493:47" pos:end="493:63"><name pos:start="493:47" pos:end="493:63">GoalUpdateMessage</name></type> <name pos:start="493:65" pos:end="493:67">msg</name></decl></parameter>)</parameter_list> <block pos:start="493:70" pos:end="495:9">{<block_content pos:start="494:17" pos:end="494:38">
		<expr_stmt pos:start="494:17" pos:end="494:38"><expr pos:start="494:17" pos:end="494:37"><call pos:start="494:17" pos:end="494:37"><name pos:start="494:17" pos:end="494:27">updateGoals</name><argument_list pos:start="494:28" pos:end="494:37">(<argument pos:start="494:29" pos:end="494:36"><expr pos:start="494:29" pos:end="494:36"><name pos:start="494:29" pos:end="494:36"><name pos:start="494:29" pos:end="494:31">msg</name><operator pos:start="494:32" pos:end="494:32">.</operator><name pos:start="494:33" pos:end="494:36">goal</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	</block_content>}</block></function>

	<function pos:start="497:9" pos:end="499:9"><type pos:start="497:9" pos:end="497:20"><specifier pos:start="497:9" pos:end="497:15">private</specifier> <name pos:start="497:17" pos:end="497:20">void</name></type> <name pos:start="497:22" pos:end="497:38">notifyStateChange</name><parameter_list pos:start="497:39" pos:end="497:40">()</parameter_list> <block pos:start="497:42" pos:end="499:9">{<block_content pos:start="498:17" pos:end="498:73">
		<expr_stmt pos:start="498:17" pos:end="498:73"><expr pos:start="498:17" pos:end="498:72"><call pos:start="498:17" pos:end="498:38"><name pos:start="498:17" pos:end="498:36"><name pos:start="498:17" pos:end="498:21">drone</name><operator pos:start="498:22" pos:end="498:22">.</operator><name pos:start="498:23" pos:end="498:36">getDroneStatus</name></name><argument_list pos:start="498:37" pos:end="498:38">()</argument_list></call><operator pos:start="498:39" pos:end="498:39">.</operator><call pos:start="498:40" pos:end="498:72"><name pos:start="498:40" pos:end="498:48">setStatus</name><argument_list pos:start="498:49" pos:end="498:72">(<argument pos:start="498:50" pos:end="498:71"><expr pos:start="498:50" pos:end="498:71"><call pos:start="498:50" pos:end="498:71"><name pos:start="498:50" pos:end="498:69"><name pos:start="498:50" pos:end="498:59">droneState</name><operator pos:start="498:60" pos:end="498:60">.</operator><name pos:start="498:61" pos:end="498:69">getStatus</name></name><argument_list pos:start="498:70" pos:end="498:71">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	</block_content>}</block></function>

		<comment type="block" format="javadoc" pos:start="501:17" pos:end="505:11">/**
	 * Assigns a flight directive to the managed drone
	 *
	 * @param flightDirective
	 */</comment>
	<function pos:start="506:9" pos:end="555:9"><type pos:start="506:9" pos:end="506:20"><specifier pos:start="506:9" pos:end="506:15">private</specifier> <name pos:start="506:17" pos:end="506:20">void</name></type> <name pos:start="506:22" pos:end="506:33">assignFlight</name><parameter_list pos:start="506:34" pos:end="506:66">(<parameter pos:start="506:35" pos:end="506:65"><decl pos:start="506:35" pos:end="506:65"><type pos:start="506:35" pos:end="506:49"><name pos:start="506:35" pos:end="506:49">IFlightDirector</name></type> <name pos:start="506:51" pos:end="506:65">flightDirective</name></decl></parameter>)</parameter_list> <block pos:start="506:68" pos:end="555:9">{<block_content pos:start="507:17" pos:end="554:17">
		<expr_stmt pos:start="507:17" pos:end="507:58"><expr pos:start="507:17" pos:end="507:57"><call pos:start="507:17" pos:end="507:57"><name pos:start="507:17" pos:end="507:28"><name pos:start="507:17" pos:end="507:22">LOGGER</name><operator pos:start="507:23" pos:end="507:23">.</operator><name pos:start="507:24" pos:end="507:28">debug</name></name><argument_list pos:start="507:29" pos:end="507:57">(<argument pos:start="507:30" pos:end="507:56"><expr pos:start="507:30" pos:end="507:56"><literal type="string" pos:start="507:30" pos:end="507:56">"Assigning flight director"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt pos:start="508:17" pos:end="508:29"><expr pos:start="508:17" pos:end="508:28"><call pos:start="508:17" pos:end="508:28"><name pos:start="508:17" pos:end="508:26">clearGoals</name><argument_list pos:start="508:27" pos:end="508:28">()</argument_list></call></expr>;</expr_stmt>
		<expr_stmt pos:start="509:17" pos:end="509:54"><expr pos:start="509:17" pos:end="509:53"><name pos:start="509:17" pos:end="509:35"><name pos:start="509:17" pos:end="509:20">this</name><operator pos:start="509:21" pos:end="509:21">.</operator><name pos:start="509:22" pos:end="509:35">flightDirector</name></name> <operator pos:start="509:37" pos:end="509:37">=</operator> <name pos:start="509:39" pos:end="509:53">flightDirective</name></expr>;</expr_stmt>

		<expr_stmt pos:start="511:17" pos:end="511:102"><expr pos:start="511:17" pos:end="511:101"><call pos:start="511:17" pos:end="511:101"><name pos:start="511:17" pos:end="511:28"><name pos:start="511:17" pos:end="511:22">LOGGER</name><operator pos:start="511:23" pos:end="511:23">.</operator><name pos:start="511:24" pos:end="511:28">trace</name></name><argument_list pos:start="511:29" pos:end="511:101">(<argument pos:start="511:30" pos:end="511:100"><expr pos:start="511:30" pos:end="511:100"><literal type="string" pos:start="511:30" pos:end="511:46">"The flight has "</literal> <operator pos:start="511:48" pos:end="511:48">+</operator> <call pos:start="511:50" pos:end="511:78"><name pos:start="511:50" pos:end="511:76"><name pos:start="511:50" pos:end="511:63">flightDirector</name><operator pos:start="511:64" pos:end="511:64">.</operator><name pos:start="511:65" pos:end="511:76">getWayPoints</name></name><argument_list pos:start="511:77" pos:end="511:78">()</argument_list></call><operator pos:start="511:79" pos:end="511:79">.</operator><call pos:start="511:80" pos:end="511:85"><name pos:start="511:80" pos:end="511:83">size</name><argument_list pos:start="511:84" pos:end="511:85">()</argument_list></call> <operator pos:start="511:87" pos:end="511:87">+</operator> <literal type="string" pos:start="511:89" pos:end="511:100">" waypoints"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<comment type="line" pos:start="512:17" pos:end="512:82">// Create waypoint goals for each waypoint in the flight director.</comment>
		<for pos:start="513:17" pos:end="528:17">for <control pos:start="513:21" pos:end="513:65">(<init pos:start="513:22" pos:end="513:64"><decl pos:start="513:22" pos:end="513:64"><type pos:start="513:22" pos:end="513:29"><name pos:start="513:22" pos:end="513:29">Waypoint</name></type> <name pos:start="513:31" pos:end="513:32">wp</name> <range pos:start="513:34" pos:end="513:64">: <expr pos:start="513:36" pos:end="513:64"><call pos:start="513:36" pos:end="513:64"><name pos:start="513:36" pos:end="513:62"><name pos:start="513:36" pos:end="513:49">flightDirector</name><operator pos:start="513:50" pos:end="513:50">.</operator><name pos:start="513:51" pos:end="513:62">getWayPoints</name></name><argument_list pos:start="513:63" pos:end="513:64">()</argument_list></call></expr></range></decl></init>)</control> <block pos:start="513:67" pos:end="528:17">{<block_content pos:start="514:25" pos:end="527:37">
			<decl_stmt pos:start="514:25" pos:end="514:64"><decl pos:start="514:25" pos:end="514:63"><type pos:start="514:25" pos:end="514:36"><name pos:start="514:25" pos:end="514:36">WaypointGoal</name></type> <name pos:start="514:38" pos:end="514:40">wpg</name> <init pos:start="514:42" pos:end="514:63">= <expr pos:start="514:44" pos:end="514:63"><operator pos:start="514:44" pos:end="514:46">new</operator> <call pos:start="514:48" pos:end="514:63"><name pos:start="514:48" pos:end="514:59">WaypointGoal</name><argument_list pos:start="514:60" pos:end="514:63">(<argument pos:start="514:61" pos:end="514:62"><expr pos:start="514:61" pos:end="514:62"><name pos:start="514:61" pos:end="514:62">wp</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

			<comment type="line" pos:start="516:25" pos:end="516:98">// Add an observer that will update the GUI when this waypoint is reached.</comment>
			<expr_stmt pos:start="517:25" pos:end="525:27"><expr pos:start="517:25" pos:end="525:26"><call pos:start="517:25" pos:end="525:26"><name pos:start="517:25" pos:end="517:39"><name pos:start="517:25" pos:end="517:27">wpg</name><operator pos:start="517:28" pos:end="517:28">.</operator><name pos:start="517:29" pos:end="517:39">addObserver</name></name><argument_list pos:start="517:40" pos:end="525:26">(<argument pos:start="517:41" pos:end="525:25"><expr pos:start="517:41" pos:end="525:25"><lambda pos:start="517:41" pos:end="525:25"><parameter_list pos:start="517:41" pos:end="517:55">(<parameter pos:start="517:42" pos:end="517:51"><decl pos:start="517:42" pos:end="517:51"><name pos:start="517:42" pos:end="517:51">observable</name></decl></parameter>, <parameter pos:start="517:54" pos:end="517:54"><decl pos:start="517:54" pos:end="517:54"><name pos:start="517:54" pos:end="517:54">o</name></decl></parameter>)</parameter_list> -&gt; <block pos:start="517:60" pos:end="525:25">{<block_content pos:start="518:33" pos:end="524:33">
				<decl_stmt pos:start="518:33" pos:end="518:89"><decl pos:start="518:33" pos:end="518:88"><type pos:start="518:33" pos:end="518:41"><name pos:start="518:33" pos:end="518:41">GoalState</name></type> <name pos:start="518:43" pos:end="518:47">state</name> <init pos:start="518:49" pos:end="518:88">= <expr pos:start="518:51" pos:end="518:88"><operator pos:start="518:51" pos:end="518:51">(</operator><operator pos:start="518:52" pos:end="518:52">(</operator><name pos:start="518:53" pos:end="518:64">AbstractGoal</name><operator pos:start="518:65" pos:end="518:65">)</operator> <name pos:start="518:67" pos:end="518:76">observable</name><operator pos:start="518:77" pos:end="518:77">)</operator><operator pos:start="518:78" pos:end="518:78">.</operator><call pos:start="518:79" pos:end="518:88"><name pos:start="518:79" pos:end="518:86">getState</name><argument_list pos:start="518:87" pos:end="518:88">()</argument_list></call></expr></init></decl>;</decl_stmt>

				<if_stmt pos:start="520:33" pos:end="524:33"><if pos:start="520:33" pos:end="524:33">if <condition pos:start="520:36" pos:end="520:64">(<expr pos:start="520:37" pos:end="520:63"><name pos:start="520:37" pos:end="520:41">state</name> <operator pos:start="520:43" pos:end="520:44">==</operator> <name pos:start="520:46" pos:end="520:63"><name pos:start="520:46" pos:end="520:54">GoalState</name><operator pos:start="520:55" pos:end="520:55">.</operator><name pos:start="520:56" pos:end="520:63">COMPLETE</name></name></expr>)</condition> <block pos:start="520:66" pos:end="524:33">{<block_content pos:start="521:41" pos:end="523:153">
					<expr_stmt pos:start="521:41" pos:end="521:57"><expr pos:start="521:41" pos:end="521:56"><call pos:start="521:41" pos:end="521:56"><name pos:start="521:41" pos:end="521:50"><name pos:start="521:41" pos:end="521:42">wp</name><operator pos:start="521:43" pos:end="521:43">.</operator><name pos:start="521:44" pos:end="521:50">reached</name></name><argument_list pos:start="521:51" pos:end="521:56">(<argument pos:start="521:52" pos:end="521:55"><expr pos:start="521:52" pos:end="521:55"><literal type="boolean" pos:start="521:52" pos:end="521:55">true</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<expr_stmt pos:start="522:41" pos:end="523:153"><expr pos:start="522:41" pos:end="523:152"><call pos:start="522:41" pos:end="522:80"><name pos:start="522:41" pos:end="522:78"><name pos:start="522:41" pos:end="522:66">DronologyMonitoringManager</name><operator pos:start="522:67" pos:end="522:67">.</operator><name pos:start="522:68" pos:end="522:78">getInstance</name></name><argument_list pos:start="522:79" pos:end="522:80">()</argument_list></call><operator pos:start="522:81" pos:end="522:81">.</operator><call pos:start="522:82" pos:end="523:152"><name pos:start="522:82" pos:end="522:88">publish</name><argument_list pos:start="522:89" pos:end="523:152">( 
						<argument pos:start="523:49" pos:end="523:151"><expr pos:start="523:49" pos:end="523:151"><call pos:start="523:49" pos:end="523:151"><name pos:start="523:49" pos:end="523:79"><name pos:start="523:49" pos:end="523:65">MessageMarshaller</name><operator pos:start="523:66" pos:end="523:66">.</operator><name pos:start="523:67" pos:end="523:79">createMessage</name></name><argument_list pos:start="523:80" pos:end="523:151">(<argument pos:start="523:81" pos:end="523:108"><expr pos:start="523:81" pos:end="523:108"><name pos:start="523:81" pos:end="523:108"><name pos:start="523:81" pos:end="523:91">MessageType</name><operator pos:start="523:92" pos:end="523:92">.</operator><name pos:start="523:93" pos:end="523:108">WAYPOINT_REACHED</name></name></expr></argument>, <argument pos:start="523:111" pos:end="523:130"><expr pos:start="523:111" pos:end="523:130"><call pos:start="523:111" pos:end="523:130"><name pos:start="523:111" pos:end="523:128"><name pos:start="523:111" pos:end="523:115">drone</name><operator pos:start="523:116" pos:end="523:116">.</operator><name pos:start="523:117" pos:end="523:128">getDroneName</name></name><argument_list pos:start="523:129" pos:end="523:130">()</argument_list></call></expr></argument>, <argument pos:start="523:133" pos:end="523:150"><expr pos:start="523:133" pos:end="523:150"><call pos:start="523:133" pos:end="523:150"><name pos:start="523:133" pos:end="523:148"><name pos:start="523:133" pos:end="523:134">wp</name><operator pos:start="523:135" pos:end="523:135">.</operator><name pos:start="523:136" pos:end="523:148">getCoordinate</name></name><argument_list pos:start="523:149" pos:end="523:150">()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				</block_content>}</block></if></if_stmt>
			</block_content>}</block></lambda></expr></argument>)</argument_list></call></expr>;</expr_stmt>

			<expr_stmt pos:start="527:25" pos:end="527:37"><expr pos:start="527:25" pos:end="527:36"><call pos:start="527:25" pos:end="527:36"><name pos:start="527:25" pos:end="527:31">addGoal</name><argument_list pos:start="527:32" pos:end="527:36">(<argument pos:start="527:33" pos:end="527:35"><expr pos:start="527:33" pos:end="527:35"><name pos:start="527:33" pos:end="527:35">wpg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		</block_content>}</block></for>

		<expr_stmt pos:start="530:17" pos:end="530:42"><expr pos:start="530:17" pos:end="530:41"><call pos:start="530:17" pos:end="530:41"><name pos:start="530:17" pos:end="530:39"><name pos:start="530:17" pos:end="530:33">completedCommands</name><operator pos:start="530:34" pos:end="530:34">.</operator><name pos:start="530:35" pos:end="530:39">clear</name></name><argument_list pos:start="530:40" pos:end="530:41">()</argument_list></call></expr>;</expr_stmt>
		<expr_stmt pos:start="531:17" pos:end="531:37"><expr pos:start="531:17" pos:end="531:36"><call pos:start="531:17" pos:end="531:36"><name pos:start="531:17" pos:end="531:34"><name pos:start="531:17" pos:end="531:28">commandQueue</name><operator pos:start="531:29" pos:end="531:29">.</operator><name pos:start="531:30" pos:end="531:34">clear</name></name><argument_list pos:start="531:35" pos:end="531:36">()</argument_list></call></expr>;</expr_stmt>

		<if_stmt pos:start="533:17" pos:end="554:17"><if pos:start="533:17" pos:end="554:17">if <condition pos:start="533:20" pos:end="533:37">(<expr pos:start="533:21" pos:end="533:36"><operator pos:start="533:21" pos:end="533:21">!</operator><call pos:start="533:22" pos:end="533:36"><name pos:start="533:22" pos:end="533:34"><name pos:start="533:22" pos:end="533:26">goals</name><operator pos:start="533:27" pos:end="533:27">.</operator><name pos:start="533:28" pos:end="533:34">isEmpty</name></name><argument_list pos:start="533:35" pos:end="533:36">()</argument_list></call></expr>)</condition> <block pos:start="533:39" pos:end="554:17">{<block_content pos:start="534:25" pos:end="553:27">
			<decl_stmt pos:start="534:25" pos:end="540:27"><decl pos:start="534:25" pos:end="540:26"><type pos:start="534:25" pos:end="534:30"><name pos:start="534:25" pos:end="534:30">Thread</name></type> <name pos:start="534:32" pos:end="534:40">tmpThread</name> <init pos:start="534:42" pos:end="540:26">= <expr pos:start="534:44" pos:end="540:26"><operator pos:start="534:44" pos:end="534:46">new</operator> <call pos:start="534:48" pos:end="540:26"><name pos:start="534:48" pos:end="534:53">Thread</name><argument_list pos:start="534:54" pos:end="540:26">(<argument pos:start="534:55" pos:end="540:25"><expr pos:start="534:55" pos:end="540:25"><operator pos:start="534:55" pos:end="534:57">new</operator> <class pos:start="534:59" pos:end="540:25"><super pos:start="534:59" pos:end="534:66"><name pos:start="534:59" pos:end="534:66">Runnable</name></super><argument_list pos:start="534:67" pos:end="534:68">()</argument_list><block pos:start="534:69" pos:end="540:25">{
			
				<function pos:start="536:33" pos:end="539:33"><annotation pos:start="536:33" pos:end="536:41">@<name pos:start="536:34" pos:end="536:41">Override</name></annotation>
				<type pos:start="537:33" pos:end="537:43"><specifier pos:start="537:33" pos:end="537:38">public</specifier> <name pos:start="537:40" pos:end="537:43">void</name></type> <name pos:start="537:45" pos:end="537:47">run</name><parameter_list pos:start="537:48" pos:end="537:49">()</parameter_list> <block pos:start="537:51" pos:end="539:33">{<block_content pos:start="538:41" pos:end="538:65">
					<expr_stmt pos:start="538:41" pos:end="538:65"><expr pos:start="538:41" pos:end="538:64"><call pos:start="538:41" pos:end="538:52"><name pos:start="538:41" pos:end="538:49"><name pos:start="538:41" pos:end="538:45">goals</name><operator pos:start="538:46" pos:end="538:46">.</operator><name pos:start="538:47" pos:end="538:49">get</name></name><argument_list pos:start="538:50" pos:end="538:52">(<argument pos:start="538:51" pos:end="538:51"><expr pos:start="538:51" pos:end="538:51"><literal type="number" pos:start="538:51" pos:end="538:51">0</literal></expr></argument>)</argument_list></call><operator pos:start="538:53" pos:end="538:53">.</operator><call pos:start="538:54" pos:end="538:64"><name pos:start="538:54" pos:end="538:62">setActive</name><argument_list pos:start="538:63" pos:end="538:64">()</argument_list></call></expr>;</expr_stmt>
				</block_content>}</block></function>
			}</block></class></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<expr_stmt pos:start="541:25" pos:end="541:42"><expr pos:start="541:25" pos:end="541:41"><call pos:start="541:25" pos:end="541:41"><name pos:start="541:25" pos:end="541:39"><name pos:start="541:25" pos:end="541:33">tmpThread</name><operator pos:start="541:34" pos:end="541:34">.</operator><name pos:start="541:35" pos:end="541:39">start</name></name><argument_list pos:start="541:40" pos:end="541:41">()</argument_list></call></expr>;</expr_stmt>
			<decl_stmt pos:start="542:25" pos:end="542:57"><decl pos:start="542:25" pos:end="542:56"><type pos:start="542:25" pos:end="542:27"><name pos:start="542:25" pos:end="542:27">int</name></type> <name pos:start="542:29" pos:end="542:37">lastIndex</name> <init pos:start="542:39" pos:end="542:56">= <expr pos:start="542:41" pos:end="542:56"><call pos:start="542:41" pos:end="542:52"><name pos:start="542:41" pos:end="542:50"><name pos:start="542:41" pos:end="542:45">goals</name><operator pos:start="542:46" pos:end="542:46">.</operator><name pos:start="542:47" pos:end="542:50">size</name></name><argument_list pos:start="542:51" pos:end="542:52">()</argument_list></call> <operator pos:start="542:54" pos:end="542:54">-</operator> <literal type="number" pos:start="542:56" pos:end="542:56">1</literal></expr></init></decl>;</decl_stmt>
			<expr_stmt pos:start="543:25" pos:end="553:27"><expr pos:start="543:25" pos:end="553:26"><call pos:start="543:25" pos:end="543:44"><name pos:start="543:25" pos:end="543:33"><name pos:start="543:25" pos:end="543:29">goals</name><operator pos:start="543:30" pos:end="543:30">.</operator><name pos:start="543:31" pos:end="543:33">get</name></name><argument_list pos:start="543:34" pos:end="543:44">(<argument pos:start="543:35" pos:end="543:43"><expr pos:start="543:35" pos:end="543:43"><name pos:start="543:35" pos:end="543:43">lastIndex</name></expr></argument>)</argument_list></call><operator pos:start="543:45" pos:end="543:45">.</operator><call pos:start="543:46" pos:end="553:26"><name pos:start="543:46" pos:end="543:56">addObserver</name><argument_list pos:start="543:57" pos:end="553:26">(<argument pos:start="543:58" pos:end="553:25"><expr pos:start="543:58" pos:end="553:25"><lambda pos:start="543:58" pos:end="553:25"><parameter_list pos:start="543:58" pos:end="543:72">(<parameter pos:start="543:59" pos:end="543:68"><decl pos:start="543:59" pos:end="543:68"><name pos:start="543:59" pos:end="543:68">observable</name></decl></parameter>, <parameter pos:start="543:71" pos:end="543:71"><decl pos:start="543:71" pos:end="543:71"><name pos:start="543:71" pos:end="543:71">o</name></decl></parameter>)</parameter_list> -&gt; <block pos:start="543:77" pos:end="553:25">{<block_content pos:start="544:33" pos:end="552:33">
				<decl_stmt pos:start="544:33" pos:end="544:89"><decl pos:start="544:33" pos:end="544:88"><type pos:start="544:33" pos:end="544:41"><name pos:start="544:33" pos:end="544:41">GoalState</name></type> <name pos:start="544:43" pos:end="544:47">state</name> <init pos:start="544:49" pos:end="544:88">= <expr pos:start="544:51" pos:end="544:88"><operator pos:start="544:51" pos:end="544:51">(</operator><operator pos:start="544:52" pos:end="544:52">(</operator><name pos:start="544:53" pos:end="544:64">AbstractGoal</name><operator pos:start="544:65" pos:end="544:65">)</operator> <name pos:start="544:67" pos:end="544:76">observable</name><operator pos:start="544:77" pos:end="544:77">)</operator><operator pos:start="544:78" pos:end="544:78">.</operator><call pos:start="544:79" pos:end="544:88"><name pos:start="544:79" pos:end="544:86">getState</name><argument_list pos:start="544:87" pos:end="544:88">()</argument_list></call></expr></init></decl>;</decl_stmt>

				<if_stmt pos:start="546:33" pos:end="552:33"><if pos:start="546:33" pos:end="552:33">if <condition pos:start="546:36" pos:end="546:64">(<expr pos:start="546:37" pos:end="546:63"><name pos:start="546:37" pos:end="546:41">state</name> <operator pos:start="546:43" pos:end="546:44">==</operator> <name pos:start="546:46" pos:end="546:63"><name pos:start="546:46" pos:end="546:54">GoalState</name><operator pos:start="546:55" pos:end="546:55">.</operator><name pos:start="546:56" pos:end="546:63">COMPLETE</name></name></expr>)</condition> <block pos:start="546:66" pos:end="552:33">{<block_content pos:start="547:41" pos:end="551:41">
					<try pos:start="547:41" pos:end="551:41">try <block pos:start="547:45" pos:end="549:41">{<block_content pos:start="548:49" pos:end="548:76">
						<expr_stmt pos:start="548:49" pos:end="548:76"><expr pos:start="548:49" pos:end="548:75"><call pos:start="548:49" pos:end="548:75"><name pos:start="548:49" pos:end="548:73"><name pos:start="548:49" pos:end="548:58">droneState</name><operator pos:start="548:59" pos:end="548:59">.</operator><name pos:start="548:60" pos:end="548:73">setModeToInAir</name></name><argument_list pos:start="548:74" pos:end="548:75">()</argument_list></call></expr>;</expr_stmt>
					</block_content>}</block> <catch pos:start="549:43" pos:end="551:41">catch <parameter_list pos:start="549:49" pos:end="549:71">(<parameter pos:start="549:50" pos:end="549:70"><decl pos:start="549:50" pos:end="549:70"><type pos:start="549:50" pos:end="549:70"><name pos:start="549:50" pos:end="549:68">FlightZoneException</name></type> <name pos:start="549:70" pos:end="549:70">e</name></decl></parameter>)</parameter_list> <block pos:start="549:73" pos:end="551:41">{<block_content pos:start="550:49" pos:end="550:63">
						<expr_stmt pos:start="550:49" pos:end="550:63"><expr pos:start="550:49" pos:end="550:62"><call pos:start="550:49" pos:end="550:62"><name pos:start="550:49" pos:end="550:59"><name pos:start="550:49" pos:end="550:54">LOGGER</name><operator pos:start="550:55" pos:end="550:55">.</operator><name pos:start="550:56" pos:end="550:59">warn</name></name><argument_list pos:start="550:60" pos:end="550:62">(<argument pos:start="550:61" pos:end="550:61"><expr pos:start="550:61" pos:end="550:61"><name pos:start="550:61" pos:end="550:61">e</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					</block_content>}</block></catch></try>
				</block_content>}</block></if></if_stmt>
			</block_content>}</block></lambda></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		</block_content>}</block></if></if_stmt>
	</block_content>}</block></function>

	<comment type="block" format="javadoc" pos:start="557:9" pos:end="559:11">/**
	 * Removes an assigned flight
	 */</comment>
	<function pos:start="560:9" pos:end="565:9"><type pos:start="560:9" pos:end="560:20"><specifier pos:start="560:9" pos:end="560:15">private</specifier> <name pos:start="560:17" pos:end="560:20">void</name></type> <name pos:start="560:22" pos:end="560:35">unassignFlight</name><parameter_list pos:start="560:36" pos:end="560:37">()</parameter_list> <block pos:start="560:39" pos:end="565:9">{<block_content pos:start="561:17" pos:end="564:29">
		<expr_stmt pos:start="561:17" pos:end="561:38"><expr pos:start="561:17" pos:end="561:37"><name pos:start="561:17" pos:end="561:30">flightDirector</name> <operator pos:start="561:32" pos:end="561:32">=</operator> <literal type="null" pos:start="561:34" pos:end="561:37">null</literal></expr>;</expr_stmt> <comment type="line" pos:start="561:40" pos:end="561:86">// DANGER. NEEDS FIXING. CANNOT UNASSIGN FLIGHT</comment>
		<comment type="line" pos:start="562:17" pos:end="562:47">// WITHOUT RETURNING TO BASE!!!</comment>
		<expr_stmt pos:start="563:17" pos:end="563:67"><expr pos:start="563:17" pos:end="563:66"><call pos:start="563:17" pos:end="563:66"><name pos:start="563:17" pos:end="563:27"><name pos:start="563:17" pos:end="563:22">LOGGER</name><operator pos:start="563:23" pos:end="563:23">.</operator><name pos:start="563:24" pos:end="563:27">warn</name></name><argument_list pos:start="563:28" pos:end="563:66">(<argument pos:start="563:29" pos:end="563:65"><expr pos:start="563:29" pos:end="563:65"><literal type="string" pos:start="563:29" pos:end="563:48">"Unassigned DRONE: "</literal> <operator pos:start="563:50" pos:end="563:50">+</operator> <call pos:start="563:52" pos:end="563:65"><name pos:start="563:52" pos:end="563:63">getDroneName</name><argument_list pos:start="563:64" pos:end="563:65">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt pos:start="564:17" pos:end="564:29"><expr pos:start="564:17" pos:end="564:28"><call pos:start="564:17" pos:end="564:28"><name pos:start="564:17" pos:end="564:26">clearGoals</name><argument_list pos:start="564:27" pos:end="564:28">()</argument_list></call></expr>;</expr_stmt>
	</block_content>}</block></function>

	<comment type="line" pos:start="567:9" pos:end="567:68">// Check for end of flight. Land if conditions are satisfied</comment>
	<function pos:start="568:9" pos:end="585:9"><type pos:start="568:9" pos:end="568:23"><specifier pos:start="568:9" pos:end="568:15">private</specifier> <name pos:start="568:17" pos:end="568:23">boolean</name></type> <name pos:start="568:25" pos:end="568:43">checkForEndOfFlight</name><parameter_list pos:start="568:44" pos:end="568:45">()</parameter_list> <block pos:start="568:47" pos:end="585:9">{<block_content pos:start="569:17" pos:end="584:28">
		<if_stmt pos:start="569:17" pos:end="570:37"><if pos:start="569:17" pos:end="570:37">if <condition pos:start="569:20" pos:end="569:75">(<expr pos:start="569:21" pos:end="569:74"><name pos:start="569:21" pos:end="569:34">flightDirector</name> <operator pos:start="569:36" pos:end="569:37">!=</operator> <literal type="null" pos:start="569:39" pos:end="569:42">null</literal> <operator pos:start="569:44" pos:end="569:45">&amp;&amp;</operator> <call pos:start="569:47" pos:end="569:74"><name pos:start="569:47" pos:end="569:72"><name pos:start="569:47" pos:end="569:60">flightDirector</name><operator pos:start="569:61" pos:end="569:61">.</operator><name pos:start="569:62" pos:end="569:72">readyToLand</name></name><argument_list pos:start="569:73" pos:end="569:74">()</argument_list></call></expr>)</condition><block type="pseudo" pos:start="570:25" pos:end="570:37"><block_content pos:start="570:25" pos:end="570:37">
			<return pos:start="570:25" pos:end="570:37">return <expr pos:start="570:32" pos:end="570:36"><literal type="boolean" pos:start="570:32" pos:end="570:36">false</literal></expr>;</return></block_content></block></if></if_stmt> <comment type="line" pos:start="570:39" pos:end="570:70">// it should have returned here.</comment>
		<if_stmt pos:start="571:17" pos:end="572:37"><if pos:start="571:17" pos:end="572:37">if <condition pos:start="571:20" pos:end="571:43">(<expr pos:start="571:21" pos:end="571:42"><call pos:start="571:21" pos:end="571:42"><name pos:start="571:21" pos:end="571:40"><name pos:start="571:21" pos:end="571:30">droneState</name><operator pos:start="571:31" pos:end="571:31">.</operator><name pos:start="571:32" pos:end="571:40">isLanding</name></name><argument_list pos:start="571:41" pos:end="571:42">()</argument_list></call></expr>)</condition><block type="pseudo" pos:start="572:25" pos:end="572:37"><block_content pos:start="572:25" pos:end="572:37">
			<return pos:start="572:25" pos:end="572:37">return <expr pos:start="572:32" pos:end="572:36"><literal type="boolean" pos:start="572:32" pos:end="572:36">false</literal></expr>;</return></block_content></block></if></if_stmt>
		<if_stmt pos:start="573:17" pos:end="574:37"><if pos:start="573:17" pos:end="574:37">if <condition pos:start="573:20" pos:end="573:44">(<expr pos:start="573:21" pos:end="573:43"><call pos:start="573:21" pos:end="573:43"><name pos:start="573:21" pos:end="573:41"><name pos:start="573:21" pos:end="573:30">droneState</name><operator pos:start="573:31" pos:end="573:31">.</operator><name pos:start="573:32" pos:end="573:41">isOnGround</name></name><argument_list pos:start="573:42" pos:end="573:43">()</argument_list></call></expr>)</condition><block type="pseudo" pos:start="574:25" pos:end="574:37"><block_content pos:start="574:25" pos:end="574:37">
			<return pos:start="574:25" pos:end="574:37">return <expr pos:start="574:32" pos:end="574:36"><literal type="boolean" pos:start="574:32" pos:end="574:36">false</literal></expr>;</return></block_content></block></if></if_stmt>
		<if_stmt pos:start="575:17" pos:end="576:37"><if pos:start="575:17" pos:end="576:37">if <condition pos:start="575:20" pos:end="575:41">(<expr pos:start="575:21" pos:end="575:40"><call pos:start="575:21" pos:end="575:40"><name pos:start="575:21" pos:end="575:38"><name pos:start="575:21" pos:end="575:30">droneState</name><operator pos:start="575:31" pos:end="575:31">.</operator><name pos:start="575:32" pos:end="575:38">isInAir</name></name><argument_list pos:start="575:39" pos:end="575:40">()</argument_list></call></expr>)</condition><block type="pseudo" pos:start="576:25" pos:end="576:37"><block_content pos:start="576:25" pos:end="576:37">
			<return pos:start="576:25" pos:end="576:37">return <expr pos:start="576:32" pos:end="576:36"><literal type="boolean" pos:start="576:32" pos:end="576:36">false</literal></expr>;</return></block_content></block></if></if_stmt>

		<comment type="line" pos:start="578:17" pos:end="578:28">// Otherwise</comment>
		<try pos:start="579:17" pos:end="583:17">try <block pos:start="579:21" pos:end="581:17">{<block_content pos:start="580:25" pos:end="580:31">
			<expr_stmt pos:start="580:25" pos:end="580:31"><expr pos:start="580:25" pos:end="580:30"><call pos:start="580:25" pos:end="580:30"><name pos:start="580:25" pos:end="580:28">land</name><argument_list pos:start="580:29" pos:end="580:30">()</argument_list></call></expr>;</expr_stmt>
		</block_content>}</block> <catch pos:start="581:19" pos:end="583:17">catch <parameter_list pos:start="581:25" pos:end="581:47">(<parameter pos:start="581:26" pos:end="581:46"><decl pos:start="581:26" pos:end="581:46"><type pos:start="581:26" pos:end="581:46"><name pos:start="581:26" pos:end="581:44">FlightZoneException</name></type> <name pos:start="581:46" pos:end="581:46">e</name></decl></parameter>)</parameter_list> <block pos:start="581:49" pos:end="583:17">{<block_content pos:start="582:25" pos:end="582:82">
			<expr_stmt pos:start="582:25" pos:end="582:82"><expr pos:start="582:25" pos:end="582:81"><call pos:start="582:25" pos:end="582:81"><name pos:start="582:25" pos:end="582:36"><name pos:start="582:25" pos:end="582:30">LOGGER</name><operator pos:start="582:31" pos:end="582:31">.</operator><name pos:start="582:32" pos:end="582:36">error</name></name><argument_list pos:start="582:37" pos:end="582:81">(<argument pos:start="582:38" pos:end="582:77"><expr pos:start="582:38" pos:end="582:77"><call pos:start="582:38" pos:end="582:51"><name pos:start="582:38" pos:end="582:49">getDroneName</name><argument_list pos:start="582:50" pos:end="582:51">()</argument_list></call> <operator pos:start="582:53" pos:end="582:53">+</operator> <literal type="string" pos:start="582:55" pos:end="582:77">" is not able to land!"</literal></expr></argument>, <argument pos:start="582:80" pos:end="582:80"><expr pos:start="582:80" pos:end="582:80"><name pos:start="582:80" pos:end="582:80">e</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		</block_content>}</block></catch></try>
		<return pos:start="584:17" pos:end="584:28">return <expr pos:start="584:24" pos:end="584:27"><literal type="boolean" pos:start="584:24" pos:end="584:27">true</literal></expr>;</return>
	</block_content>}</block></function>

	<comment type="block" format="javadoc" pos:start="587:9" pos:end="590:11">/**
	 *
	 * @return current safety mode state
	 */</comment>
	<function pos:start="591:9" pos:end="593:9"><type pos:start="591:9" pos:end="591:38"><specifier pos:start="591:9" pos:end="591:14">public</specifier> <name pos:start="591:16" pos:end="591:38">DroneSafetyStateManager</name></type> <name pos:start="591:40" pos:end="591:63">getFlightSafetyModeState</name><parameter_list pos:start="591:64" pos:end="591:65">()</parameter_list> <block pos:start="591:67" pos:end="593:9">{<block_content pos:start="592:17" pos:end="592:40">
		<return pos:start="592:17" pos:end="592:40">return <expr pos:start="592:24" pos:end="592:39"><name pos:start="592:24" pos:end="592:39">droneSafetyState</name></expr>;</return>
	</block_content>}</block></function>

	<function pos:start="595:9" pos:end="612:9"><type pos:start="595:9" pos:end="595:20"><specifier pos:start="595:9" pos:end="595:15">private</specifier> <name pos:start="595:17" pos:end="595:20">void</name></type> <name pos:start="595:22" pos:end="595:29">flyDrone</name><parameter_list pos:start="595:30" pos:end="595:31">()</parameter_list> <block pos:start="595:33" pos:end="612:9">{<block_content pos:start="597:17" pos:end="611:17">
		<comment type="line" pos:start="596:17" pos:end="596:66">// check to see if we are flying the right command</comment>
		<if_stmt pos:start="597:17" pos:end="599:17"><if pos:start="597:17" pos:end="599:17">if <condition pos:start="597:20" pos:end="597:44">(<expr pos:start="597:21" pos:end="597:43"><call pos:start="597:21" pos:end="597:39"><name pos:start="597:21" pos:end="597:37"><name pos:start="597:21" pos:end="597:32">commandQueue</name><operator pos:start="597:33" pos:end="597:33">.</operator><name pos:start="597:34" pos:end="597:37">size</name></name><argument_list pos:start="597:38" pos:end="597:39">()</argument_list></call> <operator pos:start="597:41" pos:end="597:41">&lt;</operator> <literal type="number" pos:start="597:43" pos:end="597:43">1</literal></expr>)</condition> <block pos:start="597:46" pos:end="599:17">{<block_content pos:start="598:25" pos:end="598:63">
			<expr_stmt pos:start="598:25" pos:end="598:63"><expr pos:start="598:25" pos:end="598:62"><call pos:start="598:25" pos:end="598:62"><name pos:start="598:25" pos:end="598:40"><name pos:start="598:25" pos:end="598:36">commandQueue</name><operator pos:start="598:37" pos:end="598:37">.</operator><name pos:start="598:38" pos:end="598:40">add</name></name><argument_list pos:start="598:41" pos:end="598:62">(<argument pos:start="598:42" pos:end="598:61"><expr pos:start="598:42" pos:end="598:61"><operator pos:start="598:42" pos:end="598:44">new</operator> <call pos:start="598:46" pos:end="598:61"><name pos:start="598:46" pos:end="598:56">StopCommand</name><argument_list pos:start="598:57" pos:end="598:61">(<argument pos:start="598:58" pos:end="598:60"><expr pos:start="598:58" pos:end="598:60"><literal type="number" pos:start="598:58" pos:end="598:60">0.0</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		</block_content>}</block></if></if_stmt>
		<if_stmt pos:start="600:17" pos:end="603:17"><if pos:start="600:17" pos:end="603:17">if <condition pos:start="600:20" pos:end="600:58">(<expr pos:start="600:21" pos:end="600:57"><call pos:start="600:21" pos:end="600:39"><name pos:start="600:21" pos:end="600:36"><name pos:start="600:21" pos:end="600:32">commandQueue</name><operator pos:start="600:33" pos:end="600:33">.</operator><name pos:start="600:34" pos:end="600:36">get</name></name><argument_list pos:start="600:37" pos:end="600:39">(<argument pos:start="600:38" pos:end="600:38"><expr pos:start="600:38" pos:end="600:38"><literal type="number" pos:start="600:38" pos:end="600:38">0</literal></expr></argument>)</argument_list></call> <operator pos:start="600:41" pos:end="600:42">!=</operator> <name pos:start="600:44" pos:end="600:57">currentCommand</name></expr>)</condition> <block pos:start="600:60" pos:end="603:17">{<block_content pos:start="601:25" pos:end="602:87">
			<expr_stmt pos:start="601:25" pos:end="601:61"><expr pos:start="601:25" pos:end="601:60"><name pos:start="601:25" pos:end="601:38">currentCommand</name> <operator pos:start="601:40" pos:end="601:40">=</operator> <call pos:start="601:42" pos:end="601:60"><name pos:start="601:42" pos:end="601:57"><name pos:start="601:42" pos:end="601:53">commandQueue</name><operator pos:start="601:54" pos:end="601:54">.</operator><name pos:start="601:55" pos:end="601:57">get</name></name><argument_list pos:start="601:58" pos:end="601:60">(<argument pos:start="601:59" pos:end="601:59"><expr pos:start="601:59" pos:end="601:59"><literal type="number" pos:start="601:59" pos:end="601:59">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt pos:start="602:25" pos:end="602:87"><expr pos:start="602:25" pos:end="602:86"><name pos:start="602:25" pos:end="602:39">currentExecutor</name> <operator pos:start="602:41" pos:end="602:41">=</operator> <call pos:start="602:43" pos:end="602:86"><name pos:start="602:43" pos:end="602:70"><name pos:start="602:43" pos:end="602:57">executorFactory</name><operator pos:start="602:58" pos:end="602:58">.</operator><name pos:start="602:59" pos:end="602:70">makeExecutor</name></name><argument_list pos:start="602:71" pos:end="602:86">(<argument pos:start="602:72" pos:end="602:85"><expr pos:start="602:72" pos:end="602:85"><name pos:start="602:72" pos:end="602:85">currentCommand</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		</block_content>}</block></if></if_stmt>

		<expr_stmt pos:start="605:17" pos:end="605:42"><expr pos:start="605:17" pos:end="605:41"><call pos:start="605:17" pos:end="605:41"><name pos:start="605:17" pos:end="605:39"><name pos:start="605:17" pos:end="605:31">currentExecutor</name><operator pos:start="605:32" pos:end="605:32">.</operator><name pos:start="605:33" pos:end="605:39">process</name></name><argument_list pos:start="605:40" pos:end="605:41">()</argument_list></call></expr>;</expr_stmt>

		<if_stmt pos:start="607:17" pos:end="611:17"><if pos:start="607:17" pos:end="611:17">if <condition pos:start="607:20" pos:end="607:49">(<expr pos:start="607:21" pos:end="607:48"><call pos:start="607:21" pos:end="607:48"><name pos:start="607:21" pos:end="607:46"><name pos:start="607:21" pos:end="607:35">currentExecutor</name><operator pos:start="607:36" pos:end="607:36">.</operator><name pos:start="607:37" pos:end="607:46">isFinished</name></name><argument_list pos:start="607:47" pos:end="607:48">()</argument_list></call></expr>)</condition> <block pos:start="607:51" pos:end="611:17">{<block_content pos:start="608:25" pos:end="610:111">
			<decl_stmt pos:start="608:25" pos:end="608:65"><decl pos:start="608:25" pos:end="608:64"><type pos:start="608:25" pos:end="608:31"><name pos:start="608:25" pos:end="608:31">Command</name></type> <name pos:start="608:33" pos:end="608:39">current</name> <init pos:start="608:41" pos:end="608:64">= <expr pos:start="608:43" pos:end="608:64"><call pos:start="608:43" pos:end="608:64"><name pos:start="608:43" pos:end="608:61"><name pos:start="608:43" pos:end="608:54">commandQueue</name><operator pos:start="608:55" pos:end="608:55">.</operator><name pos:start="608:56" pos:end="608:61">remove</name></name><argument_list pos:start="608:62" pos:end="608:64">(<argument pos:start="608:63" pos:end="608:63"><expr pos:start="608:63" pos:end="608:63"><literal type="number" pos:start="608:63" pos:end="608:63">0</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<expr_stmt pos:start="609:25" pos:end="609:55"><expr pos:start="609:25" pos:end="609:54"><call pos:start="609:25" pos:end="609:54"><name pos:start="609:25" pos:end="609:45"><name pos:start="609:25" pos:end="609:41">completedCommands</name><operator pos:start="609:42" pos:end="609:42">.</operator><name pos:start="609:43" pos:end="609:45">add</name></name><argument_list pos:start="609:46" pos:end="609:54">(<argument pos:start="609:47" pos:end="609:53"><expr pos:start="609:47" pos:end="609:53"><name pos:start="609:47" pos:end="609:53">current</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt pos:start="610:25" pos:end="610:111"><expr pos:start="610:25" pos:end="610:110"><call pos:start="610:25" pos:end="610:110"><name pos:start="610:25" pos:end="610:42"><name pos:start="610:25" pos:end="610:30">LOGGER</name><operator pos:start="610:31" pos:end="610:31">.</operator><name pos:start="610:32" pos:end="610:42">missionInfo</name></name><argument_list pos:start="610:43" pos:end="610:110">(<argument pos:start="610:44" pos:end="610:109"><expr pos:start="610:44" pos:end="610:109"><call pos:start="610:44" pos:end="610:63"><name pos:start="610:44" pos:end="610:61"><name pos:start="610:44" pos:end="610:48">drone</name><operator pos:start="610:49" pos:end="610:49">.</operator><name pos:start="610:50" pos:end="610:61">getDroneName</name></name><argument_list pos:start="610:62" pos:end="610:63">()</argument_list></call> <operator pos:start="610:65" pos:end="610:65">+</operator> <literal type="string" pos:start="610:67" pos:end="610:88">" command completed: "</literal> <operator pos:start="610:90" pos:end="610:90">+</operator> <call pos:start="610:92" pos:end="610:109"><name pos:start="610:92" pos:end="610:107"><name pos:start="610:92" pos:end="610:98">current</name><operator pos:start="610:99" pos:end="610:99">.</operator><name pos:start="610:100" pos:end="610:107">toString</name></name><argument_list pos:start="610:108" pos:end="610:109">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		</block_content>}</block></if></if_stmt>
	</block_content>}</block></function>

	<function pos:start="614:9" pos:end="624:9"><type pos:start="614:9" pos:end="614:23"><specifier pos:start="614:9" pos:end="614:15">private</specifier> <name pos:start="614:17" pos:end="614:23">boolean</name></type> <name pos:start="614:25" pos:end="614:35">isCompleted</name><parameter_list pos:start="614:36" pos:end="614:48">(<parameter pos:start="614:37" pos:end="614:47"><decl pos:start="614:37" pos:end="614:47"><type pos:start="614:37" pos:end="614:43"><name pos:start="614:37" pos:end="614:43">Command</name></type> <name pos:start="614:45" pos:end="614:47">ref</name></decl></parameter>)</parameter_list> <block pos:start="614:50" pos:end="624:9">{<block_content pos:start="615:17" pos:end="623:29">
		<expr_stmt pos:start="615:17" pos:end="615:40"><expr pos:start="615:17" pos:end="615:39"><call pos:start="615:17" pos:end="615:39"><name pos:start="615:17" pos:end="615:34"><name pos:start="615:17" pos:end="615:24">NullUtil</name><operator pos:start="615:25" pos:end="615:25">.</operator><name pos:start="615:26" pos:end="615:34">checkNull</name></name><argument_list pos:start="615:35" pos:end="615:39">(<argument pos:start="615:36" pos:end="615:38"><expr pos:start="615:36" pos:end="615:38"><name pos:start="615:36" pos:end="615:38">ref</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<decl_stmt pos:start="616:17" pos:end="616:30"><decl pos:start="616:17" pos:end="616:29"><type pos:start="616:17" pos:end="616:19"><name pos:start="616:17" pos:end="616:19">int</name></type> <name pos:start="616:21" pos:end="616:25">index</name> <init pos:start="616:27" pos:end="616:29">= <expr pos:start="616:29" pos:end="616:29"><literal type="number" pos:start="616:29" pos:end="616:29">0</literal></expr></init></decl>;</decl_stmt>
		<while pos:start="617:17" pos:end="622:17">while <condition pos:start="617:23" pos:end="617:56">(<expr pos:start="617:24" pos:end="617:55"><name pos:start="617:24" pos:end="617:28">index</name> <operator pos:start="617:30" pos:end="617:30">&lt;</operator> <call pos:start="617:32" pos:end="617:55"><name pos:start="617:32" pos:end="617:53"><name pos:start="617:32" pos:end="617:48">completedCommands</name><operator pos:start="617:49" pos:end="617:49">.</operator><name pos:start="617:50" pos:end="617:53">size</name></name><argument_list pos:start="617:54" pos:end="617:55">()</argument_list></call></expr>)</condition> <block pos:start="617:58" pos:end="622:17">{<block_content pos:start="618:25" pos:end="621:32">
			<if_stmt pos:start="618:25" pos:end="620:25"><if pos:start="618:25" pos:end="620:25">if <condition pos:start="618:28" pos:end="618:64">(<expr pos:start="618:29" pos:end="618:63"><call pos:start="618:29" pos:end="618:56"><name pos:start="618:29" pos:end="618:49"><name pos:start="618:29" pos:end="618:45">completedCommands</name><operator pos:start="618:46" pos:end="618:46">.</operator><name pos:start="618:47" pos:end="618:49">get</name></name><argument_list pos:start="618:50" pos:end="618:56">(<argument pos:start="618:51" pos:end="618:55"><expr pos:start="618:51" pos:end="618:55"><name pos:start="618:51" pos:end="618:55">index</name></expr></argument>)</argument_list></call> <operator pos:start="618:58" pos:end="618:59">==</operator> <name pos:start="618:61" pos:end="618:63">ref</name></expr>)</condition> <block pos:start="618:66" pos:end="620:25">{<block_content pos:start="619:33" pos:end="619:44">
				<return pos:start="619:33" pos:end="619:44">return <expr pos:start="619:40" pos:end="619:43"><literal type="boolean" pos:start="619:40" pos:end="619:43">true</literal></expr>;</return>
			</block_content>}</block></if></if_stmt>
			<expr_stmt pos:start="621:25" pos:end="621:32"><expr pos:start="621:25" pos:end="621:31"><operator pos:start="621:25" pos:end="621:26">++</operator><name pos:start="621:27" pos:end="621:31">index</name></expr>;</expr_stmt>
		</block_content>}</block></while>
		<return pos:start="623:17" pos:end="623:29">return <expr pos:start="623:24" pos:end="623:28"><literal type="boolean" pos:start="623:24" pos:end="623:28">false</literal></expr>;</return>
	</block_content>}</block></function>

	<function pos:start="626:9" pos:end="646:9"><type pos:start="626:9" pos:end="626:20"><specifier pos:start="626:9" pos:end="626:15">private</specifier> <name pos:start="626:17" pos:end="626:20">void</name></type> <name pos:start="626:22" pos:end="626:35">updateGuidance</name><parameter_list pos:start="626:36" pos:end="626:59">(<parameter pos:start="626:37" pos:end="626:58"><decl pos:start="626:37" pos:end="626:58"><type pos:start="626:37" pos:end="626:49"><name pos:start="626:37" pos:end="626:49"><name pos:start="626:37" pos:end="626:40">List</name><argument_list type="generic" pos:start="626:41" pos:end="626:49">&lt;<argument pos:start="626:42" pos:end="626:48"><name pos:start="626:42" pos:end="626:48">Command</name></argument>&gt;</argument_list></name></type> <name pos:start="626:51" pos:end="626:58">commands</name></decl></parameter>)</parameter_list> <block pos:start="626:61" pos:end="646:9">{<block_content pos:start="627:17" pos:end="645:17">
		<expr_stmt pos:start="627:17" pos:end="627:141"><expr pos:start="627:17" pos:end="627:140"><call pos:start="627:17" pos:end="627:140"><name pos:start="627:17" pos:end="627:28"><name pos:start="627:17" pos:end="627:22">LOGGER</name><operator pos:start="627:23" pos:end="627:23">.</operator><name pos:start="627:24" pos:end="627:28">debug</name></name><argument_list pos:start="627:29" pos:end="627:140">(<argument pos:start="627:30" pos:end="627:139"><expr pos:start="627:30" pos:end="627:139"><literal type="string" pos:start="627:30" pos:end="627:53">"New guidance from CA: "</literal> <operator pos:start="627:55" pos:end="627:55">+</operator> <call pos:start="627:57" pos:end="627:73"><name pos:start="627:57" pos:end="627:71"><name pos:start="627:57" pos:end="627:64">commands</name><operator pos:start="627:65" pos:end="627:65">.</operator><name pos:start="627:66" pos:end="627:71">stream</name></name><argument_list pos:start="627:72" pos:end="627:73">()</argument_list></call><operator pos:start="627:74" pos:end="627:74">.</operator><call pos:start="627:75" pos:end="627:95"><name pos:start="627:75" pos:end="627:77">map</name><argument_list pos:start="627:78" pos:end="627:95">(<argument pos:start="627:79" pos:end="627:94"><expr pos:start="627:79" pos:end="627:94"><name pos:start="627:79" pos:end="627:84">Object</name><operator pos:start="627:85" pos:end="627:86">::</operator><name pos:start="627:87" pos:end="627:94">toString</name></expr></argument>)</argument_list></call><operator pos:start="627:96" pos:end="627:96">.</operator><call pos:start="627:97" pos:end="627:139"><name pos:start="627:97" pos:end="627:103">collect</name><argument_list pos:start="627:104" pos:end="627:139">(<argument pos:start="627:105" pos:end="627:138"><expr pos:start="627:105" pos:end="627:138"><call pos:start="627:105" pos:end="627:138"><name pos:start="627:105" pos:end="627:122"><name pos:start="627:105" pos:end="627:114">Collectors</name><operator pos:start="627:115" pos:end="627:115">.</operator><name pos:start="627:116" pos:end="627:122">joining</name></name><argument_list pos:start="627:123" pos:end="627:138">(<argument pos:start="627:124" pos:end="627:127"><expr pos:start="627:124" pos:end="627:127"><literal type="string" pos:start="627:124" pos:end="627:127">", "</literal></expr></argument>, <argument pos:start="627:130" pos:end="627:132"><expr pos:start="627:130" pos:end="627:132"><literal type="string" pos:start="627:130" pos:end="627:132">"["</literal></expr></argument>, <argument pos:start="627:135" pos:end="627:137"><expr pos:start="627:135" pos:end="627:137"><literal type="string" pos:start="627:135" pos:end="627:137">"]"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt pos:start="628:17" pos:end="628:45"><expr pos:start="628:17" pos:end="628:44"><call pos:start="628:17" pos:end="628:44"><name pos:start="628:17" pos:end="628:34"><name pos:start="628:17" pos:end="628:24">NullUtil</name><operator pos:start="628:25" pos:end="628:25">.</operator><name pos:start="628:26" pos:end="628:34">checkNull</name></name><argument_list pos:start="628:35" pos:end="628:44">(<argument pos:start="628:36" pos:end="628:43"><expr pos:start="628:36" pos:end="628:43"><name pos:start="628:36" pos:end="628:43">commands</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<comment type="line" pos:start="629:17" pos:end="629:72">// find the first item in commands that is not completed</comment>
		<comment type="line" pos:start="630:17" pos:end="630:85">// what if the first command is new and a later command is completed?</comment>
		<decl_stmt pos:start="631:17" pos:end="631:30"><decl pos:start="631:17" pos:end="631:29"><type pos:start="631:17" pos:end="631:19"><name pos:start="631:17" pos:end="631:19">int</name></type> <name pos:start="631:21" pos:end="631:25">index</name> <init pos:start="631:27" pos:end="631:29">= <expr pos:start="631:29" pos:end="631:29"><literal type="number" pos:start="631:29" pos:end="631:29">0</literal></expr></init></decl>;</decl_stmt>

		<while pos:start="633:17" pos:end="635:17">while <condition pos:start="633:23" pos:end="633:83">(<expr pos:start="633:24" pos:end="633:82"><name pos:start="633:24" pos:end="633:28">index</name> <operator pos:start="633:30" pos:end="633:30">&lt;</operator> <call pos:start="633:32" pos:end="633:46"><name pos:start="633:32" pos:end="633:44"><name pos:start="633:32" pos:end="633:39">commands</name><operator pos:start="633:40" pos:end="633:40">.</operator><name pos:start="633:41" pos:end="633:44">size</name></name><argument_list pos:start="633:45" pos:end="633:46">()</argument_list></call> <operator pos:start="633:48" pos:end="633:49">&amp;&amp;</operator> <call pos:start="633:51" pos:end="633:82"><name pos:start="633:51" pos:end="633:61">isCompleted</name><argument_list pos:start="633:62" pos:end="633:82">(<argument pos:start="633:63" pos:end="633:81"><expr pos:start="633:63" pos:end="633:81"><call pos:start="633:63" pos:end="633:81"><name pos:start="633:63" pos:end="633:74"><name pos:start="633:63" pos:end="633:70">commands</name><operator pos:start="633:71" pos:end="633:71">.</operator><name pos:start="633:72" pos:end="633:74">get</name></name><argument_list pos:start="633:75" pos:end="633:81">(<argument pos:start="633:76" pos:end="633:80"><expr pos:start="633:76" pos:end="633:80"><name pos:start="633:76" pos:end="633:80">index</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="633:85" pos:end="635:17">{<block_content pos:start="634:25" pos:end="634:32">
			<expr_stmt pos:start="634:25" pos:end="634:32"><expr pos:start="634:25" pos:end="634:31"><operator pos:start="634:25" pos:end="634:26">++</operator><name pos:start="634:27" pos:end="634:31">index</name></expr>;</expr_stmt>
		</block_content>}</block></while>

		<expr_stmt pos:start="637:17" pos:end="637:37"><expr pos:start="637:17" pos:end="637:36"><call pos:start="637:17" pos:end="637:36"><name pos:start="637:17" pos:end="637:34"><name pos:start="637:17" pos:end="637:28">commandQueue</name><operator pos:start="637:29" pos:end="637:29">.</operator><name pos:start="637:30" pos:end="637:34">clear</name></name><argument_list pos:start="637:35" pos:end="637:36">()</argument_list></call></expr>;</expr_stmt>
		<if_stmt pos:start="638:17" pos:end="645:17"><if pos:start="638:17" pos:end="640:17">if <condition pos:start="638:20" pos:end="638:45">(<expr pos:start="638:21" pos:end="638:44"><name pos:start="638:21" pos:end="638:25">index</name> <operator pos:start="638:27" pos:end="638:28">&gt;=</operator> <call pos:start="638:30" pos:end="638:44"><name pos:start="638:30" pos:end="638:42"><name pos:start="638:30" pos:end="638:37">commands</name><operator pos:start="638:38" pos:end="638:38">.</operator><name pos:start="638:39" pos:end="638:42">size</name></name><argument_list pos:start="638:43" pos:end="638:44">()</argument_list></call></expr>)</condition> <block pos:start="638:47" pos:end="640:17">{<block_content pos:start="639:25" pos:end="639:63">
			<expr_stmt pos:start="639:25" pos:end="639:63"><expr pos:start="639:25" pos:end="639:62"><call pos:start="639:25" pos:end="639:62"><name pos:start="639:25" pos:end="639:40"><name pos:start="639:25" pos:end="639:36">commandQueue</name><operator pos:start="639:37" pos:end="639:37">.</operator><name pos:start="639:38" pos:end="639:40">add</name></name><argument_list pos:start="639:41" pos:end="639:62">(<argument pos:start="639:42" pos:end="639:61"><expr pos:start="639:42" pos:end="639:61"><operator pos:start="639:42" pos:end="639:44">new</operator> <call pos:start="639:46" pos:end="639:61"><name pos:start="639:46" pos:end="639:56">StopCommand</name><argument_list pos:start="639:57" pos:end="639:61">(<argument pos:start="639:58" pos:end="639:60"><expr pos:start="639:58" pos:end="639:60"><literal type="number" pos:start="639:58" pos:end="639:60">0.0</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		</block_content>}</block></if> <else pos:start="640:19" pos:end="645:17">else <block pos:start="640:24" pos:end="645:17">{<block_content pos:start="641:25" pos:end="644:25">
			<decl_stmt pos:start="641:25" pos:end="641:91"><decl pos:start="641:25" pos:end="641:90"><type pos:start="641:25" pos:end="641:37"><name pos:start="641:25" pos:end="641:37"><name pos:start="641:25" pos:end="641:28">List</name><argument_list type="generic" pos:start="641:29" pos:end="641:37">&lt;<argument pos:start="641:30" pos:end="641:36"><name pos:start="641:30" pos:end="641:36">Command</name></argument>&gt;</argument_list></name></type> <name pos:start="641:39" pos:end="641:47">remaining</name> <init pos:start="641:49" pos:end="641:90">= <expr pos:start="641:51" pos:end="641:90"><call pos:start="641:51" pos:end="641:90"><name pos:start="641:51" pos:end="641:66"><name pos:start="641:51" pos:end="641:58">commands</name><operator pos:start="641:59" pos:end="641:59">.</operator><name pos:start="641:60" pos:end="641:66">subList</name></name><argument_list pos:start="641:67" pos:end="641:90">(<argument pos:start="641:68" pos:end="641:72"><expr pos:start="641:68" pos:end="641:72"><name pos:start="641:68" pos:end="641:72">index</name></expr></argument>, <argument pos:start="641:75" pos:end="641:89"><expr pos:start="641:75" pos:end="641:89"><call pos:start="641:75" pos:end="641:89"><name pos:start="641:75" pos:end="641:87"><name pos:start="641:75" pos:end="641:82">commands</name><operator pos:start="641:83" pos:end="641:83">.</operator><name pos:start="641:84" pos:end="641:87">size</name></name><argument_list pos:start="641:88" pos:end="641:89">()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<for pos:start="642:25" pos:end="644:25">for <control pos:start="642:29" pos:end="642:53">(<init pos:start="642:30" pos:end="642:52"><decl pos:start="642:30" pos:end="642:52"><type pos:start="642:30" pos:end="642:36"><name pos:start="642:30" pos:end="642:36">Command</name></type> <name pos:start="642:38" pos:end="642:40">cmd</name> <range pos:start="642:42" pos:end="642:52">: <expr pos:start="642:44" pos:end="642:52"><name pos:start="642:44" pos:end="642:52">remaining</name></expr></range></decl></init>)</control> <block pos:start="642:55" pos:end="644:25">{<block_content pos:start="643:33" pos:end="643:54">
				<expr_stmt pos:start="643:33" pos:end="643:54"><expr pos:start="643:33" pos:end="643:53"><call pos:start="643:33" pos:end="643:53"><name pos:start="643:33" pos:end="643:48"><name pos:start="643:33" pos:end="643:44">commandQueue</name><operator pos:start="643:45" pos:end="643:45">.</operator><name pos:start="643:46" pos:end="643:48">add</name></name><argument_list pos:start="643:49" pos:end="643:53">(<argument pos:start="643:50" pos:end="643:52"><expr pos:start="643:50" pos:end="643:52"><name pos:start="643:50" pos:end="643:52">cmd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			</block_content>}</block></for>
		</block_content>}</block></else></if_stmt>
	</block_content>}</block></function>

	<function pos:start="648:9" pos:end="651:9"><type pos:start="648:9" pos:end="648:20"><specifier pos:start="648:9" pos:end="648:15">private</specifier> <name pos:start="648:17" pos:end="648:20">void</name></type> <name pos:start="648:22" pos:end="648:31">clearGoals</name><parameter_list pos:start="648:32" pos:end="648:33">()</parameter_list> <block pos:start="648:35" pos:end="651:9">{<block_content pos:start="649:17" pos:end="650:36">
		<expr_stmt pos:start="649:17" pos:end="649:30"><expr pos:start="649:17" pos:end="649:29"><call pos:start="649:17" pos:end="649:29"><name pos:start="649:17" pos:end="649:27"><name pos:start="649:17" pos:end="649:21">goals</name><operator pos:start="649:22" pos:end="649:22">.</operator><name pos:start="649:23" pos:end="649:27">clear</name></name><argument_list pos:start="649:28" pos:end="649:29">()</argument_list></call></expr>;</expr_stmt>
		<expr_stmt pos:start="650:17" pos:end="650:36"><expr pos:start="650:17" pos:end="650:35"><call pos:start="650:17" pos:end="650:35"><name pos:start="650:17" pos:end="650:33"><name pos:start="650:17" pos:end="650:27">activeGoals</name><operator pos:start="650:28" pos:end="650:28">.</operator><name pos:start="650:29" pos:end="650:33">clear</name></name><argument_list pos:start="650:34" pos:end="650:35">()</argument_list></call></expr>;</expr_stmt>
	</block_content>}</block></function>

	<function pos:start="653:9" pos:end="682:9"><type pos:start="653:9" pos:end="653:20"><specifier pos:start="653:9" pos:end="653:15">private</specifier> <name pos:start="653:17" pos:end="653:20">void</name></type> <name pos:start="653:22" pos:end="653:28">addGoal</name><parameter_list pos:start="653:29" pos:end="653:47">(<parameter pos:start="653:30" pos:end="653:46"><decl pos:start="653:30" pos:end="653:46"><type pos:start="653:30" pos:end="653:41"><name pos:start="653:30" pos:end="653:41">AbstractGoal</name></type> <name pos:start="653:43" pos:end="653:46">goal</name></decl></parameter>)</parameter_list> <block pos:start="653:49" pos:end="682:9">{<block_content pos:start="654:17" pos:end="681:32">
		<expr_stmt pos:start="654:17" pos:end="654:41"><expr pos:start="654:17" pos:end="654:40"><call pos:start="654:17" pos:end="654:40"><name pos:start="654:17" pos:end="654:34"><name pos:start="654:17" pos:end="654:24">NullUtil</name><operator pos:start="654:25" pos:end="654:25">.</operator><name pos:start="654:26" pos:end="654:34">checkNull</name></name><argument_list pos:start="654:35" pos:end="654:40">(<argument pos:start="654:36" pos:end="654:39"><expr pos:start="654:36" pos:end="654:39"><name pos:start="654:36" pos:end="654:39">goal</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		<comment type="line" pos:start="656:17" pos:end="656:57">// ManagedDrone should observe each goal.</comment>
		<comment type="line" pos:start="657:17" pos:end="657:94">// When the goal changes state, ManagedDrone needs to update its active goals.</comment>
		<expr_stmt pos:start="658:17" pos:end="658:39"><expr pos:start="658:17" pos:end="658:38"><call pos:start="658:17" pos:end="658:38"><name pos:start="658:17" pos:end="658:32"><name pos:start="658:17" pos:end="658:20">goal</name><operator pos:start="658:21" pos:end="658:21">.</operator><name pos:start="658:22" pos:end="658:32">addObserver</name></name><argument_list pos:start="658:33" pos:end="658:38">(<argument pos:start="658:34" pos:end="658:37"><expr pos:start="658:34" pos:end="658:37"><name pos:start="658:34" pos:end="658:37">this</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt pos:start="659:17" pos:end="659:58"><expr pos:start="659:17" pos:end="659:57"><operator pos:start="659:17" pos:end="659:17">(</operator><operator pos:start="659:18" pos:end="659:18">(</operator><name pos:start="659:19" pos:end="659:31">AbstractDrone</name><operator pos:start="659:32" pos:end="659:32">)</operator> <name pos:start="659:34" pos:end="659:38">drone</name><operator pos:start="659:39" pos:end="659:39">)</operator><operator pos:start="659:40" pos:end="659:40">.</operator><call pos:start="659:41" pos:end="659:57"><name pos:start="659:41" pos:end="659:51">addObserver</name><argument_list pos:start="659:52" pos:end="659:57">(<argument pos:start="659:53" pos:end="659:56"><expr pos:start="659:53" pos:end="659:56"><name pos:start="659:53" pos:end="659:56">goal</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		<comment type="line" pos:start="661:17" pos:end="661:86">// If the new goal is a WaypointGoal, it needs to observe the previous</comment>
		<comment type="line" pos:start="662:17" pos:end="662:48">// WaypointGoal (if one exists).</comment>
		<if_stmt pos:start="663:17" pos:end="679:17"><if pos:start="663:17" pos:end="679:17">if <condition pos:start="663:20" pos:end="663:49">(<expr pos:start="663:21" pos:end="663:48"><name pos:start="663:21" pos:end="663:24">goal</name> <operator pos:start="663:26" pos:end="663:35">instanceof</operator> <name pos:start="663:37" pos:end="663:48">WaypointGoal</name></expr>)</condition> <block pos:start="663:51" pos:end="679:17">{<block_content pos:start="664:25" pos:end="677:25">
			<decl_stmt pos:start="664:25" pos:end="664:49"><decl pos:start="664:25" pos:end="664:48"><type pos:start="664:25" pos:end="664:27"><name pos:start="664:25" pos:end="664:27">int</name></type> <name pos:start="664:29" pos:end="664:43">lastWaypointIdx</name> <init pos:start="664:45" pos:end="664:48">= <expr pos:start="664:47" pos:end="664:48"><operator pos:start="664:47" pos:end="664:47">-</operator><literal type="number" pos:start="664:48" pos:end="664:48">1</literal></expr></init></decl>;</decl_stmt>

			<comment type="line" pos:start="666:25" pos:end="666:72">// Find the index of the previous waypoint goal.</comment>
			<for pos:start="667:25" pos:end="671:25">for <control pos:start="667:29" pos:end="667:62">(<init pos:start="667:30" pos:end="667:39"><decl pos:start="667:30" pos:end="667:38"><type pos:start="667:30" pos:end="667:32"><name pos:start="667:30" pos:end="667:32">int</name></type> <name pos:start="667:34" pos:end="667:34">i</name> <init pos:start="667:36" pos:end="667:38">= <expr pos:start="667:38" pos:end="667:38"><literal type="number" pos:start="667:38" pos:end="667:38">0</literal></expr></init></decl>;</init> <condition pos:start="667:41" pos:end="667:57"><expr pos:start="667:41" pos:end="667:56"><name pos:start="667:41" pos:end="667:41">i</name> <operator pos:start="667:43" pos:end="667:43">&lt;</operator> <call pos:start="667:45" pos:end="667:56"><name pos:start="667:45" pos:end="667:54"><name pos:start="667:45" pos:end="667:49">goals</name><operator pos:start="667:50" pos:end="667:50">.</operator><name pos:start="667:51" pos:end="667:54">size</name></name><argument_list pos:start="667:55" pos:end="667:56">()</argument_list></call></expr>;</condition> <incr pos:start="667:59" pos:end="667:61"><expr pos:start="667:59" pos:end="667:61"><name pos:start="667:59" pos:end="667:59">i</name><operator pos:start="667:60" pos:end="667:61">++</operator></expr></incr>)</control> <block pos:start="667:64" pos:end="671:25">{<block_content pos:start="668:33" pos:end="670:33">
				<if_stmt pos:start="668:33" pos:end="670:33"><if pos:start="668:33" pos:end="670:33">if <condition pos:start="668:36" pos:end="668:73">(<expr pos:start="668:37" pos:end="668:72"><call pos:start="668:37" pos:end="668:48"><name pos:start="668:37" pos:end="668:45"><name pos:start="668:37" pos:end="668:41">goals</name><operator pos:start="668:42" pos:end="668:42">.</operator><name pos:start="668:43" pos:end="668:45">get</name></name><argument_list pos:start="668:46" pos:end="668:48">(<argument pos:start="668:47" pos:end="668:47"><expr pos:start="668:47" pos:end="668:47"><name pos:start="668:47" pos:end="668:47">i</name></expr></argument>)</argument_list></call> <operator pos:start="668:50" pos:end="668:59">instanceof</operator> <name pos:start="668:61" pos:end="668:72">WaypointGoal</name></expr>)</condition> <block pos:start="668:75" pos:end="670:33">{<block_content pos:start="669:41" pos:end="669:60">
					<expr_stmt pos:start="669:41" pos:end="669:60"><expr pos:start="669:41" pos:end="669:59"><name pos:start="669:41" pos:end="669:55">lastWaypointIdx</name> <operator pos:start="669:57" pos:end="669:57">=</operator> <name pos:start="669:59" pos:end="669:59">i</name></expr>;</expr_stmt>
				</block_content>}</block></if></if_stmt>
			</block_content>}</block></for>

			<comment type="line" pos:start="673:25" pos:end="673:100">// If there is a previous waypoint goal, make the new goal an observe of it.</comment>
			<comment type="line" pos:start="674:25" pos:end="674:100">// When the previous waypoint is completed, the new goal will become active.</comment>
			<if_stmt pos:start="675:25" pos:end="677:25"><if pos:start="675:25" pos:end="677:25">if <condition pos:start="675:28" pos:end="675:49">(<expr pos:start="675:29" pos:end="675:48"><name pos:start="675:29" pos:end="675:43">lastWaypointIdx</name> <operator pos:start="675:45" pos:end="675:46">&gt;=</operator> <literal type="number" pos:start="675:48" pos:end="675:48">0</literal></expr>)</condition> <block pos:start="675:51" pos:end="677:25">{<block_content pos:start="676:33" pos:end="676:77">
				<expr_stmt pos:start="676:33" pos:end="676:77"><expr pos:start="676:33" pos:end="676:76"><call pos:start="676:33" pos:end="676:58"><name pos:start="676:33" pos:end="676:41"><name pos:start="676:33" pos:end="676:37">goals</name><operator pos:start="676:38" pos:end="676:38">.</operator><name pos:start="676:39" pos:end="676:41">get</name></name><argument_list pos:start="676:42" pos:end="676:58">(<argument pos:start="676:43" pos:end="676:57"><expr pos:start="676:43" pos:end="676:57"><name pos:start="676:43" pos:end="676:57">lastWaypointIdx</name></expr></argument>)</argument_list></call><operator pos:start="676:59" pos:end="676:59">.</operator><call pos:start="676:60" pos:end="676:76"><name pos:start="676:60" pos:end="676:70">addObserver</name><argument_list pos:start="676:71" pos:end="676:76">(<argument pos:start="676:72" pos:end="676:75"><expr pos:start="676:72" pos:end="676:75"><name pos:start="676:72" pos:end="676:75">goal</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			</block_content>}</block></if></if_stmt>

		</block_content>}</block></if></if_stmt>

		<expr_stmt pos:start="681:17" pos:end="681:32"><expr pos:start="681:17" pos:end="681:31"><call pos:start="681:17" pos:end="681:31"><name pos:start="681:17" pos:end="681:25"><name pos:start="681:17" pos:end="681:21">goals</name><operator pos:start="681:22" pos:end="681:22">.</operator><name pos:start="681:23" pos:end="681:25">add</name></name><argument_list pos:start="681:26" pos:end="681:31">(<argument pos:start="681:27" pos:end="681:30"><expr pos:start="681:27" pos:end="681:30"><name pos:start="681:27" pos:end="681:30">goal</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	</block_content>}</block></function>
	<comment type="line" pos:start="683:9" pos:end="683:20">// endregion</comment>
}</block></class>
</unit>
