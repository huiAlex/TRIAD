<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="Java" filename="flatCode/KMLMapCreator.java" pos:tabs="8"><package pos:start="1:1" pos:end="1:34">package <name pos:start="1:9" pos:end="1:33"><name pos:start="1:9" pos:end="1:11">edu</name><operator pos:start="1:12" pos:end="1:12">.</operator><name pos:start="1:13" pos:end="1:14">nd</name><operator pos:start="1:15" pos:end="1:15">.</operator><name pos:start="1:16" pos:end="1:24">dronology</name><operator pos:start="1:25" pos:end="1:25">.</operator><name pos:start="1:26" pos:end="1:29">misc</name><operator pos:start="1:30" pos:end="1:30">.</operator><name pos:start="1:31" pos:end="1:33">kml</name></name>;</package>

<import pos:start="3:1" pos:end="3:30">import <name pos:start="3:8" pos:end="3:29"><name pos:start="3:8" pos:end="3:11">java</name><operator pos:start="3:12" pos:end="3:12">.</operator><name pos:start="3:13" pos:end="3:14">io</name><operator pos:start="3:15" pos:end="3:15">.</operator><name pos:start="3:16" pos:end="3:29">BufferedReader</name></name>;</import>
<import pos:start="4:1" pos:end="4:20">import <name pos:start="4:8" pos:end="4:19"><name pos:start="4:8" pos:end="4:11">java</name><operator pos:start="4:12" pos:end="4:12">.</operator><name pos:start="4:13" pos:end="4:14">io</name><operator pos:start="4:15" pos:end="4:15">.</operator><name pos:start="4:16" pos:end="4:19">File</name></name>;</import>
<import pos:start="5:1" pos:end="5:37">import <name pos:start="5:8" pos:end="5:36"><name pos:start="5:8" pos:end="5:11">java</name><operator pos:start="5:12" pos:end="5:12">.</operator><name pos:start="5:13" pos:end="5:14">io</name><operator pos:start="5:15" pos:end="5:15">.</operator><name pos:start="5:16" pos:end="5:36">FileNotFoundException</name></name>;</import>
<import pos:start="6:1" pos:end="6:26">import <name pos:start="6:8" pos:end="6:25"><name pos:start="6:8" pos:end="6:11">java</name><operator pos:start="6:12" pos:end="6:12">.</operator><name pos:start="6:13" pos:end="6:14">io</name><operator pos:start="6:15" pos:end="6:15">.</operator><name pos:start="6:16" pos:end="6:25">FileReader</name></name>;</import>
<import pos:start="7:1" pos:end="7:26">import <name pos:start="7:8" pos:end="7:25"><name pos:start="7:8" pos:end="7:11">java</name><operator pos:start="7:12" pos:end="7:12">.</operator><name pos:start="7:13" pos:end="7:14">io</name><operator pos:start="7:15" pos:end="7:15">.</operator><name pos:start="7:16" pos:end="7:25">FileWriter</name></name>;</import>
<import pos:start="8:1" pos:end="8:27">import <name pos:start="8:8" pos:end="8:26"><name pos:start="8:8" pos:end="8:11">java</name><operator pos:start="8:12" pos:end="8:12">.</operator><name pos:start="8:13" pos:end="8:14">io</name><operator pos:start="8:15" pos:end="8:15">.</operator><name pos:start="8:16" pos:end="8:26">IOException</name></name>;</import>
<import pos:start="9:1" pos:end="9:22">import <name pos:start="9:8" pos:end="9:21"><name pos:start="9:8" pos:end="9:11">java</name><operator pos:start="9:12" pos:end="9:12">.</operator><name pos:start="9:13" pos:end="9:14">io</name><operator pos:start="9:15" pos:end="9:15">.</operator><name pos:start="9:16" pos:end="9:21">Writer</name></name>;</import>
<import pos:start="10:1" pos:end="10:27">import <name pos:start="10:8" pos:end="10:26"><name pos:start="10:8" pos:end="10:11">java</name><operator pos:start="10:12" pos:end="10:12">.</operator><name pos:start="10:13" pos:end="10:15">nio</name><operator pos:start="10:16" pos:end="10:16">.</operator><name pos:start="10:17" pos:end="10:20">file</name><operator pos:start="10:21" pos:end="10:21">.</operator><name pos:start="10:22" pos:end="10:26">Files</name></name>;</import>
<import pos:start="11:1" pos:end="11:27">import <name pos:start="11:8" pos:end="11:26"><name pos:start="11:8" pos:end="11:11">java</name><operator pos:start="11:12" pos:end="11:12">.</operator><name pos:start="11:13" pos:end="11:15">nio</name><operator pos:start="11:16" pos:end="11:16">.</operator><name pos:start="11:17" pos:end="11:20">file</name><operator pos:start="11:21" pos:end="11:21">.</operator><name pos:start="11:22" pos:end="11:26">Paths</name></name>;</import>
<import pos:start="12:1" pos:end="12:27">import <name pos:start="12:8" pos:end="12:26"><name pos:start="12:8" pos:end="12:11">java</name><operator pos:start="12:12" pos:end="12:12">.</operator><name pos:start="12:13" pos:end="12:16">util</name><operator pos:start="12:17" pos:end="12:17">.</operator><name pos:start="12:18" pos:end="12:26">ArrayList</name></name>;</import>
<import pos:start="13:1" pos:end="13:22">import <name pos:start="13:8" pos:end="13:21"><name pos:start="13:8" pos:end="13:11">java</name><operator pos:start="13:12" pos:end="13:12">.</operator><name pos:start="13:13" pos:end="13:16">util</name><operator pos:start="13:17" pos:end="13:17">.</operator><name pos:start="13:18" pos:end="13:21">List</name></name>;</import>

<import pos:start="15:1" pos:end="15:70">import <name pos:start="15:8" pos:end="15:69"><name pos:start="15:8" pos:end="15:10">edu</name><operator pos:start="15:11" pos:end="15:11">.</operator><name pos:start="15:12" pos:end="15:13">nd</name><operator pos:start="15:14" pos:end="15:14">.</operator><name pos:start="15:15" pos:end="15:23">dronology</name><operator pos:start="15:24" pos:end="15:24">.</operator><name pos:start="15:25" pos:end="15:32">gstation</name><operator pos:start="15:33" pos:end="15:33">.</operator><name pos:start="15:34" pos:end="15:42">connector</name><operator pos:start="15:43" pos:end="15:43">.</operator><name pos:start="15:44" pos:end="15:51">messages</name><operator pos:start="15:52" pos:end="15:52">.</operator><name pos:start="15:53" pos:end="15:69">UAVMessageFactory</name></name>;</import>
<import pos:start="16:1" pos:end="16:68">import <name pos:start="16:8" pos:end="16:67"><name pos:start="16:8" pos:end="16:10">edu</name><operator pos:start="16:11" pos:end="16:11">.</operator><name pos:start="16:12" pos:end="16:13">nd</name><operator pos:start="16:14" pos:end="16:14">.</operator><name pos:start="16:15" pos:end="16:23">dronology</name><operator pos:start="16:24" pos:end="16:24">.</operator><name pos:start="16:25" pos:end="16:32">gstation</name><operator pos:start="16:33" pos:end="16:33">.</operator><name pos:start="16:34" pos:end="16:42">connector</name><operator pos:start="16:43" pos:end="16:43">.</operator><name pos:start="16:44" pos:end="16:51">messages</name><operator pos:start="16:52" pos:end="16:52">.</operator><name pos:start="16:53" pos:end="16:67">UAVStateMessage</name></name>;</import>

<class pos:start="18:1" pos:end="192:1"><specifier pos:start="18:1" pos:end="18:6">public</specifier> class <name pos:start="18:14" pos:end="18:26">KMLMapCreator</name> <block pos:start="18:28" pos:end="192:1">{

	<decl_stmt pos:start="20:9" pos:end="20:52"><decl pos:start="20:9" pos:end="20:51"><type pos:start="20:9" pos:end="20:35"><specifier pos:start="20:9" pos:end="20:15">private</specifier> <specifier pos:start="20:17" pos:end="20:22">static</specifier> <specifier pos:start="20:24" pos:end="20:28">final</specifier> <name pos:start="20:30" pos:end="20:35">String</name></type> <name pos:start="20:37" pos:end="20:41">UAVID</name> <init pos:start="20:43" pos:end="20:51">= <expr pos:start="20:45" pos:end="20:51"><literal type="string" pos:start="20:45" pos:end="20:51">"IRIS2"</literal></expr></init></decl>;</decl_stmt>
	<decl_stmt pos:start="21:9" pos:end="21:39"><decl pos:start="21:9" pos:end="21:38"><type pos:start="21:9" pos:end="21:22"><specifier pos:start="21:9" pos:end="21:15">private</specifier> <name pos:start="21:17" pos:end="21:22">String</name></type> <name pos:start="21:24" pos:end="21:27">name</name> <init pos:start="21:29" pos:end="21:38">= <expr pos:start="21:31" pos:end="21:38"><literal type="string" pos:start="21:31" pos:end="21:38">"result"</literal></expr></init></decl>;</decl_stmt>
	<decl_stmt pos:start="22:9" pos:end="22:50"><decl pos:start="22:9" pos:end="22:49"><type pos:start="22:9" pos:end="22:22"><specifier pos:start="22:9" pos:end="22:15">private</specifier> <name pos:start="22:17" pos:end="22:22">String</name></type> <name pos:start="22:24" pos:end="22:31">datapath</name> <init pos:start="22:33" pos:end="22:49">= <expr pos:start="22:35" pos:end="22:49"><literal type="string" pos:start="22:35" pos:end="22:49">"d:\\kmlexport"</literal></expr></init></decl>;</decl_stmt>

	<function pos:start="24:9" pos:end="28:9"><type pos:start="24:9" pos:end="24:26"><specifier pos:start="24:9" pos:end="24:14">public</specifier> <specifier pos:start="24:16" pos:end="24:21">static</specifier> <name pos:start="24:23" pos:end="24:26">void</name></type> <name pos:start="24:28" pos:end="24:31">main</name><parameter_list pos:start="24:32" pos:end="24:46">(<parameter pos:start="24:33" pos:end="24:45"><decl pos:start="24:33" pos:end="24:45"><type pos:start="24:33" pos:end="24:40"><name pos:start="24:33" pos:end="24:40"><name pos:start="24:33" pos:end="24:38">String</name><index pos:start="24:39" pos:end="24:40">[]</index></name></type> <name pos:start="24:42" pos:end="24:45">args</name></decl></parameter>)</parameter_list> <block pos:start="24:48" pos:end="28:9">{<block_content pos:start="26:17" pos:end="26:65">

		<expr_stmt pos:start="26:17" pos:end="26:65"><expr pos:start="26:17" pos:end="26:64"><operator pos:start="26:17" pos:end="26:19">new</operator> <call pos:start="26:21" pos:end="26:35"><name pos:start="26:21" pos:end="26:33">KMLMapCreator</name><argument_list pos:start="26:34" pos:end="26:35">()</argument_list></call><operator pos:start="26:36" pos:end="26:36">.</operator><call pos:start="26:37" pos:end="26:64"><name pos:start="26:37" pos:end="26:49">createKMLFile</name><argument_list pos:start="26:50" pos:end="26:64">(<argument pos:start="26:51" pos:end="26:63"><expr pos:start="26:51" pos:end="26:63"><literal type="string" pos:start="26:51" pos:end="26:63">"d:\\log.log"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	</block_content>}</block></function>

	<function pos:start="30:9" pos:end="37:9"><type pos:start="30:9" pos:end="30:19"><specifier pos:start="30:9" pos:end="30:14">public</specifier> <name pos:start="30:16" pos:end="30:19">void</name></type> <name pos:start="30:21" pos:end="30:33">createKMLFile</name><parameter_list pos:start="30:34" pos:end="30:49">(<parameter pos:start="30:35" pos:end="30:48"><decl pos:start="30:35" pos:end="30:48"><type pos:start="30:35" pos:end="30:40"><name pos:start="30:35" pos:end="30:40">String</name></type> <name pos:start="30:42" pos:end="30:48">logfile</name></decl></parameter>)</parameter_list> <block pos:start="30:51" pos:end="37:9">{<block_content pos:start="32:17" pos:end="36:39">

		<decl_stmt pos:start="32:17" pos:end="32:71"><decl pos:start="32:17" pos:end="32:70"><type pos:start="32:17" pos:end="32:37"><name pos:start="32:17" pos:end="32:37"><name pos:start="32:17" pos:end="32:20">List</name><argument_list type="generic" pos:start="32:21" pos:end="32:37">&lt;<argument pos:start="32:22" pos:end="32:36"><name pos:start="32:22" pos:end="32:36">UAVStateMessage</name></argument>&gt;</argument_list></name></type> <name pos:start="32:39" pos:end="32:46">messages</name> <init pos:start="32:48" pos:end="32:70">= <expr pos:start="32:50" pos:end="32:70"><call pos:start="32:50" pos:end="32:70"><name pos:start="32:50" pos:end="32:61">readMessages</name><argument_list pos:start="32:62" pos:end="32:70">(<argument pos:start="32:63" pos:end="32:69"><expr pos:start="32:63" pos:end="32:69"><name pos:start="32:63" pos:end="32:69">logfile</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

		<decl_stmt pos:start="34:17" pos:end="34:59"><decl pos:start="34:17" pos:end="34:58"><type pos:start="34:17" pos:end="34:22"><name pos:start="34:17" pos:end="34:22">String</name></type> <name pos:start="34:24" pos:end="34:32">kmlString</name> <init pos:start="34:34" pos:end="34:58">= <expr pos:start="34:36" pos:end="34:58"><call pos:start="34:36" pos:end="34:58"><name pos:start="34:36" pos:end="34:48">createKMLBody</name><argument_list pos:start="34:49" pos:end="34:58">(<argument pos:start="34:50" pos:end="34:57"><expr pos:start="34:50" pos:end="34:57"><name pos:start="34:50" pos:end="34:57">messages</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

		<expr_stmt pos:start="36:17" pos:end="36:39"><expr pos:start="36:17" pos:end="36:38"><call pos:start="36:17" pos:end="36:38"><name pos:start="36:17" pos:end="36:27">writeToFile</name><argument_list pos:start="36:28" pos:end="36:38">(<argument pos:start="36:29" pos:end="36:37"><expr pos:start="36:29" pos:end="36:37"><name pos:start="36:29" pos:end="36:37">kmlString</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	</block_content>}</block></function>

	<function pos:start="39:9" pos:end="52:9"><type pos:start="39:9" pos:end="39:37"><specifier pos:start="39:9" pos:end="39:15">private</specifier> <name pos:start="39:17" pos:end="39:37"><name pos:start="39:17" pos:end="39:20">List</name><argument_list type="generic" pos:start="39:21" pos:end="39:37">&lt;<argument pos:start="39:22" pos:end="39:36"><name pos:start="39:22" pos:end="39:36">UAVStateMessage</name></argument>&gt;</argument_list></name></type> <name pos:start="39:39" pos:end="39:50">readMessages</name><parameter_list pos:start="39:51" pos:end="39:66">(<parameter pos:start="39:52" pos:end="39:65"><decl pos:start="39:52" pos:end="39:65"><type pos:start="39:52" pos:end="39:57"><name pos:start="39:52" pos:end="39:57">String</name></type> <name pos:start="39:59" pos:end="39:65">logfile</name></decl></parameter>)</parameter_list> <block pos:start="39:68" pos:end="52:9">{<block_content pos:start="40:17" pos:end="51:35">
		<decl_stmt pos:start="40:17" pos:end="40:70"><decl pos:start="40:17" pos:end="40:69"><type pos:start="40:17" pos:end="40:37"><name pos:start="40:17" pos:end="40:37"><name pos:start="40:17" pos:end="40:20">List</name><argument_list type="generic" pos:start="40:21" pos:end="40:37">&lt;<argument pos:start="40:22" pos:end="40:36"><name pos:start="40:22" pos:end="40:36">UAVStateMessage</name></argument>&gt;</argument_list></name></type> <name pos:start="40:39" pos:end="40:49">messageList</name> <init pos:start="40:51" pos:end="40:69">= <expr pos:start="40:53" pos:end="40:69"><operator pos:start="40:53" pos:end="40:55">new</operator> <call pos:start="40:57" pos:end="40:69"><name pos:start="40:57" pos:end="40:67"><name pos:start="40:57" pos:end="40:65">ArrayList</name><argument_list type="generic" pos:start="40:66" pos:end="40:67">&lt;&gt;</argument_list></name><argument_list pos:start="40:68" pos:end="40:69">()</argument_list></call></expr></init></decl>;</decl_stmt>
		<try pos:start="41:17" pos:end="50:17">try <block pos:start="41:21" pos:end="47:17">{<block_content pos:start="43:25" pos:end="46:43">

			<decl_stmt pos:start="43:25" pos:end="43:84"><decl pos:start="43:25" pos:end="43:83"><type pos:start="43:25" pos:end="43:36"><name pos:start="43:25" pos:end="43:36"><name pos:start="43:25" pos:end="43:28">List</name><argument_list type="generic" pos:start="43:29" pos:end="43:36">&lt;<argument pos:start="43:30" pos:end="43:35"><name pos:start="43:30" pos:end="43:35">String</name></argument>&gt;</argument_list></name></type> <name pos:start="43:38" pos:end="43:42">lines</name> <init pos:start="43:44" pos:end="43:83">= <expr pos:start="43:46" pos:end="43:83"><call pos:start="43:46" pos:end="43:83"><name pos:start="43:46" pos:end="43:63"><name pos:start="43:46" pos:end="43:50">Files</name><operator pos:start="43:51" pos:end="43:51">.</operator><name pos:start="43:52" pos:end="43:63">readAllLines</name></name><argument_list pos:start="43:64" pos:end="43:83">(<argument pos:start="43:65" pos:end="43:82"><expr pos:start="43:65" pos:end="43:82"><call pos:start="43:65" pos:end="43:82"><name pos:start="43:65" pos:end="43:73"><name pos:start="43:65" pos:end="43:69">Paths</name><operator pos:start="43:70" pos:end="43:70">.</operator><name pos:start="43:71" pos:end="43:73">get</name></name><argument_list pos:start="43:74" pos:end="43:82">(<argument pos:start="43:75" pos:end="43:81"><expr pos:start="43:75" pos:end="43:81"><name pos:start="43:75" pos:end="43:81">logfile</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

			<expr_stmt pos:start="45:25" pos:end="45:74"><expr pos:start="45:25" pos:end="45:73"><call pos:start="45:25" pos:end="45:73"><name pos:start="45:25" pos:end="45:37"><name pos:start="45:25" pos:end="45:29">lines</name><operator pos:start="45:30" pos:end="45:30">.</operator><name pos:start="45:31" pos:end="45:37">forEach</name></name><argument_list pos:start="45:38" pos:end="45:73">(<argument pos:start="45:39" pos:end="45:72"><expr pos:start="45:39" pos:end="45:72"><lambda pos:start="45:39" pos:end="45:72"><parameter_list type="pseudo" pos:start="45:39" pos:end="45:39"><parameter pos:start="45:39" pos:end="45:39"><decl pos:start="45:39" pos:end="45:39"><name pos:start="45:39" pos:end="45:39">l</name></decl></parameter></parameter_list> -&gt;<block type="pseudo" pos:start="45:44" pos:end="45:72"><block_content pos:start="45:44" pos:end="45:72"> <expr pos:start="45:44" pos:end="45:72"><call pos:start="45:44" pos:end="45:72"><name pos:start="45:44" pos:end="45:58"><name pos:start="45:44" pos:end="45:54">messageList</name><operator pos:start="45:55" pos:end="45:55">.</operator><name pos:start="45:56" pos:end="45:58">add</name></name><argument_list pos:start="45:59" pos:end="45:72">(<argument pos:start="45:60" pos:end="45:71"><expr pos:start="45:60" pos:end="45:71"><call pos:start="45:60" pos:end="45:71"><name pos:start="45:60" pos:end="45:68">parseLine</name><argument_list pos:start="45:69" pos:end="45:71">(<argument pos:start="45:70" pos:end="45:70"><expr pos:start="45:70" pos:end="45:70"><name pos:start="45:70" pos:end="45:70">l</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></block_content></block></lambda></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<return pos:start="46:25" pos:end="46:43">return <expr pos:start="46:32" pos:end="46:42"><name pos:start="46:32" pos:end="46:42">messageList</name></expr>;</return>
		</block_content>}</block> <catch pos:start="47:19" pos:end="50:17">catch <parameter_list pos:start="47:25" pos:end="47:39">(<parameter pos:start="47:26" pos:end="47:38"><decl pos:start="47:26" pos:end="47:38"><type pos:start="47:26" pos:end="47:38"><name pos:start="47:26" pos:end="47:36">IOException</name></type> <name pos:start="47:38" pos:end="47:38">e</name></decl></parameter>)</parameter_list> <block pos:start="47:41" pos:end="50:17">{<block_content pos:start="49:25" pos:end="49:44">
			<comment type="line" pos:start="48:25" pos:end="48:58">// TODO Auto-generated catch block</comment>
			<expr_stmt pos:start="49:25" pos:end="49:44"><expr pos:start="49:25" pos:end="49:43"><call pos:start="49:25" pos:end="49:43"><name pos:start="49:25" pos:end="49:41"><name pos:start="49:25" pos:end="49:25">e</name><operator pos:start="49:26" pos:end="49:26">.</operator><name pos:start="49:27" pos:end="49:41">printStackTrace</name></name><argument_list pos:start="49:42" pos:end="49:43">()</argument_list></call></expr>;</expr_stmt>
		</block_content>}</block></catch></try>
		<return pos:start="51:17" pos:end="51:35">return <expr pos:start="51:24" pos:end="51:34"><name pos:start="51:24" pos:end="51:34">messageList</name></expr>;</return>
	</block_content>}</block></function>

	<function pos:start="54:9" pos:end="68:9"><type pos:start="54:9" pos:end="54:31"><specifier pos:start="54:9" pos:end="54:15">private</specifier> <name pos:start="54:17" pos:end="54:31">UAVStateMessage</name></type> <name pos:start="54:33" pos:end="54:41">parseLine</name><parameter_list pos:start="54:42" pos:end="54:51">(<parameter pos:start="54:43" pos:end="54:50"><decl pos:start="54:43" pos:end="54:50"><type pos:start="54:43" pos:end="54:48"><name pos:start="54:43" pos:end="54:48">String</name></type> <name pos:start="54:50" pos:end="54:50">l</name></decl></parameter>)</parameter_list> <block pos:start="54:53" pos:end="68:9">{<block_content pos:start="55:17" pos:end="66:28">
		<decl_stmt pos:start="55:17" pos:end="55:43"><decl pos:start="55:17" pos:end="55:42"><type pos:start="55:17" pos:end="55:19"><name pos:start="55:17" pos:end="55:19">int</name></type> <name pos:start="55:21" pos:end="55:25">start</name> <init pos:start="55:27" pos:end="55:42">= <expr pos:start="55:29" pos:end="55:42"><call pos:start="55:29" pos:end="55:42"><name pos:start="55:29" pos:end="55:37"><name pos:start="55:29" pos:end="55:29">l</name><operator pos:start="55:30" pos:end="55:30">.</operator><name pos:start="55:31" pos:end="55:37">indexOf</name></name><argument_list pos:start="55:38" pos:end="55:42">(<argument pos:start="55:39" pos:end="55:41"><expr pos:start="55:39" pos:end="55:41"><literal type="string" pos:start="55:39" pos:end="55:41">"{"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<decl_stmt pos:start="56:17" pos:end="56:52"><decl pos:start="56:17" pos:end="56:51"><type pos:start="56:17" pos:end="56:22"><name pos:start="56:17" pos:end="56:22">String</name></type> <name pos:start="56:24" pos:end="56:30">msgText</name> <init pos:start="56:32" pos:end="56:51">= <expr pos:start="56:34" pos:end="56:51"><call pos:start="56:34" pos:end="56:51"><name pos:start="56:34" pos:end="56:44"><name pos:start="56:34" pos:end="56:34">l</name><operator pos:start="56:35" pos:end="56:35">.</operator><name pos:start="56:36" pos:end="56:44">substring</name></name><argument_list pos:start="56:45" pos:end="56:51">(<argument pos:start="56:46" pos:end="56:50"><expr pos:start="56:46" pos:end="56:50"><name pos:start="56:46" pos:end="56:50">start</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

		<decl_stmt pos:start="58:17" pos:end="58:36"><decl pos:start="58:17" pos:end="58:35"><type pos:start="58:17" pos:end="58:31"><name pos:start="58:17" pos:end="58:31">UAVStateMessage</name></type> <name pos:start="58:33" pos:end="58:35">msg</name></decl>;</decl_stmt>
		<try pos:start="59:17" pos:end="65:17">try <block pos:start="59:21" pos:end="62:17">{<block_content pos:start="60:25" pos:end="61:35">
			<expr_stmt pos:start="60:25" pos:end="60:82"><expr pos:start="60:25" pos:end="60:81"><name pos:start="60:25" pos:end="60:27">msg</name> <operator pos:start="60:29" pos:end="60:29">=</operator> <operator pos:start="60:31" pos:end="60:31">(</operator><name pos:start="60:32" pos:end="60:46">UAVStateMessage</name><operator pos:start="60:47" pos:end="60:47">)</operator> <call pos:start="60:49" pos:end="60:81"><name pos:start="60:49" pos:end="60:72"><name pos:start="60:49" pos:end="60:65">UAVMessageFactory</name><operator pos:start="60:66" pos:end="60:66">.</operator><name pos:start="60:67" pos:end="60:72">create</name></name><argument_list pos:start="60:73" pos:end="60:81">(<argument pos:start="60:74" pos:end="60:80"><expr pos:start="60:74" pos:end="60:80"><name pos:start="60:74" pos:end="60:80">msgText</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<return pos:start="61:25" pos:end="61:35">return <expr pos:start="61:32" pos:end="61:34"><name pos:start="61:32" pos:end="61:34">msg</name></expr>;</return>
		</block_content>}</block> <catch pos:start="62:19" pos:end="65:17">catch <parameter_list pos:start="62:25" pos:end="62:37">(<parameter pos:start="62:26" pos:end="62:36"><decl pos:start="62:26" pos:end="62:36"><type pos:start="62:26" pos:end="62:36"><name pos:start="62:26" pos:end="62:34">Exception</name></type> <name pos:start="62:36" pos:end="62:36">e</name></decl></parameter>)</parameter_list> <block pos:start="62:39" pos:end="65:17">{<block_content pos:start="64:25" pos:end="64:44">
			<comment type="line" pos:start="63:25" pos:end="63:58">// TODO Auto-generated catch block</comment>
			<expr_stmt pos:start="64:25" pos:end="64:44"><expr pos:start="64:25" pos:end="64:43"><call pos:start="64:25" pos:end="64:43"><name pos:start="64:25" pos:end="64:41"><name pos:start="64:25" pos:end="64:25">e</name><operator pos:start="64:26" pos:end="64:26">.</operator><name pos:start="64:27" pos:end="64:41">printStackTrace</name></name><argument_list pos:start="64:42" pos:end="64:43">()</argument_list></call></expr>;</expr_stmt>
		</block_content>}</block></catch></try>
		<return pos:start="66:17" pos:end="66:28">return <expr pos:start="66:24" pos:end="66:27"><literal type="null" pos:start="66:24" pos:end="66:27">null</literal></expr>;</return>

	</block_content>}</block></function>

	<function pos:start="70:9" pos:end="128:9"><type pos:start="70:9" pos:end="70:20"><specifier pos:start="70:9" pos:end="70:15">private</specifier> <name pos:start="70:17" pos:end="70:20">void</name></type> <name pos:start="70:22" pos:end="70:32">writeToFile</name><parameter_list pos:start="70:33" pos:end="70:50">(<parameter pos:start="70:34" pos:end="70:49"><decl pos:start="70:34" pos:end="70:49"><type pos:start="70:34" pos:end="70:39"><name pos:start="70:34" pos:end="70:39">String</name></type> <name pos:start="70:41" pos:end="70:49">kmlString</name></decl></parameter>)</parameter_list> <block pos:start="70:52" pos:end="128:9">{<block_content pos:start="71:17" pos:end="126:17">
		<decl_stmt pos:start="71:17" pos:end="71:75"><decl pos:start="71:17" pos:end="71:74"><type pos:start="71:17" pos:end="71:20"><name pos:start="71:17" pos:end="71:20">File</name></type> <name pos:start="71:22" pos:end="71:31">testexists</name> <init pos:start="71:33" pos:end="71:74">= <expr pos:start="71:35" pos:end="71:74"><operator pos:start="71:35" pos:end="71:37">new</operator> <call pos:start="71:39" pos:end="71:74"><name pos:start="71:39" pos:end="71:42">File</name><argument_list pos:start="71:43" pos:end="71:74">(<argument pos:start="71:44" pos:end="71:73"><expr pos:start="71:44" pos:end="71:73"><name pos:start="71:44" pos:end="71:51">datapath</name> <operator pos:start="71:53" pos:end="71:53">+</operator> <literal type="string" pos:start="71:55" pos:end="71:57">"/"</literal> <operator pos:start="71:59" pos:end="71:59">+</operator> <name pos:start="71:61" pos:end="71:64">name</name> <operator pos:start="71:66" pos:end="71:66">+</operator> <literal type="string" pos:start="71:68" pos:end="71:73">".kml"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<decl_stmt pos:start="72:17" pos:end="72:31"><decl pos:start="72:17" pos:end="72:30"><type pos:start="72:17" pos:end="72:22"><name pos:start="72:17" pos:end="72:22">Writer</name></type> <name pos:start="72:24" pos:end="72:30">fwriter</name></decl>;</decl_stmt>

		<if_stmt pos:start="74:17" pos:end="126:17"><if pos:start="74:17" pos:end="85:17">if <condition pos:start="74:20" pos:end="74:41">(<expr pos:start="74:21" pos:end="74:40"><operator pos:start="74:21" pos:end="74:21">!</operator><call pos:start="74:22" pos:end="74:40"><name pos:start="74:22" pos:end="74:38"><name pos:start="74:22" pos:end="74:31">testexists</name><operator pos:start="74:32" pos:end="74:32">.</operator><name pos:start="74:33" pos:end="74:38">exists</name></name><argument_list pos:start="74:39" pos:end="74:40">()</argument_list></call></expr>)</condition> <block pos:start="74:43" pos:end="85:17">{<block_content pos:start="75:25" pos:end="84:25">
			<try pos:start="75:25" pos:end="84:25">try <block pos:start="75:29" pos:end="81:25">{<block_content pos:start="77:33" pos:end="80:48">

				<expr_stmt pos:start="77:33" pos:end="77:89"><expr pos:start="77:33" pos:end="77:88"><name pos:start="77:33" pos:end="77:39">fwriter</name> <operator pos:start="77:41" pos:end="77:41">=</operator> <operator pos:start="77:43" pos:end="77:45">new</operator> <call pos:start="77:47" pos:end="77:88"><name pos:start="77:47" pos:end="77:56">FileWriter</name><argument_list pos:start="77:57" pos:end="77:88">(<argument pos:start="77:58" pos:end="77:87"><expr pos:start="77:58" pos:end="77:87"><name pos:start="77:58" pos:end="77:65">datapath</name> <operator pos:start="77:67" pos:end="77:67">+</operator> <literal type="string" pos:start="77:69" pos:end="77:71">"/"</literal> <operator pos:start="77:73" pos:end="77:73">+</operator> <name pos:start="77:75" pos:end="77:78">name</name> <operator pos:start="77:80" pos:end="77:80">+</operator> <literal type="string" pos:start="77:82" pos:end="77:87">".kml"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<expr_stmt pos:start="78:33" pos:end="78:57"><expr pos:start="78:33" pos:end="78:56"><call pos:start="78:33" pos:end="78:56"><name pos:start="78:33" pos:end="78:45"><name pos:start="78:33" pos:end="78:39">fwriter</name><operator pos:start="78:40" pos:end="78:40">.</operator><name pos:start="78:41" pos:end="78:45">write</name></name><argument_list pos:start="78:46" pos:end="78:56">(<argument pos:start="78:47" pos:end="78:55"><expr pos:start="78:47" pos:end="78:55"><name pos:start="78:47" pos:end="78:55">kmlString</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<expr_stmt pos:start="79:33" pos:end="79:48"><expr pos:start="79:33" pos:end="79:47"><call pos:start="79:33" pos:end="79:47"><name pos:start="79:33" pos:end="79:45"><name pos:start="79:33" pos:end="79:39">fwriter</name><operator pos:start="79:40" pos:end="79:40">.</operator><name pos:start="79:41" pos:end="79:45">flush</name></name><argument_list pos:start="79:46" pos:end="79:47">()</argument_list></call></expr>;</expr_stmt>
				<expr_stmt pos:start="80:33" pos:end="80:48"><expr pos:start="80:33" pos:end="80:47"><call pos:start="80:33" pos:end="80:47"><name pos:start="80:33" pos:end="80:45"><name pos:start="80:33" pos:end="80:39">fwriter</name><operator pos:start="80:40" pos:end="80:40">.</operator><name pos:start="80:41" pos:end="80:45">close</name></name><argument_list pos:start="80:46" pos:end="80:47">()</argument_list></call></expr>;</expr_stmt>
			</block_content>}</block> <catch pos:start="81:27" pos:end="84:25">catch <parameter_list pos:start="81:33" pos:end="81:48">(<parameter pos:start="81:34" pos:end="81:47"><decl pos:start="81:34" pos:end="81:47"><type pos:start="81:34" pos:end="81:47"><name pos:start="81:34" pos:end="81:44">IOException</name></type> <name pos:start="81:46" pos:end="81:47">e1</name></decl></parameter>)</parameter_list> <block pos:start="81:50" pos:end="84:25">{<block_content pos:start="83:33" pos:end="83:53">
				<comment type="line" pos:start="82:33" pos:end="82:66">// TODO Auto-generated catch block</comment>
				<expr_stmt pos:start="83:33" pos:end="83:53"><expr pos:start="83:33" pos:end="83:52"><call pos:start="83:33" pos:end="83:52"><name pos:start="83:33" pos:end="83:50"><name pos:start="83:33" pos:end="83:34">e1</name><operator pos:start="83:35" pos:end="83:35">.</operator><name pos:start="83:36" pos:end="83:50">printStackTrace</name></name><argument_list pos:start="83:51" pos:end="83:52">()</argument_list></call></expr>;</expr_stmt>
			</block_content>}</block></catch></try>
		</block_content>}</block></if>

		<else pos:start="87:17" pos:end="126:17">else <block pos:start="87:22" pos:end="126:17">{<block_content pos:start="90:25" pos:end="124:25">

			<comment type="line" pos:start="89:25" pos:end="89:44">// schleifenvariable</comment>
			<decl_stmt pos:start="90:25" pos:end="90:48"><decl pos:start="90:25" pos:end="90:47"><type pos:start="90:25" pos:end="90:30"><name pos:start="90:25" pos:end="90:30">String</name></type> <name pos:start="90:32" pos:end="90:42">filecontent</name> <init pos:start="90:44" pos:end="90:47">= <expr pos:start="90:46" pos:end="90:47"><literal type="string" pos:start="90:46" pos:end="90:47">""</literal></expr></init></decl>;</decl_stmt>

			<decl_stmt pos:start="92:25" pos:end="92:78"><decl pos:start="92:25" pos:end="92:77"><type pos:start="92:25" pos:end="92:41"><name pos:start="92:25" pos:end="92:41"><name pos:start="92:25" pos:end="92:33">ArrayList</name><argument_list type="generic" pos:start="92:34" pos:end="92:41">&lt;<argument pos:start="92:35" pos:end="92:40"><name pos:start="92:35" pos:end="92:40">String</name></argument>&gt;</argument_list></name></type> <name pos:start="92:43" pos:end="92:51">newoutput</name> <init pos:start="92:53" pos:end="92:77">= <expr pos:start="92:55" pos:end="92:77"><operator pos:start="92:55" pos:end="92:57">new</operator> <call pos:start="92:59" pos:end="92:77"><name pos:start="92:59" pos:end="92:75"><name pos:start="92:59" pos:end="92:67">ArrayList</name><argument_list type="generic" pos:start="92:68" pos:end="92:75">&lt;<argument pos:start="92:69" pos:end="92:74"><name pos:start="92:69" pos:end="92:74">String</name></argument>&gt;</argument_list></name><argument_list pos:start="92:76" pos:end="92:77">()</argument_list></call></expr></init></decl>;</decl_stmt>
			<empty_stmt pos:start="93:25" pos:end="93:25">;</empty_stmt>

			<try pos:start="95:25" pos:end="107:25">try <block pos:start="95:29" pos:end="101:25">{<block_content pos:start="96:33" pos:end="99:67">
				<decl_stmt pos:start="96:33" pos:end="96:99"><decl pos:start="96:33" pos:end="96:98"><type pos:start="96:33" pos:end="96:46"><name pos:start="96:33" pos:end="96:46">BufferedReader</name></type> <name pos:start="96:48" pos:end="96:49">in</name> <init pos:start="96:51" pos:end="96:98">= <expr pos:start="96:53" pos:end="96:98"><operator pos:start="96:53" pos:end="96:55">new</operator> <call pos:start="96:57" pos:end="96:98"><name pos:start="96:57" pos:end="96:70">BufferedReader</name><argument_list pos:start="96:71" pos:end="96:98">(<argument pos:start="96:72" pos:end="96:97"><expr pos:start="96:72" pos:end="96:97"><operator pos:start="96:72" pos:end="96:74">new</operator> <call pos:start="96:76" pos:end="96:97"><name pos:start="96:76" pos:end="96:85">FileReader</name><argument_list pos:start="96:86" pos:end="96:97">(<argument pos:start="96:87" pos:end="96:96"><expr pos:start="96:87" pos:end="96:96"><name pos:start="96:87" pos:end="96:96">testexists</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
				<while pos:start="97:33" pos:end="99:67">while <condition pos:start="97:39" pos:end="97:77">(<expr pos:start="97:40" pos:end="97:76"><operator pos:start="97:40" pos:end="97:40">(</operator><name pos:start="97:41" pos:end="97:51">filecontent</name> <operator pos:start="97:53" pos:end="97:53">=</operator> <call pos:start="97:55" pos:end="97:67"><name pos:start="97:55" pos:end="97:65"><name pos:start="97:55" pos:end="97:56">in</name><operator pos:start="97:57" pos:end="97:57">.</operator><name pos:start="97:58" pos:end="97:65">readLine</name></name><argument_list pos:start="97:66" pos:end="97:67">()</argument_list></call><operator pos:start="97:68" pos:end="97:68">)</operator> <operator pos:start="97:70" pos:end="97:71">!=</operator> <literal type="null" pos:start="97:73" pos:end="97:76">null</literal></expr>)</condition><block type="pseudo" pos:start="99:41" pos:end="99:67"><block_content pos:start="99:41" pos:end="99:67">

					<expr_stmt pos:start="99:41" pos:end="99:67"><expr pos:start="99:41" pos:end="99:66"><call pos:start="99:41" pos:end="99:66"><name pos:start="99:41" pos:end="99:53"><name pos:start="99:41" pos:end="99:49">newoutput</name><operator pos:start="99:50" pos:end="99:50">.</operator><name pos:start="99:51" pos:end="99:53">add</name></name><argument_list pos:start="99:54" pos:end="99:66">(<argument pos:start="99:55" pos:end="99:65"><expr pos:start="99:55" pos:end="99:65"><name pos:start="99:55" pos:end="99:65">filecontent</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></while>

			</block_content>}</block> <catch pos:start="101:27" pos:end="104:25">catch <parameter_list pos:start="101:33" pos:end="101:58">(<parameter pos:start="101:34" pos:end="101:57"><decl pos:start="101:34" pos:end="101:57"><type pos:start="101:34" pos:end="101:57"><name pos:start="101:34" pos:end="101:54">FileNotFoundException</name></type> <name pos:start="101:56" pos:end="101:57">e1</name></decl></parameter>)</parameter_list> <block pos:start="101:60" pos:end="104:25">{<block_content pos:start="103:33" pos:end="103:53">
				<comment type="line" pos:start="102:33" pos:end="102:66">// TODO Auto-generated catch block</comment>
				<expr_stmt pos:start="103:33" pos:end="103:53"><expr pos:start="103:33" pos:end="103:52"><call pos:start="103:33" pos:end="103:52"><name pos:start="103:33" pos:end="103:50"><name pos:start="103:33" pos:end="103:34">e1</name><operator pos:start="103:35" pos:end="103:35">.</operator><name pos:start="103:36" pos:end="103:50">printStackTrace</name></name><argument_list pos:start="103:51" pos:end="103:52">()</argument_list></call></expr>;</expr_stmt>
			</block_content>}</block></catch> <catch pos:start="104:27" pos:end="107:25">catch <parameter_list pos:start="104:33" pos:end="104:48">(<parameter pos:start="104:34" pos:end="104:47"><decl pos:start="104:34" pos:end="104:47"><type pos:start="104:34" pos:end="104:47"><name pos:start="104:34" pos:end="104:44">IOException</name></type> <name pos:start="104:46" pos:end="104:47">e1</name></decl></parameter>)</parameter_list> <block pos:start="104:50" pos:end="107:25">{<block_content pos:start="106:33" pos:end="106:53">
				<comment type="line" pos:start="105:33" pos:end="105:66">// TODO Auto-generated catch block</comment>
				<expr_stmt pos:start="106:33" pos:end="106:53"><expr pos:start="106:33" pos:end="106:52"><call pos:start="106:33" pos:end="106:52"><name pos:start="106:33" pos:end="106:50"><name pos:start="106:33" pos:end="106:34">e1</name><operator pos:start="106:35" pos:end="106:35">.</operator><name pos:start="106:36" pos:end="106:50">printStackTrace</name></name><argument_list pos:start="106:51" pos:end="106:52">()</argument_list></call></expr>;</expr_stmt>
			</block_content>}</block></catch></try>

			<comment type="line" pos:start="109:25" pos:end="109:56">// newoutput.add(2, kmlelement);</comment>

			<decl_stmt pos:start="111:25" pos:end="111:44"><decl pos:start="111:25" pos:end="111:43"><type pos:start="111:25" pos:end="111:30"><name pos:start="111:25" pos:end="111:30">String</name></type> <name pos:start="111:32" pos:end="111:38">rewrite</name> <init pos:start="111:40" pos:end="111:43">= <expr pos:start="111:42" pos:end="111:43"><literal type="string" pos:start="111:42" pos:end="111:43">""</literal></expr></init></decl>;</decl_stmt>
			<for pos:start="112:25" pos:end="114:25">for <control pos:start="112:29" pos:end="112:50">(<init pos:start="112:30" pos:end="112:49"><decl pos:start="112:30" pos:end="112:49"><type pos:start="112:30" pos:end="112:35"><name pos:start="112:30" pos:end="112:35">String</name></type> <name pos:start="112:37" pos:end="112:37">s</name> <range pos:start="112:39" pos:end="112:49">: <expr pos:start="112:41" pos:end="112:49"><name pos:start="112:41" pos:end="112:49">newoutput</name></expr></range></decl></init>)</control> <block pos:start="112:52" pos:end="114:25">{<block_content pos:start="113:33" pos:end="113:45">
				<expr_stmt pos:start="113:33" pos:end="113:45"><expr pos:start="113:33" pos:end="113:44"><name pos:start="113:33" pos:end="113:39">rewrite</name> <operator pos:start="113:41" pos:end="113:42">+=</operator> <name pos:start="113:44" pos:end="113:44">s</name></expr>;</expr_stmt>
			</block_content>}</block></for>

			<try pos:start="116:25" pos:end="124:25">try <block pos:start="116:29" pos:end="121:25">{<block_content pos:start="117:33" pos:end="120:48">
				<expr_stmt pos:start="117:33" pos:end="117:89"><expr pos:start="117:33" pos:end="117:88"><name pos:start="117:33" pos:end="117:39">fwriter</name> <operator pos:start="117:41" pos:end="117:41">=</operator> <operator pos:start="117:43" pos:end="117:45">new</operator> <call pos:start="117:47" pos:end="117:88"><name pos:start="117:47" pos:end="117:56">FileWriter</name><argument_list pos:start="117:57" pos:end="117:88">(<argument pos:start="117:58" pos:end="117:87"><expr pos:start="117:58" pos:end="117:87"><name pos:start="117:58" pos:end="117:65">datapath</name> <operator pos:start="117:67" pos:end="117:67">+</operator> <literal type="string" pos:start="117:69" pos:end="117:71">"/"</literal> <operator pos:start="117:73" pos:end="117:73">+</operator> <name pos:start="117:75" pos:end="117:78">name</name> <operator pos:start="117:80" pos:end="117:80">+</operator> <literal type="string" pos:start="117:82" pos:end="117:87">".kml"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<expr_stmt pos:start="118:33" pos:end="118:55"><expr pos:start="118:33" pos:end="118:54"><call pos:start="118:33" pos:end="118:54"><name pos:start="118:33" pos:end="118:45"><name pos:start="118:33" pos:end="118:39">fwriter</name><operator pos:start="118:40" pos:end="118:40">.</operator><name pos:start="118:41" pos:end="118:45">write</name></name><argument_list pos:start="118:46" pos:end="118:54">(<argument pos:start="118:47" pos:end="118:53"><expr pos:start="118:47" pos:end="118:53"><name pos:start="118:47" pos:end="118:53">rewrite</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<expr_stmt pos:start="119:33" pos:end="119:48"><expr pos:start="119:33" pos:end="119:47"><call pos:start="119:33" pos:end="119:47"><name pos:start="119:33" pos:end="119:45"><name pos:start="119:33" pos:end="119:39">fwriter</name><operator pos:start="119:40" pos:end="119:40">.</operator><name pos:start="119:41" pos:end="119:45">flush</name></name><argument_list pos:start="119:46" pos:end="119:47">()</argument_list></call></expr>;</expr_stmt>
				<expr_stmt pos:start="120:33" pos:end="120:48"><expr pos:start="120:33" pos:end="120:47"><call pos:start="120:33" pos:end="120:47"><name pos:start="120:33" pos:end="120:45"><name pos:start="120:33" pos:end="120:39">fwriter</name><operator pos:start="120:40" pos:end="120:40">.</operator><name pos:start="120:41" pos:end="120:45">close</name></name><argument_list pos:start="120:46" pos:end="120:47">()</argument_list></call></expr>;</expr_stmt>
			</block_content>}</block> <catch pos:start="121:27" pos:end="124:25">catch <parameter_list pos:start="121:33" pos:end="121:47">(<parameter pos:start="121:34" pos:end="121:46"><decl pos:start="121:34" pos:end="121:46"><type pos:start="121:34" pos:end="121:46"><name pos:start="121:34" pos:end="121:44">IOException</name></type> <name pos:start="121:46" pos:end="121:46">e</name></decl></parameter>)</parameter_list> <block pos:start="121:49" pos:end="124:25">{<block_content pos:start="123:33" pos:end="123:52">
				<comment type="line" pos:start="122:33" pos:end="122:66">// TODO Auto-generated catch block</comment>
				<expr_stmt pos:start="123:33" pos:end="123:52"><expr pos:start="123:33" pos:end="123:51"><call pos:start="123:33" pos:end="123:51"><name pos:start="123:33" pos:end="123:49"><name pos:start="123:33" pos:end="123:33">e</name><operator pos:start="123:34" pos:end="123:34">.</operator><name pos:start="123:35" pos:end="123:49">printStackTrace</name></name><argument_list pos:start="123:50" pos:end="123:51">()</argument_list></call></expr>;</expr_stmt>
			</block_content>}</block></catch></try>

		</block_content>}</block></else></if_stmt>

	</block_content>}</block></function>

	<decl_stmt pos:start="130:9" pos:end="131:77"><decl pos:start="130:9" pos:end="131:76"><type pos:start="130:9" pos:end="130:28"><specifier pos:start="130:9" pos:end="130:15">private</specifier> <specifier pos:start="130:17" pos:end="130:21">final</specifier> <name pos:start="130:23" pos:end="130:28">String</name></type> <name pos:start="130:30" pos:end="130:37">kmlstart</name> <init pos:start="130:39" pos:end="131:76">= <expr pos:start="130:41" pos:end="131:76"><literal type="string" pos:start="130:41" pos:end="130:86">"&lt;?xml version=\"1.0\" encoding=\"utf-8\"?&gt;\n"</literal>
			<operator pos:start="131:25" pos:end="131:25">+</operator> <literal type="string" pos:start="131:27" pos:end="131:76">"&lt;kml xmlns=\"http://www.opengis.net/kml/2.2\"&gt;\n"</literal></expr></init></decl>;</decl_stmt>

	<comment type="line" pos:start="133:9" pos:end="133:117">// private final String kmlelement = "\t&lt;Placemark&gt;\n" + "\t&lt;name&gt;WP%num&lt;/name&gt;\n" + "\t&lt;description&gt;" + name</comment>
	<comment type="line" pos:start="134:9" pos:end="134:104">// + "&lt;/description&gt;\n" + "\t&lt;Point&gt;\n" + "\t\t&lt;coordinates&gt;%lon,%lat,%alt&lt;/coordinates&gt;\n" + ""</comment>
	<comment type="line" pos:start="135:9" pos:end="135:32">// + "\t&lt;gx:TimeSpan&gt;\n"</comment>
	<comment type="line" pos:start="136:9" pos:end="136:39">// + "\t&lt;begin&gt;%time&lt;/begin&gt;\n"</comment>
	<comment type="line" pos:start="137:9" pos:end="137:33">// + "\t&lt;/gx:TimeSpan&gt;\n"</comment>
	<comment type="line" pos:start="138:9" pos:end="138:27">// + "\t&lt;/Point&gt;\n"</comment>
	<comment type="line" pos:start="139:9" pos:end="139:32">// + "\t&lt;/Placemark&gt;\n";</comment>
	<comment type="line" pos:start="140:9" pos:end="140:10">//</comment>

	<decl_stmt pos:start="142:9" pos:end="145:45"><decl pos:start="142:9" pos:end="145:44"><type pos:start="142:9" pos:end="142:28"><specifier pos:start="142:9" pos:end="142:15">private</specifier> <specifier pos:start="142:17" pos:end="142:21">final</specifier> <name pos:start="142:23" pos:end="142:28">String</name></type> <name pos:start="142:30" pos:end="142:39">kmlelement</name> <init pos:start="142:41" pos:end="145:44">= <expr pos:start="142:43" pos:end="145:44"><literal type="string" pos:start="142:43" pos:end="142:59">"\t&lt;Placemark&gt;\n"</literal> <operator pos:start="142:61" pos:end="142:61">+</operator> <literal type="string" pos:start="142:63" pos:end="142:87">"\t&lt;name&gt;WP%num&lt;/name&gt;\n"</literal> <operator pos:start="142:89" pos:end="142:89">+</operator> <literal type="string" pos:start="142:91" pos:end="142:113">"\t&lt;description&gt; %desc"</literal>
			<operator pos:start="143:25" pos:end="143:25">+</operator> <literal type="string" pos:start="143:27" pos:end="143:44">"&lt;/description&gt;\n"</literal> <operator pos:start="143:46" pos:end="143:46">+</operator> <literal type="string" pos:start="143:48" pos:end="143:65">"\t&lt;LineString&gt;\n"</literal> <operator pos:start="143:67" pos:end="143:67">+</operator> <literal type="string" pos:start="143:69" pos:end="143:90">"&lt;extrude&gt;1&lt;/extrude&gt;"</literal> <operator pos:start="143:92" pos:end="143:92">+</operator> <literal type="string" pos:start="143:94" pos:end="143:121">"&lt;tessellate&gt;1&lt;/tessellate&gt;"</literal>
			<operator pos:start="144:25" pos:end="144:25">+</operator> <literal type="string" pos:start="144:27" pos:end="144:65">"&lt;altitudeMode&gt;absolute&lt;/altitudeMode&gt;"</literal> <operator pos:start="144:67" pos:end="144:67">+</operator> <literal type="string" pos:start="144:69" pos:end="144:110">"\t\t&lt;coordinates&gt;%coords&lt;/coordinates&gt;\n"</literal> <operator pos:start="144:112" pos:end="144:112">+</operator> <literal type="string" pos:start="144:114" pos:end="144:128">"&lt;/LineString&gt;"</literal>
			<operator pos:start="145:25" pos:end="145:25">+</operator> <literal type="string" pos:start="145:27" pos:end="145:44">"\t&lt;/Placemark&gt;\n"</literal></expr></init></decl>;</decl_stmt>

	<function pos:start="147:9" pos:end="174:9"><type pos:start="147:9" pos:end="147:22"><specifier pos:start="147:9" pos:end="147:15">private</specifier> <name pos:start="147:17" pos:end="147:22">String</name></type> <name pos:start="147:24" pos:end="147:36">createKMLBody</name><parameter_list pos:start="147:37" pos:end="147:68">(<parameter pos:start="147:38" pos:end="147:67"><decl pos:start="147:38" pos:end="147:67"><type pos:start="147:38" pos:end="147:58"><name pos:start="147:38" pos:end="147:58"><name pos:start="147:38" pos:end="147:41">List</name><argument_list type="generic" pos:start="147:42" pos:end="147:58">&lt;<argument pos:start="147:43" pos:end="147:57"><name pos:start="147:43" pos:end="147:57">UAVStateMessage</name></argument>&gt;</argument_list></name></type> <name pos:start="147:60" pos:end="147:67">messages</name></decl></parameter>)</parameter_list> <block pos:start="147:70" pos:end="174:9">{<block_content pos:start="149:17" pos:end="172:37">

		<decl_stmt pos:start="149:17" pos:end="149:41"><decl pos:start="149:17" pos:end="149:40"><type pos:start="149:17" pos:end="149:22"><name pos:start="149:17" pos:end="149:22">String</name></type> <name pos:start="149:24" pos:end="149:29">kmlend</name> <init pos:start="149:31" pos:end="149:40">= <expr pos:start="149:33" pos:end="149:40"><literal type="string" pos:start="149:33" pos:end="149:40">"&lt;/kml&gt;"</literal></expr></init></decl>;</decl_stmt>

		<decl_stmt pos:start="151:17" pos:end="151:68"><decl pos:start="151:17" pos:end="151:67"><type pos:start="151:17" pos:end="151:33"><name pos:start="151:17" pos:end="151:33"><name pos:start="151:17" pos:end="151:25">ArrayList</name><argument_list type="generic" pos:start="151:26" pos:end="151:33">&lt;<argument pos:start="151:27" pos:end="151:32"><name pos:start="151:27" pos:end="151:32">String</name></argument>&gt;</argument_list></name></type> <name pos:start="151:35" pos:end="151:41">content</name> <init pos:start="151:43" pos:end="151:67">= <expr pos:start="151:45" pos:end="151:67"><operator pos:start="151:45" pos:end="151:47">new</operator> <call pos:start="151:49" pos:end="151:67"><name pos:start="151:49" pos:end="151:65"><name pos:start="151:49" pos:end="151:57">ArrayList</name><argument_list type="generic" pos:start="151:58" pos:end="151:65">&lt;<argument pos:start="151:59" pos:end="151:64"><name pos:start="151:59" pos:end="151:64">String</name></argument>&gt;</argument_list></name><argument_list pos:start="151:66" pos:end="151:67">()</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt pos:start="152:17" pos:end="152:38"><expr pos:start="152:17" pos:end="152:37"><call pos:start="152:17" pos:end="152:37"><name pos:start="152:17" pos:end="152:27"><name pos:start="152:17" pos:end="152:23">content</name><operator pos:start="152:24" pos:end="152:24">.</operator><name pos:start="152:25" pos:end="152:27">add</name></name><argument_list pos:start="152:28" pos:end="152:37">(<argument pos:start="152:29" pos:end="152:36"><expr pos:start="152:29" pos:end="152:36"><name pos:start="152:29" pos:end="152:36">kmlstart</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		<decl_stmt pos:start="154:17" pos:end="154:64"><decl pos:start="154:17" pos:end="154:63"><type pos:start="154:17" pos:end="154:29"><name pos:start="154:17" pos:end="154:29">StringBuilder</name></type> <name pos:start="154:31" pos:end="154:41">cordBuilder</name> <init pos:start="154:43" pos:end="154:63">= <expr pos:start="154:45" pos:end="154:63"><operator pos:start="154:45" pos:end="154:47">new</operator> <call pos:start="154:49" pos:end="154:63"><name pos:start="154:49" pos:end="154:61">StringBuilder</name><argument_list pos:start="154:62" pos:end="154:63">()</argument_list></call></expr></init></decl>;</decl_stmt>
		<for pos:start="155:17" pos:end="160:17">for <control pos:start="155:21" pos:end="155:50">(<init pos:start="155:22" pos:end="155:49"><decl pos:start="155:22" pos:end="155:49"><type pos:start="155:22" pos:end="155:36"><name pos:start="155:22" pos:end="155:36">UAVStateMessage</name></type> <name pos:start="155:38" pos:end="155:38">m</name> <range pos:start="155:40" pos:end="155:49">: <expr pos:start="155:42" pos:end="155:49"><name pos:start="155:42" pos:end="155:49">messages</name></expr></range></decl></init>)</control> <block pos:start="155:52" pos:end="160:17">{<block_content pos:start="156:25" pos:end="159:25">
			<decl_stmt pos:start="156:25" pos:end="156:57"><decl pos:start="156:25" pos:end="156:56"><type pos:start="156:25" pos:end="156:30"><name pos:start="156:25" pos:end="156:30">String</name></type> <name pos:start="156:32" pos:end="156:34">res</name> <init pos:start="156:36" pos:end="156:56">= <expr pos:start="156:38" pos:end="156:56"><call pos:start="156:38" pos:end="156:56"><name pos:start="156:38" pos:end="156:53">createKMLElement</name><argument_list pos:start="156:54" pos:end="156:56">(<argument pos:start="156:55" pos:end="156:55"><expr pos:start="156:55" pos:end="156:55"><name pos:start="156:55" pos:end="156:55">m</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<if_stmt pos:start="157:25" pos:end="159:25"><if pos:start="157:25" pos:end="159:25">if <condition pos:start="157:28" pos:end="157:40">(<expr pos:start="157:29" pos:end="157:39"><name pos:start="157:29" pos:end="157:31">res</name> <operator pos:start="157:33" pos:end="157:34">!=</operator> <literal type="null" pos:start="157:36" pos:end="157:39">null</literal></expr>)</condition> <block pos:start="157:42" pos:end="159:25">{<block_content pos:start="158:33" pos:end="158:56">
				<expr_stmt pos:start="158:33" pos:end="158:56"><expr pos:start="158:33" pos:end="158:55"><call pos:start="158:33" pos:end="158:55"><name pos:start="158:33" pos:end="158:50"><name pos:start="158:33" pos:end="158:43">cordBuilder</name><operator pos:start="158:44" pos:end="158:44">.</operator><name pos:start="158:45" pos:end="158:50">append</name></name><argument_list pos:start="158:51" pos:end="158:55">(<argument pos:start="158:52" pos:end="158:54"><expr pos:start="158:52" pos:end="158:54"><name pos:start="158:52" pos:end="158:54">res</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			</block_content>}</block></if></if_stmt>
		</block_content>}</block></for>

		<decl_stmt pos:start="162:17" pos:end="162:89"><decl pos:start="162:17" pos:end="162:88"><type pos:start="162:17" pos:end="162:22"><name pos:start="162:17" pos:end="162:22">String</name></type> <name pos:start="162:24" pos:end="162:32">kmElement</name> <init pos:start="162:34" pos:end="162:88">= <expr pos:start="162:36" pos:end="162:88"><call pos:start="162:36" pos:end="162:88"><name pos:start="162:36" pos:end="162:53"><name pos:start="162:36" pos:end="162:45">kmlelement</name><operator pos:start="162:46" pos:end="162:46">.</operator><name pos:start="162:47" pos:end="162:53">replace</name></name><argument_list pos:start="162:54" pos:end="162:88">(<argument pos:start="162:55" pos:end="162:63"><expr pos:start="162:55" pos:end="162:63"><literal type="string" pos:start="162:55" pos:end="162:63">"%coords"</literal></expr></argument>, <argument pos:start="162:66" pos:end="162:87"><expr pos:start="162:66" pos:end="162:87"><call pos:start="162:66" pos:end="162:87"><name pos:start="162:66" pos:end="162:85"><name pos:start="162:66" pos:end="162:76">cordBuilder</name><operator pos:start="162:77" pos:end="162:77">.</operator><name pos:start="162:78" pos:end="162:85">toString</name></name><argument_list pos:start="162:86" pos:end="162:87">()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt pos:start="163:17" pos:end="163:62"><expr pos:start="163:17" pos:end="163:61"><name pos:start="163:17" pos:end="163:25">kmElement</name> <operator pos:start="163:27" pos:end="163:27">=</operator> <call pos:start="163:29" pos:end="163:61"><name pos:start="163:29" pos:end="163:45"><name pos:start="163:29" pos:end="163:37">kmElement</name><operator pos:start="163:38" pos:end="163:38">.</operator><name pos:start="163:39" pos:end="163:45">replace</name></name><argument_list pos:start="163:46" pos:end="163:61">(<argument pos:start="163:47" pos:end="163:53"><expr pos:start="163:47" pos:end="163:53"><literal type="string" pos:start="163:47" pos:end="163:53">"%desc"</literal></expr></argument>, <argument pos:start="163:56" pos:end="163:60"><expr pos:start="163:56" pos:end="163:60"><name pos:start="163:56" pos:end="163:60">UAVID</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt pos:start="164:17" pos:end="164:39"><expr pos:start="164:17" pos:end="164:38"><call pos:start="164:17" pos:end="164:38"><name pos:start="164:17" pos:end="164:27"><name pos:start="164:17" pos:end="164:23">content</name><operator pos:start="164:24" pos:end="164:24">.</operator><name pos:start="164:25" pos:end="164:27">add</name></name><argument_list pos:start="164:28" pos:end="164:38">(<argument pos:start="164:29" pos:end="164:37"><expr pos:start="164:29" pos:end="164:37"><name pos:start="164:29" pos:end="164:37">kmElement</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt pos:start="165:17" pos:end="165:36"><expr pos:start="165:17" pos:end="165:35"><call pos:start="165:17" pos:end="165:35"><name pos:start="165:17" pos:end="165:27"><name pos:start="165:17" pos:end="165:23">content</name><operator pos:start="165:24" pos:end="165:24">.</operator><name pos:start="165:25" pos:end="165:27">add</name></name><argument_list pos:start="165:28" pos:end="165:35">(<argument pos:start="165:29" pos:end="165:34"><expr pos:start="165:29" pos:end="165:34"><name pos:start="165:29" pos:end="165:34">kmlend</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		<decl_stmt pos:start="167:17" pos:end="167:55"><decl pos:start="167:17" pos:end="167:54"><type pos:start="167:17" pos:end="167:29"><name pos:start="167:17" pos:end="167:29">StringBuilder</name></type> <name pos:start="167:31" pos:end="167:32">sb</name> <init pos:start="167:34" pos:end="167:54">= <expr pos:start="167:36" pos:end="167:54"><operator pos:start="167:36" pos:end="167:38">new</operator> <call pos:start="167:40" pos:end="167:54"><name pos:start="167:40" pos:end="167:52">StringBuilder</name><argument_list pos:start="167:53" pos:end="167:54">()</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt pos:start="168:17" pos:end="171:19"><expr pos:start="168:17" pos:end="171:18"><call pos:start="168:17" pos:end="171:18"><name pos:start="168:17" pos:end="168:31"><name pos:start="168:17" pos:end="168:23">content</name><operator pos:start="168:24" pos:end="168:24">.</operator><name pos:start="168:25" pos:end="168:31">forEach</name></name><argument_list pos:start="168:32" pos:end="171:18">(<argument pos:start="168:33" pos:end="171:17"><expr pos:start="168:33" pos:end="171:17"><lambda pos:start="168:33" pos:end="171:17"><parameter_list type="pseudo" pos:start="168:33" pos:end="168:35"><parameter pos:start="168:33" pos:end="168:35"><decl pos:start="168:33" pos:end="168:35"><name pos:start="168:33" pos:end="168:35">str</name></decl></parameter></parameter_list> -&gt; <block pos:start="168:40" pos:end="171:17">{<block_content pos:start="169:25" pos:end="170:40">
			<expr_stmt pos:start="169:25" pos:end="169:39"><expr pos:start="169:25" pos:end="169:38"><call pos:start="169:25" pos:end="169:38"><name pos:start="169:25" pos:end="169:33"><name pos:start="169:25" pos:end="169:26">sb</name><operator pos:start="169:27" pos:end="169:27">.</operator><name pos:start="169:28" pos:end="169:33">append</name></name><argument_list pos:start="169:34" pos:end="169:38">(<argument pos:start="169:35" pos:end="169:37"><expr pos:start="169:35" pos:end="169:37"><name pos:start="169:35" pos:end="169:37">str</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt pos:start="170:25" pos:end="170:40"><expr pos:start="170:25" pos:end="170:39"><call pos:start="170:25" pos:end="170:39"><name pos:start="170:25" pos:end="170:33"><name pos:start="170:25" pos:end="170:26">sb</name><operator pos:start="170:27" pos:end="170:27">.</operator><name pos:start="170:28" pos:end="170:33">append</name></name><argument_list pos:start="170:34" pos:end="170:39">(<argument pos:start="170:35" pos:end="170:38"><expr pos:start="170:35" pos:end="170:38"><literal type="string" pos:start="170:35" pos:end="170:38">"\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		</block_content>}</block></lambda></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<return pos:start="172:17" pos:end="172:37">return <expr pos:start="172:24" pos:end="172:36"><call pos:start="172:24" pos:end="172:36"><name pos:start="172:24" pos:end="172:34"><name pos:start="172:24" pos:end="172:25">sb</name><operator pos:start="172:26" pos:end="172:26">.</operator><name pos:start="172:27" pos:end="172:34">toString</name></name><argument_list pos:start="172:35" pos:end="172:36">()</argument_list></call></expr>;</return>

	</block_content>}</block></function>

	<function pos:start="176:9" pos:end="191:9"><type pos:start="176:9" pos:end="176:22"><specifier pos:start="176:9" pos:end="176:15">private</specifier> <name pos:start="176:17" pos:end="176:22">String</name></type> <name pos:start="176:24" pos:end="176:39">createKMLElement</name><parameter_list pos:start="176:40" pos:end="176:58">(<parameter pos:start="176:41" pos:end="176:57"><decl pos:start="176:41" pos:end="176:57"><type pos:start="176:41" pos:end="176:55"><name pos:start="176:41" pos:end="176:55">UAVStateMessage</name></type> <name pos:start="176:57" pos:end="176:57">m</name></decl></parameter>)</parameter_list> <block pos:start="176:60" pos:end="191:9">{<block_content pos:start="178:17" pos:end="190:37">

		<if_stmt pos:start="178:17" pos:end="180:17"><if pos:start="178:17" pos:end="180:17">if <condition pos:start="178:20" pos:end="178:48">(<expr pos:start="178:21" pos:end="178:47"><operator pos:start="178:21" pos:end="178:21">!</operator><call pos:start="178:22" pos:end="178:33"><name pos:start="178:22" pos:end="178:31"><name pos:start="178:22" pos:end="178:22">m</name><operator pos:start="178:23" pos:end="178:23">.</operator><name pos:start="178:24" pos:end="178:31">getUavid</name></name><argument_list pos:start="178:32" pos:end="178:33">()</argument_list></call><operator pos:start="178:34" pos:end="178:34">.</operator><call pos:start="178:35" pos:end="178:47"><name pos:start="178:35" pos:end="178:40">equals</name><argument_list pos:start="178:41" pos:end="178:47">(<argument pos:start="178:42" pos:end="178:46"><expr pos:start="178:42" pos:end="178:46"><name pos:start="178:42" pos:end="178:46">UAVID</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="178:50" pos:end="180:17">{<block_content pos:start="179:25" pos:end="179:36">
			<return pos:start="179:25" pos:end="179:36">return <expr pos:start="179:32" pos:end="179:35"><literal type="null" pos:start="179:32" pos:end="179:35">null</literal></expr>;</return>
		</block_content>}</block></if></if_stmt>

		<decl_stmt pos:start="182:17" pos:end="182:55"><decl pos:start="182:17" pos:end="182:54"><type pos:start="182:17" pos:end="182:29"><name pos:start="182:17" pos:end="182:29">StringBuilder</name></type> <name pos:start="182:31" pos:end="182:32">sb</name> <init pos:start="182:34" pos:end="182:54">= <expr pos:start="182:36" pos:end="182:54"><operator pos:start="182:36" pos:end="182:38">new</operator> <call pos:start="182:40" pos:end="182:54"><name pos:start="182:40" pos:end="182:52">StringBuilder</name><argument_list pos:start="182:53" pos:end="182:54">()</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt pos:start="183:17" pos:end="183:58"><expr pos:start="183:17" pos:end="183:57"><call pos:start="183:17" pos:end="183:57"><name pos:start="183:17" pos:end="183:25"><name pos:start="183:17" pos:end="183:18">sb</name><operator pos:start="183:19" pos:end="183:19">.</operator><name pos:start="183:20" pos:end="183:25">append</name></name><argument_list pos:start="183:26" pos:end="183:57">(<argument pos:start="183:27" pos:end="183:56"><expr pos:start="183:27" pos:end="183:56"><call pos:start="183:27" pos:end="183:41"><name pos:start="183:27" pos:end="183:39"><name pos:start="183:27" pos:end="183:27">m</name><operator pos:start="183:28" pos:end="183:28">.</operator><name pos:start="183:29" pos:end="183:39">getLocation</name></name><argument_list pos:start="183:40" pos:end="183:41">()</argument_list></call><operator pos:start="183:42" pos:end="183:42">.</operator><call pos:start="183:43" pos:end="183:56"><name pos:start="183:43" pos:end="183:54">getLongitude</name><argument_list pos:start="183:55" pos:end="183:56">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt pos:start="184:17" pos:end="184:31"><expr pos:start="184:17" pos:end="184:30"><call pos:start="184:17" pos:end="184:30"><name pos:start="184:17" pos:end="184:25"><name pos:start="184:17" pos:end="184:18">sb</name><operator pos:start="184:19" pos:end="184:19">.</operator><name pos:start="184:20" pos:end="184:25">append</name></name><argument_list pos:start="184:26" pos:end="184:30">(<argument pos:start="184:27" pos:end="184:29"><expr pos:start="184:27" pos:end="184:29"><literal type="string" pos:start="184:27" pos:end="184:29">","</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt pos:start="185:17" pos:end="185:57"><expr pos:start="185:17" pos:end="185:56"><call pos:start="185:17" pos:end="185:56"><name pos:start="185:17" pos:end="185:25"><name pos:start="185:17" pos:end="185:18">sb</name><operator pos:start="185:19" pos:end="185:19">.</operator><name pos:start="185:20" pos:end="185:25">append</name></name><argument_list pos:start="185:26" pos:end="185:56">(<argument pos:start="185:27" pos:end="185:55"><expr pos:start="185:27" pos:end="185:55"><call pos:start="185:27" pos:end="185:41"><name pos:start="185:27" pos:end="185:39"><name pos:start="185:27" pos:end="185:27">m</name><operator pos:start="185:28" pos:end="185:28">.</operator><name pos:start="185:29" pos:end="185:39">getLocation</name></name><argument_list pos:start="185:40" pos:end="185:41">()</argument_list></call><operator pos:start="185:42" pos:end="185:42">.</operator><call pos:start="185:43" pos:end="185:55"><name pos:start="185:43" pos:end="185:53">getLatitude</name><argument_list pos:start="185:54" pos:end="185:55">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt pos:start="186:17" pos:end="186:31"><expr pos:start="186:17" pos:end="186:30"><call pos:start="186:17" pos:end="186:30"><name pos:start="186:17" pos:end="186:25"><name pos:start="186:17" pos:end="186:18">sb</name><operator pos:start="186:19" pos:end="186:19">.</operator><name pos:start="186:20" pos:end="186:25">append</name></name><argument_list pos:start="186:26" pos:end="186:30">(<argument pos:start="186:27" pos:end="186:29"><expr pos:start="186:27" pos:end="186:29"><literal type="string" pos:start="186:27" pos:end="186:29">","</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt pos:start="187:17" pos:end="187:57"><expr pos:start="187:17" pos:end="187:56"><call pos:start="187:17" pos:end="187:56"><name pos:start="187:17" pos:end="187:25"><name pos:start="187:17" pos:end="187:18">sb</name><operator pos:start="187:19" pos:end="187:19">.</operator><name pos:start="187:20" pos:end="187:25">append</name></name><argument_list pos:start="187:26" pos:end="187:56">(<argument pos:start="187:27" pos:end="187:55"><expr pos:start="187:27" pos:end="187:55"><call pos:start="187:27" pos:end="187:41"><name pos:start="187:27" pos:end="187:39"><name pos:start="187:27" pos:end="187:27">m</name><operator pos:start="187:28" pos:end="187:28">.</operator><name pos:start="187:29" pos:end="187:39">getLocation</name></name><argument_list pos:start="187:40" pos:end="187:41">()</argument_list></call><operator pos:start="187:42" pos:end="187:42">.</operator><call pos:start="187:43" pos:end="187:55"><name pos:start="187:43" pos:end="187:53">getAltitude</name><argument_list pos:start="187:54" pos:end="187:55">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt pos:start="188:17" pos:end="188:31"><expr pos:start="188:17" pos:end="188:30"><call pos:start="188:17" pos:end="188:30"><name pos:start="188:17" pos:end="188:25"><name pos:start="188:17" pos:end="188:18">sb</name><operator pos:start="188:19" pos:end="188:19">.</operator><name pos:start="188:20" pos:end="188:25">append</name></name><argument_list pos:start="188:26" pos:end="188:30">(<argument pos:start="188:27" pos:end="188:29"><expr pos:start="188:27" pos:end="188:29"><literal type="string" pos:start="188:27" pos:end="188:29">","</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		<return pos:start="190:17" pos:end="190:37">return <expr pos:start="190:24" pos:end="190:36"><call pos:start="190:24" pos:end="190:36"><name pos:start="190:24" pos:end="190:34"><name pos:start="190:24" pos:end="190:25">sb</name><operator pos:start="190:26" pos:end="190:26">.</operator><name pos:start="190:27" pos:end="190:34">toString</name></name><argument_list pos:start="190:35" pos:end="190:36">()</argument_list></call></expr>;</return>
	</block_content>}</block></function>
}</block></class>
</unit>
