<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="Java" filename="flatCode/SelectionWriter.java" pos:tabs="8"><package pos:start="1:1" pos:end="1:62">package <name pos:start="1:9" pos:end="1:61"><name pos:start="1:9" pos:end="1:11">edu</name><operator pos:start="1:12" pos:end="1:12">.</operator><name pos:start="1:13" pos:end="1:14">nd</name><operator pos:start="1:15" pos:end="1:15">.</operator><name pos:start="1:16" pos:end="1:24">dronology</name><operator pos:start="1:25" pos:end="1:25">.</operator><name pos:start="1:26" pos:end="1:33">services</name><operator pos:start="1:34" pos:end="1:34">.</operator><name pos:start="1:35" pos:end="1:44">extensions</name><operator pos:start="1:45" pos:end="1:45">.</operator><name pos:start="1:46" pos:end="1:56">areamapping</name><operator pos:start="1:57" pos:end="1:57">.</operator><name pos:start="1:58" pos:end="1:61">util</name></name>;</package>

<import pos:start="3:1" pos:end="3:36">import <name pos:start="3:8" pos:end="3:35"><name pos:start="3:8" pos:end="3:11">java</name><operator pos:start="3:12" pos:end="3:12">.</operator><name pos:start="3:13" pos:end="3:14">io</name><operator pos:start="3:15" pos:end="3:15">.</operator><name pos:start="3:16" pos:end="3:35">BufferedOutputStream</name></name>;</import>
<import pos:start="4:1" pos:end="4:20">import <name pos:start="4:8" pos:end="4:19"><name pos:start="4:8" pos:end="4:11">java</name><operator pos:start="4:12" pos:end="4:12">.</operator><name pos:start="4:13" pos:end="4:14">io</name><operator pos:start="4:15" pos:end="4:15">.</operator><name pos:start="4:16" pos:end="4:19">File</name></name>;</import>
<import pos:start="5:1" pos:end="5:32">import <name pos:start="5:8" pos:end="5:31"><name pos:start="5:8" pos:end="5:11">java</name><operator pos:start="5:12" pos:end="5:12">.</operator><name pos:start="5:13" pos:end="5:14">io</name><operator pos:start="5:15" pos:end="5:15">.</operator><name pos:start="5:16" pos:end="5:31">FileOutputStream</name></name>;</import>
<import pos:start="6:1" pos:end="6:27">import <name pos:start="6:8" pos:end="6:26"><name pos:start="6:8" pos:end="6:11">java</name><operator pos:start="6:12" pos:end="6:12">.</operator><name pos:start="6:13" pos:end="6:14">io</name><operator pos:start="6:15" pos:end="6:15">.</operator><name pos:start="6:16" pos:end="6:26">IOException</name></name>;</import>
<import pos:start="7:1" pos:end="7:28">import <name pos:start="7:8" pos:end="7:27"><name pos:start="7:8" pos:end="7:11">java</name><operator pos:start="7:12" pos:end="7:12">.</operator><name pos:start="7:13" pos:end="7:14">io</name><operator pos:start="7:15" pos:end="7:15">.</operator><name pos:start="7:16" pos:end="7:27">Serializable</name></name>;</import>
<import pos:start="8:1" pos:end="8:32">import <name pos:start="8:8" pos:end="8:31"><name pos:start="8:8" pos:end="8:11">java</name><operator pos:start="8:12" pos:end="8:12">.</operator><name pos:start="8:13" pos:end="8:15">nio</name><operator pos:start="8:16" pos:end="8:16">.</operator><name pos:start="8:17" pos:end="8:23">charset</name><operator pos:start="8:24" pos:end="8:24">.</operator><name pos:start="8:25" pos:end="8:31">Charset</name></name>;</import>
<import pos:start="9:1" pos:end="9:27">import <name pos:start="9:8" pos:end="9:26"><name pos:start="9:8" pos:end="9:11">java</name><operator pos:start="9:12" pos:end="9:12">.</operator><name pos:start="9:13" pos:end="9:15">nio</name><operator pos:start="9:16" pos:end="9:16">.</operator><name pos:start="9:17" pos:end="9:20">file</name><operator pos:start="9:21" pos:end="9:21">.</operator><name pos:start="9:22" pos:end="9:26">Files</name></name>;</import>
<import pos:start="10:1" pos:end="10:27">import <name pos:start="10:8" pos:end="10:26"><name pos:start="10:8" pos:end="10:11">java</name><operator pos:start="10:12" pos:end="10:12">.</operator><name pos:start="10:13" pos:end="10:15">nio</name><operator pos:start="10:16" pos:end="10:16">.</operator><name pos:start="10:17" pos:end="10:20">file</name><operator pos:start="10:21" pos:end="10:21">.</operator><name pos:start="10:22" pos:end="10:26">Paths</name></name>;</import>
<import pos:start="11:1" pos:end="11:28">import <name pos:start="11:8" pos:end="11:27"><name pos:start="11:8" pos:end="11:11">java</name><operator pos:start="11:12" pos:end="11:12">.</operator><name pos:start="11:13" pos:end="11:16">text</name><operator pos:start="11:17" pos:end="11:17">.</operator><name pos:start="11:18" pos:end="11:27">DateFormat</name></name>;</import>
<import pos:start="12:1" pos:end="12:27">import <name pos:start="12:8" pos:end="12:26"><name pos:start="12:8" pos:end="12:11">java</name><operator pos:start="12:12" pos:end="12:12">.</operator><name pos:start="12:13" pos:end="12:16">util</name><operator pos:start="12:17" pos:end="12:17">.</operator><name pos:start="12:18" pos:end="12:26">ArrayList</name></name>;</import>
<import pos:start="13:1" pos:end="13:25">import <name pos:start="13:8" pos:end="13:24"><name pos:start="13:8" pos:end="13:11">java</name><operator pos:start="13:12" pos:end="13:12">.</operator><name pos:start="13:13" pos:end="13:16">util</name><operator pos:start="13:17" pos:end="13:17">.</operator><name pos:start="13:18" pos:end="13:24">HashMap</name></name>;</import>
<import pos:start="14:1" pos:end="14:22">import <name pos:start="14:8" pos:end="14:21"><name pos:start="14:8" pos:end="14:11">java</name><operator pos:start="14:12" pos:end="14:12">.</operator><name pos:start="14:13" pos:end="14:16">util</name><operator pos:start="14:17" pos:end="14:17">.</operator><name pos:start="14:18" pos:end="14:21">List</name></name>;</import>
<import pos:start="15:1" pos:end="15:35">import <name pos:start="15:8" pos:end="15:34"><name pos:start="15:8" pos:end="15:11">java</name><operator pos:start="15:12" pos:end="15:12">.</operator><name pos:start="15:13" pos:end="15:16">util</name><operator pos:start="15:17" pos:end="15:17">.</operator><name pos:start="15:18" pos:end="15:23">stream</name><operator pos:start="15:24" pos:end="15:24">.</operator><name pos:start="15:25" pos:end="15:34">Collectors</name></name>;</import>
<import pos:start="16:1" pos:end="16:30">import <name pos:start="16:8" pos:end="16:29"><name pos:start="16:8" pos:end="16:11">java</name><operator pos:start="16:12" pos:end="16:12">.</operator><name pos:start="16:13" pos:end="16:16">util</name><operator pos:start="16:17" pos:end="16:17">.</operator><name pos:start="16:18" pos:end="16:20">zip</name><operator pos:start="16:21" pos:end="16:21">.</operator><name pos:start="16:22" pos:end="16:29">ZipEntry</name></name>;</import>
<import pos:start="17:1" pos:end="17:37">import <name pos:start="17:8" pos:end="17:36"><name pos:start="17:8" pos:end="17:11">java</name><operator pos:start="17:12" pos:end="17:12">.</operator><name pos:start="17:13" pos:end="17:16">util</name><operator pos:start="17:17" pos:end="17:17">.</operator><name pos:start="17:18" pos:end="17:20">zip</name><operator pos:start="17:21" pos:end="17:21">.</operator><name pos:start="17:22" pos:end="17:36">ZipOutputStream</name></name>;</import>

<import pos:start="19:1" pos:end="19:39">import <name pos:start="19:8" pos:end="19:38"><name pos:start="19:8" pos:end="19:10">org</name><operator pos:start="19:11" pos:end="19:11">.</operator><name pos:start="19:12" pos:end="19:17">apache</name><operator pos:start="19:18" pos:end="19:18">.</operator><name pos:start="19:19" pos:end="19:25">commons</name><operator pos:start="19:26" pos:end="19:26">.</operator><name pos:start="19:27" pos:end="19:28">io</name><operator pos:start="19:29" pos:end="19:29">.</operator><name pos:start="19:30" pos:end="19:38">FileUtils</name></name>;</import>

<import pos:start="21:1" pos:end="21:41">import <name pos:start="21:8" pos:end="21:40"><name pos:start="21:8" pos:end="21:10">com</name><operator pos:start="21:11" pos:end="21:11">.</operator><name pos:start="21:12" pos:end="21:17">google</name><operator pos:start="21:18" pos:end="21:18">.</operator><name pos:start="21:19" pos:end="21:22">gson</name><operator pos:start="21:23" pos:end="21:23">.</operator><name pos:start="21:24" pos:end="21:40">FieldNamingPolicy</name></name>;</import>
<import pos:start="22:1" pos:end="22:28">import <name pos:start="22:8" pos:end="22:27"><name pos:start="22:8" pos:end="22:10">com</name><operator pos:start="22:11" pos:end="22:11">.</operator><name pos:start="22:12" pos:end="22:17">google</name><operator pos:start="22:18" pos:end="22:18">.</operator><name pos:start="22:19" pos:end="22:22">gson</name><operator pos:start="22:23" pos:end="22:23">.</operator><name pos:start="22:24" pos:end="22:27">Gson</name></name>;</import>
<import pos:start="23:1" pos:end="23:35">import <name pos:start="23:8" pos:end="23:34"><name pos:start="23:8" pos:end="23:10">com</name><operator pos:start="23:11" pos:end="23:11">.</operator><name pos:start="23:12" pos:end="23:17">google</name><operator pos:start="23:18" pos:end="23:18">.</operator><name pos:start="23:19" pos:end="23:22">gson</name><operator pos:start="23:23" pos:end="23:23">.</operator><name pos:start="23:24" pos:end="23:34">GsonBuilder</name></name>;</import>

<import pos:start="25:1" pos:end="25:45">import <name pos:start="25:8" pos:end="25:44"><name pos:start="25:8" pos:end="25:10">edu</name><operator pos:start="25:11" pos:end="25:11">.</operator><name pos:start="25:12" pos:end="25:13">nd</name><operator pos:start="25:14" pos:end="25:14">.</operator><name pos:start="25:15" pos:end="25:23">dronology</name><operator pos:start="25:24" pos:end="25:24">.</operator><name pos:start="25:25" pos:end="25:28">core</name><operator pos:start="25:29" pos:end="25:29">.</operator><name pos:start="25:30" pos:end="25:33">util</name><operator pos:start="25:34" pos:end="25:34">.</operator><name pos:start="25:35" pos:end="25:44">FormatUtil</name></name>;</import>
<import pos:start="26:1" pos:end="26:78">import <name pos:start="26:8" pos:end="26:77"><name pos:start="26:8" pos:end="26:10">edu</name><operator pos:start="26:11" pos:end="26:11">.</operator><name pos:start="26:12" pos:end="26:13">nd</name><operator pos:start="26:14" pos:end="26:14">.</operator><name pos:start="26:15" pos:end="26:23">dronology</name><operator pos:start="26:24" pos:end="26:24">.</operator><name pos:start="26:25" pos:end="26:32">services</name><operator pos:start="26:33" pos:end="26:33">.</operator><name pos:start="26:34" pos:end="26:37">core</name><operator pos:start="26:38" pos:end="26:38">.</operator><name pos:start="26:39" pos:end="26:49">areamapping</name><operator pos:start="26:50" pos:end="26:50">.</operator><name pos:start="26:51" pos:end="26:77">ExportAllocationInformation</name></name>;</import>
<import pos:start="27:1" pos:end="27:62">import <name pos:start="27:8" pos:end="27:61"><name pos:start="27:8" pos:end="27:10">edu</name><operator pos:start="27:11" pos:end="27:11">.</operator><name pos:start="27:12" pos:end="27:13">nd</name><operator pos:start="27:14" pos:end="27:14">.</operator><name pos:start="27:15" pos:end="27:23">dronology</name><operator pos:start="27:24" pos:end="27:24">.</operator><name pos:start="27:25" pos:end="27:32">services</name><operator pos:start="27:33" pos:end="27:33">.</operator><name pos:start="27:34" pos:end="27:37">core</name><operator pos:start="27:38" pos:end="27:38">.</operator><name pos:start="27:39" pos:end="27:49">areamapping</name><operator pos:start="27:50" pos:end="27:50">.</operator><name pos:start="27:51" pos:end="27:61">ExportDrone</name></name>;</import>
<import pos:start="28:1" pos:end="28:68">import <name pos:start="28:8" pos:end="28:67"><name pos:start="28:8" pos:end="28:10">edu</name><operator pos:start="28:11" pos:end="28:11">.</operator><name pos:start="28:12" pos:end="28:13">nd</name><operator pos:start="28:14" pos:end="28:14">.</operator><name pos:start="28:15" pos:end="28:23">dronology</name><operator pos:start="28:24" pos:end="28:24">.</operator><name pos:start="28:25" pos:end="28:32">services</name><operator pos:start="28:33" pos:end="28:33">.</operator><name pos:start="28:34" pos:end="28:37">core</name><operator pos:start="28:38" pos:end="28:38">.</operator><name pos:start="28:39" pos:end="28:49">areamapping</name><operator pos:start="28:50" pos:end="28:50">.</operator><name pos:start="28:51" pos:end="28:67">MetricsStatistics</name></name>;</import>
<import pos:start="29:1" pos:end="29:57">import <name pos:start="29:8" pos:end="29:56"><name pos:start="29:8" pos:end="29:10">edu</name><operator pos:start="29:11" pos:end="29:11">.</operator><name pos:start="29:12" pos:end="29:13">nd</name><operator pos:start="29:14" pos:end="29:14">.</operator><name pos:start="29:15" pos:end="29:23">dronology</name><operator pos:start="29:24" pos:end="29:24">.</operator><name pos:start="29:25" pos:end="29:32">services</name><operator pos:start="29:33" pos:end="29:33">.</operator><name pos:start="29:34" pos:end="29:37">core</name><operator pos:start="29:38" pos:end="29:38">.</operator><name pos:start="29:39" pos:end="29:43">items</name><operator pos:start="29:44" pos:end="29:44">.</operator><name pos:start="29:45" pos:end="29:56">IFlightRoute</name></name>;</import>
<import pos:start="30:1" pos:end="30:71">import <name pos:start="30:8" pos:end="30:70"><name pos:start="30:8" pos:end="30:10">edu</name><operator pos:start="30:11" pos:end="30:11">.</operator><name pos:start="30:12" pos:end="30:13">nd</name><operator pos:start="30:14" pos:end="30:14">.</operator><name pos:start="30:15" pos:end="30:23">dronology</name><operator pos:start="30:24" pos:end="30:24">.</operator><name pos:start="30:25" pos:end="30:32">services</name><operator pos:start="30:33" pos:end="30:33">.</operator><name pos:start="30:34" pos:end="30:37">core</name><operator pos:start="30:38" pos:end="30:38">.</operator><name pos:start="30:39" pos:end="30:49">persistence</name><operator pos:start="30:50" pos:end="30:50">.</operator><name pos:start="30:51" pos:end="30:70">PersistenceException</name></name>;</import>
<import pos:start="31:1" pos:end="31:87">import <name pos:start="31:8" pos:end="31:86"><name pos:start="31:8" pos:end="31:10">edu</name><operator pos:start="31:11" pos:end="31:11">.</operator><name pos:start="31:12" pos:end="31:13">nd</name><operator pos:start="31:14" pos:end="31:14">.</operator><name pos:start="31:15" pos:end="31:23">dronology</name><operator pos:start="31:24" pos:end="31:24">.</operator><name pos:start="31:25" pos:end="31:32">services</name><operator pos:start="31:33" pos:end="31:33">.</operator><name pos:start="31:34" pos:end="31:37">core</name><operator pos:start="31:38" pos:end="31:38">.</operator><name pos:start="31:39" pos:end="31:49">persistence</name><operator pos:start="31:50" pos:end="31:50">.</operator><name pos:start="31:51" pos:end="31:58">internal</name><operator pos:start="31:59" pos:end="31:59">.</operator><name pos:start="31:60" pos:end="31:86">FlightRouteXStreamPersistor</name></name>;</import>
<import pos:start="32:1" pos:end="32:87">import <name pos:start="32:8" pos:end="32:86"><name pos:start="32:8" pos:end="32:10">edu</name><operator pos:start="32:11" pos:end="32:11">.</operator><name pos:start="32:12" pos:end="32:13">nd</name><operator pos:start="32:14" pos:end="32:14">.</operator><name pos:start="32:15" pos:end="32:23">dronology</name><operator pos:start="32:24" pos:end="32:24">.</operator><name pos:start="32:25" pos:end="32:32">services</name><operator pos:start="32:33" pos:end="32:33">.</operator><name pos:start="32:34" pos:end="32:43">extensions</name><operator pos:start="32:44" pos:end="32:44">.</operator><name pos:start="32:45" pos:end="32:55">areamapping</name><operator pos:start="32:56" pos:end="32:56">.</operator><name pos:start="32:57" pos:end="32:65">selection</name><operator pos:start="32:66" pos:end="32:66">.</operator><name pos:start="32:67" pos:end="32:86">RouteSelectionResult</name></name>;</import>
<import pos:start="33:1" pos:end="33:30">import <name pos:start="33:8" pos:end="33:29"><name pos:start="33:8" pos:end="33:10">net</name><operator pos:start="33:11" pos:end="33:11">.</operator><name pos:start="33:12" pos:end="33:13">mv</name><operator pos:start="33:14" pos:end="33:14">.</operator><name pos:start="33:15" pos:end="33:21">logging</name><operator pos:start="33:22" pos:end="33:22">.</operator><name pos:start="33:23" pos:end="33:29">ILogger</name></name>;</import>
<import pos:start="34:1" pos:end="34:37">import <name pos:start="34:8" pos:end="34:36"><name pos:start="34:8" pos:end="34:10">net</name><operator pos:start="34:11" pos:end="34:11">.</operator><name pos:start="34:12" pos:end="34:13">mv</name><operator pos:start="34:14" pos:end="34:14">.</operator><name pos:start="34:15" pos:end="34:21">logging</name><operator pos:start="34:22" pos:end="34:22">.</operator><name pos:start="34:23" pos:end="34:36">LoggerProvider</name></name>;</import>

<class pos:start="36:1" pos:end="280:1"><specifier pos:start="36:1" pos:end="36:6">public</specifier> class <name pos:start="36:14" pos:end="36:28">SelectionWriter</name> <block pos:start="36:30" pos:end="280:1">{

	<decl_stmt pos:start="38:9" pos:end="38:94"><decl pos:start="38:9" pos:end="38:93"><type pos:start="38:9" pos:end="38:36"><specifier pos:start="38:9" pos:end="38:15">private</specifier> <specifier pos:start="38:17" pos:end="38:22">static</specifier> <specifier pos:start="38:24" pos:end="38:28">final</specifier> <name pos:start="38:30" pos:end="38:36">ILogger</name></type> <name pos:start="38:38" pos:end="38:43">LOGGER</name> <init pos:start="38:45" pos:end="38:93">= <expr pos:start="38:47" pos:end="38:93"><call pos:start="38:47" pos:end="38:93"><name pos:start="38:47" pos:end="38:70"><name pos:start="38:47" pos:end="38:60">LoggerProvider</name><operator pos:start="38:61" pos:end="38:61">.</operator><name pos:start="38:62" pos:end="38:70">getLogger</name></name><argument_list pos:start="38:71" pos:end="38:93">(<argument pos:start="38:72" pos:end="38:92"><expr pos:start="38:72" pos:end="38:92"><name pos:start="38:72" pos:end="38:92"><name pos:start="38:72" pos:end="38:86">SelectionWriter</name><operator pos:start="38:87" pos:end="38:87">.</operator><name pos:start="38:88" pos:end="38:92">class</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

	<decl_stmt pos:start="40:9" pos:end="40:78"><decl pos:start="40:9" pos:end="40:77"><type pos:start="40:9" pos:end="40:35"><specifier pos:start="40:9" pos:end="40:15">private</specifier> <specifier pos:start="40:17" pos:end="40:22">static</specifier> <specifier pos:start="40:24" pos:end="40:28">final</specifier> <name pos:start="40:30" pos:end="40:35">String</name></type> <name pos:start="40:37" pos:end="40:50">WRITE_LOCATION</name> <init pos:start="40:52" pos:end="40:77">= <expr pos:start="40:54" pos:end="40:77"><literal type="string" pos:start="40:54" pos:end="40:77">"/home/michael/mapping/"</literal></expr></init></decl>;</decl_stmt>

	<decl_stmt pos:start="42:9" pos:end="44:110"><decl pos:start="42:9" pos:end="44:109"><type pos:start="42:9" pos:end="42:42"><specifier pos:start="42:9" pos:end="42:14">public</specifier> <specifier pos:start="42:16" pos:end="42:21">static</specifier> <specifier pos:start="42:23" pos:end="42:27">final</specifier> <specifier pos:start="42:29" pos:end="42:37">transient</specifier> <name pos:start="42:39" pos:end="42:42">Gson</name></type> <name pos:start="42:44" pos:end="42:47">GSON</name> <init pos:start="42:49" pos:end="44:109">= <expr pos:start="42:51" pos:end="44:109"><operator pos:start="42:51" pos:end="42:53">new</operator> <call pos:start="42:55" pos:end="42:67"><name pos:start="42:55" pos:end="42:65">GsonBuilder</name><argument_list pos:start="42:66" pos:end="42:67">()</argument_list></call><operator pos:start="42:68" pos:end="42:68">.</operator><call pos:start="42:69" pos:end="42:102"><name pos:start="42:69" pos:end="42:100">enableComplexMapKeySerialization</name><argument_list pos:start="42:101" pos:end="42:102">()</argument_list></call><operator pos:start="42:103" pos:end="42:103">.</operator><call pos:start="42:104" pos:end="42:119"><name pos:start="42:104" pos:end="42:117">serializeNulls</name><argument_list pos:start="42:118" pos:end="42:119">()</argument_list></call>
			<operator pos:start="43:25" pos:end="43:25">.</operator><call pos:start="43:26" pos:end="43:55"><name pos:start="43:26" pos:end="43:38">setDateFormat</name><argument_list pos:start="43:39" pos:end="43:55">(<argument pos:start="43:40" pos:end="43:54"><expr pos:start="43:40" pos:end="43:54"><name pos:start="43:40" pos:end="43:54"><name pos:start="43:40" pos:end="43:49">DateFormat</name><operator pos:start="43:50" pos:end="43:50">.</operator><name pos:start="43:51" pos:end="43:54">LONG</name></name></expr></argument>)</argument_list></call><operator pos:start="43:56" pos:end="43:56">.</operator><call pos:start="43:57" pos:end="43:118"><name pos:start="43:57" pos:end="43:76">setFieldNamingPolicy</name><argument_list pos:start="43:77" pos:end="43:118">(<argument pos:start="43:78" pos:end="43:117"><expr pos:start="43:78" pos:end="43:117"><name pos:start="43:78" pos:end="43:117"><name pos:start="43:78" pos:end="43:94">FieldNamingPolicy</name><operator pos:start="43:95" pos:end="43:95">.</operator><name pos:start="43:96" pos:end="43:117">LOWER_CASE_WITH_DASHES</name></name></expr></argument>)</argument_list></call><operator pos:start="43:119" pos:end="43:119">.</operator><call pos:start="43:120" pos:end="43:134"><name pos:start="43:120" pos:end="43:129">setVersion</name><argument_list pos:start="43:130" pos:end="43:134">(<argument pos:start="43:131" pos:end="43:133"><expr pos:start="43:131" pos:end="43:133"><literal type="number" pos:start="43:131" pos:end="43:133">1.0</literal></expr></argument>)</argument_list></call>
			<operator pos:start="44:25" pos:end="44:25">.</operator><call pos:start="44:26" pos:end="44:62"><name pos:start="44:26" pos:end="44:60">serializeSpecialFloatingPointValues</name><argument_list pos:start="44:61" pos:end="44:62">()</argument_list></call><operator pos:start="44:63" pos:end="44:63">.</operator><call pos:start="44:64" pos:end="44:100"><name pos:start="44:64" pos:end="44:98">serializeSpecialFloatingPointValues</name><argument_list pos:start="44:99" pos:end="44:100">()</argument_list></call><operator pos:start="44:101" pos:end="44:101">.</operator><call pos:start="44:102" pos:end="44:109"><name pos:start="44:102" pos:end="44:107">create</name><argument_list pos:start="44:108" pos:end="44:109">()</argument_list></call></expr></init></decl>;</decl_stmt>

	<decl_stmt pos:start="46:9" pos:end="46:52"><decl pos:start="46:9" pos:end="46:51"><type pos:start="46:9" pos:end="46:35"><specifier pos:start="46:9" pos:end="46:15">private</specifier> <specifier pos:start="46:17" pos:end="46:22">static</specifier> <specifier pos:start="46:24" pos:end="46:28">final</specifier> <name pos:start="46:30" pos:end="46:35">String</name></type> <name pos:start="46:37" pos:end="46:45">SEPARATOR</name> <init pos:start="46:47" pos:end="46:51">= <expr pos:start="46:49" pos:end="46:51"><literal type="string" pos:start="46:49" pos:end="46:51">","</literal></expr></init></decl>;</decl_stmt>
	<decl_stmt pos:start="47:9" pos:end="47:38"><decl pos:start="47:9" pos:end="47:37"><type pos:start="47:9" pos:end="47:32"><specifier pos:start="47:9" pos:end="47:15">private</specifier> <name pos:start="47:17" pos:end="47:32">FileOutputStream</name></type> <name pos:start="47:34" pos:end="47:37">dest</name></decl>;</decl_stmt>
	<decl_stmt pos:start="48:9" pos:end="48:36"><decl pos:start="48:9" pos:end="48:35"><type pos:start="48:9" pos:end="48:31"><specifier pos:start="48:9" pos:end="48:15">private</specifier> <name pos:start="48:17" pos:end="48:31">ZipOutputStream</name></type> <name pos:start="48:33" pos:end="48:35">out</name></decl>;</decl_stmt>

	<function pos:start="50:9" pos:end="65:9"><type pos:start="50:9" pos:end="50:19"><specifier pos:start="50:9" pos:end="50:14">public</specifier> <name pos:start="50:16" pos:end="50:19">void</name></type> <name pos:start="50:21" pos:end="50:39">writeRouteSelection</name><parameter_list pos:start="50:40" pos:end="50:71">(<parameter pos:start="50:41" pos:end="50:70"><decl pos:start="50:41" pos:end="50:70"><type pos:start="50:41" pos:end="50:60"><name pos:start="50:41" pos:end="50:60">RouteSelectionResult</name></type> <name pos:start="50:62" pos:end="50:70">selection</name></decl></parameter>)</parameter_list> <block pos:start="50:73" pos:end="65:9">{<block_content pos:start="52:17" pos:end="63:37">

		<decl_stmt pos:start="52:17" pos:end="52:56"><decl pos:start="52:17" pos:end="52:55"><type pos:start="52:17" pos:end="52:20"><name pos:start="52:17" pos:end="52:20">long</name></type> <name pos:start="52:22" pos:end="52:26">runid</name> <init pos:start="52:28" pos:end="52:55">= <expr pos:start="52:30" pos:end="52:55"><call pos:start="52:30" pos:end="52:55"><name pos:start="52:30" pos:end="52:53"><name pos:start="52:30" pos:end="52:35">System</name><operator pos:start="52:36" pos:end="52:36">.</operator><name pos:start="52:37" pos:end="52:53">currentTimeMillis</name></name><argument_list pos:start="52:54" pos:end="52:55">()</argument_list></call></expr></init></decl>;</decl_stmt>
		<decl_stmt pos:start="53:17" pos:end="53:90"><decl pos:start="53:17" pos:end="53:89"><type pos:start="53:17" pos:end="53:22"><name pos:start="53:17" pos:end="53:22">String</name></type> <name pos:start="53:24" pos:end="53:29">format</name> <init pos:start="53:31" pos:end="53:89">= <expr pos:start="53:33" pos:end="53:89"><call pos:start="53:33" pos:end="53:89"><name pos:start="53:33" pos:end="53:58"><name pos:start="53:33" pos:end="53:42">FormatUtil</name><operator pos:start="53:43" pos:end="53:43">.</operator><name pos:start="53:44" pos:end="53:58">formatTimestamp</name></name><argument_list pos:start="53:59" pos:end="53:89">(<argument pos:start="53:60" pos:end="53:64"><expr pos:start="53:60" pos:end="53:64"><name pos:start="53:60" pos:end="53:64">runid</name></expr></argument>, <argument pos:start="53:67" pos:end="53:88"><expr pos:start="53:67" pos:end="53:88"><name pos:start="53:67" pos:end="53:88"><name pos:start="53:67" pos:end="53:76">FormatUtil</name><operator pos:start="53:77" pos:end="53:77">.</operator><name pos:start="53:78" pos:end="53:88">FORMAT_FILE</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<if_stmt pos:start="54:17" pos:end="56:17"><if pos:start="54:17" pos:end="56:17">if <condition pos:start="54:20" pos:end="54:63">(<expr pos:start="54:21" pos:end="54:62"><call pos:start="54:21" pos:end="54:62"><name pos:start="54:21" pos:end="54:35"><name pos:start="54:21" pos:end="54:25">Files</name><operator pos:start="54:26" pos:end="54:26">.</operator><name pos:start="54:27" pos:end="54:35">notExists</name></name><argument_list pos:start="54:36" pos:end="54:62">(<argument pos:start="54:37" pos:end="54:61"><expr pos:start="54:37" pos:end="54:61"><call pos:start="54:37" pos:end="54:61"><name pos:start="54:37" pos:end="54:45"><name pos:start="54:37" pos:end="54:41">Paths</name><operator pos:start="54:42" pos:end="54:42">.</operator><name pos:start="54:43" pos:end="54:45">get</name></name><argument_list pos:start="54:46" pos:end="54:61">(<argument pos:start="54:47" pos:end="54:60"><expr pos:start="54:47" pos:end="54:60"><name pos:start="54:47" pos:end="54:60">WRITE_LOCATION</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="54:65" pos:end="56:17">{<block_content pos:start="55:25" pos:end="55:58">
			<expr_stmt pos:start="55:25" pos:end="55:58"><expr pos:start="55:25" pos:end="55:57"><operator pos:start="55:25" pos:end="55:27">new</operator> <call pos:start="55:29" pos:end="55:48"><name pos:start="55:29" pos:end="55:32">File</name><argument_list pos:start="55:33" pos:end="55:48">(<argument pos:start="55:34" pos:end="55:47"><expr pos:start="55:34" pos:end="55:47"><name pos:start="55:34" pos:end="55:47">WRITE_LOCATION</name></expr></argument>)</argument_list></call><operator pos:start="55:49" pos:end="55:49">.</operator><call pos:start="55:50" pos:end="55:57"><name pos:start="55:50" pos:end="55:55">mkdirs</name><argument_list pos:start="55:56" pos:end="55:57">()</argument_list></call></expr>;</expr_stmt>
		</block_content>}</block></if></if_stmt>

		<expr_stmt pos:start="58:17" pos:end="58:80"><expr pos:start="58:17" pos:end="58:79"><call pos:start="58:17" pos:end="58:79"><name pos:start="58:17" pos:end="58:29">writeStatFile</name><argument_list pos:start="58:30" pos:end="58:79">(<argument pos:start="58:31" pos:end="58:67"><expr pos:start="58:31" pos:end="58:67"><name pos:start="58:31" pos:end="58:44">WRITE_LOCATION</name> <operator pos:start="58:46" pos:end="58:46">+</operator> <literal type="string" pos:start="58:48" pos:end="58:49">""</literal> <operator pos:start="58:51" pos:end="58:51">+</operator> <name pos:start="58:53" pos:end="58:58">format</name> <operator pos:start="58:60" pos:end="58:60">+</operator> <literal type="string" pos:start="58:62" pos:end="58:67">".csv"</literal></expr></argument>, <argument pos:start="58:70" pos:end="58:78"><expr pos:start="58:70" pos:end="58:78"><name pos:start="58:70" pos:end="58:78">selection</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt pos:start="59:17" pos:end="59:80"><expr pos:start="59:17" pos:end="59:79"><call pos:start="59:17" pos:end="59:79"><name pos:start="59:17" pos:end="59:29">writeJSONFile</name><argument_list pos:start="59:30" pos:end="59:79">(<argument pos:start="59:31" pos:end="59:67"><expr pos:start="59:31" pos:end="59:67"><name pos:start="59:31" pos:end="59:44">WRITE_LOCATION</name> <operator pos:start="59:46" pos:end="59:46">+</operator> <literal type="string" pos:start="59:48" pos:end="59:49">""</literal> <operator pos:start="59:51" pos:end="59:51">+</operator> <name pos:start="59:53" pos:end="59:58">format</name> <operator pos:start="59:60" pos:end="59:60">+</operator> <literal type="string" pos:start="59:62" pos:end="59:67">".txt"</literal></expr></argument>, <argument pos:start="59:70" pos:end="59:78"><expr pos:start="59:70" pos:end="59:78"><name pos:start="59:70" pos:end="59:78">selection</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		<expr_stmt pos:start="61:17" pos:end="61:72"><expr pos:start="61:17" pos:end="61:71"><call pos:start="61:17" pos:end="61:71"><name pos:start="61:17" pos:end="61:32">createNewZipFile</name><argument_list pos:start="61:33" pos:end="61:71">(<argument pos:start="61:34" pos:end="61:70"><expr pos:start="61:34" pos:end="61:70"><name pos:start="61:34" pos:end="61:47">WRITE_LOCATION</name> <operator pos:start="61:49" pos:end="61:49">+</operator> <literal type="string" pos:start="61:51" pos:end="61:52">""</literal> <operator pos:start="61:54" pos:end="61:54">+</operator> <name pos:start="61:56" pos:end="61:61">format</name> <operator pos:start="61:63" pos:end="61:63">+</operator> <literal type="string" pos:start="61:65" pos:end="61:70">".zip"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		<expr_stmt pos:start="63:17" pos:end="63:37"><expr pos:start="63:17" pos:end="63:36"><call pos:start="63:17" pos:end="63:36"><name pos:start="63:17" pos:end="63:25">zipRoutes</name><argument_list pos:start="63:26" pos:end="63:36">(<argument pos:start="63:27" pos:end="63:35"><expr pos:start="63:27" pos:end="63:35"><name pos:start="63:27" pos:end="63:35">selection</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	</block_content>}</block></function>

	<function pos:start="67:9" pos:end="90:9"><type pos:start="67:9" pos:end="67:20"><specifier pos:start="67:9" pos:end="67:15">private</specifier> <name pos:start="67:17" pos:end="67:20">void</name></type> <name pos:start="67:22" pos:end="67:34">writeJSONFile</name><parameter_list pos:start="67:35" pos:end="67:83">(<parameter pos:start="67:36" pos:end="67:50"><decl pos:start="67:36" pos:end="67:50"><type pos:start="67:36" pos:end="67:50"><name pos:start="67:36" pos:end="67:41">String</name></type> <name pos:start="67:43" pos:end="67:50">filename</name></decl></parameter>, <parameter pos:start="67:53" pos:end="67:82"><decl pos:start="67:53" pos:end="67:82"><type pos:start="67:53" pos:end="67:82"><name pos:start="67:53" pos:end="67:72">RouteSelectionResult</name></type> <name pos:start="67:74" pos:end="67:82">selection</name></decl></parameter>)</parameter_list> <block pos:start="67:85" pos:end="90:9">{<block_content pos:start="69:17" pos:end="88:17">

		<decl_stmt pos:start="69:17" pos:end="69:106"><decl pos:start="69:17" pos:end="69:105"><type pos:start="69:17" pos:end="69:49"><name pos:start="69:17" pos:end="69:49"><name pos:start="69:17" pos:end="69:20">List</name><argument_list type="generic" pos:start="69:21" pos:end="69:49">&lt;<argument pos:start="69:22" pos:end="69:48"><name pos:start="69:22" pos:end="69:48">ExportAllocationInformation</name></argument>&gt;</argument_list></name></type> <name pos:start="69:51" pos:end="69:61">allocations</name> <init pos:start="69:63" pos:end="69:105">= <expr pos:start="69:65" pos:end="69:105"><call pos:start="69:65" pos:end="69:105"><name pos:start="69:65" pos:end="69:103"><name pos:start="69:65" pos:end="69:73">selection</name><operator pos:start="69:74" pos:end="69:74">.</operator><name pos:start="69:75" pos:end="69:103">getEportAllocationInformation</name></name><argument_list pos:start="69:104" pos:end="69:105">()</argument_list></call></expr></init></decl>;</decl_stmt>
		<decl_stmt pos:start="70:17" pos:end="70:75"><decl pos:start="70:17" pos:end="70:74"><type pos:start="70:17" pos:end="70:37"><name pos:start="70:17" pos:end="70:37"><name pos:start="70:17" pos:end="70:20">List</name><argument_list type="generic" pos:start="70:21" pos:end="70:37">&lt;<argument pos:start="70:22" pos:end="70:36"><name pos:start="70:22" pos:end="70:36">WriteAllocation</name></argument>&gt;</argument_list></name></type> <name pos:start="70:39" pos:end="70:54">writeAllocations</name> <init pos:start="70:56" pos:end="70:74">= <expr pos:start="70:58" pos:end="70:74"><operator pos:start="70:58" pos:end="70:60">new</operator> <call pos:start="70:62" pos:end="70:74"><name pos:start="70:62" pos:end="70:72"><name pos:start="70:62" pos:end="70:70">ArrayList</name><argument_list type="generic" pos:start="70:71" pos:end="70:72">&lt;&gt;</argument_list></name><argument_list pos:start="70:73" pos:end="70:74">()</argument_list></call></expr></init></decl>;</decl_stmt>
		<for pos:start="71:17" pos:end="81:17">for <control pos:start="71:21" pos:end="71:68">(<init pos:start="71:22" pos:end="71:67"><decl pos:start="71:22" pos:end="71:67"><type pos:start="71:22" pos:end="71:48"><name pos:start="71:22" pos:end="71:48">ExportAllocationInformation</name></type> <name pos:start="71:50" pos:end="71:53">info</name> <range pos:start="71:55" pos:end="71:67">: <expr pos:start="71:57" pos:end="71:67"><name pos:start="71:57" pos:end="71:67">allocations</name></expr></range></decl></init>)</control> <block pos:start="71:70" pos:end="81:17">{<block_content pos:start="72:25" pos:end="80:52">
			<decl_stmt pos:start="72:25" pos:end="72:70"><decl pos:start="72:25" pos:end="72:69"><type pos:start="72:25" pos:end="72:39"><name pos:start="72:25" pos:end="72:39">WriteAllocation</name></type> <name pos:start="72:41" pos:end="72:45">alloc</name> <init pos:start="72:47" pos:end="72:69">= <expr pos:start="72:49" pos:end="72:69"><operator pos:start="72:49" pos:end="72:51">new</operator> <call pos:start="72:53" pos:end="72:69"><name pos:start="72:53" pos:end="72:67">WriteAllocation</name><argument_list pos:start="72:68" pos:end="72:69">()</argument_list></call></expr></init></decl>;</decl_stmt>
			<for pos:start="73:25" pos:end="79:25">for <control pos:start="73:29" pos:end="73:74">(<init pos:start="73:30" pos:end="73:73"><decl pos:start="73:30" pos:end="73:73"><type pos:start="73:30" pos:end="73:40"><name pos:start="73:30" pos:end="73:40">ExportDrone</name></type> <name pos:start="73:42" pos:end="73:44">dro</name> <range pos:start="73:46" pos:end="73:73">: <expr pos:start="73:48" pos:end="73:73"><call pos:start="73:48" pos:end="73:73"><name pos:start="73:48" pos:end="73:71"><name pos:start="73:48" pos:end="73:51">info</name><operator pos:start="73:52" pos:end="73:52">.</operator><name pos:start="73:53" pos:end="73:71">getDroneAllocations</name></name><argument_list pos:start="73:72" pos:end="73:73">()</argument_list></call></expr></range></decl></init>)</control> <block pos:start="73:76" pos:end="79:25">{<block_content pos:start="74:33" pos:end="78:56">
				<decl_stmt pos:start="74:33" pos:end="74:77"><decl pos:start="74:33" pos:end="74:76"><type pos:start="74:33" pos:end="74:41"><name pos:start="74:33" pos:end="74:41">WriteData</name></type> <name pos:start="74:43" pos:end="74:44">wd</name> <init pos:start="74:46" pos:end="74:76">= <expr pos:start="74:48" pos:end="74:76"><operator pos:start="74:48" pos:end="74:50">new</operator> <call pos:start="74:52" pos:end="74:76"><name pos:start="74:52" pos:end="74:60">WriteData</name><argument_list pos:start="74:61" pos:end="74:76">(<argument pos:start="74:62" pos:end="74:75"><expr pos:start="74:62" pos:end="74:75"><call pos:start="74:62" pos:end="74:75"><name pos:start="74:62" pos:end="74:73"><name pos:start="74:62" pos:end="74:64">dro</name><operator pos:start="74:65" pos:end="74:65">.</operator><name pos:start="74:66" pos:end="74:73">getUAVId</name></name><argument_list pos:start="74:74" pos:end="74:75">()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
				<expr_stmt pos:start="75:33" pos:end="77:35"><expr pos:start="75:33" pos:end="77:34"><call pos:start="75:33" pos:end="75:61"><name pos:start="75:33" pos:end="75:59"><name pos:start="75:33" pos:end="75:35">dro</name><operator pos:start="75:36" pos:end="75:36">.</operator><name pos:start="75:37" pos:end="75:59">getDroneRouteAssignment</name></name><argument_list pos:start="75:60" pos:end="75:61">()</argument_list></call><operator pos:start="75:62" pos:end="75:62">.</operator><call pos:start="75:63" pos:end="77:34"><name pos:start="75:63" pos:end="75:69">forEach</name><argument_list pos:start="75:70" pos:end="77:34">(<argument pos:start="75:71" pos:end="77:33"><expr pos:start="75:71" pos:end="77:33"><lambda pos:start="75:71" pos:end="77:33"><parameter_list type="pseudo" pos:start="75:71" pos:end="75:75"><parameter pos:start="75:71" pos:end="75:75"><decl pos:start="75:71" pos:end="75:75"><name pos:start="75:71" pos:end="75:75">route</name></decl></parameter></parameter_list> -&gt; <block pos:start="75:80" pos:end="77:33">{<block_content pos:start="76:41" pos:end="76:69">
					<expr_stmt pos:start="76:41" pos:end="76:69"><expr pos:start="76:41" pos:end="76:68"><call pos:start="76:41" pos:end="76:68"><name pos:start="76:41" pos:end="76:51"><name pos:start="76:41" pos:end="76:42">wd</name><operator pos:start="76:43" pos:end="76:43">.</operator><name pos:start="76:44" pos:end="76:51">addRoute</name></name><argument_list pos:start="76:52" pos:end="76:68">(<argument pos:start="76:53" pos:end="76:67"><expr pos:start="76:53" pos:end="76:67"><call pos:start="76:53" pos:end="76:67"><name pos:start="76:53" pos:end="76:65"><name pos:start="76:53" pos:end="76:57">route</name><operator pos:start="76:58" pos:end="76:58">.</operator><name pos:start="76:59" pos:end="76:65">getName</name></name><argument_list pos:start="76:66" pos:end="76:67">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				</block_content>}</block></lambda></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<expr_stmt pos:start="78:33" pos:end="78:56"><expr pos:start="78:33" pos:end="78:55"><call pos:start="78:33" pos:end="78:55"><name pos:start="78:33" pos:end="78:51"><name pos:start="78:33" pos:end="78:37">alloc</name><operator pos:start="78:38" pos:end="78:38">.</operator><name pos:start="78:39" pos:end="78:51">addAssignment</name></name><argument_list pos:start="78:52" pos:end="78:55">(<argument pos:start="78:53" pos:end="78:54"><expr pos:start="78:53" pos:end="78:54"><name pos:start="78:53" pos:end="78:54">wd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			</block_content>}</block></for>
			<expr_stmt pos:start="80:25" pos:end="80:52"><expr pos:start="80:25" pos:end="80:51"><call pos:start="80:25" pos:end="80:51"><name pos:start="80:25" pos:end="80:44"><name pos:start="80:25" pos:end="80:40">writeAllocations</name><operator pos:start="80:41" pos:end="80:41">.</operator><name pos:start="80:42" pos:end="80:44">add</name></name><argument_list pos:start="80:45" pos:end="80:51">(<argument pos:start="80:46" pos:end="80:50"><expr pos:start="80:46" pos:end="80:50"><name pos:start="80:46" pos:end="80:50">alloc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		</block_content>}</block></for>

		<decl_stmt pos:start="83:17" pos:end="83:66"><decl pos:start="83:17" pos:end="83:65"><type pos:start="83:17" pos:end="83:22"><name pos:start="83:17" pos:end="83:22">String</name></type> <name pos:start="83:24" pos:end="83:33">jsonString</name> <init pos:start="83:35" pos:end="83:65">= <expr pos:start="83:37" pos:end="83:65"><call pos:start="83:37" pos:end="83:65"><name pos:start="83:37" pos:end="83:47"><name pos:start="83:37" pos:end="83:40">GSON</name><operator pos:start="83:41" pos:end="83:41">.</operator><name pos:start="83:42" pos:end="83:47">toJson</name></name><argument_list pos:start="83:48" pos:end="83:65">(<argument pos:start="83:49" pos:end="83:64"><expr pos:start="83:49" pos:end="83:64"><name pos:start="83:49" pos:end="83:64">writeAllocations</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<try pos:start="84:17" pos:end="88:17">try <block pos:start="84:21" pos:end="86:17">{<block_content pos:start="85:25" pos:end="85:84">
			<expr_stmt pos:start="85:25" pos:end="85:84"><expr pos:start="85:25" pos:end="85:83"><call pos:start="85:25" pos:end="85:83"><name pos:start="85:25" pos:end="85:51"><name pos:start="85:25" pos:end="85:33">FileUtils</name><operator pos:start="85:34" pos:end="85:34">.</operator><name pos:start="85:35" pos:end="85:51">writeStringToFile</name></name><argument_list pos:start="85:52" pos:end="85:83">(<argument pos:start="85:53" pos:end="85:70"><expr pos:start="85:53" pos:end="85:70"><operator pos:start="85:53" pos:end="85:55">new</operator> <call pos:start="85:57" pos:end="85:70"><name pos:start="85:57" pos:end="85:60">File</name><argument_list pos:start="85:61" pos:end="85:70">(<argument pos:start="85:62" pos:end="85:69"><expr pos:start="85:62" pos:end="85:69"><name pos:start="85:62" pos:end="85:69">filename</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="85:73" pos:end="85:82"><expr pos:start="85:73" pos:end="85:82"><name pos:start="85:73" pos:end="85:82">jsonString</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		</block_content>}</block> <catch pos:start="86:19" pos:end="88:17">catch <parameter_list pos:start="86:25" pos:end="86:39">(<parameter pos:start="86:26" pos:end="86:38"><decl pos:start="86:26" pos:end="86:38"><type pos:start="86:26" pos:end="86:38"><name pos:start="86:26" pos:end="86:36">IOException</name></type> <name pos:start="86:38" pos:end="86:38">e</name></decl></parameter>)</parameter_list> <block pos:start="86:41" pos:end="88:17">{<block_content pos:start="87:25" pos:end="87:40">
			<expr_stmt pos:start="87:25" pos:end="87:40"><expr pos:start="87:25" pos:end="87:39"><call pos:start="87:25" pos:end="87:39"><name pos:start="87:25" pos:end="87:36"><name pos:start="87:25" pos:end="87:30">LOGGER</name><operator pos:start="87:31" pos:end="87:31">.</operator><name pos:start="87:32" pos:end="87:36">error</name></name><argument_list pos:start="87:37" pos:end="87:39">(<argument pos:start="87:38" pos:end="87:38"><expr pos:start="87:38" pos:end="87:38"><name pos:start="87:38" pos:end="87:38">e</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		</block_content>}</block></catch></try>

	</block_content>}</block></function>

	<function pos:start="92:9" pos:end="115:9"><type pos:start="92:9" pos:end="92:20"><specifier pos:start="92:9" pos:end="92:15">private</specifier> <name pos:start="92:17" pos:end="92:20">void</name></type> <name pos:start="92:22" pos:end="92:30">zipRoutes</name><parameter_list pos:start="92:31" pos:end="92:62">(<parameter pos:start="92:32" pos:end="92:61"><decl pos:start="92:32" pos:end="92:61"><type pos:start="92:32" pos:end="92:51"><name pos:start="92:32" pos:end="92:51">RouteSelectionResult</name></type> <name pos:start="92:53" pos:end="92:61">selection</name></decl></parameter>)</parameter_list> <block pos:start="92:64" pos:end="115:9">{<block_content pos:start="93:17" pos:end="113:17">
		<decl_stmt pos:start="93:17" pos:end="93:71"><decl pos:start="93:17" pos:end="93:70"><type pos:start="93:17" pos:end="93:45"><name pos:start="93:17" pos:end="93:45"><name pos:start="93:17" pos:end="93:23">HashMap</name><argument_list type="generic" pos:start="93:24" pos:end="93:45">&lt;<argument pos:start="93:25" pos:end="93:30"><name pos:start="93:25" pos:end="93:30">String</name></argument>, <argument pos:start="93:33" pos:end="93:44"><name pos:start="93:33" pos:end="93:44">IFlightRoute</name></argument>&gt;</argument_list></name></type> <name pos:start="93:47" pos:end="93:52">routes</name> <init pos:start="93:54" pos:end="93:70">= <expr pos:start="93:56" pos:end="93:70"><operator pos:start="93:56" pos:end="93:58">new</operator> <call pos:start="93:60" pos:end="93:70"><name pos:start="93:60" pos:end="93:68"><name pos:start="93:60" pos:end="93:66">HashMap</name><argument_list type="generic" pos:start="93:67" pos:end="93:68">&lt;&gt;</argument_list></name><argument_list pos:start="93:69" pos:end="93:70">()</argument_list></call></expr></init></decl>;</decl_stmt>

		<for pos:start="95:17" pos:end="101:17">for <control pos:start="95:21" pos:end="95:99">(<init pos:start="95:22" pos:end="95:98"><decl pos:start="95:22" pos:end="95:98"><type pos:start="95:22" pos:end="95:48"><name pos:start="95:22" pos:end="95:48">ExportAllocationInformation</name></type> <name pos:start="95:50" pos:end="95:54">alloc</name> <range pos:start="95:56" pos:end="95:98">: <expr pos:start="95:58" pos:end="95:98"><call pos:start="95:58" pos:end="95:98"><name pos:start="95:58" pos:end="95:96"><name pos:start="95:58" pos:end="95:66">selection</name><operator pos:start="95:67" pos:end="95:67">.</operator><name pos:start="95:68" pos:end="95:96">getEportAllocationInformation</name></name><argument_list pos:start="95:97" pos:end="95:98">()</argument_list></call></expr></range></decl></init>)</control> <block pos:start="95:101" pos:end="101:17">{<block_content pos:start="96:25" pos:end="100:25">
			<for pos:start="96:25" pos:end="100:25">for <control pos:start="96:29" pos:end="96:73">(<init pos:start="96:30" pos:end="96:72"><decl pos:start="96:30" pos:end="96:72"><type pos:start="96:30" pos:end="96:40"><name pos:start="96:30" pos:end="96:40">ExportDrone</name></type> <name pos:start="96:42" pos:end="96:42">a</name> <range pos:start="96:44" pos:end="96:72">: <expr pos:start="96:46" pos:end="96:72"><call pos:start="96:46" pos:end="96:72"><name pos:start="96:46" pos:end="96:70"><name pos:start="96:46" pos:end="96:50">alloc</name><operator pos:start="96:51" pos:end="96:51">.</operator><name pos:start="96:52" pos:end="96:70">getDroneAllocations</name></name><argument_list pos:start="96:71" pos:end="96:72">()</argument_list></call></expr></range></decl></init>)</control> <block pos:start="96:75" pos:end="100:25">{<block_content pos:start="97:33" pos:end="99:33">
				<for pos:start="97:33" pos:end="99:33">for <control pos:start="97:37" pos:end="97:82">(<init pos:start="97:38" pos:end="97:81"><decl pos:start="97:38" pos:end="97:81"><type pos:start="97:38" pos:end="97:49"><name pos:start="97:38" pos:end="97:49">IFlightRoute</name></type> <name pos:start="97:51" pos:end="97:51">r</name> <range pos:start="97:53" pos:end="97:81">: <expr pos:start="97:55" pos:end="97:81"><call pos:start="97:55" pos:end="97:81"><name pos:start="97:55" pos:end="97:79"><name pos:start="97:55" pos:end="97:55">a</name><operator pos:start="97:56" pos:end="97:56">.</operator><name pos:start="97:57" pos:end="97:79">getDroneRouteAssignment</name></name><argument_list pos:start="97:80" pos:end="97:81">()</argument_list></call></expr></range></decl></init>)</control> <block pos:start="97:84" pos:end="99:33">{<block_content pos:start="98:41" pos:end="98:67">
					<expr_stmt pos:start="98:41" pos:end="98:67"><expr pos:start="98:41" pos:end="98:66"><call pos:start="98:41" pos:end="98:66"><name pos:start="98:41" pos:end="98:50"><name pos:start="98:41" pos:end="98:46">routes</name><operator pos:start="98:47" pos:end="98:47">.</operator><name pos:start="98:48" pos:end="98:50">put</name></name><argument_list pos:start="98:51" pos:end="98:66">(<argument pos:start="98:52" pos:end="98:62"><expr pos:start="98:52" pos:end="98:62"><call pos:start="98:52" pos:end="98:62"><name pos:start="98:52" pos:end="98:60"><name pos:start="98:52" pos:end="98:52">r</name><operator pos:start="98:53" pos:end="98:53">.</operator><name pos:start="98:54" pos:end="98:60">getName</name></name><argument_list pos:start="98:61" pos:end="98:62">()</argument_list></call></expr></argument>, <argument pos:start="98:65" pos:end="98:65"><expr pos:start="98:65" pos:end="98:65"><name pos:start="98:65" pos:end="98:65">r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				</block_content>}</block></for>
			</block_content>}</block></for>
		</block_content>}</block></for>

		<expr_stmt pos:start="103:17" pos:end="103:62"><expr pos:start="103:17" pos:end="103:61"><call pos:start="103:17" pos:end="103:61"><name pos:start="103:17" pos:end="103:27"><name pos:start="103:17" pos:end="103:22">LOGGER</name><operator pos:start="103:23" pos:end="103:23">.</operator><name pos:start="103:24" pos:end="103:27">info</name></name><argument_list pos:start="103:28" pos:end="103:61">(<argument pos:start="103:29" pos:end="103:60"><expr pos:start="103:29" pos:end="103:60"><literal type="string" pos:start="103:29" pos:end="103:44">"UNIQUE ROUTES:"</literal> <operator pos:start="103:46" pos:end="103:46">+</operator> <call pos:start="103:48" pos:end="103:60"><name pos:start="103:48" pos:end="103:58"><name pos:start="103:48" pos:end="103:53">routes</name><operator pos:start="103:54" pos:end="103:54">.</operator><name pos:start="103:55" pos:end="103:58">size</name></name><argument_list pos:start="103:59" pos:end="103:60">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt pos:start="104:17" pos:end="106:19"><expr pos:start="104:17" pos:end="106:18"><call pos:start="104:17" pos:end="106:18"><name pos:start="104:17" pos:end="104:30"><name pos:start="104:17" pos:end="104:22">routes</name><operator pos:start="104:23" pos:end="104:23">.</operator><name pos:start="104:24" pos:end="104:30">forEach</name></name><argument_list pos:start="104:31" pos:end="106:18">(<argument pos:start="104:32" pos:end="106:17"><expr pos:start="104:32" pos:end="106:17"><lambda pos:start="104:32" pos:end="106:17"><parameter_list pos:start="104:32" pos:end="104:44">(<parameter pos:start="104:33" pos:end="104:36"><decl pos:start="104:33" pos:end="104:36"><name pos:start="104:33" pos:end="104:36">name</name></decl></parameter>, <parameter pos:start="104:39" pos:end="104:43"><decl pos:start="104:39" pos:end="104:43"><name pos:start="104:39" pos:end="104:43">route</name></decl></parameter>)</parameter_list> -&gt; <block pos:start="104:49" pos:end="106:17">{<block_content pos:start="105:25" pos:end="105:40">
			<expr_stmt pos:start="105:25" pos:end="105:40"><expr pos:start="105:25" pos:end="105:39"><call pos:start="105:25" pos:end="105:39"><name pos:start="105:25" pos:end="105:32">zipRoute</name><argument_list pos:start="105:33" pos:end="105:39">(<argument pos:start="105:34" pos:end="105:38"><expr pos:start="105:34" pos:end="105:38"><name pos:start="105:34" pos:end="105:38">route</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		</block_content>}</block></lambda></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<try pos:start="107:17" pos:end="113:17">try <block pos:start="107:21" pos:end="111:17">{<block_content pos:start="108:25" pos:end="110:36">
			<expr_stmt pos:start="108:25" pos:end="108:36"><expr pos:start="108:25" pos:end="108:35"><call pos:start="108:25" pos:end="108:35"><name pos:start="108:25" pos:end="108:33"><name pos:start="108:25" pos:end="108:27">out</name><operator pos:start="108:28" pos:end="108:28">.</operator><name pos:start="108:29" pos:end="108:33">flush</name></name><argument_list pos:start="108:34" pos:end="108:35">()</argument_list></call></expr>;</expr_stmt>
			<expr_stmt pos:start="109:25" pos:end="109:37"><expr pos:start="109:25" pos:end="109:36"><call pos:start="109:25" pos:end="109:36"><name pos:start="109:25" pos:end="109:34"><name pos:start="109:25" pos:end="109:27">out</name><operator pos:start="109:28" pos:end="109:28">.</operator><name pos:start="109:29" pos:end="109:34">finish</name></name><argument_list pos:start="109:35" pos:end="109:36">()</argument_list></call></expr>;</expr_stmt>
			<expr_stmt pos:start="110:25" pos:end="110:36"><expr pos:start="110:25" pos:end="110:35"><call pos:start="110:25" pos:end="110:35"><name pos:start="110:25" pos:end="110:33"><name pos:start="110:25" pos:end="110:27">out</name><operator pos:start="110:28" pos:end="110:28">.</operator><name pos:start="110:29" pos:end="110:33">close</name></name><argument_list pos:start="110:34" pos:end="110:35">()</argument_list></call></expr>;</expr_stmt>
		</block_content>}</block> <catch pos:start="111:19" pos:end="113:17">catch <parameter_list pos:start="111:25" pos:end="111:39">(<parameter pos:start="111:26" pos:end="111:38"><decl pos:start="111:26" pos:end="111:38"><type pos:start="111:26" pos:end="111:38"><name pos:start="111:26" pos:end="111:36">IOException</name></type> <name pos:start="111:38" pos:end="111:38">e</name></decl></parameter>)</parameter_list> <block pos:start="111:41" pos:end="113:17">{<block_content pos:start="112:25" pos:end="112:40">
			<expr_stmt pos:start="112:25" pos:end="112:40"><expr pos:start="112:25" pos:end="112:39"><call pos:start="112:25" pos:end="112:39"><name pos:start="112:25" pos:end="112:36"><name pos:start="112:25" pos:end="112:30">LOGGER</name><operator pos:start="112:31" pos:end="112:31">.</operator><name pos:start="112:32" pos:end="112:36">error</name></name><argument_list pos:start="112:37" pos:end="112:39">(<argument pos:start="112:38" pos:end="112:38"><expr pos:start="112:38" pos:end="112:38"><name pos:start="112:38" pos:end="112:38">e</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		</block_content>}</block></catch></try>

	</block_content>}</block></function>

	<decl_stmt pos:start="117:9" pos:end="117:81"><decl pos:start="117:9" pos:end="117:80"><type pos:start="117:9" pos:end="117:35"><name pos:start="117:9" pos:end="117:35">FlightRouteXStreamPersistor</name></type> <name pos:start="117:37" pos:end="117:44">provider</name> <init pos:start="117:46" pos:end="117:80">= <expr pos:start="117:48" pos:end="117:80"><operator pos:start="117:48" pos:end="117:50">new</operator> <call pos:start="117:52" pos:end="117:80"><name pos:start="117:52" pos:end="117:78">FlightRouteXStreamPersistor</name><argument_list pos:start="117:79" pos:end="117:80">()</argument_list></call></expr></init></decl>;</decl_stmt>

	<function pos:start="119:9" pos:end="136:9"><type pos:start="119:9" pos:end="119:20"><specifier pos:start="119:9" pos:end="119:15">private</specifier> <name pos:start="119:17" pos:end="119:20">void</name></type> <name pos:start="119:22" pos:end="119:29">zipRoute</name><parameter_list pos:start="119:30" pos:end="119:49">(<parameter pos:start="119:31" pos:end="119:48"><decl pos:start="119:31" pos:end="119:48"><type pos:start="119:31" pos:end="119:42"><name pos:start="119:31" pos:end="119:42">IFlightRoute</name></type> <name pos:start="119:44" pos:end="119:48">route</name></decl></parameter>)</parameter_list> <block pos:start="119:51" pos:end="136:9">{<block_content pos:start="120:17" pos:end="134:17">
		<try pos:start="120:17" pos:end="134:17">try <block pos:start="120:21" pos:end="129:17">{<block_content pos:start="121:25" pos:end="127:41">
			<decl_stmt pos:start="121:25" pos:end="121:76"><decl pos:start="121:25" pos:end="121:75"><type pos:start="121:25" pos:end="121:30"><name pos:start="121:25" pos:end="121:30">String</name></type> <name pos:start="121:32" pos:end="121:39">filename</name> <init pos:start="121:41" pos:end="121:75">= <expr pos:start="121:43" pos:end="121:75"><call pos:start="121:43" pos:end="121:57"><name pos:start="121:43" pos:end="121:55"><name pos:start="121:43" pos:end="121:47">route</name><operator pos:start="121:48" pos:end="121:48">.</operator><name pos:start="121:49" pos:end="121:55">getName</name></name><argument_list pos:start="121:56" pos:end="121:57">()</argument_list></call><operator pos:start="121:58" pos:end="121:58">.</operator><call pos:start="121:59" pos:end="121:75"><name pos:start="121:59" pos:end="121:65">replace</name><argument_list pos:start="121:66" pos:end="121:75">(<argument pos:start="121:67" pos:end="121:69"><expr pos:start="121:67" pos:end="121:69"><literal type="string" pos:start="121:67" pos:end="121:69">" "</literal></expr></argument>, <argument pos:start="121:72" pos:end="121:74"><expr pos:start="121:72" pos:end="121:74"><literal type="string" pos:start="121:72" pos:end="121:74">"_"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

			<expr_stmt pos:start="123:25" pos:end="123:77"><expr pos:start="123:25" pos:end="123:76"><call pos:start="123:25" pos:end="123:76"><name pos:start="123:25" pos:end="123:35"><name pos:start="123:25" pos:end="123:30">LOGGER</name><operator pos:start="123:31" pos:end="123:31">.</operator><name pos:start="123:32" pos:end="123:35">info</name></name><argument_list pos:start="123:36" pos:end="123:76">(<argument pos:start="123:37" pos:end="123:75"><expr pos:start="123:37" pos:end="123:75"><literal type="string" pos:start="123:37" pos:end="123:52">"new zip entry:"</literal> <operator pos:start="123:54" pos:end="123:54">+</operator> <name pos:start="123:56" pos:end="123:63">filename</name> <operator pos:start="123:65" pos:end="123:65">+</operator> <literal type="string" pos:start="123:67" pos:end="123:75">".froute"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<decl_stmt pos:start="124:25" pos:end="124:76"><decl pos:start="124:25" pos:end="124:75"><type pos:start="124:25" pos:end="124:32"><name pos:start="124:25" pos:end="124:32">ZipEntry</name></type> <name pos:start="124:34" pos:end="124:38">entry</name> <init pos:start="124:40" pos:end="124:75">= <expr pos:start="124:42" pos:end="124:75"><operator pos:start="124:42" pos:end="124:44">new</operator> <call pos:start="124:46" pos:end="124:75"><name pos:start="124:46" pos:end="124:53">ZipEntry</name><argument_list pos:start="124:54" pos:end="124:75">(<argument pos:start="124:55" pos:end="124:74"><expr pos:start="124:55" pos:end="124:74"><name pos:start="124:55" pos:end="124:62">filename</name> <operator pos:start="124:64" pos:end="124:64">+</operator> <literal type="string" pos:start="124:66" pos:end="124:74">".froute"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<expr_stmt pos:start="125:25" pos:end="125:48"><expr pos:start="125:25" pos:end="125:47"><call pos:start="125:25" pos:end="125:47"><name pos:start="125:25" pos:end="125:40"><name pos:start="125:25" pos:end="125:27">out</name><operator pos:start="125:28" pos:end="125:28">.</operator><name pos:start="125:29" pos:end="125:40">putNextEntry</name></name><argument_list pos:start="125:41" pos:end="125:47">(<argument pos:start="125:42" pos:end="125:46"><expr pos:start="125:42" pos:end="125:46"><name pos:start="125:42" pos:end="125:46">entry</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt pos:start="126:25" pos:end="126:57"><expr pos:start="126:25" pos:end="126:56"><call pos:start="126:25" pos:end="126:56"><name pos:start="126:25" pos:end="126:37"><name pos:start="126:25" pos:end="126:32">provider</name><operator pos:start="126:33" pos:end="126:33">.</operator><name pos:start="126:34" pos:end="126:37">save</name></name><argument_list pos:start="126:38" pos:end="126:56">(<argument pos:start="126:39" pos:end="126:43"><expr pos:start="126:39" pos:end="126:43"><name pos:start="126:39" pos:end="126:43">route</name></expr></argument>, <argument pos:start="126:46" pos:end="126:48"><expr pos:start="126:46" pos:end="126:48"><name pos:start="126:46" pos:end="126:48">out</name></expr></argument>, <argument pos:start="126:51" pos:end="126:55"><expr pos:start="126:51" pos:end="126:55"><literal type="boolean" pos:start="126:51" pos:end="126:55">false</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt pos:start="127:25" pos:end="127:41"><expr pos:start="127:25" pos:end="127:40"><call pos:start="127:25" pos:end="127:40"><name pos:start="127:25" pos:end="127:38"><name pos:start="127:25" pos:end="127:27">out</name><operator pos:start="127:28" pos:end="127:28">.</operator><name pos:start="127:29" pos:end="127:38">closeEntry</name></name><argument_list pos:start="127:39" pos:end="127:40">()</argument_list></call></expr>;</expr_stmt>

		</block_content>}</block> <catch pos:start="129:19" pos:end="131:17">catch <parameter_list pos:start="129:25" pos:end="129:48">(<parameter pos:start="129:26" pos:end="129:47"><decl pos:start="129:26" pos:end="129:47"><type pos:start="129:26" pos:end="129:47"><name pos:start="129:26" pos:end="129:45">PersistenceException</name></type> <name pos:start="129:47" pos:end="129:47">e</name></decl></parameter>)</parameter_list> <block pos:start="129:50" pos:end="131:17">{<block_content pos:start="130:25" pos:end="130:40">
			<expr_stmt pos:start="130:25" pos:end="130:40"><expr pos:start="130:25" pos:end="130:39"><call pos:start="130:25" pos:end="130:39"><name pos:start="130:25" pos:end="130:36"><name pos:start="130:25" pos:end="130:30">LOGGER</name><operator pos:start="130:31" pos:end="130:31">.</operator><name pos:start="130:32" pos:end="130:36">error</name></name><argument_list pos:start="130:37" pos:end="130:39">(<argument pos:start="130:38" pos:end="130:38"><expr pos:start="130:38" pos:end="130:38"><name pos:start="130:38" pos:end="130:38">e</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		</block_content>}</block></catch> <catch pos:start="131:19" pos:end="134:17">catch <parameter_list pos:start="131:25" pos:end="131:39">(<parameter pos:start="131:26" pos:end="131:38"><decl pos:start="131:26" pos:end="131:38"><type pos:start="131:26" pos:end="131:38"><name pos:start="131:26" pos:end="131:36">IOException</name></type> <name pos:start="131:38" pos:end="131:38">e</name></decl></parameter>)</parameter_list> <block pos:start="131:41" pos:end="134:17">{<block_content pos:start="133:25" pos:end="133:44">
			<comment type="line" pos:start="132:25" pos:end="132:58">// TODO Auto-generated catch block</comment>
			<expr_stmt pos:start="133:25" pos:end="133:44"><expr pos:start="133:25" pos:end="133:43"><call pos:start="133:25" pos:end="133:43"><name pos:start="133:25" pos:end="133:41"><name pos:start="133:25" pos:end="133:25">e</name><operator pos:start="133:26" pos:end="133:26">.</operator><name pos:start="133:27" pos:end="133:41">printStackTrace</name></name><argument_list pos:start="133:42" pos:end="133:43">()</argument_list></call></expr>;</expr_stmt>
		</block_content>}</block></catch></try>

	</block_content>}</block></function>

	<function pos:start="138:9" pos:end="167:9"><type pos:start="138:9" pos:end="138:23"><specifier pos:start="138:9" pos:end="138:15">private</specifier> <name pos:start="138:17" pos:end="138:23">boolean</name></type> <name pos:start="138:25" pos:end="138:40">createNewZipFile</name><parameter_list pos:start="138:41" pos:end="138:63">(<parameter pos:start="138:42" pos:end="138:62"><decl pos:start="138:42" pos:end="138:62"><type pos:start="138:42" pos:end="138:53"><specifier pos:start="138:42" pos:end="138:46">final</specifier> <name pos:start="138:48" pos:end="138:53">String</name></type> <name pos:start="138:55" pos:end="138:62">location</name></decl></parameter>)</parameter_list> <block pos:start="138:65" pos:end="167:9">{<block_content pos:start="139:17" pos:end="166:29">
		<expr_stmt pos:start="139:17" pos:end="139:28"><expr pos:start="139:17" pos:end="139:27"><name pos:start="139:17" pos:end="139:20">dest</name> <operator pos:start="139:22" pos:end="139:22">=</operator> <literal type="null" pos:start="139:24" pos:end="139:27">null</literal></expr>;</expr_stmt>
		<expr_stmt pos:start="140:17" pos:end="140:27"><expr pos:start="140:17" pos:end="140:26"><name pos:start="140:17" pos:end="140:19">out</name> <operator pos:start="140:21" pos:end="140:21">=</operator> <literal type="null" pos:start="140:23" pos:end="140:26">null</literal></expr>;</expr_stmt>

		<try pos:start="142:17" pos:end="165:17">try <block pos:start="142:21" pos:end="147:17">{<block_content pos:start="143:25" pos:end="146:36">
			<expr_stmt pos:start="143:25" pos:end="143:62"><expr pos:start="143:25" pos:end="143:61"><name pos:start="143:25" pos:end="143:28">dest</name> <operator pos:start="143:30" pos:end="143:30">=</operator> <operator pos:start="143:32" pos:end="143:34">new</operator> <call pos:start="143:36" pos:end="143:61"><name pos:start="143:36" pos:end="143:51">FileOutputStream</name><argument_list pos:start="143:52" pos:end="143:61">(<argument pos:start="143:53" pos:end="143:60"><expr pos:start="143:53" pos:end="143:60"><name pos:start="143:53" pos:end="143:60">location</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt pos:start="144:25" pos:end="144:82"><expr pos:start="144:25" pos:end="144:81"><name pos:start="144:25" pos:end="144:27">out</name> <operator pos:start="144:29" pos:end="144:29">=</operator> <operator pos:start="144:31" pos:end="144:33">new</operator> <call pos:start="144:35" pos:end="144:81"><name pos:start="144:35" pos:end="144:49">ZipOutputStream</name><argument_list pos:start="144:50" pos:end="144:81">(<argument pos:start="144:51" pos:end="144:80"><expr pos:start="144:51" pos:end="144:80"><operator pos:start="144:51" pos:end="144:53">new</operator> <call pos:start="144:55" pos:end="144:80"><name pos:start="144:55" pos:end="144:74">BufferedOutputStream</name><argument_list pos:start="144:75" pos:end="144:80">(<argument pos:start="144:76" pos:end="144:79"><expr pos:start="144:76" pos:end="144:79"><name pos:start="144:76" pos:end="144:79">dest</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt pos:start="145:25" pos:end="145:64"><expr pos:start="145:25" pos:end="145:63"><call pos:start="145:25" pos:end="145:63"><name pos:start="145:25" pos:end="145:37"><name pos:start="145:25" pos:end="145:27">out</name><operator pos:start="145:28" pos:end="145:28">.</operator><name pos:start="145:29" pos:end="145:37">setMethod</name></name><argument_list pos:start="145:38" pos:end="145:63">(<argument pos:start="145:39" pos:end="145:62"><expr pos:start="145:39" pos:end="145:62"><name pos:start="145:39" pos:end="145:62"><name pos:start="145:39" pos:end="145:53">ZipOutputStream</name><operator pos:start="145:54" pos:end="145:54">.</operator><name pos:start="145:55" pos:end="145:62">DEFLATED</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<return pos:start="146:25" pos:end="146:36">return <expr pos:start="146:32" pos:end="146:35"><literal type="boolean" pos:start="146:32" pos:end="146:35">true</literal></expr>;</return>
		</block_content>}</block> <catch pos:start="147:19" pos:end="149:17">catch <parameter_list pos:start="147:25" pos:end="147:39">(<parameter pos:start="147:26" pos:end="147:38"><decl pos:start="147:26" pos:end="147:38"><type pos:start="147:26" pos:end="147:38"><name pos:start="147:26" pos:end="147:36">IOException</name></type> <name pos:start="147:38" pos:end="147:38">e</name></decl></parameter>)</parameter_list> <block pos:start="147:41" pos:end="149:17">{<block_content pos:start="148:25" pos:end="148:61">
			<expr_stmt pos:start="148:25" pos:end="148:61"><expr pos:start="148:25" pos:end="148:60"><call pos:start="148:25" pos:end="148:60"><name pos:start="148:25" pos:end="148:36"><name pos:start="148:25" pos:end="148:30">LOGGER</name><operator pos:start="148:31" pos:end="148:31">.</operator><name pos:start="148:32" pos:end="148:36">error</name></name><argument_list pos:start="148:37" pos:end="148:60">(<argument pos:start="148:38" pos:end="148:56"><expr pos:start="148:38" pos:end="148:56"><literal type="string" pos:start="148:38" pos:end="148:56">"Error adding file"</literal></expr></argument>, <argument pos:start="148:59" pos:end="148:59"><expr pos:start="148:59" pos:end="148:59"><name pos:start="148:59" pos:end="148:59">e</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		</block_content>}</block></catch> <finally pos:start="149:19" pos:end="165:17">finally <block pos:start="149:27" pos:end="165:17">{<block_content>

			<comment type="line" pos:start="151:25" pos:end="151:45">// if (out != null) {</comment>
			<comment type="line" pos:start="152:25" pos:end="152:32">// try {</comment>
			<comment type="line" pos:start="153:25" pos:end="153:39">// out.close();</comment>
			<comment type="line" pos:start="154:25" pos:end="154:52">// } catch (IOException e) {</comment>
			<comment type="line" pos:start="155:25" pos:end="155:43">// LOGGER.error(e);</comment>
			<comment type="line" pos:start="156:25" pos:end="156:28">// }</comment>
			<comment type="line" pos:start="157:25" pos:end="157:28">// }</comment>
			<comment type="line" pos:start="158:25" pos:end="158:46">// if (dest != null) {</comment>
			<comment type="line" pos:start="159:25" pos:end="159:32">// try {</comment>
			<comment type="line" pos:start="160:25" pos:end="160:40">// dest.close();</comment>
			<comment type="line" pos:start="161:25" pos:end="161:52">// } catch (IOException e) {</comment>
			<comment type="line" pos:start="162:25" pos:end="162:43">// LOGGER.error(e);</comment>
			<comment type="line" pos:start="163:25" pos:end="163:28">// }</comment>
			<comment type="line" pos:start="164:25" pos:end="164:28">// }</comment>
		</block_content>}</block></finally></try>
		<return pos:start="166:17" pos:end="166:29">return <expr pos:start="166:24" pos:end="166:28"><literal type="boolean" pos:start="166:24" pos:end="166:28">false</literal></expr>;</return>
	</block_content>}</block></function>

	<function pos:start="169:9" pos:end="247:9"><type pos:start="169:9" pos:end="169:20"><specifier pos:start="169:9" pos:end="169:15">private</specifier> <name pos:start="169:17" pos:end="169:20">void</name></type> <name pos:start="169:22" pos:end="169:34">writeStatFile</name><parameter_list pos:start="169:35" pos:end="169:83">(<parameter pos:start="169:36" pos:end="169:50"><decl pos:start="169:36" pos:end="169:50"><type pos:start="169:36" pos:end="169:50"><name pos:start="169:36" pos:end="169:41">String</name></type> <name pos:start="169:43" pos:end="169:50">filename</name></decl></parameter>, <parameter pos:start="169:53" pos:end="169:82"><decl pos:start="169:53" pos:end="169:82"><type pos:start="169:53" pos:end="169:82"><name pos:start="169:53" pos:end="169:72">RouteSelectionResult</name></type> <name pos:start="169:74" pos:end="169:82">selection</name></decl></parameter>)</parameter_list> <block pos:start="169:85" pos:end="247:9">{<block_content pos:start="170:17" pos:end="245:17">
		<decl_stmt pos:start="170:17" pos:end="170:55"><decl pos:start="170:17" pos:end="170:54"><type pos:start="170:17" pos:end="170:28"><name pos:start="170:17" pos:end="170:28"><name pos:start="170:17" pos:end="170:20">List</name><argument_list type="generic" pos:start="170:21" pos:end="170:28">&lt;<argument pos:start="170:22" pos:end="170:27"><name pos:start="170:22" pos:end="170:27">String</name></argument>&gt;</argument_list></name></type> <name pos:start="170:30" pos:end="170:34">lines</name> <init pos:start="170:36" pos:end="170:54">= <expr pos:start="170:38" pos:end="170:54"><operator pos:start="170:38" pos:end="170:40">new</operator> <call pos:start="170:42" pos:end="170:54"><name pos:start="170:42" pos:end="170:52"><name pos:start="170:42" pos:end="170:50">ArrayList</name><argument_list type="generic" pos:start="170:51" pos:end="170:52">&lt;&gt;</argument_list></name><argument_list pos:start="170:53" pos:end="170:54">()</argument_list></call></expr></init></decl>;</decl_stmt>

		<decl_stmt pos:start="172:17" pos:end="172:55"><decl pos:start="172:17" pos:end="172:54"><type pos:start="172:17" pos:end="172:29"><name pos:start="172:17" pos:end="172:29">StringBuilder</name></type> <name pos:start="172:31" pos:end="172:32">sb</name> <init pos:start="172:34" pos:end="172:54">= <expr pos:start="172:36" pos:end="172:54"><operator pos:start="172:36" pos:end="172:38">new</operator> <call pos:start="172:40" pos:end="172:54"><name pos:start="172:40" pos:end="172:52">StringBuilder</name><argument_list pos:start="172:53" pos:end="172:54">()</argument_list></call></expr></init></decl>;</decl_stmt>

		<expr_stmt pos:start="174:17" pos:end="174:34"><expr pos:start="174:17" pos:end="174:33"><call pos:start="174:17" pos:end="174:33"><name pos:start="174:17" pos:end="174:25"><name pos:start="174:17" pos:end="174:18">sb</name><operator pos:start="174:19" pos:end="174:19">.</operator><name pos:start="174:20" pos:end="174:25">append</name></name><argument_list pos:start="174:26" pos:end="174:33">(<argument pos:start="174:27" pos:end="174:32"><expr pos:start="174:27" pos:end="174:32"><literal type="string" pos:start="174:27" pos:end="174:32">"time"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt pos:start="175:17" pos:end="175:37"><expr pos:start="175:17" pos:end="175:36"><call pos:start="175:17" pos:end="175:36"><name pos:start="175:17" pos:end="175:25"><name pos:start="175:17" pos:end="175:18">sb</name><operator pos:start="175:19" pos:end="175:19">.</operator><name pos:start="175:20" pos:end="175:25">append</name></name><argument_list pos:start="175:26" pos:end="175:36">(<argument pos:start="175:27" pos:end="175:35"><expr pos:start="175:27" pos:end="175:35"><name pos:start="175:27" pos:end="175:35">SEPARATOR</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt pos:start="176:17" pos:end="176:37"><expr pos:start="176:17" pos:end="176:36"><call pos:start="176:17" pos:end="176:36"><name pos:start="176:17" pos:end="176:25"><name pos:start="176:17" pos:end="176:18">sb</name><operator pos:start="176:19" pos:end="176:19">.</operator><name pos:start="176:20" pos:end="176:25">append</name></name><argument_list pos:start="176:26" pos:end="176:36">(<argument pos:start="176:27" pos:end="176:35"><expr pos:start="176:27" pos:end="176:35"><literal type="string" pos:start="176:27" pos:end="176:35">"overall"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt pos:start="177:17" pos:end="177:37"><expr pos:start="177:17" pos:end="177:36"><call pos:start="177:17" pos:end="177:36"><name pos:start="177:17" pos:end="177:25"><name pos:start="177:17" pos:end="177:18">sb</name><operator pos:start="177:19" pos:end="177:19">.</operator><name pos:start="177:20" pos:end="177:25">append</name></name><argument_list pos:start="177:26" pos:end="177:36">(<argument pos:start="177:27" pos:end="177:35"><expr pos:start="177:27" pos:end="177:35"><name pos:start="177:27" pos:end="177:35">SEPARATOR</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt pos:start="178:17" pos:end="178:37"><expr pos:start="178:17" pos:end="178:36"><call pos:start="178:17" pos:end="178:36"><name pos:start="178:17" pos:end="178:25"><name pos:start="178:17" pos:end="178:18">sb</name><operator pos:start="178:19" pos:end="178:19">.</operator><name pos:start="178:20" pos:end="178:25">append</name></name><argument_list pos:start="178:26" pos:end="178:36">(<argument pos:start="178:27" pos:end="178:35"><expr pos:start="178:27" pos:end="178:35"><literal type="string" pos:start="178:27" pos:end="178:35">"battery"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt pos:start="179:17" pos:end="179:37"><expr pos:start="179:17" pos:end="179:36"><call pos:start="179:17" pos:end="179:36"><name pos:start="179:17" pos:end="179:25"><name pos:start="179:17" pos:end="179:18">sb</name><operator pos:start="179:19" pos:end="179:19">.</operator><name pos:start="179:20" pos:end="179:25">append</name></name><argument_list pos:start="179:26" pos:end="179:36">(<argument pos:start="179:27" pos:end="179:35"><expr pos:start="179:27" pos:end="179:35"><name pos:start="179:27" pos:end="179:35">SEPARATOR</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt pos:start="180:17" pos:end="180:39"><expr pos:start="180:17" pos:end="180:38"><call pos:start="180:17" pos:end="180:38"><name pos:start="180:17" pos:end="180:25"><name pos:start="180:17" pos:end="180:18">sb</name><operator pos:start="180:19" pos:end="180:19">.</operator><name pos:start="180:20" pos:end="180:25">append</name></name><argument_list pos:start="180:26" pos:end="180:38">(<argument pos:start="180:27" pos:end="180:37"><expr pos:start="180:27" pos:end="180:37"><literal type="string" pos:start="180:27" pos:end="180:37">"collision"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt pos:start="181:17" pos:end="181:37"><expr pos:start="181:17" pos:end="181:36"><call pos:start="181:17" pos:end="181:36"><name pos:start="181:17" pos:end="181:25"><name pos:start="181:17" pos:end="181:18">sb</name><operator pos:start="181:19" pos:end="181:19">.</operator><name pos:start="181:20" pos:end="181:25">append</name></name><argument_list pos:start="181:26" pos:end="181:36">(<argument pos:start="181:27" pos:end="181:35"><expr pos:start="181:27" pos:end="181:35"><name pos:start="181:27" pos:end="181:35">SEPARATOR</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt pos:start="182:17" pos:end="182:44"><expr pos:start="182:17" pos:end="182:43"><call pos:start="182:17" pos:end="182:43"><name pos:start="182:17" pos:end="182:25"><name pos:start="182:17" pos:end="182:18">sb</name><operator pos:start="182:19" pos:end="182:19">.</operator><name pos:start="182:20" pos:end="182:25">append</name></name><argument_list pos:start="182:26" pos:end="182:43">(<argument pos:start="182:27" pos:end="182:42"><expr pos:start="182:27" pos:end="182:42"><literal type="string" pos:start="182:27" pos:end="182:42">"coverage-score"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt pos:start="183:17" pos:end="183:37"><expr pos:start="183:17" pos:end="183:36"><call pos:start="183:17" pos:end="183:36"><name pos:start="183:17" pos:end="183:25"><name pos:start="183:17" pos:end="183:18">sb</name><operator pos:start="183:19" pos:end="183:19">.</operator><name pos:start="183:20" pos:end="183:25">append</name></name><argument_list pos:start="183:26" pos:end="183:36">(<argument pos:start="183:27" pos:end="183:35"><expr pos:start="183:27" pos:end="183:35"><name pos:start="183:27" pos:end="183:35">SEPARATOR</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt pos:start="184:17" pos:end="184:42"><expr pos:start="184:17" pos:end="184:41"><call pos:start="184:17" pos:end="184:41"><name pos:start="184:17" pos:end="184:25"><name pos:start="184:17" pos:end="184:18">sb</name><operator pos:start="184:19" pos:end="184:19">.</operator><name pos:start="184:20" pos:end="184:25">append</name></name><argument_list pos:start="184:26" pos:end="184:41">(<argument pos:start="184:27" pos:end="184:40"><expr pos:start="184:27" pos:end="184:40"><literal type="string" pos:start="184:27" pos:end="184:40">"taskequality"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt pos:start="185:17" pos:end="185:37"><expr pos:start="185:17" pos:end="185:36"><call pos:start="185:17" pos:end="185:36"><name pos:start="185:17" pos:end="185:25"><name pos:start="185:17" pos:end="185:18">sb</name><operator pos:start="185:19" pos:end="185:19">.</operator><name pos:start="185:20" pos:end="185:25">append</name></name><argument_list pos:start="185:26" pos:end="185:36">(<argument pos:start="185:27" pos:end="185:35"><expr pos:start="185:27" pos:end="185:35"><name pos:start="185:27" pos:end="185:35">SEPARATOR</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt pos:start="186:17" pos:end="186:49"><expr pos:start="186:17" pos:end="186:48"><call pos:start="186:17" pos:end="186:48"><name pos:start="186:17" pos:end="186:25"><name pos:start="186:17" pos:end="186:18">sb</name><operator pos:start="186:19" pos:end="186:19">.</operator><name pos:start="186:20" pos:end="186:25">append</name></name><argument_list pos:start="186:26" pos:end="186:48">(<argument pos:start="186:27" pos:end="186:47"><expr pos:start="186:27" pos:end="186:47"><literal type="string" pos:start="186:27" pos:end="186:47">"allocation-priority"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt pos:start="187:17" pos:end="187:37"><expr pos:start="187:17" pos:end="187:36"><call pos:start="187:17" pos:end="187:36"><name pos:start="187:17" pos:end="187:25"><name pos:start="187:17" pos:end="187:18">sb</name><operator pos:start="187:19" pos:end="187:19">.</operator><name pos:start="187:20" pos:end="187:25">append</name></name><argument_list pos:start="187:26" pos:end="187:36">(<argument pos:start="187:27" pos:end="187:35"><expr pos:start="187:27" pos:end="187:35"><name pos:start="187:27" pos:end="187:35">SEPARATOR</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt pos:start="188:17" pos:end="188:46"><expr pos:start="188:17" pos:end="188:45"><call pos:start="188:17" pos:end="188:45"><name pos:start="188:17" pos:end="188:25"><name pos:start="188:17" pos:end="188:18">sb</name><operator pos:start="188:19" pos:end="188:19">.</operator><name pos:start="188:20" pos:end="188:25">append</name></name><argument_list pos:start="188:26" pos:end="188:45">(<argument pos:start="188:27" pos:end="188:44"><expr pos:start="188:27" pos:end="188:44"><literal type="string" pos:start="188:27" pos:end="188:44">"allocation-score"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt pos:start="189:17" pos:end="189:37"><expr pos:start="189:17" pos:end="189:36"><call pos:start="189:17" pos:end="189:36"><name pos:start="189:17" pos:end="189:25"><name pos:start="189:17" pos:end="189:18">sb</name><operator pos:start="189:19" pos:end="189:19">.</operator><name pos:start="189:20" pos:end="189:25">append</name></name><argument_list pos:start="189:26" pos:end="189:36">(<argument pos:start="189:27" pos:end="189:35"><expr pos:start="189:27" pos:end="189:35"><name pos:start="189:27" pos:end="189:35">SEPARATOR</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt pos:start="190:17" pos:end="190:44"><expr pos:start="190:17" pos:end="190:43"><call pos:start="190:17" pos:end="190:43"><name pos:start="190:17" pos:end="190:25"><name pos:start="190:17" pos:end="190:18">sb</name><operator pos:start="190:19" pos:end="190:19">.</operator><name pos:start="190:20" pos:end="190:25">append</name></name><argument_list pos:start="190:26" pos:end="190:43">(<argument pos:start="190:27" pos:end="190:42"><expr pos:start="190:27" pos:end="190:42"><literal type="string" pos:start="190:27" pos:end="190:42">"total-distance"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt pos:start="191:17" pos:end="191:37"><expr pos:start="191:17" pos:end="191:36"><call pos:start="191:17" pos:end="191:36"><name pos:start="191:17" pos:end="191:25"><name pos:start="191:17" pos:end="191:18">sb</name><operator pos:start="191:19" pos:end="191:19">.</operator><name pos:start="191:20" pos:end="191:25">append</name></name><argument_list pos:start="191:26" pos:end="191:36">(<argument pos:start="191:27" pos:end="191:35"><expr pos:start="191:27" pos:end="191:35"><name pos:start="191:27" pos:end="191:35">SEPARATOR</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt pos:start="192:17" pos:end="192:40"><expr pos:start="192:17" pos:end="192:39"><call pos:start="192:17" pos:end="192:39"><name pos:start="192:17" pos:end="192:25"><name pos:start="192:17" pos:end="192:18">sb</name><operator pos:start="192:19" pos:end="192:19">.</operator><name pos:start="192:20" pos:end="192:25">append</name></name><argument_list pos:start="192:26" pos:end="192:39">(<argument pos:start="192:27" pos:end="192:38"><expr pos:start="192:27" pos:end="192:38"><literal type="string" pos:start="192:27" pos:end="192:38">"USDS-ratio"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt pos:start="193:17" pos:end="193:37"><expr pos:start="193:17" pos:end="193:36"><call pos:start="193:17" pos:end="193:36"><name pos:start="193:17" pos:end="193:25"><name pos:start="193:17" pos:end="193:18">sb</name><operator pos:start="193:19" pos:end="193:19">.</operator><name pos:start="193:20" pos:end="193:25">append</name></name><argument_list pos:start="193:26" pos:end="193:36">(<argument pos:start="193:27" pos:end="193:35"><expr pos:start="193:27" pos:end="193:35"><name pos:start="193:27" pos:end="193:35">SEPARATOR</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt pos:start="194:17" pos:end="194:45"><expr pos:start="194:17" pos:end="194:44"><call pos:start="194:17" pos:end="194:44"><name pos:start="194:17" pos:end="194:25"><name pos:start="194:17" pos:end="194:18">sb</name><operator pos:start="194:19" pos:end="194:19">.</operator><name pos:start="194:20" pos:end="194:25">append</name></name><argument_list pos:start="194:26" pos:end="194:44">(<argument pos:start="194:27" pos:end="194:43"><expr pos:start="194:27" pos:end="194:43"><literal type="string" pos:start="194:27" pos:end="194:43">"drone-distances"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		<expr_stmt pos:start="196:17" pos:end="196:41"><expr pos:start="196:17" pos:end="196:40"><call pos:start="196:17" pos:end="196:40"><name pos:start="196:17" pos:end="196:25"><name pos:start="196:17" pos:end="196:21">lines</name><operator pos:start="196:22" pos:end="196:22">.</operator><name pos:start="196:23" pos:end="196:25">add</name></name><argument_list pos:start="196:26" pos:end="196:40">(<argument pos:start="196:27" pos:end="196:39"><expr pos:start="196:27" pos:end="196:39"><call pos:start="196:27" pos:end="196:39"><name pos:start="196:27" pos:end="196:37"><name pos:start="196:27" pos:end="196:28">sb</name><operator pos:start="196:29" pos:end="196:29">.</operator><name pos:start="196:30" pos:end="196:37">toString</name></name><argument_list pos:start="196:38" pos:end="196:39">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		<for pos:start="198:17" pos:end="239:17">for <control pos:start="198:21" pos:end="198:104">(<init pos:start="198:22" pos:end="198:103"><decl pos:start="198:22" pos:end="198:103"><type pos:start="198:22" pos:end="198:48"><name pos:start="198:22" pos:end="198:48">ExportAllocationInformation</name></type> <name pos:start="198:50" pos:end="198:59">allocation</name> <range pos:start="198:61" pos:end="198:103">: <expr pos:start="198:63" pos:end="198:103"><call pos:start="198:63" pos:end="198:103"><name pos:start="198:63" pos:end="198:101"><name pos:start="198:63" pos:end="198:71">selection</name><operator pos:start="198:72" pos:end="198:72">.</operator><name pos:start="198:73" pos:end="198:101">getEportAllocationInformation</name></name><argument_list pos:start="198:102" pos:end="198:103">()</argument_list></call></expr></range></decl></init>)</control> <block pos:start="198:106" pos:end="239:17">{<block_content pos:start="200:25" pos:end="237:49">

			<decl_stmt pos:start="200:25" pos:end="200:82"><decl pos:start="200:25" pos:end="200:81"><type pos:start="200:25" pos:end="200:41"><name pos:start="200:25" pos:end="200:41">MetricsStatistics</name></type> <name pos:start="200:43" pos:end="200:46">stat</name> <init pos:start="200:48" pos:end="200:81">= <expr pos:start="200:50" pos:end="200:81"><call pos:start="200:50" pos:end="200:81"><name pos:start="200:50" pos:end="200:79"><name pos:start="200:50" pos:end="200:59">allocation</name><operator pos:start="200:60" pos:end="200:60">.</operator><name pos:start="200:61" pos:end="200:79">getMetricStatistics</name></name><argument_list pos:start="200:80" pos:end="200:81">()</argument_list></call></expr></init></decl>;</decl_stmt>
			<decl_stmt pos:start="201:25" pos:end="201:67"><decl pos:start="201:25" pos:end="201:66"><type pos:start="201:25" pos:end="201:30"><name pos:start="201:25" pos:end="201:30">double</name></type> <name pos:start="201:32" pos:end="201:38">overall</name> <init pos:start="201:40" pos:end="201:66">= <expr pos:start="201:42" pos:end="201:66"><call pos:start="201:42" pos:end="201:66"><name pos:start="201:42" pos:end="201:64"><name pos:start="201:42" pos:end="201:45">stat</name><operator pos:start="201:46" pos:end="201:46">.</operator><name pos:start="201:47" pos:end="201:64">getAllocationScore</name></name><argument_list pos:start="201:65" pos:end="201:66">()</argument_list></call></expr></init></decl>;</decl_stmt>
			<decl_stmt pos:start="202:25" pos:end="202:66"><decl pos:start="202:25" pos:end="202:65"><type pos:start="202:25" pos:end="202:31"><name pos:start="202:25" pos:end="202:31">boolean</name></type> <name pos:start="202:33" pos:end="202:39">battery</name> <init pos:start="202:41" pos:end="202:65">= <expr pos:start="202:43" pos:end="202:65"><call pos:start="202:43" pos:end="202:65"><name pos:start="202:43" pos:end="202:63"><name pos:start="202:43" pos:end="202:46">stat</name><operator pos:start="202:47" pos:end="202:47">.</operator><name pos:start="202:48" pos:end="202:63">getBatteryFailed</name></name><argument_list pos:start="202:64" pos:end="202:65">()</argument_list></call></expr></init></decl>;</decl_stmt>
			<decl_stmt pos:start="203:25" pos:end="203:61"><decl pos:start="203:25" pos:end="203:60"><type pos:start="203:25" pos:end="203:27"><name pos:start="203:25" pos:end="203:27">int</name></type> <name pos:start="203:29" pos:end="203:37">collision</name> <init pos:start="203:39" pos:end="203:60">= <expr pos:start="203:41" pos:end="203:60"><call pos:start="203:41" pos:end="203:60"><name pos:start="203:41" pos:end="203:58"><name pos:start="203:41" pos:end="203:44">stat</name><operator pos:start="203:45" pos:end="203:45">.</operator><name pos:start="203:46" pos:end="203:58">getCollisions</name></name><argument_list pos:start="203:59" pos:end="203:60">()</argument_list></call></expr></init></decl>;</decl_stmt>
			<decl_stmt pos:start="204:25" pos:end="204:74"><decl pos:start="204:25" pos:end="204:73"><type pos:start="204:25" pos:end="204:30"><name pos:start="204:25" pos:end="204:30">double</name></type> <name pos:start="204:32" pos:end="204:35">dsus</name> <init pos:start="204:37" pos:end="204:73">= <expr pos:start="204:39" pos:end="204:73"><call pos:start="204:39" pos:end="204:73"><name pos:start="204:39" pos:end="204:71"><name pos:start="204:39" pos:end="204:42">stat</name><operator pos:start="204:43" pos:end="204:43">.</operator><name pos:start="204:44" pos:end="204:71">getDownstreamToUpstreamRatio</name></name><argument_list pos:start="204:72" pos:end="204:73">()</argument_list></call></expr></init></decl>;</decl_stmt>
			<decl_stmt pos:start="205:25" pos:end="205:68"><decl pos:start="205:25" pos:end="205:67"><type pos:start="205:25" pos:end="205:30"><name pos:start="205:25" pos:end="205:30">double</name></type> <name pos:start="205:32" pos:end="205:36">cover</name> <init pos:start="205:38" pos:end="205:67">= <expr pos:start="205:40" pos:end="205:67"><call pos:start="205:40" pos:end="205:67"><name pos:start="205:40" pos:end="205:65"><name pos:start="205:40" pos:end="205:43">stat</name><operator pos:start="205:44" pos:end="205:44">.</operator><name pos:start="205:45" pos:end="205:65">getAllocationCoverage</name></name><argument_list pos:start="205:66" pos:end="205:67">()</argument_list></call></expr></init></decl>;</decl_stmt>
			<decl_stmt pos:start="206:25" pos:end="206:68"><decl pos:start="206:25" pos:end="206:67"><type pos:start="206:25" pos:end="206:30"><name pos:start="206:25" pos:end="206:30">double</name></type> <name pos:start="206:32" pos:end="206:39">equality</name> <init pos:start="206:41" pos:end="206:67">= <expr pos:start="206:43" pos:end="206:67"><call pos:start="206:43" pos:end="206:67"><name pos:start="206:43" pos:end="206:65"><name pos:start="206:43" pos:end="206:46">stat</name><operator pos:start="206:47" pos:end="206:47">.</operator><name pos:start="206:48" pos:end="206:65">getEqualityOfTasks</name></name><argument_list pos:start="206:66" pos:end="206:67">()</argument_list></call></expr></init></decl>;</decl_stmt>

			<decl_stmt pos:start="208:25" pos:end="208:88"><decl pos:start="208:25" pos:end="208:87"><type pos:start="208:25" pos:end="208:30"><name pos:start="208:25" pos:end="208:30">double</name></type> <name pos:start="208:32" pos:end="208:48">allocationPrority</name> <init pos:start="208:50" pos:end="208:87">= <expr pos:start="208:52" pos:end="208:87"><call pos:start="208:52" pos:end="208:87"><name pos:start="208:52" pos:end="208:85"><name pos:start="208:52" pos:end="208:55">stat</name><operator pos:start="208:56" pos:end="208:56">.</operator><name pos:start="208:57" pos:end="208:85">getAllocationPriorityCoverage</name></name><argument_list pos:start="208:86" pos:end="208:87">()</argument_list></call></expr></init></decl>;</decl_stmt>
			<decl_stmt pos:start="209:25" pos:end="209:75"><decl pos:start="209:25" pos:end="209:74"><type pos:start="209:25" pos:end="209:30"><name pos:start="209:25" pos:end="209:30">double</name></type> <name pos:start="209:32" pos:end="209:46">allocationScope</name> <init pos:start="209:48" pos:end="209:74">= <expr pos:start="209:50" pos:end="209:74"><call pos:start="209:50" pos:end="209:74"><name pos:start="209:50" pos:end="209:72"><name pos:start="209:50" pos:end="209:53">stat</name><operator pos:start="209:54" pos:end="209:54">.</operator><name pos:start="209:55" pos:end="209:72">getAllocationScore</name></name><argument_list pos:start="209:73" pos:end="209:74">()</argument_list></call></expr></init></decl>;</decl_stmt>
			<decl_stmt pos:start="210:25" pos:end="210:71"><decl pos:start="210:25" pos:end="210:70"><type pos:start="210:25" pos:end="210:30"><name pos:start="210:25" pos:end="210:30">double</name></type> <name pos:start="210:32" pos:end="210:44">totalDistance</name> <init pos:start="210:46" pos:end="210:70">= <expr pos:start="210:48" pos:end="210:70"><call pos:start="210:48" pos:end="210:70"><name pos:start="210:48" pos:end="210:68"><name pos:start="210:48" pos:end="210:51">stat</name><operator pos:start="210:52" pos:end="210:52">.</operator><name pos:start="210:53" pos:end="210:68">getTotalDistance</name></name><argument_list pos:start="210:69" pos:end="210:70">()</argument_list></call></expr></init></decl>;</decl_stmt>
			<decl_stmt pos:start="211:25" pos:end="211:74"><decl pos:start="211:25" pos:end="211:73"><type pos:start="211:25" pos:end="211:36"><name pos:start="211:25" pos:end="211:36"><name pos:start="211:25" pos:end="211:28">List</name><argument_list type="generic" pos:start="211:29" pos:end="211:36">&lt;<argument pos:start="211:30" pos:end="211:35"><name pos:start="211:30" pos:end="211:35">Double</name></argument>&gt;</argument_list></name></type> <name pos:start="211:38" pos:end="211:46">distances</name> <init pos:start="211:48" pos:end="211:73">= <expr pos:start="211:50" pos:end="211:73"><call pos:start="211:50" pos:end="211:73"><name pos:start="211:50" pos:end="211:71"><name pos:start="211:50" pos:end="211:53">stat</name><operator pos:start="211:54" pos:end="211:54">.</operator><name pos:start="211:55" pos:end="211:71">getDroneDistances</name></name><argument_list pos:start="211:72" pos:end="211:73">()</argument_list></call></expr></init></decl>;</decl_stmt>

			<expr_stmt pos:start="213:25" pos:end="213:49"><expr pos:start="213:25" pos:end="213:48"><name pos:start="213:25" pos:end="213:26">sb</name> <operator pos:start="213:28" pos:end="213:28">=</operator> <operator pos:start="213:30" pos:end="213:32">new</operator> <call pos:start="213:34" pos:end="213:48"><name pos:start="213:34" pos:end="213:46">StringBuilder</name><argument_list pos:start="213:47" pos:end="213:48">()</argument_list></call></expr>;</expr_stmt>

			<decl_stmt pos:start="215:25" pos:end="215:67"><decl pos:start="215:25" pos:end="215:66"><type pos:start="215:25" pos:end="215:30"><name pos:start="215:25" pos:end="215:30">double</name></type> <name pos:start="215:32" pos:end="215:35">time</name> <init pos:start="215:37" pos:end="215:66">= <expr pos:start="215:39" pos:end="215:66"><call pos:start="215:39" pos:end="215:66"><name pos:start="215:39" pos:end="215:64"><name pos:start="215:39" pos:end="215:47">selection</name><operator pos:start="215:48" pos:end="215:48">.</operator><name pos:start="215:49" pos:end="215:64">getSelectionTime</name></name><argument_list pos:start="215:65" pos:end="215:66">()</argument_list></call></expr></init></decl>;</decl_stmt>
			<expr_stmt pos:start="216:25" pos:end="216:40"><expr pos:start="216:25" pos:end="216:39"><call pos:start="216:25" pos:end="216:39"><name pos:start="216:25" pos:end="216:33"><name pos:start="216:25" pos:end="216:26">sb</name><operator pos:start="216:27" pos:end="216:27">.</operator><name pos:start="216:28" pos:end="216:33">append</name></name><argument_list pos:start="216:34" pos:end="216:39">(<argument pos:start="216:35" pos:end="216:38"><expr pos:start="216:35" pos:end="216:38"><name pos:start="216:35" pos:end="216:38">time</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt pos:start="217:25" pos:end="217:45"><expr pos:start="217:25" pos:end="217:44"><call pos:start="217:25" pos:end="217:44"><name pos:start="217:25" pos:end="217:33"><name pos:start="217:25" pos:end="217:26">sb</name><operator pos:start="217:27" pos:end="217:27">.</operator><name pos:start="217:28" pos:end="217:33">append</name></name><argument_list pos:start="217:34" pos:end="217:44">(<argument pos:start="217:35" pos:end="217:43"><expr pos:start="217:35" pos:end="217:43"><name pos:start="217:35" pos:end="217:43">SEPARATOR</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt pos:start="218:25" pos:end="218:43"><expr pos:start="218:25" pos:end="218:42"><call pos:start="218:25" pos:end="218:42"><name pos:start="218:25" pos:end="218:33"><name pos:start="218:25" pos:end="218:26">sb</name><operator pos:start="218:27" pos:end="218:27">.</operator><name pos:start="218:28" pos:end="218:33">append</name></name><argument_list pos:start="218:34" pos:end="218:42">(<argument pos:start="218:35" pos:end="218:41"><expr pos:start="218:35" pos:end="218:41"><name pos:start="218:35" pos:end="218:41">overall</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt pos:start="219:25" pos:end="219:45"><expr pos:start="219:25" pos:end="219:44"><call pos:start="219:25" pos:end="219:44"><name pos:start="219:25" pos:end="219:33"><name pos:start="219:25" pos:end="219:26">sb</name><operator pos:start="219:27" pos:end="219:27">.</operator><name pos:start="219:28" pos:end="219:33">append</name></name><argument_list pos:start="219:34" pos:end="219:44">(<argument pos:start="219:35" pos:end="219:43"><expr pos:start="219:35" pos:end="219:43"><name pos:start="219:35" pos:end="219:43">SEPARATOR</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt pos:start="220:25" pos:end="220:43"><expr pos:start="220:25" pos:end="220:42"><call pos:start="220:25" pos:end="220:42"><name pos:start="220:25" pos:end="220:33"><name pos:start="220:25" pos:end="220:26">sb</name><operator pos:start="220:27" pos:end="220:27">.</operator><name pos:start="220:28" pos:end="220:33">append</name></name><argument_list pos:start="220:34" pos:end="220:42">(<argument pos:start="220:35" pos:end="220:41"><expr pos:start="220:35" pos:end="220:41"><name pos:start="220:35" pos:end="220:41">battery</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt pos:start="221:25" pos:end="221:45"><expr pos:start="221:25" pos:end="221:44"><call pos:start="221:25" pos:end="221:44"><name pos:start="221:25" pos:end="221:33"><name pos:start="221:25" pos:end="221:26">sb</name><operator pos:start="221:27" pos:end="221:27">.</operator><name pos:start="221:28" pos:end="221:33">append</name></name><argument_list pos:start="221:34" pos:end="221:44">(<argument pos:start="221:35" pos:end="221:43"><expr pos:start="221:35" pos:end="221:43"><name pos:start="221:35" pos:end="221:43">SEPARATOR</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt pos:start="222:25" pos:end="222:45"><expr pos:start="222:25" pos:end="222:44"><call pos:start="222:25" pos:end="222:44"><name pos:start="222:25" pos:end="222:33"><name pos:start="222:25" pos:end="222:26">sb</name><operator pos:start="222:27" pos:end="222:27">.</operator><name pos:start="222:28" pos:end="222:33">append</name></name><argument_list pos:start="222:34" pos:end="222:44">(<argument pos:start="222:35" pos:end="222:43"><expr pos:start="222:35" pos:end="222:43"><name pos:start="222:35" pos:end="222:43">collision</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt pos:start="223:25" pos:end="223:45"><expr pos:start="223:25" pos:end="223:44"><call pos:start="223:25" pos:end="223:44"><name pos:start="223:25" pos:end="223:33"><name pos:start="223:25" pos:end="223:26">sb</name><operator pos:start="223:27" pos:end="223:27">.</operator><name pos:start="223:28" pos:end="223:33">append</name></name><argument_list pos:start="223:34" pos:end="223:44">(<argument pos:start="223:35" pos:end="223:43"><expr pos:start="223:35" pos:end="223:43"><name pos:start="223:35" pos:end="223:43">SEPARATOR</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt pos:start="224:25" pos:end="224:41"><expr pos:start="224:25" pos:end="224:40"><call pos:start="224:25" pos:end="224:40"><name pos:start="224:25" pos:end="224:33"><name pos:start="224:25" pos:end="224:26">sb</name><operator pos:start="224:27" pos:end="224:27">.</operator><name pos:start="224:28" pos:end="224:33">append</name></name><argument_list pos:start="224:34" pos:end="224:40">(<argument pos:start="224:35" pos:end="224:39"><expr pos:start="224:35" pos:end="224:39"><name pos:start="224:35" pos:end="224:39">cover</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt pos:start="225:25" pos:end="225:45"><expr pos:start="225:25" pos:end="225:44"><call pos:start="225:25" pos:end="225:44"><name pos:start="225:25" pos:end="225:33"><name pos:start="225:25" pos:end="225:26">sb</name><operator pos:start="225:27" pos:end="225:27">.</operator><name pos:start="225:28" pos:end="225:33">append</name></name><argument_list pos:start="225:34" pos:end="225:44">(<argument pos:start="225:35" pos:end="225:43"><expr pos:start="225:35" pos:end="225:43"><name pos:start="225:35" pos:end="225:43">SEPARATOR</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt pos:start="226:25" pos:end="226:44"><expr pos:start="226:25" pos:end="226:43"><call pos:start="226:25" pos:end="226:43"><name pos:start="226:25" pos:end="226:33"><name pos:start="226:25" pos:end="226:26">sb</name><operator pos:start="226:27" pos:end="226:27">.</operator><name pos:start="226:28" pos:end="226:33">append</name></name><argument_list pos:start="226:34" pos:end="226:43">(<argument pos:start="226:35" pos:end="226:42"><expr pos:start="226:35" pos:end="226:42"><name pos:start="226:35" pos:end="226:42">equality</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt pos:start="227:25" pos:end="227:45"><expr pos:start="227:25" pos:end="227:44"><call pos:start="227:25" pos:end="227:44"><name pos:start="227:25" pos:end="227:33"><name pos:start="227:25" pos:end="227:26">sb</name><operator pos:start="227:27" pos:end="227:27">.</operator><name pos:start="227:28" pos:end="227:33">append</name></name><argument_list pos:start="227:34" pos:end="227:44">(<argument pos:start="227:35" pos:end="227:43"><expr pos:start="227:35" pos:end="227:43"><name pos:start="227:35" pos:end="227:43">SEPARATOR</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt pos:start="228:25" pos:end="228:53"><expr pos:start="228:25" pos:end="228:52"><call pos:start="228:25" pos:end="228:52"><name pos:start="228:25" pos:end="228:33"><name pos:start="228:25" pos:end="228:26">sb</name><operator pos:start="228:27" pos:end="228:27">.</operator><name pos:start="228:28" pos:end="228:33">append</name></name><argument_list pos:start="228:34" pos:end="228:52">(<argument pos:start="228:35" pos:end="228:51"><expr pos:start="228:35" pos:end="228:51"><name pos:start="228:35" pos:end="228:51">allocationPrority</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt pos:start="229:25" pos:end="229:45"><expr pos:start="229:25" pos:end="229:44"><call pos:start="229:25" pos:end="229:44"><name pos:start="229:25" pos:end="229:33"><name pos:start="229:25" pos:end="229:26">sb</name><operator pos:start="229:27" pos:end="229:27">.</operator><name pos:start="229:28" pos:end="229:33">append</name></name><argument_list pos:start="229:34" pos:end="229:44">(<argument pos:start="229:35" pos:end="229:43"><expr pos:start="229:35" pos:end="229:43"><name pos:start="229:35" pos:end="229:43">SEPARATOR</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt pos:start="230:25" pos:end="230:51"><expr pos:start="230:25" pos:end="230:50"><call pos:start="230:25" pos:end="230:50"><name pos:start="230:25" pos:end="230:33"><name pos:start="230:25" pos:end="230:26">sb</name><operator pos:start="230:27" pos:end="230:27">.</operator><name pos:start="230:28" pos:end="230:33">append</name></name><argument_list pos:start="230:34" pos:end="230:50">(<argument pos:start="230:35" pos:end="230:49"><expr pos:start="230:35" pos:end="230:49"><name pos:start="230:35" pos:end="230:49">allocationScope</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt pos:start="231:25" pos:end="231:45"><expr pos:start="231:25" pos:end="231:44"><call pos:start="231:25" pos:end="231:44"><name pos:start="231:25" pos:end="231:33"><name pos:start="231:25" pos:end="231:26">sb</name><operator pos:start="231:27" pos:end="231:27">.</operator><name pos:start="231:28" pos:end="231:33">append</name></name><argument_list pos:start="231:34" pos:end="231:44">(<argument pos:start="231:35" pos:end="231:43"><expr pos:start="231:35" pos:end="231:43"><name pos:start="231:35" pos:end="231:43">SEPARATOR</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt pos:start="232:25" pos:end="232:49"><expr pos:start="232:25" pos:end="232:48"><call pos:start="232:25" pos:end="232:48"><name pos:start="232:25" pos:end="232:33"><name pos:start="232:25" pos:end="232:26">sb</name><operator pos:start="232:27" pos:end="232:27">.</operator><name pos:start="232:28" pos:end="232:33">append</name></name><argument_list pos:start="232:34" pos:end="232:48">(<argument pos:start="232:35" pos:end="232:47"><expr pos:start="232:35" pos:end="232:47"><name pos:start="232:35" pos:end="232:47">totalDistance</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt pos:start="233:25" pos:end="233:45"><expr pos:start="233:25" pos:end="233:44"><call pos:start="233:25" pos:end="233:44"><name pos:start="233:25" pos:end="233:33"><name pos:start="233:25" pos:end="233:26">sb</name><operator pos:start="233:27" pos:end="233:27">.</operator><name pos:start="233:28" pos:end="233:33">append</name></name><argument_list pos:start="233:34" pos:end="233:44">(<argument pos:start="233:35" pos:end="233:43"><expr pos:start="233:35" pos:end="233:43"><name pos:start="233:35" pos:end="233:43">SEPARATOR</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt pos:start="234:25" pos:end="234:40"><expr pos:start="234:25" pos:end="234:39"><call pos:start="234:25" pos:end="234:39"><name pos:start="234:25" pos:end="234:33"><name pos:start="234:25" pos:end="234:26">sb</name><operator pos:start="234:27" pos:end="234:27">.</operator><name pos:start="234:28" pos:end="234:33">append</name></name><argument_list pos:start="234:34" pos:end="234:39">(<argument pos:start="234:35" pos:end="234:38"><expr pos:start="234:35" pos:end="234:38"><name pos:start="234:35" pos:end="234:38">dsus</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt pos:start="235:25" pos:end="235:45"><expr pos:start="235:25" pos:end="235:44"><call pos:start="235:25" pos:end="235:44"><name pos:start="235:25" pos:end="235:33"><name pos:start="235:25" pos:end="235:26">sb</name><operator pos:start="235:27" pos:end="235:27">.</operator><name pos:start="235:28" pos:end="235:33">append</name></name><argument_list pos:start="235:34" pos:end="235:44">(<argument pos:start="235:35" pos:end="235:43"><expr pos:start="235:35" pos:end="235:43"><name pos:start="235:35" pos:end="235:43">SEPARATOR</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt pos:start="236:25" pos:end="236:110"><expr pos:start="236:25" pos:end="236:109"><call pos:start="236:25" pos:end="236:109"><name pos:start="236:25" pos:end="236:33"><name pos:start="236:25" pos:end="236:26">sb</name><operator pos:start="236:27" pos:end="236:27">.</operator><name pos:start="236:28" pos:end="236:33">append</name></name><argument_list pos:start="236:34" pos:end="236:109">(<argument pos:start="236:35" pos:end="236:108"><expr pos:start="236:35" pos:end="236:108"><call pos:start="236:35" pos:end="236:52"><name pos:start="236:35" pos:end="236:50"><name pos:start="236:35" pos:end="236:43">distances</name><operator pos:start="236:44" pos:end="236:44">.</operator><name pos:start="236:45" pos:end="236:50">stream</name></name><argument_list pos:start="236:51" pos:end="236:52">()</argument_list></call><operator pos:start="236:53" pos:end="236:53">.</operator><call pos:start="236:54" pos:end="236:75"><name pos:start="236:54" pos:end="236:56">map</name><argument_list pos:start="236:57" pos:end="236:75">(<argument pos:start="236:58" pos:end="236:74"><expr pos:start="236:58" pos:end="236:74"><lambda pos:start="236:58" pos:end="236:74"><parameter_list type="pseudo" pos:start="236:58" pos:end="236:58"><parameter pos:start="236:58" pos:end="236:58"><decl pos:start="236:58" pos:end="236:58"><name pos:start="236:58" pos:end="236:58">i</name></decl></parameter></parameter_list> -&gt;<block type="pseudo" pos:start="236:63" pos:end="236:74"><block_content pos:start="236:63" pos:end="236:74"> <expr pos:start="236:63" pos:end="236:74"><call pos:start="236:63" pos:end="236:74"><name pos:start="236:63" pos:end="236:72"><name pos:start="236:63" pos:end="236:63">i</name><operator pos:start="236:64" pos:end="236:64">.</operator><name pos:start="236:65" pos:end="236:72">toString</name></name><argument_list pos:start="236:73" pos:end="236:74">()</argument_list></call></expr></block_content></block></lambda></expr></argument>)</argument_list></call><operator pos:start="236:76" pos:end="236:76">.</operator><call pos:start="236:77" pos:end="236:108"><name pos:start="236:77" pos:end="236:83">collect</name><argument_list pos:start="236:84" pos:end="236:108">(<argument pos:start="236:85" pos:end="236:107"><expr pos:start="236:85" pos:end="236:107"><call pos:start="236:85" pos:end="236:107"><name pos:start="236:85" pos:end="236:102"><name pos:start="236:85" pos:end="236:94">Collectors</name><operator pos:start="236:95" pos:end="236:95">.</operator><name pos:start="236:96" pos:end="236:102">joining</name></name><argument_list pos:start="236:103" pos:end="236:107">(<argument pos:start="236:104" pos:end="236:106"><expr pos:start="236:104" pos:end="236:106"><literal type="string" pos:start="236:104" pos:end="236:106">";"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt pos:start="237:25" pos:end="237:49"><expr pos:start="237:25" pos:end="237:48"><call pos:start="237:25" pos:end="237:48"><name pos:start="237:25" pos:end="237:33"><name pos:start="237:25" pos:end="237:29">lines</name><operator pos:start="237:30" pos:end="237:30">.</operator><name pos:start="237:31" pos:end="237:33">add</name></name><argument_list pos:start="237:34" pos:end="237:48">(<argument pos:start="237:35" pos:end="237:47"><expr pos:start="237:35" pos:end="237:47"><call pos:start="237:35" pos:end="237:47"><name pos:start="237:35" pos:end="237:45"><name pos:start="237:35" pos:end="237:36">sb</name><operator pos:start="237:37" pos:end="237:37">.</operator><name pos:start="237:38" pos:end="237:45">toString</name></name><argument_list pos:start="237:46" pos:end="237:47">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		</block_content>}</block></for>

		<try pos:start="241:17" pos:end="245:17">try <block pos:start="241:21" pos:end="243:17">{<block_content pos:start="242:25" pos:end="242:90">
			<expr_stmt pos:start="242:25" pos:end="242:90"><expr pos:start="242:25" pos:end="242:89"><call pos:start="242:25" pos:end="242:89"><name pos:start="242:25" pos:end="242:35"><name pos:start="242:25" pos:end="242:29">Files</name><operator pos:start="242:30" pos:end="242:30">.</operator><name pos:start="242:31" pos:end="242:35">write</name></name><argument_list pos:start="242:36" pos:end="242:89">(<argument pos:start="242:37" pos:end="242:55"><expr pos:start="242:37" pos:end="242:55"><call pos:start="242:37" pos:end="242:55"><name pos:start="242:37" pos:end="242:45"><name pos:start="242:37" pos:end="242:41">Paths</name><operator pos:start="242:42" pos:end="242:42">.</operator><name pos:start="242:43" pos:end="242:45">get</name></name><argument_list pos:start="242:46" pos:end="242:55">(<argument pos:start="242:47" pos:end="242:54"><expr pos:start="242:47" pos:end="242:54"><name pos:start="242:47" pos:end="242:54">filename</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="242:58" pos:end="242:62"><expr pos:start="242:58" pos:end="242:62"><name pos:start="242:58" pos:end="242:62">lines</name></expr></argument>, <argument pos:start="242:65" pos:end="242:88"><expr pos:start="242:65" pos:end="242:88"><call pos:start="242:65" pos:end="242:88"><name pos:start="242:65" pos:end="242:79"><name pos:start="242:65" pos:end="242:71">Charset</name><operator pos:start="242:72" pos:end="242:72">.</operator><name pos:start="242:73" pos:end="242:79">forName</name></name><argument_list pos:start="242:80" pos:end="242:88">(<argument pos:start="242:81" pos:end="242:87"><expr pos:start="242:81" pos:end="242:87"><literal type="string" pos:start="242:81" pos:end="242:87">"UTF-8"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		</block_content>}</block> <catch pos:start="243:19" pos:end="245:17">catch <parameter_list pos:start="243:25" pos:end="243:39">(<parameter pos:start="243:26" pos:end="243:38"><decl pos:start="243:26" pos:end="243:38"><type pos:start="243:26" pos:end="243:38"><name pos:start="243:26" pos:end="243:36">IOException</name></type> <name pos:start="243:38" pos:end="243:38">e</name></decl></parameter>)</parameter_list> <block pos:start="243:41" pos:end="245:17">{<block_content pos:start="244:25" pos:end="244:40">
			<expr_stmt pos:start="244:25" pos:end="244:40"><expr pos:start="244:25" pos:end="244:39"><call pos:start="244:25" pos:end="244:39"><name pos:start="244:25" pos:end="244:36"><name pos:start="244:25" pos:end="244:30">LOGGER</name><operator pos:start="244:31" pos:end="244:31">.</operator><name pos:start="244:32" pos:end="244:36">error</name></name><argument_list pos:start="244:37" pos:end="244:39">(<argument pos:start="244:38" pos:end="244:38"><expr pos:start="244:38" pos:end="244:38"><name pos:start="244:38" pos:end="244:38">e</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		</block_content>}</block></catch></try>

	</block_content>}</block></function>

	<class pos:start="249:9" pos:end="266:9"><specifier pos:start="249:9" pos:end="249:14">public</specifier> class <name pos:start="249:22" pos:end="249:30">WriteData</name> <super_list pos:start="249:32" pos:end="249:54"><implements pos:start="249:32" pos:end="249:54">implements <super pos:start="249:43" pos:end="249:54"><name pos:start="249:43" pos:end="249:54">Serializable</name></super></implements></super_list> <block pos:start="249:56" pos:end="266:9">{

		<comment type="block" format="javadoc" pos:start="251:17" pos:end="253:19">/**
		 * 
		 */</comment>
		<decl_stmt pos:start="254:17" pos:end="254:64"><decl pos:start="254:17" pos:end="254:63"><type pos:start="254:17" pos:end="254:41"><specifier pos:start="254:17" pos:end="254:23">private</specifier> <specifier pos:start="254:25" pos:end="254:30">static</specifier> <specifier pos:start="254:32" pos:end="254:36">final</specifier> <name pos:start="254:38" pos:end="254:41">long</name></type> <name pos:start="254:43" pos:end="254:58">serialVersionUID</name> <init pos:start="254:60" pos:end="254:63">= <expr pos:start="254:62" pos:end="254:63"><literal type="number" pos:start="254:62" pos:end="254:63">1L</literal></expr></init></decl>;</decl_stmt>
		<decl_stmt pos:start="255:17" pos:end="255:43"><decl pos:start="255:17" pos:end="255:42"><type pos:start="255:17" pos:end="255:36"><specifier pos:start="255:17" pos:end="255:23">private</specifier> <specifier pos:start="255:25" pos:end="255:29">final</specifier> <name pos:start="255:31" pos:end="255:36">String</name></type> <name pos:start="255:38" pos:end="255:42">uavId</name></decl>;</decl_stmt>
		<decl_stmt pos:start="256:17" pos:end="256:64"><decl pos:start="256:17" pos:end="256:63"><type pos:start="256:17" pos:end="256:36"><specifier pos:start="256:17" pos:end="256:23">private</specifier> <name pos:start="256:25" pos:end="256:36"><name pos:start="256:25" pos:end="256:28">List</name><argument_list type="generic" pos:start="256:29" pos:end="256:36">&lt;<argument pos:start="256:30" pos:end="256:35"><name pos:start="256:30" pos:end="256:35">String</name></argument>&gt;</argument_list></name></type> <name pos:start="256:38" pos:end="256:43">routes</name> <init pos:start="256:45" pos:end="256:63">= <expr pos:start="256:47" pos:end="256:63"><operator pos:start="256:47" pos:end="256:49">new</operator> <call pos:start="256:51" pos:end="256:63"><name pos:start="256:51" pos:end="256:61"><name pos:start="256:51" pos:end="256:59">ArrayList</name><argument_list type="generic" pos:start="256:60" pos:end="256:61">&lt;&gt;</argument_list></name><argument_list pos:start="256:62" pos:end="256:63">()</argument_list></call></expr></init></decl>;</decl_stmt>

		<constructor pos:start="258:17" pos:end="260:17"><specifier pos:start="258:17" pos:end="258:22">public</specifier> <name pos:start="258:24" pos:end="258:32">WriteData</name><parameter_list pos:start="258:33" pos:end="258:46">(<parameter pos:start="258:34" pos:end="258:45"><decl pos:start="258:34" pos:end="258:45"><type pos:start="258:34" pos:end="258:39"><name pos:start="258:34" pos:end="258:39">String</name></type> <name pos:start="258:41" pos:end="258:45">uavId</name></decl></parameter>)</parameter_list> <block pos:start="258:48" pos:end="260:17">{<block_content pos:start="259:25" pos:end="259:43">
			<expr_stmt pos:start="259:25" pos:end="259:43"><expr pos:start="259:25" pos:end="259:42"><name pos:start="259:25" pos:end="259:34"><name pos:start="259:25" pos:end="259:28">this</name><operator pos:start="259:29" pos:end="259:29">.</operator><name pos:start="259:30" pos:end="259:34">uavId</name></name> <operator pos:start="259:36" pos:end="259:36">=</operator> <name pos:start="259:38" pos:end="259:42">uavId</name></expr>;</expr_stmt>
		</block_content>}</block></constructor>

		<function pos:start="262:17" pos:end="264:17"><type pos:start="262:17" pos:end="262:27"><specifier pos:start="262:17" pos:end="262:22">public</specifier> <name pos:start="262:24" pos:end="262:27">void</name></type> <name pos:start="262:29" pos:end="262:36">addRoute</name><parameter_list pos:start="262:37" pos:end="262:52">(<parameter pos:start="262:38" pos:end="262:51"><decl pos:start="262:38" pos:end="262:51"><type pos:start="262:38" pos:end="262:43"><name pos:start="262:38" pos:end="262:43">String</name></type> <name pos:start="262:45" pos:end="262:51">routeid</name></decl></parameter>)</parameter_list> <block pos:start="262:54" pos:end="264:17">{<block_content pos:start="263:25" pos:end="263:44">
			<expr_stmt pos:start="263:25" pos:end="263:44"><expr pos:start="263:25" pos:end="263:43"><call pos:start="263:25" pos:end="263:43"><name pos:start="263:25" pos:end="263:34"><name pos:start="263:25" pos:end="263:30">routes</name><operator pos:start="263:31" pos:end="263:31">.</operator><name pos:start="263:32" pos:end="263:34">add</name></name><argument_list pos:start="263:35" pos:end="263:43">(<argument pos:start="263:36" pos:end="263:42"><expr pos:start="263:36" pos:end="263:42"><name pos:start="263:36" pos:end="263:42">routeid</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		</block_content>}</block></function>

	}</block></class>

	<class pos:start="268:9" pos:end="278:9"><specifier pos:start="268:9" pos:end="268:14">public</specifier> class <name pos:start="268:22" pos:end="268:36">WriteAllocation</name> <super_list pos:start="268:38" pos:end="268:60"><implements pos:start="268:38" pos:end="268:60">implements <super pos:start="268:49" pos:end="268:60"><name pos:start="268:49" pos:end="268:60">Serializable</name></super></implements></super_list> <block pos:start="268:62" pos:end="278:9">{
		<comment type="block" format="javadoc" pos:start="269:17" pos:end="271:19">/**
		 * 
		 */</comment>
		<decl_stmt pos:start="272:17" pos:end="272:64"><decl pos:start="272:17" pos:end="272:63"><type pos:start="272:17" pos:end="272:41"><specifier pos:start="272:17" pos:end="272:23">private</specifier> <specifier pos:start="272:25" pos:end="272:30">static</specifier> <specifier pos:start="272:32" pos:end="272:36">final</specifier> <name pos:start="272:38" pos:end="272:41">long</name></type> <name pos:start="272:43" pos:end="272:58">serialVersionUID</name> <init pos:start="272:60" pos:end="272:63">= <expr pos:start="272:62" pos:end="272:63"><literal type="number" pos:start="272:62" pos:end="272:63">1L</literal></expr></init></decl>;</decl_stmt>
		<decl_stmt pos:start="273:17" pos:end="273:72"><decl pos:start="273:17" pos:end="273:71"><type pos:start="273:17" pos:end="273:39"><specifier pos:start="273:17" pos:end="273:23">private</specifier> <name pos:start="273:25" pos:end="273:39"><name pos:start="273:25" pos:end="273:28">List</name><argument_list type="generic" pos:start="273:29" pos:end="273:39">&lt;<argument pos:start="273:30" pos:end="273:38"><name pos:start="273:30" pos:end="273:38">WriteData</name></argument>&gt;</argument_list></name></type> <name pos:start="273:41" pos:end="273:51">assignments</name> <init pos:start="273:53" pos:end="273:71">= <expr pos:start="273:55" pos:end="273:71"><operator pos:start="273:55" pos:end="273:57">new</operator> <call pos:start="273:59" pos:end="273:71"><name pos:start="273:59" pos:end="273:69"><name pos:start="273:59" pos:end="273:67">ArrayList</name><argument_list type="generic" pos:start="273:68" pos:end="273:69">&lt;&gt;</argument_list></name><argument_list pos:start="273:70" pos:end="273:71">()</argument_list></call></expr></init></decl>;</decl_stmt>

		<function pos:start="275:17" pos:end="277:17"><type pos:start="275:17" pos:end="275:27"><specifier pos:start="275:17" pos:end="275:22">public</specifier> <name pos:start="275:24" pos:end="275:27">void</name></type> <name pos:start="275:29" pos:end="275:41">addAssignment</name><parameter_list pos:start="275:42" pos:end="275:56">(<parameter pos:start="275:43" pos:end="275:55"><decl pos:start="275:43" pos:end="275:55"><type pos:start="275:43" pos:end="275:51"><name pos:start="275:43" pos:end="275:51">WriteData</name></type> <name pos:start="275:53" pos:end="275:55">ass</name></decl></parameter>)</parameter_list> <block pos:start="275:58" pos:end="277:17">{<block_content pos:start="276:25" pos:end="276:45">
			<expr_stmt pos:start="276:25" pos:end="276:45"><expr pos:start="276:25" pos:end="276:44"><call pos:start="276:25" pos:end="276:44"><name pos:start="276:25" pos:end="276:39"><name pos:start="276:25" pos:end="276:35">assignments</name><operator pos:start="276:36" pos:end="276:36">.</operator><name pos:start="276:37" pos:end="276:39">add</name></name><argument_list pos:start="276:40" pos:end="276:44">(<argument pos:start="276:41" pos:end="276:43"><expr pos:start="276:41" pos:end="276:43"><name pos:start="276:41" pos:end="276:43">ass</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		</block_content>}</block></function>
	}</block></class>

}</block></class>
</unit>
