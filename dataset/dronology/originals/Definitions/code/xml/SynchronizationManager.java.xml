<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="Java" filename="flatCode/SynchronizationManager.java" pos:tabs="8"><package pos:start="1:1" pos:end="1:66">package <name pos:start="1:9" pos:end="1:65"><name pos:start="1:9" pos:end="1:11">edu</name><operator pos:start="1:12" pos:end="1:12">.</operator><name pos:start="1:13" pos:end="1:14">nd</name><operator pos:start="1:15" pos:end="1:15">.</operator><name pos:start="1:16" pos:end="1:24">dronology</name><operator pos:start="1:25" pos:end="1:25">.</operator><name pos:start="1:26" pos:end="1:33">services</name><operator pos:start="1:34" pos:end="1:34">.</operator><name pos:start="1:35" pos:end="1:44">extensions</name><operator pos:start="1:45" pos:end="1:45">.</operator><name pos:start="1:46" pos:end="1:60">missionplanning</name><operator pos:start="1:61" pos:end="1:61">.</operator><name pos:start="1:62" pos:end="1:65">sync</name></name>;</package>

<import pos:start="3:1" pos:end="3:25">import <name pos:start="3:8" pos:end="3:24"><name pos:start="3:8" pos:end="3:11">java</name><operator pos:start="3:12" pos:end="3:12">.</operator><name pos:start="3:13" pos:end="3:16">util</name><operator pos:start="3:17" pos:end="3:17">.</operator><name pos:start="3:18" pos:end="3:24">HashMap</name></name>;</import>
<import pos:start="4:1" pos:end="4:21">import <name pos:start="4:8" pos:end="4:20"><name pos:start="4:8" pos:end="4:11">java</name><operator pos:start="4:12" pos:end="4:12">.</operator><name pos:start="4:13" pos:end="4:16">util</name><operator pos:start="4:17" pos:end="4:17">.</operator><name pos:start="4:18" pos:end="4:20">Map</name></name>;</import>

<import pos:start="6:1" pos:end="6:48">import <name pos:start="6:8" pos:end="6:47"><name pos:start="6:8" pos:end="6:10">edu</name><operator pos:start="6:11" pos:end="6:11">.</operator><name pos:start="6:12" pos:end="6:13">nd</name><operator pos:start="6:14" pos:end="6:14">.</operator><name pos:start="6:15" pos:end="6:23">dronology</name><operator pos:start="6:24" pos:end="6:24">.</operator><name pos:start="6:25" pos:end="6:28">core</name><operator pos:start="6:29" pos:end="6:29">.</operator><name pos:start="6:30" pos:end="6:47">DronologyConstants</name></name>;</import>
<import pos:start="7:1" pos:end="7:86">import <name pos:start="7:8" pos:end="7:85"><name pos:start="7:8" pos:end="7:10">edu</name><operator pos:start="7:11" pos:end="7:11">.</operator><name pos:start="7:12" pos:end="7:13">nd</name><operator pos:start="7:14" pos:end="7:14">.</operator><name pos:start="7:15" pos:end="7:23">dronology</name><operator pos:start="7:24" pos:end="7:24">.</operator><name pos:start="7:25" pos:end="7:32">services</name><operator pos:start="7:33" pos:end="7:33">.</operator><name pos:start="7:34" pos:end="7:43">extensions</name><operator pos:start="7:44" pos:end="7:44">.</operator><name pos:start="7:45" pos:end="7:59">missionplanning</name><operator pos:start="7:60" pos:end="7:60">.</operator><name pos:start="7:61" pos:end="7:85">MissionExecutionException</name></name>;</import>
<import pos:start="8:1" pos:end="8:30">import <name pos:start="8:8" pos:end="8:29"><name pos:start="8:8" pos:end="8:10">net</name><operator pos:start="8:11" pos:end="8:11">.</operator><name pos:start="8:12" pos:end="8:13">mv</name><operator pos:start="8:14" pos:end="8:14">.</operator><name pos:start="8:15" pos:end="8:21">logging</name><operator pos:start="8:22" pos:end="8:22">.</operator><name pos:start="8:23" pos:end="8:29">ILogger</name></name>;</import>
<import pos:start="9:1" pos:end="9:37">import <name pos:start="9:8" pos:end="9:36"><name pos:start="9:8" pos:end="9:10">net</name><operator pos:start="9:11" pos:end="9:11">.</operator><name pos:start="9:12" pos:end="9:13">mv</name><operator pos:start="9:14" pos:end="9:14">.</operator><name pos:start="9:15" pos:end="9:21">logging</name><operator pos:start="9:22" pos:end="9:22">.</operator><name pos:start="9:23" pos:end="9:36">LoggerProvider</name></name>;</import>

<comment type="block" format="javadoc" pos:start="11:1" pos:end="19:3">/**
 * The {@link SynchronizationManager} holds a list of {@link SynchronizationPoint} and ensures that a point is fully synced&lt;br&gt;
 * before allowing UAVs to proceed with the next task.
 * 
 * @author Jane Cleland-Huang 
 * 
 * 
 *
 */</comment>
<class pos:start="20:1" pos:end="120:1"><specifier pos:start="20:1" pos:end="20:6">public</specifier> class <name pos:start="20:14" pos:end="20:35">SynchronizationManager</name> <block pos:start="20:37" pos:end="120:1">{
	<decl_stmt pos:start="21:9" pos:end="21:101"><decl pos:start="21:9" pos:end="21:100"><type pos:start="21:9" pos:end="21:36"><specifier pos:start="21:9" pos:end="21:15">private</specifier> <specifier pos:start="21:17" pos:end="21:22">static</specifier> <specifier pos:start="21:24" pos:end="21:28">final</specifier> <name pos:start="21:30" pos:end="21:36">ILogger</name></type> <name pos:start="21:38" pos:end="21:43">LOGGER</name> <init pos:start="21:45" pos:end="21:100">= <expr pos:start="21:47" pos:end="21:100"><call pos:start="21:47" pos:end="21:100"><name pos:start="21:47" pos:end="21:70"><name pos:start="21:47" pos:end="21:60">LoggerProvider</name><operator pos:start="21:61" pos:end="21:61">.</operator><name pos:start="21:62" pos:end="21:70">getLogger</name></name><argument_list pos:start="21:71" pos:end="21:100">(<argument pos:start="21:72" pos:end="21:99"><expr pos:start="21:72" pos:end="21:99"><name pos:start="21:72" pos:end="21:99"><name pos:start="21:72" pos:end="21:93">SynchronizationManager</name><operator pos:start="21:94" pos:end="21:94">.</operator><name pos:start="21:95" pos:end="21:99">class</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

	<decl_stmt pos:start="23:9" pos:end="23:62"><decl pos:start="23:9" pos:end="23:61"><type pos:start="23:9" pos:end="23:49"><specifier pos:start="23:9" pos:end="23:15">private</specifier> <name pos:start="23:17" pos:end="23:49"><name pos:start="23:17" pos:end="23:19">Map</name><argument_list type="generic" pos:start="23:20" pos:end="23:49">&lt;<argument pos:start="23:21" pos:end="23:26"><name pos:start="23:21" pos:end="23:26">String</name></argument>, <argument pos:start="23:29" pos:end="23:48"><name pos:start="23:29" pos:end="23:48">SynchronizationPoint</name></argument>&gt;</argument_list></name></type> <name pos:start="23:51" pos:end="23:61">synchPoints</name></decl>;</decl_stmt>
	<decl_stmt pos:start="24:9" pos:end="24:88"><decl pos:start="24:9" pos:end="24:87"><type pos:start="24:9" pos:end="24:19"><specifier pos:start="24:9" pos:end="24:15">private</specifier> <name pos:start="24:17" pos:end="24:19">int</name></type> <name pos:start="24:21" pos:end="24:37">availableAltitude</name> <init pos:start="24:39" pos:end="24:87">= <expr pos:start="24:41" pos:end="24:87"><name pos:start="24:41" pos:end="24:87"><name pos:start="24:41" pos:end="24:58">DronologyConstants</name><operator pos:start="24:59" pos:end="24:59">.</operator><name pos:start="24:60" pos:end="24:87">MISSION_TAKEOFF_MIN_ALTITUDE</name></name></expr></init></decl>;</decl_stmt>

	<decl_stmt pos:start="26:9" pos:end="26:65"><decl pos:start="26:9" pos:end="26:64"><type pos:start="26:9" pos:end="26:55"><specifier pos:start="26:9" pos:end="26:15">private</specifier> <specifier pos:start="26:17" pos:end="26:22">static</specifier> <specifier pos:start="26:24" pos:end="26:32">transient</specifier> <name pos:start="26:34" pos:end="26:55">SynchronizationManager</name></type> <name pos:start="26:57" pos:end="26:64">INSTANCE</name></decl>;</decl_stmt>

	<constructor pos:start="28:9" pos:end="30:9"><specifier pos:start="28:9" pos:end="28:15">private</specifier> <name pos:start="28:17" pos:end="28:38">SynchronizationManager</name><parameter_list pos:start="28:39" pos:end="28:40">()</parameter_list> <block pos:start="28:42" pos:end="30:9">{<block_content pos:start="29:17" pos:end="29:46">
		<expr_stmt pos:start="29:17" pos:end="29:46"><expr pos:start="29:17" pos:end="29:45"><name pos:start="29:17" pos:end="29:27">synchPoints</name> <operator pos:start="29:29" pos:end="29:29">=</operator> <operator pos:start="29:31" pos:end="29:33">new</operator> <call pos:start="29:35" pos:end="29:45"><name pos:start="29:35" pos:end="29:43"><name pos:start="29:35" pos:end="29:41">HashMap</name><argument_list type="generic" pos:start="29:42" pos:end="29:43">&lt;&gt;</argument_list></name><argument_list pos:start="29:44" pos:end="29:45">()</argument_list></call></expr>;</expr_stmt>
	</block_content>}</block></constructor>

	<function pos:start="32:9" pos:end="41:9"><type pos:start="32:9" pos:end="32:44"><specifier pos:start="32:9" pos:end="32:14">public</specifier> <specifier pos:start="32:16" pos:end="32:21">static</specifier> <name pos:start="32:23" pos:end="32:44">SynchronizationManager</name></type> <name pos:start="32:46" pos:end="32:56">getInstance</name><parameter_list pos:start="32:57" pos:end="32:58">()</parameter_list> <block pos:start="32:60" pos:end="41:9">{<block_content pos:start="33:17" pos:end="40:32">
		<if_stmt pos:start="33:17" pos:end="39:17"><if pos:start="33:17" pos:end="39:17">if <condition pos:start="33:20" pos:end="33:37">(<expr pos:start="33:21" pos:end="33:36"><name pos:start="33:21" pos:end="33:28">INSTANCE</name> <operator pos:start="33:30" pos:end="33:31">==</operator> <literal type="null" pos:start="33:33" pos:end="33:36">null</literal></expr>)</condition> <block pos:start="33:39" pos:end="39:17">{<block_content pos:start="34:25" pos:end="38:25">
			<synchronized pos:start="34:25" pos:end="38:25">synchronized <init pos:start="34:38" pos:end="34:67">(<expr pos:start="34:39" pos:end="34:66"><name pos:start="34:39" pos:end="34:66"><name pos:start="34:39" pos:end="34:60">SynchronizationManager</name><operator pos:start="34:61" pos:end="34:61">.</operator><name pos:start="34:62" pos:end="34:66">class</name></name></expr>)</init> <block pos:start="34:69" pos:end="38:25">{<block_content pos:start="35:33" pos:end="37:33">
				<if_stmt pos:start="35:33" pos:end="37:33"><if pos:start="35:33" pos:end="37:33">if <condition pos:start="35:36" pos:end="35:53">(<expr pos:start="35:37" pos:end="35:52"><name pos:start="35:37" pos:end="35:44">INSTANCE</name> <operator pos:start="35:46" pos:end="35:47">==</operator> <literal type="null" pos:start="35:49" pos:end="35:52">null</literal></expr>)</condition> <block pos:start="35:55" pos:end="37:33">{<block_content pos:start="36:41" pos:end="36:80">
					<expr_stmt pos:start="36:41" pos:end="36:80"><expr pos:start="36:41" pos:end="36:79"><name pos:start="36:41" pos:end="36:48">INSTANCE</name> <operator pos:start="36:50" pos:end="36:50">=</operator> <operator pos:start="36:52" pos:end="36:54">new</operator> <call pos:start="36:56" pos:end="36:79"><name pos:start="36:56" pos:end="36:77">SynchronizationManager</name><argument_list pos:start="36:78" pos:end="36:79">()</argument_list></call></expr>;</expr_stmt>
				</block_content>}</block></if></if_stmt>
			</block_content>}</block></synchronized>
		</block_content>}</block></if></if_stmt>
		<return pos:start="40:17" pos:end="40:32">return <expr pos:start="40:24" pos:end="40:31"><name pos:start="40:24" pos:end="40:31">INSTANCE</name></expr>;</return>
	</block_content>}</block></function>

	<function pos:start="43:9" pos:end="50:9"><type pos:start="43:9" pos:end="43:18"><specifier pos:start="43:9" pos:end="43:14">public</specifier> <name pos:start="43:16" pos:end="43:18">int</name></type> <name pos:start="43:20" pos:end="43:34">getNextAltitude</name><parameter_list pos:start="43:35" pos:end="43:36">()</parameter_list> <throws pos:start="43:38" pos:end="43:69">throws <argument pos:start="43:45" pos:end="43:69"><expr pos:start="43:45" pos:end="43:69"><name pos:start="43:45" pos:end="43:69">MissionExecutionException</name></expr></argument></throws> <block pos:start="43:71" pos:end="50:9">{<block_content pos:start="44:17" pos:end="49:41">
		<expr_stmt pos:start="44:17" pos:end="44:91"><expr pos:start="44:17" pos:end="44:90"><name pos:start="44:17" pos:end="44:33">availableAltitude</name> <operator pos:start="44:35" pos:end="44:36">+=</operator> <name pos:start="44:38" pos:end="44:90"><name pos:start="44:38" pos:end="44:55">DronologyConstants</name><operator pos:start="44:56" pos:end="44:56">.</operator><name pos:start="44:57" pos:end="44:90">MISSION_TAKEOFF_ALTITUDE_INCREMENT</name></name></expr>;</expr_stmt>
		<if_stmt pos:start="45:17" pos:end="47:17"><if pos:start="45:17" pos:end="47:17">if <condition pos:start="45:20" pos:end="45:88">(<expr pos:start="45:21" pos:end="45:87"><name pos:start="45:21" pos:end="45:37">availableAltitude</name> <operator pos:start="45:39" pos:end="45:39">&gt;</operator> <name pos:start="45:41" pos:end="45:87"><name pos:start="45:41" pos:end="45:58">DronologyConstants</name><operator pos:start="45:59" pos:end="45:59">.</operator><name pos:start="45:60" pos:end="45:87">MISSION_MAX_TAKEOFF_DISTANCE</name></name></expr>)</condition> <block pos:start="45:90" pos:end="47:17">{<block_content pos:start="46:25" pos:end="46:113">
			<throw pos:start="46:25" pos:end="46:113">throw <expr pos:start="46:31" pos:end="46:112"><operator pos:start="46:31" pos:end="46:33">new</operator> <call pos:start="46:35" pos:end="46:112"><name pos:start="46:35" pos:end="46:59">MissionExecutionException</name><argument_list pos:start="46:60" pos:end="46:112">(<argument pos:start="46:61" pos:end="46:111"><expr pos:start="46:61" pos:end="46:111"><literal type="string" pos:start="46:61" pos:end="46:111">"Max altitude reached - No safe altitude available"</literal></expr></argument>)</argument_list></call></expr>;</throw>
		</block_content>}</block></if></if_stmt>

		<return pos:start="49:17" pos:end="49:41">return <expr pos:start="49:24" pos:end="49:40"><name pos:start="49:24" pos:end="49:40">availableAltitude</name></expr>;</return>
	</block_content>}</block></function>

	<comment type="line" pos:start="52:9" pos:end="52:45">// Create named synchronization point</comment>
	<function pos:start="53:9" pos:end="61:9"><type pos:start="53:9" pos:end="53:35"><specifier pos:start="53:9" pos:end="53:14">public</specifier> <name pos:start="53:16" pos:end="53:35">SynchronizationPoint</name></type> <name pos:start="53:37" pos:end="53:62">createSynchronizationPoint</name><parameter_list pos:start="53:63" pos:end="53:80">(<parameter pos:start="53:64" pos:end="53:79"><decl pos:start="53:64" pos:end="53:79"><type pos:start="53:64" pos:end="53:69"><name pos:start="53:64" pos:end="53:69">String</name></type> <name pos:start="53:71" pos:end="53:79">synchName</name></decl></parameter>)</parameter_list> <block pos:start="53:82" pos:end="61:9">{<block_content pos:start="54:17" pos:end="60:17">
		<if_stmt pos:start="54:17" pos:end="60:17"><if pos:start="54:17" pos:end="58:17">if <condition pos:start="54:20" pos:end="54:56">(<expr pos:start="54:21" pos:end="54:55"><operator pos:start="54:21" pos:end="54:21">!</operator><call pos:start="54:22" pos:end="54:55"><name pos:start="54:22" pos:end="54:44"><name pos:start="54:22" pos:end="54:32">synchPoints</name><operator pos:start="54:33" pos:end="54:33">.</operator><name pos:start="54:34" pos:end="54:44">containsKey</name></name><argument_list pos:start="54:45" pos:end="54:55">(<argument pos:start="54:46" pos:end="54:54"><expr pos:start="54:46" pos:end="54:54"><name pos:start="54:46" pos:end="54:54">synchName</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="54:58" pos:end="58:17">{<block_content pos:start="55:25" pos:end="57:42">
			<decl_stmt pos:start="55:25" pos:end="55:94"><decl pos:start="55:25" pos:end="55:93"><type pos:start="55:25" pos:end="55:44"><name pos:start="55:25" pos:end="55:44">SynchronizationPoint</name></type> <name pos:start="55:46" pos:end="55:55">synchPoint</name> <init pos:start="55:57" pos:end="55:93">= <expr pos:start="55:59" pos:end="55:93"><operator pos:start="55:59" pos:end="55:61">new</operator> <call pos:start="55:63" pos:end="55:93"><name pos:start="55:63" pos:end="55:82">SynchronizationPoint</name><argument_list pos:start="55:83" pos:end="55:93">(<argument pos:start="55:84" pos:end="55:92"><expr pos:start="55:84" pos:end="55:92"><name pos:start="55:84" pos:end="55:92">synchName</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<expr_stmt pos:start="56:25" pos:end="56:63"><expr pos:start="56:25" pos:end="56:62"><call pos:start="56:25" pos:end="56:62"><name pos:start="56:25" pos:end="56:39"><name pos:start="56:25" pos:end="56:35">synchPoints</name><operator pos:start="56:36" pos:end="56:36">.</operator><name pos:start="56:37" pos:end="56:39">put</name></name><argument_list pos:start="56:40" pos:end="56:62">(<argument pos:start="56:41" pos:end="56:49"><expr pos:start="56:41" pos:end="56:49"><name pos:start="56:41" pos:end="56:49">synchName</name></expr></argument>, <argument pos:start="56:52" pos:end="56:61"><expr pos:start="56:52" pos:end="56:61"><name pos:start="56:52" pos:end="56:61">synchPoint</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<return pos:start="57:25" pos:end="57:42">return <expr pos:start="57:32" pos:end="57:41"><name pos:start="57:32" pos:end="57:41">synchPoint</name></expr>;</return>
		</block_content>}</block></if> <else pos:start="58:19" pos:end="60:17">else <block pos:start="58:24" pos:end="60:17">{<block_content pos:start="59:25" pos:end="59:36">
			<return pos:start="59:25" pos:end="59:36">return <expr pos:start="59:32" pos:end="59:35"><literal type="null" pos:start="59:32" pos:end="59:35">null</literal></expr>;</return>
		</block_content>}</block></else></if_stmt>
	</block_content>}</block></function>

	<function pos:start="63:9" pos:end="65:9"><type pos:start="63:9" pos:end="63:22"><specifier pos:start="63:9" pos:end="63:14">public</specifier> <name pos:start="63:16" pos:end="63:22">boolean</name></type> <name pos:start="63:24" pos:end="63:39">synchPointExists</name><parameter_list pos:start="63:40" pos:end="63:57">(<parameter pos:start="63:41" pos:end="63:56"><decl pos:start="63:41" pos:end="63:56"><type pos:start="63:41" pos:end="63:46"><name pos:start="63:41" pos:end="63:46">String</name></type> <name pos:start="63:48" pos:end="63:56">synchName</name></decl></parameter>)</parameter_list> <block pos:start="63:59" pos:end="65:9">{<block_content pos:start="64:17" pos:end="64:58">
		<return pos:start="64:17" pos:end="64:58">return <expr pos:start="64:24" pos:end="64:57"><call pos:start="64:24" pos:end="64:57"><name pos:start="64:24" pos:end="64:46"><name pos:start="64:24" pos:end="64:34">synchPoints</name><operator pos:start="64:35" pos:end="64:35">.</operator><name pos:start="64:36" pos:end="64:46">containsKey</name></name><argument_list pos:start="64:47" pos:end="64:57">(<argument pos:start="64:48" pos:end="64:56"><expr pos:start="64:48" pos:end="64:56"><name pos:start="64:48" pos:end="64:56">synchName</name></expr></argument>)</argument_list></call></expr>;</return>
	</block_content>}</block></function>

	<comment type="line" pos:start="67:9" pos:end="67:42">// Register a UAV for a synchPoint</comment>
	<function pos:start="68:9" pos:end="77:9"><type pos:start="68:9" pos:end="68:22"><specifier pos:start="68:9" pos:end="68:14">public</specifier> <name pos:start="68:16" pos:end="68:22">boolean</name></type> <name pos:start="68:24" pos:end="68:35">addSynchItem</name><parameter_list pos:start="68:36" pos:end="68:67">(<parameter pos:start="68:37" pos:end="68:48"><decl pos:start="68:37" pos:end="68:48"><type pos:start="68:37" pos:end="68:48"><name pos:start="68:37" pos:end="68:42">String</name></type> <name pos:start="68:44" pos:end="68:48">uavid</name></decl></parameter>, <parameter pos:start="68:51" pos:end="68:66"><decl pos:start="68:51" pos:end="68:66"><type pos:start="68:51" pos:end="68:66"><name pos:start="68:51" pos:end="68:56">String</name></type> <name pos:start="68:58" pos:end="68:66">synchName</name></decl></parameter>)</parameter_list> <block pos:start="68:69" pos:end="77:9">{<block_content pos:start="69:17" pos:end="76:29">
		<decl_stmt pos:start="69:17" pos:end="69:77"><decl pos:start="69:17" pos:end="69:76"><type pos:start="69:17" pos:end="69:36"><name pos:start="69:17" pos:end="69:36">SynchronizationPoint</name></type> <name pos:start="69:38" pos:end="69:47">synchPoint</name> <init pos:start="69:49" pos:end="69:76">= <expr pos:start="69:51" pos:end="69:76"><call pos:start="69:51" pos:end="69:76"><name pos:start="69:51" pos:end="69:65"><name pos:start="69:51" pos:end="69:61">synchPoints</name><operator pos:start="69:62" pos:end="69:62">.</operator><name pos:start="69:63" pos:end="69:65">get</name></name><argument_list pos:start="69:66" pos:end="69:76">(<argument pos:start="69:67" pos:end="69:75"><expr pos:start="69:67" pos:end="69:75"><name pos:start="69:67" pos:end="69:75">synchName</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<if_stmt pos:start="70:17" pos:end="74:17"><if pos:start="70:17" pos:end="74:17">if <condition pos:start="70:20" pos:end="70:39">(<expr pos:start="70:21" pos:end="70:38"><name pos:start="70:21" pos:end="70:30">synchPoint</name> <operator pos:start="70:32" pos:end="70:33">!=</operator> <literal type="null" pos:start="70:35" pos:end="70:38">null</literal></expr>)</condition> <block pos:start="70:41" pos:end="74:17">{<block_content pos:start="71:25" pos:end="73:36">
			<expr_stmt pos:start="71:25" pos:end="71:63"><expr pos:start="71:25" pos:end="71:62"><call pos:start="71:25" pos:end="71:62"><name pos:start="71:25" pos:end="71:55"><name pos:start="71:25" pos:end="71:34">synchPoint</name><operator pos:start="71:35" pos:end="71:35">.</operator><name pos:start="71:36" pos:end="71:55">registerCollaborator</name></name><argument_list pos:start="71:56" pos:end="71:62">(<argument pos:start="71:57" pos:end="71:61"><expr pos:start="71:57" pos:end="71:61"><name pos:start="71:57" pos:end="71:61">uavid</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt pos:start="72:25" pos:end="72:95"><expr pos:start="72:25" pos:end="72:94"><call pos:start="72:25" pos:end="72:94"><name pos:start="72:25" pos:end="72:42"><name pos:start="72:25" pos:end="72:30">LOGGER</name><operator pos:start="72:31" pos:end="72:31">.</operator><name pos:start="72:32" pos:end="72:42">missionInfo</name></name><argument_list pos:start="72:43" pos:end="72:94">(<argument pos:start="72:44" pos:end="72:93"><expr pos:start="72:44" pos:end="72:93"><literal type="string" pos:start="72:44" pos:end="72:53">"Adding '"</literal> <operator pos:start="72:55" pos:end="72:55">+</operator> <name pos:start="72:57" pos:end="72:61">uavid</name> <operator pos:start="72:63" pos:end="72:63">+</operator> <literal type="string" pos:start="72:65" pos:end="72:81">"' to SYNC-Point"</literal> <operator pos:start="72:83" pos:end="72:83">+</operator> <name pos:start="72:85" pos:end="72:93">synchName</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<return pos:start="73:25" pos:end="73:36">return <expr pos:start="73:32" pos:end="73:35"><literal type="boolean" pos:start="73:32" pos:end="73:35">true</literal></expr>;</return>
		</block_content>}</block></if></if_stmt>
		<expr_stmt pos:start="75:17" pos:end="75:85"><expr pos:start="75:17" pos:end="75:84"><call pos:start="75:17" pos:end="75:84"><name pos:start="75:17" pos:end="75:35"><name pos:start="75:17" pos:end="75:22">LOGGER</name><operator pos:start="75:23" pos:end="75:23">.</operator><name pos:start="75:24" pos:end="75:35">missionError</name></name><argument_list pos:start="75:36" pos:end="75:84">(<argument pos:start="75:37" pos:end="75:83"><expr pos:start="75:37" pos:end="75:83"><literal type="string" pos:start="75:37" pos:end="75:50">"Sync point '"</literal> <operator pos:start="75:52" pos:end="75:52">+</operator> <name pos:start="75:54" pos:end="75:62">synchName</name> <operator pos:start="75:64" pos:end="75:64">+</operator> <literal type="string" pos:start="75:66" pos:end="75:83">"' not available!"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<return pos:start="76:17" pos:end="76:29">return <expr pos:start="76:24" pos:end="76:28"><literal type="boolean" pos:start="76:24" pos:end="76:28">false</literal></expr>;</return>
	</block_content>}</block></function>

	<comment type="line" pos:start="79:9" pos:end="79:88">// Activate all synchronization points (we may not always want to do this -- but</comment>
	<comment type="line" pos:start="80:9" pos:end="80:63">// it works for our current coordinated takeoff/landing</comment>
	<function pos:start="81:9" pos:end="85:9"><type pos:start="81:9" pos:end="81:19"><specifier pos:start="81:9" pos:end="81:14">public</specifier> <name pos:start="81:16" pos:end="81:19">void</name></type> <name pos:start="81:21" pos:end="81:42">activateAllSynchPoints</name><parameter_list pos:start="81:43" pos:end="81:44">()</parameter_list> <block pos:start="81:46" pos:end="85:9">{<block_content pos:start="82:17" pos:end="84:19">
		<expr_stmt pos:start="82:17" pos:end="84:19"><expr pos:start="82:17" pos:end="84:18"><call pos:start="82:17" pos:end="84:18"><name pos:start="82:17" pos:end="82:35"><name pos:start="82:17" pos:end="82:27">synchPoints</name><operator pos:start="82:28" pos:end="82:28">.</operator><name pos:start="82:29" pos:end="82:35">forEach</name></name><argument_list pos:start="82:36" pos:end="84:18">(<argument pos:start="82:37" pos:end="84:17"><expr pos:start="82:37" pos:end="84:17"><lambda pos:start="82:37" pos:end="84:17"><parameter_list pos:start="82:37" pos:end="82:46">(<parameter pos:start="82:38" pos:end="82:38"><decl pos:start="82:38" pos:end="82:38"><name pos:start="82:38" pos:end="82:38">k</name></decl></parameter>, <parameter pos:start="82:41" pos:end="82:45"><decl pos:start="82:41" pos:end="82:45"><name pos:start="82:41" pos:end="82:45">point</name></decl></parameter>)</parameter_list> -&gt; <block pos:start="82:51" pos:end="84:17">{<block_content pos:start="83:25" pos:end="83:61">
			<expr_stmt pos:start="83:25" pos:end="83:61"><expr pos:start="83:25" pos:end="83:60"><call pos:start="83:25" pos:end="83:60"><name pos:start="83:25" pos:end="83:58"><name pos:start="83:25" pos:end="83:29">point</name><operator pos:start="83:30" pos:end="83:30">.</operator><name pos:start="83:31" pos:end="83:58">activateSynchronizationPoint</name></name><argument_list pos:start="83:59" pos:end="83:60">()</argument_list></call></expr>;</expr_stmt>
		</block_content>}</block></lambda></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	</block_content>}</block></function>

	<comment type="line" pos:start="87:9" pos:end="87:57">// Remove UAV from the synch point it has visited</comment>
	<function pos:start="88:9" pos:end="95:9"><type pos:start="88:9" pos:end="88:19"><specifier pos:start="88:9" pos:end="88:14">public</specifier> <name pos:start="88:16" pos:end="88:19">void</name></type> <name pos:start="88:21" pos:end="88:40">uavVisitedSynchPoint</name><parameter_list pos:start="88:41" pos:end="88:72">(<parameter pos:start="88:42" pos:end="88:53"><decl pos:start="88:42" pos:end="88:53"><type pos:start="88:42" pos:end="88:53"><name pos:start="88:42" pos:end="88:47">String</name></type> <name pos:start="88:49" pos:end="88:53">uavid</name></decl></parameter>, <parameter pos:start="88:56" pos:end="88:71"><decl pos:start="88:56" pos:end="88:71"><type pos:start="88:56" pos:end="88:71"><name pos:start="88:56" pos:end="88:61">String</name></type> <name pos:start="88:63" pos:end="88:71">synchName</name></decl></parameter>)</parameter_list> <block pos:start="88:74" pos:end="95:9">{<block_content pos:start="89:17" pos:end="94:17">
		<decl_stmt pos:start="89:17" pos:end="89:77"><decl pos:start="89:17" pos:end="89:76"><type pos:start="89:17" pos:end="89:36"><name pos:start="89:17" pos:end="89:36">SynchronizationPoint</name></type> <name pos:start="89:38" pos:end="89:47">synchPoint</name> <init pos:start="89:49" pos:end="89:76">= <expr pos:start="89:51" pos:end="89:76"><call pos:start="89:51" pos:end="89:76"><name pos:start="89:51" pos:end="89:65"><name pos:start="89:51" pos:end="89:61">synchPoints</name><operator pos:start="89:62" pos:end="89:62">.</operator><name pos:start="89:63" pos:end="89:65">get</name></name><argument_list pos:start="89:66" pos:end="89:76">(<argument pos:start="89:67" pos:end="89:75"><expr pos:start="89:67" pos:end="89:75"><name pos:start="89:67" pos:end="89:75">synchName</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<if_stmt pos:start="90:17" pos:end="94:17"><if pos:start="90:17" pos:end="92:17">if <condition pos:start="90:20" pos:end="90:39">(<expr pos:start="90:21" pos:end="90:38"><name pos:start="90:21" pos:end="90:30">synchPoint</name> <operator pos:start="90:32" pos:end="90:33">!=</operator> <literal type="null" pos:start="90:35" pos:end="90:38">null</literal></expr>)</condition> <block pos:start="90:41" pos:end="92:17">{<block_content pos:start="91:25" pos:end="91:61">
			<expr_stmt pos:start="91:25" pos:end="91:61"><expr pos:start="91:25" pos:end="91:60"><call pos:start="91:25" pos:end="91:60"><name pos:start="91:25" pos:end="91:53"><name pos:start="91:25" pos:end="91:34">synchPoint</name><operator pos:start="91:35" pos:end="91:35">.</operator><name pos:start="91:36" pos:end="91:53">removeCollaborator</name></name><argument_list pos:start="91:54" pos:end="91:60">(<argument pos:start="91:55" pos:end="91:59"><expr pos:start="91:55" pos:end="91:59"><name pos:start="91:55" pos:end="91:59">uavid</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		</block_content>}</block></if> <else pos:start="92:19" pos:end="94:17">else <block pos:start="92:24" pos:end="94:17">{<block_content pos:start="93:25" pos:end="93:88">
			<expr_stmt pos:start="93:25" pos:end="93:88"><expr pos:start="93:25" pos:end="93:87"><call pos:start="93:25" pos:end="93:87"><name pos:start="93:25" pos:end="93:43"><name pos:start="93:25" pos:end="93:30">LOGGER</name><operator pos:start="93:31" pos:end="93:31">.</operator><name pos:start="93:32" pos:end="93:43">missionError</name></name><argument_list pos:start="93:44" pos:end="93:87">(<argument pos:start="93:45" pos:end="93:86"><expr pos:start="93:45" pos:end="93:86"><literal type="string" pos:start="93:45" pos:end="93:58">"Sync point '"</literal> <operator pos:start="93:60" pos:end="93:60">+</operator> <name pos:start="93:62" pos:end="93:70">synchName</name> <operator pos:start="93:72" pos:end="93:72">+</operator> <literal type="string" pos:start="93:74" pos:end="93:86">"' not found"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		</block_content>}</block></else></if_stmt>
	</block_content>}</block></function>

	<comment type="line" pos:start="97:9" pos:end="97:68">// Count number of UAVs who are yet to visit the synch point</comment>
	<function pos:start="98:9" pos:end="101:9"><type pos:start="98:9" pos:end="98:18"><specifier pos:start="98:9" pos:end="98:14">public</specifier> <name pos:start="98:16" pos:end="98:18">int</name></type> <name pos:start="98:20" pos:end="98:42">getCountOfUnsynchedUAVs</name><parameter_list pos:start="98:43" pos:end="98:60">(<parameter pos:start="98:44" pos:end="98:59"><decl pos:start="98:44" pos:end="98:59"><type pos:start="98:44" pos:end="98:49"><name pos:start="98:44" pos:end="98:49">String</name></type> <name pos:start="98:51" pos:end="98:59">synchName</name></decl></parameter>)</parameter_list> <block pos:start="98:62" pos:end="101:9">{<block_content pos:start="99:17" pos:end="100:51">
		<decl_stmt pos:start="99:17" pos:end="99:77"><decl pos:start="99:17" pos:end="99:76"><type pos:start="99:17" pos:end="99:36"><name pos:start="99:17" pos:end="99:36">SynchronizationPoint</name></type> <name pos:start="99:38" pos:end="99:47">synchPoint</name> <init pos:start="99:49" pos:end="99:76">= <expr pos:start="99:51" pos:end="99:76"><call pos:start="99:51" pos:end="99:76"><name pos:start="99:51" pos:end="99:65"><name pos:start="99:51" pos:end="99:61">synchPoints</name><operator pos:start="99:62" pos:end="99:62">.</operator><name pos:start="99:63" pos:end="99:65">get</name></name><argument_list pos:start="99:66" pos:end="99:76">(<argument pos:start="99:67" pos:end="99:75"><expr pos:start="99:67" pos:end="99:75"><name pos:start="99:67" pos:end="99:75">synchName</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<return pos:start="100:17" pos:end="100:51">return <expr pos:start="100:24" pos:end="100:50"><call pos:start="100:24" pos:end="100:50"><name pos:start="100:24" pos:end="100:48"><name pos:start="100:24" pos:end="100:33">synchPoint</name><operator pos:start="100:34" pos:end="100:34">.</operator><name pos:start="100:35" pos:end="100:48">countUnsynched</name></name><argument_list pos:start="100:49" pos:end="100:50">()</argument_list></call></expr>;</return>
	</block_content>}</block></function>

	<comment type="line" pos:start="103:9" pos:end="103:50">// Check if all expected UAVs have visited</comment>
	<function pos:start="104:9" pos:end="107:9"><type pos:start="104:9" pos:end="104:22"><specifier pos:start="104:9" pos:end="104:14">public</specifier> <name pos:start="104:16" pos:end="104:22">boolean</name></type> <name pos:start="104:24" pos:end="104:37">isFullySynched</name><parameter_list pos:start="104:38" pos:end="104:55">(<parameter pos:start="104:39" pos:end="104:54"><decl pos:start="104:39" pos:end="104:54"><type pos:start="104:39" pos:end="104:44"><name pos:start="104:39" pos:end="104:44">String</name></type> <name pos:start="104:46" pos:end="104:54">synchName</name></decl></parameter>)</parameter_list> <block pos:start="104:57" pos:end="107:9">{<block_content pos:start="105:17" pos:end="106:46">
		<decl_stmt pos:start="105:17" pos:end="105:77"><decl pos:start="105:17" pos:end="105:76"><type pos:start="105:17" pos:end="105:36"><name pos:start="105:17" pos:end="105:36">SynchronizationPoint</name></type> <name pos:start="105:38" pos:end="105:47">synchPoint</name> <init pos:start="105:49" pos:end="105:76">= <expr pos:start="105:51" pos:end="105:76"><call pos:start="105:51" pos:end="105:76"><name pos:start="105:51" pos:end="105:65"><name pos:start="105:51" pos:end="105:61">synchPoints</name><operator pos:start="105:62" pos:end="105:62">.</operator><name pos:start="105:63" pos:end="105:65">get</name></name><argument_list pos:start="105:66" pos:end="105:76">(<argument pos:start="105:67" pos:end="105:75"><expr pos:start="105:67" pos:end="105:75"><name pos:start="105:67" pos:end="105:75">synchName</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<return pos:start="106:17" pos:end="106:46">return <expr pos:start="106:24" pos:end="106:45"><call pos:start="106:24" pos:end="106:45"><name pos:start="106:24" pos:end="106:43"><name pos:start="106:24" pos:end="106:33">synchPoint</name><operator pos:start="106:34" pos:end="106:34">.</operator><name pos:start="106:35" pos:end="106:43">isSynched</name></name><argument_list pos:start="106:44" pos:end="106:45">()</argument_list></call></expr>;</return>
	</block_content>}</block></function>

	<comment type="line" pos:start="109:9" pos:end="109:42">// Remove UAV after it has visited</comment>
	<function pos:start="110:9" pos:end="114:9"><type pos:start="110:9" pos:end="110:19"><specifier pos:start="110:9" pos:end="110:14">public</specifier> <name pos:start="110:16" pos:end="110:19">void</name></type> <name pos:start="110:21" pos:end="110:29">removeUAV</name><parameter_list pos:start="110:30" pos:end="110:43">(<parameter pos:start="110:31" pos:end="110:42"><decl pos:start="110:31" pos:end="110:42"><type pos:start="110:31" pos:end="110:36"><name pos:start="110:31" pos:end="110:36">String</name></type> <name pos:start="110:38" pos:end="110:42">uavID</name></decl></parameter>)</parameter_list> <block pos:start="110:45" pos:end="114:9">{<block_content pos:start="111:17" pos:end="113:17">
		<for pos:start="111:17" pos:end="113:17">for <control pos:start="111:21" pos:end="111:68">(<init pos:start="111:22" pos:end="111:67"><decl pos:start="111:22" pos:end="111:67"><type pos:start="111:22" pos:end="111:41"><name pos:start="111:22" pos:end="111:41">SynchronizationPoint</name></type> <name pos:start="111:43" pos:end="111:44">sp</name> <range pos:start="111:46" pos:end="111:67">: <expr pos:start="111:48" pos:end="111:67"><call pos:start="111:48" pos:end="111:67"><name pos:start="111:48" pos:end="111:65"><name pos:start="111:48" pos:end="111:58">synchPoints</name><operator pos:start="111:59" pos:end="111:59">.</operator><name pos:start="111:60" pos:end="111:65">values</name></name><argument_list pos:start="111:66" pos:end="111:67">()</argument_list></call></expr></range></decl></init>)</control> <block pos:start="111:70" pos:end="113:17">{<block_content pos:start="112:25" pos:end="112:53">
			<expr_stmt pos:start="112:25" pos:end="112:53"><expr pos:start="112:25" pos:end="112:52"><call pos:start="112:25" pos:end="112:52"><name pos:start="112:25" pos:end="112:45"><name pos:start="112:25" pos:end="112:26">sp</name><operator pos:start="112:27" pos:end="112:27">.</operator><name pos:start="112:28" pos:end="112:45">removeCollaborator</name></name><argument_list pos:start="112:46" pos:end="112:52">(<argument pos:start="112:47" pos:end="112:51"><expr pos:start="112:47" pos:end="112:51"><name pos:start="112:47" pos:end="112:51">uavID</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		</block_content>}</block></for>
	</block_content>}</block></function>

	<function pos:start="116:9" pos:end="118:9"><type pos:start="116:9" pos:end="116:19"><specifier pos:start="116:9" pos:end="116:14">public</specifier> <name pos:start="116:16" pos:end="116:19">void</name></type> <name pos:start="116:21" pos:end="116:34">resetAltitudes</name><parameter_list pos:start="116:35" pos:end="116:36">()</parameter_list> <block pos:start="116:38" pos:end="118:9">{<block_content pos:start="117:17" pos:end="117:84">
		<expr_stmt pos:start="117:17" pos:end="117:84"><expr pos:start="117:17" pos:end="117:83"><name pos:start="117:17" pos:end="117:33">availableAltitude</name> <operator pos:start="117:35" pos:end="117:35">=</operator> <name pos:start="117:37" pos:end="117:83"><name pos:start="117:37" pos:end="117:54">DronologyConstants</name><operator pos:start="117:55" pos:end="117:55">.</operator><name pos:start="117:56" pos:end="117:83">MISSION_TAKEOFF_MIN_ALTITUDE</name></name></expr>;</expr_stmt>
	</block_content>}</block></function>

}</block></class></unit>
