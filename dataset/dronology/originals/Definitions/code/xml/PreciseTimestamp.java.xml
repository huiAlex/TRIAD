<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="Java" filename="flatCode/PreciseTimestamp.java" pos:tabs="8"><package pos:start="1:1" pos:end="1:35">package <name pos:start="1:9" pos:end="1:34"><name pos:start="1:9" pos:end="1:11">edu</name><operator pos:start="1:12" pos:end="1:12">.</operator><name pos:start="1:13" pos:end="1:14">nd</name><operator pos:start="1:15" pos:end="1:15">.</operator><name pos:start="1:16" pos:end="1:24">dronology</name><operator pos:start="1:25" pos:end="1:25">.</operator><name pos:start="1:26" pos:end="1:29">core</name><operator pos:start="1:30" pos:end="1:30">.</operator><name pos:start="1:31" pos:end="1:34">util</name></name>;</package>

<import pos:start="3:1" pos:end="3:28">import <name pos:start="3:8" pos:end="3:27"><name pos:start="3:8" pos:end="3:11">java</name><operator pos:start="3:12" pos:end="3:12">.</operator><name pos:start="3:13" pos:end="3:14">io</name><operator pos:start="3:15" pos:end="3:15">.</operator><name pos:start="3:16" pos:end="3:27">Serializable</name></name>;</import>

<class pos:start="5:1" pos:end="93:1"><specifier pos:start="5:1" pos:end="5:6">public</specifier> class <name pos:start="5:14" pos:end="5:29">PreciseTimestamp</name> <super_list pos:start="5:31" pos:end="5:53"><implements pos:start="5:31" pos:end="5:53">implements <super pos:start="5:42" pos:end="5:53"><name pos:start="5:42" pos:end="5:53">Serializable</name></super></implements></super_list> <block pos:start="5:55" pos:end="93:1">{

	<comment type="block" format="javadoc" pos:start="7:9" pos:end="9:11">/**
	 * 
	 */</comment>
	<decl_stmt pos:start="10:9" pos:end="10:74"><decl pos:start="10:9" pos:end="10:73"><type pos:start="10:9" pos:end="10:33"><specifier pos:start="10:9" pos:end="10:15">private</specifier> <specifier pos:start="10:17" pos:end="10:22">static</specifier> <specifier pos:start="10:24" pos:end="10:28">final</specifier> <name pos:start="10:30" pos:end="10:33">long</name></type> <name pos:start="10:35" pos:end="10:50">serialVersionUID</name> <init pos:start="10:52" pos:end="10:73">= <expr pos:start="10:54" pos:end="10:73"><literal type="number" pos:start="10:54" pos:end="10:73">4565636114409035692L</literal></expr></init></decl>;</decl_stmt>
	<decl_stmt pos:start="11:9" pos:end="11:30"><decl pos:start="11:9" pos:end="11:29"><type pos:start="11:9" pos:end="11:20"><specifier pos:start="11:9" pos:end="11:15">private</specifier> <name pos:start="11:17" pos:end="11:20">long</name></type> <name pos:start="11:22" pos:end="11:29">nanotime</name></decl>;</decl_stmt>
	<decl_stmt pos:start="12:9" pos:end="12:31"><decl pos:start="12:9" pos:end="12:30"><type pos:start="12:9" pos:end="12:20"><specifier pos:start="12:9" pos:end="12:15">private</specifier> <name pos:start="12:17" pos:end="12:20">long</name></type> <name pos:start="12:22" pos:end="12:30">timestamp</name></decl>;</decl_stmt>
	<decl_stmt pos:start="13:9" pos:end="13:34"><decl pos:start="13:9" pos:end="13:33"><type pos:start="13:9" pos:end="13:23"><specifier pos:start="13:9" pos:end="13:15">private</specifier> <name pos:start="13:17" pos:end="13:23">boolean</name></type> <name pos:start="13:25" pos:end="13:33">isPrecise</name></decl>;</decl_stmt>
	<decl_stmt pos:start="14:9" pos:end="14:85"><decl pos:start="14:9" pos:end="14:84"><type pos:start="14:9" pos:end="14:25"><specifier pos:start="14:9" pos:end="14:14">static</specifier> <specifier pos:start="14:16" pos:end="14:20">final</specifier> <name pos:start="14:22" pos:end="14:25">long</name></type> <name pos:start="14:27" pos:end="14:62">NUM_100NS_INTERVALS_SINCE_UUID_EPOCH</name> <init pos:start="14:64" pos:end="14:84">= <expr pos:start="14:66" pos:end="14:84"><literal type="number" pos:start="14:66" pos:end="14:84">0x01b21dd213814000L</literal></expr></init></decl>;</decl_stmt>

	<constructor pos:start="16:9" pos:end="20:9"><specifier pos:start="16:9" pos:end="16:14">public</specifier> <name pos:start="16:16" pos:end="16:31">PreciseTimestamp</name><parameter_list pos:start="16:32" pos:end="16:66">(<parameter pos:start="16:33" pos:end="16:46"><decl pos:start="16:33" pos:end="16:46"><type pos:start="16:33" pos:end="16:46"><name pos:start="16:33" pos:end="16:36">long</name></type> <name pos:start="16:38" pos:end="16:46">timestamp</name></decl></parameter>, <parameter pos:start="16:49" pos:end="16:65"><decl pos:start="16:49" pos:end="16:65"><type pos:start="16:49" pos:end="16:65"><name pos:start="16:49" pos:end="16:55">boolean</name></type> <name pos:start="16:57" pos:end="16:65">isPrecise</name></decl></parameter>)</parameter_list> <block pos:start="16:68" pos:end="20:9">{<block_content pos:start="17:17" pos:end="19:50">
		<expr_stmt pos:start="17:17" pos:end="17:43"><expr pos:start="17:17" pos:end="17:42"><name pos:start="17:17" pos:end="17:30"><name pos:start="17:17" pos:end="17:20">this</name><operator pos:start="17:21" pos:end="17:21">.</operator><name pos:start="17:22" pos:end="17:30">timestamp</name></name> <operator pos:start="17:32" pos:end="17:32">=</operator> <name pos:start="17:34" pos:end="17:42">timestamp</name></expr>;</expr_stmt>
		<expr_stmt pos:start="18:17" pos:end="18:43"><expr pos:start="18:17" pos:end="18:42"><name pos:start="18:17" pos:end="18:30"><name pos:start="18:17" pos:end="18:20">this</name><operator pos:start="18:21" pos:end="18:21">.</operator><name pos:start="18:22" pos:end="18:30">isPrecise</name></name> <operator pos:start="18:32" pos:end="18:32">=</operator> <name pos:start="18:34" pos:end="18:42">isPrecise</name></expr>;</expr_stmt>
		<expr_stmt pos:start="19:17" pos:end="19:50"><expr pos:start="19:17" pos:end="19:49"><name pos:start="19:17" pos:end="19:29"><name pos:start="19:17" pos:end="19:20">this</name><operator pos:start="19:21" pos:end="19:21">.</operator><name pos:start="19:22" pos:end="19:29">nanotime</name></name> <operator pos:start="19:31" pos:end="19:31">=</operator> <call pos:start="19:33" pos:end="19:49"><name pos:start="19:33" pos:end="19:47"><name pos:start="19:33" pos:end="19:38">System</name><operator pos:start="19:39" pos:end="19:39">.</operator><name pos:start="19:40" pos:end="19:47">nanoTime</name></name><argument_list pos:start="19:48" pos:end="19:49">()</argument_list></call></expr>;</expr_stmt>
	</block_content>}</block></constructor>

	<function pos:start="22:9" pos:end="24:9"><type pos:start="22:9" pos:end="22:19"><specifier pos:start="22:9" pos:end="22:14">public</specifier> <name pos:start="22:16" pos:end="22:19">long</name></type> <name pos:start="22:21" pos:end="22:31">getNanotime</name><parameter_list pos:start="22:32" pos:end="22:33">()</parameter_list> <block pos:start="22:35" pos:end="24:9">{<block_content pos:start="23:17" pos:end="23:32">
		<return pos:start="23:17" pos:end="23:32">return <expr pos:start="23:24" pos:end="23:31"><name pos:start="23:24" pos:end="23:31">nanotime</name></expr>;</return>
	</block_content>}</block></function>

	<function pos:start="26:9" pos:end="28:9"><type pos:start="26:9" pos:end="26:19"><specifier pos:start="26:9" pos:end="26:14">public</specifier> <name pos:start="26:16" pos:end="26:19">long</name></type> <name pos:start="26:21" pos:end="26:32">getTimestamp</name><parameter_list pos:start="26:33" pos:end="26:34">()</parameter_list> <block pos:start="26:36" pos:end="28:9">{<block_content pos:start="27:17" pos:end="27:33">
		<return pos:start="27:17" pos:end="27:33">return <expr pos:start="27:24" pos:end="27:32"><name pos:start="27:24" pos:end="27:32">timestamp</name></expr>;</return>
	</block_content>}</block></function>

	<function pos:start="30:9" pos:end="36:9"><type pos:start="30:9" pos:end="30:18"><specifier pos:start="30:9" pos:end="30:14">public</specifier> <name pos:start="30:16" pos:end="30:18">int</name></type> <name pos:start="30:20" pos:end="30:28">compareTo</name><parameter_list pos:start="30:29" pos:end="30:51">(<parameter pos:start="30:30" pos:end="30:50"><decl pos:start="30:30" pos:end="30:50"><type pos:start="30:30" pos:end="30:45"><name pos:start="30:30" pos:end="30:45">PreciseTimestamp</name></type> <name pos:start="30:47" pos:end="30:50">that</name></decl></parameter>)</parameter_list> <block pos:start="30:53" pos:end="36:9">{<block_content pos:start="31:17" pos:end="35:30">
		<decl_stmt pos:start="31:17" pos:end="31:84"><decl pos:start="31:17" pos:end="31:83"><type pos:start="31:17" pos:end="31:19"><name pos:start="31:17" pos:end="31:19">int</name></type> <name pos:start="31:21" pos:end="31:26">result</name> <init pos:start="31:28" pos:end="31:83">= <expr pos:start="31:30" pos:end="31:83"><call pos:start="31:30" pos:end="31:83"><name pos:start="31:30" pos:end="31:41"><name pos:start="31:30" pos:end="31:33">Long</name><operator pos:start="31:34" pos:end="31:34">.</operator><name pos:start="31:35" pos:end="31:41">compare</name></name><argument_list pos:start="31:42" pos:end="31:83">(<argument pos:start="31:43" pos:end="31:61"><expr pos:start="31:43" pos:end="31:61"><call pos:start="31:43" pos:end="31:61"><name pos:start="31:43" pos:end="31:59"><name pos:start="31:43" pos:end="31:46">this</name><operator pos:start="31:47" pos:end="31:47">.</operator><name pos:start="31:48" pos:end="31:59">getTimestamp</name></name><argument_list pos:start="31:60" pos:end="31:61">()</argument_list></call></expr></argument>, <argument pos:start="31:64" pos:end="31:82"><expr pos:start="31:64" pos:end="31:82"><call pos:start="31:64" pos:end="31:82"><name pos:start="31:64" pos:end="31:80"><name pos:start="31:64" pos:end="31:67">that</name><operator pos:start="31:68" pos:end="31:68">.</operator><name pos:start="31:69" pos:end="31:80">getTimestamp</name></name><argument_list pos:start="31:81" pos:end="31:82">()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<if_stmt pos:start="32:17" pos:end="34:17"><if pos:start="32:17" pos:end="34:17">if <condition pos:start="32:20" pos:end="32:32">(<expr pos:start="32:21" pos:end="32:31"><name pos:start="32:21" pos:end="32:26">result</name> <operator pos:start="32:28" pos:end="32:29">==</operator> <literal type="number" pos:start="32:31" pos:end="32:31">0</literal></expr>)</condition> <block pos:start="32:34" pos:end="34:17">{<block_content pos:start="33:25" pos:end="33:79">
			<return pos:start="33:25" pos:end="33:79">return <expr pos:start="33:32" pos:end="33:78"><call pos:start="33:32" pos:end="33:78"><name pos:start="33:32" pos:end="33:48">compareTimeStamps</name><argument_list pos:start="33:49" pos:end="33:78">(<argument pos:start="33:50" pos:end="33:62"><expr pos:start="33:50" pos:end="33:62"><name pos:start="33:50" pos:end="33:62"><name pos:start="33:50" pos:end="33:53">this</name><operator pos:start="33:54" pos:end="33:54">.</operator><name pos:start="33:55" pos:end="33:62">nanotime</name></name></expr></argument>, <argument pos:start="33:65" pos:end="33:77"><expr pos:start="33:65" pos:end="33:77"><name pos:start="33:65" pos:end="33:77"><name pos:start="33:65" pos:end="33:68">that</name><operator pos:start="33:69" pos:end="33:69">.</operator><name pos:start="33:70" pos:end="33:77">nanotime</name></name></expr></argument>)</argument_list></call></expr>;</return>
		</block_content>}</block></if></if_stmt>
		<return pos:start="35:17" pos:end="35:30">return <expr pos:start="35:24" pos:end="35:29"><name pos:start="35:24" pos:end="35:29">result</name></expr>;</return>
	</block_content>}</block></function>

	<function pos:start="38:9" pos:end="44:9"><annotation pos:start="38:9" pos:end="38:17">@<name pos:start="38:10" pos:end="38:17">Override</name></annotation>
	<type pos:start="39:9" pos:end="39:18"><specifier pos:start="39:9" pos:end="39:14">public</specifier> <name pos:start="39:16" pos:end="39:18">int</name></type> <name pos:start="39:20" pos:end="39:27">hashCode</name><parameter_list pos:start="39:28" pos:end="39:29">()</parameter_list> <block pos:start="39:31" pos:end="44:9">{<block_content pos:start="40:17" pos:end="43:30">
		<decl_stmt pos:start="40:17" pos:end="40:37"><decl pos:start="40:17" pos:end="40:36"><type pos:start="40:17" pos:end="40:25"><specifier pos:start="40:17" pos:end="40:21">final</specifier> <name pos:start="40:23" pos:end="40:25">int</name></type> <name pos:start="40:27" pos:end="40:31">prime</name> <init pos:start="40:33" pos:end="40:36">= <expr pos:start="40:35" pos:end="40:36"><literal type="number" pos:start="40:35" pos:end="40:36">31</literal></expr></init></decl>;</decl_stmt>
		<decl_stmt pos:start="41:17" pos:end="41:31"><decl pos:start="41:17" pos:end="41:30"><type pos:start="41:17" pos:end="41:19"><name pos:start="41:17" pos:end="41:19">int</name></type> <name pos:start="41:21" pos:end="41:26">result</name> <init pos:start="41:28" pos:end="41:30">= <expr pos:start="41:30" pos:end="41:30"><literal type="number" pos:start="41:30" pos:end="41:30">1</literal></expr></init></decl>;</decl_stmt>
		<expr_stmt pos:start="42:17" pos:end="42:79"><expr pos:start="42:17" pos:end="42:78"><name pos:start="42:17" pos:end="42:22">result</name> <operator pos:start="42:24" pos:end="42:24">=</operator> <name pos:start="42:26" pos:end="42:30">prime</name> <operator pos:start="42:32" pos:end="42:32">*</operator> <name pos:start="42:34" pos:end="42:39">result</name> <operator pos:start="42:41" pos:end="42:41">+</operator> <operator pos:start="42:43" pos:end="42:43">(</operator><name pos:start="42:44" pos:end="42:46">int</name><operator pos:start="42:47" pos:end="42:47">)</operator> <operator pos:start="42:49" pos:end="42:49">(</operator><name pos:start="42:50" pos:end="42:57">nanotime</name> <operator pos:start="42:59" pos:end="42:59">^</operator> <operator pos:start="42:61" pos:end="42:61">(</operator><name pos:start="42:62" pos:end="42:69">nanotime</name> <operator pos:start="42:71" pos:end="42:73">&gt;&gt;&gt;</operator> <literal type="number" pos:start="42:75" pos:end="42:76">32</literal><operator pos:start="42:77" pos:end="42:77">)</operator><operator pos:start="42:78" pos:end="42:78">)</operator></expr>;</expr_stmt>
		<return pos:start="43:17" pos:end="43:30">return <expr pos:start="43:24" pos:end="43:29"><name pos:start="43:24" pos:end="43:29">result</name></expr>;</return>
	</block_content>}</block></function>

	<function pos:start="46:9" pos:end="65:9"><annotation pos:start="46:9" pos:end="46:17">@<name pos:start="46:10" pos:end="46:17">Override</name></annotation>
	<type pos:start="47:9" pos:end="47:22"><specifier pos:start="47:9" pos:end="47:14">public</specifier> <name pos:start="47:16" pos:end="47:22">boolean</name></type> <name pos:start="47:24" pos:end="47:29">equals</name><parameter_list pos:start="47:30" pos:end="47:41">(<parameter pos:start="47:31" pos:end="47:40"><decl pos:start="47:31" pos:end="47:40"><type pos:start="47:31" pos:end="47:36"><name pos:start="47:31" pos:end="47:36">Object</name></type> <name pos:start="47:38" pos:end="47:40">obj</name></decl></parameter>)</parameter_list> <block pos:start="47:43" pos:end="65:9">{<block_content pos:start="48:17" pos:end="64:28">
		<if_stmt pos:start="48:17" pos:end="50:17"><if pos:start="48:17" pos:end="50:17">if <condition pos:start="48:20" pos:end="48:32">(<expr pos:start="48:21" pos:end="48:31"><name pos:start="48:21" pos:end="48:24">this</name> <operator pos:start="48:26" pos:end="48:27">==</operator> <name pos:start="48:29" pos:end="48:31">obj</name></expr>)</condition> <block pos:start="48:34" pos:end="50:17">{<block_content pos:start="49:25" pos:end="49:36">
			<return pos:start="49:25" pos:end="49:36">return <expr pos:start="49:32" pos:end="49:35"><literal type="boolean" pos:start="49:32" pos:end="49:35">true</literal></expr>;</return>
		</block_content>}</block></if></if_stmt>
		<if_stmt pos:start="51:17" pos:end="53:17"><if pos:start="51:17" pos:end="53:17">if <condition pos:start="51:20" pos:end="51:32">(<expr pos:start="51:21" pos:end="51:31"><name pos:start="51:21" pos:end="51:23">obj</name> <operator pos:start="51:25" pos:end="51:26">==</operator> <literal type="null" pos:start="51:28" pos:end="51:31">null</literal></expr>)</condition> <block pos:start="51:34" pos:end="53:17">{<block_content pos:start="52:25" pos:end="52:37">
			<return pos:start="52:25" pos:end="52:37">return <expr pos:start="52:32" pos:end="52:36"><literal type="boolean" pos:start="52:32" pos:end="52:36">false</literal></expr>;</return>
		</block_content>}</block></if></if_stmt>
		<if_stmt pos:start="54:17" pos:end="56:17"><if pos:start="54:17" pos:end="56:17">if <condition pos:start="54:20" pos:end="54:49">(<expr pos:start="54:21" pos:end="54:48"><call pos:start="54:21" pos:end="54:30"><name pos:start="54:21" pos:end="54:28">getClass</name><argument_list pos:start="54:29" pos:end="54:30">()</argument_list></call> <operator pos:start="54:32" pos:end="54:33">!=</operator> <call pos:start="54:35" pos:end="54:48"><name pos:start="54:35" pos:end="54:46"><name pos:start="54:35" pos:end="54:37">obj</name><operator pos:start="54:38" pos:end="54:38">.</operator><name pos:start="54:39" pos:end="54:46">getClass</name></name><argument_list pos:start="54:47" pos:end="54:48">()</argument_list></call></expr>)</condition> <block pos:start="54:51" pos:end="56:17">{<block_content pos:start="55:25" pos:end="55:37">
			<return pos:start="55:25" pos:end="55:37">return <expr pos:start="55:32" pos:end="55:36"><literal type="boolean" pos:start="55:32" pos:end="55:36">false</literal></expr>;</return>
		</block_content>}</block></if></if_stmt>
		<decl_stmt pos:start="57:17" pos:end="57:66"><decl pos:start="57:17" pos:end="57:65"><type pos:start="57:17" pos:end="57:32"><name pos:start="57:17" pos:end="57:32">PreciseTimestamp</name></type> <name pos:start="57:34" pos:end="57:38">other</name> <init pos:start="57:40" pos:end="57:65">= <expr pos:start="57:42" pos:end="57:65"><operator pos:start="57:42" pos:end="57:42">(</operator><operator pos:start="57:43" pos:end="57:43">(</operator><name pos:start="57:44" pos:end="57:59">PreciseTimestamp</name><operator pos:start="57:60" pos:end="57:60">)</operator> <name pos:start="57:62" pos:end="57:64">obj</name><operator pos:start="57:65" pos:end="57:65">)</operator></expr></init></decl>;</decl_stmt>
		<if_stmt pos:start="58:17" pos:end="60:17"><if pos:start="58:17" pos:end="60:17">if <condition pos:start="58:20" pos:end="58:49">(<expr pos:start="58:21" pos:end="58:48"><name pos:start="58:21" pos:end="58:29">timestamp</name> <operator pos:start="58:31" pos:end="58:32">!=</operator> <name pos:start="58:34" pos:end="58:48"><name pos:start="58:34" pos:end="58:38">other</name><operator pos:start="58:39" pos:end="58:39">.</operator><name pos:start="58:40" pos:end="58:48">timestamp</name></name></expr>)</condition> <block pos:start="58:51" pos:end="60:17">{<block_content pos:start="59:25" pos:end="59:37">
			<return pos:start="59:25" pos:end="59:37">return <expr pos:start="59:32" pos:end="59:36"><literal type="boolean" pos:start="59:32" pos:end="59:36">false</literal></expr>;</return>
		</block_content>}</block></if></if_stmt>
		<if_stmt pos:start="61:17" pos:end="63:17"><if pos:start="61:17" pos:end="63:17">if <condition pos:start="61:20" pos:end="61:47">(<expr pos:start="61:21" pos:end="61:46"><name pos:start="61:21" pos:end="61:28">nanotime</name> <operator pos:start="61:30" pos:end="61:31">!=</operator> <name pos:start="61:33" pos:end="61:46"><name pos:start="61:33" pos:end="61:37">other</name><operator pos:start="61:38" pos:end="61:38">.</operator><name pos:start="61:39" pos:end="61:46">nanotime</name></name></expr>)</condition> <block pos:start="61:49" pos:end="63:17">{<block_content pos:start="62:25" pos:end="62:37">
			<return pos:start="62:25" pos:end="62:37">return <expr pos:start="62:32" pos:end="62:36"><literal type="boolean" pos:start="62:32" pos:end="62:36">false</literal></expr>;</return>
		</block_content>}</block></if></if_stmt>
		<return pos:start="64:17" pos:end="64:28">return <expr pos:start="64:24" pos:end="64:27"><literal type="boolean" pos:start="64:24" pos:end="64:27">true</literal></expr>;</return>
	</block_content>}</block></function>

	<function pos:start="67:9" pos:end="75:9"><type pos:start="67:9" pos:end="67:20"><specifier pos:start="67:9" pos:end="67:15">private</specifier>  <name pos:start="67:18" pos:end="67:20">int</name></type> <name pos:start="67:22" pos:end="67:38">compareTimeStamps</name><parameter_list pos:start="67:39" pos:end="67:61">(<parameter pos:start="67:40" pos:end="67:49"><decl pos:start="67:40" pos:end="67:49"><type pos:start="67:40" pos:end="67:49"><name pos:start="67:40" pos:end="67:43">long</name></type> <name pos:start="67:45" pos:end="67:49">start</name></decl></parameter>, <parameter pos:start="67:52" pos:end="67:60"><decl pos:start="67:52" pos:end="67:60"><type pos:start="67:52" pos:end="67:60"><name pos:start="67:52" pos:end="67:55">long</name></type> <name pos:start="67:57" pos:end="67:60">comp</name></decl></parameter>)</parameter_list> <block pos:start="67:63" pos:end="75:9">{<block_content pos:start="68:17" pos:end="74:25">
		<if_stmt pos:start="68:17" pos:end="70:17"><if pos:start="68:17" pos:end="70:17">if <condition pos:start="68:20" pos:end="68:34">(<expr pos:start="68:21" pos:end="68:33"><name pos:start="68:21" pos:end="68:25">start</name> <operator pos:start="68:27" pos:end="68:28">==</operator> <name pos:start="68:30" pos:end="68:33">comp</name></expr>)</condition> <block pos:start="68:36" pos:end="70:17">{<block_content pos:start="69:25" pos:end="69:33">
			<return pos:start="69:25" pos:end="69:33">return <expr pos:start="69:32" pos:end="69:32"><literal type="number" pos:start="69:32" pos:end="69:32">0</literal></expr>;</return>
		</block_content>}</block></if></if_stmt>
		<if_stmt pos:start="71:17" pos:end="73:17"><if pos:start="71:17" pos:end="73:17">if <condition pos:start="71:20" pos:end="71:37">(<expr pos:start="71:21" pos:end="71:36"><name pos:start="71:21" pos:end="71:24">comp</name> <operator pos:start="71:26" pos:end="71:26">-</operator> <name pos:start="71:28" pos:end="71:32">start</name> <operator pos:start="71:34" pos:end="71:34">&gt;</operator> <literal type="number" pos:start="71:36" pos:end="71:36">0</literal></expr>)</condition> <block pos:start="71:39" pos:end="73:17">{<block_content pos:start="72:25" pos:end="72:34">
			<return pos:start="72:25" pos:end="72:34">return <expr pos:start="72:32" pos:end="72:33"><operator pos:start="72:32" pos:end="72:32">-</operator><literal type="number" pos:start="72:33" pos:end="72:33">1</literal></expr>;</return>
		</block_content>}</block></if></if_stmt>
		<return pos:start="74:17" pos:end="74:25">return <expr pos:start="74:24" pos:end="74:24"><literal type="number" pos:start="74:24" pos:end="74:24">1</literal></expr>;</return>
	</block_content>}</block></function>

	<function pos:start="77:9" pos:end="80:9"><annotation pos:start="77:9" pos:end="77:17">@<name pos:start="77:10" pos:end="77:17">Override</name></annotation>
	<type pos:start="78:9" pos:end="78:21"><specifier pos:start="78:9" pos:end="78:14">public</specifier> <name pos:start="78:16" pos:end="78:21">String</name></type> <name pos:start="78:23" pos:end="78:30">toString</name><parameter_list pos:start="78:31" pos:end="78:32">()</parameter_list> <block pos:start="78:34" pos:end="80:9">{<block_content pos:start="79:17" pos:end="79:75">
		<return pos:start="79:17" pos:end="79:75">return <expr pos:start="79:24" pos:end="79:74"><literal type="string" pos:start="79:24" pos:end="79:36">"Timestamp: "</literal> <operator pos:start="79:38" pos:end="79:38">+</operator> <name pos:start="79:40" pos:end="79:48">timestamp</name> <operator pos:start="79:50" pos:end="79:50">+</operator> <literal type="string" pos:start="79:52" pos:end="79:63">" nanotime:"</literal> <operator pos:start="79:65" pos:end="79:65">+</operator> <name pos:start="79:67" pos:end="79:74">nanotime</name></expr>;</return>
	</block_content>}</block></function>

	<function pos:start="82:9" pos:end="84:9"><type pos:start="82:9" pos:end="82:51"><specifier pos:start="82:9" pos:end="82:14">public</specifier> <specifier pos:start="82:16" pos:end="82:21">static</specifier> <specifier pos:start="82:23" pos:end="82:34">synchronized</specifier> <name pos:start="82:36" pos:end="82:51">PreciseTimestamp</name></type> <name pos:start="82:53" pos:end="82:58">create</name><parameter_list pos:start="82:59" pos:end="82:74">(<parameter pos:start="82:60" pos:end="82:73"><decl pos:start="82:60" pos:end="82:73"><type pos:start="82:60" pos:end="82:63"><name pos:start="82:60" pos:end="82:63">long</name></type> <name pos:start="82:65" pos:end="82:73">timestamp</name></decl></parameter>)</parameter_list> <block pos:start="82:76" pos:end="84:9">{<block_content pos:start="83:17" pos:end="83:61">
		<return pos:start="83:17" pos:end="83:61">return <expr pos:start="83:24" pos:end="83:60"><operator pos:start="83:24" pos:end="83:26">new</operator> <call pos:start="83:28" pos:end="83:60"><name pos:start="83:28" pos:end="83:43">PreciseTimestamp</name><argument_list pos:start="83:44" pos:end="83:60">(<argument pos:start="83:45" pos:end="83:53"><expr pos:start="83:45" pos:end="83:53"><name pos:start="83:45" pos:end="83:53">timestamp</name></expr></argument>, <argument pos:start="83:56" pos:end="83:59"><expr pos:start="83:56" pos:end="83:59"><literal type="boolean" pos:start="83:56" pos:end="83:59">true</literal></expr></argument>)</argument_list></call></expr>;</return>
	</block_content>}</block></function>

	<function pos:start="86:9" pos:end="88:9"><type pos:start="86:9" pos:end="86:51"><specifier pos:start="86:9" pos:end="86:14">public</specifier> <specifier pos:start="86:16" pos:end="86:21">static</specifier> <specifier pos:start="86:23" pos:end="86:34">synchronized</specifier> <name pos:start="86:36" pos:end="86:51">PreciseTimestamp</name></type> <name pos:start="86:53" pos:end="86:58">create</name><parameter_list pos:start="86:59" pos:end="86:93">(<parameter pos:start="86:60" pos:end="86:73"><decl pos:start="86:60" pos:end="86:73"><type pos:start="86:60" pos:end="86:73"><name pos:start="86:60" pos:end="86:63">long</name></type> <name pos:start="86:65" pos:end="86:73">timestamp</name></decl></parameter>, <parameter pos:start="86:76" pos:end="86:92"><decl pos:start="86:76" pos:end="86:92"><type pos:start="86:76" pos:end="86:92"><name pos:start="86:76" pos:end="86:82">boolean</name></type> <name pos:start="86:84" pos:end="86:92">isPrecise</name></decl></parameter>)</parameter_list> <block pos:start="86:95" pos:end="88:9">{<block_content pos:start="87:17" pos:end="87:66">
		<return pos:start="87:17" pos:end="87:66">return <expr pos:start="87:24" pos:end="87:65"><operator pos:start="87:24" pos:end="87:26">new</operator> <call pos:start="87:28" pos:end="87:65"><name pos:start="87:28" pos:end="87:43">PreciseTimestamp</name><argument_list pos:start="87:44" pos:end="87:65">(<argument pos:start="87:45" pos:end="87:53"><expr pos:start="87:45" pos:end="87:53"><name pos:start="87:45" pos:end="87:53">timestamp</name></expr></argument>, <argument pos:start="87:56" pos:end="87:64"><expr pos:start="87:56" pos:end="87:64"><name pos:start="87:56" pos:end="87:64">isPrecise</name></expr></argument>)</argument_list></call></expr>;</return>
	</block_content>}</block></function>

	<function pos:start="90:9" pos:end="92:9"><type pos:start="90:9" pos:end="90:51"><specifier pos:start="90:9" pos:end="90:14">public</specifier> <specifier pos:start="90:16" pos:end="90:21">static</specifier> <specifier pos:start="90:23" pos:end="90:34">synchronized</specifier> <name pos:start="90:36" pos:end="90:51">PreciseTimestamp</name></type> <name pos:start="90:53" pos:end="90:58">create</name><parameter_list pos:start="90:59" pos:end="90:60">()</parameter_list> <block pos:start="90:62" pos:end="92:9">{<block_content pos:start="91:17" pos:end="91:78">
		<return pos:start="91:17" pos:end="91:78">return <expr pos:start="91:24" pos:end="91:77"><operator pos:start="91:24" pos:end="91:26">new</operator> <call pos:start="91:28" pos:end="91:77"><name pos:start="91:28" pos:end="91:43">PreciseTimestamp</name><argument_list pos:start="91:44" pos:end="91:77">(<argument pos:start="91:45" pos:end="91:70"><expr pos:start="91:45" pos:end="91:70"><call pos:start="91:45" pos:end="91:70"><name pos:start="91:45" pos:end="91:68"><name pos:start="91:45" pos:end="91:50">System</name><operator pos:start="91:51" pos:end="91:51">.</operator><name pos:start="91:52" pos:end="91:68">currentTimeMillis</name></name><argument_list pos:start="91:69" pos:end="91:70">()</argument_list></call></expr></argument>, <argument pos:start="91:73" pos:end="91:76"><expr pos:start="91:73" pos:end="91:76"><literal type="boolean" pos:start="91:73" pos:end="91:76">true</literal></expr></argument>)</argument_list></call></expr>;</return>
	</block_content>}</block></function>
}</block></class></unit>
