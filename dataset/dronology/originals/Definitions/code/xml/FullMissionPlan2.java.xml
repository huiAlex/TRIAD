<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="Java" filename="flatCode/FullMissionPlan2.java" pos:tabs="8"><package pos:start="1:1" pos:end="1:66">package <name pos:start="1:9" pos:end="1:65"><name pos:start="1:9" pos:end="1:11">edu</name><operator pos:start="1:12" pos:end="1:12">.</operator><name pos:start="1:13" pos:end="1:14">nd</name><operator pos:start="1:15" pos:end="1:15">.</operator><name pos:start="1:16" pos:end="1:24">dronology</name><operator pos:start="1:25" pos:end="1:25">.</operator><name pos:start="1:26" pos:end="1:33">services</name><operator pos:start="1:34" pos:end="1:34">.</operator><name pos:start="1:35" pos:end="1:44">extensions</name><operator pos:start="1:45" pos:end="1:45">.</operator><name pos:start="1:46" pos:end="1:60">missionplanning</name><operator pos:start="1:61" pos:end="1:61">.</operator><name pos:start="1:62" pos:end="1:65">plan</name></name>;</package>

<import pos:start="3:1" pos:end="3:28">import <name pos:start="3:8" pos:end="3:27"><name pos:start="3:8" pos:end="3:11">java</name><operator pos:start="3:12" pos:end="3:12">.</operator><name pos:start="3:13" pos:end="3:14">io</name><operator pos:start="3:15" pos:end="3:15">.</operator><name pos:start="3:16" pos:end="3:27">Serializable</name></name>;</import>
<import pos:start="4:1" pos:end="4:25">import <name pos:start="4:8" pos:end="4:24"><name pos:start="4:8" pos:end="4:11">java</name><operator pos:start="4:12" pos:end="4:12">.</operator><name pos:start="4:13" pos:end="4:16">util</name><operator pos:start="4:17" pos:end="4:17">.</operator><name pos:start="4:18" pos:end="4:24">HashMap</name></name>;</import>
<import pos:start="5:1" pos:end="5:21">import <name pos:start="5:8" pos:end="5:20"><name pos:start="5:8" pos:end="5:11">java</name><operator pos:start="5:12" pos:end="5:12">.</operator><name pos:start="5:13" pos:end="5:16">util</name><operator pos:start="5:17" pos:end="5:17">.</operator><name pos:start="5:18" pos:end="5:20">Map</name></name>;</import>
<import pos:start="6:1" pos:end="6:27">import <name pos:start="6:8" pos:end="6:26"><name pos:start="6:8" pos:end="6:11">java</name><operator pos:start="6:12" pos:end="6:12">.</operator><name pos:start="6:13" pos:end="6:16">util</name><operator pos:start="6:17" pos:end="6:17">.</operator><name pos:start="6:18" pos:end="6:20">Map</name><operator pos:start="6:21" pos:end="6:21">.</operator><name pos:start="6:22" pos:end="6:26">Entry</name></name>;</import>

<import pos:start="8:1" pos:end="8:48">import <name pos:start="8:8" pos:end="8:47"><name pos:start="8:8" pos:end="8:10">edu</name><operator pos:start="8:11" pos:end="8:11">.</operator><name pos:start="8:12" pos:end="8:13">nd</name><operator pos:start="8:14" pos:end="8:14">.</operator><name pos:start="8:15" pos:end="8:23">dronology</name><operator pos:start="8:24" pos:end="8:24">.</operator><name pos:start="8:25" pos:end="8:28">core</name><operator pos:start="8:29" pos:end="8:29">.</operator><name pos:start="8:30" pos:end="8:47">DronologyConstants</name></name>;</import>
<import pos:start="9:1" pos:end="9:54">import <name pos:start="9:8" pos:end="9:53"><name pos:start="9:8" pos:end="9:10">edu</name><operator pos:start="9:11" pos:end="9:11">.</operator><name pos:start="9:12" pos:end="9:13">nd</name><operator pos:start="9:14" pos:end="9:14">.</operator><name pos:start="9:15" pos:end="9:23">dronology</name><operator pos:start="9:24" pos:end="9:24">.</operator><name pos:start="9:25" pos:end="9:28">core</name><operator pos:start="9:29" pos:end="9:29">.</operator><name pos:start="9:30" pos:end="9:39">coordinate</name><operator pos:start="9:40" pos:end="9:40">.</operator><name pos:start="9:41" pos:end="9:53">LlaCoordinate</name></name>;</import>
<import pos:start="10:1" pos:end="10:47">import <name pos:start="10:8" pos:end="10:46"><name pos:start="10:8" pos:end="10:10">edu</name><operator pos:start="10:11" pos:end="10:11">.</operator><name pos:start="10:12" pos:end="10:13">nd</name><operator pos:start="10:14" pos:end="10:14">.</operator><name pos:start="10:15" pos:end="10:23">dronology</name><operator pos:start="10:24" pos:end="10:24">.</operator><name pos:start="10:25" pos:end="10:28">core</name><operator pos:start="10:29" pos:end="10:29">.</operator><name pos:start="10:30" pos:end="10:36">vehicle</name><operator pos:start="10:37" pos:end="10:37">.</operator><name pos:start="10:38" pos:end="10:46">IUAVProxy</name></name>;</import>
<import pos:start="11:1" pos:end="11:58">import <name pos:start="11:8" pos:end="11:57"><name pos:start="11:8" pos:end="11:10">edu</name><operator pos:start="11:11" pos:end="11:11">.</operator><name pos:start="11:12" pos:end="11:13">nd</name><operator pos:start="11:14" pos:end="11:14">.</operator><name pos:start="11:15" pos:end="11:23">dronology</name><operator pos:start="11:24" pos:end="11:24">.</operator><name pos:start="11:25" pos:end="11:32">services</name><operator pos:start="11:33" pos:end="11:33">.</operator><name pos:start="11:34" pos:end="11:37">core</name><operator pos:start="11:38" pos:end="11:38">.</operator><name pos:start="11:39" pos:end="11:42">info</name><operator pos:start="11:43" pos:end="11:43">.</operator><name pos:start="11:44" pos:end="11:57">UAVMappingInfo</name></name>;</import>
<import pos:start="12:1" pos:end="12:57">import <name pos:start="12:8" pos:end="12:56"><name pos:start="12:8" pos:end="12:10">edu</name><operator pos:start="12:11" pos:end="12:11">.</operator><name pos:start="12:12" pos:end="12:13">nd</name><operator pos:start="12:14" pos:end="12:14">.</operator><name pos:start="12:15" pos:end="12:23">dronology</name><operator pos:start="12:24" pos:end="12:24">.</operator><name pos:start="12:25" pos:end="12:32">services</name><operator pos:start="12:33" pos:end="12:33">.</operator><name pos:start="12:34" pos:end="12:37">core</name><operator pos:start="12:38" pos:end="12:38">.</operator><name pos:start="12:39" pos:end="12:43">items</name><operator pos:start="12:44" pos:end="12:44">.</operator><name pos:start="12:45" pos:end="12:56">IMissionPlan</name></name>;</import>
<import pos:start="13:1" pos:end="13:67">import <name pos:start="13:8" pos:end="13:66"><name pos:start="13:8" pos:end="13:10">edu</name><operator pos:start="13:11" pos:end="13:11">.</operator><name pos:start="13:12" pos:end="13:13">nd</name><operator pos:start="13:14" pos:end="13:14">.</operator><name pos:start="13:15" pos:end="13:23">dronology</name><operator pos:start="13:24" pos:end="13:24">.</operator><name pos:start="13:25" pos:end="13:32">services</name><operator pos:start="13:33" pos:end="13:33">.</operator><name pos:start="13:34" pos:end="13:37">core</name><operator pos:start="13:38" pos:end="13:38">.</operator><name pos:start="13:39" pos:end="13:43">items</name><operator pos:start="13:44" pos:end="13:44">.</operator><name pos:start="13:45" pos:end="13:66">IUAVMissionDescription</name></name>;</import>
<import pos:start="14:1" pos:end="14:60">import <name pos:start="14:8" pos:end="14:59"><name pos:start="14:8" pos:end="14:10">edu</name><operator pos:start="14:11" pos:end="14:11">.</operator><name pos:start="14:12" pos:end="14:13">nd</name><operator pos:start="14:14" pos:end="14:14">.</operator><name pos:start="14:15" pos:end="14:23">dronology</name><operator pos:start="14:24" pos:end="14:24">.</operator><name pos:start="14:25" pos:end="14:32">services</name><operator pos:start="14:33" pos:end="14:33">.</operator><name pos:start="14:34" pos:end="14:37">core</name><operator pos:start="14:38" pos:end="14:38">.</operator><name pos:start="14:39" pos:end="14:43">items</name><operator pos:start="14:44" pos:end="14:44">.</operator><name pos:start="14:45" pos:end="14:59">IUAVMissionTask</name></name>;</import>
<import pos:start="15:1" pos:end="15:69">import <name pos:start="15:8" pos:end="15:68"><name pos:start="15:8" pos:end="15:10">edu</name><operator pos:start="15:11" pos:end="15:11">.</operator><name pos:start="15:12" pos:end="15:13">nd</name><operator pos:start="15:14" pos:end="15:14">.</operator><name pos:start="15:15" pos:end="15:23">dronology</name><operator pos:start="15:24" pos:end="15:24">.</operator><name pos:start="15:25" pos:end="15:32">services</name><operator pos:start="15:33" pos:end="15:33">.</operator><name pos:start="15:34" pos:end="15:37">core</name><operator pos:start="15:38" pos:end="15:38">.</operator><name pos:start="15:39" pos:end="15:42">util</name><operator pos:start="15:43" pos:end="15:43">.</operator><name pos:start="15:44" pos:end="15:68">DronologyServiceException</name></name>;</import>
<import pos:start="16:1" pos:end="16:86">import <name pos:start="16:8" pos:end="16:85"><name pos:start="16:8" pos:end="16:10">edu</name><operator pos:start="16:11" pos:end="16:11">.</operator><name pos:start="16:12" pos:end="16:13">nd</name><operator pos:start="16:14" pos:end="16:14">.</operator><name pos:start="16:15" pos:end="16:23">dronology</name><operator pos:start="16:24" pos:end="16:24">.</operator><name pos:start="16:25" pos:end="16:32">services</name><operator pos:start="16:33" pos:end="16:33">.</operator><name pos:start="16:34" pos:end="16:43">extensions</name><operator pos:start="16:44" pos:end="16:44">.</operator><name pos:start="16:45" pos:end="16:59">missionplanning</name><operator pos:start="16:60" pos:end="16:60">.</operator><name pos:start="16:61" pos:end="16:85">MissionExecutionException</name></name>;</import>
<import pos:start="17:1" pos:end="17:88">import <name pos:start="17:8" pos:end="17:87"><name pos:start="17:8" pos:end="17:10">edu</name><operator pos:start="17:11" pos:end="17:11">.</operator><name pos:start="17:12" pos:end="17:13">nd</name><operator pos:start="17:14" pos:end="17:14">.</operator><name pos:start="17:15" pos:end="17:23">dronology</name><operator pos:start="17:24" pos:end="17:24">.</operator><name pos:start="17:25" pos:end="17:32">services</name><operator pos:start="17:33" pos:end="17:33">.</operator><name pos:start="17:34" pos:end="17:43">extensions</name><operator pos:start="17:44" pos:end="17:44">.</operator><name pos:start="17:45" pos:end="17:59">missionplanning</name><operator pos:start="17:60" pos:end="17:60">.</operator><name pos:start="17:61" pos:end="17:64">sync</name><operator pos:start="17:65" pos:end="17:65">.</operator><name pos:start="17:66" pos:end="17:87">SynchronizationManager</name></name>;</import>
<import pos:start="18:1" pos:end="18:78">import <name pos:start="18:8" pos:end="18:77"><name pos:start="18:8" pos:end="18:10">edu</name><operator pos:start="18:11" pos:end="18:11">.</operator><name pos:start="18:12" pos:end="18:13">nd</name><operator pos:start="18:14" pos:end="18:14">.</operator><name pos:start="18:15" pos:end="18:23">dronology</name><operator pos:start="18:24" pos:end="18:24">.</operator><name pos:start="18:25" pos:end="18:32">services</name><operator pos:start="18:33" pos:end="18:33">.</operator><name pos:start="18:34" pos:end="18:43">extensions</name><operator pos:start="18:44" pos:end="18:44">.</operator><name pos:start="18:45" pos:end="18:59">missionplanning</name><operator pos:start="18:60" pos:end="18:60">.</operator><name pos:start="18:61" pos:end="18:65">tasks</name><operator pos:start="18:66" pos:end="18:66">.</operator><name pos:start="18:67" pos:end="18:77">TaskFactory</name></name>;</import>
<import pos:start="19:1" pos:end="19:72">import <name pos:start="19:8" pos:end="19:71"><name pos:start="19:8" pos:end="19:10">edu</name><operator pos:start="19:11" pos:end="19:11">.</operator><name pos:start="19:12" pos:end="19:13">nd</name><operator pos:start="19:14" pos:end="19:14">.</operator><name pos:start="19:15" pos:end="19:23">dronology</name><operator pos:start="19:24" pos:end="19:24">.</operator><name pos:start="19:25" pos:end="19:32">services</name><operator pos:start="19:33" pos:end="19:33">.</operator><name pos:start="19:34" pos:end="19:42">instances</name><operator pos:start="19:43" pos:end="19:43">.</operator><name pos:start="19:44" pos:end="19:53">dronesetup</name><operator pos:start="19:54" pos:end="19:54">.</operator><name pos:start="19:55" pos:end="19:71">DroneSetupService</name></name>;</import>
<import pos:start="20:1" pos:end="20:30">import <name pos:start="20:8" pos:end="20:29"><name pos:start="20:8" pos:end="20:10">net</name><operator pos:start="20:11" pos:end="20:11">.</operator><name pos:start="20:12" pos:end="20:13">mv</name><operator pos:start="20:14" pos:end="20:14">.</operator><name pos:start="20:15" pos:end="20:21">logging</name><operator pos:start="20:22" pos:end="20:22">.</operator><name pos:start="20:23" pos:end="20:29">ILogger</name></name>;</import>
<import pos:start="21:1" pos:end="21:37">import <name pos:start="21:8" pos:end="21:36"><name pos:start="21:8" pos:end="21:10">net</name><operator pos:start="21:11" pos:end="21:11">.</operator><name pos:start="21:12" pos:end="21:13">mv</name><operator pos:start="21:14" pos:end="21:14">.</operator><name pos:start="21:15" pos:end="21:21">logging</name><operator pos:start="21:22" pos:end="21:22">.</operator><name pos:start="21:23" pos:end="21:36">LoggerProvider</name></name>;</import>

<comment type="block" format="javadoc" pos:start="23:1" pos:end="34:3">/**
 * 
 * Manages a mission plan. Each Mission plan has one
 * &lt;code&gt;FullMissionPlan&lt;/code&gt; instance, and one &lt;code&gt;UAVMissionPlan&lt;/code&gt;
 * instance for each UAV in the Mission plan. &lt;br&gt;
 * Each of the UAV's individual mission plans are composed of MissionTasks. &lt;br&gt;
 * Once the entire mission plan is loaded, a thread is created which checks each
 * of the individual UAVMissionPlans to determine if they can start the next
 * task.
 * 
 * @author Jane Cleland-Huang
 */</comment>
<class pos:start="35:1" pos:end="224:1"><specifier pos:start="35:1" pos:end="35:6">public</specifier> class <name pos:start="35:14" pos:end="35:29">FullMissionPlan2</name> <super_list pos:start="35:31" pos:end="35:64"><implements pos:start="35:31" pos:end="35:64">implements <super pos:start="35:42" pos:end="35:64"><name pos:start="35:42" pos:end="35:64">IExecuteableMissionPlan</name></super></implements></super_list> <block pos:start="35:66" pos:end="224:1">{

	<decl_stmt pos:start="37:9" pos:end="37:95"><decl pos:start="37:9" pos:end="37:94"><type pos:start="37:9" pos:end="37:36"><specifier pos:start="37:9" pos:end="37:15">private</specifier> <specifier pos:start="37:17" pos:end="37:22">static</specifier> <specifier pos:start="37:24" pos:end="37:28">final</specifier> <name pos:start="37:30" pos:end="37:36">ILogger</name></type> <name pos:start="37:38" pos:end="37:43">LOGGER</name> <init pos:start="37:45" pos:end="37:94">= <expr pos:start="37:47" pos:end="37:94"><call pos:start="37:47" pos:end="37:94"><name pos:start="37:47" pos:end="37:70"><name pos:start="37:47" pos:end="37:60">LoggerProvider</name><operator pos:start="37:61" pos:end="37:61">.</operator><name pos:start="37:62" pos:end="37:70">getLogger</name></name><argument_list pos:start="37:71" pos:end="37:94">(<argument pos:start="37:72" pos:end="37:93"><expr pos:start="37:72" pos:end="37:93"><name pos:start="37:72" pos:end="37:93"><name pos:start="37:72" pos:end="37:87">FullMissionPlan2</name><operator pos:start="37:88" pos:end="37:88">.</operator><name pos:start="37:89" pos:end="37:93">class</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

	<decl_stmt pos:start="39:9" pos:end="39:60"><decl pos:start="39:9" pos:end="39:59"><type pos:start="39:9" pos:end="39:43"><specifier pos:start="39:9" pos:end="39:15">private</specifier> <name pos:start="39:17" pos:end="39:43"><name pos:start="39:17" pos:end="39:19">Map</name><argument_list type="generic" pos:start="39:20" pos:end="39:43">&lt;<argument pos:start="39:21" pos:end="39:26"><name pos:start="39:21" pos:end="39:26">String</name></argument>, <argument pos:start="39:29" pos:end="39:42"><name pos:start="39:29" pos:end="39:42">UAVMissionPlan</name></argument>&gt;</argument_list></name></type> <name pos:start="39:45" pos:end="39:59">uavMissionPlans</name></decl>;</decl_stmt>
	<decl_stmt pos:start="40:9" pos:end="40:53"><decl pos:start="40:9" pos:end="40:52"><type pos:start="40:9" pos:end="40:38"><specifier pos:start="40:9" pos:end="40:15">private</specifier> <name pos:start="40:17" pos:end="40:38">SynchronizationManager</name></type> <name pos:start="40:40" pos:end="40:52">synchPointMgr</name></decl>;</decl_stmt>

	<decl_stmt pos:start="42:9" pos:end="42:42"><decl pos:start="42:9" pos:end="42:41"><type pos:start="42:9" pos:end="42:28"><specifier pos:start="42:9" pos:end="42:15">private</specifier> <name pos:start="42:17" pos:end="42:28">IMissionPlan</name></type> <name pos:start="42:30" pos:end="42:41">instructions</name></decl>;</decl_stmt>

	<decl_stmt pos:start="44:9" pos:end="44:39"><decl pos:start="44:9" pos:end="44:38"><type pos:start="44:9" pos:end="44:30"><specifier pos:start="44:9" pos:end="44:15">private</specifier> <name pos:start="44:17" pos:end="44:30">UAVMappingInfo</name></type> <name pos:start="44:32" pos:end="44:38">mapping</name></decl>;</decl_stmt>

	<comment type="block" format="javadoc" pos:start="46:9" pos:end="53:11">/**
	 * Constructs the CoordinatedMission instance. A mission consists of one or more
	 * UAVs, each of which has a set of assigned tasks and synchronization points.
	 * 
	 * @param instructions
	 * 
	 * @param mission
	 */</comment>
	<constructor pos:start="54:9" pos:end="59:9"><name pos:start="54:9" pos:end="54:24">FullMissionPlan2</name><parameter_list pos:start="54:25" pos:end="54:51">(<parameter pos:start="54:26" pos:end="54:50"><decl pos:start="54:26" pos:end="54:50"><type pos:start="54:26" pos:end="54:37"><name pos:start="54:26" pos:end="54:37">IMissionPlan</name></type> <name pos:start="54:39" pos:end="54:50">instructions</name></decl></parameter>)</parameter_list> <block pos:start="54:53" pos:end="59:9">{<block_content pos:start="55:17" pos:end="57:69">
		<expr_stmt pos:start="55:17" pos:end="55:49"><expr pos:start="55:17" pos:end="55:48"><name pos:start="55:17" pos:end="55:33"><name pos:start="55:17" pos:end="55:20">this</name><operator pos:start="55:21" pos:end="55:21">.</operator><name pos:start="55:22" pos:end="55:33">instructions</name></name> <operator pos:start="55:35" pos:end="55:35">=</operator> <name pos:start="55:37" pos:end="55:48">instructions</name></expr>;</expr_stmt>
		<expr_stmt pos:start="56:17" pos:end="56:50"><expr pos:start="56:17" pos:end="56:49"><name pos:start="56:17" pos:end="56:31">uavMissionPlans</name> <operator pos:start="56:33" pos:end="56:33">=</operator> <operator pos:start="56:35" pos:end="56:37">new</operator> <call pos:start="56:39" pos:end="56:49"><name pos:start="56:39" pos:end="56:47"><name pos:start="56:39" pos:end="56:45">HashMap</name><argument_list type="generic" pos:start="56:46" pos:end="56:47">&lt;&gt;</argument_list></name><argument_list pos:start="56:48" pos:end="56:49">()</argument_list></call></expr>;</expr_stmt>
		<expr_stmt pos:start="57:17" pos:end="57:69"><expr pos:start="57:17" pos:end="57:68"><name pos:start="57:17" pos:end="57:29">synchPointMgr</name> <operator pos:start="57:31" pos:end="57:31">=</operator> <call pos:start="57:33" pos:end="57:68"><name pos:start="57:33" pos:end="57:66"><name pos:start="57:33" pos:end="57:54">SynchronizationManager</name><operator pos:start="57:55" pos:end="57:55">.</operator><name pos:start="57:56" pos:end="57:66">getInstance</name></name><argument_list pos:start="57:67" pos:end="57:68">()</argument_list></call></expr>;</expr_stmt>

	</block_content>}</block></constructor>

	<comment type="block" format="javadoc" pos:start="61:9" pos:end="70:11">/**
	 * Adds an additional UAV to the mission plan. Creates the
	 * &lt;code&gt;UAVMissionTasks&lt;/code&gt; instance and passes it a reference to the
	 * &lt;code&gt;synchPointMgr&lt;/code&gt;
	 * 
	 * @param uavID
	 *            the ID of the UAV
	 * @return
	 * @throws MissionExecutionException
	 */</comment>
	<function pos:start="71:9" pos:end="79:9"><type pos:start="71:9" pos:end="71:29"><specifier pos:start="71:9" pos:end="71:14">public</specifier> <name pos:start="71:16" pos:end="71:29">UAVMissionPlan</name></type> <name pos:start="71:31" pos:end="71:36">addUAV</name><parameter_list pos:start="71:37" pos:end="71:50">(<parameter pos:start="71:38" pos:end="71:49"><decl pos:start="71:38" pos:end="71:49"><type pos:start="71:38" pos:end="71:43"><name pos:start="71:38" pos:end="71:43">String</name></type> <name pos:start="71:45" pos:end="71:49">uavID</name></decl></parameter>)</parameter_list> <throws pos:start="71:52" pos:end="71:83">throws <argument pos:start="71:59" pos:end="71:83"><expr pos:start="71:59" pos:end="71:83"><name pos:start="71:59" pos:end="71:83">MissionExecutionException</name></expr></argument></throws> <block pos:start="71:85" pos:end="79:9">{<block_content pos:start="72:17" pos:end="78:28">
		<expr_stmt pos:start="72:17" pos:end="72:52"><expr pos:start="72:17" pos:end="72:51"><call pos:start="72:17" pos:end="72:51"><name pos:start="72:17" pos:end="72:27"><name pos:start="72:17" pos:end="72:22">LOGGER</name><operator pos:start="72:23" pos:end="72:23">.</operator><name pos:start="72:24" pos:end="72:27">info</name></name><argument_list pos:start="72:28" pos:end="72:51">(<argument pos:start="72:29" pos:end="72:50"><expr pos:start="72:29" pos:end="72:50"><literal type="string" pos:start="72:29" pos:end="72:42">"Adding UAV: "</literal> <operator pos:start="72:44" pos:end="72:44">+</operator> <name pos:start="72:46" pos:end="72:50">uavID</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<decl_stmt pos:start="73:17" pos:end="73:79"><decl pos:start="73:17" pos:end="73:78"><type pos:start="73:17" pos:end="73:30"><name pos:start="73:17" pos:end="73:30">UAVMissionPlan</name></type> <name pos:start="73:32" pos:end="73:35">plan</name> <init pos:start="73:37" pos:end="73:78">= <expr pos:start="73:39" pos:end="73:78"><operator pos:start="73:39" pos:end="73:41">new</operator> <call pos:start="73:43" pos:end="73:78"><name pos:start="73:43" pos:end="73:56">UAVMissionPlan</name><argument_list pos:start="73:57" pos:end="73:78">(<argument pos:start="73:58" pos:end="73:62"><expr pos:start="73:58" pos:end="73:62"><name pos:start="73:58" pos:end="73:62">uavID</name></expr></argument>, <argument pos:start="73:65" pos:end="73:77"><expr pos:start="73:65" pos:end="73:77"><name pos:start="73:65" pos:end="73:77">synchPointMgr</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<if_stmt pos:start="74:17" pos:end="76:17"><if pos:start="74:17" pos:end="76:17">if <condition pos:start="74:20" pos:end="74:55">(<expr pos:start="74:21" pos:end="74:54"><call pos:start="74:21" pos:end="74:54"><name pos:start="74:21" pos:end="74:47"><name pos:start="74:21" pos:end="74:35">uavMissionPlans</name><operator pos:start="74:36" pos:end="74:36">.</operator><name pos:start="74:37" pos:end="74:47">containsKey</name></name><argument_list pos:start="74:48" pos:end="74:54">(<argument pos:start="74:49" pos:end="74:53"><expr pos:start="74:49" pos:end="74:53"><name pos:start="74:49" pos:end="74:53">uavID</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="74:57" pos:end="76:17">{<block_content pos:start="75:25" pos:end="75:116">
			<throw pos:start="75:25" pos:end="75:116">throw <expr pos:start="75:31" pos:end="75:115"><operator pos:start="75:31" pos:end="75:33">new</operator> <call pos:start="75:35" pos:end="75:115"><name pos:start="75:35" pos:end="75:59">MissionExecutionException</name><argument_list pos:start="75:60" pos:end="75:115">(<argument pos:start="75:61" pos:end="75:114"><expr pos:start="75:61" pos:end="75:114"><literal type="string" pos:start="75:61" pos:end="75:84">"Mission Plan for UAV '"</literal> <operator pos:start="75:86" pos:end="75:86">+</operator> <name pos:start="75:88" pos:end="75:92">uavID</name> <operator pos:start="75:94" pos:end="75:94">+</operator> <literal type="string" pos:start="75:96" pos:end="75:114">"' already defined"</literal></expr></argument>)</argument_list></call></expr>;</throw>
		</block_content>}</block></if></if_stmt>
		<expr_stmt pos:start="77:17" pos:end="77:49"><expr pos:start="77:17" pos:end="77:48"><call pos:start="77:17" pos:end="77:48"><name pos:start="77:17" pos:end="77:35"><name pos:start="77:17" pos:end="77:31">uavMissionPlans</name><operator pos:start="77:32" pos:end="77:32">.</operator><name pos:start="77:33" pos:end="77:35">put</name></name><argument_list pos:start="77:36" pos:end="77:48">(<argument pos:start="77:37" pos:end="77:41"><expr pos:start="77:37" pos:end="77:41"><name pos:start="77:37" pos:end="77:41">uavID</name></expr></argument>, <argument pos:start="77:44" pos:end="77:47"><expr pos:start="77:44" pos:end="77:47"><name pos:start="77:44" pos:end="77:47">plan</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<return pos:start="78:17" pos:end="78:28">return <expr pos:start="78:24" pos:end="78:27"><name pos:start="78:24" pos:end="78:27">plan</name></expr>;</return>
	</block_content>}</block></function>

	<function pos:start="81:9" pos:end="83:9"><type pos:start="81:9" pos:end="81:19"><specifier pos:start="81:9" pos:end="81:14">public</specifier> <name pos:start="81:16" pos:end="81:19">void</name></type> <name pos:start="81:21" pos:end="81:29">removeUAV</name><parameter_list pos:start="81:30" pos:end="81:43">(<parameter pos:start="81:31" pos:end="81:42"><decl pos:start="81:31" pos:end="81:42"><type pos:start="81:31" pos:end="81:36"><name pos:start="81:31" pos:end="81:36">String</name></type> <name pos:start="81:38" pos:end="81:42">uavID</name></decl></parameter>)</parameter_list> <block pos:start="81:45" pos:end="83:9">{<block_content pos:start="82:17" pos:end="82:46">
		<expr_stmt pos:start="82:17" pos:end="82:46"><expr pos:start="82:17" pos:end="82:45"><call pos:start="82:17" pos:end="82:45"><name pos:start="82:17" pos:end="82:38"><name pos:start="82:17" pos:end="82:31">uavMissionPlans</name><operator pos:start="82:32" pos:end="82:32">.</operator><name pos:start="82:33" pos:end="82:38">remove</name></name><argument_list pos:start="82:39" pos:end="82:45">(<argument pos:start="82:40" pos:end="82:44"><expr pos:start="82:40" pos:end="82:44"><name pos:start="82:40" pos:end="82:44">uavID</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	</block_content>}</block></function>

	<comment type="block" format="javadoc" pos:start="85:9" pos:end="96:11">/**
	 * Assigns a task to a specific UAV
	 * 
	 * @param uavID
	 *            UAV Identifier
	 * @param task
	 *            Task to perform (e.g., Route, Waypoint, Synchronize,
	 *            FlightPattern)
	 * @param taskID
	 *            Task specifics (e.g., specific waypoint, route name etc)
	 * @throws MissionExecutionException
	 */</comment>
	<function pos:start="97:9" pos:end="107:9"><type pos:start="97:9" pos:end="97:19"><specifier pos:start="97:9" pos:end="97:14">public</specifier> <name pos:start="97:16" pos:end="97:19">void</name></type> <name pos:start="97:21" pos:end="97:27">addTask</name><parameter_list pos:start="97:28" pos:end="97:103">(<parameter pos:start="97:29" pos:end="97:40"><decl pos:start="97:29" pos:end="97:40"><type pos:start="97:29" pos:end="97:40"><name pos:start="97:29" pos:end="97:34">String</name></type> <name pos:start="97:36" pos:end="97:40">uavID</name></decl></parameter>, <parameter pos:start="97:43" pos:end="97:53"><decl pos:start="97:43" pos:end="97:53"><type pos:start="97:43" pos:end="97:53"><name pos:start="97:43" pos:end="97:48">String</name></type> <name pos:start="97:50" pos:end="97:53">task</name></decl></parameter>, <parameter pos:start="97:56" pos:end="97:68"><decl pos:start="97:56" pos:end="97:68"><type pos:start="97:56" pos:end="97:68"><name pos:start="97:56" pos:end="97:61">String</name></type> <name pos:start="97:63" pos:end="97:68">taskID</name></decl></parameter>, <parameter pos:start="97:71" pos:end="97:102"><decl pos:start="97:71" pos:end="97:102"><type pos:start="97:71" pos:end="97:102"><name pos:start="97:71" pos:end="97:95"><name pos:start="97:71" pos:end="97:73">Map</name><argument_list type="generic" pos:start="97:74" pos:end="97:95">&lt;<argument pos:start="97:75" pos:end="97:80"><name pos:start="97:75" pos:end="97:80">String</name></argument>, <argument pos:start="97:83" pos:end="97:94"><name pos:start="97:83" pos:end="97:94">Serializable</name></argument>&gt;</argument_list></name></type> <name pos:start="97:97" pos:end="97:102">params</name></decl></parameter>)</parameter_list>
			<throws pos:start="98:25" pos:end="98:56">throws <argument pos:start="98:32" pos:end="98:56"><expr pos:start="98:32" pos:end="98:56"><name pos:start="98:32" pos:end="98:56">MissionExecutionException</name></expr></argument></throws> <block pos:start="98:58" pos:end="107:9">{<block_content pos:start="99:17" pos:end="106:101">
		<expr_stmt pos:start="99:17" pos:end="99:96"><expr pos:start="99:17" pos:end="99:95"><call pos:start="99:17" pos:end="99:95"><name pos:start="99:17" pos:end="99:27"><name pos:start="99:17" pos:end="99:22">LOGGER</name><operator pos:start="99:23" pos:end="99:23">.</operator><name pos:start="99:24" pos:end="99:27">info</name></name><argument_list pos:start="99:28" pos:end="99:95">(<argument pos:start="99:29" pos:end="99:94"><expr pos:start="99:29" pos:end="99:94"><literal type="string" pos:start="99:29" pos:end="99:51">"Adding Task to uav ':"</literal> <operator pos:start="99:53" pos:end="99:53">+</operator> <name pos:start="99:55" pos:end="99:59">uavID</name> <operator pos:start="99:61" pos:end="99:61">+</operator> <literal type="string" pos:start="99:63" pos:end="99:69">"' -- "</literal> <operator pos:start="99:71" pos:end="99:71">+</operator> <name pos:start="99:73" pos:end="99:76">task</name> <operator pos:start="99:78" pos:end="99:78">+</operator> <literal type="string" pos:start="99:80" pos:end="99:85">" -- "</literal> <operator pos:start="99:87" pos:end="99:87">+</operator> <name pos:start="99:89" pos:end="99:94">taskID</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<for pos:start="100:17" pos:end="105:17">for <control pos:start="100:21" pos:end="100:68">(<init pos:start="100:22" pos:end="100:67"><decl pos:start="100:22" pos:end="100:67"><type pos:start="100:22" pos:end="100:35"><name pos:start="100:22" pos:end="100:35">UAVMissionPlan</name></type> <name pos:start="100:37" pos:end="100:40">plan</name> <range pos:start="100:42" pos:end="100:67">: <expr pos:start="100:44" pos:end="100:67"><call pos:start="100:44" pos:end="100:67"><name pos:start="100:44" pos:end="100:65"><name pos:start="100:44" pos:end="100:58">uavMissionPlans</name><operator pos:start="100:59" pos:end="100:59">.</operator><name pos:start="100:60" pos:end="100:65">values</name></name><argument_list pos:start="100:66" pos:end="100:67">()</argument_list></call></expr></range></decl></init>)</control> <block pos:start="100:70" pos:end="105:17">{<block_content pos:start="101:25" pos:end="104:25">
			<if_stmt pos:start="101:25" pos:end="104:25"><if pos:start="101:25" pos:end="104:25">if <condition pos:start="101:28" pos:end="101:58">(<expr pos:start="101:29" pos:end="101:57"><call pos:start="101:29" pos:end="101:43"><name pos:start="101:29" pos:end="101:41"><name pos:start="101:29" pos:end="101:32">plan</name><operator pos:start="101:33" pos:end="101:33">.</operator><name pos:start="101:34" pos:end="101:41">getUavID</name></name><argument_list pos:start="101:42" pos:end="101:43">()</argument_list></call><operator pos:start="101:44" pos:end="101:44">.</operator><call pos:start="101:45" pos:end="101:57"><name pos:start="101:45" pos:end="101:50">equals</name><argument_list pos:start="101:51" pos:end="101:57">(<argument pos:start="101:52" pos:end="101:56"><expr pos:start="101:52" pos:end="101:56"><name pos:start="101:52" pos:end="101:56">uavID</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="101:60" pos:end="104:25">{<block_content pos:start="102:33" pos:end="103:39">
				<expr_stmt pos:start="102:33" pos:end="102:110"><expr pos:start="102:33" pos:end="102:109"><call pos:start="102:33" pos:end="102:109"><name pos:start="102:33" pos:end="102:44"><name pos:start="102:33" pos:end="102:36">plan</name><operator pos:start="102:37" pos:end="102:37">.</operator><name pos:start="102:38" pos:end="102:44">addTask</name></name><argument_list pos:start="102:45" pos:end="102:109">(<argument pos:start="102:46" pos:end="102:93"><expr pos:start="102:46" pos:end="102:93"><call pos:start="102:46" pos:end="102:93"><name pos:start="102:46" pos:end="102:64"><name pos:start="102:46" pos:end="102:56">TaskFactory</name><operator pos:start="102:57" pos:end="102:57">.</operator><name pos:start="102:58" pos:end="102:64">getTask</name></name><argument_list pos:start="102:65" pos:end="102:93">(<argument pos:start="102:66" pos:end="102:69"><expr pos:start="102:66" pos:end="102:69"><name pos:start="102:66" pos:end="102:69">task</name></expr></argument>, <argument pos:start="102:72" pos:end="102:76"><expr pos:start="102:72" pos:end="102:76"><name pos:start="102:72" pos:end="102:76">uavID</name></expr></argument>, <argument pos:start="102:79" pos:end="102:84"><expr pos:start="102:79" pos:end="102:84"><name pos:start="102:79" pos:end="102:84">taskID</name></expr></argument>, <argument pos:start="102:87" pos:end="102:92"><expr pos:start="102:87" pos:end="102:92"><name pos:start="102:87" pos:end="102:92">params</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="102:96" pos:end="102:108"><expr pos:start="102:96" pos:end="102:108"><name pos:start="102:96" pos:end="102:108">synchPointMgr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<return pos:start="103:33" pos:end="103:39">return;</return>
			</block_content>}</block></if></if_stmt>
		</block_content>}</block></for>
		<throw pos:start="106:17" pos:end="106:101">throw <expr pos:start="106:23" pos:end="106:100"><operator pos:start="106:23" pos:end="106:25">new</operator> <call pos:start="106:27" pos:end="106:100"><name pos:start="106:27" pos:end="106:51">MissionExecutionException</name><argument_list pos:start="106:52" pos:end="106:100">(<argument pos:start="106:53" pos:end="106:99"><expr pos:start="106:53" pos:end="106:99"><literal type="string" pos:start="106:53" pos:end="106:70">"UAVMissionPlan '"</literal> <operator pos:start="106:72" pos:end="106:72">+</operator> <name pos:start="106:74" pos:end="106:78">uavID</name> <operator pos:start="106:80" pos:end="106:80">+</operator> <literal type="string" pos:start="106:82" pos:end="106:99">"' not available!"</literal></expr></argument>)</argument_list></call></expr>;</throw>
	</block_content>}</block></function>

	<function pos:start="109:9" pos:end="117:9"><annotation pos:start="109:9" pos:end="109:17">@<name pos:start="109:10" pos:end="109:17">Override</name></annotation>
	<type pos:start="110:9" pos:end="110:22"><specifier pos:start="110:9" pos:end="110:14">public</specifier> <name pos:start="110:16" pos:end="110:22">boolean</name></type> <name pos:start="110:24" pos:end="110:38">isMissionActive</name><parameter_list pos:start="110:39" pos:end="110:40">()</parameter_list> <block pos:start="110:42" pos:end="117:9">{<block_content pos:start="111:17" pos:end="116:29">
		<for pos:start="111:17" pos:end="115:17">for <control pos:start="111:21" pos:end="111:68">(<init pos:start="111:22" pos:end="111:67"><decl pos:start="111:22" pos:end="111:67"><type pos:start="111:22" pos:end="111:35"><name pos:start="111:22" pos:end="111:35">UAVMissionPlan</name></type> <name pos:start="111:37" pos:end="111:40">plan</name> <range pos:start="111:42" pos:end="111:67">: <expr pos:start="111:44" pos:end="111:67"><call pos:start="111:44" pos:end="111:67"><name pos:start="111:44" pos:end="111:65"><name pos:start="111:44" pos:end="111:58">uavMissionPlans</name><operator pos:start="111:59" pos:end="111:59">.</operator><name pos:start="111:60" pos:end="111:65">values</name></name><argument_list pos:start="111:66" pos:end="111:67">()</argument_list></call></expr></range></decl></init>)</control> <block pos:start="111:70" pos:end="115:17">{<block_content pos:start="112:25" pos:end="114:25">
			<if_stmt pos:start="112:25" pos:end="114:25"><if pos:start="112:25" pos:end="114:25">if <condition pos:start="112:28" pos:end="112:44">(<expr pos:start="112:29" pos:end="112:43"><call pos:start="112:29" pos:end="112:43"><name pos:start="112:29" pos:end="112:41"><name pos:start="112:29" pos:end="112:32">plan</name><operator pos:start="112:33" pos:end="112:33">.</operator><name pos:start="112:34" pos:end="112:41">hasTasks</name></name><argument_list pos:start="112:42" pos:end="112:43">()</argument_list></call></expr>)</condition> <block pos:start="112:46" pos:end="114:25">{<block_content pos:start="113:33" pos:end="113:44">
				<return pos:start="113:33" pos:end="113:44">return <expr pos:start="113:40" pos:end="113:43"><literal type="boolean" pos:start="113:40" pos:end="113:43">true</literal></expr>;</return>
			</block_content>}</block></if></if_stmt>
		</block_content>}</block></for>
		<return pos:start="116:17" pos:end="116:29">return <expr pos:start="116:24" pos:end="116:28"><literal type="boolean" pos:start="116:24" pos:end="116:28">false</literal></expr>;</return>
	</block_content>}</block></function>

	<comment type="block" format="javadoc" pos:start="119:9" pos:end="121:11">/**
	 * Build all synch points
	 */</comment>
	<function pos:start="122:9" pos:end="126:9"><type pos:start="122:9" pos:end="122:20"><specifier pos:start="122:9" pos:end="122:15">private</specifier> <name pos:start="122:17" pos:end="122:20">void</name></type> <name pos:start="122:22" pos:end="122:40">buildAllSynchPoints</name><parameter_list pos:start="122:41" pos:end="122:42">()</parameter_list> <block pos:start="122:44" pos:end="126:9">{<block_content pos:start="123:17" pos:end="125:19">
		<expr_stmt pos:start="123:17" pos:end="125:19"><expr pos:start="123:17" pos:end="125:18"><call pos:start="123:17" pos:end="125:18"><name pos:start="123:17" pos:end="123:39"><name pos:start="123:17" pos:end="123:31">uavMissionPlans</name><operator pos:start="123:32" pos:end="123:32">.</operator><name pos:start="123:33" pos:end="123:39">forEach</name></name><argument_list pos:start="123:40" pos:end="125:18">(<argument pos:start="123:41" pos:end="125:17"><expr pos:start="123:41" pos:end="125:17"><lambda pos:start="123:41" pos:end="125:17"><parameter_list pos:start="123:41" pos:end="123:53">(<parameter pos:start="123:42" pos:end="123:46"><decl pos:start="123:42" pos:end="123:46"><name pos:start="123:42" pos:end="123:46">uavId</name></decl></parameter>, <parameter pos:start="123:49" pos:end="123:52"><decl pos:start="123:49" pos:end="123:52"><name pos:start="123:49" pos:end="123:52">plan</name></decl></parameter>)</parameter_list> -&gt; <block pos:start="123:58" pos:end="125:17">{<block_content pos:start="124:25" pos:end="124:48">
			<expr_stmt pos:start="124:25" pos:end="124:48"><expr pos:start="124:25" pos:end="124:47"><call pos:start="124:25" pos:end="124:47"><name pos:start="124:25" pos:end="124:45"><name pos:start="124:25" pos:end="124:28">plan</name><operator pos:start="124:29" pos:end="124:29">.</operator><name pos:start="124:30" pos:end="124:45">buildSynchPoints</name></name><argument_list pos:start="124:46" pos:end="124:47">()</argument_list></call></expr>;</expr_stmt>
		</block_content>}</block></lambda></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	</block_content>}</block></function>

	<comment type="block" format="javadoc" pos:start="128:9" pos:end="133:11">/**
	 * Activates next task in each UAV mission, if there is no unfinished active
	 * task
	 * 
	 * @throws MissionExecutionException
	 */</comment>
	<function pos:start="134:9" pos:end="141:9"><annotation pos:start="134:9" pos:end="134:17">@<name pos:start="134:10" pos:end="134:17">Override</name></annotation>
	<type pos:start="135:9" pos:end="135:19"><specifier pos:start="135:9" pos:end="135:14">public</specifier> <name pos:start="135:16" pos:end="135:19">void</name></type> <name pos:start="135:21" pos:end="135:40">checkAndActivateTask</name><parameter_list pos:start="135:41" pos:end="135:42">()</parameter_list> <throws pos:start="135:44" pos:end="135:75">throws <argument pos:start="135:51" pos:end="135:75"><expr pos:start="135:51" pos:end="135:75"><name pos:start="135:51" pos:end="135:75">MissionExecutionException</name></expr></argument></throws> <block pos:start="135:77" pos:end="141:9">{<block_content pos:start="136:17" pos:end="140:17">
		<for pos:start="136:17" pos:end="140:17">for <control pos:start="136:21" pos:end="136:68">(<init pos:start="136:22" pos:end="136:67"><decl pos:start="136:22" pos:end="136:67"><type pos:start="136:22" pos:end="136:35"><name pos:start="136:22" pos:end="136:35">UAVMissionPlan</name></type> <name pos:start="136:37" pos:end="136:40">plan</name> <range pos:start="136:42" pos:end="136:67">: <expr pos:start="136:44" pos:end="136:67"><call pos:start="136:44" pos:end="136:67"><name pos:start="136:44" pos:end="136:65"><name pos:start="136:44" pos:end="136:58">uavMissionPlans</name><operator pos:start="136:59" pos:end="136:59">.</operator><name pos:start="136:60" pos:end="136:65">values</name></name><argument_list pos:start="136:66" pos:end="136:67">()</argument_list></call></expr></range></decl></init>)</control> <block pos:start="136:70" pos:end="140:17">{<block_content pos:start="137:25" pos:end="139:25">
			<if_stmt pos:start="137:25" pos:end="139:25"><if pos:start="137:25" pos:end="139:25">if <condition pos:start="137:28" pos:end="137:50">(<expr pos:start="137:29" pos:end="137:49"><operator pos:start="137:29" pos:end="137:29">!</operator><call pos:start="137:30" pos:end="137:49"><name pos:start="137:30" pos:end="137:47"><name pos:start="137:30" pos:end="137:33">plan</name><operator pos:start="137:34" pos:end="137:34">.</operator><name pos:start="137:35" pos:end="137:47">hasActiveTask</name></name><argument_list pos:start="137:48" pos:end="137:49">()</argument_list></call></expr>)</condition> <block pos:start="137:52" pos:end="139:25">{<block_content pos:start="138:33" pos:end="138:56">
				<expr_stmt pos:start="138:33" pos:end="138:56"><expr pos:start="138:33" pos:end="138:55"><call pos:start="138:33" pos:end="138:55"><name pos:start="138:33" pos:end="138:53"><name pos:start="138:33" pos:end="138:36">plan</name><operator pos:start="138:37" pos:end="138:37">.</operator><name pos:start="138:38" pos:end="138:53">activateNextTask</name></name><argument_list pos:start="138:54" pos:end="138:55">()</argument_list></call></expr>;</expr_stmt>
			</block_content>}</block></if></if_stmt>
		</block_content>}</block></for>
	</block_content>}</block></function>

	<comment type="block" format="javadoc" pos:start="143:9" pos:end="148:11">/**
	 * Expands flight pattern tasks (e.g., coordinatedTakeOff or coordinatedLanding)
	 * 
	 * @throws MissionExecutionException
	 * 
	 */</comment>
	<function pos:start="149:9" pos:end="153:9"><type pos:start="149:9" pos:end="149:20"><specifier pos:start="149:9" pos:end="149:15">private</specifier> <name pos:start="149:17" pos:end="149:20">void</name></type> <name pos:start="149:22" pos:end="149:35">expandAllTasks</name><parameter_list pos:start="149:36" pos:end="149:37">()</parameter_list> <throws pos:start="149:39" pos:end="149:70">throws <argument pos:start="149:46" pos:end="149:70"><expr pos:start="149:46" pos:end="149:70"><name pos:start="149:46" pos:end="149:70">MissionExecutionException</name></expr></argument></throws> <block pos:start="149:72" pos:end="153:9">{<block_content pos:start="150:17" pos:end="152:17">
		<for pos:start="150:17" pos:end="152:17">for <control pos:start="150:21" pos:end="150:68">(<init pos:start="150:22" pos:end="150:67"><decl pos:start="150:22" pos:end="150:67"><type pos:start="150:22" pos:end="150:35"><name pos:start="150:22" pos:end="150:35">UAVMissionPlan</name></type> <name pos:start="150:37" pos:end="150:40">plan</name> <range pos:start="150:42" pos:end="150:67">: <expr pos:start="150:44" pos:end="150:67"><call pos:start="150:44" pos:end="150:67"><name pos:start="150:44" pos:end="150:65"><name pos:start="150:44" pos:end="150:58">uavMissionPlans</name><operator pos:start="150:59" pos:end="150:59">.</operator><name pos:start="150:60" pos:end="150:65">values</name></name><argument_list pos:start="150:66" pos:end="150:67">()</argument_list></call></expr></range></decl></init>)</control> <block pos:start="150:70" pos:end="152:17">{<block_content pos:start="151:25" pos:end="151:46">
			<expr_stmt pos:start="151:25" pos:end="151:46"><expr pos:start="151:25" pos:end="151:45"><call pos:start="151:25" pos:end="151:45"><name pos:start="151:25" pos:end="151:43"><name pos:start="151:25" pos:end="151:28">plan</name><operator pos:start="151:29" pos:end="151:29">.</operator><name pos:start="151:30" pos:end="151:43">expandTaskList</name></name><argument_list pos:start="151:44" pos:end="151:45">()</argument_list></call></expr>;</expr_stmt>
		</block_content>}</block></for>
	</block_content>}</block></function>

	<function pos:start="155:9" pos:end="168:9"><type pos:start="155:9" pos:end="155:19"><specifier pos:start="155:9" pos:end="155:14">public</specifier> <name pos:start="155:16" pos:end="155:19">void</name></type> <name pos:start="155:21" pos:end="155:25">build</name><parameter_list pos:start="155:26" pos:end="155:49">(<parameter pos:start="155:27" pos:end="155:48"><decl pos:start="155:27" pos:end="155:48"><type pos:start="155:27" pos:end="155:40"><name pos:start="155:27" pos:end="155:40">UAVMappingInfo</name></type> <name pos:start="155:42" pos:end="155:48">mapping</name></decl></parameter>)</parameter_list> <throws pos:start="155:51" pos:end="155:82">throws <argument pos:start="155:58" pos:end="155:82"><expr pos:start="155:58" pos:end="155:82"><name pos:start="155:58" pos:end="155:82">MissionExecutionException</name></expr></argument></throws> <block pos:start="155:84" pos:end="168:9">{<block_content pos:start="156:17" pos:end="166:17">
		<try pos:start="156:17" pos:end="166:17">try <block pos:start="156:21" pos:end="163:17">{<block_content pos:start="157:25" pos:end="162:39">
			<expr_stmt pos:start="157:25" pos:end="157:47"><expr pos:start="157:25" pos:end="157:46"><name pos:start="157:25" pos:end="157:36"><name pos:start="157:25" pos:end="157:28">this</name><operator pos:start="157:29" pos:end="157:29">.</operator><name pos:start="157:30" pos:end="157:36">mapping</name></name> <operator pos:start="157:38" pos:end="157:38">=</operator> <name pos:start="157:40" pos:end="157:46">mapping</name></expr>;</expr_stmt>
			<expr_stmt pos:start="158:25" pos:end="158:34"><expr pos:start="158:25" pos:end="158:33"><call pos:start="158:25" pos:end="158:33"><name pos:start="158:25" pos:end="158:31">addUAVS</name><argument_list pos:start="158:32" pos:end="158:33">()</argument_list></call></expr>;</expr_stmt>
			<expr_stmt pos:start="159:25" pos:end="159:41"><expr pos:start="159:25" pos:end="159:40"><call pos:start="159:25" pos:end="159:40"><name pos:start="159:25" pos:end="159:38">expandAllTasks</name><argument_list pos:start="159:39" pos:end="159:40">()</argument_list></call></expr>;</expr_stmt>
			<expr_stmt pos:start="160:25" pos:end="160:46"><expr pos:start="160:25" pos:end="160:45"><call pos:start="160:25" pos:end="160:45"><name pos:start="160:25" pos:end="160:43">buildAllSynchPoints</name><argument_list pos:start="160:44" pos:end="160:45">()</argument_list></call></expr>;</expr_stmt>
			<expr_stmt pos:start="161:25" pos:end="161:63"><expr pos:start="161:25" pos:end="161:62"><call pos:start="161:25" pos:end="161:62"><name pos:start="161:25" pos:end="161:60"><name pos:start="161:25" pos:end="161:37">synchPointMgr</name><operator pos:start="161:38" pos:end="161:38">.</operator><name pos:start="161:39" pos:end="161:60">activateAllSynchPoints</name></name><argument_list pos:start="161:61" pos:end="161:62">()</argument_list></call></expr>;</expr_stmt>
			<expr_stmt pos:start="162:25" pos:end="162:39"><expr pos:start="162:25" pos:end="162:38"><call pos:start="162:25" pos:end="162:38"><name pos:start="162:25" pos:end="162:36">runPreChecks</name><argument_list pos:start="162:37" pos:end="162:38">()</argument_list></call></expr>;</expr_stmt>
		</block_content>}</block> <catch pos:start="163:19" pos:end="166:17">catch <parameter_list pos:start="163:25" pos:end="163:37">(<parameter pos:start="163:26" pos:end="163:36"><decl pos:start="163:26" pos:end="163:36"><type pos:start="163:26" pos:end="163:36"><name pos:start="163:26" pos:end="163:34">Throwable</name></type> <name pos:start="163:36" pos:end="163:36">t</name></decl></parameter>)</parameter_list> <block pos:start="163:39" pos:end="166:17">{<block_content pos:start="164:25" pos:end="165:32">
			<expr_stmt pos:start="164:25" pos:end="164:44"><expr pos:start="164:25" pos:end="164:43"><call pos:start="164:25" pos:end="164:43"><name pos:start="164:25" pos:end="164:41"><name pos:start="164:25" pos:end="164:25">t</name><operator pos:start="164:26" pos:end="164:26">.</operator><name pos:start="164:27" pos:end="164:41">printStackTrace</name></name><argument_list pos:start="164:42" pos:end="164:43">()</argument_list></call></expr>;</expr_stmt>
			<throw pos:start="165:25" pos:end="165:32">throw <expr pos:start="165:31" pos:end="165:31"><name pos:start="165:31" pos:end="165:31">t</name></expr>;</throw>
		</block_content>}</block></catch></try>

	</block_content>}</block></function>

	<function pos:start="170:9" pos:end="174:9"><type pos:start="170:9" pos:end="170:20"><specifier pos:start="170:9" pos:end="170:15">private</specifier> <name pos:start="170:17" pos:end="170:20">void</name></type> <name pos:start="170:22" pos:end="170:28">addUAVS</name><parameter_list pos:start="170:29" pos:end="170:30">()</parameter_list> <throws pos:start="170:32" pos:end="170:63">throws <argument pos:start="170:39" pos:end="170:63"><expr pos:start="170:39" pos:end="170:63"><name pos:start="170:39" pos:end="170:63">MissionExecutionException</name></expr></argument></throws> <block pos:start="170:65" pos:end="174:9">{<block_content pos:start="171:17" pos:end="173:17">
		<for pos:start="171:17" pos:end="173:17">for <control pos:start="171:21" pos:end="171:89">(<init pos:start="171:22" pos:end="171:88"><decl pos:start="171:22" pos:end="171:88"><type pos:start="171:22" pos:end="171:43"><name pos:start="171:22" pos:end="171:43">IUAVMissionDescription</name></type> <name pos:start="171:45" pos:end="171:48">desc</name> <range pos:start="171:50" pos:end="171:88">: <expr pos:start="171:52" pos:end="171:88"><call pos:start="171:52" pos:end="171:88"><name pos:start="171:52" pos:end="171:86"><name pos:start="171:52" pos:end="171:63">instructions</name><operator pos:start="171:64" pos:end="171:64">.</operator><name pos:start="171:65" pos:end="171:86">getMissionDescriptions</name></name><argument_list pos:start="171:87" pos:end="171:88">()</argument_list></call></expr></range></decl></init>)</control> <block pos:start="171:91" pos:end="173:17">{<block_content pos:start="172:25" pos:end="172:41">
			<expr_stmt pos:start="172:25" pos:end="172:41"><expr pos:start="172:25" pos:end="172:40"><call pos:start="172:25" pos:end="172:40"><name pos:start="172:25" pos:end="172:34">createPlan</name><argument_list pos:start="172:35" pos:end="172:40">(<argument pos:start="172:36" pos:end="172:39"><expr pos:start="172:36" pos:end="172:39"><name pos:start="172:36" pos:end="172:39">desc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		</block_content>}</block></for>
	</block_content>}</block></function>

	<function pos:start="176:9" pos:end="187:9"><type pos:start="176:9" pos:end="176:20"><specifier pos:start="176:9" pos:end="176:15">private</specifier> <name pos:start="176:17" pos:end="176:20">void</name></type> <name pos:start="176:22" pos:end="176:31">createPlan</name><parameter_list pos:start="176:32" pos:end="176:60">(<parameter pos:start="176:33" pos:end="176:59"><decl pos:start="176:33" pos:end="176:59"><type pos:start="176:33" pos:end="176:54"><name pos:start="176:33" pos:end="176:54">IUAVMissionDescription</name></type> <name pos:start="176:56" pos:end="176:59">desc</name></decl></parameter>)</parameter_list> <throws pos:start="176:62" pos:end="176:93">throws <argument pos:start="176:69" pos:end="176:93"><expr pos:start="176:69" pos:end="176:93"><name pos:start="176:69" pos:end="176:93">MissionExecutionException</name></expr></argument></throws> <block pos:start="176:95" pos:end="187:9">{<block_content pos:start="177:17" pos:end="185:17">
		<decl_stmt pos:start="177:17" pos:end="177:46"><decl pos:start="177:17" pos:end="177:45"><type pos:start="177:17" pos:end="177:22"><name pos:start="177:17" pos:end="177:22">String</name></type> <name pos:start="177:24" pos:end="177:28">uavid</name> <init pos:start="177:30" pos:end="177:45">= <expr pos:start="177:32" pos:end="177:45"><call pos:start="177:32" pos:end="177:45"><name pos:start="177:32" pos:end="177:43"><name pos:start="177:32" pos:end="177:35">desc</name><operator pos:start="177:36" pos:end="177:36">.</operator><name pos:start="177:37" pos:end="177:43">getName</name></name><argument_list pos:start="177:44" pos:end="177:45">()</argument_list></call></expr></init></decl>;</decl_stmt>
		<if_stmt pos:start="178:17" pos:end="180:17"><if pos:start="178:17" pos:end="180:17">if <condition pos:start="178:20" pos:end="178:65">(<expr pos:start="178:21" pos:end="178:64"><call pos:start="178:21" pos:end="178:56"><name pos:start="178:21" pos:end="178:40"><name pos:start="178:21" pos:end="178:27">mapping</name><operator pos:start="178:28" pos:end="178:28">.</operator><name pos:start="178:29" pos:end="178:40">getAttribute</name></name><argument_list pos:start="178:41" pos:end="178:56">(<argument pos:start="178:42" pos:end="178:55"><expr pos:start="178:42" pos:end="178:55"><call pos:start="178:42" pos:end="178:55"><name pos:start="178:42" pos:end="178:53"><name pos:start="178:42" pos:end="178:45">desc</name><operator pos:start="178:46" pos:end="178:46">.</operator><name pos:start="178:47" pos:end="178:53">getName</name></name><argument_list pos:start="178:54" pos:end="178:55">()</argument_list></call></expr></argument>)</argument_list></call> <operator pos:start="178:58" pos:end="178:59">!=</operator> <literal type="null" pos:start="178:61" pos:end="178:64">null</literal></expr>)</condition> <block pos:start="178:67" pos:end="180:17">{<block_content pos:start="179:25" pos:end="179:69">
			<expr_stmt pos:start="179:25" pos:end="179:69"><expr pos:start="179:25" pos:end="179:68"><name pos:start="179:25" pos:end="179:29">uavid</name> <operator pos:start="179:31" pos:end="179:31">=</operator> <call pos:start="179:33" pos:end="179:68"><name pos:start="179:33" pos:end="179:52"><name pos:start="179:33" pos:end="179:39">mapping</name><operator pos:start="179:40" pos:end="179:40">.</operator><name pos:start="179:41" pos:end="179:52">getAttribute</name></name><argument_list pos:start="179:53" pos:end="179:68">(<argument pos:start="179:54" pos:end="179:67"><expr pos:start="179:54" pos:end="179:67"><call pos:start="179:54" pos:end="179:67"><name pos:start="179:54" pos:end="179:65"><name pos:start="179:54" pos:end="179:57">desc</name><operator pos:start="179:58" pos:end="179:58">.</operator><name pos:start="179:59" pos:end="179:65">getName</name></name><argument_list pos:start="179:66" pos:end="179:67">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		</block_content>}</block></if></if_stmt>

		<decl_stmt pos:start="182:17" pos:end="182:52"><decl pos:start="182:17" pos:end="182:51"><type pos:start="182:17" pos:end="182:30"><name pos:start="182:17" pos:end="182:30">UAVMissionPlan</name></type> <name pos:start="182:32" pos:end="182:35">plan</name> <init pos:start="182:37" pos:end="182:51">= <expr pos:start="182:39" pos:end="182:51"><call pos:start="182:39" pos:end="182:51"><name pos:start="182:39" pos:end="182:44">addUAV</name><argument_list pos:start="182:45" pos:end="182:51">(<argument pos:start="182:46" pos:end="182:50"><expr pos:start="182:46" pos:end="182:50"><name pos:start="182:46" pos:end="182:50">uavid</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<for pos:start="183:17" pos:end="185:17">for <control pos:start="183:21" pos:end="183:57">(<init pos:start="183:22" pos:end="183:56"><decl pos:start="183:22" pos:end="183:56"><type pos:start="183:22" pos:end="183:36"><name pos:start="183:22" pos:end="183:36">IUAVMissionTask</name></type> <name pos:start="183:38" pos:end="183:38">t</name> <range pos:start="183:40" pos:end="183:56">: <expr pos:start="183:42" pos:end="183:56"><call pos:start="183:42" pos:end="183:56"><name pos:start="183:42" pos:end="183:54"><name pos:start="183:42" pos:end="183:45">desc</name><operator pos:start="183:46" pos:end="183:46">.</operator><name pos:start="183:47" pos:end="183:54">getTasks</name></name><argument_list pos:start="183:55" pos:end="183:56">()</argument_list></call></expr></range></decl></init>)</control> <block pos:start="183:59" pos:end="185:17">{<block_content pos:start="184:25" pos:end="184:92">
			<expr_stmt pos:start="184:25" pos:end="184:92"><expr pos:start="184:25" pos:end="184:91"><call pos:start="184:25" pos:end="184:91"><name pos:start="184:25" pos:end="184:31">addTask</name><argument_list pos:start="184:32" pos:end="184:91">(<argument pos:start="184:33" pos:end="184:47"><expr pos:start="184:33" pos:end="184:47"><call pos:start="184:33" pos:end="184:47"><name pos:start="184:33" pos:end="184:45"><name pos:start="184:33" pos:end="184:36">plan</name><operator pos:start="184:37" pos:end="184:37">.</operator><name pos:start="184:38" pos:end="184:45">getUavID</name></name><argument_list pos:start="184:46" pos:end="184:47">()</argument_list></call></expr></argument>, <argument pos:start="184:50" pos:end="184:60"><expr pos:start="184:50" pos:end="184:60"><call pos:start="184:50" pos:end="184:60"><name pos:start="184:50" pos:end="184:58"><name pos:start="184:50" pos:end="184:50">t</name><operator pos:start="184:51" pos:end="184:51">.</operator><name pos:start="184:52" pos:end="184:58">getType</name></name><argument_list pos:start="184:59" pos:end="184:60">()</argument_list></call></expr></argument>, <argument pos:start="184:63" pos:end="184:71"><expr pos:start="184:63" pos:end="184:71"><call pos:start="184:63" pos:end="184:71"><name pos:start="184:63" pos:end="184:69"><name pos:start="184:63" pos:end="184:63">t</name><operator pos:start="184:64" pos:end="184:64">.</operator><name pos:start="184:65" pos:end="184:69">getId</name></name><argument_list pos:start="184:70" pos:end="184:71">()</argument_list></call></expr></argument>, <argument pos:start="184:74" pos:end="184:90"><expr pos:start="184:74" pos:end="184:90"><call pos:start="184:74" pos:end="184:90"><name pos:start="184:74" pos:end="184:88"><name pos:start="184:74" pos:end="184:74">t</name><operator pos:start="184:75" pos:end="184:75">.</operator><name pos:start="184:76" pos:end="184:88">getParameters</name></name><argument_list pos:start="184:89" pos:end="184:90">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		</block_content>}</block></for>

	</block_content>}</block></function>

	<function pos:start="189:9" pos:end="193:9"><type pos:start="189:9" pos:end="189:20"><specifier pos:start="189:9" pos:end="189:15">private</specifier> <name pos:start="189:17" pos:end="189:20">void</name></type> <name pos:start="189:22" pos:end="189:33">runPreChecks</name><parameter_list pos:start="189:34" pos:end="189:35">()</parameter_list> <throws pos:start="189:37" pos:end="189:68">throws <argument pos:start="189:44" pos:end="189:68"><expr pos:start="189:44" pos:end="189:68"><name pos:start="189:44" pos:end="189:68">MissionExecutionException</name></expr></argument></throws> <block pos:start="189:70" pos:end="193:9">{<block_content pos:start="190:17" pos:end="192:17">
		<for pos:start="190:17" pos:end="192:17">for <control pos:start="190:21" pos:end="190:82">(<init pos:start="190:22" pos:end="190:81"><decl pos:start="190:22" pos:end="190:81"><type pos:start="190:22" pos:end="190:50"><name pos:start="190:22" pos:end="190:50"><name pos:start="190:22" pos:end="190:26">Entry</name><argument_list type="generic" pos:start="190:27" pos:end="190:50">&lt;<argument pos:start="190:28" pos:end="190:33"><name pos:start="190:28" pos:end="190:33">String</name></argument>, <argument pos:start="190:36" pos:end="190:49"><name pos:start="190:36" pos:end="190:49">UAVMissionPlan</name></argument>&gt;</argument_list></name></type> <name pos:start="190:52" pos:end="190:52">e</name> <range pos:start="190:54" pos:end="190:81">: <expr pos:start="190:56" pos:end="190:81"><call pos:start="190:56" pos:end="190:81"><name pos:start="190:56" pos:end="190:79"><name pos:start="190:56" pos:end="190:70">uavMissionPlans</name><operator pos:start="190:71" pos:end="190:71">.</operator><name pos:start="190:72" pos:end="190:79">entrySet</name></name><argument_list pos:start="190:80" pos:end="190:81">()</argument_list></call></expr></range></decl></init>)</control> <block pos:start="190:84" pos:end="192:17">{<block_content pos:start="191:25" pos:end="191:64">
			<expr_stmt pos:start="191:25" pos:end="191:64"><expr pos:start="191:25" pos:end="191:63"><call pos:start="191:25" pos:end="191:63"><name pos:start="191:25" pos:end="191:37">checkDistance</name><argument_list pos:start="191:38" pos:end="191:63">(<argument pos:start="191:39" pos:end="191:48"><expr pos:start="191:39" pos:end="191:48"><call pos:start="191:39" pos:end="191:48"><name pos:start="191:39" pos:end="191:46"><name pos:start="191:39" pos:end="191:39">e</name><operator pos:start="191:40" pos:end="191:40">.</operator><name pos:start="191:41" pos:end="191:46">getKey</name></name><argument_list pos:start="191:47" pos:end="191:48">()</argument_list></call></expr></argument>, <argument pos:start="191:51" pos:end="191:62"><expr pos:start="191:51" pos:end="191:62"><call pos:start="191:51" pos:end="191:62"><name pos:start="191:51" pos:end="191:60"><name pos:start="191:51" pos:end="191:51">e</name><operator pos:start="191:52" pos:end="191:52">.</operator><name pos:start="191:53" pos:end="191:60">getValue</name></name><argument_list pos:start="191:61" pos:end="191:62">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		</block_content>}</block></for>
	</block_content>}</block></function>

	<function pos:start="195:9" pos:end="213:9"><type pos:start="195:9" pos:end="195:20"><specifier pos:start="195:9" pos:end="195:15">private</specifier> <name pos:start="195:17" pos:end="195:20">void</name></type> <name pos:start="195:22" pos:end="195:34">checkDistance</name><parameter_list pos:start="195:35" pos:end="195:69">(<parameter pos:start="195:36" pos:end="195:47"><decl pos:start="195:36" pos:end="195:47"><type pos:start="195:36" pos:end="195:47"><name pos:start="195:36" pos:end="195:41">String</name></type> <name pos:start="195:43" pos:end="195:47">uavid</name></decl></parameter>, <parameter pos:start="195:50" pos:end="195:68"><decl pos:start="195:50" pos:end="195:68"><type pos:start="195:50" pos:end="195:68"><name pos:start="195:50" pos:end="195:63">UAVMissionPlan</name></type> <name pos:start="195:65" pos:end="195:68">plan</name></decl></parameter>)</parameter_list> <throws pos:start="195:71" pos:end="195:102">throws <argument pos:start="195:78" pos:end="195:102"><expr pos:start="195:78" pos:end="195:102"><name pos:start="195:78" pos:end="195:102">MissionExecutionException</name></expr></argument></throws> <block pos:start="195:104" pos:end="213:9">{<block_content pos:start="196:17" pos:end="211:105">
		<decl_stmt pos:start="196:17" pos:end="196:75"><decl pos:start="196:17" pos:end="196:74"><type pos:start="196:17" pos:end="196:29"><name pos:start="196:17" pos:end="196:29">LlaCoordinate</name></type> <name pos:start="196:31" pos:end="196:40">coordinate</name> <init pos:start="196:42" pos:end="196:74">= <expr pos:start="196:44" pos:end="196:74"><call pos:start="196:44" pos:end="196:74"><name pos:start="196:44" pos:end="196:72"><name pos:start="196:44" pos:end="196:47">plan</name><operator pos:start="196:48" pos:end="196:48">.</operator><name pos:start="196:49" pos:end="196:72">getStartingRouteWaypoint</name></name><argument_list pos:start="196:73" pos:end="196:74">()</argument_list></call></expr></init></decl>;</decl_stmt>
		<decl_stmt pos:start="197:17" pos:end="197:37"><decl pos:start="197:17" pos:end="197:36"><type pos:start="197:17" pos:end="197:25"><name pos:start="197:17" pos:end="197:25">IUAVProxy</name></type> <name pos:start="197:27" pos:end="197:29">uav</name> <init pos:start="197:31" pos:end="197:36">= <expr pos:start="197:33" pos:end="197:36"><literal type="null" pos:start="197:33" pos:end="197:36">null</literal></expr></init></decl>;</decl_stmt>
		<if_stmt pos:start="198:17" pos:end="200:17"><if pos:start="198:17" pos:end="200:17">if <condition pos:start="198:20" pos:end="198:39">(<expr pos:start="198:21" pos:end="198:38"><name pos:start="198:21" pos:end="198:30">coordinate</name> <operator pos:start="198:32" pos:end="198:33">==</operator> <literal type="null" pos:start="198:35" pos:end="198:38">null</literal></expr>)</condition> <block pos:start="198:41" pos:end="200:17">{<block_content pos:start="199:25" pos:end="199:124">
			<throw pos:start="199:25" pos:end="199:124">throw <expr pos:start="199:31" pos:end="199:123"><operator pos:start="199:31" pos:end="199:33">new</operator> <call pos:start="199:35" pos:end="199:123"><name pos:start="199:35" pos:end="199:59">MissionExecutionException</name><argument_list pos:start="199:60" pos:end="199:123">(<argument pos:start="199:61" pos:end="199:122"><expr pos:start="199:61" pos:end="199:122"><literal type="string" pos:start="199:61" pos:end="199:108">"Error when retrieving first waypoint for uav '"</literal> <operator pos:start="199:110" pos:end="199:110">+</operator> <name pos:start="199:112" pos:end="199:116">uavid</name> <operator pos:start="199:118" pos:end="199:118">+</operator> <literal type="string" pos:start="199:120" pos:end="199:122">"'"</literal></expr></argument>)</argument_list></call></expr>;</throw>
		</block_content>}</block></if></if_stmt>
		<try pos:start="201:17" pos:end="205:17">try <block pos:start="201:21" pos:end="203:17">{<block_content pos:start="202:25" pos:end="202:82">
			<expr_stmt pos:start="202:25" pos:end="202:82"><expr pos:start="202:25" pos:end="202:81"><name pos:start="202:25" pos:end="202:27">uav</name> <operator pos:start="202:29" pos:end="202:29">=</operator> <call pos:start="202:31" pos:end="202:61"><name pos:start="202:31" pos:end="202:59"><name pos:start="202:31" pos:end="202:47">DroneSetupService</name><operator pos:start="202:48" pos:end="202:48">.</operator><name pos:start="202:49" pos:end="202:59">getInstance</name></name><argument_list pos:start="202:60" pos:end="202:61">()</argument_list></call><operator pos:start="202:62" pos:end="202:62">.</operator><call pos:start="202:63" pos:end="202:81"><name pos:start="202:63" pos:end="202:74">getActiveUAV</name><argument_list pos:start="202:75" pos:end="202:81">(<argument pos:start="202:76" pos:end="202:80"><expr pos:start="202:76" pos:end="202:80"><name pos:start="202:76" pos:end="202:80">uavid</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		</block_content>}</block> <catch pos:start="203:19" pos:end="205:17">catch <parameter_list pos:start="203:25" pos:end="203:53">(<parameter pos:start="203:26" pos:end="203:52"><decl pos:start="203:26" pos:end="203:52"><type pos:start="203:26" pos:end="203:52"><name pos:start="203:26" pos:end="203:50">DronologyServiceException</name></type> <name pos:start="203:52" pos:end="203:52">e</name></decl></parameter>)</parameter_list> <block pos:start="203:55" pos:end="205:17">{<block_content pos:start="204:25" pos:end="204:76">
			<throw pos:start="204:25" pos:end="204:76">throw <expr pos:start="204:31" pos:end="204:75"><operator pos:start="204:31" pos:end="204:33">new</operator> <call pos:start="204:35" pos:end="204:75"><name pos:start="204:35" pos:end="204:59">MissionExecutionException</name><argument_list pos:start="204:60" pos:end="204:75">(<argument pos:start="204:61" pos:end="204:74"><expr pos:start="204:61" pos:end="204:74"><call pos:start="204:61" pos:end="204:74"><name pos:start="204:61" pos:end="204:72"><name pos:start="204:61" pos:end="204:61">e</name><operator pos:start="204:62" pos:end="204:62">.</operator><name pos:start="204:63" pos:end="204:72">getMessage</name></name><argument_list pos:start="204:73" pos:end="204:74">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</throw>
		</block_content>}</block></catch></try>
		<decl_stmt pos:start="206:17" pos:end="206:91"><decl pos:start="206:17" pos:end="206:90"><type pos:start="206:17" pos:end="206:22"><name pos:start="206:17" pos:end="206:22">double</name></type> <name pos:start="206:24" pos:end="206:46">distanceToFirstWaypoint</name> <init pos:start="206:48" pos:end="206:90">= <expr pos:start="206:50" pos:end="206:90"><call pos:start="206:50" pos:end="206:69"><name pos:start="206:50" pos:end="206:67"><name pos:start="206:50" pos:end="206:52">uav</name><operator pos:start="206:53" pos:end="206:53">.</operator><name pos:start="206:54" pos:end="206:67">getCoordinates</name></name><argument_list pos:start="206:68" pos:end="206:69">()</argument_list></call><operator pos:start="206:70" pos:end="206:70">.</operator><call pos:start="206:71" pos:end="206:90"><name pos:start="206:71" pos:end="206:78">distance</name><argument_list pos:start="206:79" pos:end="206:90">(<argument pos:start="206:80" pos:end="206:89"><expr pos:start="206:80" pos:end="206:89"><name pos:start="206:80" pos:end="206:89">coordinate</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<if_stmt pos:start="207:17" pos:end="210:17"><if pos:start="207:17" pos:end="210:17">if <condition pos:start="207:20" pos:end="207:95">(<expr pos:start="207:21" pos:end="207:94"><name pos:start="207:21" pos:end="207:43">distanceToFirstWaypoint</name> <operator pos:start="207:45" pos:end="207:45">&gt;</operator> <name pos:start="207:47" pos:end="207:94"><name pos:start="207:47" pos:end="207:64">DronologyConstants</name><operator pos:start="207:65" pos:end="207:65">.</operator><name pos:start="207:66" pos:end="207:94">MISSION_MAX_STARTING_DISTANCE</name></name></expr>)</condition> <block pos:start="207:97" pos:end="210:17">{<block_content pos:start="208:25" pos:end="209:136">
			<throw pos:start="208:25" pos:end="209:136">throw <expr pos:start="208:31" pos:end="209:135"><operator pos:start="208:31" pos:end="208:33">new</operator> <call pos:start="208:35" pos:end="209:135"><name pos:start="208:35" pos:end="208:59">MissionExecutionException</name><argument_list pos:start="208:60" pos:end="209:135">(
					<argument pos:start="209:41" pos:end="209:134"><expr pos:start="209:41" pos:end="209:134"><literal type="string" pos:start="209:41" pos:end="209:102">"Distance to first waypoint exceeds maximum safety distance: "</literal> <operator pos:start="209:104" pos:end="209:104">+</operator> <name pos:start="209:106" pos:end="209:128">distanceToFirstWaypoint</name> <operator pos:start="209:130" pos:end="209:130">+</operator> <literal type="string" pos:start="209:132" pos:end="209:134">"m"</literal></expr></argument>)</argument_list></call></expr>;</throw>
		</block_content>}</block></if></if_stmt>
		<expr_stmt pos:start="211:17" pos:end="211:105"><expr pos:start="211:17" pos:end="211:104"><call pos:start="211:17" pos:end="211:104"><name pos:start="211:17" pos:end="211:27"><name pos:start="211:17" pos:end="211:22">LOGGER</name><operator pos:start="211:23" pos:end="211:23">.</operator><name pos:start="211:24" pos:end="211:27">info</name></name><argument_list pos:start="211:28" pos:end="211:104">(<argument pos:start="211:29" pos:end="211:103"><expr pos:start="211:29" pos:end="211:103"><literal type="string" pos:start="211:29" pos:end="211:77">"Precheck passed -- Distance to first waypoint: "</literal> <operator pos:start="211:79" pos:end="211:79">+</operator> <name pos:start="211:81" pos:end="211:103">distanceToFirstWaypoint</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	</block_content>}</block></function>

	<function pos:start="215:9" pos:end="222:9"><annotation pos:start="215:9" pos:end="215:17">@<name pos:start="215:10" pos:end="215:17">Override</name></annotation>
	<type pos:start="216:9" pos:end="216:19"><specifier pos:start="216:9" pos:end="216:14">public</specifier> <name pos:start="216:16" pos:end="216:19">void</name></type> <name pos:start="216:21" pos:end="216:33">cancelMission</name><parameter_list pos:start="216:34" pos:end="216:35">()</parameter_list> <block pos:start="216:37" pos:end="222:9">{<block_content pos:start="217:17" pos:end="221:17">
		<expr_stmt pos:start="217:17" pos:end="217:58"><expr pos:start="217:17" pos:end="217:57"><call pos:start="217:17" pos:end="217:57"><name pos:start="217:17" pos:end="217:35"><name pos:start="217:17" pos:end="217:22">LOGGER</name><operator pos:start="217:23" pos:end="217:23">.</operator><name pos:start="217:24" pos:end="217:35">missionError</name></name><argument_list pos:start="217:36" pos:end="217:57">(<argument pos:start="217:37" pos:end="217:56"><expr pos:start="217:37" pos:end="217:56"><literal type="string" pos:start="217:37" pos:end="217:56">"Mission cancelled!"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<for pos:start="218:17" pos:end="221:17">for <control pos:start="218:21" pos:end="218:68">(<init pos:start="218:22" pos:end="218:67"><decl pos:start="218:22" pos:end="218:67"><type pos:start="218:22" pos:end="218:35"><name pos:start="218:22" pos:end="218:35">UAVMissionPlan</name></type> <name pos:start="218:37" pos:end="218:40">plan</name> <range pos:start="218:42" pos:end="218:67">: <expr pos:start="218:44" pos:end="218:67"><call pos:start="218:44" pos:end="218:67"><name pos:start="218:44" pos:end="218:65"><name pos:start="218:44" pos:end="218:58">uavMissionPlans</name><operator pos:start="218:59" pos:end="218:59">.</operator><name pos:start="218:60" pos:end="218:65">values</name></name><argument_list pos:start="218:66" pos:end="218:67">()</argument_list></call></expr></range></decl></init>)</control> <block pos:start="218:70" pos:end="221:17">{<block_content pos:start="219:25" pos:end="220:51">
			<decl_stmt pos:start="219:25" pos:end="219:55"><decl pos:start="219:25" pos:end="219:54"><type pos:start="219:25" pos:end="219:30"><name pos:start="219:25" pos:end="219:30">String</name></type> <name pos:start="219:32" pos:end="219:36">uavid</name> <init pos:start="219:38" pos:end="219:54">= <expr pos:start="219:40" pos:end="219:54"><call pos:start="219:40" pos:end="219:54"><name pos:start="219:40" pos:end="219:52"><name pos:start="219:40" pos:end="219:43">plan</name><operator pos:start="219:44" pos:end="219:44">.</operator><name pos:start="219:45" pos:end="219:52">getUavID</name></name><argument_list pos:start="219:53" pos:end="219:54">()</argument_list></call></expr></init></decl>;</decl_stmt>
			<expr_stmt pos:start="220:25" pos:end="220:51"><expr pos:start="220:25" pos:end="220:50"><call pos:start="220:25" pos:end="220:50"><name pos:start="220:25" pos:end="220:43"><name pos:start="220:25" pos:end="220:35">MissionUtil</name><operator pos:start="220:36" pos:end="220:36">.</operator><name pos:start="220:37" pos:end="220:43">stopUAV</name></name><argument_list pos:start="220:44" pos:end="220:50">(<argument pos:start="220:45" pos:end="220:49"><expr pos:start="220:45" pos:end="220:49"><name pos:start="220:45" pos:end="220:49">uavid</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		</block_content>}</block></for>
	</block_content>}</block></function>

}</block></class>
</unit>
