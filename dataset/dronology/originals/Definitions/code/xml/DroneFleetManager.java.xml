<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="Java" filename="flatCode/DroneFleetManager.java" pos:tabs="8"><package pos:start="1:1" pos:end="1:36">package <name pos:start="1:9" pos:end="1:35"><name pos:start="1:9" pos:end="1:11">edu</name><operator pos:start="1:12" pos:end="1:12">.</operator><name pos:start="1:13" pos:end="1:14">nd</name><operator pos:start="1:15" pos:end="1:15">.</operator><name pos:start="1:16" pos:end="1:24">dronology</name><operator pos:start="1:25" pos:end="1:25">.</operator><name pos:start="1:26" pos:end="1:29">core</name><operator pos:start="1:30" pos:end="1:30">.</operator><name pos:start="1:31" pos:end="1:35">fleet</name></name>;</package>

<import pos:start="3:1" pos:end="3:27">import <name pos:start="3:8" pos:end="3:26"><name pos:start="3:8" pos:end="3:11">java</name><operator pos:start="3:12" pos:end="3:12">.</operator><name pos:start="3:13" pos:end="3:16">util</name><operator pos:start="3:17" pos:end="3:17">.</operator><name pos:start="3:18" pos:end="3:26">ArrayList</name></name>;</import>
<import pos:start="4:1" pos:end="4:22">import <name pos:start="4:8" pos:end="4:21"><name pos:start="4:8" pos:end="4:11">java</name><operator pos:start="4:12" pos:end="4:12">.</operator><name pos:start="4:13" pos:end="4:16">util</name><operator pos:start="4:17" pos:end="4:17">.</operator><name pos:start="4:18" pos:end="4:21">List</name></name>;</import>
<import pos:start="5:1" pos:end="5:23">import <name pos:start="5:8" pos:end="5:22"><name pos:start="5:8" pos:end="5:11">java</name><operator pos:start="5:12" pos:end="5:12">.</operator><name pos:start="5:13" pos:end="5:16">util</name><operator pos:start="5:17" pos:end="5:17">.</operator><name pos:start="5:18" pos:end="5:22">Queue</name></name>;</import>
<import pos:start="6:1" pos:end="6:50">import <name pos:start="6:8" pos:end="6:49"><name pos:start="6:8" pos:end="6:11">java</name><operator pos:start="6:12" pos:end="6:12">.</operator><name pos:start="6:13" pos:end="6:16">util</name><operator pos:start="6:17" pos:end="6:17">.</operator><name pos:start="6:18" pos:end="6:27">concurrent</name><operator pos:start="6:28" pos:end="6:28">.</operator><name pos:start="6:29" pos:end="6:49">ConcurrentLinkedQueue</name></name>;</import>
<import pos:start="7:1" pos:end="7:50">import <name pos:start="7:8" pos:end="7:49"><name pos:start="7:8" pos:end="7:11">java</name><operator pos:start="7:12" pos:end="7:12">.</operator><name pos:start="7:13" pos:end="7:16">util</name><operator pos:start="7:17" pos:end="7:17">.</operator><name pos:start="7:18" pos:end="7:27">concurrent</name><operator pos:start="7:28" pos:end="7:28">.</operator><name pos:start="7:29" pos:end="7:49">ConcurrentSkipListMap</name></name>;</import>
<import pos:start="8:1" pos:end="8:35">import <name pos:start="8:8" pos:end="8:34"><name pos:start="8:8" pos:end="8:11">java</name><operator pos:start="8:12" pos:end="8:12">.</operator><name pos:start="8:13" pos:end="8:16">util</name><operator pos:start="8:17" pos:end="8:17">.</operator><name pos:start="8:18" pos:end="8:25">function</name><operator pos:start="8:26" pos:end="8:26">.</operator><name pos:start="8:27" pos:end="8:34">Consumer</name></name>;</import>

<import pos:start="10:1" pos:end="10:55">import <name pos:start="10:8" pos:end="10:54"><name pos:start="10:8" pos:end="10:10">edu</name><operator pos:start="10:11" pos:end="10:11">.</operator><name pos:start="10:12" pos:end="10:13">nd</name><operator pos:start="10:14" pos:end="10:14">.</operator><name pos:start="10:15" pos:end="10:23">dronology</name><operator pos:start="10:24" pos:end="10:24">.</operator><name pos:start="10:25" pos:end="10:28">core</name><operator pos:start="10:29" pos:end="10:29">.</operator><name pos:start="10:30" pos:end="10:39">exceptions</name><operator pos:start="10:40" pos:end="10:40">.</operator><name pos:start="10:41" pos:end="10:54">DroneException</name></name>;</import>
<import pos:start="11:1" pos:end="11:67">import <name pos:start="11:8" pos:end="11:66"><name pos:start="11:8" pos:end="11:10">edu</name><operator pos:start="11:11" pos:end="11:11">.</operator><name pos:start="11:12" pos:end="11:13">nd</name><operator pos:start="11:14" pos:end="11:14">.</operator><name pos:start="11:15" pos:end="11:23">dronology</name><operator pos:start="11:24" pos:end="11:24">.</operator><name pos:start="11:25" pos:end="11:28">core</name><operator pos:start="11:29" pos:end="11:29">.</operator><name pos:start="11:30" pos:end="11:39">monitoring</name><operator pos:start="11:40" pos:end="11:40">.</operator><name pos:start="11:41" pos:end="11:66">DronologyMonitoringManager</name></name>;</import>
<import pos:start="12:1" pos:end="12:58">import <name pos:start="12:8" pos:end="12:57"><name pos:start="12:8" pos:end="12:10">edu</name><operator pos:start="12:11" pos:end="12:11">.</operator><name pos:start="12:12" pos:end="12:13">nd</name><operator pos:start="12:14" pos:end="12:14">.</operator><name pos:start="12:15" pos:end="12:23">dronology</name><operator pos:start="12:24" pos:end="12:24">.</operator><name pos:start="12:25" pos:end="12:28">core</name><operator pos:start="12:29" pos:end="12:29">.</operator><name pos:start="12:30" pos:end="12:39">monitoring</name><operator pos:start="12:40" pos:end="12:40">.</operator><name pos:start="12:41" pos:end="12:57">MessageMarshaller</name></name>;</import>
<import pos:start="13:1" pos:end="13:83">import <name pos:start="13:8" pos:end="13:82"><name pos:start="13:8" pos:end="13:10">edu</name><operator pos:start="13:11" pos:end="13:11">.</operator><name pos:start="13:12" pos:end="13:13">nd</name><operator pos:start="13:14" pos:end="13:14">.</operator><name pos:start="13:15" pos:end="13:23">dronology</name><operator pos:start="13:24" pos:end="13:24">.</operator><name pos:start="13:25" pos:end="13:28">core</name><operator pos:start="13:29" pos:end="13:29">.</operator><name pos:start="13:30" pos:end="13:39">monitoring</name><operator pos:start="13:40" pos:end="13:40">.</operator><name pos:start="13:41" pos:end="13:48">messages</name><operator pos:start="13:49" pos:end="13:49">.</operator><name pos:start="13:50" pos:end="13:70">UAVMonitorableMessage</name><operator pos:start="13:71" pos:end="13:71">.</operator><name pos:start="13:72" pos:end="13:82">MessageType</name></name>;</import>
<import pos:start="14:1" pos:end="14:50">import <name pos:start="14:8" pos:end="14:49"><name pos:start="14:8" pos:end="14:10">edu</name><operator pos:start="14:11" pos:end="14:11">.</operator><name pos:start="14:12" pos:end="14:13">nd</name><operator pos:start="14:14" pos:end="14:14">.</operator><name pos:start="14:15" pos:end="14:23">dronology</name><operator pos:start="14:24" pos:end="14:24">.</operator><name pos:start="14:25" pos:end="14:28">core</name><operator pos:start="14:29" pos:end="14:29">.</operator><name pos:start="14:30" pos:end="14:36">vehicle</name><operator pos:start="14:37" pos:end="14:37">.</operator><name pos:start="14:38" pos:end="14:49">ManagedDrone</name></name>;</import>
<import pos:start="15:1" pos:end="15:30">import <name pos:start="15:8" pos:end="15:29"><name pos:start="15:8" pos:end="15:10">net</name><operator pos:start="15:11" pos:end="15:11">.</operator><name pos:start="15:12" pos:end="15:13">mv</name><operator pos:start="15:14" pos:end="15:14">.</operator><name pos:start="15:15" pos:end="15:21">logging</name><operator pos:start="15:22" pos:end="15:22">.</operator><name pos:start="15:23" pos:end="15:29">ILogger</name></name>;</import>
<import pos:start="16:1" pos:end="16:37">import <name pos:start="16:8" pos:end="16:36"><name pos:start="16:8" pos:end="16:10">net</name><operator pos:start="16:11" pos:end="16:11">.</operator><name pos:start="16:12" pos:end="16:13">mv</name><operator pos:start="16:14" pos:end="16:14">.</operator><name pos:start="16:15" pos:end="16:21">logging</name><operator pos:start="16:22" pos:end="16:22">.</operator><name pos:start="16:23" pos:end="16:36">LoggerProvider</name></name>;</import>

<comment type="block" format="javadoc" pos:start="18:1" pos:end="25:3">/**
 * Holds a fleet of virtual or physical drones.&lt;br&gt;
 * When activated, UAVs are registered with the fleet manager and can be retrieved for assigning routes to them.
 * 
 *  
 * @author Michael Vierhauser
 *
 */</comment>
<class pos:start="26:1" pos:end="184:1"><specifier pos:start="26:1" pos:end="26:6">public</specifier> class <name pos:start="26:14" pos:end="26:30">DroneFleetManager</name> <block pos:start="26:32" pos:end="184:1">{

	<decl_stmt pos:start="28:9" pos:end="28:96"><decl pos:start="28:9" pos:end="28:95"><type pos:start="28:9" pos:end="28:36"><specifier pos:start="28:9" pos:end="28:15">private</specifier> <specifier pos:start="28:17" pos:end="28:22">static</specifier> <specifier pos:start="28:24" pos:end="28:28">final</specifier> <name pos:start="28:30" pos:end="28:36">ILogger</name></type> <name pos:start="28:38" pos:end="28:43">LOGGER</name> <init pos:start="28:45" pos:end="28:95">= <expr pos:start="28:47" pos:end="28:95"><call pos:start="28:47" pos:end="28:95"><name pos:start="28:47" pos:end="28:70"><name pos:start="28:47" pos:end="28:60">LoggerProvider</name><operator pos:start="28:61" pos:end="28:61">.</operator><name pos:start="28:62" pos:end="28:70">getLogger</name></name><argument_list pos:start="28:71" pos:end="28:95">(<argument pos:start="28:72" pos:end="28:94"><expr pos:start="28:72" pos:end="28:94"><name pos:start="28:72" pos:end="28:94"><name pos:start="28:72" pos:end="28:88">DroneFleetManager</name><operator pos:start="28:89" pos:end="28:89">.</operator><name pos:start="28:90" pos:end="28:94">class</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<decl_stmt pos:start="29:9" pos:end="29:66"><decl pos:start="29:9" pos:end="29:65"><type pos:start="29:9" pos:end="29:49"><specifier pos:start="29:9" pos:end="29:15">private</specifier> <specifier pos:start="29:17" pos:end="29:22">static</specifier> <specifier pos:start="29:24" pos:end="29:31">volatile</specifier> <name pos:start="29:33" pos:end="29:49">DroneFleetManager</name></type> <name pos:start="29:51" pos:end="29:58">INSTANCE</name> <init pos:start="29:60" pos:end="29:65">= <expr pos:start="29:62" pos:end="29:65"><literal type="null" pos:start="29:62" pos:end="29:65">null</literal></expr></init></decl>;</decl_stmt>

	<decl_stmt pos:start="31:9" pos:end="31:77"><decl pos:start="31:9" pos:end="31:76"><type pos:start="31:9" pos:end="31:59"><specifier pos:start="31:9" pos:end="31:15">private</specifier> <name pos:start="31:17" pos:end="31:59"><name pos:start="31:17" pos:end="31:37">ConcurrentSkipListMap</name><argument_list type="generic" pos:start="31:38" pos:end="31:59">&lt;<argument pos:start="31:39" pos:end="31:44"><name pos:start="31:39" pos:end="31:44">String</name></argument>, <argument pos:start="31:47" pos:end="31:58"><name pos:start="31:47" pos:end="31:58">ManagedDrone</name></argument>&gt;</argument_list></name></type> <name pos:start="31:61" pos:end="31:76">registeredDrones</name></decl>;</decl_stmt>
	<decl_stmt pos:start="32:9" pos:end="32:52"><decl pos:start="32:9" pos:end="32:51"><type pos:start="32:9" pos:end="32:35"><specifier pos:start="32:9" pos:end="32:15">private</specifier> <name pos:start="32:17" pos:end="32:35"><name pos:start="32:17" pos:end="32:21">Queue</name><argument_list type="generic" pos:start="32:22" pos:end="32:35">&lt;<argument pos:start="32:23" pos:end="32:34"><name pos:start="32:23" pos:end="32:34">ManagedDrone</name></argument>&gt;</argument_list></name></type> <name pos:start="32:37" pos:end="32:51">availableDrones</name></decl>;</decl_stmt>
	<decl_stmt pos:start="33:9" pos:end="33:46"><decl pos:start="33:9" pos:end="33:45"><type pos:start="33:9" pos:end="33:34"><specifier pos:start="33:9" pos:end="33:15">private</specifier> <name pos:start="33:17" pos:end="33:34"><name pos:start="33:17" pos:end="33:20">List</name><argument_list type="generic" pos:start="33:21" pos:end="33:34">&lt;<argument pos:start="33:22" pos:end="33:33"><name pos:start="33:22" pos:end="33:33">ManagedDrone</name></argument>&gt;</argument_list></name></type> <name pos:start="33:36" pos:end="33:45">busyDrones</name></decl>;</decl_stmt>
	<decl_stmt pos:start="34:9" pos:end="34:51"><decl pos:start="34:9" pos:end="34:50"><type pos:start="34:9" pos:end="34:40"><specifier pos:start="34:9" pos:end="34:15">private</specifier> <name pos:start="34:17" pos:end="34:40"><name pos:start="34:17" pos:end="34:20">List</name><argument_list type="generic" pos:start="34:21" pos:end="34:40">&lt;<argument pos:start="34:22" pos:end="34:39"><name pos:start="34:22" pos:end="34:39">DroneFleetListener</name></argument>&gt;</argument_list></name></type> <name pos:start="34:42" pos:end="34:50">listeners</name></decl>;</decl_stmt>

	<function pos:start="36:9" pos:end="46:9"><type pos:start="36:9" pos:end="36:39"><specifier pos:start="36:9" pos:end="36:14">public</specifier> <specifier pos:start="36:16" pos:end="36:21">static</specifier> <name pos:start="36:23" pos:end="36:39">DroneFleetManager</name></type> <name pos:start="36:41" pos:end="36:51">getInstance</name><parameter_list pos:start="36:52" pos:end="36:53">()</parameter_list> <block pos:start="36:55" pos:end="46:9">{<block_content pos:start="38:17" pos:end="45:32">

		<if_stmt pos:start="38:17" pos:end="44:17"><if pos:start="38:17" pos:end="44:17">if <condition pos:start="38:20" pos:end="38:37">(<expr pos:start="38:21" pos:end="38:36"><name pos:start="38:21" pos:end="38:28">INSTANCE</name> <operator pos:start="38:30" pos:end="38:31">==</operator> <literal type="null" pos:start="38:33" pos:end="38:36">null</literal></expr>)</condition> <block pos:start="38:39" pos:end="44:17">{<block_content pos:start="39:25" pos:end="43:25">
			<synchronized pos:start="39:25" pos:end="43:25">synchronized <init pos:start="39:38" pos:end="39:62">(<expr pos:start="39:39" pos:end="39:61"><name pos:start="39:39" pos:end="39:61"><name pos:start="39:39" pos:end="39:55">DroneFleetManager</name><operator pos:start="39:56" pos:end="39:56">.</operator><name pos:start="39:57" pos:end="39:61">class</name></name></expr>)</init> <block pos:start="39:64" pos:end="43:25">{<block_content pos:start="40:33" pos:end="42:33">
				<if_stmt pos:start="40:33" pos:end="42:33"><if pos:start="40:33" pos:end="42:33">if <condition pos:start="40:36" pos:end="40:53">(<expr pos:start="40:37" pos:end="40:52"><name pos:start="40:37" pos:end="40:44">INSTANCE</name> <operator pos:start="40:46" pos:end="40:47">==</operator> <literal type="null" pos:start="40:49" pos:end="40:52">null</literal></expr>)</condition> <block pos:start="40:55" pos:end="42:33">{<block_content pos:start="41:41" pos:end="41:75">
					<expr_stmt pos:start="41:41" pos:end="41:75"><expr pos:start="41:41" pos:end="41:74"><name pos:start="41:41" pos:end="41:48">INSTANCE</name> <operator pos:start="41:50" pos:end="41:50">=</operator> <operator pos:start="41:52" pos:end="41:54">new</operator> <call pos:start="41:56" pos:end="41:74"><name pos:start="41:56" pos:end="41:72">DroneFleetManager</name><argument_list pos:start="41:73" pos:end="41:74">()</argument_list></call></expr>;</expr_stmt>
				</block_content>}</block></if></if_stmt>
			</block_content>}</block></synchronized>
		</block_content>}</block></if></if_stmt>
		<return pos:start="45:17" pos:end="45:32">return <expr pos:start="45:24" pos:end="45:31"><name pos:start="45:24" pos:end="45:31">INSTANCE</name></expr>;</return>
	</block_content>}</block></function>

	<comment type="block" format="javadoc" pos:start="48:9" pos:end="50:11">/**
	 * Specifies whether virtual or physical drones will be created according to the previously specified runtime drone type. (See RuntimeDroneTypes.java)
	 */</comment>
	<constructor pos:start="51:9" pos:end="61:9"><specifier pos:start="51:9" pos:end="51:17">protected</specifier> <name pos:start="51:19" pos:end="51:35">DroneFleetManager</name><parameter_list pos:start="51:36" pos:end="51:37">()</parameter_list> <block pos:start="51:39" pos:end="61:9">{<block_content pos:start="57:17" pos:end="60:46">
		<comment type="line" pos:start="52:17" pos:end="52:70">// if (RuntimeDroneTypes.getInstance().isSimulation())</comment>
		<comment type="line" pos:start="53:17" pos:end="53:88">// availableDrones = VirtualDroneFleetFactory.getInstance().getDrones();</comment>
		<comment type="line" pos:start="54:17" pos:end="54:23">// else</comment>
		<comment type="line" pos:start="55:17" pos:end="55:36">// availableDrones =</comment>
		<comment type="line" pos:start="56:17" pos:end="56:71">// PhysicalDroneFleetFactory.getInstance().getDrones();</comment>
		<expr_stmt pos:start="57:17" pos:end="57:63"><expr pos:start="57:17" pos:end="57:62"><name pos:start="57:17" pos:end="57:32">registeredDrones</name> <operator pos:start="57:34" pos:end="57:34">=</operator> <operator pos:start="57:36" pos:end="57:38">new</operator> <call pos:start="57:40" pos:end="57:62"><name pos:start="57:40" pos:end="57:60">ConcurrentSkipListMap</name><argument_list pos:start="57:61" pos:end="57:62">()</argument_list></call></expr>;</expr_stmt>
		<expr_stmt pos:start="58:17" pos:end="58:64"><expr pos:start="58:17" pos:end="58:63"><name pos:start="58:17" pos:end="58:31">availableDrones</name> <operator pos:start="58:33" pos:end="58:33">=</operator> <operator pos:start="58:35" pos:end="58:37">new</operator> <call pos:start="58:39" pos:end="58:63"><name pos:start="58:39" pos:end="58:61"><name pos:start="58:39" pos:end="58:59">ConcurrentLinkedQueue</name><argument_list type="generic" pos:start="58:60" pos:end="58:61">&lt;&gt;</argument_list></name><argument_list pos:start="58:62" pos:end="58:63">()</argument_list></call></expr>;</expr_stmt>
		<expr_stmt pos:start="59:17" pos:end="59:47"><expr pos:start="59:17" pos:end="59:46"><name pos:start="59:17" pos:end="59:26">busyDrones</name> <operator pos:start="59:28" pos:end="59:28">=</operator> <operator pos:start="59:30" pos:end="59:32">new</operator> <call pos:start="59:34" pos:end="59:46"><name pos:start="59:34" pos:end="59:44"><name pos:start="59:34" pos:end="59:42">ArrayList</name><argument_list type="generic" pos:start="59:43" pos:end="59:44">&lt;&gt;</argument_list></name><argument_list pos:start="59:45" pos:end="59:46">()</argument_list></call></expr>;</expr_stmt>
		<expr_stmt pos:start="60:17" pos:end="60:46"><expr pos:start="60:17" pos:end="60:45"><name pos:start="60:17" pos:end="60:25">listeners</name> <operator pos:start="60:27" pos:end="60:27">=</operator> <operator pos:start="60:29" pos:end="60:31">new</operator> <call pos:start="60:33" pos:end="60:45"><name pos:start="60:33" pos:end="60:43"><name pos:start="60:33" pos:end="60:41">ArrayList</name><argument_list type="generic" pos:start="60:42" pos:end="60:43">&lt;&gt;</argument_list></name><argument_list pos:start="60:44" pos:end="60:45">()</argument_list></call></expr>;</expr_stmt>
	</block_content>}</block></constructor>

	<comment type="block" format="javadoc" pos:start="63:9" pos:end="67:11">/**
	 * Checks for an available drone from the fleet.
	 * 
	 * @return true if drone is available, false if it is not.
	 */</comment>
	<function pos:start="68:9" pos:end="72:9"><type pos:start="68:9" pos:end="68:22"><specifier pos:start="68:9" pos:end="68:14">public</specifier> <name pos:start="68:16" pos:end="68:22">boolean</name></type> <name pos:start="68:24" pos:end="68:40">hasAvailableDrone</name><parameter_list pos:start="68:41" pos:end="68:42">()</parameter_list> <block pos:start="68:44" pos:end="72:9">{<block_content pos:start="69:17" pos:end="70:50">
		<expr_stmt pos:start="69:17" pos:end="69:75"><expr pos:start="69:17" pos:end="69:74"><call pos:start="69:17" pos:end="69:74"><name pos:start="69:17" pos:end="69:27"><name pos:start="69:17" pos:end="69:22">LOGGER</name><operator pos:start="69:23" pos:end="69:23">.</operator><name pos:start="69:24" pos:end="69:27">info</name></name><argument_list pos:start="69:28" pos:end="69:74">(<argument pos:start="69:29" pos:end="69:73"><expr pos:start="69:29" pos:end="69:73"><literal type="string" pos:start="69:29" pos:end="69:48">"Drones available: "</literal> <operator pos:start="69:50" pos:end="69:50">+</operator> <call pos:start="69:52" pos:end="69:73"><name pos:start="69:52" pos:end="69:71"><name pos:start="69:52" pos:end="69:66">availableDrones</name><operator pos:start="69:67" pos:end="69:67">.</operator><name pos:start="69:68" pos:end="69:71">size</name></name><argument_list pos:start="69:72" pos:end="69:73">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<return pos:start="70:17" pos:end="70:50">return <expr pos:start="70:24" pos:end="70:49"><call pos:start="70:24" pos:end="70:45"><name pos:start="70:24" pos:end="70:43"><name pos:start="70:24" pos:end="70:38">availableDrones</name><operator pos:start="70:39" pos:end="70:39">.</operator><name pos:start="70:40" pos:end="70:43">size</name></name><argument_list pos:start="70:44" pos:end="70:45">()</argument_list></call> <operator pos:start="70:47" pos:end="70:47">&gt;</operator> <literal type="number" pos:start="70:49" pos:end="70:49">0</literal></expr>;</return>

	</block_content>}</block></function>

	<comment type="block" format="javadoc" pos:start="74:9" pos:end="78:11">/**
	 * Returns the next available drone. Currently uses FIFO to recycle drones.
	 * 
	 * @return
	 */</comment>
	<function pos:start="79:9" pos:end="86:9"><type pos:start="79:9" pos:end="79:27"><specifier pos:start="79:9" pos:end="79:14">public</specifier> <name pos:start="79:16" pos:end="79:27">ManagedDrone</name></type> <name pos:start="79:29" pos:end="79:45">getAvailableDrone</name><parameter_list pos:start="79:46" pos:end="79:47">()</parameter_list> <block pos:start="79:49" pos:end="86:9">{<block_content pos:start="80:17" pos:end="85:36">
		<if_stmt pos:start="80:17" pos:end="85:36"><if pos:start="80:17" pos:end="84:17">if <condition pos:start="80:20" pos:end="80:47">(<expr pos:start="80:21" pos:end="80:46"><operator pos:start="80:21" pos:end="80:21">!</operator><call pos:start="80:22" pos:end="80:46"><name pos:start="80:22" pos:end="80:44"><name pos:start="80:22" pos:end="80:36">availableDrones</name><operator pos:start="80:37" pos:end="80:37">.</operator><name pos:start="80:38" pos:end="80:44">isEmpty</name></name><argument_list pos:start="80:45" pos:end="80:46">()</argument_list></call></expr>)</condition> <block pos:start="80:49" pos:end="84:17">{<block_content pos:start="81:25" pos:end="83:37">
			<decl_stmt pos:start="81:25" pos:end="81:68"><decl pos:start="81:25" pos:end="81:67"><type pos:start="81:25" pos:end="81:36"><name pos:start="81:25" pos:end="81:36">ManagedDrone</name></type> <name pos:start="81:38" pos:end="81:42">drone</name> <init pos:start="81:44" pos:end="81:67">= <expr pos:start="81:46" pos:end="81:67"><call pos:start="81:46" pos:end="81:67"><name pos:start="81:46" pos:end="81:65"><name pos:start="81:46" pos:end="81:60">availableDrones</name><operator pos:start="81:61" pos:end="81:61">.</operator><name pos:start="81:62" pos:end="81:65">poll</name></name><argument_list pos:start="81:66" pos:end="81:67">()</argument_list></call></expr></init></decl>;</decl_stmt>
			<expr_stmt pos:start="82:25" pos:end="82:46"><expr pos:start="82:25" pos:end="82:45"><call pos:start="82:25" pos:end="82:45"><name pos:start="82:25" pos:end="82:38"><name pos:start="82:25" pos:end="82:34">busyDrones</name><operator pos:start="82:35" pos:end="82:35">.</operator><name pos:start="82:36" pos:end="82:38">add</name></name><argument_list pos:start="82:39" pos:end="82:45">(<argument pos:start="82:40" pos:end="82:44"><expr pos:start="82:40" pos:end="82:44"><name pos:start="82:40" pos:end="82:44">drone</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<return pos:start="83:25" pos:end="83:37">return <expr pos:start="83:32" pos:end="83:36"><name pos:start="83:32" pos:end="83:36">drone</name></expr>;</return>
		</block_content>}</block></if> <else pos:start="84:19" pos:end="85:36">else<block type="pseudo" pos:start="85:25" pos:end="85:36"><block_content pos:start="85:25" pos:end="85:36">
			<return pos:start="85:25" pos:end="85:36">return <expr pos:start="85:32" pos:end="85:35"><literal type="null" pos:start="85:32" pos:end="85:35">null</literal></expr>;</return></block_content></block></else></if_stmt>
	</block_content>}</block></function>

	<function pos:start="88:9" pos:end="111:9"><type pos:start="88:9" pos:end="88:27"><specifier pos:start="88:9" pos:end="88:14">public</specifier> <name pos:start="88:16" pos:end="88:27">ManagedDrone</name></type> <name pos:start="88:29" pos:end="88:45">getAvailableDrone</name><parameter_list pos:start="88:46" pos:end="88:71">(<parameter pos:start="88:47" pos:end="88:70"><decl pos:start="88:47" pos:end="88:70"><type pos:start="88:47" pos:end="88:52"><name pos:start="88:47" pos:end="88:52">String</name></type> <name pos:start="88:54" pos:end="88:70">designatedDroneId</name></decl></parameter>)</parameter_list> <block pos:start="88:73" pos:end="111:9">{<block_content pos:start="89:17" pos:end="110:17">
		<synchronized pos:start="89:17" pos:end="110:17">synchronized <init pos:start="89:30" pos:end="89:46">(<expr pos:start="89:31" pos:end="89:45"><name pos:start="89:31" pos:end="89:45">availableDrones</name></expr>)</init> <block pos:start="89:48" pos:end="110:17">{<block_content pos:start="90:25" pos:end="109:36">
			<decl_stmt pos:start="90:25" pos:end="90:50"><decl pos:start="90:25" pos:end="90:49"><type pos:start="90:25" pos:end="90:36"><name pos:start="90:25" pos:end="90:36">ManagedDrone</name></type> <name pos:start="90:38" pos:end="90:42">found</name> <init pos:start="90:44" pos:end="90:49">= <expr pos:start="90:46" pos:end="90:49"><literal type="null" pos:start="90:46" pos:end="90:49">null</literal></expr></init></decl>;</decl_stmt>
			<if_stmt pos:start="91:25" pos:end="108:25"><if pos:start="91:25" pos:end="108:25">if <condition pos:start="91:28" pos:end="91:55">(<expr pos:start="91:29" pos:end="91:54"><operator pos:start="91:29" pos:end="91:29">!</operator><call pos:start="91:30" pos:end="91:54"><name pos:start="91:30" pos:end="91:52"><name pos:start="91:30" pos:end="91:44">availableDrones</name><operator pos:start="91:45" pos:end="91:45">.</operator><name pos:start="91:46" pos:end="91:52">isEmpty</name></name><argument_list pos:start="91:53" pos:end="91:54">()</argument_list></call></expr>)</condition> <block pos:start="91:57" pos:end="108:25">{<block_content pos:start="92:33" pos:end="106:33">
				<for pos:start="92:33" pos:end="97:33">for <control pos:start="92:37" pos:end="92:70">(<init pos:start="92:38" pos:end="92:69"><decl pos:start="92:38" pos:end="92:69"><type pos:start="92:38" pos:end="92:49"><name pos:start="92:38" pos:end="92:49">ManagedDrone</name></type> <name pos:start="92:51" pos:end="92:51">d</name> <range pos:start="92:53" pos:end="92:69">: <expr pos:start="92:55" pos:end="92:69"><name pos:start="92:55" pos:end="92:69">availableDrones</name></expr></range></decl></init>)</control> <block pos:start="92:72" pos:end="97:33">{<block_content pos:start="93:41" pos:end="96:41">
					<if_stmt pos:start="93:41" pos:end="96:41"><if pos:start="93:41" pos:end="96:41">if <condition pos:start="93:44" pos:end="93:87">(<expr pos:start="93:45" pos:end="93:86"><call pos:start="93:45" pos:end="93:60"><name pos:start="93:45" pos:end="93:58"><name pos:start="93:45" pos:end="93:45">d</name><operator pos:start="93:46" pos:end="93:46">.</operator><name pos:start="93:47" pos:end="93:58">getDroneName</name></name><argument_list pos:start="93:59" pos:end="93:60">()</argument_list></call><operator pos:start="93:61" pos:end="93:61">.</operator><call pos:start="93:62" pos:end="93:86"><name pos:start="93:62" pos:end="93:67">equals</name><argument_list pos:start="93:68" pos:end="93:86">(<argument pos:start="93:69" pos:end="93:85"><expr pos:start="93:69" pos:end="93:85"><name pos:start="93:69" pos:end="93:85">designatedDroneId</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="93:89" pos:end="96:41">{<block_content pos:start="94:49" pos:end="95:54">
						<expr_stmt pos:start="94:49" pos:end="94:58"><expr pos:start="94:49" pos:end="94:57"><name pos:start="94:49" pos:end="94:53">found</name> <operator pos:start="94:55" pos:end="94:55">=</operator> <name pos:start="94:57" pos:end="94:57">d</name></expr>;</expr_stmt>
						<break pos:start="95:49" pos:end="95:54">break;</break>
					</block_content>}</block></if></if_stmt>
				</block_content>}</block></for>
				<if_stmt pos:start="98:33" pos:end="106:33"><if pos:start="98:33" pos:end="106:33">if <condition pos:start="98:36" pos:end="98:50">(<expr pos:start="98:37" pos:end="98:49"><name pos:start="98:37" pos:end="98:41">found</name> <operator pos:start="98:43" pos:end="98:44">!=</operator> <literal type="null" pos:start="98:46" pos:end="98:49">null</literal></expr>)</condition> <block pos:start="98:52" pos:end="106:33">{<block_content pos:start="99:41" pos:end="105:41">
					<decl_stmt pos:start="99:41" pos:end="99:88"><decl pos:start="99:41" pos:end="99:87"><type pos:start="99:41" pos:end="99:47"><name pos:start="99:41" pos:end="99:47">boolean</name></type> <name pos:start="99:49" pos:end="99:55">success</name> <init pos:start="99:57" pos:end="99:87">= <expr pos:start="99:59" pos:end="99:87"><call pos:start="99:59" pos:end="99:87"><name pos:start="99:59" pos:end="99:80"><name pos:start="99:59" pos:end="99:73">availableDrones</name><operator pos:start="99:74" pos:end="99:74">.</operator><name pos:start="99:75" pos:end="99:80">remove</name></name><argument_list pos:start="99:81" pos:end="99:87">(<argument pos:start="99:82" pos:end="99:86"><expr pos:start="99:82" pos:end="99:86"><name pos:start="99:82" pos:end="99:86">found</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
					<if_stmt pos:start="100:41" pos:end="105:41"><if pos:start="100:41" pos:end="103:41">if <condition pos:start="100:44" pos:end="100:52">(<expr pos:start="100:45" pos:end="100:51"><name pos:start="100:45" pos:end="100:51">success</name></expr>)</condition> <block pos:start="100:54" pos:end="103:41">{<block_content pos:start="101:49" pos:end="102:61">
						<expr_stmt pos:start="101:49" pos:end="101:70"><expr pos:start="101:49" pos:end="101:69"><call pos:start="101:49" pos:end="101:69"><name pos:start="101:49" pos:end="101:62"><name pos:start="101:49" pos:end="101:58">busyDrones</name><operator pos:start="101:59" pos:end="101:59">.</operator><name pos:start="101:60" pos:end="101:62">add</name></name><argument_list pos:start="101:63" pos:end="101:69">(<argument pos:start="101:64" pos:end="101:68"><expr pos:start="101:64" pos:end="101:68"><name pos:start="101:64" pos:end="101:68">found</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
						<return pos:start="102:49" pos:end="102:61">return <expr pos:start="102:56" pos:end="102:60"><name pos:start="102:56" pos:end="102:60">found</name></expr>;</return>
					</block_content>}</block></if> <else pos:start="103:43" pos:end="105:41">else <block pos:start="103:48" pos:end="105:41">{<block_content pos:start="104:49" pos:end="104:115">
						<expr_stmt pos:start="104:49" pos:end="104:115"><expr pos:start="104:49" pos:end="104:114"><call pos:start="104:49" pos:end="104:114"><name pos:start="104:49" pos:end="104:60"><name pos:start="104:49" pos:end="104:54">LOGGER</name><operator pos:start="104:55" pos:end="104:55">.</operator><name pos:start="104:56" pos:end="104:60">error</name></name><argument_list pos:start="104:61" pos:end="104:114">(<argument pos:start="104:62" pos:end="104:113"><expr pos:start="104:62" pos:end="104:113"><literal type="string" pos:start="104:62" pos:end="104:87">"Error when queuing uav '"</literal> <operator pos:start="104:89" pos:end="104:89">+</operator> <name pos:start="104:91" pos:end="104:107">designatedDroneId</name> <operator pos:start="104:109" pos:end="104:109">+</operator> <literal type="string" pos:start="104:111" pos:end="104:113">"'"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					</block_content>}</block></else></if_stmt>
				</block_content>}</block></if></if_stmt>
				<comment type="line" pos:start="107:33" pos:end="107:105">// LOGGER.error("Error when retrieving uav '" + designatedDroneId + "'");</comment>
			</block_content>}</block></if></if_stmt>
			<return pos:start="109:25" pos:end="109:36">return <expr pos:start="109:32" pos:end="109:35"><literal type="null" pos:start="109:32" pos:end="109:35">null</literal></expr>;</return>
		</block_content>}</block></synchronized>
	</block_content>}</block></function>

	<function pos:start="113:9" pos:end="121:9"><type pos:start="113:9" pos:end="113:20"><specifier pos:start="113:9" pos:end="113:15">private</specifier> <name pos:start="113:17" pos:end="113:20">void</name></type> <name pos:start="113:22" pos:end="113:36">notifyListeners</name><parameter_list pos:start="113:37" pos:end="113:76">(<parameter pos:start="113:38" pos:end="113:48"><decl pos:start="113:38" pos:end="113:48"><type pos:start="113:38" pos:end="113:48"><name pos:start="113:38" pos:end="113:44">boolean</name></type> <name pos:start="113:46" pos:end="113:48">add</name></decl></parameter>, <parameter pos:start="113:51" pos:end="113:75"><decl pos:start="113:51" pos:end="113:75"><type pos:start="113:51" pos:end="113:75"><name pos:start="113:51" pos:end="113:62">ManagedDrone</name></type> <name pos:start="113:64" pos:end="113:75">managedDrone</name></decl></parameter>)</parameter_list> <block pos:start="113:78" pos:end="121:9">{<block_content pos:start="114:17" pos:end="120:42">
		<decl_stmt pos:start="114:17" pos:end="114:52"><decl pos:start="114:17" pos:end="114:51"><type pos:start="114:17" pos:end="114:44"><name pos:start="114:17" pos:end="114:44"><name pos:start="114:17" pos:end="114:24">Consumer</name><argument_list type="generic" pos:start="114:25" pos:end="114:44">&lt;<argument pos:start="114:26" pos:end="114:43"><name pos:start="114:26" pos:end="114:43">DroneFleetListener</name></argument>&gt;</argument_list></name></type> <name pos:start="114:46" pos:end="114:51">update</name></decl>;</decl_stmt> 
		<if_stmt pos:start="115:17" pos:end="119:17"><if pos:start="115:17" pos:end="117:17">if <condition pos:start="115:20" pos:end="115:24">(<expr pos:start="115:21" pos:end="115:23"><name pos:start="115:21" pos:end="115:23">add</name></expr>)</condition> <block pos:start="115:26" pos:end="117:17">{<block_content pos:start="116:25" pos:end="116:79">
			<expr_stmt pos:start="116:25" pos:end="116:79"><expr pos:start="116:25" pos:end="116:78"><name pos:start="116:25" pos:end="116:30">update</name> <operator pos:start="116:32" pos:end="116:32">=</operator> <lambda pos:start="116:34" pos:end="116:78"><parameter_list type="pseudo" pos:start="116:34" pos:end="116:41"><parameter pos:start="116:34" pos:end="116:41"><decl pos:start="116:34" pos:end="116:41"><name pos:start="116:34" pos:end="116:41">listener</name></decl></parameter></parameter_list> -&gt;<block type="pseudo" pos:start="116:46" pos:end="116:78"><block_content pos:start="116:46" pos:end="116:78"> <expr pos:start="116:46" pos:end="116:78"><call pos:start="116:46" pos:end="116:78"><name pos:start="116:46" pos:end="116:64"><name pos:start="116:46" pos:end="116:53">listener</name><operator pos:start="116:54" pos:end="116:54">.</operator><name pos:start="116:55" pos:end="116:64">droneAdded</name></name><argument_list pos:start="116:65" pos:end="116:78">(<argument pos:start="116:66" pos:end="116:77"><expr pos:start="116:66" pos:end="116:77"><name pos:start="116:66" pos:end="116:77">managedDrone</name></expr></argument>)</argument_list></call></expr></block_content></block></lambda></expr>;</expr_stmt>
		</block_content>}</block></if> <else pos:start="117:19" pos:end="119:17">else <block pos:start="117:24" pos:end="119:17">{<block_content pos:start="118:25" pos:end="118:81">
			<expr_stmt pos:start="118:25" pos:end="118:81"><expr pos:start="118:25" pos:end="118:80"><name pos:start="118:25" pos:end="118:30">update</name> <operator pos:start="118:32" pos:end="118:32">=</operator> <lambda pos:start="118:34" pos:end="118:80"><parameter_list type="pseudo" pos:start="118:34" pos:end="118:41"><parameter pos:start="118:34" pos:end="118:41"><decl pos:start="118:34" pos:end="118:41"><name pos:start="118:34" pos:end="118:41">listener</name></decl></parameter></parameter_list> -&gt;<block type="pseudo" pos:start="118:46" pos:end="118:80"><block_content pos:start="118:46" pos:end="118:80"> <expr pos:start="118:46" pos:end="118:80"><call pos:start="118:46" pos:end="118:80"><name pos:start="118:46" pos:end="118:66"><name pos:start="118:46" pos:end="118:53">listener</name><operator pos:start="118:54" pos:end="118:54">.</operator><name pos:start="118:55" pos:end="118:66">droneRemoved</name></name><argument_list pos:start="118:67" pos:end="118:80">(<argument pos:start="118:68" pos:end="118:79"><expr pos:start="118:68" pos:end="118:79"><name pos:start="118:68" pos:end="118:79">managedDrone</name></expr></argument>)</argument_list></call></expr></block_content></block></lambda></expr>;</expr_stmt>
		</block_content>}</block></else></if_stmt>
		<expr_stmt pos:start="120:17" pos:end="120:42"><expr pos:start="120:17" pos:end="120:41"><call pos:start="120:17" pos:end="120:41"><name pos:start="120:17" pos:end="120:33"><name pos:start="120:17" pos:end="120:25">listeners</name><operator pos:start="120:26" pos:end="120:26">.</operator><name pos:start="120:27" pos:end="120:33">forEach</name></name><argument_list pos:start="120:34" pos:end="120:41">(<argument pos:start="120:35" pos:end="120:40"><expr pos:start="120:35" pos:end="120:40"><name pos:start="120:35" pos:end="120:40">update</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	</block_content>}</block></function>

	<comment type="block" format="javadoc" pos:start="123:9" pos:end="127:11">/**
	 * When a drone completes a mission, returns it to the pool of available drones.
	 * 
	 * @param drone
	 */</comment>
	<function pos:start="128:9" pos:end="136:9"><type pos:start="128:9" pos:end="128:19"><specifier pos:start="128:9" pos:end="128:14">public</specifier> <name pos:start="128:16" pos:end="128:19">void</name></type> <name pos:start="128:21" pos:end="128:46">returnDroneToAvailablePool</name><parameter_list pos:start="128:47" pos:end="128:66">(<parameter pos:start="128:48" pos:end="128:65"><decl pos:start="128:48" pos:end="128:65"><type pos:start="128:48" pos:end="128:59"><name pos:start="128:48" pos:end="128:59">ManagedDrone</name></type> <name pos:start="128:61" pos:end="128:65">drone</name></decl></parameter>)</parameter_list> <block pos:start="128:68" pos:end="136:9">{<block_content pos:start="129:17" pos:end="134:45">
		<if_stmt pos:start="129:17" pos:end="131:17"><if pos:start="129:17" pos:end="131:17">if <condition pos:start="129:20" pos:end="129:47">(<expr pos:start="129:21" pos:end="129:46"><call pos:start="129:21" pos:end="129:46"><name pos:start="129:21" pos:end="129:39"><name pos:start="129:21" pos:end="129:30">busyDrones</name><operator pos:start="129:31" pos:end="129:31">.</operator><name pos:start="129:32" pos:end="129:39">contains</name></name><argument_list pos:start="129:40" pos:end="129:46">(<argument pos:start="129:41" pos:end="129:45"><expr pos:start="129:41" pos:end="129:45"><name pos:start="129:41" pos:end="129:45">drone</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="129:49" pos:end="131:17">{<block_content pos:start="130:25" pos:end="130:49">
			<expr_stmt pos:start="130:25" pos:end="130:49"><expr pos:start="130:25" pos:end="130:48"><call pos:start="130:25" pos:end="130:48"><name pos:start="130:25" pos:end="130:41"><name pos:start="130:25" pos:end="130:34">busyDrones</name><operator pos:start="130:35" pos:end="130:35">.</operator><name pos:start="130:36" pos:end="130:41">remove</name></name><argument_list pos:start="130:42" pos:end="130:48">(<argument pos:start="130:43" pos:end="130:47"><expr pos:start="130:43" pos:end="130:47"><name pos:start="130:43" pos:end="130:47">drone</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		</block_content>}</block></if></if_stmt>
		<comment type="line" pos:start="132:17" pos:end="132:89">// LOGGER.info("Drone '"+drone.getDroneName()+"' added to available drone</comment>
		<comment type="line" pos:start="133:17" pos:end="133:26">// pool");</comment>
		<expr_stmt pos:start="134:17" pos:end="134:45"><expr pos:start="134:17" pos:end="134:44"><call pos:start="134:17" pos:end="134:44"><name pos:start="134:17" pos:end="134:37"><name pos:start="134:17" pos:end="134:31">availableDrones</name><operator pos:start="134:32" pos:end="134:32">.</operator><name pos:start="134:33" pos:end="134:37">offer</name></name><argument_list pos:start="134:38" pos:end="134:44">(<argument pos:start="134:39" pos:end="134:43"><expr pos:start="134:39" pos:end="134:43"><name pos:start="134:39" pos:end="134:43">drone</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	</block_content>}</block></function>

	<function pos:start="138:9" pos:end="146:9"><type pos:start="138:9" pos:end="138:19"><specifier pos:start="138:9" pos:end="138:14">public</specifier> <name pos:start="138:16" pos:end="138:19">void</name></type> <name pos:start="138:21" pos:end="138:28">addDrone</name><parameter_list pos:start="138:29" pos:end="138:55">(<parameter pos:start="138:30" pos:end="138:54"><decl pos:start="138:30" pos:end="138:54"><type pos:start="138:30" pos:end="138:41"><name pos:start="138:30" pos:end="138:41">ManagedDrone</name></type> <name pos:start="138:43" pos:end="138:54">managedDrone</name></decl></parameter>)</parameter_list> <throws pos:start="138:57" pos:end="138:77">throws <argument pos:start="138:64" pos:end="138:77"><expr pos:start="138:64" pos:end="138:77"><name pos:start="138:64" pos:end="138:77">DroneException</name></expr></argument></throws> <block pos:start="138:79" pos:end="146:9">{<block_content pos:start="139:17" pos:end="144:52">
		<if_stmt pos:start="139:17" pos:end="141:17"><if pos:start="139:17" pos:end="141:17">if <condition pos:start="139:20" pos:end="139:78">(<expr pos:start="139:21" pos:end="139:77"><call pos:start="139:21" pos:end="139:77"><name pos:start="139:21" pos:end="139:48"><name pos:start="139:21" pos:end="139:36">registeredDrones</name><operator pos:start="139:37" pos:end="139:37">.</operator><name pos:start="139:38" pos:end="139:48">containsKey</name></name><argument_list pos:start="139:49" pos:end="139:77">(<argument pos:start="139:50" pos:end="139:76"><expr pos:start="139:50" pos:end="139:76"><call pos:start="139:50" pos:end="139:76"><name pos:start="139:50" pos:end="139:74"><name pos:start="139:50" pos:end="139:61">managedDrone</name><operator pos:start="139:62" pos:end="139:62">.</operator><name pos:start="139:63" pos:end="139:74">getDroneName</name></name><argument_list pos:start="139:75" pos:end="139:76">()</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="139:80" pos:end="141:17">{<block_content pos:start="140:25" pos:end="140:115">
			<throw pos:start="140:25" pos:end="140:115">throw <expr pos:start="140:31" pos:end="140:114"><operator pos:start="140:31" pos:end="140:33">new</operator> <call pos:start="140:35" pos:end="140:114"><name pos:start="140:35" pos:end="140:48">DroneException</name><argument_list pos:start="140:49" pos:end="140:114">(<argument pos:start="140:50" pos:end="140:113"><expr pos:start="140:50" pos:end="140:113"><literal type="string" pos:start="140:50" pos:end="140:58">"Drone '"</literal> <operator pos:start="140:60" pos:end="140:60">+</operator> <call pos:start="140:62" pos:end="140:88"><name pos:start="140:62" pos:end="140:86"><name pos:start="140:62" pos:end="140:73">managedDrone</name><operator pos:start="140:74" pos:end="140:74">.</operator><name pos:start="140:75" pos:end="140:86">getDroneName</name></name><argument_list pos:start="140:87" pos:end="140:88">()</argument_list></call> <operator pos:start="140:90" pos:end="140:90">+</operator> <literal type="string" pos:start="140:92" pos:end="140:113">"' already registered"</literal></expr></argument>)</argument_list></call></expr>;</throw>
		</block_content>}</block></if></if_stmt>
		<expr_stmt pos:start="142:17" pos:end="142:80"><expr pos:start="142:17" pos:end="142:79"><call pos:start="142:17" pos:end="142:79"><name pos:start="142:17" pos:end="142:36"><name pos:start="142:17" pos:end="142:32">registeredDrones</name><operator pos:start="142:33" pos:end="142:33">.</operator><name pos:start="142:34" pos:end="142:36">put</name></name><argument_list pos:start="142:37" pos:end="142:79">(<argument pos:start="142:38" pos:end="142:64"><expr pos:start="142:38" pos:end="142:64"><call pos:start="142:38" pos:end="142:64"><name pos:start="142:38" pos:end="142:62"><name pos:start="142:38" pos:end="142:49">managedDrone</name><operator pos:start="142:50" pos:end="142:50">.</operator><name pos:start="142:51" pos:end="142:62">getDroneName</name></name><argument_list pos:start="142:63" pos:end="142:64">()</argument_list></call></expr></argument>, <argument pos:start="142:67" pos:end="142:78"><expr pos:start="142:67" pos:end="142:78"><name pos:start="142:67" pos:end="142:78">managedDrone</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt pos:start="143:17" pos:end="143:57"><expr pos:start="143:17" pos:end="143:56"><call pos:start="143:17" pos:end="143:56"><name pos:start="143:17" pos:end="143:42">returnDroneToAvailablePool</name><argument_list pos:start="143:43" pos:end="143:56">(<argument pos:start="143:44" pos:end="143:55"><expr pos:start="143:44" pos:end="143:55"><name pos:start="143:44" pos:end="143:55">managedDrone</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt pos:start="144:17" pos:end="144:52"><expr pos:start="144:17" pos:end="144:51"><call pos:start="144:17" pos:end="144:51"><name pos:start="144:17" pos:end="144:31">notifyListeners</name><argument_list pos:start="144:32" pos:end="144:51">(<argument pos:start="144:33" pos:end="144:36"><expr pos:start="144:33" pos:end="144:36"><literal type="boolean" pos:start="144:33" pos:end="144:36">true</literal></expr></argument>, <argument pos:start="144:39" pos:end="144:50"><expr pos:start="144:39" pos:end="144:50"><name pos:start="144:39" pos:end="144:50">managedDrone</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	</block_content>}</block></function>

	<function pos:start="148:9" pos:end="160:9"><type pos:start="148:9" pos:end="148:19"><specifier pos:start="148:9" pos:end="148:14">public</specifier> <name pos:start="148:16" pos:end="148:19">void</name></type> <name pos:start="148:21" pos:end="148:31">removeDrone</name><parameter_list pos:start="148:32" pos:end="148:58">(<parameter pos:start="148:33" pos:end="148:57"><decl pos:start="148:33" pos:end="148:57"><type pos:start="148:33" pos:end="148:44"><name pos:start="148:33" pos:end="148:44">ManagedDrone</name></type> <name pos:start="148:46" pos:end="148:57">managedDrone</name></decl></parameter>)</parameter_list> <throws pos:start="148:60" pos:end="148:80">throws <argument pos:start="148:67" pos:end="148:80"><expr pos:start="148:67" pos:end="148:80"><name pos:start="148:67" pos:end="148:80">DroneException</name></expr></argument></throws> <block pos:start="148:82" pos:end="160:9">{<block_content pos:start="149:17" pos:end="159:53">
		<decl_stmt pos:start="149:17" pos:end="149:90"><decl pos:start="149:17" pos:end="149:89"><type pos:start="149:17" pos:end="149:28"><name pos:start="149:17" pos:end="149:28">ManagedDrone</name></type> <name pos:start="149:30" pos:end="149:34">value</name> <init pos:start="149:36" pos:end="149:89">= <expr pos:start="149:38" pos:end="149:89"><call pos:start="149:38" pos:end="149:89"><name pos:start="149:38" pos:end="149:60"><name pos:start="149:38" pos:end="149:53">registeredDrones</name><operator pos:start="149:54" pos:end="149:54">.</operator><name pos:start="149:55" pos:end="149:60">remove</name></name><argument_list pos:start="149:61" pos:end="149:89">(<argument pos:start="149:62" pos:end="149:88"><expr pos:start="149:62" pos:end="149:88"><call pos:start="149:62" pos:end="149:88"><name pos:start="149:62" pos:end="149:86"><name pos:start="149:62" pos:end="149:73">managedDrone</name><operator pos:start="149:74" pos:end="149:74">.</operator><name pos:start="149:75" pos:end="149:86">getDroneName</name></name><argument_list pos:start="149:87" pos:end="149:88">()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<if_stmt pos:start="150:17" pos:end="152:17"><if pos:start="150:17" pos:end="152:17">if <condition pos:start="150:20" pos:end="150:34">(<expr pos:start="150:21" pos:end="150:33"><name pos:start="150:21" pos:end="150:25">value</name> <operator pos:start="150:27" pos:end="150:28">==</operator> <literal type="null" pos:start="150:30" pos:end="150:33">null</literal></expr>)</condition> <block pos:start="150:36" pos:end="152:17">{<block_content pos:start="151:25" pos:end="151:117">
			<throw pos:start="151:25" pos:end="151:117">throw <expr pos:start="151:31" pos:end="151:116"><operator pos:start="151:31" pos:end="151:33">new</operator> <call pos:start="151:35" pos:end="151:116"><name pos:start="151:35" pos:end="151:48">DroneException</name><argument_list pos:start="151:49" pos:end="151:116">(<argument pos:start="151:50" pos:end="151:115"><expr pos:start="151:50" pos:end="151:115"><literal type="string" pos:start="151:50" pos:end="151:58">"Drone '"</literal> <operator pos:start="151:60" pos:end="151:60">+</operator> <call pos:start="151:62" pos:end="151:88"><name pos:start="151:62" pos:end="151:86"><name pos:start="151:62" pos:end="151:73">managedDrone</name><operator pos:start="151:74" pos:end="151:74">.</operator><name pos:start="151:75" pos:end="151:86">getDroneName</name></name><argument_list pos:start="151:87" pos:end="151:88">()</argument_list></call> <operator pos:start="151:90" pos:end="151:90">+</operator> <literal type="string" pos:start="151:92" pos:end="151:115">"' not found registered"</literal></expr></argument>)</argument_list></call></expr>;</throw>
		</block_content>}</block></if></if_stmt>
		<expr_stmt pos:start="153:17" pos:end="153:109"><expr pos:start="153:17" pos:end="153:108"><call pos:start="153:17" pos:end="153:108"><name pos:start="153:17" pos:end="153:27"><name pos:start="153:17" pos:end="153:22">LOGGER</name><operator pos:start="153:23" pos:end="153:23">.</operator><name pos:start="153:24" pos:end="153:27">info</name></name><argument_list pos:start="153:28" pos:end="153:108">(<argument pos:start="153:29" pos:end="153:107"><expr pos:start="153:29" pos:end="153:107"><literal type="string" pos:start="153:29" pos:end="153:37">"Drone '"</literal> <operator pos:start="153:39" pos:end="153:39">+</operator> <call pos:start="153:41" pos:end="153:67"><name pos:start="153:41" pos:end="153:65"><name pos:start="153:41" pos:end="153:52">managedDrone</name><operator pos:start="153:53" pos:end="153:53">.</operator><name pos:start="153:54" pos:end="153:65">getDroneName</name></name><argument_list pos:start="153:66" pos:end="153:67">()</argument_list></call> <operator pos:start="153:69" pos:end="153:69">+</operator> <literal type="string" pos:start="153:71" pos:end="153:107">"' removed from available drone pool"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt pos:start="154:17" pos:end="155:141"><expr pos:start="154:17" pos:end="155:140"><call pos:start="154:17" pos:end="154:56"><name pos:start="154:17" pos:end="154:54"><name pos:start="154:17" pos:end="154:42">DronologyMonitoringManager</name><operator pos:start="154:43" pos:end="154:43">.</operator><name pos:start="154:44" pos:end="154:54">getInstance</name></name><argument_list pos:start="154:55" pos:end="154:56">()</argument_list></call>
				<operator pos:start="155:33" pos:end="155:33">.</operator><call pos:start="155:34" pos:end="155:140"><name pos:start="155:34" pos:end="155:40">publish</name><argument_list pos:start="155:41" pos:end="155:140">(<argument pos:start="155:42" pos:end="155:139"><expr pos:start="155:42" pos:end="155:139"><call pos:start="155:42" pos:end="155:139"><name pos:start="155:42" pos:end="155:72"><name pos:start="155:42" pos:end="155:58">MessageMarshaller</name><operator pos:start="155:59" pos:end="155:59">.</operator><name pos:start="155:60" pos:end="155:72">createMessage</name></name><argument_list pos:start="155:73" pos:end="155:139">(<argument pos:start="155:74" pos:end="155:109"><expr pos:start="155:74" pos:end="155:109"><name pos:start="155:74" pos:end="155:109"><name pos:start="155:74" pos:end="155:84">MessageType</name><operator pos:start="155:85" pos:end="155:85">.</operator><name pos:start="155:86" pos:end="155:109">PHYSICAL_UAV_DEACTIVATED</name></name></expr></argument>, <argument pos:start="155:112" pos:end="155:138"><expr pos:start="155:112" pos:end="155:138"><call pos:start="155:112" pos:end="155:138"><name pos:start="155:112" pos:end="155:136"><name pos:start="155:112" pos:end="155:123">managedDrone</name><operator pos:start="155:124" pos:end="155:124">.</operator><name pos:start="155:125" pos:end="155:136">getDroneName</name></name><argument_list pos:start="155:137" pos:end="155:138">()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt pos:start="156:17" pos:end="156:46"><expr pos:start="156:17" pos:end="156:45"><call pos:start="156:17" pos:end="156:45"><name pos:start="156:17" pos:end="156:38"><name pos:start="156:17" pos:end="156:31">availableDrones</name><operator pos:start="156:32" pos:end="156:32">.</operator><name pos:start="156:33" pos:end="156:38">remove</name></name><argument_list pos:start="156:39" pos:end="156:45">(<argument pos:start="156:40" pos:end="156:44"><expr pos:start="156:40" pos:end="156:44"><name pos:start="156:40" pos:end="156:44">value</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<comment type="line" pos:start="157:17" pos:end="157:120">// TODO change how this class uses managed drone. Stopping must be sent to the drone using a goal model.</comment>
		<expr_stmt pos:start="158:17" pos:end="158:29"><expr pos:start="158:17" pos:end="158:28"><call pos:start="158:17" pos:end="158:28"><name pos:start="158:17" pos:end="158:26"><name pos:start="158:17" pos:end="158:21">value</name><operator pos:start="158:22" pos:end="158:22">.</operator><name pos:start="158:23" pos:end="158:26">stop</name></name><argument_list pos:start="158:27" pos:end="158:28">()</argument_list></call></expr>;</expr_stmt>
		<expr_stmt pos:start="159:17" pos:end="159:53"><expr pos:start="159:17" pos:end="159:52"><call pos:start="159:17" pos:end="159:52"><name pos:start="159:17" pos:end="159:31">notifyListeners</name><argument_list pos:start="159:32" pos:end="159:52">(<argument pos:start="159:33" pos:end="159:37"><expr pos:start="159:33" pos:end="159:37"><literal type="boolean" pos:start="159:33" pos:end="159:37">false</literal></expr></argument>, <argument pos:start="159:40" pos:end="159:51"><expr pos:start="159:40" pos:end="159:51"><name pos:start="159:40" pos:end="159:51">managedDrone</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	</block_content>}</block></function>

	<function pos:start="162:9" pos:end="168:9"><type pos:start="162:9" pos:end="162:27"><specifier pos:start="162:9" pos:end="162:14">public</specifier> <name pos:start="162:16" pos:end="162:27">ManagedDrone</name></type> <name pos:start="162:29" pos:end="162:46">getRegisteredDrone</name><parameter_list pos:start="162:47" pos:end="162:60">(<parameter pos:start="162:48" pos:end="162:59"><decl pos:start="162:48" pos:end="162:59"><type pos:start="162:48" pos:end="162:53"><name pos:start="162:48" pos:end="162:53">String</name></type> <name pos:start="162:55" pos:end="162:59">uavid</name></decl></parameter>)</parameter_list> <throws pos:start="162:62" pos:end="162:82">throws <argument pos:start="162:69" pos:end="162:82"><expr pos:start="162:69" pos:end="162:82"><name pos:start="162:69" pos:end="162:82">DroneException</name></expr></argument></throws> <block pos:start="162:84" pos:end="168:9">{<block_content pos:start="163:17" pos:end="166:51">
		<if_stmt pos:start="163:17" pos:end="165:17"><if pos:start="163:17" pos:end="165:17">if <condition pos:start="163:20" pos:end="163:57">(<expr pos:start="163:21" pos:end="163:56"><operator pos:start="163:21" pos:end="163:21">!</operator><call pos:start="163:22" pos:end="163:56"><name pos:start="163:22" pos:end="163:49"><name pos:start="163:22" pos:end="163:37">registeredDrones</name><operator pos:start="163:38" pos:end="163:38">.</operator><name pos:start="163:39" pos:end="163:49">containsKey</name></name><argument_list pos:start="163:50" pos:end="163:56">(<argument pos:start="163:51" pos:end="163:55"><expr pos:start="163:51" pos:end="163:55"><name pos:start="163:51" pos:end="163:55">uavid</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="163:59" pos:end="165:17">{<block_content pos:start="164:25" pos:end="164:95">
			<throw pos:start="164:25" pos:end="164:95">throw <expr pos:start="164:31" pos:end="164:94"><operator pos:start="164:31" pos:end="164:33">new</operator> <call pos:start="164:35" pos:end="164:94"><name pos:start="164:35" pos:end="164:48">DroneException</name><argument_list pos:start="164:49" pos:end="164:94">(<argument pos:start="164:50" pos:end="164:93"><expr pos:start="164:50" pos:end="164:93"><literal type="string" pos:start="164:50" pos:end="164:58">"Drone '"</literal> <operator pos:start="164:60" pos:end="164:60">+</operator> <name pos:start="164:62" pos:end="164:66">uavid</name> <operator pos:start="164:68" pos:end="164:68">+</operator> <literal type="string" pos:start="164:70" pos:end="164:93">"' not found registered"</literal></expr></argument>)</argument_list></call></expr>;</throw>
		</block_content>}</block></if></if_stmt>
		<return pos:start="166:17" pos:end="166:51">return <expr pos:start="166:24" pos:end="166:50"><call pos:start="166:24" pos:end="166:50"><name pos:start="166:24" pos:end="166:43"><name pos:start="166:24" pos:end="166:39">registeredDrones</name><operator pos:start="166:40" pos:end="166:40">.</operator><name pos:start="166:41" pos:end="166:43">get</name></name><argument_list pos:start="166:44" pos:end="166:50">(<argument pos:start="166:45" pos:end="166:49"><expr pos:start="166:45" pos:end="166:49"><name pos:start="166:45" pos:end="166:49">uavid</name></expr></argument>)</argument_list></call></expr>;</return>

	</block_content>}</block></function>

	<function pos:start="170:9" pos:end="173:9"><type pos:start="170:9" pos:end="170:33"><specifier pos:start="170:9" pos:end="170:14">public</specifier> <name pos:start="170:16" pos:end="170:33"><name pos:start="170:16" pos:end="170:19">List</name><argument_list type="generic" pos:start="170:20" pos:end="170:33">&lt;<argument pos:start="170:21" pos:end="170:32"><name pos:start="170:21" pos:end="170:32">ManagedDrone</name></argument>&gt;</argument_list></name></type> <name pos:start="170:35" pos:end="170:53">getRegisteredDrones</name><parameter_list pos:start="170:54" pos:end="170:55">()</parameter_list> <block pos:start="170:57" pos:end="173:9">{<block_content pos:start="171:17" pos:end="171:66"> 
		<return pos:start="171:17" pos:end="171:66">return <expr pos:start="171:24" pos:end="171:65"><operator pos:start="171:24" pos:end="171:26">new</operator> <call pos:start="171:28" pos:end="171:65"><name pos:start="171:28" pos:end="171:38"><name pos:start="171:28" pos:end="171:36">ArrayList</name><argument_list type="generic" pos:start="171:37" pos:end="171:38">&lt;&gt;</argument_list></name><argument_list pos:start="171:39" pos:end="171:65">(<argument pos:start="171:40" pos:end="171:64"><expr pos:start="171:40" pos:end="171:64"><call pos:start="171:40" pos:end="171:64"><name pos:start="171:40" pos:end="171:62"><name pos:start="171:40" pos:end="171:55">registeredDrones</name><operator pos:start="171:56" pos:end="171:56">.</operator><name pos:start="171:57" pos:end="171:62">values</name></name><argument_list pos:start="171:63" pos:end="171:64">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>

	</block_content>}</block></function>

	<function pos:start="175:9" pos:end="178:9"><type pos:start="175:9" pos:end="175:19"><specifier pos:start="175:9" pos:end="175:14">public</specifier> <name pos:start="175:16" pos:end="175:19">void</name></type> <name pos:start="175:21" pos:end="175:34">unregisterDroe</name><parameter_list pos:start="175:35" pos:end="175:45">(<parameter pos:start="175:36" pos:end="175:44"><decl pos:start="175:36" pos:end="175:44"><type pos:start="175:36" pos:end="175:41"><name pos:start="175:36" pos:end="175:41">String</name></type> <name pos:start="175:43" pos:end="175:44">id</name></decl></parameter>)</parameter_list> <throws pos:start="175:47" pos:end="175:67">throws <argument pos:start="175:54" pos:end="175:67"><expr pos:start="175:54" pos:end="175:67"><name pos:start="175:54" pos:end="175:67">DroneException</name></expr></argument></throws> <block pos:start="175:69" pos:end="178:9">{<block_content pos:start="176:17" pos:end="177:42">
		<decl_stmt pos:start="176:17" pos:end="176:67"><decl pos:start="176:17" pos:end="176:66"><type pos:start="176:17" pos:end="176:28"><name pos:start="176:17" pos:end="176:28">ManagedDrone</name></type> <name pos:start="176:30" pos:end="176:41">managedDrone</name> <init pos:start="176:43" pos:end="176:66">= <expr pos:start="176:45" pos:end="176:66"><call pos:start="176:45" pos:end="176:66"><name pos:start="176:45" pos:end="176:62">getRegisteredDrone</name><argument_list pos:start="176:63" pos:end="176:66">(<argument pos:start="176:64" pos:end="176:65"><expr pos:start="176:64" pos:end="176:65"><name pos:start="176:64" pos:end="176:65">id</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt pos:start="177:17" pos:end="177:42"><expr pos:start="177:17" pos:end="177:41"><call pos:start="177:17" pos:end="177:41"><name pos:start="177:17" pos:end="177:27">removeDrone</name><argument_list pos:start="177:28" pos:end="177:41">(<argument pos:start="177:29" pos:end="177:40"><expr pos:start="177:29" pos:end="177:40"><name pos:start="177:29" pos:end="177:40">managedDrone</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	</block_content>}</block></function>

	<function pos:start="180:9" pos:end="182:9"><type pos:start="180:9" pos:end="180:19"><specifier pos:start="180:9" pos:end="180:14">public</specifier> <name pos:start="180:16" pos:end="180:19">void</name></type> <name pos:start="180:21" pos:end="180:41">addDroneFleetListener</name><parameter_list pos:start="180:42" pos:end="180:70">(<parameter pos:start="180:43" pos:end="180:69"><decl pos:start="180:43" pos:end="180:69"><type pos:start="180:43" pos:end="180:60"><name pos:start="180:43" pos:end="180:60">DroneFleetListener</name></type> <name pos:start="180:62" pos:end="180:69">listener</name></decl></parameter>)</parameter_list> <block pos:start="180:72" pos:end="182:9">{<block_content pos:start="181:17" pos:end="181:40">
		<expr_stmt pos:start="181:17" pos:end="181:40"><expr pos:start="181:17" pos:end="181:39"><call pos:start="181:17" pos:end="181:39"><name pos:start="181:17" pos:end="181:29"><name pos:start="181:17" pos:end="181:25">listeners</name><operator pos:start="181:26" pos:end="181:26">.</operator><name pos:start="181:27" pos:end="181:29">add</name></name><argument_list pos:start="181:30" pos:end="181:39">(<argument pos:start="181:31" pos:end="181:38"><expr pos:start="181:31" pos:end="181:38"><name pos:start="181:31" pos:end="181:38">listener</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	</block_content>}</block></function>

}</block></class>
</unit>
