<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="Java" filename="flatCode/FakePassivPythonGroundstation2.java" pos:tabs="8"><package pos:start="1:1" pos:end="1:34">package <name pos:start="1:9" pos:end="1:33"><name pos:start="1:9" pos:end="1:11">edu</name><operator pos:start="1:12" pos:end="1:12">.</operator><name pos:start="1:13" pos:end="1:14">nd</name><operator pos:start="1:15" pos:end="1:15">.</operator><name pos:start="1:16" pos:end="1:24">dronology</name><operator pos:start="1:25" pos:end="1:25">.</operator><name pos:start="1:26" pos:end="1:29">misc</name><operator pos:start="1:30" pos:end="1:30">.</operator><name pos:start="1:31" pos:end="1:33">gcs</name></name>;</package>

<import pos:start="3:1" pos:end="3:30">import <name pos:start="3:8" pos:end="3:29"><name pos:start="3:8" pos:end="3:11">java</name><operator pos:start="3:12" pos:end="3:12">.</operator><name pos:start="3:13" pos:end="3:14">io</name><operator pos:start="3:15" pos:end="3:15">.</operator><name pos:start="3:16" pos:end="3:29">BufferedReader</name></name>;</import>
<import pos:start="4:1" pos:end="4:30">import <name pos:start="4:8" pos:end="4:29"><name pos:start="4:8" pos:end="4:11">java</name><operator pos:start="4:12" pos:end="4:12">.</operator><name pos:start="4:13" pos:end="4:14">io</name><operator pos:start="4:15" pos:end="4:15">.</operator><name pos:start="4:16" pos:end="4:29">BufferedWriter</name></name>;</import>
<import pos:start="5:1" pos:end="5:27">import <name pos:start="5:8" pos:end="5:26"><name pos:start="5:8" pos:end="5:11">java</name><operator pos:start="5:12" pos:end="5:12">.</operator><name pos:start="5:13" pos:end="5:14">io</name><operator pos:start="5:15" pos:end="5:15">.</operator><name pos:start="5:16" pos:end="5:26">InputStream</name></name>;</import>
<import pos:start="6:1" pos:end="6:33">import <name pos:start="6:8" pos:end="6:32"><name pos:start="6:8" pos:end="6:11">java</name><operator pos:start="6:12" pos:end="6:12">.</operator><name pos:start="6:13" pos:end="6:14">io</name><operator pos:start="6:15" pos:end="6:15">.</operator><name pos:start="6:16" pos:end="6:32">InputStreamReader</name></name>;</import>
<import pos:start="7:1" pos:end="7:28">import <name pos:start="7:8" pos:end="7:27"><name pos:start="7:8" pos:end="7:11">java</name><operator pos:start="7:12" pos:end="7:12">.</operator><name pos:start="7:13" pos:end="7:14">io</name><operator pos:start="7:15" pos:end="7:15">.</operator><name pos:start="7:16" pos:end="7:27">OutputStream</name></name>;</import>
<import pos:start="8:1" pos:end="8:34">import <name pos:start="8:8" pos:end="8:33"><name pos:start="8:8" pos:end="8:11">java</name><operator pos:start="8:12" pos:end="8:12">.</operator><name pos:start="8:13" pos:end="8:14">io</name><operator pos:start="8:15" pos:end="8:15">.</operator><name pos:start="8:16" pos:end="8:33">OutputStreamWriter</name></name>;</import>
<import pos:start="9:1" pos:end="9:34">import <name pos:start="9:8" pos:end="9:33"><name pos:start="9:8" pos:end="9:11">java</name><operator pos:start="9:12" pos:end="9:12">.</operator><name pos:start="9:13" pos:end="9:15">net</name><operator pos:start="9:16" pos:end="9:16">.</operator><name pos:start="9:17" pos:end="9:33">InetSocketAddress</name></name>;</import>
<import pos:start="10:1" pos:end="10:23">import <name pos:start="10:8" pos:end="10:22"><name pos:start="10:8" pos:end="10:11">java</name><operator pos:start="10:12" pos:end="10:12">.</operator><name pos:start="10:13" pos:end="10:15">net</name><operator pos:start="10:16" pos:end="10:16">.</operator><name pos:start="10:17" pos:end="10:22">Socket</name></name>;</import>
<import pos:start="11:1" pos:end="11:28">import <name pos:start="11:8" pos:end="11:27"><name pos:start="11:8" pos:end="11:11">java</name><operator pos:start="11:12" pos:end="11:12">.</operator><name pos:start="11:13" pos:end="11:16">text</name><operator pos:start="11:17" pos:end="11:17">.</operator><name pos:start="11:18" pos:end="11:27">DateFormat</name></name>;</import>
<import pos:start="12:1" pos:end="12:24">import <name pos:start="12:8" pos:end="12:23"><name pos:start="12:8" pos:end="12:11">java</name><operator pos:start="12:12" pos:end="12:12">.</operator><name pos:start="12:13" pos:end="12:16">util</name><operator pos:start="12:17" pos:end="12:17">.</operator><name pos:start="12:18" pos:end="12:23">Random</name></name>;</import>

<import pos:start="14:1" pos:end="14:41">import <name pos:start="14:8" pos:end="14:40"><name pos:start="14:8" pos:end="14:10">com</name><operator pos:start="14:11" pos:end="14:11">.</operator><name pos:start="14:12" pos:end="14:17">google</name><operator pos:start="14:18" pos:end="14:18">.</operator><name pos:start="14:19" pos:end="14:22">gson</name><operator pos:start="14:23" pos:end="14:23">.</operator><name pos:start="14:24" pos:end="14:40">FieldNamingPolicy</name></name>;</import>
<import pos:start="15:1" pos:end="15:28">import <name pos:start="15:8" pos:end="15:27"><name pos:start="15:8" pos:end="15:10">com</name><operator pos:start="15:11" pos:end="15:11">.</operator><name pos:start="15:12" pos:end="15:17">google</name><operator pos:start="15:18" pos:end="15:18">.</operator><name pos:start="15:19" pos:end="15:22">gson</name><operator pos:start="15:23" pos:end="15:23">.</operator><name pos:start="15:24" pos:end="15:27">Gson</name></name>;</import>
<import pos:start="16:1" pos:end="16:35">import <name pos:start="16:8" pos:end="16:34"><name pos:start="16:8" pos:end="16:10">com</name><operator pos:start="16:11" pos:end="16:11">.</operator><name pos:start="16:12" pos:end="16:17">google</name><operator pos:start="16:18" pos:end="16:18">.</operator><name pos:start="16:19" pos:end="16:22">gson</name><operator pos:start="16:23" pos:end="16:23">.</operator><name pos:start="16:24" pos:end="16:34">GsonBuilder</name></name>;</import>

<import pos:start="18:1" pos:end="18:54">import <name pos:start="18:8" pos:end="18:53"><name pos:start="18:8" pos:end="18:10">edu</name><operator pos:start="18:11" pos:end="18:11">.</operator><name pos:start="18:12" pos:end="18:13">nd</name><operator pos:start="18:14" pos:end="18:14">.</operator><name pos:start="18:15" pos:end="18:23">dronology</name><operator pos:start="18:24" pos:end="18:24">.</operator><name pos:start="18:25" pos:end="18:28">core</name><operator pos:start="18:29" pos:end="18:29">.</operator><name pos:start="18:30" pos:end="18:39">coordinate</name><operator pos:start="18:40" pos:end="18:40">.</operator><name pos:start="18:41" pos:end="18:53">LlaCoordinate</name></name>;</import>
<import pos:start="19:1" pos:end="19:72">import <name pos:start="19:8" pos:end="19:71"><name pos:start="19:8" pos:end="19:10">edu</name><operator pos:start="19:11" pos:end="19:11">.</operator><name pos:start="19:12" pos:end="19:13">nd</name><operator pos:start="19:14" pos:end="19:14">.</operator><name pos:start="19:15" pos:end="19:23">dronology</name><operator pos:start="19:24" pos:end="19:24">.</operator><name pos:start="19:25" pos:end="19:28">core</name><operator pos:start="19:29" pos:end="19:29">.</operator><name pos:start="19:30" pos:end="19:36">vehicle</name><operator pos:start="19:37" pos:end="19:37">.</operator><name pos:start="19:38" pos:end="19:60">DroneFlightStateManager</name><operator pos:start="19:61" pos:end="19:61">.</operator><name pos:start="19:62" pos:end="19:71">FlightMode</name></name>;</import>
<import pos:start="20:1" pos:end="20:72">import <name pos:start="20:8" pos:end="20:71"><name pos:start="20:8" pos:end="20:10">edu</name><operator pos:start="20:11" pos:end="20:11">.</operator><name pos:start="20:12" pos:end="20:13">nd</name><operator pos:start="20:14" pos:end="20:14">.</operator><name pos:start="20:15" pos:end="20:23">dronology</name><operator pos:start="20:24" pos:end="20:24">.</operator><name pos:start="20:25" pos:end="20:28">core</name><operator pos:start="20:29" pos:end="20:29">.</operator><name pos:start="20:30" pos:end="20:36">vehicle</name><operator pos:start="20:37" pos:end="20:37">.</operator><name pos:start="20:38" pos:end="20:45">commands</name><operator pos:start="20:46" pos:end="20:46">.</operator><name pos:start="20:47" pos:end="20:71">ConnectionResponseCommand</name></name>;</import>
<import pos:start="21:1" pos:end="21:77">import <name pos:start="21:8" pos:end="21:76"><name pos:start="21:8" pos:end="21:10">edu</name><operator pos:start="21:11" pos:end="21:11">.</operator><name pos:start="21:12" pos:end="21:13">nd</name><operator pos:start="21:14" pos:end="21:14">.</operator><name pos:start="21:15" pos:end="21:23">dronology</name><operator pos:start="21:24" pos:end="21:24">.</operator><name pos:start="21:25" pos:end="21:32">gstation</name><operator pos:start="21:33" pos:end="21:33">.</operator><name pos:start="21:34" pos:end="21:42">connector</name><operator pos:start="21:43" pos:end="21:43">.</operator><name pos:start="21:44" pos:end="21:51">messages</name><operator pos:start="21:52" pos:end="21:52">.</operator><name pos:start="21:53" pos:end="21:76">ConnectionRequestMessage</name></name>;</import>
<import pos:start="22:1" pos:end="22:72">import <name pos:start="22:8" pos:end="22:71"><name pos:start="22:8" pos:end="22:10">edu</name><operator pos:start="22:11" pos:end="22:11">.</operator><name pos:start="22:12" pos:end="22:13">nd</name><operator pos:start="22:14" pos:end="22:14">.</operator><name pos:start="22:15" pos:end="22:23">dronology</name><operator pos:start="22:24" pos:end="22:24">.</operator><name pos:start="22:25" pos:end="22:32">gstation</name><operator pos:start="22:33" pos:end="22:33">.</operator><name pos:start="22:34" pos:end="22:42">connector</name><operator pos:start="22:43" pos:end="22:43">.</operator><name pos:start="22:44" pos:end="22:51">messages</name><operator pos:start="22:52" pos:end="22:52">.</operator><name pos:start="22:53" pos:end="22:71">UAVHandshakeMessage</name></name>;</import>
<import pos:start="23:1" pos:end="23:73">import <name pos:start="23:8" pos:end="23:72"><name pos:start="23:8" pos:end="23:10">edu</name><operator pos:start="23:11" pos:end="23:11">.</operator><name pos:start="23:12" pos:end="23:13">nd</name><operator pos:start="23:14" pos:end="23:14">.</operator><name pos:start="23:15" pos:end="23:23">dronology</name><operator pos:start="23:24" pos:end="23:24">.</operator><name pos:start="23:25" pos:end="23:32">gstation</name><operator pos:start="23:33" pos:end="23:33">.</operator><name pos:start="23:34" pos:end="23:42">connector</name><operator pos:start="23:43" pos:end="23:43">.</operator><name pos:start="23:44" pos:end="23:51">messages</name><operator pos:start="23:52" pos:end="23:52">.</operator><name pos:start="23:53" pos:end="23:72">UAVModeChangeMessage</name></name>;</import>
<import pos:start="24:1" pos:end="24:73">import <name pos:start="24:8" pos:end="24:72"><name pos:start="24:8" pos:end="24:10">edu</name><operator pos:start="24:11" pos:end="24:11">.</operator><name pos:start="24:12" pos:end="24:13">nd</name><operator pos:start="24:14" pos:end="24:14">.</operator><name pos:start="24:15" pos:end="24:23">dronology</name><operator pos:start="24:24" pos:end="24:24">.</operator><name pos:start="24:25" pos:end="24:32">gstation</name><operator pos:start="24:33" pos:end="24:33">.</operator><name pos:start="24:34" pos:end="24:42">connector</name><operator pos:start="24:43" pos:end="24:43">.</operator><name pos:start="24:44" pos:end="24:51">messages</name><operator pos:start="24:52" pos:end="24:52">.</operator><name pos:start="24:53" pos:end="24:72">UAVMonitoringMessage</name></name>;</import>
<import pos:start="25:1" pos:end="25:30">import <name pos:start="25:8" pos:end="25:29"><name pos:start="25:8" pos:end="25:10">net</name><operator pos:start="25:11" pos:end="25:11">.</operator><name pos:start="25:12" pos:end="25:13">mv</name><operator pos:start="25:14" pos:end="25:14">.</operator><name pos:start="25:15" pos:end="25:21">logging</name><operator pos:start="25:22" pos:end="25:22">.</operator><name pos:start="25:23" pos:end="25:29">ILogger</name></name>;</import>
<import pos:start="26:1" pos:end="26:37">import <name pos:start="26:8" pos:end="26:36"><name pos:start="26:8" pos:end="26:10">net</name><operator pos:start="26:11" pos:end="26:11">.</operator><name pos:start="26:12" pos:end="26:13">mv</name><operator pos:start="26:14" pos:end="26:14">.</operator><name pos:start="26:15" pos:end="26:21">logging</name><operator pos:start="26:22" pos:end="26:22">.</operator><name pos:start="26:23" pos:end="26:36">LoggerProvider</name></name>;</import>

<class pos:start="28:1" pos:end="155:1"><specifier pos:start="28:1" pos:end="28:6">public</specifier> class <name pos:start="28:14" pos:end="28:43">FakePassivPythonGroundstation2</name> <block pos:start="28:45" pos:end="155:1">{

	<comment type="line" pos:start="30:9" pos:end="30:40">// private static Socket socket;</comment>
	<decl_stmt pos:start="31:9" pos:end="31:109"><decl pos:start="31:9" pos:end="31:108"><type pos:start="31:9" pos:end="31:36"><specifier pos:start="31:9" pos:end="31:15">private</specifier> <specifier pos:start="31:17" pos:end="31:22">static</specifier> <specifier pos:start="31:24" pos:end="31:28">final</specifier> <name pos:start="31:30" pos:end="31:36">ILogger</name></type> <name pos:start="31:38" pos:end="31:43">LOGGER</name> <init pos:start="31:45" pos:end="31:108">= <expr pos:start="31:47" pos:end="31:108"><call pos:start="31:47" pos:end="31:108"><name pos:start="31:47" pos:end="31:70"><name pos:start="31:47" pos:end="31:60">LoggerProvider</name><operator pos:start="31:61" pos:end="31:61">.</operator><name pos:start="31:62" pos:end="31:70">getLogger</name></name><argument_list pos:start="31:71" pos:end="31:108">(<argument pos:start="31:72" pos:end="31:107"><expr pos:start="31:72" pos:end="31:107"><name pos:start="31:72" pos:end="31:107"><name pos:start="31:72" pos:end="31:101">FakePassivPythonGroundstation2</name><operator pos:start="31:102" pos:end="31:102">.</operator><name pos:start="31:103" pos:end="31:107">class</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

	<decl_stmt pos:start="33:9" pos:end="35:88"><decl pos:start="33:9" pos:end="35:87"><type pos:start="33:9" pos:end="33:25"><specifier pos:start="33:9" pos:end="33:13">final</specifier> <specifier pos:start="33:15" pos:end="33:20">static</specifier> <name pos:start="33:22" pos:end="33:25">Gson</name></type> <name pos:start="33:27" pos:end="33:30">GSON</name> <init pos:start="33:32" pos:end="35:87">= <expr pos:start="33:34" pos:end="35:87"><operator pos:start="33:34" pos:end="33:36">new</operator> <call pos:start="33:38" pos:end="33:50"><name pos:start="33:38" pos:end="33:48">GsonBuilder</name><argument_list pos:start="33:49" pos:end="33:50">()</argument_list></call><operator pos:start="33:51" pos:end="33:51">.</operator><call pos:start="33:52" pos:end="33:85"><name pos:start="33:52" pos:end="33:83">enableComplexMapKeySerialization</name><argument_list pos:start="33:84" pos:end="33:85">()</argument_list></call><operator pos:start="33:86" pos:end="33:86">.</operator><call pos:start="33:87" pos:end="33:102"><name pos:start="33:87" pos:end="33:100">serializeNulls</name><argument_list pos:start="33:101" pos:end="33:102">()</argument_list></call>
			<operator pos:start="34:25" pos:end="34:25">.</operator><call pos:start="34:26" pos:end="34:55"><name pos:start="34:26" pos:end="34:38">setDateFormat</name><argument_list pos:start="34:39" pos:end="34:55">(<argument pos:start="34:40" pos:end="34:54"><expr pos:start="34:40" pos:end="34:54"><name pos:start="34:40" pos:end="34:54"><name pos:start="34:40" pos:end="34:49">DateFormat</name><operator pos:start="34:50" pos:end="34:50">.</operator><name pos:start="34:51" pos:end="34:54">LONG</name></name></expr></argument>)</argument_list></call><operator pos:start="34:56" pos:end="34:56">.</operator><call pos:start="34:57" pos:end="34:118"><name pos:start="34:57" pos:end="34:76">setFieldNamingPolicy</name><argument_list pos:start="34:77" pos:end="34:118">(<argument pos:start="34:78" pos:end="34:117"><expr pos:start="34:78" pos:end="34:117"><name pos:start="34:78" pos:end="34:117"><name pos:start="34:78" pos:end="34:94">FieldNamingPolicy</name><operator pos:start="34:95" pos:end="34:95">.</operator><name pos:start="34:96" pos:end="34:117">LOWER_CASE_WITH_DASHES</name></name></expr></argument>)</argument_list></call>
			<operator pos:start="35:25" pos:end="35:25">.</operator><call pos:start="35:26" pos:end="35:40"><name pos:start="35:26" pos:end="35:35">setVersion</name><argument_list pos:start="35:36" pos:end="35:40">(<argument pos:start="35:37" pos:end="35:39"><expr pos:start="35:37" pos:end="35:39"><literal type="number" pos:start="35:37" pos:end="35:39">1.0</literal></expr></argument>)</argument_list></call><operator pos:start="35:41" pos:end="35:41">.</operator><call pos:start="35:42" pos:end="35:78"><name pos:start="35:42" pos:end="35:76">serializeSpecialFloatingPointValues</name><argument_list pos:start="35:77" pos:end="35:78">()</argument_list></call><operator pos:start="35:79" pos:end="35:79">.</operator><call pos:start="35:80" pos:end="35:87"><name pos:start="35:80" pos:end="35:85">create</name><argument_list pos:start="35:86" pos:end="35:87">()</argument_list></call></expr></init></decl>;</decl_stmt>

	<function pos:start="37:9" pos:end="153:9"><type pos:start="37:9" pos:end="37:26"><specifier pos:start="37:9" pos:end="37:14">public</specifier> <specifier pos:start="37:16" pos:end="37:21">static</specifier> <name pos:start="37:23" pos:end="37:26">void</name></type> <name pos:start="37:28" pos:end="37:31">main</name><parameter_list pos:start="37:32" pos:end="37:46">(<parameter pos:start="37:33" pos:end="37:45"><decl pos:start="37:33" pos:end="37:45"><type pos:start="37:33" pos:end="37:40"><name pos:start="37:33" pos:end="37:40"><name pos:start="37:33" pos:end="37:38">String</name><index pos:start="37:39" pos:end="37:40">[]</index></name></type> <name pos:start="37:42" pos:end="37:45">args</name></decl></parameter>)</parameter_list> <block pos:start="37:48" pos:end="153:9">{<block_content pos:start="38:17" pos:end="152:17">
		<try pos:start="38:17" pos:end="152:17">try <block pos:start="38:21" pos:end="150:17">{<block_content pos:start="39:25" pos:end="149:44">
			<decl_stmt pos:start="39:25" pos:end="39:40"><decl pos:start="39:25" pos:end="39:39"><type pos:start="39:25" pos:end="39:27"><name pos:start="39:25" pos:end="39:27">int</name></type> <name pos:start="39:29" pos:end="39:32">port</name> <init pos:start="39:34" pos:end="39:39">= <expr pos:start="39:36" pos:end="39:39"><literal type="number" pos:start="39:36" pos:end="39:39">1234</literal></expr></init></decl>;</decl_stmt>
			<comment type="line" pos:start="40:25" pos:end="40:78">// ServerSocket serverSocket = new ServerSocket(port);</comment>
			<comment type="line" pos:start="41:25" pos:end="41:93">// Server is running always. This is done using this while(true) loop</comment>

			<comment type="line" pos:start="43:25" pos:end="43:58">// socket = serverSocket.accept();</comment>
			<decl_stmt pos:start="44:25" pos:end="44:54"><decl pos:start="44:25" pos:end="44:53"><type pos:start="44:25" pos:end="44:30"><name pos:start="44:25" pos:end="44:30">String</name></type> <name pos:start="44:32" pos:end="44:39">hostAddr</name> <init pos:start="44:41" pos:end="44:53">= <expr pos:start="44:43" pos:end="44:53"><literal type="string" pos:start="44:43" pos:end="44:53">"localhost"</literal></expr></init></decl>;</decl_stmt>

			<expr_stmt pos:start="46:25" pos:end="46:90"><expr pos:start="46:25" pos:end="46:89"><call pos:start="46:25" pos:end="46:89"><name pos:start="46:25" pos:end="46:35"><name pos:start="46:25" pos:end="46:30">LOGGER</name><operator pos:start="46:31" pos:end="46:31">.</operator><name pos:start="46:32" pos:end="46:35">info</name></name><argument_list pos:start="46:36" pos:end="46:89">(<argument pos:start="46:37" pos:end="46:88"><expr pos:start="46:37" pos:end="46:88"><literal type="string" pos:start="46:37" pos:end="46:64">"Connecting to Python base "</literal> <operator pos:start="46:66" pos:end="46:66">+</operator> <name pos:start="46:68" pos:end="46:75">hostAddr</name> <operator pos:start="46:77" pos:end="46:77">+</operator> <literal type="string" pos:start="46:79" pos:end="46:81">"@"</literal> <operator pos:start="46:83" pos:end="46:83">+</operator> <name pos:start="46:85" pos:end="46:88">port</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<decl_stmt pos:start="47:25" pos:end="47:59"><decl pos:start="47:25" pos:end="47:58"><type pos:start="47:25" pos:end="47:30"><name pos:start="47:25" pos:end="47:30">Socket</name></type> <name pos:start="47:32" pos:end="47:43">pythonSocket</name> <init pos:start="47:45" pos:end="47:58">= <expr pos:start="47:47" pos:end="47:58"><operator pos:start="47:47" pos:end="47:49">new</operator> <call pos:start="47:51" pos:end="47:58"><name pos:start="47:51" pos:end="47:56">Socket</name><argument_list pos:start="47:57" pos:end="47:58">()</argument_list></call></expr></init></decl>;</decl_stmt>
			<expr_stmt pos:start="48:25" pos:end="48:90"><expr pos:start="48:25" pos:end="48:89"><call pos:start="48:25" pos:end="48:89"><name pos:start="48:25" pos:end="48:44"><name pos:start="48:25" pos:end="48:36">pythonSocket</name><operator pos:start="48:37" pos:end="48:37">.</operator><name pos:start="48:38" pos:end="48:44">connect</name></name><argument_list pos:start="48:45" pos:end="48:89">(<argument pos:start="48:46" pos:end="48:82"><expr pos:start="48:46" pos:end="48:82"><operator pos:start="48:46" pos:end="48:48">new</operator> <call pos:start="48:50" pos:end="48:82"><name pos:start="48:50" pos:end="48:66">InetSocketAddress</name><argument_list pos:start="48:67" pos:end="48:82">(<argument pos:start="48:68" pos:end="48:75"><expr pos:start="48:68" pos:end="48:75"><name pos:start="48:68" pos:end="48:75">hostAddr</name></expr></argument>, <argument pos:start="48:78" pos:end="48:81"><expr pos:start="48:78" pos:end="48:81"><name pos:start="48:78" pos:end="48:81">port</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="48:85" pos:end="48:88"><expr pos:start="48:85" pos:end="48:88"><literal type="number" pos:start="48:85" pos:end="48:88">5000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

			<expr_stmt pos:start="50:25" pos:end="50:68"><expr pos:start="50:25" pos:end="50:67"><call pos:start="50:25" pos:end="50:67"><name pos:start="50:25" pos:end="50:42"><name pos:start="50:25" pos:end="50:30">System</name><operator pos:start="50:31" pos:end="50:31">.</operator><name pos:start="50:32" pos:end="50:34">out</name><operator pos:start="50:35" pos:end="50:35">.</operator><name pos:start="50:36" pos:end="50:42">println</name></name><argument_list pos:start="50:43" pos:end="50:67">(<argument pos:start="50:44" pos:end="50:66"><expr pos:start="50:44" pos:end="50:66"><literal type="string" pos:start="50:44" pos:end="50:66">"Client has connected!"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<decl_stmt pos:start="51:25" pos:end="51:71"><decl pos:start="51:25" pos:end="51:70"><type pos:start="51:25" pos:end="51:35"><name pos:start="51:25" pos:end="51:35">InputStream</name></type> <name pos:start="51:37" pos:end="51:38">is</name> <init pos:start="51:40" pos:end="51:70">= <expr pos:start="51:42" pos:end="51:70"><call pos:start="51:42" pos:end="51:70"><name pos:start="51:42" pos:end="51:68"><name pos:start="51:42" pos:end="51:53">pythonSocket</name><operator pos:start="51:54" pos:end="51:54">.</operator><name pos:start="51:55" pos:end="51:68">getInputStream</name></name><argument_list pos:start="51:69" pos:end="51:70">()</argument_list></call></expr></init></decl>;</decl_stmt>
			<decl_stmt pos:start="52:25" pos:end="52:74"><decl pos:start="52:25" pos:end="52:73"><type pos:start="52:25" pos:end="52:41"><name pos:start="52:25" pos:end="52:41">InputStreamReader</name></type> <name pos:start="52:43" pos:end="52:45">isr</name> <init pos:start="52:47" pos:end="52:73">= <expr pos:start="52:49" pos:end="52:73"><operator pos:start="52:49" pos:end="52:51">new</operator> <call pos:start="52:53" pos:end="52:73"><name pos:start="52:53" pos:end="52:69">InputStreamReader</name><argument_list pos:start="52:70" pos:end="52:73">(<argument pos:start="52:71" pos:end="52:72"><expr pos:start="52:71" pos:end="52:72"><name pos:start="52:71" pos:end="52:72">is</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<decl_stmt pos:start="53:25" pos:end="53:68"><decl pos:start="53:25" pos:end="53:67"><type pos:start="53:25" pos:end="53:38"><name pos:start="53:25" pos:end="53:38">BufferedReader</name></type> <name pos:start="53:40" pos:end="53:41">br</name> <init pos:start="53:43" pos:end="53:67">= <expr pos:start="53:45" pos:end="53:67"><operator pos:start="53:45" pos:end="53:47">new</operator> <call pos:start="53:49" pos:end="53:67"><name pos:start="53:49" pos:end="53:62">BufferedReader</name><argument_list pos:start="53:63" pos:end="53:67">(<argument pos:start="53:64" pos:end="53:66"><expr pos:start="53:64" pos:end="53:66"><name pos:start="53:64" pos:end="53:66">isr</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

			<comment type="line" pos:start="55:25" pos:end="55:103">// UAVHandshakeMessage handshake = new UAVHandshakeMessage("Drone1", "Drone1");</comment>
			<decl_stmt pos:start="56:25" pos:end="56:105"><decl pos:start="56:25" pos:end="56:104"><type pos:start="56:25" pos:end="56:48"><name pos:start="56:25" pos:end="56:48">ConnectionRequestMessage</name></type> <name pos:start="56:50" pos:end="56:56">connect</name> <init pos:start="56:58" pos:end="56:104">= <expr pos:start="56:60" pos:end="56:104"><operator pos:start="56:60" pos:end="56:62">new</operator> <call pos:start="56:64" pos:end="56:104"><name pos:start="56:64" pos:end="56:87">ConnectionRequestMessage</name><argument_list pos:start="56:88" pos:end="56:104">(<argument pos:start="56:89" pos:end="56:103"><expr pos:start="56:89" pos:end="56:103"><literal type="string" pos:start="56:89" pos:end="56:103">"FAKE_GROUND_2"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

			<decl_stmt pos:start="58:25" pos:end="58:70"><decl pos:start="58:25" pos:end="58:69"><type pos:start="58:25" pos:end="58:30"><name pos:start="58:25" pos:end="58:30">String</name></type> <name pos:start="58:32" pos:end="58:46">handshakeString</name> <init pos:start="58:48" pos:end="58:69">= <expr pos:start="58:50" pos:end="58:69"><call pos:start="58:50" pos:end="58:69"><name pos:start="58:50" pos:end="58:60"><name pos:start="58:50" pos:end="58:53">GSON</name><operator pos:start="58:54" pos:end="58:54">.</operator><name pos:start="58:55" pos:end="58:60">toJson</name></name><argument_list pos:start="58:61" pos:end="58:69">(<argument pos:start="58:62" pos:end="58:68"><expr pos:start="58:62" pos:end="58:68"><name pos:start="58:62" pos:end="58:68">connect</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<expr_stmt pos:start="59:25" pos:end="59:44"><expr pos:start="59:25" pos:end="59:43"><call pos:start="59:25" pos:end="59:43"><name pos:start="59:25" pos:end="59:36"><name pos:start="59:25" pos:end="59:30">Thread</name><operator pos:start="59:31" pos:end="59:31">.</operator><name pos:start="59:32" pos:end="59:36">sleep</name></name><argument_list pos:start="59:37" pos:end="59:43">(<argument pos:start="59:38" pos:end="59:42"><expr pos:start="59:38" pos:end="59:42"><literal type="number" pos:start="59:38" pos:end="59:42">10000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<decl_stmt pos:start="60:25" pos:end="60:73"><decl pos:start="60:25" pos:end="60:72"><type pos:start="60:25" pos:end="60:36"><name pos:start="60:25" pos:end="60:36">OutputStream</name></type> <name pos:start="60:38" pos:end="60:39">os</name> <init pos:start="60:41" pos:end="60:72">= <expr pos:start="60:43" pos:end="60:72"><call pos:start="60:43" pos:end="60:72"><name pos:start="60:43" pos:end="60:70"><name pos:start="60:43" pos:end="60:54">pythonSocket</name><operator pos:start="60:55" pos:end="60:55">.</operator><name pos:start="60:56" pos:end="60:70">getOutputStream</name></name><argument_list pos:start="60:71" pos:end="60:72">()</argument_list></call></expr></init></decl>;</decl_stmt>
			<decl_stmt pos:start="61:25" pos:end="61:76"><decl pos:start="61:25" pos:end="61:75"><type pos:start="61:25" pos:end="61:42"><name pos:start="61:25" pos:end="61:42">OutputStreamWriter</name></type> <name pos:start="61:44" pos:end="61:46">osw</name> <init pos:start="61:48" pos:end="61:75">= <expr pos:start="61:50" pos:end="61:75"><operator pos:start="61:50" pos:end="61:52">new</operator> <call pos:start="61:54" pos:end="61:75"><name pos:start="61:54" pos:end="61:71">OutputStreamWriter</name><argument_list pos:start="61:72" pos:end="61:75">(<argument pos:start="61:73" pos:end="61:74"><expr pos:start="61:73" pos:end="61:74"><name pos:start="61:73" pos:end="61:74">os</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<decl_stmt pos:start="62:25" pos:end="62:68"><decl pos:start="62:25" pos:end="62:67"><type pos:start="62:25" pos:end="62:38"><name pos:start="62:25" pos:end="62:38">BufferedWriter</name></type> <name pos:start="62:40" pos:end="62:41">bw</name> <init pos:start="62:43" pos:end="62:67">= <expr pos:start="62:45" pos:end="62:67"><operator pos:start="62:45" pos:end="62:47">new</operator> <call pos:start="62:49" pos:end="62:67"><name pos:start="62:49" pos:end="62:62">BufferedWriter</name><argument_list pos:start="62:63" pos:end="62:67">(<argument pos:start="62:64" pos:end="62:66"><expr pos:start="62:64" pos:end="62:66"><name pos:start="62:64" pos:end="62:66">osw</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<expr_stmt pos:start="63:25" pos:end="63:50"><expr pos:start="63:25" pos:end="63:49"><call pos:start="63:25" pos:end="63:49"><name pos:start="63:25" pos:end="63:32"><name pos:start="63:25" pos:end="63:26">bw</name><operator pos:start="63:27" pos:end="63:27">.</operator><name pos:start="63:28" pos:end="63:32">write</name></name><argument_list pos:start="63:33" pos:end="63:49">(<argument pos:start="63:34" pos:end="63:48"><expr pos:start="63:34" pos:end="63:48"><name pos:start="63:34" pos:end="63:48">handshakeString</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt pos:start="64:25" pos:end="64:39"><expr pos:start="64:25" pos:end="64:38"><call pos:start="64:25" pos:end="64:38"><name pos:start="64:25" pos:end="64:32"><name pos:start="64:25" pos:end="64:26">bw</name><operator pos:start="64:27" pos:end="64:27">.</operator><name pos:start="64:28" pos:end="64:32">write</name></name><argument_list pos:start="64:33" pos:end="64:38">(<argument pos:start="64:34" pos:end="64:37"><expr pos:start="64:34" pos:end="64:37"><literal type="string" pos:start="64:34" pos:end="64:37">"\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt pos:start="65:25" pos:end="65:95"><expr pos:start="65:25" pos:end="65:94"><call pos:start="65:25" pos:end="65:94"><name pos:start="65:25" pos:end="65:42"><name pos:start="65:25" pos:end="65:30">System</name><operator pos:start="65:31" pos:end="65:31">.</operator><name pos:start="65:32" pos:end="65:34">out</name><operator pos:start="65:35" pos:end="65:35">.</operator><name pos:start="65:36" pos:end="65:42">println</name></name><argument_list pos:start="65:43" pos:end="65:94">(<argument pos:start="65:44" pos:end="65:93"><expr pos:start="65:44" pos:end="65:93"><literal type="string" pos:start="65:44" pos:end="65:75">"Message sent to the client is "</literal> <operator pos:start="65:77" pos:end="65:77">+</operator> <name pos:start="65:79" pos:end="65:93">handshakeString</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt pos:start="66:25" pos:end="66:35"><expr pos:start="66:25" pos:end="66:34"><call pos:start="66:25" pos:end="66:34"><name pos:start="66:25" pos:end="66:32"><name pos:start="66:25" pos:end="66:26">bw</name><operator pos:start="66:27" pos:end="66:27">.</operator><name pos:start="66:28" pos:end="66:32">flush</name></name><argument_list pos:start="66:33" pos:end="66:34">()</argument_list></call></expr>;</expr_stmt>

			<decl_stmt pos:start="68:25" pos:end="68:58"><decl pos:start="68:25" pos:end="68:57"><type pos:start="68:25" pos:end="68:30"><name pos:start="68:25" pos:end="68:30">String</name></type> <name pos:start="68:32" pos:end="68:41">ackMesasge</name> <init pos:start="68:43" pos:end="68:57">= <expr pos:start="68:45" pos:end="68:57"><call pos:start="68:45" pos:end="68:57"><name pos:start="68:45" pos:end="68:55"><name pos:start="68:45" pos:end="68:46">br</name><operator pos:start="68:47" pos:end="68:47">.</operator><name pos:start="68:48" pos:end="68:55">readLine</name></name><argument_list pos:start="68:56" pos:end="68:57">()</argument_list></call></expr></init></decl>;</decl_stmt>
			<decl_stmt pos:start="69:25" pos:end="69:120"><decl pos:start="69:25" pos:end="69:119"><type pos:start="69:25" pos:end="69:49"><name pos:start="69:25" pos:end="69:49">ConnectionResponseCommand</name></type> <name pos:start="69:51" pos:end="69:58">response</name> <init pos:start="69:60" pos:end="69:119">= <expr pos:start="69:62" pos:end="69:119"><call pos:start="69:62" pos:end="69:119"><name pos:start="69:62" pos:end="69:74"><name pos:start="69:62" pos:end="69:65">GSON</name><operator pos:start="69:66" pos:end="69:66">.</operator><name pos:start="69:67" pos:end="69:74">fromJson</name></name><argument_list pos:start="69:75" pos:end="69:119">(<argument pos:start="69:76" pos:end="69:85"><expr pos:start="69:76" pos:end="69:85"><name pos:start="69:76" pos:end="69:85">ackMesasge</name></expr></argument>, <argument pos:start="69:88" pos:end="69:118"><expr pos:start="69:88" pos:end="69:118"><name pos:start="69:88" pos:end="69:118"><name pos:start="69:88" pos:end="69:112">ConnectionResponseCommand</name><operator pos:start="69:113" pos:end="69:113">.</operator><name pos:start="69:114" pos:end="69:118">class</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<expr_stmt pos:start="70:25" pos:end="70:82"><expr pos:start="70:25" pos:end="70:81"><call pos:start="70:25" pos:end="70:81"><name pos:start="70:25" pos:end="70:42"><name pos:start="70:25" pos:end="70:30">System</name><operator pos:start="70:31" pos:end="70:31">.</operator><name pos:start="70:32" pos:end="70:34">out</name><operator pos:start="70:35" pos:end="70:35">.</operator><name pos:start="70:36" pos:end="70:42">println</name></name><argument_list pos:start="70:43" pos:end="70:81">(<argument pos:start="70:44" pos:end="70:80"><expr pos:start="70:44" pos:end="70:80"><literal type="string" pos:start="70:44" pos:end="70:54">"RESPONSE:"</literal> <operator pos:start="70:56" pos:end="70:56">+</operator> <call pos:start="70:58" pos:end="70:80"><name pos:start="70:58" pos:end="70:78"><name pos:start="70:58" pos:end="70:65">response</name><operator pos:start="70:66" pos:end="70:66">.</operator><name pos:start="70:67" pos:end="70:78">toJsonString</name></name><argument_list pos:start="70:79" pos:end="70:80">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt pos:start="71:25" pos:end="71:43"><expr pos:start="71:25" pos:end="71:42"><call pos:start="71:25" pos:end="71:42"><name pos:start="71:25" pos:end="71:36"><name pos:start="71:25" pos:end="71:30">Thread</name><operator pos:start="71:31" pos:end="71:31">.</operator><name pos:start="71:32" pos:end="71:36">sleep</name></name><argument_list pos:start="71:37" pos:end="71:42">(<argument pos:start="71:38" pos:end="71:41"><expr pos:start="71:38" pos:end="71:41"><literal type="number" pos:start="71:38" pos:end="71:41">3000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

			<decl_stmt pos:start="73:25" pos:end="73:100"><decl pos:start="73:25" pos:end="73:99"><type pos:start="73:25" pos:end="73:43"><name pos:start="73:25" pos:end="73:43">UAVHandshakeMessage</name></type> <name pos:start="73:45" pos:end="73:48">hand</name> <init pos:start="73:50" pos:end="73:99">= <expr pos:start="73:52" pos:end="73:99"><operator pos:start="73:52" pos:end="73:54">new</operator> <call pos:start="73:56" pos:end="73:99"><name pos:start="73:56" pos:end="73:74">UAVHandshakeMessage</name><argument_list pos:start="73:75" pos:end="73:99">(<argument pos:start="73:76" pos:end="73:90"><expr pos:start="73:76" pos:end="73:90"><literal type="string" pos:start="73:76" pos:end="73:90">"FAKE_GROUND_2"</literal></expr></argument>, <argument pos:start="73:93" pos:end="73:98"><expr pos:start="73:93" pos:end="73:98"><literal type="string" pos:start="73:93" pos:end="73:98">"UAV1"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<expr_stmt pos:start="74:25" pos:end="74:65"><expr pos:start="74:25" pos:end="74:64"><call pos:start="74:25" pos:end="74:64"><name pos:start="74:25" pos:end="74:36"><name pos:start="74:25" pos:end="74:28">hand</name><operator pos:start="74:29" pos:end="74:29">.</operator><name pos:start="74:30" pos:end="74:36">setHome</name></name><argument_list pos:start="74:37" pos:end="74:64">(<argument pos:start="74:38" pos:end="74:63"><expr pos:start="74:38" pos:end="74:63"><operator pos:start="74:38" pos:end="74:40">new</operator> <call pos:start="74:42" pos:end="74:63"><name pos:start="74:42" pos:end="74:54">LlaCoordinate</name><argument_list pos:start="74:55" pos:end="74:63">(<argument pos:start="74:56" pos:end="74:56"><expr pos:start="74:56" pos:end="74:56"><literal type="number" pos:start="74:56" pos:end="74:56">0</literal></expr></argument>, <argument pos:start="74:59" pos:end="74:59"><expr pos:start="74:59" pos:end="74:59"><literal type="number" pos:start="74:59" pos:end="74:59">0</literal></expr></argument>, <argument pos:start="74:62" pos:end="74:62"><expr pos:start="74:62" pos:end="74:62"><literal type="number" pos:start="74:62" pos:end="74:62">0</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<decl_stmt pos:start="75:25" pos:end="75:61"><decl pos:start="75:25" pos:end="75:60"><type pos:start="75:25" pos:end="75:30"><name pos:start="75:25" pos:end="75:30">String</name></type> <name pos:start="75:32" pos:end="75:40">uavString</name> <init pos:start="75:42" pos:end="75:60">= <expr pos:start="75:44" pos:end="75:60"><call pos:start="75:44" pos:end="75:60"><name pos:start="75:44" pos:end="75:54"><name pos:start="75:44" pos:end="75:47">GSON</name><operator pos:start="75:48" pos:end="75:48">.</operator><name pos:start="75:49" pos:end="75:54">toJson</name></name><argument_list pos:start="75:55" pos:end="75:60">(<argument pos:start="75:56" pos:end="75:59"><expr pos:start="75:56" pos:end="75:59"><name pos:start="75:56" pos:end="75:59">hand</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<expr_stmt pos:start="76:25" pos:end="76:44"><expr pos:start="76:25" pos:end="76:43"><call pos:start="76:25" pos:end="76:43"><name pos:start="76:25" pos:end="76:32"><name pos:start="76:25" pos:end="76:26">bw</name><operator pos:start="76:27" pos:end="76:27">.</operator><name pos:start="76:28" pos:end="76:32">write</name></name><argument_list pos:start="76:33" pos:end="76:43">(<argument pos:start="76:34" pos:end="76:42"><expr pos:start="76:34" pos:end="76:42"><name pos:start="76:34" pos:end="76:42">uavString</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt pos:start="77:25" pos:end="77:39"><expr pos:start="77:25" pos:end="77:38"><call pos:start="77:25" pos:end="77:38"><name pos:start="77:25" pos:end="77:32"><name pos:start="77:25" pos:end="77:26">bw</name><operator pos:start="77:27" pos:end="77:27">.</operator><name pos:start="77:28" pos:end="77:32">write</name></name><argument_list pos:start="77:33" pos:end="77:38">(<argument pos:start="77:34" pos:end="77:37"><expr pos:start="77:34" pos:end="77:37"><literal type="string" pos:start="77:34" pos:end="77:37">"\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt pos:start="78:25" pos:end="78:89"><expr pos:start="78:25" pos:end="78:88"><call pos:start="78:25" pos:end="78:88"><name pos:start="78:25" pos:end="78:42"><name pos:start="78:25" pos:end="78:30">System</name><operator pos:start="78:31" pos:end="78:31">.</operator><name pos:start="78:32" pos:end="78:34">out</name><operator pos:start="78:35" pos:end="78:35">.</operator><name pos:start="78:36" pos:end="78:42">println</name></name><argument_list pos:start="78:43" pos:end="78:88">(<argument pos:start="78:44" pos:end="78:87"><expr pos:start="78:44" pos:end="78:87"><literal type="string" pos:start="78:44" pos:end="78:75">"Message sent to the client is "</literal> <operator pos:start="78:77" pos:end="78:77">+</operator> <name pos:start="78:79" pos:end="78:87">uavString</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt pos:start="79:25" pos:end="79:35"><expr pos:start="79:25" pos:end="79:34"><call pos:start="79:25" pos:end="79:34"><name pos:start="79:25" pos:end="79:32"><name pos:start="79:25" pos:end="79:26">bw</name><operator pos:start="79:27" pos:end="79:27">.</operator><name pos:start="79:28" pos:end="79:32">flush</name></name><argument_list pos:start="79:33" pos:end="79:34">()</argument_list></call></expr>;</expr_stmt>

			<expr_stmt pos:start="81:25" pos:end="81:43"><expr pos:start="81:25" pos:end="81:42"><call pos:start="81:25" pos:end="81:42"><name pos:start="81:25" pos:end="81:36"><name pos:start="81:25" pos:end="81:30">Thread</name><operator pos:start="81:31" pos:end="81:31">.</operator><name pos:start="81:32" pos:end="81:36">sleep</name></name><argument_list pos:start="81:37" pos:end="81:42">(<argument pos:start="81:38" pos:end="81:41"><expr pos:start="81:38" pos:end="81:41"><literal type="number" pos:start="81:38" pos:end="81:41">3000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

			<comment type="line" pos:start="83:25" pos:end="83:104">// UAVModeChangeMessage mode = new UAVModeChangeMessage("FAKE_GROUND_2", "UAV1",</comment>
			<comment type="line" pos:start="84:25" pos:end="84:66">// FlightMode.USER_CONTROLLED.toString());</comment>

			<comment type="line" pos:start="86:25" pos:end="86:65">// String modeString = GSON.toJson(mode);</comment>
			<comment type="line" pos:start="87:25" pos:end="87:48">// bw.write(modeString);</comment>
			<comment type="line" pos:start="88:25" pos:end="88:42">// bw.write("\n");</comment>
			<comment type="line" pos:start="89:25" pos:end="89:93">// System.out.println("Message sent to the client is " + modeString);</comment>
			<comment type="line" pos:start="90:25" pos:end="90:38">// bw.flush();</comment>

			<decl_stmt pos:start="92:25" pos:end="92:34"><decl pos:start="92:25" pos:end="92:33"><type pos:start="92:25" pos:end="92:27"><name pos:start="92:25" pos:end="92:27">int</name></type> <name pos:start="92:29" pos:end="92:29">i</name> <init pos:start="92:31" pos:end="92:33">= <expr pos:start="92:33" pos:end="92:33"><literal type="number" pos:start="92:33" pos:end="92:33">2</literal></expr></init></decl>;</decl_stmt>
			<while pos:start="93:25" pos:end="138:25">while <condition pos:start="93:31" pos:end="93:37">(<expr pos:start="93:32" pos:end="93:36"><name pos:start="93:32" pos:end="93:32">i</name> <operator pos:start="93:34" pos:end="93:34">&gt;</operator> <literal type="number" pos:start="93:36" pos:end="93:36">1</literal></expr>)</condition> <block pos:start="93:39" pos:end="138:25">{<block_content pos:start="95:33" pos:end="137:38">

				<decl_stmt pos:start="95:33" pos:end="95:124"><decl pos:start="95:33" pos:end="95:123"><type pos:start="95:33" pos:end="95:52"><name pos:start="95:33" pos:end="95:52">UAVMonitoringMessage</name></type> <name pos:start="95:54" pos:end="95:55">mm</name> <init pos:start="95:57" pos:end="95:123">= <expr pos:start="95:59" pos:end="95:123"><operator pos:start="95:59" pos:end="95:61">new</operator> <call pos:start="95:63" pos:end="95:123"><name pos:start="95:63" pos:end="95:82">UAVMonitoringMessage</name><argument_list pos:start="95:83" pos:end="95:123">(<argument pos:start="95:84" pos:end="95:93"><expr pos:start="95:84" pos:end="95:93"><literal type="string" pos:start="95:84" pos:end="95:93">"Dronexxx"</literal></expr></argument>, <argument pos:start="95:96" pos:end="95:110"><expr pos:start="95:96" pos:end="95:110"><literal type="string" pos:start="95:96" pos:end="95:110">"FAKE_GROUND_2"</literal></expr></argument>, <argument pos:start="95:113" pos:end="95:122"><expr pos:start="95:113" pos:end="95:122"><literal type="string" pos:start="95:113" pos:end="95:122">"Dronexxx"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
				<decl_stmt pos:start="96:33" pos:end="96:59"><decl pos:start="96:33" pos:end="96:58"><type pos:start="96:33" pos:end="96:38"><name pos:start="96:33" pos:end="96:38">Random</name></type> <name pos:start="96:40" pos:end="96:43">rand</name> <init pos:start="96:45" pos:end="96:58">= <expr pos:start="96:47" pos:end="96:58"><operator pos:start="96:47" pos:end="96:49">new</operator> <call pos:start="96:51" pos:end="96:58"><name pos:start="96:51" pos:end="96:56">Random</name><argument_list pos:start="96:57" pos:end="96:58">()</argument_list></call></expr></init></decl>;</decl_stmt>
				<expr_stmt pos:start="97:33" pos:end="97:78"><expr pos:start="97:33" pos:end="97:77"><call pos:start="97:33" pos:end="97:77"><name pos:start="97:33" pos:end="97:42"><name pos:start="97:33" pos:end="97:34">mm</name><operator pos:start="97:35" pos:end="97:35">.</operator><name pos:start="97:36" pos:end="97:42">setType</name></name><argument_list pos:start="97:43" pos:end="97:77">(<argument pos:start="97:44" pos:end="97:76"><expr pos:start="97:44" pos:end="97:76"><name pos:start="97:44" pos:end="97:76"><name pos:start="97:44" pos:end="97:63">UAVMonitoringMessage</name><operator pos:start="97:64" pos:end="97:64">.</operator><name pos:start="97:65" pos:end="97:76">MESSAGE_TYPE</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<comment type="line" pos:start="98:33" pos:end="98:57">// mm.setuavid("DRONE1");</comment>
				<expr_stmt pos:start="99:33" pos:end="99:67"><expr pos:start="99:33" pos:end="99:66"><call pos:start="99:33" pos:end="99:66"><name pos:start="99:33" pos:end="99:45"><name pos:start="99:33" pos:end="99:34">mm</name><operator pos:start="99:35" pos:end="99:35">.</operator><name pos:start="99:36" pos:end="99:45">addPropery</name></name><argument_list pos:start="99:46" pos:end="99:66">(<argument pos:start="99:47" pos:end="99:60"><expr pos:start="99:47" pos:end="99:60"><literal type="string" pos:start="99:47" pos:end="99:60">"NR_SATELITES"</literal></expr></argument>, <argument pos:start="99:63" pos:end="99:65"><expr pos:start="99:63" pos:end="99:65"><literal type="string" pos:start="99:63" pos:end="99:65">"5"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<expr_stmt pos:start="100:33" pos:end="100:67"><expr pos:start="100:33" pos:end="100:66"><call pos:start="100:33" pos:end="100:66"><name pos:start="100:33" pos:end="100:45"><name pos:start="100:33" pos:end="100:34">mm</name><operator pos:start="100:35" pos:end="100:35">.</operator><name pos:start="100:36" pos:end="100:45">addPropery</name></name><argument_list pos:start="100:46" pos:end="100:66">(<argument pos:start="100:47" pos:end="100:56"><expr pos:start="100:47" pos:end="100:56"><literal type="string" pos:start="100:47" pos:end="100:56">"GPS_BIAS"</literal></expr></argument>, <argument pos:start="100:59" pos:end="100:65"><expr pos:start="100:59" pos:end="100:65"><literal type="string" pos:start="100:59" pos:end="100:65">"3.125"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<expr_stmt pos:start="101:33" pos:end="101:71"><expr pos:start="101:33" pos:end="101:70"><call pos:start="101:33" pos:end="101:70"><name pos:start="101:33" pos:end="101:45"><name pos:start="101:33" pos:end="101:34">mm</name><operator pos:start="101:35" pos:end="101:35">.</operator><name pos:start="101:36" pos:end="101:45">addPropery</name></name><argument_list pos:start="101:46" pos:end="101:70">(<argument pos:start="101:47" pos:end="101:61"><expr pos:start="101:47" pos:end="101:61"><literal type="string" pos:start="101:47" pos:end="101:61">"CURRENT_SPEED"</literal></expr></argument>, <argument pos:start="101:64" pos:end="101:69"><expr pos:start="101:64" pos:end="101:69"><literal type="string" pos:start="101:64" pos:end="101:69">"5.25"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<expr_stmt pos:start="102:33" pos:end="102:69"><expr pos:start="102:33" pos:end="102:68"><call pos:start="102:33" pos:end="102:68"><name pos:start="102:33" pos:end="102:45"><name pos:start="102:33" pos:end="102:34">mm</name><operator pos:start="102:35" pos:end="102:35">.</operator><name pos:start="102:36" pos:end="102:45">addPropery</name></name><argument_list pos:start="102:46" pos:end="102:68">(<argument pos:start="102:47" pos:end="102:62"><expr pos:start="102:47" pos:end="102:62"><literal type="string" pos:start="102:47" pos:end="102:62">"BLEVEL_VOLTAGE"</literal></expr></argument>, <argument pos:start="102:65" pos:end="102:67"><expr pos:start="102:65" pos:end="102:67"><literal type="string" pos:start="102:65" pos:end="102:67">"3"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<expr_stmt pos:start="103:33" pos:end="103:73"><expr pos:start="103:33" pos:end="103:72"><call pos:start="103:33" pos:end="103:72"><name pos:start="103:33" pos:end="103:45"><name pos:start="103:33" pos:end="103:34">mm</name><operator pos:start="103:35" pos:end="103:35">.</operator><name pos:start="103:36" pos:end="103:45">addPropery</name></name><argument_list pos:start="103:46" pos:end="103:72">(<argument pos:start="103:47" pos:end="103:65"><expr pos:start="103:47" pos:end="103:65"><literal type="string" pos:start="103:47" pos:end="103:65">"BATTERY_MAXPOWERX"</literal></expr></argument>, <argument pos:start="103:68" pos:end="103:71"><expr pos:start="103:68" pos:end="103:71"><literal type="string" pos:start="103:68" pos:end="103:71">"50"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<expr_stmt pos:start="104:33" pos:end="104:83"><expr pos:start="104:33" pos:end="104:82"><call pos:start="104:33" pos:end="104:82"><name pos:start="104:33" pos:end="104:45"><name pos:start="104:33" pos:end="104:34">mm</name><operator pos:start="104:35" pos:end="104:35">.</operator><name pos:start="104:36" pos:end="104:45">addPropery</name></name><argument_list pos:start="104:46" pos:end="104:82">(<argument pos:start="104:47" pos:end="104:63"><expr pos:start="104:47" pos:end="104:63"><literal type="string" pos:start="104:47" pos:end="104:63">"BATTERY_VOLTAGE"</literal></expr></argument>, <argument pos:start="104:66" pos:end="104:81"><expr pos:start="104:66" pos:end="104:81"><call pos:start="104:66" pos:end="104:81"><name pos:start="104:66" pos:end="104:77"><name pos:start="104:66" pos:end="104:69">rand</name><operator pos:start="104:70" pos:end="104:70">.</operator><name pos:start="104:71" pos:end="104:77">nextInt</name></name><argument_list pos:start="104:78" pos:end="104:81">(<argument pos:start="104:79" pos:end="104:80"><expr pos:start="104:79" pos:end="104:80"><literal type="number" pos:start="104:79" pos:end="104:80">10</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<expr_stmt pos:start="105:33" pos:end="105:81"><expr pos:start="105:33" pos:end="105:80"><call pos:start="105:33" pos:end="105:80"><name pos:start="105:33" pos:end="105:45"><name pos:start="105:33" pos:end="105:34">mm</name><operator pos:start="105:35" pos:end="105:35">.</operator><name pos:start="105:36" pos:end="105:45">addPropery</name></name><argument_list pos:start="105:46" pos:end="105:80">(<argument pos:start="105:47" pos:end="105:61"><expr pos:start="105:47" pos:end="105:61"><literal type="string" pos:start="105:47" pos:end="105:61">"BATTERY_POWER"</literal></expr></argument>, <argument pos:start="105:64" pos:end="105:79"><expr pos:start="105:64" pos:end="105:79"><call pos:start="105:64" pos:end="105:79"><name pos:start="105:64" pos:end="105:75"><name pos:start="105:64" pos:end="105:67">rand</name><operator pos:start="105:68" pos:end="105:68">.</operator><name pos:start="105:69" pos:end="105:75">nextInt</name></name><argument_list pos:start="105:76" pos:end="105:79">(<argument pos:start="105:77" pos:end="105:78"><expr pos:start="105:77" pos:end="105:78"><literal type="number" pos:start="105:77" pos:end="105:78">10</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<expr_stmt pos:start="106:33" pos:end="106:80"><expr pos:start="106:33" pos:end="106:79"><call pos:start="106:33" pos:end="106:79"><name pos:start="106:33" pos:end="106:45"><name pos:start="106:33" pos:end="106:34">mm</name><operator pos:start="106:35" pos:end="106:35">.</operator><name pos:start="106:36" pos:end="106:45">addPropery</name></name><argument_list pos:start="106:46" pos:end="106:79">(<argument pos:start="106:47" pos:end="106:60"><expr pos:start="106:47" pos:end="106:60"><literal type="string" pos:start="106:47" pos:end="106:60">"BLEVEL_POWER"</literal></expr></argument>, <argument pos:start="106:63" pos:end="106:78"><expr pos:start="106:63" pos:end="106:78"><call pos:start="106:63" pos:end="106:78"><name pos:start="106:63" pos:end="106:74"><name pos:start="106:63" pos:end="106:66">rand</name><operator pos:start="106:67" pos:end="106:67">.</operator><name pos:start="106:68" pos:end="106:74">nextInt</name></name><argument_list pos:start="106:75" pos:end="106:78">(<argument pos:start="106:76" pos:end="106:77"><expr pos:start="106:76" pos:end="106:77"><literal type="number" pos:start="106:76" pos:end="106:77">10</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

				<comment type="line" pos:start="108:33" pos:end="108:65">// if flying mission mlevel &gt; 20%</comment>
				<comment type="line" pos:start="109:33" pos:end="109:61">// if retunr home blvel &gt; 10;</comment>
				<decl_stmt pos:start="110:33" pos:end="110:122"><decl pos:start="110:33" pos:end="110:121"><type pos:start="110:33" pos:end="110:52"><name pos:start="110:33" pos:end="110:52">UAVModeChangeMessage</name></type> <name pos:start="110:54" pos:end="110:59">modeCh</name> <init pos:start="110:61" pos:end="110:121">= <expr pos:start="110:63" pos:end="110:121"><operator pos:start="110:63" pos:end="110:65">new</operator> <call pos:start="110:67" pos:end="110:121"><name pos:start="110:67" pos:end="110:86">UAVModeChangeMessage</name><argument_list pos:start="110:87" pos:end="110:121">(<argument pos:start="110:88" pos:end="110:102"><expr pos:start="110:88" pos:end="110:102"><literal type="string" pos:start="110:88" pos:end="110:102">"FAKE_GROUND_2"</literal></expr></argument>, <argument pos:start="110:105" pos:end="110:110"><expr pos:start="110:105" pos:end="110:110"><literal type="string" pos:start="110:105" pos:end="110:110">"UAV1"</literal></expr></argument>, <argument pos:start="110:113" pos:end="110:120"><expr pos:start="110:113" pos:end="110:120"><literal type="string" pos:start="110:113" pos:end="110:120">"LOITER"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
				<decl_stmt pos:start="111:33" pos:end="111:68"><decl pos:start="111:33" pos:end="111:67"><type pos:start="111:33" pos:end="111:38"><name pos:start="111:33" pos:end="111:38">String</name></type> <name pos:start="111:40" pos:end="111:45">toSend</name> <init pos:start="111:47" pos:end="111:67">= <expr pos:start="111:49" pos:end="111:67"><call pos:start="111:49" pos:end="111:67"><name pos:start="111:49" pos:end="111:59"><name pos:start="111:49" pos:end="111:52">GSON</name><operator pos:start="111:53" pos:end="111:53">.</operator><name pos:start="111:54" pos:end="111:59">toJson</name></name><argument_list pos:start="111:60" pos:end="111:67">(<argument pos:start="111:61" pos:end="111:66"><expr pos:start="111:61" pos:end="111:66"><name pos:start="111:61" pos:end="111:66">modeCh</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

				<comment type="line" pos:start="113:33" pos:end="113:70">// Reading the message from the client</comment>

				<comment type="line" pos:start="115:33" pos:end="115:65">// String number = br.readLine();</comment>
				<comment type="line" pos:start="116:33" pos:end="116:99">// System.out.println("Message received from client is " + number);</comment>

				<comment type="line" pos:start="118:33" pos:end="118:93">// Multiplying the number by 2 and forming the return message</comment>
				<comment type="line" pos:start="119:33" pos:end="119:56">// String returnMessage;</comment>
				<comment type="line" pos:start="120:33" pos:end="120:40">// try {</comment>
				<comment type="line" pos:start="121:33" pos:end="121:84">// int numberInIntFormat = Integer.parseInt(number);</comment>
				<comment type="line" pos:start="122:33" pos:end="122:75">// int returnValue = numberInIntFormat * 2;</comment>
				<comment type="line" pos:start="123:33" pos:end="123:86">// returnMessage = String.valueOf(returnValue) + "\n";</comment>
				<comment type="line" pos:start="124:33" pos:end="124:70">// } catch (NumberFormatException e) {</comment>
				<comment type="line" pos:start="125:33" pos:end="125:100">// // Input was not a number. Sending proper message back to client.</comment>
				<comment type="line" pos:start="126:33" pos:end="126:83">// returnMessage = "Please send a proper number\n";</comment>
				<comment type="line" pos:start="127:33" pos:end="127:36">// }</comment>

				<comment type="line" pos:start="129:33" pos:end="129:75">// Sending the response back to the client.</comment>
				<comment type="line" pos:start="130:33" pos:end="130:78">// OutputStream os = socket.getOutputStream();</comment>
				<comment type="line" pos:start="131:33" pos:end="131:87">// OutputStreamWriter osw = new OutputStreamWriter(os);</comment>
				<comment type="line" pos:start="132:33" pos:end="132:79">// BufferedWriter bw = new BufferedWriter(osw);</comment>
				<expr_stmt pos:start="133:33" pos:end="133:49"><expr pos:start="133:33" pos:end="133:48"><call pos:start="133:33" pos:end="133:48"><name pos:start="133:33" pos:end="133:40"><name pos:start="133:33" pos:end="133:34">bw</name><operator pos:start="133:35" pos:end="133:35">.</operator><name pos:start="133:36" pos:end="133:40">write</name></name><argument_list pos:start="133:41" pos:end="133:48">(<argument pos:start="133:42" pos:end="133:47"><expr pos:start="133:42" pos:end="133:47"><name pos:start="133:42" pos:end="133:47">toSend</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<expr_stmt pos:start="134:33" pos:end="134:47"><expr pos:start="134:33" pos:end="134:46"><call pos:start="134:33" pos:end="134:46"><name pos:start="134:33" pos:end="134:40"><name pos:start="134:33" pos:end="134:34">bw</name><operator pos:start="134:35" pos:end="134:35">.</operator><name pos:start="134:36" pos:end="134:40">write</name></name><argument_list pos:start="134:41" pos:end="134:46">(<argument pos:start="134:42" pos:end="134:45"><expr pos:start="134:42" pos:end="134:45"><literal type="string" pos:start="134:42" pos:end="134:45">"\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<expr_stmt pos:start="135:33" pos:end="135:94"><expr pos:start="135:33" pos:end="135:93"><call pos:start="135:33" pos:end="135:93"><name pos:start="135:33" pos:end="135:50"><name pos:start="135:33" pos:end="135:38">System</name><operator pos:start="135:39" pos:end="135:39">.</operator><name pos:start="135:40" pos:end="135:42">out</name><operator pos:start="135:43" pos:end="135:43">.</operator><name pos:start="135:44" pos:end="135:50">println</name></name><argument_list pos:start="135:51" pos:end="135:93">(<argument pos:start="135:52" pos:end="135:92"><expr pos:start="135:52" pos:end="135:92"><literal type="string" pos:start="135:52" pos:end="135:83">"Message sent to the client is "</literal> <operator pos:start="135:85" pos:end="135:85">+</operator> <name pos:start="135:87" pos:end="135:92">toSend</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<expr_stmt pos:start="136:33" pos:end="136:43"><expr pos:start="136:33" pos:end="136:42"><call pos:start="136:33" pos:end="136:42"><name pos:start="136:33" pos:end="136:40"><name pos:start="136:33" pos:end="136:34">bw</name><operator pos:start="136:35" pos:end="136:35">.</operator><name pos:start="136:36" pos:end="136:40">flush</name></name><argument_list pos:start="136:41" pos:end="136:42">()</argument_list></call></expr>;</expr_stmt>
				<expr_stmt pos:start="137:33" pos:end="137:38"><expr pos:start="137:33" pos:end="137:37"><name pos:start="137:33" pos:end="137:33">i</name> <operator pos:start="137:35" pos:end="137:35">=</operator> <literal type="number" pos:start="137:37" pos:end="137:37">0</literal></expr>;</expr_stmt>
			</block_content>}</block></while>
			
			<expr_stmt pos:start="140:25" pos:end="140:44"><expr pos:start="140:25" pos:end="140:43"><call pos:start="140:25" pos:end="140:43"><name pos:start="140:25" pos:end="140:36"><name pos:start="140:25" pos:end="140:30">Thread</name><operator pos:start="140:31" pos:end="140:31">.</operator><name pos:start="140:32" pos:end="140:36">sleep</name></name><argument_list pos:start="140:37" pos:end="140:43">(<argument pos:start="140:38" pos:end="140:42"><expr pos:start="140:38" pos:end="140:42"><literal type="number" pos:start="140:38" pos:end="140:42">10000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			
			<decl_stmt pos:start="142:25" pos:end="142:117"><decl pos:start="142:25" pos:end="142:116"><type pos:start="142:25" pos:end="142:44"><name pos:start="142:25" pos:end="142:44">UAVModeChangeMessage</name></type> <name pos:start="142:46" pos:end="142:51">modeCh</name> <init pos:start="142:53" pos:end="142:116">= <expr pos:start="142:55" pos:end="142:116"><operator pos:start="142:55" pos:end="142:57">new</operator> <call pos:start="142:59" pos:end="142:116"><name pos:start="142:59" pos:end="142:78">UAVModeChangeMessage</name><argument_list pos:start="142:79" pos:end="142:116">(<argument pos:start="142:80" pos:end="142:94"><expr pos:start="142:80" pos:end="142:94"><literal type="string" pos:start="142:80" pos:end="142:94">"FAKE_GROUND_2"</literal></expr></argument>, <argument pos:start="142:97" pos:end="142:102"><expr pos:start="142:97" pos:end="142:102"><literal type="string" pos:start="142:97" pos:end="142:102">"UAV1"</literal></expr></argument>, <argument pos:start="142:105" pos:end="142:115"><expr pos:start="142:105" pos:end="142:115"><literal type="string" pos:start="142:105" pos:end="142:115">"STABILIZE"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<decl_stmt pos:start="143:25" pos:end="143:60"><decl pos:start="143:25" pos:end="143:59"><type pos:start="143:25" pos:end="143:30"><name pos:start="143:25" pos:end="143:30">String</name></type> <name pos:start="143:32" pos:end="143:37">toSend</name> <init pos:start="143:39" pos:end="143:59">= <expr pos:start="143:41" pos:end="143:59"><call pos:start="143:41" pos:end="143:59"><name pos:start="143:41" pos:end="143:51"><name pos:start="143:41" pos:end="143:44">GSON</name><operator pos:start="143:45" pos:end="143:45">.</operator><name pos:start="143:46" pos:end="143:51">toJson</name></name><argument_list pos:start="143:52" pos:end="143:59">(<argument pos:start="143:53" pos:end="143:58"><expr pos:start="143:53" pos:end="143:58"><name pos:start="143:53" pos:end="143:58">modeCh</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<expr_stmt pos:start="144:25" pos:end="144:41"><expr pos:start="144:25" pos:end="144:40"><call pos:start="144:25" pos:end="144:40"><name pos:start="144:25" pos:end="144:32"><name pos:start="144:25" pos:end="144:26">bw</name><operator pos:start="144:27" pos:end="144:27">.</operator><name pos:start="144:28" pos:end="144:32">write</name></name><argument_list pos:start="144:33" pos:end="144:40">(<argument pos:start="144:34" pos:end="144:39"><expr pos:start="144:34" pos:end="144:39"><name pos:start="144:34" pos:end="144:39">toSend</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt pos:start="145:25" pos:end="145:39"><expr pos:start="145:25" pos:end="145:38"><call pos:start="145:25" pos:end="145:38"><name pos:start="145:25" pos:end="145:32"><name pos:start="145:25" pos:end="145:26">bw</name><operator pos:start="145:27" pos:end="145:27">.</operator><name pos:start="145:28" pos:end="145:32">write</name></name><argument_list pos:start="145:33" pos:end="145:38">(<argument pos:start="145:34" pos:end="145:37"><expr pos:start="145:34" pos:end="145:37"><literal type="string" pos:start="145:34" pos:end="145:37">"\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt pos:start="146:25" pos:end="146:86"><expr pos:start="146:25" pos:end="146:85"><call pos:start="146:25" pos:end="146:85"><name pos:start="146:25" pos:end="146:42"><name pos:start="146:25" pos:end="146:30">System</name><operator pos:start="146:31" pos:end="146:31">.</operator><name pos:start="146:32" pos:end="146:34">out</name><operator pos:start="146:35" pos:end="146:35">.</operator><name pos:start="146:36" pos:end="146:42">println</name></name><argument_list pos:start="146:43" pos:end="146:85">(<argument pos:start="146:44" pos:end="146:84"><expr pos:start="146:44" pos:end="146:84"><literal type="string" pos:start="146:44" pos:end="146:75">"Message sent to the client is "</literal> <operator pos:start="146:77" pos:end="146:77">+</operator> <name pos:start="146:79" pos:end="146:84">toSend</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt pos:start="147:25" pos:end="147:35"><expr pos:start="147:25" pos:end="147:34"><call pos:start="147:25" pos:end="147:34"><name pos:start="147:25" pos:end="147:32"><name pos:start="147:25" pos:end="147:26">bw</name><operator pos:start="147:27" pos:end="147:27">.</operator><name pos:start="147:28" pos:end="147:32">flush</name></name><argument_list pos:start="147:33" pos:end="147:34">()</argument_list></call></expr>;</expr_stmt>
			
			<expr_stmt pos:start="149:25" pos:end="149:44"><expr pos:start="149:25" pos:end="149:43"><call pos:start="149:25" pos:end="149:43"><name pos:start="149:25" pos:end="149:36"><name pos:start="149:25" pos:end="149:30">Thread</name><operator pos:start="149:31" pos:end="149:31">.</operator><name pos:start="149:32" pos:end="149:36">sleep</name></name><argument_list pos:start="149:37" pos:end="149:43">(<argument pos:start="149:38" pos:end="149:42"><expr pos:start="149:38" pos:end="149:42"><literal type="number" pos:start="149:38" pos:end="149:42">50000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		</block_content>}</block> <catch pos:start="150:19" pos:end="152:17">catch <parameter_list pos:start="150:25" pos:end="150:37">(<parameter pos:start="150:26" pos:end="150:36"><decl pos:start="150:26" pos:end="150:36"><type pos:start="150:26" pos:end="150:36"><name pos:start="150:26" pos:end="150:34">Exception</name></type> <name pos:start="150:36" pos:end="150:36">e</name></decl></parameter>)</parameter_list> <block pos:start="150:39" pos:end="152:17">{<block_content pos:start="151:25" pos:end="151:44">
			<expr_stmt pos:start="151:25" pos:end="151:44"><expr pos:start="151:25" pos:end="151:43"><call pos:start="151:25" pos:end="151:43"><name pos:start="151:25" pos:end="151:41"><name pos:start="151:25" pos:end="151:25">e</name><operator pos:start="151:26" pos:end="151:26">.</operator><name pos:start="151:27" pos:end="151:41">printStackTrace</name></name><argument_list pos:start="151:42" pos:end="151:43">()</argument_list></call></expr>;</expr_stmt>
		</block_content>}</block></catch></try>
	</block_content>}</block></function>

}</block></class></unit>
