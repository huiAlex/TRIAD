<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="Java" filename="flatCode/FullMissionPlan.java" pos:tabs="8"><package pos:start="1:1" pos:end="1:64">package <name pos:start="1:9" pos:end="1:63"><name pos:start="1:9" pos:end="1:11">edu</name><operator pos:start="1:12" pos:end="1:12">.</operator><name pos:start="1:13" pos:end="1:14">nd</name><operator pos:start="1:15" pos:end="1:15">.</operator><name pos:start="1:16" pos:end="1:24">dronology</name><operator pos:start="1:25" pos:end="1:25">.</operator><name pos:start="1:26" pos:end="1:33">services</name><operator pos:start="1:34" pos:end="1:34">.</operator><name pos:start="1:35" pos:end="1:44">extensions</name><operator pos:start="1:45" pos:end="1:45">.</operator><name pos:start="1:46" pos:end="1:60">missionplanning</name><operator pos:start="1:61" pos:end="1:61">.</operator><name pos:start="1:62" pos:end="1:63">v1</name></name>;</package>

<import pos:start="3:1" pos:end="3:27">import <name pos:start="3:8" pos:end="3:26"><name pos:start="3:8" pos:end="3:11">java</name><operator pos:start="3:12" pos:end="3:12">.</operator><name pos:start="3:13" pos:end="3:14">io</name><operator pos:start="3:15" pos:end="3:15">.</operator><name pos:start="3:16" pos:end="3:26">IOException</name></name>;</import>
<import pos:start="4:1" pos:end="4:25">import <name pos:start="4:8" pos:end="4:24"><name pos:start="4:8" pos:end="4:11">java</name><operator pos:start="4:12" pos:end="4:12">.</operator><name pos:start="4:13" pos:end="4:16">util</name><operator pos:start="4:17" pos:end="4:17">.</operator><name pos:start="4:18" pos:end="4:24">HashMap</name></name>;</import>
<import pos:start="5:1" pos:end="5:21">import <name pos:start="5:8" pos:end="5:20"><name pos:start="5:8" pos:end="5:11">java</name><operator pos:start="5:12" pos:end="5:12">.</operator><name pos:start="5:13" pos:end="5:16">util</name><operator pos:start="5:17" pos:end="5:17">.</operator><name pos:start="5:18" pos:end="5:20">Map</name></name>;</import>
<import pos:start="6:1" pos:end="6:27">import <name pos:start="6:8" pos:end="6:26"><name pos:start="6:8" pos:end="6:11">java</name><operator pos:start="6:12" pos:end="6:12">.</operator><name pos:start="6:13" pos:end="6:16">util</name><operator pos:start="6:17" pos:end="6:17">.</operator><name pos:start="6:18" pos:end="6:20">Map</name><operator pos:start="6:21" pos:end="6:21">.</operator><name pos:start="6:22" pos:end="6:26">Entry</name></name>;</import>

<import pos:start="8:1" pos:end="8:30">import <name pos:start="8:8" pos:end="8:29"><name pos:start="8:8" pos:end="8:10">org</name><operator pos:start="8:11" pos:end="8:11">.</operator><name pos:start="8:12" pos:end="8:15">json</name><operator pos:start="8:16" pos:end="8:16">.</operator><name pos:start="8:17" pos:end="8:29">JSONException</name></name>;</import>

<import pos:start="10:1" pos:end="10:48">import <name pos:start="10:8" pos:end="10:47"><name pos:start="10:8" pos:end="10:10">edu</name><operator pos:start="10:11" pos:end="10:11">.</operator><name pos:start="10:12" pos:end="10:13">nd</name><operator pos:start="10:14" pos:end="10:14">.</operator><name pos:start="10:15" pos:end="10:23">dronology</name><operator pos:start="10:24" pos:end="10:24">.</operator><name pos:start="10:25" pos:end="10:28">core</name><operator pos:start="10:29" pos:end="10:29">.</operator><name pos:start="10:30" pos:end="10:47">DronologyConstants</name></name>;</import>
<import pos:start="11:1" pos:end="11:54">import <name pos:start="11:8" pos:end="11:53"><name pos:start="11:8" pos:end="11:10">edu</name><operator pos:start="11:11" pos:end="11:11">.</operator><name pos:start="11:12" pos:end="11:13">nd</name><operator pos:start="11:14" pos:end="11:14">.</operator><name pos:start="11:15" pos:end="11:23">dronology</name><operator pos:start="11:24" pos:end="11:24">.</operator><name pos:start="11:25" pos:end="11:28">core</name><operator pos:start="11:29" pos:end="11:29">.</operator><name pos:start="11:30" pos:end="11:39">coordinate</name><operator pos:start="11:40" pos:end="11:40">.</operator><name pos:start="11:41" pos:end="11:53">LlaCoordinate</name></name>;</import>
<import pos:start="12:1" pos:end="12:47">import <name pos:start="12:8" pos:end="12:46"><name pos:start="12:8" pos:end="12:10">edu</name><operator pos:start="12:11" pos:end="12:11">.</operator><name pos:start="12:12" pos:end="12:13">nd</name><operator pos:start="12:14" pos:end="12:14">.</operator><name pos:start="12:15" pos:end="12:23">dronology</name><operator pos:start="12:24" pos:end="12:24">.</operator><name pos:start="12:25" pos:end="12:28">core</name><operator pos:start="12:29" pos:end="12:29">.</operator><name pos:start="12:30" pos:end="12:36">vehicle</name><operator pos:start="12:37" pos:end="12:37">.</operator><name pos:start="12:38" pos:end="12:46">IUAVProxy</name></name>;</import>
<import pos:start="13:1" pos:end="13:69">import <name pos:start="13:8" pos:end="13:68"><name pos:start="13:8" pos:end="13:10">edu</name><operator pos:start="13:11" pos:end="13:11">.</operator><name pos:start="13:12" pos:end="13:13">nd</name><operator pos:start="13:14" pos:end="13:14">.</operator><name pos:start="13:15" pos:end="13:23">dronology</name><operator pos:start="13:24" pos:end="13:24">.</operator><name pos:start="13:25" pos:end="13:32">services</name><operator pos:start="13:33" pos:end="13:33">.</operator><name pos:start="13:34" pos:end="13:37">core</name><operator pos:start="13:38" pos:end="13:38">.</operator><name pos:start="13:39" pos:end="13:42">util</name><operator pos:start="13:43" pos:end="13:43">.</operator><name pos:start="13:44" pos:end="13:68">DronologyServiceException</name></name>;</import>
<import pos:start="14:1" pos:end="14:86">import <name pos:start="14:8" pos:end="14:85"><name pos:start="14:8" pos:end="14:10">edu</name><operator pos:start="14:11" pos:end="14:11">.</operator><name pos:start="14:12" pos:end="14:13">nd</name><operator pos:start="14:14" pos:end="14:14">.</operator><name pos:start="14:15" pos:end="14:23">dronology</name><operator pos:start="14:24" pos:end="14:24">.</operator><name pos:start="14:25" pos:end="14:32">services</name><operator pos:start="14:33" pos:end="14:33">.</operator><name pos:start="14:34" pos:end="14:43">extensions</name><operator pos:start="14:44" pos:end="14:44">.</operator><name pos:start="14:45" pos:end="14:59">missionplanning</name><operator pos:start="14:60" pos:end="14:60">.</operator><name pos:start="14:61" pos:end="14:85">MissionExecutionException</name></name>;</import>
<import pos:start="15:1" pos:end="15:89">import <name pos:start="15:8" pos:end="15:88"><name pos:start="15:8" pos:end="15:10">edu</name><operator pos:start="15:11" pos:end="15:11">.</operator><name pos:start="15:12" pos:end="15:13">nd</name><operator pos:start="15:14" pos:end="15:14">.</operator><name pos:start="15:15" pos:end="15:23">dronology</name><operator pos:start="15:24" pos:end="15:24">.</operator><name pos:start="15:25" pos:end="15:32">services</name><operator pos:start="15:33" pos:end="15:33">.</operator><name pos:start="15:34" pos:end="15:43">extensions</name><operator pos:start="15:44" pos:end="15:44">.</operator><name pos:start="15:45" pos:end="15:59">missionplanning</name><operator pos:start="15:60" pos:end="15:60">.</operator><name pos:start="15:61" pos:end="15:64">plan</name><operator pos:start="15:65" pos:end="15:65">.</operator><name pos:start="15:66" pos:end="15:88">IExecuteableMissionPlan</name></name>;</import>
<import pos:start="16:1" pos:end="16:77">import <name pos:start="16:8" pos:end="16:76"><name pos:start="16:8" pos:end="16:10">edu</name><operator pos:start="16:11" pos:end="16:11">.</operator><name pos:start="16:12" pos:end="16:13">nd</name><operator pos:start="16:14" pos:end="16:14">.</operator><name pos:start="16:15" pos:end="16:23">dronology</name><operator pos:start="16:24" pos:end="16:24">.</operator><name pos:start="16:25" pos:end="16:32">services</name><operator pos:start="16:33" pos:end="16:33">.</operator><name pos:start="16:34" pos:end="16:43">extensions</name><operator pos:start="16:44" pos:end="16:44">.</operator><name pos:start="16:45" pos:end="16:59">missionplanning</name><operator pos:start="16:60" pos:end="16:60">.</operator><name pos:start="16:61" pos:end="16:64">plan</name><operator pos:start="16:65" pos:end="16:65">.</operator><name pos:start="16:66" pos:end="16:76">MissionUtil</name></name>;</import>
<import pos:start="17:1" pos:end="17:80">import <name pos:start="17:8" pos:end="17:79"><name pos:start="17:8" pos:end="17:10">edu</name><operator pos:start="17:11" pos:end="17:11">.</operator><name pos:start="17:12" pos:end="17:13">nd</name><operator pos:start="17:14" pos:end="17:14">.</operator><name pos:start="17:15" pos:end="17:23">dronology</name><operator pos:start="17:24" pos:end="17:24">.</operator><name pos:start="17:25" pos:end="17:32">services</name><operator pos:start="17:33" pos:end="17:33">.</operator><name pos:start="17:34" pos:end="17:43">extensions</name><operator pos:start="17:44" pos:end="17:44">.</operator><name pos:start="17:45" pos:end="17:59">missionplanning</name><operator pos:start="17:60" pos:end="17:60">.</operator><name pos:start="17:61" pos:end="17:64">plan</name><operator pos:start="17:65" pos:end="17:65">.</operator><name pos:start="17:66" pos:end="17:79">UAVMissionPlan</name></name>;</import>
<import pos:start="18:1" pos:end="18:88">import <name pos:start="18:8" pos:end="18:87"><name pos:start="18:8" pos:end="18:10">edu</name><operator pos:start="18:11" pos:end="18:11">.</operator><name pos:start="18:12" pos:end="18:13">nd</name><operator pos:start="18:14" pos:end="18:14">.</operator><name pos:start="18:15" pos:end="18:23">dronology</name><operator pos:start="18:24" pos:end="18:24">.</operator><name pos:start="18:25" pos:end="18:32">services</name><operator pos:start="18:33" pos:end="18:33">.</operator><name pos:start="18:34" pos:end="18:43">extensions</name><operator pos:start="18:44" pos:end="18:44">.</operator><name pos:start="18:45" pos:end="18:59">missionplanning</name><operator pos:start="18:60" pos:end="18:60">.</operator><name pos:start="18:61" pos:end="18:64">sync</name><operator pos:start="18:65" pos:end="18:65">.</operator><name pos:start="18:66" pos:end="18:87">SynchronizationManager</name></name>;</import>
<import pos:start="19:1" pos:end="19:78">import <name pos:start="19:8" pos:end="19:77"><name pos:start="19:8" pos:end="19:10">edu</name><operator pos:start="19:11" pos:end="19:11">.</operator><name pos:start="19:12" pos:end="19:13">nd</name><operator pos:start="19:14" pos:end="19:14">.</operator><name pos:start="19:15" pos:end="19:23">dronology</name><operator pos:start="19:24" pos:end="19:24">.</operator><name pos:start="19:25" pos:end="19:32">services</name><operator pos:start="19:33" pos:end="19:33">.</operator><name pos:start="19:34" pos:end="19:43">extensions</name><operator pos:start="19:44" pos:end="19:44">.</operator><name pos:start="19:45" pos:end="19:59">missionplanning</name><operator pos:start="19:60" pos:end="19:60">.</operator><name pos:start="19:61" pos:end="19:65">tasks</name><operator pos:start="19:66" pos:end="19:66">.</operator><name pos:start="19:67" pos:end="19:77">TaskFactory</name></name>;</import>
<import pos:start="20:1" pos:end="20:72">import <name pos:start="20:8" pos:end="20:71"><name pos:start="20:8" pos:end="20:10">edu</name><operator pos:start="20:11" pos:end="20:11">.</operator><name pos:start="20:12" pos:end="20:13">nd</name><operator pos:start="20:14" pos:end="20:14">.</operator><name pos:start="20:15" pos:end="20:23">dronology</name><operator pos:start="20:24" pos:end="20:24">.</operator><name pos:start="20:25" pos:end="20:32">services</name><operator pos:start="20:33" pos:end="20:33">.</operator><name pos:start="20:34" pos:end="20:42">instances</name><operator pos:start="20:43" pos:end="20:43">.</operator><name pos:start="20:44" pos:end="20:53">dronesetup</name><operator pos:start="20:54" pos:end="20:54">.</operator><name pos:start="20:55" pos:end="20:71">DroneSetupService</name></name>;</import>
<import pos:start="21:1" pos:end="21:30">import <name pos:start="21:8" pos:end="21:29"><name pos:start="21:8" pos:end="21:10">net</name><operator pos:start="21:11" pos:end="21:11">.</operator><name pos:start="21:12" pos:end="21:13">mv</name><operator pos:start="21:14" pos:end="21:14">.</operator><name pos:start="21:15" pos:end="21:21">logging</name><operator pos:start="21:22" pos:end="21:22">.</operator><name pos:start="21:23" pos:end="21:29">ILogger</name></name>;</import>
<import pos:start="22:1" pos:end="22:37">import <name pos:start="22:8" pos:end="22:36"><name pos:start="22:8" pos:end="22:10">net</name><operator pos:start="22:11" pos:end="22:11">.</operator><name pos:start="22:12" pos:end="22:13">mv</name><operator pos:start="22:14" pos:end="22:14">.</operator><name pos:start="22:15" pos:end="22:21">logging</name><operator pos:start="22:22" pos:end="22:22">.</operator><name pos:start="22:23" pos:end="22:36">LoggerProvider</name></name>;</import>

<comment type="block" format="javadoc" pos:start="24:1" pos:end="31:3">/**
 * 
 * Manages a mission plan. Each Mission plan has one &lt;code&gt;FullMissionPlan&lt;/code&gt; instance, and one &lt;code&gt;UAVMissionPlan&lt;/code&gt; instance for each UAV in the Mission plan. &lt;br&gt;
 * Each of the UAV's individual mission plans are composed of MissionTasks. &lt;br&gt;
 * Once the entire mission plan is loaded, a thread is created which checks each of the individual UAVMissionPlans to determine if they can start the next task.
 * 
 *@author Jane Cleland-Huang
 */</comment>
<class pos:start="32:1" pos:end="197:1"><annotation pos:start="32:1" pos:end="32:11">@<name pos:start="32:2" pos:end="32:11">Deprecated</name></annotation>
<specifier pos:start="33:1" pos:end="33:6">public</specifier> class <name pos:start="33:14" pos:end="33:28">FullMissionPlan</name> <super_list pos:start="33:30" pos:end="33:63"><implements pos:start="33:30" pos:end="33:63">implements <super pos:start="33:41" pos:end="33:63"><name pos:start="33:41" pos:end="33:63">IExecuteableMissionPlan</name></super></implements></super_list> <block pos:start="33:65" pos:end="197:1">{

	<decl_stmt pos:start="35:9" pos:end="35:94"><decl pos:start="35:9" pos:end="35:93"><type pos:start="35:9" pos:end="35:36"><specifier pos:start="35:9" pos:end="35:15">private</specifier> <specifier pos:start="35:17" pos:end="35:22">static</specifier> <specifier pos:start="35:24" pos:end="35:28">final</specifier> <name pos:start="35:30" pos:end="35:36">ILogger</name></type> <name pos:start="35:38" pos:end="35:43">LOGGER</name> <init pos:start="35:45" pos:end="35:93">= <expr pos:start="35:47" pos:end="35:93"><call pos:start="35:47" pos:end="35:93"><name pos:start="35:47" pos:end="35:70"><name pos:start="35:47" pos:end="35:60">LoggerProvider</name><operator pos:start="35:61" pos:end="35:61">.</operator><name pos:start="35:62" pos:end="35:70">getLogger</name></name><argument_list pos:start="35:71" pos:end="35:93">(<argument pos:start="35:72" pos:end="35:92"><expr pos:start="35:72" pos:end="35:92"><name pos:start="35:72" pos:end="35:92"><name pos:start="35:72" pos:end="35:86">FullMissionPlan</name><operator pos:start="35:87" pos:end="35:87">.</operator><name pos:start="35:88" pos:end="35:92">class</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

	<decl_stmt pos:start="37:9" pos:end="37:60"><decl pos:start="37:9" pos:end="37:59"><type pos:start="37:9" pos:end="37:43"><specifier pos:start="37:9" pos:end="37:15">private</specifier> <name pos:start="37:17" pos:end="37:43"><name pos:start="37:17" pos:end="37:19">Map</name><argument_list type="generic" pos:start="37:20" pos:end="37:43">&lt;<argument pos:start="37:21" pos:end="37:26"><name pos:start="37:21" pos:end="37:26">String</name></argument>, <argument pos:start="37:29" pos:end="37:42"><name pos:start="37:29" pos:end="37:42">UAVMissionPlan</name></argument>&gt;</argument_list></name></type> <name pos:start="37:45" pos:end="37:59">uavMissionPlans</name></decl>;</decl_stmt>
	<decl_stmt pos:start="38:9" pos:end="38:53"><decl pos:start="38:9" pos:end="38:52"><type pos:start="38:9" pos:end="38:38"><specifier pos:start="38:9" pos:end="38:15">private</specifier> <name pos:start="38:17" pos:end="38:38">SynchronizationManager</name></type> <name pos:start="38:40" pos:end="38:52">synchPointMgr</name></decl>;</decl_stmt>
	<decl_stmt pos:start="39:9" pos:end="39:31"><decl pos:start="39:9" pos:end="39:30"><type pos:start="39:9" pos:end="39:22"><specifier pos:start="39:9" pos:end="39:15">private</specifier> <name pos:start="39:17" pos:end="39:22">String</name></type> <name pos:start="39:24" pos:end="39:30">mission</name></decl>;</decl_stmt>

	<comment type="block" format="javadoc" pos:start="41:9" pos:end="45:11">/**
	 * Constructs the CoordinatedMission instance. A mission consists of one or more UAVs, each of which has a set of assigned tasks and synchronization points.
	 * 
	 * @param mission
	 */</comment>
	<constructor pos:start="46:9" pos:end="51:9"><specifier pos:start="46:9" pos:end="46:14">public</specifier> <name pos:start="46:16" pos:end="46:30">FullMissionPlan</name><parameter_list pos:start="46:31" pos:end="46:46">(<parameter pos:start="46:32" pos:end="46:45"><decl pos:start="46:32" pos:end="46:45"><type pos:start="46:32" pos:end="46:37"><name pos:start="46:32" pos:end="46:37">String</name></type> <name pos:start="46:39" pos:end="46:45">mission</name></decl></parameter>)</parameter_list> <block pos:start="46:48" pos:end="51:9">{<block_content pos:start="47:17" pos:end="49:69">
		<expr_stmt pos:start="47:17" pos:end="47:39"><expr pos:start="47:17" pos:end="47:38"><name pos:start="47:17" pos:end="47:28"><name pos:start="47:17" pos:end="47:20">this</name><operator pos:start="47:21" pos:end="47:21">.</operator><name pos:start="47:22" pos:end="47:28">mission</name></name> <operator pos:start="47:30" pos:end="47:30">=</operator> <name pos:start="47:32" pos:end="47:38">mission</name></expr>;</expr_stmt>
		<expr_stmt pos:start="48:17" pos:end="48:50"><expr pos:start="48:17" pos:end="48:49"><name pos:start="48:17" pos:end="48:31">uavMissionPlans</name> <operator pos:start="48:33" pos:end="48:33">=</operator> <operator pos:start="48:35" pos:end="48:37">new</operator> <call pos:start="48:39" pos:end="48:49"><name pos:start="48:39" pos:end="48:47"><name pos:start="48:39" pos:end="48:45">HashMap</name><argument_list type="generic" pos:start="48:46" pos:end="48:47">&lt;&gt;</argument_list></name><argument_list pos:start="48:48" pos:end="48:49">()</argument_list></call></expr>;</expr_stmt>
		<expr_stmt pos:start="49:17" pos:end="49:69"><expr pos:start="49:17" pos:end="49:68"><name pos:start="49:17" pos:end="49:29">synchPointMgr</name> <operator pos:start="49:31" pos:end="49:31">=</operator> <call pos:start="49:33" pos:end="49:68"><name pos:start="49:33" pos:end="49:66"><name pos:start="49:33" pos:end="49:54">SynchronizationManager</name><operator pos:start="49:55" pos:end="49:55">.</operator><name pos:start="49:56" pos:end="49:66">getInstance</name></name><argument_list pos:start="49:67" pos:end="49:68">()</argument_list></call></expr>;</expr_stmt>

	</block_content>}</block></constructor>

	<comment type="block" format="javadoc" pos:start="53:9" pos:end="58:11">/**
	 * Loads mission from JSON file. Currently hard coded. 
	 * 
	 * @param mission
	 * @throws MissionExecutionException
	 */</comment>
	<function pos:start="59:9" pos:end="66:9"><type pos:start="59:9" pos:end="59:20"><specifier pos:start="59:9" pos:end="59:15">private</specifier> <name pos:start="59:17" pos:end="59:20">void</name></type> <name pos:start="59:22" pos:end="59:32">loadMission</name><parameter_list pos:start="59:33" pos:end="59:48">(<parameter pos:start="59:34" pos:end="59:47"><decl pos:start="59:34" pos:end="59:47"><type pos:start="59:34" pos:end="59:39"><name pos:start="59:34" pos:end="59:39">String</name></type> <name pos:start="59:41" pos:end="59:47">mission</name></decl></parameter>)</parameter_list> <throws pos:start="59:50" pos:end="59:81">throws <argument pos:start="59:57" pos:end="59:81"><expr pos:start="59:57" pos:end="59:81"><name pos:start="59:57" pos:end="59:81">MissionExecutionException</name></expr></argument></throws> <block pos:start="59:83" pos:end="66:9">{<block_content pos:start="60:17" pos:end="65:17">
		<decl_stmt pos:start="60:17" pos:end="60:83"><decl pos:start="60:17" pos:end="60:82"><type pos:start="60:17" pos:end="60:37"><name pos:start="60:17" pos:end="60:37">JSONMissionPlanReader</name></type> <name pos:start="60:39" pos:end="60:48">jsonReader</name> <init pos:start="60:50" pos:end="60:82">= <expr pos:start="60:52" pos:end="60:82"><operator pos:start="60:52" pos:end="60:54">new</operator> <call pos:start="60:56" pos:end="60:82"><name pos:start="60:56" pos:end="60:76">JSONMissionPlanReader</name><argument_list pos:start="60:77" pos:end="60:82">(<argument pos:start="60:78" pos:end="60:81"><expr pos:start="60:78" pos:end="60:81"><name pos:start="60:78" pos:end="60:81">this</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<try pos:start="61:17" pos:end="65:17">try <block pos:start="61:21" pos:end="63:17">{<block_content pos:start="62:25" pos:end="62:57">
			<expr_stmt pos:start="62:25" pos:end="62:57"><expr pos:start="62:25" pos:end="62:56"><call pos:start="62:25" pos:end="62:56"><name pos:start="62:25" pos:end="62:47"><name pos:start="62:25" pos:end="62:34">jsonReader</name><operator pos:start="62:35" pos:end="62:35">.</operator><name pos:start="62:36" pos:end="62:47">parseMission</name></name><argument_list pos:start="62:48" pos:end="62:56">(<argument pos:start="62:49" pos:end="62:55"><expr pos:start="62:49" pos:end="62:55"><name pos:start="62:49" pos:end="62:55">mission</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		</block_content>}</block> <catch pos:start="63:19" pos:end="65:17">catch <parameter_list pos:start="63:25" pos:end="63:55">(<parameter pos:start="63:26" pos:end="63:54"><decl pos:start="63:26" pos:end="63:54"><type pos:start="63:26" pos:end="63:36"><name pos:start="63:26" pos:end="63:36">IOException</name></type> | <type pos:start="63:40" pos:end="63:54"><name pos:start="63:40" pos:end="63:52">JSONException</name></type> <name pos:start="63:54" pos:end="63:54">e</name></decl></parameter>)</parameter_list> <block pos:start="63:57" pos:end="65:17">{<block_content pos:start="64:25" pos:end="64:76">
			<throw pos:start="64:25" pos:end="64:76">throw <expr pos:start="64:31" pos:end="64:75"><operator pos:start="64:31" pos:end="64:33">new</operator> <call pos:start="64:35" pos:end="64:75"><name pos:start="64:35" pos:end="64:59">MissionExecutionException</name><argument_list pos:start="64:60" pos:end="64:75">(<argument pos:start="64:61" pos:end="64:74"><expr pos:start="64:61" pos:end="64:74"><call pos:start="64:61" pos:end="64:74"><name pos:start="64:61" pos:end="64:72"><name pos:start="64:61" pos:end="64:61">e</name><operator pos:start="64:62" pos:end="64:62">.</operator><name pos:start="64:63" pos:end="64:72">getMessage</name></name><argument_list pos:start="64:73" pos:end="64:74">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</throw>
		</block_content>}</block></catch></try>
	</block_content>}</block></function>

	<comment type="block" format="javadoc" pos:start="68:9" pos:end="74:11">/**
	 * Adds an additional UAV to the mission plan. Creates the &lt;code&gt;UAVMissionTasks&lt;/code&gt; instance and passes it a reference to the &lt;code&gt;synchPointMgr&lt;/code&gt;
	 * 
	 * @param uavID
	 *          the ID of the UAV
	 * @throws MissionExecutionException
	 */</comment>
	<function pos:start="75:9" pos:end="81:9"><type pos:start="75:9" pos:end="75:19"><specifier pos:start="75:9" pos:end="75:14">public</specifier> <name pos:start="75:16" pos:end="75:19">void</name></type> <name pos:start="75:21" pos:end="75:26">addUAV</name><parameter_list pos:start="75:27" pos:end="75:40">(<parameter pos:start="75:28" pos:end="75:39"><decl pos:start="75:28" pos:end="75:39"><type pos:start="75:28" pos:end="75:33"><name pos:start="75:28" pos:end="75:33">String</name></type> <name pos:start="75:35" pos:end="75:39">uavID</name></decl></parameter>)</parameter_list> <throws pos:start="75:42" pos:end="75:73">throws <argument pos:start="75:49" pos:end="75:73"><expr pos:start="75:49" pos:end="75:73"><name pos:start="75:49" pos:end="75:73">MissionExecutionException</name></expr></argument></throws> <block pos:start="75:75" pos:end="81:9">{<block_content pos:start="76:17" pos:end="80:49">
		<decl_stmt pos:start="76:17" pos:end="76:79"><decl pos:start="76:17" pos:end="76:78"><type pos:start="76:17" pos:end="76:30"><name pos:start="76:17" pos:end="76:30">UAVMissionPlan</name></type> <name pos:start="76:32" pos:end="76:35">plan</name> <init pos:start="76:37" pos:end="76:78">= <expr pos:start="76:39" pos:end="76:78"><operator pos:start="76:39" pos:end="76:41">new</operator> <call pos:start="76:43" pos:end="76:78"><name pos:start="76:43" pos:end="76:56">UAVMissionPlan</name><argument_list pos:start="76:57" pos:end="76:78">(<argument pos:start="76:58" pos:end="76:62"><expr pos:start="76:58" pos:end="76:62"><name pos:start="76:58" pos:end="76:62">uavID</name></expr></argument>, <argument pos:start="76:65" pos:end="76:77"><expr pos:start="76:65" pos:end="76:77"><name pos:start="76:65" pos:end="76:77">synchPointMgr</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<if_stmt pos:start="77:17" pos:end="79:17"><if pos:start="77:17" pos:end="79:17">if <condition pos:start="77:20" pos:end="77:55">(<expr pos:start="77:21" pos:end="77:54"><call pos:start="77:21" pos:end="77:54"><name pos:start="77:21" pos:end="77:47"><name pos:start="77:21" pos:end="77:35">uavMissionPlans</name><operator pos:start="77:36" pos:end="77:36">.</operator><name pos:start="77:37" pos:end="77:47">containsKey</name></name><argument_list pos:start="77:48" pos:end="77:54">(<argument pos:start="77:49" pos:end="77:53"><expr pos:start="77:49" pos:end="77:53"><name pos:start="77:49" pos:end="77:53">uavID</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="77:57" pos:end="79:17">{<block_content pos:start="78:25" pos:end="78:116">
			<throw pos:start="78:25" pos:end="78:116">throw <expr pos:start="78:31" pos:end="78:115"><operator pos:start="78:31" pos:end="78:33">new</operator> <call pos:start="78:35" pos:end="78:115"><name pos:start="78:35" pos:end="78:59">MissionExecutionException</name><argument_list pos:start="78:60" pos:end="78:115">(<argument pos:start="78:61" pos:end="78:114"><expr pos:start="78:61" pos:end="78:114"><literal type="string" pos:start="78:61" pos:end="78:84">"Mission Plan for UAV '"</literal> <operator pos:start="78:86" pos:end="78:86">+</operator> <name pos:start="78:88" pos:end="78:92">uavID</name> <operator pos:start="78:94" pos:end="78:94">+</operator> <literal type="string" pos:start="78:96" pos:end="78:114">"' already defined"</literal></expr></argument>)</argument_list></call></expr>;</throw>
		</block_content>}</block></if></if_stmt>
		<expr_stmt pos:start="80:17" pos:end="80:49"><expr pos:start="80:17" pos:end="80:48"><call pos:start="80:17" pos:end="80:48"><name pos:start="80:17" pos:end="80:35"><name pos:start="80:17" pos:end="80:31">uavMissionPlans</name><operator pos:start="80:32" pos:end="80:32">.</operator><name pos:start="80:33" pos:end="80:35">put</name></name><argument_list pos:start="80:36" pos:end="80:48">(<argument pos:start="80:37" pos:end="80:41"><expr pos:start="80:37" pos:end="80:41"><name pos:start="80:37" pos:end="80:41">uavID</name></expr></argument>, <argument pos:start="80:44" pos:end="80:47"><expr pos:start="80:44" pos:end="80:47"><name pos:start="80:44" pos:end="80:47">plan</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	</block_content>}</block></function>

	<function pos:start="83:9" pos:end="85:9"><type pos:start="83:9" pos:end="83:19"><specifier pos:start="83:9" pos:end="83:14">public</specifier> <name pos:start="83:16" pos:end="83:19">void</name></type> <name pos:start="83:21" pos:end="83:29">removeUAV</name><parameter_list pos:start="83:30" pos:end="83:43">(<parameter pos:start="83:31" pos:end="83:42"><decl pos:start="83:31" pos:end="83:42"><type pos:start="83:31" pos:end="83:36"><name pos:start="83:31" pos:end="83:36">String</name></type> <name pos:start="83:38" pos:end="83:42">uavID</name></decl></parameter>)</parameter_list> <block pos:start="83:45" pos:end="85:9">{<block_content pos:start="84:17" pos:end="84:46">
		<expr_stmt pos:start="84:17" pos:end="84:46"><expr pos:start="84:17" pos:end="84:45"><call pos:start="84:17" pos:end="84:45"><name pos:start="84:17" pos:end="84:38"><name pos:start="84:17" pos:end="84:31">uavMissionPlans</name><operator pos:start="84:32" pos:end="84:32">.</operator><name pos:start="84:33" pos:end="84:38">remove</name></name><argument_list pos:start="84:39" pos:end="84:45">(<argument pos:start="84:40" pos:end="84:44"><expr pos:start="84:40" pos:end="84:44"><name pos:start="84:40" pos:end="84:44">uavID</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	</block_content>}</block></function>

	<comment type="block" format="javadoc" pos:start="87:9" pos:end="97:11">/**
	 * Assigns a task to a specific UAV
	 * 
	 * @param uavID
	 *          UAV Identifier
	 * @param task
	 *          Task to perform (e.g., Route, Waypoint, Synchronize, FlightPattern)
	 * @param taskID
	 *          Task specifics (e.g., specific waypoint, route name etc)
	 * @throws MissionExecutionException
	 */</comment>
	<function pos:start="98:9" pos:end="106:9"><type pos:start="98:9" pos:end="98:19"><specifier pos:start="98:9" pos:end="98:14">public</specifier> <name pos:start="98:16" pos:end="98:19">void</name></type> <name pos:start="98:21" pos:end="98:27">addTask</name><parameter_list pos:start="98:28" pos:end="98:87">(<parameter pos:start="98:29" pos:end="98:40"><decl pos:start="98:29" pos:end="98:40"><type pos:start="98:29" pos:end="98:40"><name pos:start="98:29" pos:end="98:34">String</name></type> <name pos:start="98:36" pos:end="98:40">uavID</name></decl></parameter>, <parameter pos:start="98:43" pos:end="98:53"><decl pos:start="98:43" pos:end="98:53"><type pos:start="98:43" pos:end="98:53"><name pos:start="98:43" pos:end="98:48">String</name></type> <name pos:start="98:50" pos:end="98:53">task</name></decl></parameter>, <parameter pos:start="98:56" pos:end="98:68"><decl pos:start="98:56" pos:end="98:68"><type pos:start="98:56" pos:end="98:68"><name pos:start="98:56" pos:end="98:61">String</name></type> <name pos:start="98:63" pos:end="98:68">taskID</name></decl></parameter>, <parameter pos:start="98:71" pos:end="98:86"><decl pos:start="98:71" pos:end="98:86"><type pos:start="98:71" pos:end="98:86"><name pos:start="98:71" pos:end="98:76">Object</name><modifier pos:start="98:77" pos:end="98:79">...</modifier></type> <name pos:start="98:81" pos:end="98:86">params</name></decl></parameter>)</parameter_list> <throws pos:start="98:89" pos:end="98:120">throws <argument pos:start="98:96" pos:end="98:120"><expr pos:start="98:96" pos:end="98:120"><name pos:start="98:96" pos:end="98:120">MissionExecutionException</name></expr></argument></throws> <block pos:start="98:122" pos:end="106:9">{<block_content pos:start="99:17" pos:end="105:101">
		<for pos:start="99:17" pos:end="104:17">for <control pos:start="99:21" pos:end="99:68">(<init pos:start="99:22" pos:end="99:67"><decl pos:start="99:22" pos:end="99:67"><type pos:start="99:22" pos:end="99:35"><name pos:start="99:22" pos:end="99:35">UAVMissionPlan</name></type> <name pos:start="99:37" pos:end="99:40">plan</name> <range pos:start="99:42" pos:end="99:67">: <expr pos:start="99:44" pos:end="99:67"><call pos:start="99:44" pos:end="99:67"><name pos:start="99:44" pos:end="99:65"><name pos:start="99:44" pos:end="99:58">uavMissionPlans</name><operator pos:start="99:59" pos:end="99:59">.</operator><name pos:start="99:60" pos:end="99:65">values</name></name><argument_list pos:start="99:66" pos:end="99:67">()</argument_list></call></expr></range></decl></init>)</control> <block pos:start="99:70" pos:end="104:17">{<block_content pos:start="100:25" pos:end="103:25">
			<if_stmt pos:start="100:25" pos:end="103:25"><if pos:start="100:25" pos:end="103:25">if <condition pos:start="100:28" pos:end="100:58">(<expr pos:start="100:29" pos:end="100:57"><call pos:start="100:29" pos:end="100:43"><name pos:start="100:29" pos:end="100:41"><name pos:start="100:29" pos:end="100:32">plan</name><operator pos:start="100:33" pos:end="100:33">.</operator><name pos:start="100:34" pos:end="100:41">getUavID</name></name><argument_list pos:start="100:42" pos:end="100:43">()</argument_list></call><operator pos:start="100:44" pos:end="100:44">.</operator><call pos:start="100:45" pos:end="100:57"><name pos:start="100:45" pos:end="100:50">equals</name><argument_list pos:start="100:51" pos:end="100:57">(<argument pos:start="100:52" pos:end="100:56"><expr pos:start="100:52" pos:end="100:56"><name pos:start="100:52" pos:end="100:56">uavID</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="100:60" pos:end="103:25">{<block_content pos:start="101:33" pos:end="102:39">
				<expr_stmt pos:start="101:33" pos:end="101:110"><expr pos:start="101:33" pos:end="101:109"><call pos:start="101:33" pos:end="101:109"><name pos:start="101:33" pos:end="101:44"><name pos:start="101:33" pos:end="101:36">plan</name><operator pos:start="101:37" pos:end="101:37">.</operator><name pos:start="101:38" pos:end="101:44">addTask</name></name><argument_list pos:start="101:45" pos:end="101:109">(<argument pos:start="101:46" pos:end="101:93"><expr pos:start="101:46" pos:end="101:93"><call pos:start="101:46" pos:end="101:93"><name pos:start="101:46" pos:end="101:64"><name pos:start="101:46" pos:end="101:56">TaskFactory</name><operator pos:start="101:57" pos:end="101:57">.</operator><name pos:start="101:58" pos:end="101:64">getTask</name></name><argument_list pos:start="101:65" pos:end="101:93">(<argument pos:start="101:66" pos:end="101:69"><expr pos:start="101:66" pos:end="101:69"><name pos:start="101:66" pos:end="101:69">task</name></expr></argument>, <argument pos:start="101:72" pos:end="101:76"><expr pos:start="101:72" pos:end="101:76"><name pos:start="101:72" pos:end="101:76">uavID</name></expr></argument>, <argument pos:start="101:79" pos:end="101:84"><expr pos:start="101:79" pos:end="101:84"><name pos:start="101:79" pos:end="101:84">taskID</name></expr></argument>, <argument pos:start="101:87" pos:end="101:92"><expr pos:start="101:87" pos:end="101:92"><name pos:start="101:87" pos:end="101:92">params</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="101:96" pos:end="101:108"><expr pos:start="101:96" pos:end="101:108"><name pos:start="101:96" pos:end="101:108">synchPointMgr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<return pos:start="102:33" pos:end="102:39">return;</return>
			</block_content>}</block></if></if_stmt>
		</block_content>}</block></for>
		<throw pos:start="105:17" pos:end="105:101">throw <expr pos:start="105:23" pos:end="105:100"><operator pos:start="105:23" pos:end="105:25">new</operator> <call pos:start="105:27" pos:end="105:100"><name pos:start="105:27" pos:end="105:51">MissionExecutionException</name><argument_list pos:start="105:52" pos:end="105:100">(<argument pos:start="105:53" pos:end="105:99"><expr pos:start="105:53" pos:end="105:99"><literal type="string" pos:start="105:53" pos:end="105:70">"UAVMissionPlan '"</literal> <operator pos:start="105:72" pos:end="105:72">+</operator> <name pos:start="105:74" pos:end="105:78">uavID</name> <operator pos:start="105:80" pos:end="105:80">+</operator> <literal type="string" pos:start="105:82" pos:end="105:99">"' not available!"</literal></expr></argument>)</argument_list></call></expr>;</throw>
	</block_content>}</block></function>

	<function pos:start="108:9" pos:end="116:9"><annotation pos:start="108:9" pos:end="108:17">@<name pos:start="108:10" pos:end="108:17">Override</name></annotation>
	<type pos:start="109:9" pos:end="109:22"><specifier pos:start="109:9" pos:end="109:14">public</specifier> <name pos:start="109:16" pos:end="109:22">boolean</name></type> <name pos:start="109:24" pos:end="109:38">isMissionActive</name><parameter_list pos:start="109:39" pos:end="109:40">()</parameter_list> <block pos:start="109:42" pos:end="116:9">{<block_content pos:start="110:17" pos:end="115:29">
		<for pos:start="110:17" pos:end="114:17">for <control pos:start="110:21" pos:end="110:68">(<init pos:start="110:22" pos:end="110:67"><decl pos:start="110:22" pos:end="110:67"><type pos:start="110:22" pos:end="110:35"><name pos:start="110:22" pos:end="110:35">UAVMissionPlan</name></type> <name pos:start="110:37" pos:end="110:40">plan</name> <range pos:start="110:42" pos:end="110:67">: <expr pos:start="110:44" pos:end="110:67"><call pos:start="110:44" pos:end="110:67"><name pos:start="110:44" pos:end="110:65"><name pos:start="110:44" pos:end="110:58">uavMissionPlans</name><operator pos:start="110:59" pos:end="110:59">.</operator><name pos:start="110:60" pos:end="110:65">values</name></name><argument_list pos:start="110:66" pos:end="110:67">()</argument_list></call></expr></range></decl></init>)</control> <block pos:start="110:70" pos:end="114:17">{<block_content pos:start="111:25" pos:end="113:25">
			<if_stmt pos:start="111:25" pos:end="113:25"><if pos:start="111:25" pos:end="113:25">if <condition pos:start="111:28" pos:end="111:44">(<expr pos:start="111:29" pos:end="111:43"><call pos:start="111:29" pos:end="111:43"><name pos:start="111:29" pos:end="111:41"><name pos:start="111:29" pos:end="111:32">plan</name><operator pos:start="111:33" pos:end="111:33">.</operator><name pos:start="111:34" pos:end="111:41">hasTasks</name></name><argument_list pos:start="111:42" pos:end="111:43">()</argument_list></call></expr>)</condition> <block pos:start="111:46" pos:end="113:25">{<block_content pos:start="112:33" pos:end="112:44">
				<return pos:start="112:33" pos:end="112:44">return <expr pos:start="112:40" pos:end="112:43"><literal type="boolean" pos:start="112:40" pos:end="112:43">true</literal></expr>;</return>
			</block_content>}</block></if></if_stmt>
		</block_content>}</block></for>
		<return pos:start="115:17" pos:end="115:29">return <expr pos:start="115:24" pos:end="115:28"><literal type="boolean" pos:start="115:24" pos:end="115:28">false</literal></expr>;</return>
	</block_content>}</block></function>

	<comment type="block" format="javadoc" pos:start="118:9" pos:end="120:11">/**
	 * Build all synch points
	 */</comment>
	<function pos:start="121:9" pos:end="125:9"><type pos:start="121:9" pos:end="121:20"><specifier pos:start="121:9" pos:end="121:15">private</specifier> <name pos:start="121:17" pos:end="121:20">void</name></type> <name pos:start="121:22" pos:end="121:40">buildAllSynchPoints</name><parameter_list pos:start="121:41" pos:end="121:42">()</parameter_list> <block pos:start="121:44" pos:end="125:9">{<block_content pos:start="122:17" pos:end="124:19">
		<expr_stmt pos:start="122:17" pos:end="124:19"><expr pos:start="122:17" pos:end="124:18"><call pos:start="122:17" pos:end="124:18"><name pos:start="122:17" pos:end="122:39"><name pos:start="122:17" pos:end="122:31">uavMissionPlans</name><operator pos:start="122:32" pos:end="122:32">.</operator><name pos:start="122:33" pos:end="122:39">forEach</name></name><argument_list pos:start="122:40" pos:end="124:18">(<argument pos:start="122:41" pos:end="124:17"><expr pos:start="122:41" pos:end="124:17"><lambda pos:start="122:41" pos:end="124:17"><parameter_list pos:start="122:41" pos:end="122:53">(<parameter pos:start="122:42" pos:end="122:46"><decl pos:start="122:42" pos:end="122:46"><name pos:start="122:42" pos:end="122:46">uavId</name></decl></parameter>, <parameter pos:start="122:49" pos:end="122:52"><decl pos:start="122:49" pos:end="122:52"><name pos:start="122:49" pos:end="122:52">plan</name></decl></parameter>)</parameter_list> -&gt; <block pos:start="122:58" pos:end="124:17">{<block_content pos:start="123:25" pos:end="123:48">
			<expr_stmt pos:start="123:25" pos:end="123:48"><expr pos:start="123:25" pos:end="123:47"><call pos:start="123:25" pos:end="123:47"><name pos:start="123:25" pos:end="123:45"><name pos:start="123:25" pos:end="123:28">plan</name><operator pos:start="123:29" pos:end="123:29">.</operator><name pos:start="123:30" pos:end="123:45">buildSynchPoints</name></name><argument_list pos:start="123:46" pos:end="123:47">()</argument_list></call></expr>;</expr_stmt>
		</block_content>}</block></lambda></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	</block_content>}</block></function>

	<comment type="block" format="javadoc" pos:start="127:9" pos:end="131:11">/**
	 * Activates next task in each UAV mission, if there is no unfinished active task
	 * 
	 * @throws MissionExecutionException
	 */</comment>
	<function pos:start="132:9" pos:end="139:9"><annotation pos:start="132:9" pos:end="132:17">@<name pos:start="132:10" pos:end="132:17">Override</name></annotation>
	<type pos:start="133:9" pos:end="133:19"><specifier pos:start="133:9" pos:end="133:14">public</specifier> <name pos:start="133:16" pos:end="133:19">void</name></type> <name pos:start="133:21" pos:end="133:40">checkAndActivateTask</name><parameter_list pos:start="133:41" pos:end="133:42">()</parameter_list> <throws pos:start="133:44" pos:end="133:75">throws <argument pos:start="133:51" pos:end="133:75"><expr pos:start="133:51" pos:end="133:75"><name pos:start="133:51" pos:end="133:75">MissionExecutionException</name></expr></argument></throws> <block pos:start="133:77" pos:end="139:9">{<block_content pos:start="134:17" pos:end="138:17">
		<for pos:start="134:17" pos:end="138:17">for <control pos:start="134:21" pos:end="134:68">(<init pos:start="134:22" pos:end="134:67"><decl pos:start="134:22" pos:end="134:67"><type pos:start="134:22" pos:end="134:35"><name pos:start="134:22" pos:end="134:35">UAVMissionPlan</name></type> <name pos:start="134:37" pos:end="134:40">plan</name> <range pos:start="134:42" pos:end="134:67">: <expr pos:start="134:44" pos:end="134:67"><call pos:start="134:44" pos:end="134:67"><name pos:start="134:44" pos:end="134:65"><name pos:start="134:44" pos:end="134:58">uavMissionPlans</name><operator pos:start="134:59" pos:end="134:59">.</operator><name pos:start="134:60" pos:end="134:65">values</name></name><argument_list pos:start="134:66" pos:end="134:67">()</argument_list></call></expr></range></decl></init>)</control> <block pos:start="134:70" pos:end="138:17">{<block_content pos:start="135:25" pos:end="137:25">
			<if_stmt pos:start="135:25" pos:end="137:25"><if pos:start="135:25" pos:end="137:25">if <condition pos:start="135:28" pos:end="135:50">(<expr pos:start="135:29" pos:end="135:49"><operator pos:start="135:29" pos:end="135:29">!</operator><call pos:start="135:30" pos:end="135:49"><name pos:start="135:30" pos:end="135:47"><name pos:start="135:30" pos:end="135:33">plan</name><operator pos:start="135:34" pos:end="135:34">.</operator><name pos:start="135:35" pos:end="135:47">hasActiveTask</name></name><argument_list pos:start="135:48" pos:end="135:49">()</argument_list></call></expr>)</condition> <block pos:start="135:52" pos:end="137:25">{<block_content pos:start="136:33" pos:end="136:56">
				<expr_stmt pos:start="136:33" pos:end="136:56"><expr pos:start="136:33" pos:end="136:55"><call pos:start="136:33" pos:end="136:55"><name pos:start="136:33" pos:end="136:53"><name pos:start="136:33" pos:end="136:36">plan</name><operator pos:start="136:37" pos:end="136:37">.</operator><name pos:start="136:38" pos:end="136:53">activateNextTask</name></name><argument_list pos:start="136:54" pos:end="136:55">()</argument_list></call></expr>;</expr_stmt>
			</block_content>}</block></if></if_stmt>
		</block_content>}</block></for>
	</block_content>}</block></function>

	<comment type="block" format="javadoc" pos:start="141:9" pos:end="146:11">/**
	 * Expands flight pattern tasks (e.g., coordinatedTakeOff or coordinatedLanding)
	 * 
	 * @throws MissionExecutionException
	 *   
	 */</comment>
	<function pos:start="147:9" pos:end="151:9"><type pos:start="147:9" pos:end="147:20"><specifier pos:start="147:9" pos:end="147:15">private</specifier> <name pos:start="147:17" pos:end="147:20">void</name></type> <name pos:start="147:22" pos:end="147:35">expandAllTasks</name><parameter_list pos:start="147:36" pos:end="147:37">()</parameter_list> <throws pos:start="147:39" pos:end="147:70">throws <argument pos:start="147:46" pos:end="147:70"><expr pos:start="147:46" pos:end="147:70"><name pos:start="147:46" pos:end="147:70">MissionExecutionException</name></expr></argument></throws> <block pos:start="147:72" pos:end="151:9">{<block_content pos:start="148:17" pos:end="150:17">
		<for pos:start="148:17" pos:end="150:17">for <control pos:start="148:21" pos:end="148:68">(<init pos:start="148:22" pos:end="148:67"><decl pos:start="148:22" pos:end="148:67"><type pos:start="148:22" pos:end="148:35"><name pos:start="148:22" pos:end="148:35">UAVMissionPlan</name></type> <name pos:start="148:37" pos:end="148:40">plan</name> <range pos:start="148:42" pos:end="148:67">: <expr pos:start="148:44" pos:end="148:67"><call pos:start="148:44" pos:end="148:67"><name pos:start="148:44" pos:end="148:65"><name pos:start="148:44" pos:end="148:58">uavMissionPlans</name><operator pos:start="148:59" pos:end="148:59">.</operator><name pos:start="148:60" pos:end="148:65">values</name></name><argument_list pos:start="148:66" pos:end="148:67">()</argument_list></call></expr></range></decl></init>)</control> <block pos:start="148:70" pos:end="150:17">{<block_content pos:start="149:25" pos:end="149:46">
			<expr_stmt pos:start="149:25" pos:end="149:46"><expr pos:start="149:25" pos:end="149:45"><call pos:start="149:25" pos:end="149:45"><name pos:start="149:25" pos:end="149:43"><name pos:start="149:25" pos:end="149:28">plan</name><operator pos:start="149:29" pos:end="149:29">.</operator><name pos:start="149:30" pos:end="149:43">expandTaskList</name></name><argument_list pos:start="149:44" pos:end="149:45">()</argument_list></call></expr>;</expr_stmt>
		</block_content>}</block></for>
	</block_content>}</block></function>

	<function pos:start="153:9" pos:end="160:9"><type pos:start="153:9" pos:end="153:19"><specifier pos:start="153:9" pos:end="153:14">public</specifier> <name pos:start="153:16" pos:end="153:19">void</name></type> <name pos:start="153:21" pos:end="153:25">build</name><parameter_list pos:start="153:26" pos:end="153:27">()</parameter_list> <throws pos:start="153:29" pos:end="153:60">throws <argument pos:start="153:36" pos:end="153:60"><expr pos:start="153:36" pos:end="153:60"><name pos:start="153:36" pos:end="153:60">MissionExecutionException</name></expr></argument></throws> <block pos:start="153:62" pos:end="160:9">{<block_content pos:start="154:17" pos:end="158:31">
		<expr_stmt pos:start="154:17" pos:end="154:37"><expr pos:start="154:17" pos:end="154:36"><call pos:start="154:17" pos:end="154:36"><name pos:start="154:17" pos:end="154:27">loadMission</name><argument_list pos:start="154:28" pos:end="154:36">(<argument pos:start="154:29" pos:end="154:35"><expr pos:start="154:29" pos:end="154:35"><name pos:start="154:29" pos:end="154:35">mission</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt pos:start="155:17" pos:end="155:33"><expr pos:start="155:17" pos:end="155:32"><call pos:start="155:17" pos:end="155:32"><name pos:start="155:17" pos:end="155:30">expandAllTasks</name><argument_list pos:start="155:31" pos:end="155:32">()</argument_list></call></expr>;</expr_stmt>
		<expr_stmt pos:start="156:17" pos:end="156:38"><expr pos:start="156:17" pos:end="156:37"><call pos:start="156:17" pos:end="156:37"><name pos:start="156:17" pos:end="156:35">buildAllSynchPoints</name><argument_list pos:start="156:36" pos:end="156:37">()</argument_list></call></expr>;</expr_stmt>
		<expr_stmt pos:start="157:17" pos:end="157:55"><expr pos:start="157:17" pos:end="157:54"><call pos:start="157:17" pos:end="157:54"><name pos:start="157:17" pos:end="157:52"><name pos:start="157:17" pos:end="157:29">synchPointMgr</name><operator pos:start="157:30" pos:end="157:30">.</operator><name pos:start="157:31" pos:end="157:52">activateAllSynchPoints</name></name><argument_list pos:start="157:53" pos:end="157:54">()</argument_list></call></expr>;</expr_stmt>
		<expr_stmt pos:start="158:17" pos:end="158:31"><expr pos:start="158:17" pos:end="158:30"><call pos:start="158:17" pos:end="158:30"><name pos:start="158:17" pos:end="158:28">runPreChecks</name><argument_list pos:start="158:29" pos:end="158:30">()</argument_list></call></expr>;</expr_stmt>

	</block_content>}</block></function>

	<function pos:start="162:9" pos:end="166:9"><type pos:start="162:9" pos:end="162:20"><specifier pos:start="162:9" pos:end="162:15">private</specifier> <name pos:start="162:17" pos:end="162:20">void</name></type> <name pos:start="162:22" pos:end="162:33">runPreChecks</name><parameter_list pos:start="162:34" pos:end="162:35">()</parameter_list> <throws pos:start="162:37" pos:end="162:68">throws <argument pos:start="162:44" pos:end="162:68"><expr pos:start="162:44" pos:end="162:68"><name pos:start="162:44" pos:end="162:68">MissionExecutionException</name></expr></argument></throws> <block pos:start="162:70" pos:end="166:9">{<block_content pos:start="163:17" pos:end="165:17">
		<for pos:start="163:17" pos:end="165:17">for <control pos:start="163:21" pos:end="163:82">(<init pos:start="163:22" pos:end="163:81"><decl pos:start="163:22" pos:end="163:81"><type pos:start="163:22" pos:end="163:50"><name pos:start="163:22" pos:end="163:50"><name pos:start="163:22" pos:end="163:26">Entry</name><argument_list type="generic" pos:start="163:27" pos:end="163:50">&lt;<argument pos:start="163:28" pos:end="163:33"><name pos:start="163:28" pos:end="163:33">String</name></argument>, <argument pos:start="163:36" pos:end="163:49"><name pos:start="163:36" pos:end="163:49">UAVMissionPlan</name></argument>&gt;</argument_list></name></type> <name pos:start="163:52" pos:end="163:52">e</name> <range pos:start="163:54" pos:end="163:81">: <expr pos:start="163:56" pos:end="163:81"><call pos:start="163:56" pos:end="163:81"><name pos:start="163:56" pos:end="163:79"><name pos:start="163:56" pos:end="163:70">uavMissionPlans</name><operator pos:start="163:71" pos:end="163:71">.</operator><name pos:start="163:72" pos:end="163:79">entrySet</name></name><argument_list pos:start="163:80" pos:end="163:81">()</argument_list></call></expr></range></decl></init>)</control> <block pos:start="163:84" pos:end="165:17">{<block_content pos:start="164:25" pos:end="164:64">
			<expr_stmt pos:start="164:25" pos:end="164:64"><expr pos:start="164:25" pos:end="164:63"><call pos:start="164:25" pos:end="164:63"><name pos:start="164:25" pos:end="164:37">checkDistance</name><argument_list pos:start="164:38" pos:end="164:63">(<argument pos:start="164:39" pos:end="164:48"><expr pos:start="164:39" pos:end="164:48"><call pos:start="164:39" pos:end="164:48"><name pos:start="164:39" pos:end="164:46"><name pos:start="164:39" pos:end="164:39">e</name><operator pos:start="164:40" pos:end="164:40">.</operator><name pos:start="164:41" pos:end="164:46">getKey</name></name><argument_list pos:start="164:47" pos:end="164:48">()</argument_list></call></expr></argument>, <argument pos:start="164:51" pos:end="164:62"><expr pos:start="164:51" pos:end="164:62"><call pos:start="164:51" pos:end="164:62"><name pos:start="164:51" pos:end="164:60"><name pos:start="164:51" pos:end="164:51">e</name><operator pos:start="164:52" pos:end="164:52">.</operator><name pos:start="164:53" pos:end="164:60">getValue</name></name><argument_list pos:start="164:61" pos:end="164:62">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		</block_content>}</block></for>
	</block_content>}</block></function>

	<function pos:start="168:9" pos:end="186:9"><type pos:start="168:9" pos:end="168:20"><specifier pos:start="168:9" pos:end="168:15">private</specifier> <name pos:start="168:17" pos:end="168:20">void</name></type> <name pos:start="168:22" pos:end="168:34">checkDistance</name><parameter_list pos:start="168:35" pos:end="168:69">(<parameter pos:start="168:36" pos:end="168:47"><decl pos:start="168:36" pos:end="168:47"><type pos:start="168:36" pos:end="168:47"><name pos:start="168:36" pos:end="168:41">String</name></type> <name pos:start="168:43" pos:end="168:47">uavid</name></decl></parameter>, <parameter pos:start="168:50" pos:end="168:68"><decl pos:start="168:50" pos:end="168:68"><type pos:start="168:50" pos:end="168:68"><name pos:start="168:50" pos:end="168:63">UAVMissionPlan</name></type> <name pos:start="168:65" pos:end="168:68">plan</name></decl></parameter>)</parameter_list> <throws pos:start="168:71" pos:end="168:102">throws <argument pos:start="168:78" pos:end="168:102"><expr pos:start="168:78" pos:end="168:102"><name pos:start="168:78" pos:end="168:102">MissionExecutionException</name></expr></argument></throws> <block pos:start="168:104" pos:end="186:9">{<block_content pos:start="169:17" pos:end="184:105">
		<decl_stmt pos:start="169:17" pos:end="169:75"><decl pos:start="169:17" pos:end="169:74"><type pos:start="169:17" pos:end="169:29"><name pos:start="169:17" pos:end="169:29">LlaCoordinate</name></type> <name pos:start="169:31" pos:end="169:40">coordinate</name> <init pos:start="169:42" pos:end="169:74">= <expr pos:start="169:44" pos:end="169:74"><call pos:start="169:44" pos:end="169:74"><name pos:start="169:44" pos:end="169:72"><name pos:start="169:44" pos:end="169:47">plan</name><operator pos:start="169:48" pos:end="169:48">.</operator><name pos:start="169:49" pos:end="169:72">getStartingRouteWaypoint</name></name><argument_list pos:start="169:73" pos:end="169:74">()</argument_list></call></expr></init></decl>;</decl_stmt>
		<decl_stmt pos:start="170:17" pos:end="170:37"><decl pos:start="170:17" pos:end="170:36"><type pos:start="170:17" pos:end="170:25"><name pos:start="170:17" pos:end="170:25">IUAVProxy</name></type> <name pos:start="170:27" pos:end="170:29">uav</name> <init pos:start="170:31" pos:end="170:36">= <expr pos:start="170:33" pos:end="170:36"><literal type="null" pos:start="170:33" pos:end="170:36">null</literal></expr></init></decl>;</decl_stmt>
		<if_stmt pos:start="171:17" pos:end="173:17"><if pos:start="171:17" pos:end="173:17">if <condition pos:start="171:20" pos:end="171:39">(<expr pos:start="171:21" pos:end="171:38"><name pos:start="171:21" pos:end="171:30">coordinate</name> <operator pos:start="171:32" pos:end="171:33">==</operator> <literal type="null" pos:start="171:35" pos:end="171:38">null</literal></expr>)</condition> <block pos:start="171:41" pos:end="173:17">{<block_content pos:start="172:25" pos:end="172:124">
			<throw pos:start="172:25" pos:end="172:124">throw <expr pos:start="172:31" pos:end="172:123"><operator pos:start="172:31" pos:end="172:33">new</operator> <call pos:start="172:35" pos:end="172:123"><name pos:start="172:35" pos:end="172:59">MissionExecutionException</name><argument_list pos:start="172:60" pos:end="172:123">(<argument pos:start="172:61" pos:end="172:122"><expr pos:start="172:61" pos:end="172:122"><literal type="string" pos:start="172:61" pos:end="172:108">"Error when retrieving first waypoint for uav '"</literal> <operator pos:start="172:110" pos:end="172:110">+</operator> <name pos:start="172:112" pos:end="172:116">uavid</name> <operator pos:start="172:118" pos:end="172:118">+</operator> <literal type="string" pos:start="172:120" pos:end="172:122">"'"</literal></expr></argument>)</argument_list></call></expr>;</throw>
		</block_content>}</block></if></if_stmt>
		<try pos:start="174:17" pos:end="178:17">try <block pos:start="174:21" pos:end="176:17">{<block_content pos:start="175:25" pos:end="175:82">
			<expr_stmt pos:start="175:25" pos:end="175:82"><expr pos:start="175:25" pos:end="175:81"><name pos:start="175:25" pos:end="175:27">uav</name> <operator pos:start="175:29" pos:end="175:29">=</operator> <call pos:start="175:31" pos:end="175:61"><name pos:start="175:31" pos:end="175:59"><name pos:start="175:31" pos:end="175:47">DroneSetupService</name><operator pos:start="175:48" pos:end="175:48">.</operator><name pos:start="175:49" pos:end="175:59">getInstance</name></name><argument_list pos:start="175:60" pos:end="175:61">()</argument_list></call><operator pos:start="175:62" pos:end="175:62">.</operator><call pos:start="175:63" pos:end="175:81"><name pos:start="175:63" pos:end="175:74">getActiveUAV</name><argument_list pos:start="175:75" pos:end="175:81">(<argument pos:start="175:76" pos:end="175:80"><expr pos:start="175:76" pos:end="175:80"><name pos:start="175:76" pos:end="175:80">uavid</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		</block_content>}</block> <catch pos:start="176:19" pos:end="178:17">catch <parameter_list pos:start="176:25" pos:end="176:53">(<parameter pos:start="176:26" pos:end="176:52"><decl pos:start="176:26" pos:end="176:52"><type pos:start="176:26" pos:end="176:52"><name pos:start="176:26" pos:end="176:50">DronologyServiceException</name></type> <name pos:start="176:52" pos:end="176:52">e</name></decl></parameter>)</parameter_list> <block pos:start="176:55" pos:end="178:17">{<block_content pos:start="177:25" pos:end="177:76">
			<throw pos:start="177:25" pos:end="177:76">throw <expr pos:start="177:31" pos:end="177:75"><operator pos:start="177:31" pos:end="177:33">new</operator> <call pos:start="177:35" pos:end="177:75"><name pos:start="177:35" pos:end="177:59">MissionExecutionException</name><argument_list pos:start="177:60" pos:end="177:75">(<argument pos:start="177:61" pos:end="177:74"><expr pos:start="177:61" pos:end="177:74"><call pos:start="177:61" pos:end="177:74"><name pos:start="177:61" pos:end="177:72"><name pos:start="177:61" pos:end="177:61">e</name><operator pos:start="177:62" pos:end="177:62">.</operator><name pos:start="177:63" pos:end="177:72">getMessage</name></name><argument_list pos:start="177:73" pos:end="177:74">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</throw>
		</block_content>}</block></catch></try>
		<decl_stmt pos:start="179:17" pos:end="179:91"><decl pos:start="179:17" pos:end="179:90"><type pos:start="179:17" pos:end="179:22"><name pos:start="179:17" pos:end="179:22">double</name></type> <name pos:start="179:24" pos:end="179:46">distanceToFirstWaypoint</name> <init pos:start="179:48" pos:end="179:90">= <expr pos:start="179:50" pos:end="179:90"><call pos:start="179:50" pos:end="179:69"><name pos:start="179:50" pos:end="179:67"><name pos:start="179:50" pos:end="179:52">uav</name><operator pos:start="179:53" pos:end="179:53">.</operator><name pos:start="179:54" pos:end="179:67">getCoordinates</name></name><argument_list pos:start="179:68" pos:end="179:69">()</argument_list></call><operator pos:start="179:70" pos:end="179:70">.</operator><call pos:start="179:71" pos:end="179:90"><name pos:start="179:71" pos:end="179:78">distance</name><argument_list pos:start="179:79" pos:end="179:90">(<argument pos:start="179:80" pos:end="179:89"><expr pos:start="179:80" pos:end="179:89"><name pos:start="179:80" pos:end="179:89">coordinate</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<if_stmt pos:start="180:17" pos:end="183:17"><if pos:start="180:17" pos:end="183:17">if <condition pos:start="180:20" pos:end="180:95">(<expr pos:start="180:21" pos:end="180:94"><name pos:start="180:21" pos:end="180:43">distanceToFirstWaypoint</name> <operator pos:start="180:45" pos:end="180:45">&gt;</operator> <name pos:start="180:47" pos:end="180:94"><name pos:start="180:47" pos:end="180:64">DronologyConstants</name><operator pos:start="180:65" pos:end="180:65">.</operator><name pos:start="180:66" pos:end="180:94">MISSION_MAX_STARTING_DISTANCE</name></name></expr>)</condition> <block pos:start="180:97" pos:end="183:17">{<block_content pos:start="181:25" pos:end="182:136">
			<throw pos:start="181:25" pos:end="182:136">throw <expr pos:start="181:31" pos:end="182:135"><operator pos:start="181:31" pos:end="181:33">new</operator> <call pos:start="181:35" pos:end="182:135"><name pos:start="181:35" pos:end="181:59">MissionExecutionException</name><argument_list pos:start="181:60" pos:end="182:135">(
					<argument pos:start="182:41" pos:end="182:134"><expr pos:start="182:41" pos:end="182:134"><literal type="string" pos:start="182:41" pos:end="182:102">"Distance to first waypoint exceeds maximum safety distance: "</literal> <operator pos:start="182:104" pos:end="182:104">+</operator> <name pos:start="182:106" pos:end="182:128">distanceToFirstWaypoint</name> <operator pos:start="182:130" pos:end="182:130">+</operator> <literal type="string" pos:start="182:132" pos:end="182:134">"m"</literal></expr></argument>)</argument_list></call></expr>;</throw>
		</block_content>}</block></if></if_stmt>
		<expr_stmt pos:start="184:17" pos:end="184:105"><expr pos:start="184:17" pos:end="184:104"><call pos:start="184:17" pos:end="184:104"><name pos:start="184:17" pos:end="184:27"><name pos:start="184:17" pos:end="184:22">LOGGER</name><operator pos:start="184:23" pos:end="184:23">.</operator><name pos:start="184:24" pos:end="184:27">info</name></name><argument_list pos:start="184:28" pos:end="184:104">(<argument pos:start="184:29" pos:end="184:103"><expr pos:start="184:29" pos:end="184:103"><literal type="string" pos:start="184:29" pos:end="184:77">"Precheck passed -- Distance to first waypoint: "</literal> <operator pos:start="184:79" pos:end="184:79">+</operator> <name pos:start="184:81" pos:end="184:103">distanceToFirstWaypoint</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	</block_content>}</block></function>

	<function pos:start="188:9" pos:end="195:9"><annotation pos:start="188:9" pos:end="188:17">@<name pos:start="188:10" pos:end="188:17">Override</name></annotation>
	<type pos:start="189:9" pos:end="189:19"><specifier pos:start="189:9" pos:end="189:14">public</specifier> <name pos:start="189:16" pos:end="189:19">void</name></type> <name pos:start="189:21" pos:end="189:33">cancelMission</name><parameter_list pos:start="189:34" pos:end="189:35">()</parameter_list> <block pos:start="189:37" pos:end="195:9">{<block_content pos:start="190:17" pos:end="194:17">
		<expr_stmt pos:start="190:17" pos:end="190:58"><expr pos:start="190:17" pos:end="190:57"><call pos:start="190:17" pos:end="190:57"><name pos:start="190:17" pos:end="190:35"><name pos:start="190:17" pos:end="190:22">LOGGER</name><operator pos:start="190:23" pos:end="190:23">.</operator><name pos:start="190:24" pos:end="190:35">missionError</name></name><argument_list pos:start="190:36" pos:end="190:57">(<argument pos:start="190:37" pos:end="190:56"><expr pos:start="190:37" pos:end="190:56"><literal type="string" pos:start="190:37" pos:end="190:56">"Mission cancelled!"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<for pos:start="191:17" pos:end="194:17">for <control pos:start="191:21" pos:end="191:68">(<init pos:start="191:22" pos:end="191:67"><decl pos:start="191:22" pos:end="191:67"><type pos:start="191:22" pos:end="191:35"><name pos:start="191:22" pos:end="191:35">UAVMissionPlan</name></type> <name pos:start="191:37" pos:end="191:40">plan</name> <range pos:start="191:42" pos:end="191:67">: <expr pos:start="191:44" pos:end="191:67"><call pos:start="191:44" pos:end="191:67"><name pos:start="191:44" pos:end="191:65"><name pos:start="191:44" pos:end="191:58">uavMissionPlans</name><operator pos:start="191:59" pos:end="191:59">.</operator><name pos:start="191:60" pos:end="191:65">values</name></name><argument_list pos:start="191:66" pos:end="191:67">()</argument_list></call></expr></range></decl></init>)</control> <block pos:start="191:70" pos:end="194:17">{<block_content pos:start="192:25" pos:end="193:51">
			<decl_stmt pos:start="192:25" pos:end="192:55"><decl pos:start="192:25" pos:end="192:54"><type pos:start="192:25" pos:end="192:30"><name pos:start="192:25" pos:end="192:30">String</name></type> <name pos:start="192:32" pos:end="192:36">uavid</name> <init pos:start="192:38" pos:end="192:54">= <expr pos:start="192:40" pos:end="192:54"><call pos:start="192:40" pos:end="192:54"><name pos:start="192:40" pos:end="192:52"><name pos:start="192:40" pos:end="192:43">plan</name><operator pos:start="192:44" pos:end="192:44">.</operator><name pos:start="192:45" pos:end="192:52">getUavID</name></name><argument_list pos:start="192:53" pos:end="192:54">()</argument_list></call></expr></init></decl>;</decl_stmt>
			<expr_stmt pos:start="193:25" pos:end="193:51"><expr pos:start="193:25" pos:end="193:50"><call pos:start="193:25" pos:end="193:50"><name pos:start="193:25" pos:end="193:43"><name pos:start="193:25" pos:end="193:35">MissionUtil</name><operator pos:start="193:36" pos:end="193:36">.</operator><name pos:start="193:37" pos:end="193:43">stopUAV</name></name><argument_list pos:start="193:44" pos:end="193:50">(<argument pos:start="193:45" pos:end="193:49"><expr pos:start="193:45" pos:end="193:49"><name pos:start="193:45" pos:end="193:49">uavid</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		</block_content>}</block></for>
	</block_content>}</block></function>

}</block></class>
</unit>
