<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="Java" filename="flatCode/StatusDispatchThread.java" pos:tabs="8"><package pos:start="1:1" pos:end="1:53">package <name pos:start="1:9" pos:end="1:52"><name pos:start="1:9" pos:end="1:11">edu</name><operator pos:start="1:12" pos:end="1:12">.</operator><name pos:start="1:13" pos:end="1:14">nd</name><operator pos:start="1:15" pos:end="1:15">.</operator><name pos:start="1:16" pos:end="1:24">dronology</name><operator pos:start="1:25" pos:end="1:25">.</operator><name pos:start="1:26" pos:end="1:33">gstation</name><operator pos:start="1:34" pos:end="1:34">.</operator><name pos:start="1:35" pos:end="1:43">connector</name><operator pos:start="1:44" pos:end="1:44">.</operator><name pos:start="1:45" pos:end="1:52">dispatch</name></name>;</package>

<import pos:start="3:1" pos:end="3:42">import <name pos:start="3:8" pos:end="3:41"><name pos:start="3:8" pos:end="3:11">java</name><operator pos:start="3:12" pos:end="3:12">.</operator><name pos:start="3:13" pos:end="3:16">util</name><operator pos:start="3:17" pos:end="3:17">.</operator><name pos:start="3:18" pos:end="3:27">concurrent</name><operator pos:start="3:28" pos:end="3:28">.</operator><name pos:start="3:29" pos:end="3:41">BlockingQueue</name></name>;</import>
<import pos:start="4:1" pos:end="4:37">import <name pos:start="4:8" pos:end="4:36"><name pos:start="4:8" pos:end="4:11">java</name><operator pos:start="4:12" pos:end="4:12">.</operator><name pos:start="4:13" pos:end="4:16">util</name><operator pos:start="4:17" pos:end="4:17">.</operator><name pos:start="4:18" pos:end="4:27">concurrent</name><operator pos:start="4:28" pos:end="4:28">.</operator><name pos:start="4:29" pos:end="4:36">Callable</name></name>;</import>

<import pos:start="6:1" pos:end="6:56">import <name pos:start="6:8" pos:end="6:55"><name pos:start="6:8" pos:end="6:10">edu</name><operator pos:start="6:11" pos:end="6:11">.</operator><name pos:start="6:12" pos:end="6:13">nd</name><operator pos:start="6:14" pos:end="6:14">.</operator><name pos:start="6:15" pos:end="6:23">dronology</name><operator pos:start="6:24" pos:end="6:24">.</operator><name pos:start="6:25" pos:end="6:28">core</name><operator pos:start="6:29" pos:end="6:29">.</operator><name pos:start="6:30" pos:end="6:55">IUAVPropertyUpdateNotifier</name></name>;</import>
<import pos:start="7:1" pos:end="7:54">import <name pos:start="7:8" pos:end="7:53"><name pos:start="7:8" pos:end="7:10">edu</name><operator pos:start="7:11" pos:end="7:11">.</operator><name pos:start="7:12" pos:end="7:13">nd</name><operator pos:start="7:14" pos:end="7:14">.</operator><name pos:start="7:15" pos:end="7:23">dronology</name><operator pos:start="7:24" pos:end="7:24">.</operator><name pos:start="7:25" pos:end="7:28">core</name><operator pos:start="7:29" pos:end="7:29">.</operator><name pos:start="7:30" pos:end="7:39">coordinate</name><operator pos:start="7:40" pos:end="7:40">.</operator><name pos:start="7:41" pos:end="7:53">LlaCoordinate</name></name>;</import>
<import pos:start="8:1" pos:end="8:61">import <name pos:start="8:8" pos:end="8:60"><name pos:start="8:8" pos:end="8:10">edu</name><operator pos:start="8:11" pos:end="8:11">.</operator><name pos:start="8:12" pos:end="8:13">nd</name><operator pos:start="8:14" pos:end="8:14">.</operator><name pos:start="8:15" pos:end="8:23">dronology</name><operator pos:start="8:24" pos:end="8:24">.</operator><name pos:start="8:25" pos:end="8:28">core</name><operator pos:start="8:29" pos:end="8:29">.</operator><name pos:start="8:30" pos:end="8:35">status</name><operator pos:start="8:36" pos:end="8:36">.</operator><name pos:start="8:37" pos:end="8:60">DronologyListenerManager</name></name>;</import>
<import pos:start="9:1" pos:end="9:72">import <name pos:start="9:8" pos:end="9:71"><name pos:start="9:8" pos:end="9:10">edu</name><operator pos:start="9:11" pos:end="9:11">.</operator><name pos:start="9:12" pos:end="9:13">nd</name><operator pos:start="9:14" pos:end="9:14">.</operator><name pos:start="9:15" pos:end="9:23">dronology</name><operator pos:start="9:24" pos:end="9:24">.</operator><name pos:start="9:25" pos:end="9:28">core</name><operator pos:start="9:29" pos:end="9:29">.</operator><name pos:start="9:30" pos:end="9:36">vehicle</name><operator pos:start="9:37" pos:end="9:37">.</operator><name pos:start="9:38" pos:end="9:60">DroneFlightStateManager</name><operator pos:start="9:61" pos:end="9:61">.</operator><name pos:start="9:62" pos:end="9:71">FlightMode</name></name>;</import>
<import pos:start="10:1" pos:end="10:71">import <name pos:start="10:8" pos:end="10:70"><name pos:start="10:8" pos:end="10:10">edu</name><operator pos:start="10:11" pos:end="10:11">.</operator><name pos:start="10:12" pos:end="10:13">nd</name><operator pos:start="10:14" pos:end="10:14">.</operator><name pos:start="10:15" pos:end="10:23">dronology</name><operator pos:start="10:24" pos:end="10:24">.</operator><name pos:start="10:25" pos:end="10:32">gstation</name><operator pos:start="10:33" pos:end="10:33">.</operator><name pos:start="10:34" pos:end="10:42">connector</name><operator pos:start="10:43" pos:end="10:43">.</operator><name pos:start="10:44" pos:end="10:51">messages</name><operator pos:start="10:52" pos:end="10:52">.</operator><name pos:start="10:53" pos:end="10:70">AbstractUAVMessage</name></name>;</import>
<import pos:start="11:1" pos:end="11:73">import <name pos:start="11:8" pos:end="11:72"><name pos:start="11:8" pos:end="11:10">edu</name><operator pos:start="11:11" pos:end="11:11">.</operator><name pos:start="11:12" pos:end="11:13">nd</name><operator pos:start="11:14" pos:end="11:14">.</operator><name pos:start="11:15" pos:end="11:23">dronology</name><operator pos:start="11:24" pos:end="11:24">.</operator><name pos:start="11:25" pos:end="11:32">gstation</name><operator pos:start="11:33" pos:end="11:33">.</operator><name pos:start="11:34" pos:end="11:42">connector</name><operator pos:start="11:43" pos:end="11:43">.</operator><name pos:start="11:44" pos:end="11:51">messages</name><operator pos:start="11:52" pos:end="11:52">.</operator><name pos:start="11:53" pos:end="11:72">UAVModeChangeMessage</name></name>;</import>
<import pos:start="12:1" pos:end="12:68">import <name pos:start="12:8" pos:end="12:67"><name pos:start="12:8" pos:end="12:10">edu</name><operator pos:start="12:11" pos:end="12:11">.</operator><name pos:start="12:12" pos:end="12:13">nd</name><operator pos:start="12:14" pos:end="12:14">.</operator><name pos:start="12:15" pos:end="12:23">dronology</name><operator pos:start="12:24" pos:end="12:24">.</operator><name pos:start="12:25" pos:end="12:32">gstation</name><operator pos:start="12:33" pos:end="12:33">.</operator><name pos:start="12:34" pos:end="12:42">connector</name><operator pos:start="12:43" pos:end="12:43">.</operator><name pos:start="12:44" pos:end="12:51">messages</name><operator pos:start="12:52" pos:end="12:52">.</operator><name pos:start="12:53" pos:end="12:67">UAVStateMessage</name></name>;</import>
<import pos:start="13:1" pos:end="13:30">import <name pos:start="13:8" pos:end="13:29"><name pos:start="13:8" pos:end="13:10">net</name><operator pos:start="13:11" pos:end="13:11">.</operator><name pos:start="13:12" pos:end="13:13">mv</name><operator pos:start="13:14" pos:end="13:14">.</operator><name pos:start="13:15" pos:end="13:21">logging</name><operator pos:start="13:22" pos:end="13:22">.</operator><name pos:start="13:23" pos:end="13:29">ILogger</name></name>;</import>
<import pos:start="14:1" pos:end="14:37">import <name pos:start="14:8" pos:end="14:36"><name pos:start="14:8" pos:end="14:10">net</name><operator pos:start="14:11" pos:end="14:11">.</operator><name pos:start="14:12" pos:end="14:13">mv</name><operator pos:start="14:14" pos:end="14:14">.</operator><name pos:start="14:15" pos:end="14:21">logging</name><operator pos:start="14:22" pos:end="14:22">.</operator><name pos:start="14:23" pos:end="14:36">LoggerProvider</name></name>;</import>

<class pos:start="16:1" pos:end="71:1"><specifier pos:start="16:1" pos:end="16:6">public</specifier> class <name pos:start="16:14" pos:end="16:33">StatusDispatchThread</name> <super_list pos:start="16:35" pos:end="16:110"><extends pos:start="16:35" pos:end="16:90">extends <super pos:start="16:43" pos:end="16:90"><name pos:start="16:43" pos:end="16:90"><name pos:start="16:43" pos:end="16:70">AbstractStatusDispatchThread</name><argument_list type="generic" pos:start="16:71" pos:end="16:90">&lt;<argument pos:start="16:72" pos:end="16:89"><name pos:start="16:72" pos:end="16:89">AbstractUAVMessage</name></argument>&gt;</argument_list></name></super></extends> <implements pos:start="16:92" pos:end="16:110">implements <super pos:start="16:103" pos:end="16:110"><name pos:start="16:103" pos:end="16:110">Callable</name></super></implements></super_list> <block pos:start="16:112" pos:end="71:1">{
	<decl_stmt pos:start="17:9" pos:end="17:99"><decl pos:start="17:9" pos:end="17:98"><type pos:start="17:9" pos:end="17:36"><specifier pos:start="17:9" pos:end="17:15">private</specifier> <specifier pos:start="17:17" pos:end="17:22">static</specifier> <specifier pos:start="17:24" pos:end="17:28">final</specifier> <name pos:start="17:30" pos:end="17:36">ILogger</name></type> <name pos:start="17:38" pos:end="17:43">LOGGER</name> <init pos:start="17:45" pos:end="17:98">= <expr pos:start="17:47" pos:end="17:98"><call pos:start="17:47" pos:end="17:98"><name pos:start="17:47" pos:end="17:70"><name pos:start="17:47" pos:end="17:60">LoggerProvider</name><operator pos:start="17:61" pos:end="17:61">.</operator><name pos:start="17:62" pos:end="17:70">getLogger</name></name><argument_list pos:start="17:71" pos:end="17:98">(<argument pos:start="17:72" pos:end="17:97"><expr pos:start="17:72" pos:end="17:97"><name pos:start="17:72" pos:end="17:97"><name pos:start="17:72" pos:end="17:91">StatusDispatchThread</name><operator pos:start="17:92" pos:end="17:92">.</operator><name pos:start="17:93" pos:end="17:97">class</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

	<decl_stmt pos:start="19:9" pos:end="19:52"><decl pos:start="19:9" pos:end="19:51"><type pos:start="19:9" pos:end="19:42"><specifier pos:start="19:9" pos:end="19:15">private</specifier> <name pos:start="19:17" pos:end="19:42">IUAVPropertyUpdateNotifier</name></type> <name pos:start="19:44" pos:end="19:51">listener</name></decl>;</decl_stmt>

	<constructor pos:start="21:9" pos:end="24:9"><specifier pos:start="21:9" pos:end="21:14">public</specifier> <name pos:start="21:16" pos:end="21:35">StatusDispatchThread</name><parameter_list pos:start="21:36" pos:end="21:119">(<parameter pos:start="21:37" pos:end="21:81"><decl pos:start="21:37" pos:end="21:81"><type pos:start="21:37" pos:end="21:81"><specifier pos:start="21:37" pos:end="21:41">final</specifier> <name pos:start="21:43" pos:end="21:75"><name pos:start="21:43" pos:end="21:55">BlockingQueue</name><argument_list type="generic" pos:start="21:56" pos:end="21:75">&lt;<argument pos:start="21:57" pos:end="21:74"><name pos:start="21:57" pos:end="21:74">AbstractUAVMessage</name></argument>&gt;</argument_list></name></type> <name pos:start="21:77" pos:end="21:81">queue</name></decl></parameter>, <parameter pos:start="21:84" pos:end="21:118"><decl pos:start="21:84" pos:end="21:118"><type pos:start="21:84" pos:end="21:118"><name pos:start="21:84" pos:end="21:109">IUAVPropertyUpdateNotifier</name></type> <name pos:start="21:111" pos:end="21:118">listener</name></decl></parameter>)</parameter_list> <block pos:start="21:121" pos:end="24:9">{<block_content pos:start="22:17" pos:end="23:41">
		<expr_stmt pos:start="22:17" pos:end="22:29"><expr pos:start="22:17" pos:end="22:28"><call pos:start="22:17" pos:end="22:28"><name pos:start="22:17" pos:end="22:21">super</name><argument_list pos:start="22:22" pos:end="22:28">(<argument pos:start="22:23" pos:end="22:27"><expr pos:start="22:23" pos:end="22:27"><name pos:start="22:23" pos:end="22:27">queue</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt pos:start="23:17" pos:end="23:41"><expr pos:start="23:17" pos:end="23:40"><name pos:start="23:17" pos:end="23:29"><name pos:start="23:17" pos:end="23:20">this</name><operator pos:start="23:21" pos:end="23:21">.</operator><name pos:start="23:22" pos:end="23:29">listener</name></name> <operator pos:start="23:31" pos:end="23:31">=</operator> <name pos:start="23:33" pos:end="23:40">listener</name></expr>;</expr_stmt>
	</block_content>}</block></constructor>

	<function pos:start="26:9" pos:end="28:9"><type pos:start="26:9" pos:end="26:22"><specifier pos:start="26:9" pos:end="26:17">protected</specifier> <name pos:start="26:19" pos:end="26:22">void</name></type> <name pos:start="26:24" pos:end="26:37">notifyListener</name><parameter_list pos:start="26:38" pos:end="26:39">()</parameter_list> <throws pos:start="26:41" pos:end="26:56">throws <argument pos:start="26:48" pos:end="26:56"><expr pos:start="26:48" pos:end="26:56"><name pos:start="26:48" pos:end="26:56">Exception</name></expr></argument></throws> <block pos:start="26:58" pos:end="28:9">{<block_content>

	</block_content>}</block></function>

	<function pos:start="30:9" pos:end="69:9"><annotation pos:start="30:9" pos:end="30:17">@<name pos:start="30:10" pos:end="30:17">Override</name></annotation>
	<type pos:start="31:9" pos:end="31:21"><specifier pos:start="31:9" pos:end="31:14">public</specifier> <name pos:start="31:16" pos:end="31:21">Object</name></type> <name pos:start="31:23" pos:end="31:26">call</name><parameter_list pos:start="31:27" pos:end="31:28">()</parameter_list> <block pos:start="31:30" pos:end="69:9">{<block_content pos:start="32:17" pos:end="68:28">
		<while pos:start="32:17" pos:end="66:17">while <condition pos:start="32:23" pos:end="32:34">(<expr pos:start="32:24" pos:end="32:33"><call pos:start="32:24" pos:end="32:33"><name pos:start="32:24" pos:end="32:31"><name pos:start="32:24" pos:end="32:27">cont</name><operator pos:start="32:28" pos:end="32:28">.</operator><name pos:start="32:29" pos:end="32:31">get</name></name><argument_list pos:start="32:32" pos:end="32:33">()</argument_list></call></expr>)</condition> <block pos:start="32:36" pos:end="66:17">{<block_content pos:start="34:25" pos:end="64:25">

			<try pos:start="34:25" pos:end="64:25">try <block pos:start="34:29" pos:end="60:25">{<block_content pos:start="35:33" pos:end="59:33">
				<decl_stmt pos:start="35:33" pos:end="35:72"><decl pos:start="35:33" pos:end="35:71"><type pos:start="35:33" pos:end="35:50"><name pos:start="35:33" pos:end="35:50">AbstractUAVMessage</name></type> <name pos:start="35:52" pos:end="35:56">state</name> <init pos:start="35:58" pos:end="35:71">= <expr pos:start="35:60" pos:end="35:71"><call pos:start="35:60" pos:end="35:71"><name pos:start="35:60" pos:end="35:69"><name pos:start="35:60" pos:end="35:64">queue</name><operator pos:start="35:65" pos:end="35:65">.</operator><name pos:start="35:66" pos:end="35:69">take</name></name><argument_list pos:start="35:70" pos:end="35:71">()</argument_list></call></expr></init></decl>;</decl_stmt>
				<if_stmt pos:start="36:33" pos:end="59:33"><if pos:start="36:33" pos:end="42:33">if <condition pos:start="36:36" pos:end="36:69">(<expr pos:start="36:37" pos:end="36:68"><name pos:start="36:37" pos:end="36:41">state</name> <operator pos:start="36:43" pos:end="36:52">instanceof</operator> <name pos:start="36:54" pos:end="36:68">UAVStateMessage</name></expr>)</condition> <block pos:start="36:71" pos:end="42:33">{<block_content pos:start="37:41" pos:end="41:116">
					<decl_stmt pos:start="37:41" pos:end="37:85"><decl pos:start="37:41" pos:end="37:84"><type pos:start="37:41" pos:end="37:55"><name pos:start="37:41" pos:end="37:55">UAVStateMessage</name></type> <name pos:start="37:57" pos:end="37:58">sm</name> <init pos:start="37:60" pos:end="37:84">= <expr pos:start="37:62" pos:end="37:84"><operator pos:start="37:62" pos:end="37:62">(</operator><name pos:start="37:63" pos:end="37:77">UAVStateMessage</name><operator pos:start="37:78" pos:end="37:78">)</operator> <name pos:start="37:80" pos:end="37:84">state</name></expr></init></decl>;</decl_stmt>
					<decl_stmt pos:start="38:41" pos:end="38:82"><decl pos:start="38:41" pos:end="38:81"><type pos:start="38:41" pos:end="38:53"><name pos:start="38:41" pos:end="38:53">LlaCoordinate</name></type> <name pos:start="38:55" pos:end="38:62">location</name> <init pos:start="38:64" pos:end="38:81">= <expr pos:start="38:66" pos:end="38:81"><call pos:start="38:66" pos:end="38:81"><name pos:start="38:66" pos:end="38:79"><name pos:start="38:66" pos:end="38:67">sm</name><operator pos:start="38:68" pos:end="38:68">.</operator><name pos:start="38:69" pos:end="38:79">getLocation</name></name><argument_list pos:start="38:80" pos:end="38:81">()</argument_list></call></expr></init></decl>;</decl_stmt>
					<decl_stmt pos:start="39:41" pos:end="39:95"><decl pos:start="39:41" pos:end="39:94"><type pos:start="39:41" pos:end="39:46"><name pos:start="39:41" pos:end="39:46">double</name></type> <name pos:start="39:48" pos:end="39:52">level</name> <init pos:start="39:54" pos:end="39:94">= <expr pos:start="39:56" pos:end="39:94"><call pos:start="39:56" pos:end="39:76"><name pos:start="39:56" pos:end="39:74"><name pos:start="39:56" pos:end="39:57">sm</name><operator pos:start="39:58" pos:end="39:58">.</operator><name pos:start="39:59" pos:end="39:74">getBatterystatus</name></name><argument_list pos:start="39:75" pos:end="39:76">()</argument_list></call><operator pos:start="39:77" pos:end="39:77">.</operator><call pos:start="39:78" pos:end="39:94"><name pos:start="39:78" pos:end="39:92">getBatteryLevel</name><argument_list pos:start="39:93" pos:end="39:94">()</argument_list></call></expr></init></decl>;</decl_stmt>
					<decl_stmt pos:start="40:41" pos:end="40:75"><decl pos:start="40:41" pos:end="40:74"><type pos:start="40:41" pos:end="40:46"><name pos:start="40:41" pos:end="40:46">double</name></type> <name pos:start="40:48" pos:end="40:52">speed</name> <init pos:start="40:54" pos:end="40:74">= <expr pos:start="40:56" pos:end="40:74"><call pos:start="40:56" pos:end="40:74"><name pos:start="40:56" pos:end="40:72"><name pos:start="40:56" pos:end="40:57">sm</name><operator pos:start="40:58" pos:end="40:58">.</operator><name pos:start="40:59" pos:end="40:72">getGroundspeed</name></name><argument_list pos:start="40:73" pos:end="40:74">()</argument_list></call></expr></init></decl>;</decl_stmt>
					<expr_stmt pos:start="41:41" pos:end="41:116"><expr pos:start="41:41" pos:end="41:115"><call pos:start="41:41" pos:end="41:115"><name pos:start="41:41" pos:end="41:55"><name pos:start="41:41" pos:end="41:48">listener</name><operator pos:start="41:49" pos:end="41:49">.</operator><name pos:start="41:50" pos:end="41:55">update</name></name><argument_list pos:start="41:56" pos:end="41:115">(<argument pos:start="41:57" pos:end="41:64"><expr pos:start="41:57" pos:end="41:64"><name pos:start="41:57" pos:end="41:64">location</name></expr></argument>, <argument pos:start="41:67" pos:end="41:71"><expr pos:start="41:67" pos:end="41:71"><name pos:start="41:67" pos:end="41:71">level</name></expr></argument>, <argument pos:start="41:74" pos:end="41:78"><expr pos:start="41:74" pos:end="41:78"><name pos:start="41:74" pos:end="41:78">speed</name></expr></argument>, <argument pos:start="41:81" pos:end="41:96"><expr pos:start="41:81" pos:end="41:96"><call pos:start="41:81" pos:end="41:96"><name pos:start="41:81" pos:end="41:94"><name pos:start="41:81" pos:end="41:82">sm</name><operator pos:start="41:83" pos:end="41:83">.</operator><name pos:start="41:84" pos:end="41:94">getVelocity</name></name><argument_list pos:start="41:95" pos:end="41:96">()</argument_list></call></expr></argument>, <argument pos:start="41:99" pos:end="41:114"><expr pos:start="41:99" pos:end="41:114"><call pos:start="41:99" pos:end="41:114"><name pos:start="41:99" pos:end="41:112"><name pos:start="41:99" pos:end="41:100">sm</name><operator pos:start="41:101" pos:end="41:101">.</operator><name pos:start="41:102" pos:end="41:112">getAttitude</name></name><argument_list pos:start="41:113" pos:end="41:114">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				</block_content>}</block></if> <if type="elseif" pos:start="42:35" pos:end="57:33">else if <condition pos:start="42:43" pos:end="42:81">(<expr pos:start="42:44" pos:end="42:80"><name pos:start="42:44" pos:end="42:48">state</name> <operator pos:start="42:50" pos:end="42:59">instanceof</operator> <name pos:start="42:61" pos:end="42:80">UAVModeChangeMessage</name></expr>)</condition> <block pos:start="42:83" pos:end="57:33">{<block_content pos:start="43:41" pos:end="55:41">
					<decl_stmt pos:start="43:41" pos:end="43:96"><decl pos:start="43:41" pos:end="43:95"><type pos:start="43:41" pos:end="43:60"><name pos:start="43:41" pos:end="43:60">UAVModeChangeMessage</name></type> <name pos:start="43:62" pos:end="43:64">mcm</name> <init pos:start="43:66" pos:end="43:95">= <expr pos:start="43:68" pos:end="43:95"><operator pos:start="43:68" pos:end="43:68">(</operator><name pos:start="43:69" pos:end="43:88">UAVModeChangeMessage</name><operator pos:start="43:89" pos:end="43:89">)</operator> <name pos:start="43:91" pos:end="43:95">state</name></expr></init></decl>;</decl_stmt>
					
					<expr_stmt pos:start="45:41" pos:end="45:75"><expr pos:start="45:41" pos:end="45:74"><call pos:start="45:41" pos:end="45:74"><name pos:start="45:41" pos:end="45:59"><name pos:start="45:41" pos:end="45:48">listener</name><operator pos:start="45:49" pos:end="45:49">.</operator><name pos:start="45:50" pos:end="45:59">updateMode</name></name><argument_list pos:start="45:60" pos:end="45:74">(<argument pos:start="45:61" pos:end="45:73"><expr pos:start="45:61" pos:end="45:73"><call pos:start="45:61" pos:end="45:73"><name pos:start="45:61" pos:end="45:71"><name pos:start="45:61" pos:end="45:63">mcm</name><operator pos:start="45:64" pos:end="45:64">.</operator><name pos:start="45:65" pos:end="45:71">getMode</name></name><argument_list pos:start="45:72" pos:end="45:73">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

					<comment type="line" pos:start="47:41" pos:end="47:119">// If the new mode is LOITER, we should remove this drone from its mission plan</comment>
					<comment type="line" pos:start="48:41" pos:end="48:59">// (if it has one).</comment>
					<comment type="line" pos:start="49:41" pos:end="49:106">// TODO: determine if this is actually the right place to do this.</comment>
					<comment type="line" pos:start="50:41" pos:end="50:91">// TODO: potentially create an enum for mode names.</comment>
					<if_stmt pos:start="51:41" pos:end="55:41"><if pos:start="51:41" pos:end="55:41">if <condition pos:start="51:44" pos:end="51:104">(<expr pos:start="51:45" pos:end="51:103"><call pos:start="51:45" pos:end="51:57"><name pos:start="51:45" pos:end="51:55"><name pos:start="51:45" pos:end="51:47">mcm</name><operator pos:start="51:48" pos:end="51:48">.</operator><name pos:start="51:49" pos:end="51:55">getMode</name></name><argument_list pos:start="51:56" pos:end="51:57">()</argument_list></call><operator pos:start="51:58" pos:end="51:58">.</operator><call pos:start="51:59" pos:end="51:103"><name pos:start="51:59" pos:end="51:64">equals</name><argument_list pos:start="51:65" pos:end="51:103">(<argument pos:start="51:66" pos:end="51:102"><expr pos:start="51:66" pos:end="51:102"><call pos:start="51:66" pos:end="51:102"><name pos:start="51:66" pos:end="51:100"><name pos:start="51:66" pos:end="51:75">FlightMode</name><operator pos:start="51:76" pos:end="51:76">.</operator><name pos:start="51:77" pos:end="51:91">USER_CONTROLLED</name><operator pos:start="51:92" pos:end="51:92">.</operator><name pos:start="51:93" pos:end="51:100">toString</name></name><argument_list pos:start="51:101" pos:end="51:102">()</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="51:106" pos:end="55:41">{<block_content pos:start="52:49" pos:end="52:120">
						<expr_stmt pos:start="52:49" pos:end="52:120"><expr pos:start="52:49" pos:end="52:119"><call pos:start="52:49" pos:end="52:86"><name pos:start="52:49" pos:end="52:84"><name pos:start="52:49" pos:end="52:72">DronologyListenerManager</name><operator pos:start="52:73" pos:end="52:73">.</operator><name pos:start="52:74" pos:end="52:84">getInstance</name></name><argument_list pos:start="52:85" pos:end="52:86">()</argument_list></call><operator pos:start="52:87" pos:end="52:87">.</operator><call pos:start="52:88" pos:end="52:119"><name pos:start="52:88" pos:end="52:103">notifyUAVRemoved</name><argument_list pos:start="52:104" pos:end="52:119">(<argument pos:start="52:105" pos:end="52:118"><expr pos:start="52:105" pos:end="52:118"><call pos:start="52:105" pos:end="52:118"><name pos:start="52:105" pos:end="52:116"><name pos:start="52:105" pos:end="52:107">mcm</name><operator pos:start="52:108" pos:end="52:108">.</operator><name pos:start="52:109" pos:end="52:116">getUavid</name></name><argument_list pos:start="52:117" pos:end="52:118">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
						<comment type="line" pos:start="53:49" pos:end="53:99">// notify flight plan pool... remove active plans..</comment>

					</block_content>}</block></if></if_stmt>

				</block_content>}</block></if> <else pos:start="57:35" pos:end="59:33">else <block pos:start="57:40" pos:end="59:33">{<block_content pos:start="58:41" pos:end="58:108">
					<expr_stmt pos:start="58:41" pos:end="58:108"><expr pos:start="58:41" pos:end="58:107"><call pos:start="58:41" pos:end="58:107"><name pos:start="58:41" pos:end="58:52"><name pos:start="58:41" pos:end="58:46">LOGGER</name><operator pos:start="58:47" pos:end="58:47">.</operator><name pos:start="58:48" pos:end="58:52">error</name></name><argument_list pos:start="58:53" pos:end="58:107">(<argument pos:start="58:54" pos:end="58:106"><expr pos:start="58:54" pos:end="58:106"><literal type="string" pos:start="58:54" pos:end="58:87">"Unhandled message type detected "</literal> <operator pos:start="58:89" pos:end="58:89">+</operator> <call pos:start="58:91" pos:end="58:106"><name pos:start="58:91" pos:end="58:104"><name pos:start="58:91" pos:end="58:95">state</name><operator pos:start="58:96" pos:end="58:96">.</operator><name pos:start="58:97" pos:end="58:104">getClass</name></name><argument_list pos:start="58:105" pos:end="58:106">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				</block_content>}</block></else></if_stmt>
			</block_content>}</block> <catch pos:start="60:27" pos:end="62:25">catch <parameter_list pos:start="60:33" pos:end="60:56">(<parameter pos:start="60:34" pos:end="60:55"><decl pos:start="60:34" pos:end="60:55"><type pos:start="60:34" pos:end="60:55"><name pos:start="60:34" pos:end="60:53">InterruptedException</name></type> <name pos:start="60:55" pos:end="60:55">e</name></decl></parameter>)</parameter_list> <block pos:start="60:58" pos:end="62:25">{<block_content pos:start="61:33" pos:end="61:81">
				<expr_stmt pos:start="61:33" pos:end="61:81"><expr pos:start="61:33" pos:end="61:80"><call pos:start="61:33" pos:end="61:80"><name pos:start="61:33" pos:end="61:43"><name pos:start="61:33" pos:end="61:38">LOGGER</name><operator pos:start="61:39" pos:end="61:39">.</operator><name pos:start="61:40" pos:end="61:43">warn</name></name><argument_list pos:start="61:44" pos:end="61:80">(<argument pos:start="61:45" pos:end="61:79"><expr pos:start="61:45" pos:end="61:79"><literal type="string" pos:start="61:45" pos:end="61:79">"Status Dispatch Thread terminated"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			</block_content>}</block></catch> <catch pos:start="62:27" pos:end="64:25">catch <parameter_list pos:start="62:33" pos:end="62:45">(<parameter pos:start="62:34" pos:end="62:44"><decl pos:start="62:34" pos:end="62:44"><type pos:start="62:34" pos:end="62:44"><name pos:start="62:34" pos:end="62:42">Exception</name></type> <name pos:start="62:44" pos:end="62:44">e</name></decl></parameter>)</parameter_list> <block pos:start="62:47" pos:end="64:25">{<block_content pos:start="63:33" pos:end="63:48">
				<expr_stmt pos:start="63:33" pos:end="63:48"><expr pos:start="63:33" pos:end="63:47"><call pos:start="63:33" pos:end="63:47"><name pos:start="63:33" pos:end="63:44"><name pos:start="63:33" pos:end="63:38">LOGGER</name><operator pos:start="63:39" pos:end="63:39">.</operator><name pos:start="63:40" pos:end="63:44">error</name></name><argument_list pos:start="63:45" pos:end="63:47">(<argument pos:start="63:46" pos:end="63:46"><expr pos:start="63:46" pos:end="63:46"><name pos:start="63:46" pos:end="63:46">e</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			</block_content>}</block></catch></try>

		</block_content>}</block></while>
		<expr_stmt pos:start="67:17" pos:end="67:52"><expr pos:start="67:17" pos:end="67:51"><call pos:start="67:17" pos:end="67:51"><name pos:start="67:17" pos:end="67:27"><name pos:start="67:17" pos:end="67:22">LOGGER</name><operator pos:start="67:23" pos:end="67:23">.</operator><name pos:start="67:24" pos:end="67:27">info</name></name><argument_list pos:start="67:28" pos:end="67:51">(<argument pos:start="67:29" pos:end="67:50"><expr pos:start="67:29" pos:end="67:50"><literal type="string" pos:start="67:29" pos:end="67:50">"Dispatcher shutdown!"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<return pos:start="68:17" pos:end="68:28">return <expr pos:start="68:24" pos:end="68:27"><literal type="null" pos:start="68:24" pos:end="68:27">null</literal></expr>;</return>
	</block_content>}</block></function>

}</block></class>
</unit>
