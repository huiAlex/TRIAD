<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="Java" filename="flatCode/FlightZoneManager2.java" pos:tabs="8"><package pos:start="1:1" pos:end="1:41">package <name pos:start="1:9" pos:end="1:40"><name pos:start="1:9" pos:end="1:11">edu</name><operator pos:start="1:12" pos:end="1:12">.</operator><name pos:start="1:13" pos:end="1:14">nd</name><operator pos:start="1:15" pos:end="1:15">.</operator><name pos:start="1:16" pos:end="1:24">dronology</name><operator pos:start="1:25" pos:end="1:25">.</operator><name pos:start="1:26" pos:end="1:29">core</name><operator pos:start="1:30" pos:end="1:30">.</operator><name pos:start="1:31" pos:end="1:40">flightzone</name></name>;</package>

<import pos:start="3:1" pos:end="3:27">import <name pos:start="3:8" pos:end="3:26"><name pos:start="3:8" pos:end="3:11">java</name><operator pos:start="3:12" pos:end="3:12">.</operator><name pos:start="3:13" pos:end="3:16">util</name><operator pos:start="3:17" pos:end="3:17">.</operator><name pos:start="3:18" pos:end="3:26">ArrayList</name></name>;</import>
<import pos:start="4:1" pos:end="4:29">import <name pos:start="4:8" pos:end="4:28"><name pos:start="4:8" pos:end="4:11">java</name><operator pos:start="4:12" pos:end="4:12">.</operator><name pos:start="4:13" pos:end="4:16">util</name><operator pos:start="4:17" pos:end="4:17">.</operator><name pos:start="4:18" pos:end="4:28">Collections</name></name>;</import>
<import pos:start="5:1" pos:end="5:22">import <name pos:start="5:8" pos:end="5:21"><name pos:start="5:8" pos:end="5:11">java</name><operator pos:start="5:12" pos:end="5:12">.</operator><name pos:start="5:13" pos:end="5:16">util</name><operator pos:start="5:17" pos:end="5:17">.</operator><name pos:start="5:18" pos:end="5:21">List</name></name>;</import>
<import pos:start="6:1" pos:end="6:23">import <name pos:start="6:8" pos:end="6:22"><name pos:start="6:8" pos:end="6:11">java</name><operator pos:start="6:12" pos:end="6:12">.</operator><name pos:start="6:13" pos:end="6:16">util</name><operator pos:start="6:17" pos:end="6:17">.</operator><name pos:start="6:18" pos:end="6:22">Timer</name></name>;</import>
<import pos:start="7:1" pos:end="7:27">import <name pos:start="7:8" pos:end="7:26"><name pos:start="7:8" pos:end="7:11">java</name><operator pos:start="7:12" pos:end="7:12">.</operator><name pos:start="7:13" pos:end="7:16">util</name><operator pos:start="7:17" pos:end="7:17">.</operator><name pos:start="7:18" pos:end="7:26">TimerTask</name></name>;</import>
<import pos:start="8:1" pos:end="8:49">import <name pos:start="8:8" pos:end="8:48"><name pos:start="8:8" pos:end="8:11">java</name><operator pos:start="8:12" pos:end="8:12">.</operator><name pos:start="8:13" pos:end="8:16">util</name><operator pos:start="8:17" pos:end="8:17">.</operator><name pos:start="8:18" pos:end="8:27">concurrent</name><operator pos:start="8:28" pos:end="8:28">.</operator><name pos:start="8:29" pos:end="8:34">atomic</name><operator pos:start="8:35" pos:end="8:35">.</operator><name pos:start="8:36" pos:end="8:48">AtomicInteger</name></name>;</import>

<import pos:start="10:1" pos:end="10:53">import <name pos:start="10:8" pos:end="10:52"><name pos:start="10:8" pos:end="10:10">com</name><operator pos:start="10:11" pos:end="10:11">.</operator><name pos:start="10:12" pos:end="10:17">google</name><operator pos:start="10:18" pos:end="10:18">.</operator><name pos:start="10:19" pos:end="10:24">common</name><operator pos:start="10:25" pos:end="10:25">.</operator><name pos:start="10:26" pos:end="10:29">util</name><operator pos:start="10:30" pos:end="10:30">.</operator><name pos:start="10:31" pos:end="10:40">concurrent</name><operator pos:start="10:41" pos:end="10:41">.</operator><name pos:start="10:42" pos:end="10:52">RateLimiter</name></name>;</import>

<import pos:start="12:1" pos:end="12:54">import <name pos:start="12:8" pos:end="12:53"><name pos:start="12:8" pos:end="12:10">edu</name><operator pos:start="12:11" pos:end="12:11">.</operator><name pos:start="12:12" pos:end="12:13">nd</name><operator pos:start="12:14" pos:end="12:14">.</operator><name pos:start="12:15" pos:end="12:23">dronology</name><operator pos:start="12:24" pos:end="12:24">.</operator><name pos:start="12:25" pos:end="12:28">core</name><operator pos:start="12:29" pos:end="12:29">.</operator><name pos:start="12:30" pos:end="12:34">fleet</name><operator pos:start="12:35" pos:end="12:35">.</operator><name pos:start="12:36" pos:end="12:53">DroneFleetListener</name></name>;</import>
<import pos:start="13:1" pos:end="13:48">import <name pos:start="13:8" pos:end="13:47"><name pos:start="13:8" pos:end="13:10">edu</name><operator pos:start="13:11" pos:end="13:11">.</operator><name pos:start="13:12" pos:end="13:13">nd</name><operator pos:start="13:14" pos:end="13:14">.</operator><name pos:start="13:15" pos:end="13:23">dronology</name><operator pos:start="13:24" pos:end="13:24">.</operator><name pos:start="13:25" pos:end="13:28">core</name><operator pos:start="13:29" pos:end="13:29">.</operator><name pos:start="13:30" pos:end="13:47">DronologyConstants</name></name>;</import>
<import pos:start="14:1" pos:end="14:74">import <name pos:start="14:8" pos:end="14:73"><name pos:start="14:8" pos:end="14:10">edu</name><operator pos:start="14:11" pos:end="14:11">.</operator><name pos:start="14:12" pos:end="14:13">nd</name><operator pos:start="14:14" pos:end="14:14">.</operator><name pos:start="14:15" pos:end="14:23">dronology</name><operator pos:start="14:24" pos:end="14:24">.</operator><name pos:start="14:25" pos:end="14:28">core</name><operator pos:start="14:29" pos:end="14:29">.</operator><name pos:start="14:30" pos:end="14:47">collisionavoidance</name><operator pos:start="14:48" pos:end="14:48">.</operator><name pos:start="14:49" pos:end="14:73">CollisionAvoidanceBackend</name></name>;</import>
<import pos:start="15:1" pos:end="15:76">import <name pos:start="15:8" pos:end="15:75"><name pos:start="15:8" pos:end="15:10">edu</name><operator pos:start="15:11" pos:end="15:11">.</operator><name pos:start="15:12" pos:end="15:13">nd</name><operator pos:start="15:14" pos:end="15:14">.</operator><name pos:start="15:15" pos:end="15:23">dronology</name><operator pos:start="15:24" pos:end="15:24">.</operator><name pos:start="15:25" pos:end="15:28">core</name><operator pos:start="15:29" pos:end="15:29">.</operator><name pos:start="15:30" pos:end="15:47">collisionavoidance</name><operator pos:start="15:48" pos:end="15:48">.</operator><name pos:start="15:49" pos:end="15:75">CollisionAvoidanceCheckTask</name></name>;</import>
<import pos:start="16:1" pos:end="16:76">import <name pos:start="16:8" pos:end="16:75"><name pos:start="16:8" pos:end="16:10">edu</name><operator pos:start="16:11" pos:end="16:11">.</operator><name pos:start="16:12" pos:end="16:13">nd</name><operator pos:start="16:14" pos:end="16:14">.</operator><name pos:start="16:15" pos:end="16:23">dronology</name><operator pos:start="16:24" pos:end="16:24">.</operator><name pos:start="16:25" pos:end="16:28">core</name><operator pos:start="16:29" pos:end="16:29">.</operator><name pos:start="16:30" pos:end="16:47">collisionavoidance</name><operator pos:start="16:48" pos:end="16:48">.</operator><name pos:start="16:49" pos:end="16:75">CollisionAvoidanceMessenger</name></name>;</import>
<import pos:start="17:1" pos:end="17:70">import <name pos:start="17:8" pos:end="17:69"><name pos:start="17:8" pos:end="17:10">edu</name><operator pos:start="17:11" pos:end="17:11">.</operator><name pos:start="17:12" pos:end="17:13">nd</name><operator pos:start="17:14" pos:end="17:14">.</operator><name pos:start="17:15" pos:end="17:23">dronology</name><operator pos:start="17:24" pos:end="17:24">.</operator><name pos:start="17:25" pos:end="17:28">core</name><operator pos:start="17:29" pos:end="17:29">.</operator><name pos:start="17:30" pos:end="17:47">collisionavoidance</name><operator pos:start="17:48" pos:end="17:48">.</operator><name pos:start="17:49" pos:end="17:56">strategy</name><operator pos:start="17:57" pos:end="17:57">.</operator><name pos:start="17:58" pos:end="17:69">StopEveryone</name></name>;</import>
<import pos:start="18:1" pos:end="18:78">import <name pos:start="18:8" pos:end="18:77"><name pos:start="18:8" pos:end="18:10">edu</name><operator pos:start="18:11" pos:end="18:11">.</operator><name pos:start="18:12" pos:end="18:13">nd</name><operator pos:start="18:14" pos:end="18:14">.</operator><name pos:start="18:15" pos:end="18:23">dronology</name><operator pos:start="18:24" pos:end="18:24">.</operator><name pos:start="18:25" pos:end="18:28">core</name><operator pos:start="18:29" pos:end="18:29">.</operator><name pos:start="18:30" pos:end="18:47">collisionavoidance</name><operator pos:start="18:48" pos:end="18:48">.</operator><name pos:start="18:49" pos:end="18:56">strategy</name><operator pos:start="18:57" pos:end="18:57">.</operator><name pos:start="18:58" pos:end="18:77">StopEveryoneWaypoint</name></name>;</import>
<import pos:start="19:1" pos:end="19:80">import <name pos:start="19:8" pos:end="19:79"><name pos:start="19:8" pos:end="19:10">edu</name><operator pos:start="19:11" pos:end="19:11">.</operator><name pos:start="19:12" pos:end="19:13">nd</name><operator pos:start="19:14" pos:end="19:14">.</operator><name pos:start="19:15" pos:end="19:23">dronology</name><operator pos:start="19:24" pos:end="19:24">.</operator><name pos:start="19:25" pos:end="19:28">core</name><operator pos:start="19:29" pos:end="19:29">.</operator><name pos:start="19:30" pos:end="19:47">collisionavoidance</name><operator pos:start="19:48" pos:end="19:48">.</operator><name pos:start="19:49" pos:end="19:56">strategy</name><operator pos:start="19:57" pos:end="19:57">.</operator><name pos:start="19:58" pos:end="19:69">onionbackend</name><operator pos:start="19:70" pos:end="19:70">.</operator><name pos:start="19:71" pos:end="19:79">SlowLayer</name></name>;</import>
<import pos:start="20:1" pos:end="20:80">import <name pos:start="20:8" pos:end="20:79"><name pos:start="20:8" pos:end="20:10">edu</name><operator pos:start="20:11" pos:end="20:11">.</operator><name pos:start="20:12" pos:end="20:13">nd</name><operator pos:start="20:14" pos:end="20:14">.</operator><name pos:start="20:15" pos:end="20:23">dronology</name><operator pos:start="20:24" pos:end="20:24">.</operator><name pos:start="20:25" pos:end="20:28">core</name><operator pos:start="20:29" pos:end="20:29">.</operator><name pos:start="20:30" pos:end="20:47">collisionavoidance</name><operator pos:start="20:48" pos:end="20:48">.</operator><name pos:start="20:49" pos:end="20:56">strategy</name><operator pos:start="20:57" pos:end="20:57">.</operator><name pos:start="20:58" pos:end="20:69">onionbackend</name><operator pos:start="20:70" pos:end="20:70">.</operator><name pos:start="20:71" pos:end="20:79">StopLayer</name></name>;</import>
<import pos:start="21:1" pos:end="21:76">import <name pos:start="21:8" pos:end="21:75"><name pos:start="21:8" pos:end="21:10">edu</name><operator pos:start="21:11" pos:end="21:11">.</operator><name pos:start="21:12" pos:end="21:13">nd</name><operator pos:start="21:14" pos:end="21:14">.</operator><name pos:start="21:15" pos:end="21:23">dronology</name><operator pos:start="21:24" pos:end="21:24">.</operator><name pos:start="21:25" pos:end="21:28">core</name><operator pos:start="21:29" pos:end="21:29">.</operator><name pos:start="21:30" pos:end="21:47">collisionavoidance</name><operator pos:start="21:48" pos:end="21:48">.</operator><name pos:start="21:49" pos:end="21:56">strategy</name><operator pos:start="21:57" pos:end="21:57">.</operator><name pos:start="21:58" pos:end="21:75">FollowTheLeaderNed</name></name>;</import>
<import pos:start="22:1" pos:end="22:81">import <name pos:start="22:8" pos:end="22:80"><name pos:start="22:8" pos:end="22:10">edu</name><operator pos:start="22:11" pos:end="22:11">.</operator><name pos:start="22:12" pos:end="22:13">nd</name><operator pos:start="22:14" pos:end="22:14">.</operator><name pos:start="22:15" pos:end="22:23">dronology</name><operator pos:start="22:24" pos:end="22:24">.</operator><name pos:start="22:25" pos:end="22:28">core</name><operator pos:start="22:29" pos:end="22:29">.</operator><name pos:start="22:30" pos:end="22:47">collisionavoidance</name><operator pos:start="22:48" pos:end="22:48">.</operator><name pos:start="22:49" pos:end="22:56">strategy</name><operator pos:start="22:57" pos:end="22:57">.</operator><name pos:start="22:58" pos:end="22:80">FollowTheLeaderWaypoint</name></name>;</import>
<import pos:start="23:1" pos:end="23:63">import <name pos:start="23:8" pos:end="23:62"><name pos:start="23:8" pos:end="23:10">edu</name><operator pos:start="23:11" pos:end="23:11">.</operator><name pos:start="23:12" pos:end="23:13">nd</name><operator pos:start="23:14" pos:end="23:14">.</operator><name pos:start="23:15" pos:end="23:23">dronology</name><operator pos:start="23:24" pos:end="23:24">.</operator><name pos:start="23:25" pos:end="23:28">core</name><operator pos:start="23:29" pos:end="23:29">.</operator><name pos:start="23:30" pos:end="23:47">collisionavoidance</name><operator pos:start="23:48" pos:end="23:48">.</operator><name pos:start="23:49" pos:end="23:56">strategy</name><operator pos:start="23:57" pos:end="23:57">.</operator><name pos:start="23:58" pos:end="23:62">Onion</name></name>;</import>
<import pos:start="24:1" pos:end="24:69">import <name pos:start="24:8" pos:end="24:68"><name pos:start="24:8" pos:end="24:10">edu</name><operator pos:start="24:11" pos:end="24:11">.</operator><name pos:start="24:12" pos:end="24:13">nd</name><operator pos:start="24:14" pos:end="24:14">.</operator><name pos:start="24:15" pos:end="24:23">dronology</name><operator pos:start="24:24" pos:end="24:24">.</operator><name pos:start="24:25" pos:end="24:28">core</name><operator pos:start="24:29" pos:end="24:29">.</operator><name pos:start="24:30" pos:end="24:47">collisionavoidance</name><operator pos:start="24:48" pos:end="24:48">.</operator><name pos:start="24:49" pos:end="24:56">strategy</name><operator pos:start="24:57" pos:end="24:57">.</operator><name pos:start="24:58" pos:end="24:68">PassThrough</name></name>;</import>
<import pos:start="25:1" pos:end="25:54">import <name pos:start="25:8" pos:end="25:53"><name pos:start="25:8" pos:end="25:10">edu</name><operator pos:start="25:11" pos:end="25:11">.</operator><name pos:start="25:12" pos:end="25:13">nd</name><operator pos:start="25:14" pos:end="25:14">.</operator><name pos:start="25:15" pos:end="25:23">dronology</name><operator pos:start="25:24" pos:end="25:24">.</operator><name pos:start="25:25" pos:end="25:28">core</name><operator pos:start="25:29" pos:end="25:29">.</operator><name pos:start="25:30" pos:end="25:39">coordinate</name><operator pos:start="25:40" pos:end="25:40">.</operator><name pos:start="25:41" pos:end="25:53">LlaCoordinate</name></name>;</import>
<import pos:start="26:1" pos:end="26:55">import <name pos:start="26:8" pos:end="26:54"><name pos:start="26:8" pos:end="26:10">edu</name><operator pos:start="26:11" pos:end="26:11">.</operator><name pos:start="26:12" pos:end="26:13">nd</name><operator pos:start="26:14" pos:end="26:14">.</operator><name pos:start="26:15" pos:end="26:23">dronology</name><operator pos:start="26:24" pos:end="26:24">.</operator><name pos:start="26:25" pos:end="26:28">core</name><operator pos:start="26:29" pos:end="26:29">.</operator><name pos:start="26:30" pos:end="26:39">exceptions</name><operator pos:start="26:40" pos:end="26:40">.</operator><name pos:start="26:41" pos:end="26:54">DroneException</name></name>;</import>
<import pos:start="27:1" pos:end="27:60">import <name pos:start="27:8" pos:end="27:59"><name pos:start="27:8" pos:end="27:10">edu</name><operator pos:start="27:11" pos:end="27:11">.</operator><name pos:start="27:12" pos:end="27:13">nd</name><operator pos:start="27:14" pos:end="27:14">.</operator><name pos:start="27:15" pos:end="27:23">dronology</name><operator pos:start="27:24" pos:end="27:24">.</operator><name pos:start="27:25" pos:end="27:28">core</name><operator pos:start="27:29" pos:end="27:29">.</operator><name pos:start="27:30" pos:end="27:39">exceptions</name><operator pos:start="27:40" pos:end="27:40">.</operator><name pos:start="27:41" pos:end="27:59">FlightZoneException</name></name>;</import>
<import pos:start="28:1" pos:end="28:53">import <name pos:start="28:8" pos:end="28:52"><name pos:start="28:8" pos:end="28:10">edu</name><operator pos:start="28:11" pos:end="28:11">.</operator><name pos:start="28:12" pos:end="28:13">nd</name><operator pos:start="28:14" pos:end="28:14">.</operator><name pos:start="28:15" pos:end="28:23">dronology</name><operator pos:start="28:24" pos:end="28:24">.</operator><name pos:start="28:25" pos:end="28:28">core</name><operator pos:start="28:29" pos:end="28:29">.</operator><name pos:start="28:30" pos:end="28:34">fleet</name><operator pos:start="28:35" pos:end="28:35">.</operator><name pos:start="28:36" pos:end="28:52">DroneFleetManager</name></name>;</import>
<import pos:start="29:1" pos:end="29:54">import <name pos:start="29:8" pos:end="29:53"><name pos:start="29:8" pos:end="29:10">edu</name><operator pos:start="29:11" pos:end="29:11">.</operator><name pos:start="29:12" pos:end="29:13">nd</name><operator pos:start="29:14" pos:end="29:14">.</operator><name pos:start="29:15" pos:end="29:23">dronology</name><operator pos:start="29:24" pos:end="29:24">.</operator><name pos:start="29:25" pos:end="29:28">core</name><operator pos:start="29:29" pos:end="29:29">.</operator><name pos:start="29:30" pos:end="29:35">flight</name><operator pos:start="29:36" pos:end="29:36">.</operator><name pos:start="29:37" pos:end="29:53">FlightPlanFactory</name></name>;</import>
<import pos:start="30:1" pos:end="30:52">import <name pos:start="30:8" pos:end="30:51"><name pos:start="30:8" pos:end="30:10">edu</name><operator pos:start="30:11" pos:end="30:11">.</operator><name pos:start="30:12" pos:end="30:13">nd</name><operator pos:start="30:14" pos:end="30:14">.</operator><name pos:start="30:15" pos:end="30:23">dronology</name><operator pos:start="30:24" pos:end="30:24">.</operator><name pos:start="30:25" pos:end="30:28">core</name><operator pos:start="30:29" pos:end="30:29">.</operator><name pos:start="30:30" pos:end="30:35">flight</name><operator pos:start="30:36" pos:end="30:36">.</operator><name pos:start="30:37" pos:end="30:51">IFlightDirector</name></name>;</import>
<import pos:start="31:1" pos:end="31:48">import <name pos:start="31:8" pos:end="31:47"><name pos:start="31:8" pos:end="31:10">edu</name><operator pos:start="31:11" pos:end="31:11">.</operator><name pos:start="31:12" pos:end="31:13">nd</name><operator pos:start="31:14" pos:end="31:14">.</operator><name pos:start="31:15" pos:end="31:23">dronology</name><operator pos:start="31:24" pos:end="31:24">.</operator><name pos:start="31:25" pos:end="31:28">core</name><operator pos:start="31:29" pos:end="31:29">.</operator><name pos:start="31:30" pos:end="31:35">flight</name><operator pos:start="31:36" pos:end="31:36">.</operator><name pos:start="31:37" pos:end="31:47">IFlightPlan</name></name>;</import>
<import pos:start="32:1" pos:end="32:62">import <name pos:start="32:8" pos:end="32:61"><name pos:start="32:8" pos:end="32:10">edu</name><operator pos:start="32:11" pos:end="32:11">.</operator><name pos:start="32:12" pos:end="32:13">nd</name><operator pos:start="32:14" pos:end="32:14">.</operator><name pos:start="32:15" pos:end="32:23">dronology</name><operator pos:start="32:24" pos:end="32:24">.</operator><name pos:start="32:25" pos:end="32:28">core</name><operator pos:start="32:29" pos:end="32:29">.</operator><name pos:start="32:30" pos:end="32:35">flight</name><operator pos:start="32:36" pos:end="32:36">.</operator><name pos:start="32:37" pos:end="32:61">IPlanStatusChangeListener</name></name>;</import> 
<import pos:start="33:1" pos:end="33:52">import <name pos:start="33:8" pos:end="33:51"><name pos:start="33:8" pos:end="33:10">edu</name><operator pos:start="33:11" pos:end="33:11">.</operator><name pos:start="33:12" pos:end="33:13">nd</name><operator pos:start="33:14" pos:end="33:14">.</operator><name pos:start="33:15" pos:end="33:23">dronology</name><operator pos:start="33:24" pos:end="33:24">.</operator><name pos:start="33:25" pos:end="33:28">core</name><operator pos:start="33:29" pos:end="33:29">.</operator><name pos:start="33:30" pos:end="33:35">flight</name><operator pos:start="33:36" pos:end="33:36">.</operator><name pos:start="33:37" pos:end="33:51">PlanPoolManager</name></name>;</import>
<import pos:start="34:1" pos:end="34:69">import <name pos:start="34:8" pos:end="34:68"><name pos:start="34:8" pos:end="34:10">edu</name><operator pos:start="34:11" pos:end="34:11">.</operator><name pos:start="34:12" pos:end="34:13">nd</name><operator pos:start="34:14" pos:end="34:14">.</operator><name pos:start="34:15" pos:end="34:23">dronology</name><operator pos:start="34:24" pos:end="34:24">.</operator><name pos:start="34:25" pos:end="34:28">core</name><operator pos:start="34:29" pos:end="34:29">.</operator><name pos:start="34:30" pos:end="34:35">flight</name><operator pos:start="34:36" pos:end="34:36">.</operator><name pos:start="34:37" pos:end="34:44">internal</name><operator pos:start="34:45" pos:end="34:45">.</operator><name pos:start="34:46" pos:end="34:68">SimpleTakeoffFlightPlan</name></name>;</import>
<import pos:start="35:1" pos:end="35:58">import <name pos:start="35:8" pos:end="35:57"><name pos:start="35:8" pos:end="35:10">edu</name><operator pos:start="35:11" pos:end="35:11">.</operator><name pos:start="35:12" pos:end="35:13">nd</name><operator pos:start="35:14" pos:end="35:14">.</operator><name pos:start="35:15" pos:end="35:23">dronology</name><operator pos:start="35:24" pos:end="35:24">.</operator><name pos:start="35:25" pos:end="35:28">core</name><operator pos:start="35:29" pos:end="35:29">.</operator><name pos:start="35:30" pos:end="35:35">flight</name><operator pos:start="35:36" pos:end="35:36">.</operator><name pos:start="35:37" pos:end="35:44">internal</name><operator pos:start="35:45" pos:end="35:45">.</operator><name pos:start="35:46" pos:end="35:57">SoloDirector</name></name>;</import>
<import pos:start="36:1" pos:end="36:43">import <name pos:start="36:8" pos:end="36:42"><name pos:start="36:8" pos:end="36:10">edu</name><operator pos:start="36:11" pos:end="36:11">.</operator><name pos:start="36:12" pos:end="36:13">nd</name><operator pos:start="36:14" pos:end="36:14">.</operator><name pos:start="36:15" pos:end="36:23">dronology</name><operator pos:start="36:24" pos:end="36:24">.</operator><name pos:start="36:25" pos:end="36:28">core</name><operator pos:start="36:29" pos:end="36:29">.</operator><name pos:start="36:30" pos:end="36:33">util</name><operator pos:start="36:34" pos:end="36:34">.</operator><name pos:start="36:35" pos:end="36:42">Waypoint</name></name>;</import>
<import pos:start="37:1" pos:end="37:50">import <name pos:start="37:8" pos:end="37:49"><name pos:start="37:8" pos:end="37:10">edu</name><operator pos:start="37:11" pos:end="37:11">.</operator><name pos:start="37:12" pos:end="37:13">nd</name><operator pos:start="37:14" pos:end="37:14">.</operator><name pos:start="37:15" pos:end="37:23">dronology</name><operator pos:start="37:24" pos:end="37:24">.</operator><name pos:start="37:25" pos:end="37:28">core</name><operator pos:start="37:29" pos:end="37:29">.</operator><name pos:start="37:30" pos:end="37:36">vehicle</name><operator pos:start="37:37" pos:end="37:37">.</operator><name pos:start="37:38" pos:end="37:49">ManagedDrone</name></name>;</import>
<import pos:start="38:1" pos:end="38:30">import <name pos:start="38:8" pos:end="38:29"><name pos:start="38:8" pos:end="38:10">net</name><operator pos:start="38:11" pos:end="38:11">.</operator><name pos:start="38:12" pos:end="38:13">mv</name><operator pos:start="38:14" pos:end="38:14">.</operator><name pos:start="38:15" pos:end="38:21">logging</name><operator pos:start="38:22" pos:end="38:22">.</operator><name pos:start="38:23" pos:end="38:29">ILogger</name></name>;</import>
<import pos:start="39:1" pos:end="39:37">import <name pos:start="39:8" pos:end="39:36"><name pos:start="39:8" pos:end="39:10">net</name><operator pos:start="39:11" pos:end="39:11">.</operator><name pos:start="39:12" pos:end="39:13">mv</name><operator pos:start="39:14" pos:end="39:14">.</operator><name pos:start="39:15" pos:end="39:21">logging</name><operator pos:start="39:22" pos:end="39:22">.</operator><name pos:start="39:23" pos:end="39:36">LoggerProvider</name></name>;</import> 

<comment type="block" format="javadoc" pos:start="41:1" pos:end="48:3">/**
 * 
 * Central management class for all UAV related actions. &lt;br&gt;
 * This includes take-off, and landing checks as well as assignment of flight plans to UAVs.
 * 
 * @author Michael Vierhauser
 *  
 */</comment> 
<class pos:start="49:1" pos:end="444:1"><specifier pos:start="49:1" pos:end="49:6">public</specifier> class <name pos:start="49:14" pos:end="49:31">FlightZoneManager2</name> <super_list pos:start="49:33" pos:end="49:68"><implements pos:start="49:33" pos:end="49:68">implements <super pos:start="49:44" pos:end="49:68"><name pos:start="49:44" pos:end="49:68">IPlanStatusChangeListener</name></super></implements></super_list> <block pos:start="49:70" pos:end="444:1">{

	<decl_stmt pos:start="51:9" pos:end="51:97"><decl pos:start="51:9" pos:end="51:96"><type pos:start="51:9" pos:end="51:36"><specifier pos:start="51:9" pos:end="51:15">private</specifier> <specifier pos:start="51:17" pos:end="51:22">static</specifier> <specifier pos:start="51:24" pos:end="51:28">final</specifier> <name pos:start="51:30" pos:end="51:36">ILogger</name></type> <name pos:start="51:38" pos:end="51:43">LOGGER</name> <init pos:start="51:45" pos:end="51:96">= <expr pos:start="51:47" pos:end="51:96"><call pos:start="51:47" pos:end="51:96"><name pos:start="51:47" pos:end="51:70"><name pos:start="51:47" pos:end="51:60">LoggerProvider</name><operator pos:start="51:61" pos:end="51:61">.</operator><name pos:start="51:62" pos:end="51:70">getLogger</name></name><argument_list pos:start="51:71" pos:end="51:96">(<argument pos:start="51:72" pos:end="51:95"><expr pos:start="51:72" pos:end="51:95"><name pos:start="51:72" pos:end="51:95"><name pos:start="51:72" pos:end="51:89">FlightZoneManager2</name><operator pos:start="51:90" pos:end="51:90">.</operator><name pos:start="51:91" pos:end="51:95">class</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

	<decl_stmt pos:start="53:9" pos:end="53:48"><decl pos:start="53:9" pos:end="53:47"><type pos:start="53:9" pos:end="53:31"><specifier pos:start="53:9" pos:end="53:15">private</specifier> <name pos:start="53:17" pos:end="53:31">PlanPoolManager</name></type> <name pos:start="53:33" pos:end="53:47">planPoolManager</name></decl>;</decl_stmt>
	<decl_stmt pos:start="54:9" pos:end="54:45"><decl pos:start="54:9" pos:end="54:44"><type pos:start="54:9" pos:end="54:33"><specifier pos:start="54:9" pos:end="54:15">private</specifier> <name pos:start="54:17" pos:end="54:33">DroneFleetManager</name></type> <name pos:start="54:35" pos:end="54:44">droneFleet</name></decl>;</decl_stmt>
	<decl_stmt pos:start="55:9" pos:end="55:47"><decl pos:start="55:9" pos:end="55:46"><type pos:start="55:9" pos:end="55:43"><specifier pos:start="55:9" pos:end="55:15">private</specifier> <name pos:start="55:17" pos:end="55:43">CollisionAvoidanceMessenger</name></type> <name pos:start="55:45" pos:end="55:46">ca</name></decl>;</decl_stmt>

	<decl_stmt pos:start="57:9" pos:end="57:70"><decl pos:start="57:9" pos:end="57:69"><type pos:start="57:9" pos:end="57:35"><specifier pos:start="57:9" pos:end="57:15">private</specifier> <specifier pos:start="57:17" pos:end="57:21">final</specifier> <name pos:start="57:23" pos:end="57:35">AtomicInteger</name></type> <name pos:start="57:37" pos:end="57:46">activeUAVS</name> <init pos:start="57:48" pos:end="57:69">= <expr pos:start="57:50" pos:end="57:69"><operator pos:start="57:50" pos:end="57:52">new</operator> <call pos:start="57:54" pos:end="57:69"><name pos:start="57:54" pos:end="57:66">AtomicInteger</name><argument_list pos:start="57:67" pos:end="57:69">(<argument pos:start="57:68" pos:end="57:68"><expr pos:start="57:68" pos:end="57:68"><literal type="number" pos:start="57:68" pos:end="57:68">0</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

	<decl_stmt pos:start="59:9" pos:end="59:113"><decl pos:start="59:9" pos:end="59:112"><type pos:start="59:9" pos:end="59:39"><specifier pos:start="59:9" pos:end="59:15">private</specifier> <specifier pos:start="59:17" pos:end="59:21">final</specifier> <name pos:start="59:23" pos:end="59:39"><name pos:start="59:23" pos:end="59:26">List</name><argument_list type="generic" pos:start="59:27" pos:end="59:39">&lt;<argument pos:start="59:28" pos:end="59:38"><name pos:start="59:28" pos:end="59:38">IFlightPlan</name></argument>&gt;</argument_list></name></type> <name pos:start="59:41" pos:end="59:62">awaitingTakeOffFlights</name> <init pos:start="59:64" pos:end="59:112">= <expr pos:start="59:66" pos:end="59:112"><call pos:start="59:66" pos:end="59:112"><name pos:start="59:66" pos:end="59:93"><name pos:start="59:66" pos:end="59:76">Collections</name><operator pos:start="59:77" pos:end="59:77">.</operator><name pos:start="59:78" pos:end="59:93">synchronizedList</name></name><argument_list pos:start="59:94" pos:end="59:112">(<argument pos:start="59:95" pos:end="59:111"><expr pos:start="59:95" pos:end="59:111"><operator pos:start="59:95" pos:end="59:97">new</operator> <call pos:start="59:99" pos:end="59:111"><name pos:start="59:99" pos:end="59:109"><name pos:start="59:99" pos:end="59:107">ArrayList</name><argument_list type="generic" pos:start="59:108" pos:end="59:109">&lt;&gt;</argument_list></name><argument_list pos:start="59:110" pos:end="59:111">()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<decl_stmt pos:start="60:9" pos:end="60:113"><decl pos:start="60:9" pos:end="60:112"><type pos:start="60:9" pos:end="60:39"><specifier pos:start="60:9" pos:end="60:15">private</specifier> <specifier pos:start="60:17" pos:end="60:21">final</specifier> <name pos:start="60:23" pos:end="60:39"><name pos:start="60:23" pos:end="60:26">List</name><argument_list type="generic" pos:start="60:27" pos:end="60:39">&lt;<argument pos:start="60:28" pos:end="60:38"><name pos:start="60:28" pos:end="60:38">IFlightPlan</name></argument>&gt;</argument_list></name></type> <name pos:start="60:41" pos:end="60:62">awaitingLandingFlights</name> <init pos:start="60:64" pos:end="60:112">= <expr pos:start="60:66" pos:end="60:112"><call pos:start="60:66" pos:end="60:112"><name pos:start="60:66" pos:end="60:93"><name pos:start="60:66" pos:end="60:76">Collections</name><operator pos:start="60:77" pos:end="60:77">.</operator><name pos:start="60:78" pos:end="60:93">synchronizedList</name></name><argument_list pos:start="60:94" pos:end="60:112">(<argument pos:start="60:95" pos:end="60:111"><expr pos:start="60:95" pos:end="60:111"><operator pos:start="60:95" pos:end="60:97">new</operator> <call pos:start="60:99" pos:end="60:111"><name pos:start="60:99" pos:end="60:109"><name pos:start="60:99" pos:end="60:107">ArrayList</name><argument_list type="generic" pos:start="60:108" pos:end="60:109">&lt;&gt;</argument_list></name><argument_list pos:start="60:110" pos:end="60:111">()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

	<decl_stmt pos:start="62:9" pos:end="62:48"><decl pos:start="62:9" pos:end="62:47"><type pos:start="62:9" pos:end="62:27"><specifier pos:start="62:9" pos:end="62:15">private</specifier> <specifier pos:start="62:17" pos:end="62:21">final</specifier> <name pos:start="62:23" pos:end="62:27">Timer</name></type> <name pos:start="62:29" pos:end="62:33">timer</name> <init pos:start="62:35" pos:end="62:47">= <expr pos:start="62:37" pos:end="62:47"><operator pos:start="62:37" pos:end="62:39">new</operator> <call pos:start="62:41" pos:end="62:47"><name pos:start="62:41" pos:end="62:45">Timer</name><argument_list pos:start="62:46" pos:end="62:47">()</argument_list></call></expr></init></decl>;</decl_stmt>

	<comment type="block" format="javadoc" pos:start="64:9" pos:end="68:11">/**
	 * Constructs a new FlightZoneManager.
	 * 
	 * @throws InterruptedException
	 */</comment>
	<constructor pos:start="69:9" pos:end="112:9"><specifier pos:start="69:9" pos:end="69:14">public</specifier> <name pos:start="69:16" pos:end="69:33">FlightZoneManager2</name><parameter_list pos:start="69:34" pos:end="69:35">()</parameter_list> <throws pos:start="69:37" pos:end="69:63">throws <argument pos:start="69:44" pos:end="69:63"><expr pos:start="69:44" pos:end="69:63"><name pos:start="69:44" pos:end="69:63">InterruptedException</name></expr></argument></throws> <block pos:start="69:65" pos:end="112:9">{<block_content pos:start="70:17" pos:end="110:33">
		<expr_stmt pos:start="70:17" pos:end="70:61"><expr pos:start="70:17" pos:end="70:60"><name pos:start="70:17" pos:end="70:26">droneFleet</name> <operator pos:start="70:28" pos:end="70:28">=</operator> <call pos:start="70:30" pos:end="70:60"><name pos:start="70:30" pos:end="70:58"><name pos:start="70:30" pos:end="70:46">DroneFleetManager</name><operator pos:start="70:47" pos:end="70:47">.</operator><name pos:start="70:48" pos:end="70:58">getInstance</name></name><argument_list pos:start="70:59" pos:end="70:60">()</argument_list></call></expr>;</expr_stmt>
		<expr_stmt pos:start="71:17" pos:end="71:64"><expr pos:start="71:17" pos:end="71:63"><name pos:start="71:17" pos:end="71:31">planPoolManager</name> <operator pos:start="71:33" pos:end="71:33">=</operator> <call pos:start="71:35" pos:end="71:63"><name pos:start="71:35" pos:end="71:61"><name pos:start="71:35" pos:end="71:49">PlanPoolManager</name><operator pos:start="71:50" pos:end="71:50">.</operator><name pos:start="71:51" pos:end="71:61">getInstance</name></name><argument_list pos:start="71:62" pos:end="71:63">()</argument_list></call></expr>;</expr_stmt>
		<expr_stmt pos:start="72:17" pos:end="72:66"><expr pos:start="72:17" pos:end="72:65"><call pos:start="72:17" pos:end="72:65"><name pos:start="72:17" pos:end="72:59"><name pos:start="72:17" pos:end="72:31">planPoolManager</name><operator pos:start="72:32" pos:end="72:32">.</operator><name pos:start="72:33" pos:end="72:59">addPlanStatusChangeListener</name></name><argument_list pos:start="72:60" pos:end="72:65">(<argument pos:start="72:61" pos:end="72:64"><expr pos:start="72:61" pos:end="72:64"><name pos:start="72:61" pos:end="72:64">this</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		<comment type="line" pos:start="74:17" pos:end="74:107">// CollisionAvoidanceBackend backend = new CollisionAvoidanceBackend(new StopEveryone(10));</comment>
		<comment type="line" pos:start="75:17" pos:end="75:47">// ca = backend.getMessenger();</comment>

		<comment type="line" pos:start="77:17" pos:end="77:123">// timer.scheduleAtFixedRate(new AvoidanceCheckTask(), 100, DronologyConstants.FREQUENCY_COLLISION_CHECKS);</comment>
		<expr_stmt pos:start="78:17" pos:end="78:114"><expr pos:start="78:17" pos:end="78:113"><call pos:start="78:17" pos:end="78:113"><name pos:start="78:17" pos:end="78:41"><name pos:start="78:17" pos:end="78:21">timer</name><operator pos:start="78:22" pos:end="78:22">.</operator><name pos:start="78:23" pos:end="78:41">scheduleAtFixedRate</name></name><argument_list pos:start="78:42" pos:end="78:113">(<argument pos:start="78:43" pos:end="78:63"><expr pos:start="78:43" pos:end="78:63"><operator pos:start="78:43" pos:end="78:45">new</operator> <call pos:start="78:47" pos:end="78:63"><name pos:start="78:47" pos:end="78:61">StatusCheckTask</name><argument_list pos:start="78:62" pos:end="78:63">()</argument_list></call></expr></argument>, <argument pos:start="78:66" pos:end="78:68"><expr pos:start="78:66" pos:end="78:68"><literal type="number" pos:start="78:66" pos:end="78:68">100</literal></expr></argument>, <argument pos:start="78:71" pos:end="78:112"><expr pos:start="78:71" pos:end="78:112"><name pos:start="78:71" pos:end="78:112"><name pos:start="78:71" pos:end="78:88">DronologyConstants</name><operator pos:start="78:89" pos:end="78:89">.</operator><name pos:start="78:90" pos:end="78:112">FREQUENCY_STATUS_CHECKS</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<comment type="line" pos:start="79:17" pos:end="79:107">// CollisionAvoidanceCheckTask caTask = new CollisionAvoidanceCheckTask(new PassThrough());</comment>
		<comment type="line" pos:start="80:17" pos:end="80:109">// CollisionAvoidanceCheckTask caTask = new CollisionAvoidanceCheckTask(new StopEveryone(0));</comment>
		<decl_stmt pos:start="81:17" pos:end="81:115"><decl pos:start="81:17" pos:end="81:114"><type pos:start="81:17" pos:end="81:43"><name pos:start="81:17" pos:end="81:43">CollisionAvoidanceCheckTask</name></type> <name pos:start="81:45" pos:end="81:50">caTask</name> <init pos:start="81:52" pos:end="81:114">= <expr pos:start="81:54" pos:end="81:114"><operator pos:start="81:54" pos:end="81:56">new</operator> <call pos:start="81:58" pos:end="81:114"><name pos:start="81:58" pos:end="81:84">CollisionAvoidanceCheckTask</name><argument_list pos:start="81:85" pos:end="81:114">(<argument pos:start="81:86" pos:end="81:113"><expr pos:start="81:86" pos:end="81:113"><operator pos:start="81:86" pos:end="81:88">new</operator> <call pos:start="81:90" pos:end="81:113"><name pos:start="81:90" pos:end="81:109">StopEveryoneWaypoint</name><argument_list pos:start="81:110" pos:end="81:113">(<argument pos:start="81:111" pos:end="81:112"><expr pos:start="81:111" pos:end="81:112"><literal type="number" pos:start="81:111" pos:end="81:112">20</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<comment type="line" pos:start="82:17" pos:end="82:114">// CollisionAvoidanceCheckTask caTask = new CollisionAvoidanceCheckTask(new FollowTheLeaderNed());</comment>
		<comment type="line" pos:start="83:17" pos:end="83:130">// CollisionAvoidanceCheckTask caTask = new CollisionAvoidanceCheckTask(new FollowTheLeaderWaypoint(10, 10, -10));</comment>
		<comment type="line" pos:start="84:17" pos:end="84:98">// CollisionAvoidanceCheckTask caTask = new CollisionAvoidanceCheckTask(new Onion(</comment>
		<comment type="line" pos:start="85:17" pos:end="85:41">// 	new StopLayer(5),</comment>
		<comment type="line" pos:start="86:17" pos:end="86:47">// 	new SlowLayer(10, 0.2),</comment>
		<comment type="line" pos:start="87:17" pos:end="87:47">// 	new SlowLayer(20, 0.5),</comment>
		<comment type="line" pos:start="88:17" pos:end="88:47">// 	new SlowLayer(40, 2.0),</comment>
		<comment type="line" pos:start="89:17" pos:end="89:47">// 	new SlowLayer(80, 4.0),</comment>
		<comment type="line" pos:start="90:17" pos:end="90:47">// 	new SlowLayer(160, 6.0)</comment>
		<comment type="line" pos:start="91:17" pos:end="91:22">// ));</comment>
		
		<decl_stmt pos:start="93:17" pos:end="108:19"><decl pos:start="93:17" pos:end="108:18"><type pos:start="93:17" pos:end="93:22"><name pos:start="93:17" pos:end="93:22">Thread</name></type> <name pos:start="93:24" pos:end="93:31">caThread</name> <init pos:start="93:33" pos:end="108:18">= <expr pos:start="93:35" pos:end="108:18"><operator pos:start="93:35" pos:end="93:37">new</operator> <call pos:start="93:39" pos:end="108:18"><name pos:start="93:39" pos:end="93:44">Thread</name><argument_list pos:start="93:45" pos:end="108:18">(<argument pos:start="93:46" pos:end="108:17"><expr pos:start="93:46" pos:end="108:17"><operator pos:start="93:46" pos:end="93:48">new</operator> <class pos:start="93:50" pos:end="108:17"><super pos:start="93:50" pos:end="93:57"><name pos:start="93:50" pos:end="93:57">Runnable</name></super><argument_list pos:start="93:58" pos:end="93:59">()</argument_list><block pos:start="93:60" pos:end="108:17">{
		
			<function pos:start="95:25" pos:end="107:25"><annotation pos:start="95:25" pos:end="95:33">@<name pos:start="95:26" pos:end="95:33">Override</name></annotation>
			<type pos:start="96:25" pos:end="96:35"><specifier pos:start="96:25" pos:end="96:30">public</specifier> <name pos:start="96:32" pos:end="96:35">void</name></type> <name pos:start="96:37" pos:end="96:39">run</name><parameter_list pos:start="96:40" pos:end="96:41">()</parameter_list> <block pos:start="96:43" pos:end="107:25">{<block_content pos:start="97:33" pos:end="106:33">
				<try pos:start="97:33" pos:end="101:33">try <block pos:start="97:37" pos:end="99:33">{<block_content pos:start="98:41" pos:end="98:58">
					<expr_stmt pos:start="98:41" pos:end="98:58"><expr pos:start="98:41" pos:end="98:57"><call pos:start="98:41" pos:end="98:57"><name pos:start="98:41" pos:end="98:52"><name pos:start="98:41" pos:end="98:46">Thread</name><operator pos:start="98:47" pos:end="98:47">.</operator><name pos:start="98:48" pos:end="98:52">sleep</name></name><argument_list pos:start="98:53" pos:end="98:57">(<argument pos:start="98:54" pos:end="98:56"><expr pos:start="98:54" pos:end="98:56"><literal type="number" pos:start="98:54" pos:end="98:56">100</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				</block_content>}</block> <catch pos:start="99:35" pos:end="101:33">catch <parameter_list pos:start="99:41" pos:end="99:64">(<parameter pos:start="99:42" pos:end="99:63"><decl pos:start="99:42" pos:end="99:63"><type pos:start="99:42" pos:end="99:63"><name pos:start="99:42" pos:end="99:61">InterruptedException</name></type> <name pos:start="99:63" pos:end="99:63">e</name></decl></parameter>)</parameter_list> <block pos:start="99:66" pos:end="101:33">{<block_content pos:start="100:41" pos:end="100:60">
					<expr_stmt pos:start="100:41" pos:end="100:60"><expr pos:start="100:41" pos:end="100:59"><call pos:start="100:41" pos:end="100:59"><name pos:start="100:41" pos:end="100:57"><name pos:start="100:41" pos:end="100:41">e</name><operator pos:start="100:42" pos:end="100:42">.</operator><name pos:start="100:43" pos:end="100:57">printStackTrace</name></name><argument_list pos:start="100:58" pos:end="100:59">()</argument_list></call></expr>;</expr_stmt>
				</block_content>}</block></catch></try>
				<decl_stmt pos:start="102:33" pos:end="102:120"><decl pos:start="102:33" pos:end="102:119"><type pos:start="102:33" pos:end="102:43"><name pos:start="102:33" pos:end="102:43">RateLimiter</name></type> <name pos:start="102:45" pos:end="102:51">limiter</name> <init pos:start="102:53" pos:end="102:119">= <expr pos:start="102:55" pos:end="102:119"><call pos:start="102:55" pos:end="102:119"><name pos:start="102:55" pos:end="102:72"><name pos:start="102:55" pos:end="102:65">RateLimiter</name><operator pos:start="102:66" pos:end="102:66">.</operator><name pos:start="102:67" pos:end="102:72">create</name></name><argument_list pos:start="102:73" pos:end="102:119">(<argument pos:start="102:74" pos:end="102:118"><expr pos:start="102:74" pos:end="102:118"><name pos:start="102:74" pos:end="102:118"><name pos:start="102:74" pos:end="102:91">DronologyConstants</name><operator pos:start="102:92" pos:end="102:92">.</operator><name pos:start="102:93" pos:end="102:118">FREQUENCY_COLLISION_CHECKS</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
				<while pos:start="103:33" pos:end="106:33">while<condition pos:start="103:38" pos:end="103:43">(<expr pos:start="103:39" pos:end="103:42"><literal type="boolean" pos:start="103:39" pos:end="103:42">true</literal></expr>)</condition> <block pos:start="103:45" pos:end="106:33">{<block_content pos:start="104:41" pos:end="105:53">
					<expr_stmt pos:start="104:41" pos:end="104:58"><expr pos:start="104:41" pos:end="104:57"><call pos:start="104:41" pos:end="104:57"><name pos:start="104:41" pos:end="104:55"><name pos:start="104:41" pos:end="104:47">limiter</name><operator pos:start="104:48" pos:end="104:48">.</operator><name pos:start="104:49" pos:end="104:55">acquire</name></name><argument_list pos:start="104:56" pos:end="104:57">()</argument_list></call></expr>;</expr_stmt>
					<expr_stmt pos:start="105:41" pos:end="105:53"><expr pos:start="105:41" pos:end="105:52"><call pos:start="105:41" pos:end="105:52"><name pos:start="105:41" pos:end="105:50"><name pos:start="105:41" pos:end="105:46">caTask</name><operator pos:start="105:47" pos:end="105:47">.</operator><name pos:start="105:48" pos:end="105:50">run</name></name><argument_list pos:start="105:51" pos:end="105:52">()</argument_list></call></expr>;</expr_stmt>
				</block_content>}</block></while>
			</block_content>}</block></function>
		}</block></class></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt pos:start="109:17" pos:end="109:41"><expr pos:start="109:17" pos:end="109:40"><call pos:start="109:17" pos:end="109:40"><name pos:start="109:17" pos:end="109:34"><name pos:start="109:17" pos:end="109:24">caThread</name><operator pos:start="109:25" pos:end="109:25">.</operator><name pos:start="109:26" pos:end="109:34">setDaemon</name></name><argument_list pos:start="109:35" pos:end="109:40">(<argument pos:start="109:36" pos:end="109:39"><expr pos:start="109:36" pos:end="109:39"><literal type="boolean" pos:start="109:36" pos:end="109:39">true</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt pos:start="110:17" pos:end="110:33"><expr pos:start="110:17" pos:end="110:32"><call pos:start="110:17" pos:end="110:32"><name pos:start="110:17" pos:end="110:30"><name pos:start="110:17" pos:end="110:24">caThread</name><operator pos:start="110:25" pos:end="110:25">.</operator><name pos:start="110:26" pos:end="110:30">start</name></name><argument_list pos:start="110:31" pos:end="110:32">()</argument_list></call></expr>;</expr_stmt>
		<comment type="line" pos:start="111:17" pos:end="111:79">// droneFleet.addDroneFleetListener(new DroneCARegistration());</comment>
	</block_content>}</block></constructor>

	<function pos:start="114:9" pos:end="146:9"><type pos:start="114:9" pos:end="114:28"><specifier pos:start="114:9" pos:end="114:15">private</specifier> <name pos:start="114:17" pos:end="114:28">ManagedDrone</name></type> <name pos:start="114:30" pos:end="114:41">tryAssignUAV</name><parameter_list pos:start="114:42" pos:end="114:43">()</parameter_list> <throws pos:start="114:45" pos:end="114:86">throws <argument pos:start="114:52" pos:end="114:65"><expr pos:start="114:52" pos:end="114:65"><name pos:start="114:52" pos:end="114:65">DroneException</name></expr></argument>, <argument pos:start="114:68" pos:end="114:86"><expr pos:start="114:68" pos:end="114:86"><name pos:start="114:68" pos:end="114:86">FlightZoneException</name></expr></argument></throws> <block pos:start="114:88" pos:end="146:9">{<block_content pos:start="115:17" pos:end="145:28">
		<decl_stmt pos:start="115:17" pos:end="115:76"><decl pos:start="115:17" pos:end="115:75"><type pos:start="115:17" pos:end="115:27"><name pos:start="115:17" pos:end="115:27">IFlightPlan</name></type> <name pos:start="115:29" pos:end="115:36">nextPlan</name> <init pos:start="115:38" pos:end="115:75">= <expr pos:start="115:40" pos:end="115:75"><call pos:start="115:40" pos:end="115:75"><name pos:start="115:40" pos:end="115:73"><name pos:start="115:40" pos:end="115:54">planPoolManager</name><operator pos:start="115:55" pos:end="115:55">.</operator><name pos:start="115:56" pos:end="115:73">getNextPendingPlan</name></name><argument_list pos:start="115:74" pos:end="115:75">()</argument_list></call></expr></init></decl>;</decl_stmt>
		<decl_stmt pos:start="116:17" pos:end="116:35"><decl pos:start="116:17" pos:end="116:34"><type pos:start="116:17" pos:end="116:28"><name pos:start="116:17" pos:end="116:28">ManagedDrone</name></type> <name pos:start="116:30" pos:end="116:34">drone</name></decl>;</decl_stmt>
		<if_stmt pos:start="117:17" pos:end="124:17"><if pos:start="117:17" pos:end="122:17">if <condition pos:start="117:20" pos:end="117:60">(<expr pos:start="117:21" pos:end="117:59"><call pos:start="117:21" pos:end="117:51"><name pos:start="117:21" pos:end="117:49"><name pos:start="117:21" pos:end="117:28">nextPlan</name><operator pos:start="117:29" pos:end="117:29">.</operator><name pos:start="117:30" pos:end="117:49">getDesignatedDroneId</name></name><argument_list pos:start="117:50" pos:end="117:51">()</argument_list></call> <operator pos:start="117:53" pos:end="117:54">==</operator> <literal type="null" pos:start="117:56" pos:end="117:59">null</literal></expr>)</condition> <block pos:start="117:62" pos:end="122:17">{<block_content pos:start="118:25" pos:end="121:25">
			<expr_stmt pos:start="118:25" pos:end="118:63"><expr pos:start="118:25" pos:end="118:62"><name pos:start="118:25" pos:end="118:29">drone</name> <operator pos:start="118:31" pos:end="118:31">=</operator> <call pos:start="118:33" pos:end="118:62"><name pos:start="118:33" pos:end="118:60"><name pos:start="118:33" pos:end="118:42">droneFleet</name><operator pos:start="118:43" pos:end="118:43">.</operator><name pos:start="118:44" pos:end="118:60">getAvailableDrone</name></name><argument_list pos:start="118:61" pos:end="118:62">()</argument_list></call></expr>;</expr_stmt>
			<if_stmt pos:start="119:25" pos:end="121:25"><if pos:start="119:25" pos:end="121:25">if <condition pos:start="119:28" pos:end="119:42">(<expr pos:start="119:29" pos:end="119:41"><name pos:start="119:29" pos:end="119:33">drone</name> <operator pos:start="119:35" pos:end="119:36">!=</operator> <literal type="null" pos:start="119:38" pos:end="119:41">null</literal></expr>)</condition> <block pos:start="119:44" pos:end="121:25">{<block_content pos:start="120:33" pos:end="120:91">
				<expr_stmt pos:start="120:33" pos:end="120:91"><expr pos:start="120:33" pos:end="120:90"><call pos:start="120:33" pos:end="120:90"><name pos:start="120:33" pos:end="120:58"><name pos:start="120:33" pos:end="120:47">planPoolManager</name><operator pos:start="120:48" pos:end="120:48">.</operator><name pos:start="120:49" pos:end="120:58">assignPlan</name></name><argument_list pos:start="120:59" pos:end="120:90">(<argument pos:start="120:60" pos:end="120:67"><expr pos:start="120:60" pos:end="120:67"><name pos:start="120:60" pos:end="120:67">nextPlan</name></expr></argument>, <argument pos:start="120:70" pos:end="120:89"><expr pos:start="120:70" pos:end="120:89"><call pos:start="120:70" pos:end="120:89"><name pos:start="120:70" pos:end="120:87"><name pos:start="120:70" pos:end="120:74">drone</name><operator pos:start="120:75" pos:end="120:75">.</operator><name pos:start="120:76" pos:end="120:87">getDroneName</name></name><argument_list pos:start="120:88" pos:end="120:89">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			</block_content>}</block></if></if_stmt>
		</block_content>}</block></if> <else pos:start="122:19" pos:end="124:17">else <block pos:start="122:24" pos:end="124:17">{<block_content pos:start="123:25" pos:end="123:94">
			<expr_stmt pos:start="123:25" pos:end="123:94"><expr pos:start="123:25" pos:end="123:93"><name pos:start="123:25" pos:end="123:29">drone</name> <operator pos:start="123:31" pos:end="123:31">=</operator> <call pos:start="123:33" pos:end="123:93"><name pos:start="123:33" pos:end="123:60"><name pos:start="123:33" pos:end="123:42">droneFleet</name><operator pos:start="123:43" pos:end="123:43">.</operator><name pos:start="123:44" pos:end="123:60">getAvailableDrone</name></name><argument_list pos:start="123:61" pos:end="123:93">(<argument pos:start="123:62" pos:end="123:92"><expr pos:start="123:62" pos:end="123:92"><call pos:start="123:62" pos:end="123:92"><name pos:start="123:62" pos:end="123:90"><name pos:start="123:62" pos:end="123:69">nextPlan</name><operator pos:start="123:70" pos:end="123:70">.</operator><name pos:start="123:71" pos:end="123:90">getDesignatedDroneId</name></name><argument_list pos:start="123:91" pos:end="123:92">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		</block_content>}</block></else></if_stmt>

		<comment type="line" pos:start="126:17" pos:end="126:63">// TODO try to find a free uav from all plans..</comment>
		<if_stmt pos:start="127:17" pos:end="144:17"><if pos:start="127:17" pos:end="144:17">if <condition pos:start="127:20" pos:end="127:100">(<expr pos:start="127:21" pos:end="127:99"><name pos:start="127:21" pos:end="127:25">drone</name> <operator pos:start="127:27" pos:end="127:28">!=</operator> <literal type="null" pos:start="127:30" pos:end="127:33">null</literal> <operator pos:start="127:35" pos:end="127:36">&amp;&amp;</operator> <operator pos:start="127:38" pos:end="127:38">(</operator><call pos:start="127:39" pos:end="127:90"><name pos:start="127:39" pos:end="127:68"><name pos:start="127:39" pos:end="127:53">planPoolManager</name><operator pos:start="127:54" pos:end="127:54">.</operator><name pos:start="127:55" pos:end="127:68">getCurrentPlan</name></name><argument_list pos:start="127:69" pos:end="127:90">(<argument pos:start="127:70" pos:end="127:89"><expr pos:start="127:70" pos:end="127:89"><call pos:start="127:70" pos:end="127:89"><name pos:start="127:70" pos:end="127:87"><name pos:start="127:70" pos:end="127:74">drone</name><operator pos:start="127:75" pos:end="127:75">.</operator><name pos:start="127:76" pos:end="127:87">getDroneName</name></name><argument_list pos:start="127:88" pos:end="127:89">()</argument_list></call></expr></argument>)</argument_list></call> <operator pos:start="127:92" pos:end="127:93">==</operator> <literal type="null" pos:start="127:95" pos:end="127:98">null</literal><operator pos:start="127:99" pos:end="127:99">)</operator></expr>)</condition> <block pos:start="127:102" pos:end="144:17">{<block_content pos:start="128:25" pos:end="143:37">
			<expr_stmt pos:start="128:25" pos:end="128:85"><expr pos:start="128:25" pos:end="128:84"><call pos:start="128:25" pos:end="128:84"><name pos:start="128:25" pos:end="128:52"><name pos:start="128:25" pos:end="128:39">planPoolManager</name><operator pos:start="128:40" pos:end="128:40">.</operator><name pos:start="128:41" pos:end="128:52">activatePlan</name></name><argument_list pos:start="128:53" pos:end="128:84">(<argument pos:start="128:54" pos:end="128:61"><expr pos:start="128:54" pos:end="128:61"><name pos:start="128:54" pos:end="128:61">nextPlan</name></expr></argument>, <argument pos:start="128:64" pos:end="128:83"><expr pos:start="128:64" pos:end="128:83"><call pos:start="128:64" pos:end="128:83"><name pos:start="128:64" pos:end="128:81"><name pos:start="128:64" pos:end="128:68">drone</name><operator pos:start="128:69" pos:end="128:69">.</operator><name pos:start="128:70" pos:end="128:81">getDroneName</name></name><argument_list pos:start="128:82" pos:end="128:83">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<if_stmt pos:start="129:25" pos:end="131:25"><if pos:start="129:25" pos:end="131:25">if <condition pos:start="129:28" pos:end="129:68">(<expr pos:start="129:29" pos:end="129:67"><call pos:start="129:29" pos:end="129:54"><name pos:start="129:29" pos:end="129:52"><name pos:start="129:29" pos:end="129:33">drone</name><operator pos:start="129:34" pos:end="129:34">.</operator><name pos:start="129:35" pos:end="129:52">getFlightModeState</name></name><argument_list pos:start="129:53" pos:end="129:54">()</argument_list></call><operator pos:start="129:55" pos:end="129:55">.</operator><call pos:start="129:56" pos:end="129:67"><name pos:start="129:56" pos:end="129:65">isOnGround</name><argument_list pos:start="129:66" pos:end="129:67">()</argument_list></call></expr>)</condition> <block pos:start="129:70" pos:end="131:25">{<block_content pos:start="130:33" pos:end="130:69">
				<expr_stmt pos:start="130:33" pos:end="130:69"><expr pos:start="130:33" pos:end="130:68"><call pos:start="130:33" pos:end="130:68"><name pos:start="130:33" pos:end="130:58"><name pos:start="130:33" pos:end="130:54">awaitingTakeOffFlights</name><operator pos:start="130:55" pos:end="130:55">.</operator><name pos:start="130:56" pos:end="130:58">add</name></name><argument_list pos:start="130:59" pos:end="130:68">(<argument pos:start="130:60" pos:end="130:67"><expr pos:start="130:60" pos:end="130:67"><name pos:start="130:60" pos:end="130:67">nextPlan</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			</block_content>}</block></if></if_stmt>

			<decl_stmt pos:start="133:25" pos:end="133:83"><decl pos:start="133:25" pos:end="133:82"><type pos:start="133:25" pos:end="133:39"><name pos:start="133:25" pos:end="133:39">IFlightDirector</name></type> <name pos:start="133:41" pos:end="133:56">flightDirectives</name> <init pos:start="133:58" pos:end="133:82">= <expr pos:start="133:60" pos:end="133:82"><operator pos:start="133:60" pos:end="133:62">new</operator> <call pos:start="133:64" pos:end="133:82"><name pos:start="133:64" pos:end="133:75">SoloDirector</name><argument_list pos:start="133:76" pos:end="133:82">(<argument pos:start="133:77" pos:end="133:81"><expr pos:start="133:77" pos:end="133:81"><name pos:start="133:77" pos:end="133:81">drone</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<expr_stmt pos:start="134:25" pos:end="134:79"><expr pos:start="134:25" pos:end="134:78"><call pos:start="134:25" pos:end="134:78"><name pos:start="134:25" pos:end="134:53"><name pos:start="134:25" pos:end="134:40">flightDirectives</name><operator pos:start="134:41" pos:end="134:41">.</operator><name pos:start="134:42" pos:end="134:53">setWayPoints</name></name><argument_list pos:start="134:54" pos:end="134:78">(<argument pos:start="134:55" pos:end="134:77"><expr pos:start="134:55" pos:end="134:77"><call pos:start="134:55" pos:end="134:77"><name pos:start="134:55" pos:end="134:75"><name pos:start="134:55" pos:end="134:62">nextPlan</name><operator pos:start="134:63" pos:end="134:63">.</operator><name pos:start="134:64" pos:end="134:75">getWayPoints</name></name><argument_list pos:start="134:76" pos:end="134:77">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt pos:start="135:25" pos:end="135:76"><expr pos:start="135:25" pos:end="135:75"><call pos:start="135:25" pos:end="135:44"><name pos:start="135:25" pos:end="135:42"><name pos:start="135:25" pos:end="135:29">drone</name><operator pos:start="135:30" pos:end="135:30">.</operator><name pos:start="135:31" pos:end="135:42">getMessenger</name></name><argument_list pos:start="135:43" pos:end="135:44">()</argument_list></call><operator pos:start="135:45" pos:end="135:45">.</operator><call pos:start="135:46" pos:end="135:75"><name pos:start="135:46" pos:end="135:57">assignFlight</name><argument_list pos:start="135:58" pos:end="135:75">(<argument pos:start="135:59" pos:end="135:74"><expr pos:start="135:59" pos:end="135:74"><name pos:start="135:59" pos:end="135:74">flightDirectives</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<comment type="line" pos:start="136:25" pos:end="136:66">// // this needs to be moved to launch....</comment>
			<expr_stmt pos:start="137:25" pos:end="137:58"><expr pos:start="137:25" pos:end="137:57"><call pos:start="137:25" pos:end="137:57"><name pos:start="137:25" pos:end="137:50"><name pos:start="137:25" pos:end="137:32">nextPlan</name><operator pos:start="137:33" pos:end="137:33">.</operator><name pos:start="137:34" pos:end="137:50">setStatusToFlying</name></name><argument_list pos:start="137:51" pos:end="137:57">(<argument pos:start="137:52" pos:end="137:56"><expr pos:start="137:52" pos:end="137:56"><name pos:start="137:52" pos:end="137:56">drone</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<if_stmt pos:start="138:25" pos:end="142:25"><if pos:start="138:25" pos:end="140:25">if <condition pos:start="138:28" pos:end="138:65">(<expr pos:start="138:29" pos:end="138:64"><call pos:start="138:29" pos:end="138:54"><name pos:start="138:29" pos:end="138:52"><name pos:start="138:29" pos:end="138:33">drone</name><operator pos:start="138:34" pos:end="138:34">.</operator><name pos:start="138:35" pos:end="138:52">getFlightModeState</name></name><argument_list pos:start="138:53" pos:end="138:54">()</argument_list></call><operator pos:start="138:55" pos:end="138:55">.</operator><call pos:start="138:56" pos:end="138:64"><name pos:start="138:56" pos:end="138:62">isInAir</name><argument_list pos:start="138:63" pos:end="138:64">()</argument_list></call></expr>)</condition> <block pos:start="138:67" pos:end="140:25">{<block_content pos:start="139:33" pos:end="139:77">
				<expr_stmt pos:start="139:33" pos:end="139:77"><expr pos:start="139:33" pos:end="139:76"><call pos:start="139:33" pos:end="139:58"><name pos:start="139:33" pos:end="139:56"><name pos:start="139:33" pos:end="139:37">drone</name><operator pos:start="139:38" pos:end="139:38">.</operator><name pos:start="139:39" pos:end="139:56">getFlightModeState</name></name><argument_list pos:start="139:57" pos:end="139:58">()</argument_list></call><operator pos:start="139:59" pos:end="139:59">.</operator><call pos:start="139:60" pos:end="139:76"><name pos:start="139:60" pos:end="139:74">setModeToFlying</name><argument_list pos:start="139:75" pos:end="139:76">()</argument_list></call></expr>;</expr_stmt>
			</block_content>}</block></if> <else pos:start="140:27" pos:end="142:25">else <block pos:start="140:32" pos:end="142:25">{<block_content pos:start="141:33" pos:end="141:95">
				<expr_stmt pos:start="141:33" pos:end="141:95"><expr pos:start="141:33" pos:end="141:94"><call pos:start="141:33" pos:end="141:58"><name pos:start="141:33" pos:end="141:56"><name pos:start="141:33" pos:end="141:37">drone</name><operator pos:start="141:38" pos:end="141:38">.</operator><name pos:start="141:39" pos:end="141:56">getFlightModeState</name></name><argument_list pos:start="141:57" pos:end="141:58">()</argument_list></call><operator pos:start="141:59" pos:end="141:59">.</operator><call pos:start="141:60" pos:end="141:94"><name pos:start="141:60" pos:end="141:92">setModeToAwaitingTakeOffClearance</name><argument_list pos:start="141:93" pos:end="141:94">()</argument_list></call></expr>;</expr_stmt>
			</block_content>}</block></else></if_stmt>
			<return pos:start="143:25" pos:end="143:37">return <expr pos:start="143:32" pos:end="143:36"><name pos:start="143:32" pos:end="143:36">drone</name></expr>;</return>
		</block_content>}</block></if></if_stmt>
		<return pos:start="145:17" pos:end="145:28">return <expr pos:start="145:24" pos:end="145:27"><literal type="null" pos:start="145:24" pos:end="145:27">null</literal></expr>;</return>
	</block_content>}</block></function>

	<class pos:start="148:9" pos:end="161:9"><specifier pos:start="148:9" pos:end="148:15">private</specifier> class <name pos:start="148:23" pos:end="148:41">DroneCARegistration</name> <super_list pos:start="148:43" pos:end="148:71"><implements pos:start="148:43" pos:end="148:71">implements <super pos:start="148:54" pos:end="148:71"><name pos:start="148:54" pos:end="148:71">DroneFleetListener</name></super></implements></super_list> <block pos:start="148:73" pos:end="161:9">{
		<function pos:start="149:17" pos:end="155:17"><annotation pos:start="149:17" pos:end="149:25">@<name pos:start="149:18" pos:end="149:25">Override</name></annotation>
		<type pos:start="150:17" pos:end="150:27"><specifier pos:start="150:17" pos:end="150:22">public</specifier> <name pos:start="150:24" pos:end="150:27">void</name></type> <name pos:start="150:29" pos:end="150:38">droneAdded</name><parameter_list pos:start="150:39" pos:end="150:58">(<parameter pos:start="150:40" pos:end="150:57"><decl pos:start="150:40" pos:end="150:57"><type pos:start="150:40" pos:end="150:51"><name pos:start="150:40" pos:end="150:51">ManagedDrone</name></type> <name pos:start="150:53" pos:end="150:57">drone</name></decl></parameter>)</parameter_list> <block pos:start="150:60" pos:end="155:17">{<block_content pos:start="151:25" pos:end="153:27">
			<expr_stmt pos:start="151:25" pos:end="153:27"><expr pos:start="151:25" pos:end="153:26"><call pos:start="151:25" pos:end="153:26"><name pos:start="151:25" pos:end="151:41"><name pos:start="151:25" pos:end="151:29">drone</name><operator pos:start="151:30" pos:end="151:30">.</operator><name pos:start="151:31" pos:end="151:41">addObserver</name></name><argument_list pos:start="151:42" pos:end="153:26">(<argument pos:start="151:43" pos:end="153:25"><expr pos:start="151:43" pos:end="153:25"><lambda pos:start="151:43" pos:end="153:25"><parameter_list pos:start="151:43" pos:end="151:59">(<parameter pos:start="151:44" pos:end="151:53"><decl pos:start="151:44" pos:end="151:53"><name pos:start="151:44" pos:end="151:53">observable</name></decl></parameter>, <parameter pos:start="151:56" pos:end="151:58"><decl pos:start="151:56" pos:end="151:58"><name pos:start="151:56" pos:end="151:58">arg</name></decl></parameter>)</parameter_list> -&gt; <block pos:start="151:64" pos:end="153:25">{<block_content pos:start="152:33" pos:end="152:105">
				<expr_stmt pos:start="152:33" pos:end="152:105"><expr pos:start="152:33" pos:end="152:104"><call pos:start="152:33" pos:end="152:104"><name pos:start="152:33" pos:end="152:57"><name pos:start="152:33" pos:end="152:34">ca</name><operator pos:start="152:35" pos:end="152:35">.</operator><name pos:start="152:36" pos:end="152:57">sendManagedDroneUpdate</name></name><argument_list pos:start="152:58" pos:end="152:104">(<argument pos:start="152:59" pos:end="152:78"><expr pos:start="152:59" pos:end="152:78"><call pos:start="152:59" pos:end="152:78"><name pos:start="152:59" pos:end="152:76"><name pos:start="152:59" pos:end="152:63">drone</name><operator pos:start="152:64" pos:end="152:64">.</operator><name pos:start="152:65" pos:end="152:76">getDroneName</name></name><argument_list pos:start="152:77" pos:end="152:78">()</argument_list></call></expr></argument>, <argument pos:start="152:81" pos:end="152:84"><expr pos:start="152:81" pos:end="152:84"><literal type="null" pos:start="152:81" pos:end="152:84">null</literal></expr></argument>, <argument pos:start="152:87" pos:end="152:90"><expr pos:start="152:87" pos:end="152:90"><literal type="null" pos:start="152:87" pos:end="152:90">null</literal></expr></argument>, <argument pos:start="152:93" pos:end="152:96"><expr pos:start="152:93" pos:end="152:96"><literal type="null" pos:start="152:93" pos:end="152:96">null</literal></expr></argument>, <argument pos:start="152:99" pos:end="152:103"><expr pos:start="152:99" pos:end="152:103"><name pos:start="152:99" pos:end="152:103">drone</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			</block_content>}</block></lambda></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		</block_content>}</block></function>

		<function pos:start="157:17" pos:end="160:17"><annotation pos:start="157:17" pos:end="157:25">@<name pos:start="157:18" pos:end="157:25">Override</name></annotation>
		<type pos:start="158:17" pos:end="158:27"><specifier pos:start="158:17" pos:end="158:22">public</specifier> <name pos:start="158:24" pos:end="158:27">void</name></type> <name pos:start="158:29" pos:end="158:40">droneRemoved</name><parameter_list pos:start="158:41" pos:end="158:60">(<parameter pos:start="158:42" pos:end="158:59"><decl pos:start="158:42" pos:end="158:59"><type pos:start="158:42" pos:end="158:53"><name pos:start="158:42" pos:end="158:53">ManagedDrone</name></type> <name pos:start="158:55" pos:end="158:59">drone</name></decl></parameter>)</parameter_list> <block pos:start="158:62" pos:end="160:17">{<block_content>
			
		</block_content>}</block></function>
	}</block></class>
	<class pos:start="162:9" pos:end="167:9"><specifier pos:start="162:9" pos:end="162:15">private</specifier> class <name pos:start="162:23" pos:end="162:40">AvoidanceCheckTask</name> <super_list pos:start="162:42" pos:end="162:58"><extends pos:start="162:42" pos:end="162:58">extends <super pos:start="162:50" pos:end="162:58"><name pos:start="162:50" pos:end="162:58">TimerTask</name></super></extends></super_list> <block pos:start="162:60" pos:end="167:9">{
		<function pos:start="163:17" pos:end="166:17"><annotation pos:start="163:17" pos:end="163:25">@<name pos:start="163:18" pos:end="163:25">Override</name></annotation>
		<type pos:start="164:17" pos:end="164:27"><specifier pos:start="164:17" pos:end="164:22">public</specifier> <name pos:start="164:24" pos:end="164:27">void</name></type> <name pos:start="164:29" pos:end="164:31">run</name><parameter_list pos:start="164:32" pos:end="164:33">()</parameter_list> <block pos:start="164:35" pos:end="166:17">{<block_content pos:start="165:25" pos:end="165:43">
			<expr_stmt pos:start="165:25" pos:end="165:43"><expr pos:start="165:25" pos:end="165:42"><call pos:start="165:25" pos:end="165:42"><name pos:start="165:25" pos:end="165:40"><name pos:start="165:25" pos:end="165:26">ca</name><operator pos:start="165:27" pos:end="165:27">.</operator><name pos:start="165:28" pos:end="165:40">sendCheckTask</name></name><argument_list pos:start="165:41" pos:end="165:42">()</argument_list></call></expr>;</expr_stmt>
		</block_content>}</block></function>
	}</block></class>

	<class pos:start="169:9" pos:end="211:9"><specifier pos:start="169:9" pos:end="169:15">private</specifier> class <name pos:start="169:23" pos:end="169:37">StatusCheckTask</name> <super_list pos:start="169:39" pos:end="169:55"><extends pos:start="169:39" pos:end="169:55">extends <super pos:start="169:47" pos:end="169:55"><name pos:start="169:47" pos:end="169:55">TimerTask</name></super></extends></super_list> <block pos:start="169:57" pos:end="211:9">{

		<function pos:start="171:17" pos:end="209:17"><annotation pos:start="171:17" pos:end="171:25">@<name pos:start="171:18" pos:end="171:25">Override</name></annotation>
		<type pos:start="172:17" pos:end="172:27"><specifier pos:start="172:17" pos:end="172:22">public</specifier> <name pos:start="172:24" pos:end="172:27">void</name></type> <name pos:start="172:29" pos:end="172:31">run</name><parameter_list pos:start="172:32" pos:end="172:33">()</parameter_list> <block pos:start="172:35" pos:end="209:17">{<block_content pos:start="173:25" pos:end="208:25">
			<try pos:start="173:25" pos:end="208:25">try <block pos:start="173:29" pos:end="206:25">{<block_content pos:start="174:33" pos:end="204:33">
				<try pos:start="174:33" pos:end="179:33">try <block pos:start="174:37" pos:end="177:33">{<block_content pos:start="176:41" pos:end="176:65">
					<comment type="line" pos:start="175:41" pos:end="175:67">// checkForLandedFlights();</comment>
					<expr_stmt pos:start="176:41" pos:end="176:65"><expr pos:start="176:41" pos:end="176:64"><call pos:start="176:41" pos:end="176:64"><name pos:start="176:41" pos:end="176:62">checkForCompletedPlans</name><argument_list pos:start="176:63" pos:end="176:64">()</argument_list></call></expr>;</expr_stmt>
				</block_content>}</block> <catch pos:start="177:35" pos:end="179:33">catch <parameter_list pos:start="177:41" pos:end="177:58">(<parameter pos:start="177:42" pos:end="177:57"><decl pos:start="177:42" pos:end="177:57"><type pos:start="177:42" pos:end="177:57"><name pos:start="177:42" pos:end="177:55">DroneException</name></type> <name pos:start="177:57" pos:end="177:57">e</name></decl></parameter>)</parameter_list> <block pos:start="177:60" pos:end="179:33">{<block_content pos:start="178:41" pos:end="178:56">
					<expr_stmt pos:start="178:41" pos:end="178:56"><expr pos:start="178:41" pos:end="178:55"><call pos:start="178:41" pos:end="178:55"><name pos:start="178:41" pos:end="178:52"><name pos:start="178:41" pos:end="178:46">LOGGER</name><operator pos:start="178:47" pos:end="178:47">.</operator><name pos:start="178:48" pos:end="178:52">error</name></name><argument_list pos:start="178:53" pos:end="178:55">(<argument pos:start="178:54" pos:end="178:54"><expr pos:start="178:54" pos:end="178:54"><name pos:start="178:54" pos:end="178:54">e</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				</block_content>}</block></catch></try>

				<if_stmt pos:start="181:33" pos:end="192:33"><if pos:start="181:33" pos:end="184:33">if <condition pos:start="181:36" pos:end="181:86">(<expr pos:start="181:37" pos:end="181:85"><call pos:start="181:37" pos:end="181:52"><name pos:start="181:37" pos:end="181:50"><name pos:start="181:37" pos:end="181:46">activeUAVS</name><operator pos:start="181:47" pos:end="181:47">.</operator><name pos:start="181:48" pos:end="181:50">get</name></name><argument_list pos:start="181:51" pos:end="181:52">()</argument_list></call> <operator pos:start="181:54" pos:end="181:55">==</operator> <name pos:start="181:57" pos:end="181:85"><name pos:start="181:57" pos:end="181:74">DronologyConstants</name><operator pos:start="181:75" pos:end="181:75">.</operator><name pos:start="181:76" pos:end="181:85">MAX_IN_AIR</name></name></expr>)</condition> <block pos:start="181:88" pos:end="184:33">{<block_content pos:start="182:41" pos:end="182:64">
					<expr_stmt pos:start="182:41" pos:end="182:64"><expr pos:start="182:41" pos:end="182:63"><call pos:start="182:41" pos:end="182:63"><name pos:start="182:41" pos:end="182:61">checkPendingForFlying</name><argument_list pos:start="182:62" pos:end="182:63">()</argument_list></call></expr>;</expr_stmt>

				</block_content>}</block></if> <if type="elseif" pos:start="184:35" pos:end="192:33">else if <condition pos:start="184:43" pos:end="184:79">(<expr pos:start="184:44" pos:end="184:78"><call pos:start="184:44" pos:end="184:78"><name pos:start="184:44" pos:end="184:76"><name pos:start="184:44" pos:end="184:58">planPoolManager</name><operator pos:start="184:59" pos:end="184:59">.</operator><name pos:start="184:60" pos:end="184:76">hasPendingFlights</name></name><argument_list pos:start="184:77" pos:end="184:78">()</argument_list></call></expr>)</condition> <block pos:start="184:81" pos:end="192:33">{<block_content pos:start="185:41" pos:end="190:41">
					<try pos:start="185:41" pos:end="190:41">try <block pos:start="185:45" pos:end="188:41">{<block_content pos:start="186:49" pos:end="187:83">
						<expr_stmt pos:start="186:49" pos:end="186:63"><expr pos:start="186:49" pos:end="186:62"><call pos:start="186:49" pos:end="186:62"><name pos:start="186:49" pos:end="186:60">tryAssignUAV</name><argument_list pos:start="186:61" pos:end="186:62">()</argument_list></call></expr>;</expr_stmt>
						<expr_stmt pos:start="187:49" pos:end="187:83"><expr pos:start="187:49" pos:end="187:82"><call pos:start="187:49" pos:end="187:82"><name pos:start="187:49" pos:end="187:80">checkPendingForFlyingWithTakeoff</name><argument_list pos:start="187:81" pos:end="187:82">()</argument_list></call></expr>;</expr_stmt>
					</block_content>}</block> <catch pos:start="188:43" pos:end="190:41">catch <parameter_list pos:start="188:49" pos:end="188:66">(<parameter pos:start="188:50" pos:end="188:65"><decl pos:start="188:50" pos:end="188:65"><type pos:start="188:50" pos:end="188:65"><name pos:start="188:50" pos:end="188:63">DroneException</name></type> <name pos:start="188:65" pos:end="188:65">e</name></decl></parameter>)</parameter_list> <block pos:start="188:68" pos:end="190:41">{<block_content pos:start="189:49" pos:end="189:64">
						<expr_stmt pos:start="189:49" pos:end="189:64"><expr pos:start="189:49" pos:end="189:63"><call pos:start="189:49" pos:end="189:63"><name pos:start="189:49" pos:end="189:60"><name pos:start="189:49" pos:end="189:54">LOGGER</name><operator pos:start="189:55" pos:end="189:55">.</operator><name pos:start="189:56" pos:end="189:60">error</name></name><argument_list pos:start="189:61" pos:end="189:63">(<argument pos:start="189:62" pos:end="189:62"><expr pos:start="189:62" pos:end="189:62"><name pos:start="189:62" pos:end="189:62">e</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					</block_content>}</block></catch></try>

				</block_content>}</block></if></if_stmt>

				<if_stmt pos:start="194:33" pos:end="201:33"><if pos:start="194:33" pos:end="201:33">if <condition pos:start="194:36" pos:end="194:109">(<expr pos:start="194:37" pos:end="194:108"><call pos:start="194:37" pos:end="194:56"><name pos:start="194:37" pos:end="194:54">hasAwaitingTakeOff</name><argument_list pos:start="194:55" pos:end="194:56">()</argument_list></call> <operator pos:start="194:58" pos:end="194:59">&amp;&amp;</operator> <call pos:start="194:61" pos:end="194:76"><name pos:start="194:61" pos:end="194:74"><name pos:start="194:61" pos:end="194:70">activeUAVS</name><operator pos:start="194:71" pos:end="194:71">.</operator><name pos:start="194:72" pos:end="194:74">get</name></name><argument_list pos:start="194:75" pos:end="194:76">()</argument_list></call> <operator pos:start="194:78" pos:end="194:78">&lt;</operator> <name pos:start="194:80" pos:end="194:108"><name pos:start="194:80" pos:end="194:97">DronologyConstants</name><operator pos:start="194:98" pos:end="194:98">.</operator><name pos:start="194:99" pos:end="194:108">MAX_IN_AIR</name></name></expr>)</condition> <block pos:start="194:111" pos:end="201:33">{<block_content pos:start="195:41" pos:end="200:41">
					<expr_stmt pos:start="195:41" pos:end="195:124"><expr pos:start="195:41" pos:end="195:123"><call pos:start="195:41" pos:end="195:123"><name pos:start="195:41" pos:end="195:51"><name pos:start="195:41" pos:end="195:46">LOGGER</name><operator pos:start="195:47" pos:end="195:47">.</operator><name pos:start="195:48" pos:end="195:51">info</name></name><argument_list pos:start="195:52" pos:end="195:123">(<argument pos:start="195:53" pos:end="195:122"><expr pos:start="195:53" pos:end="195:122"><literal type="string" pos:start="195:53" pos:end="195:71">"Awaiting Takeoff:"</literal> <operator pos:start="195:73" pos:end="195:73">+</operator> <call pos:start="195:75" pos:end="195:101"><name pos:start="195:75" pos:end="195:99">getAwaitingTakeOffFlights</name><argument_list pos:start="195:100" pos:end="195:101">()</argument_list></call><operator pos:start="195:102" pos:end="195:102">.</operator><call pos:start="195:103" pos:end="195:108"><name pos:start="195:103" pos:end="195:105">get</name><argument_list pos:start="195:106" pos:end="195:108">(<argument pos:start="195:107" pos:end="195:107"><expr pos:start="195:107" pos:end="195:107"><literal type="number" pos:start="195:107" pos:end="195:107">0</literal></expr></argument>)</argument_list></call><operator pos:start="195:109" pos:end="195:109">.</operator><call pos:start="195:110" pos:end="195:122"><name pos:start="195:110" pos:end="195:120">getFlightID</name><argument_list pos:start="195:121" pos:end="195:122">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<try pos:start="196:41" pos:end="200:41">try <block pos:start="196:45" pos:end="198:41">{<block_content pos:start="197:49" pos:end="197:75">
						<expr_stmt pos:start="197:49" pos:end="197:75"><expr pos:start="197:49" pos:end="197:74"><call pos:start="197:49" pos:end="197:74"><name pos:start="197:49" pos:end="197:72">checkForTakeOffReadiness</name><argument_list pos:start="197:73" pos:end="197:74">()</argument_list></call></expr>;</expr_stmt>
					</block_content>}</block> <catch pos:start="198:43" pos:end="200:41">catch <parameter_list pos:start="198:49" pos:end="198:72">(<parameter pos:start="198:50" pos:end="198:71"><decl pos:start="198:50" pos:end="198:71"><type pos:start="198:50" pos:end="198:71"><name pos:start="198:50" pos:end="198:68">FlightZoneException</name></type> <name pos:start="198:70" pos:end="198:71">e1</name></decl></parameter>)</parameter_list> <block pos:start="198:74" pos:end="200:41">{<block_content pos:start="199:49" pos:end="199:104">
						<expr_stmt pos:start="199:49" pos:end="199:104"><expr pos:start="199:49" pos:end="199:103"><call pos:start="199:49" pos:end="199:103"><name pos:start="199:49" pos:end="199:60"><name pos:start="199:49" pos:end="199:54">LOGGER</name><operator pos:start="199:55" pos:end="199:55">.</operator><name pos:start="199:56" pos:end="199:60">error</name></name><argument_list pos:start="199:61" pos:end="199:103">(<argument pos:start="199:62" pos:end="199:98"><expr pos:start="199:62" pos:end="199:98"><literal type="string" pos:start="199:62" pos:end="199:98">"Failed Check for takeoff readiness."</literal></expr></argument>, <argument pos:start="199:101" pos:end="199:102"><expr pos:start="199:101" pos:end="199:102"><name pos:start="199:101" pos:end="199:102">e1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					</block_content>}</block></catch></try>
				</block_content>}</block></if></if_stmt>
				<if_stmt pos:start="202:33" pos:end="204:33"><if pos:start="202:33" pos:end="204:33">if <condition pos:start="202:36" pos:end="202:57">(<expr pos:start="202:37" pos:end="202:56"><call pos:start="202:37" pos:end="202:56"><name pos:start="202:37" pos:end="202:54">hasAwaitingLanding</name><argument_list pos:start="202:55" pos:end="202:56">()</argument_list></call></expr>)</condition> <block pos:start="202:59" pos:end="204:33">{<block_content pos:start="203:41" pos:end="203:67">
					<expr_stmt pos:start="203:41" pos:end="203:67"><expr pos:start="203:41" pos:end="203:66"><call pos:start="203:41" pos:end="203:66"><name pos:start="203:41" pos:end="203:64">checkForLandingReadiness</name><argument_list pos:start="203:65" pos:end="203:66">()</argument_list></call></expr>;</expr_stmt>
				</block_content>}</block></if></if_stmt>

			</block_content>}</block> <catch pos:start="206:27" pos:end="208:25">catch <parameter_list pos:start="206:33" pos:end="206:45">(<parameter pos:start="206:34" pos:end="206:44"><decl pos:start="206:34" pos:end="206:44"><type pos:start="206:34" pos:end="206:44"><name pos:start="206:34" pos:end="206:42">Throwable</name></type> <name pos:start="206:44" pos:end="206:44">t</name></decl></parameter>)</parameter_list> <block pos:start="206:47" pos:end="208:25">{<block_content pos:start="207:33" pos:end="207:48">
				<expr_stmt pos:start="207:33" pos:end="207:48"><expr pos:start="207:33" pos:end="207:47"><call pos:start="207:33" pos:end="207:47"><name pos:start="207:33" pos:end="207:44"><name pos:start="207:33" pos:end="207:38">LOGGER</name><operator pos:start="207:39" pos:end="207:39">.</operator><name pos:start="207:40" pos:end="207:44">error</name></name><argument_list pos:start="207:45" pos:end="207:47">(<argument pos:start="207:46" pos:end="207:46"><expr pos:start="207:46" pos:end="207:46"><name pos:start="207:46" pos:end="207:46">t</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			</block_content>}</block></catch></try>
		</block_content>}</block></function>

	}</block></class>

	<comment type="block" format="javadoc" pos:start="213:9" pos:end="218:11">/**
	 * Checks if the next pending flight is able to takeoff. Currently takeoff occurs in order of pending list.
	 * 
	 * @param droneFleet
	 * @throws FlightZoneException
	 */</comment>
	<function pos:start="219:9" pos:end="233:9"><type pos:start="219:9" pos:end="219:19"><specifier pos:start="219:9" pos:end="219:14">public</specifier> <name pos:start="219:16" pos:end="219:19">void</name></type> <name pos:start="219:21" pos:end="219:44">checkForTakeOffReadiness</name><parameter_list pos:start="219:45" pos:end="219:46">()</parameter_list> <throws pos:start="219:48" pos:end="219:73">throws <argument pos:start="219:55" pos:end="219:73"><expr pos:start="219:55" pos:end="219:73"><name pos:start="219:55" pos:end="219:73">FlightZoneException</name></expr></argument></throws> <block pos:start="219:75" pos:end="233:9">{<block_content pos:start="222:17" pos:end="232:17">
		<comment type="line" pos:start="220:17" pos:end="220:34">// Technical debt.</comment>
		<comment type="line" pos:start="221:17" pos:end="221:69">// Checks first waiting drone each time it is called.</comment>
		<if_stmt pos:start="222:17" pos:end="232:17"><if pos:start="222:17" pos:end="232:17">if <condition pos:start="222:20" pos:end="222:54">(<expr pos:start="222:21" pos:end="222:53"><operator pos:start="222:21" pos:end="222:21">!</operator><call pos:start="222:22" pos:end="222:53"><name pos:start="222:22" pos:end="222:51"><name pos:start="222:22" pos:end="222:43">awaitingTakeOffFlights</name><operator pos:start="222:44" pos:end="222:44">.</operator><name pos:start="222:45" pos:end="222:51">isEmpty</name></name><argument_list pos:start="222:52" pos:end="222:53">()</argument_list></call></expr>)</condition> <block pos:start="222:56" pos:end="232:17">{<block_content pos:start="223:25" pos:end="231:25">
			<decl_stmt pos:start="223:25" pos:end="223:87"><decl pos:start="223:25" pos:end="223:86"><type pos:start="223:25" pos:end="223:35"><name pos:start="223:25" pos:end="223:35">IFlightPlan</name></type> <name pos:start="223:37" pos:end="223:54">awaitingFlightPlan</name> <init pos:start="223:56" pos:end="223:86">= <expr pos:start="223:58" pos:end="223:86"><call pos:start="223:58" pos:end="223:86"><name pos:start="223:58" pos:end="223:83"><name pos:start="223:58" pos:end="223:79">awaitingTakeOffFlights</name><operator pos:start="223:80" pos:end="223:80">.</operator><name pos:start="223:81" pos:end="223:83">get</name></name><argument_list pos:start="223:84" pos:end="223:86">(<argument pos:start="223:85" pos:end="223:85"><expr pos:start="223:85" pos:end="223:85"><literal type="number" pos:start="223:85" pos:end="223:85">0</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<decl_stmt pos:start="224:25" pos:end="224:83"><decl pos:start="224:25" pos:end="224:82"><type pos:start="224:25" pos:end="224:36"><name pos:start="224:25" pos:end="224:36">ManagedDrone</name></type> <name pos:start="224:38" pos:end="224:42">drone</name> <init pos:start="224:44" pos:end="224:82">= <expr pos:start="224:46" pos:end="224:82"><call pos:start="224:46" pos:end="224:82"><name pos:start="224:46" pos:end="224:80"><name pos:start="224:46" pos:end="224:63">awaitingFlightPlan</name><operator pos:start="224:64" pos:end="224:64">.</operator><name pos:start="224:65" pos:end="224:80">getAssignedDrone</name></name><argument_list pos:start="224:81" pos:end="224:82">()</argument_list></call></expr></init></decl>;</decl_stmt>
			<if_stmt pos:start="225:25" pos:end="231:25"><if pos:start="225:25" pos:end="231:25">if <condition pos:start="225:28" pos:end="225:57">(<expr pos:start="225:29" pos:end="225:56"><call pos:start="225:29" pos:end="225:56"><name pos:start="225:29" pos:end="225:54"><name pos:start="225:29" pos:end="225:33">drone</name><operator pos:start="225:34" pos:end="225:34">.</operator><name pos:start="225:35" pos:end="225:54">permissionForTakeoff</name></name><argument_list pos:start="225:55" pos:end="225:56">()</argument_list></call></expr>)</condition> <block pos:start="225:59" pos:end="231:25">{<block_content pos:start="227:33" pos:end="230:82">
				<comment type="line" pos:start="226:33" pos:end="226:100">// drone.setTargetAltitude(awaitingFlightPlan.getTakeoffAltitude());</comment>
				<expr_stmt pos:start="227:33" pos:end="227:94"><expr pos:start="227:33" pos:end="227:93"><call pos:start="227:33" pos:end="227:93"><name pos:start="227:33" pos:end="227:55"><name pos:start="227:33" pos:end="227:37">drone</name><operator pos:start="227:38" pos:end="227:38">.</operator><name pos:start="227:39" pos:end="227:55">setTargetAltitude</name></name><argument_list pos:start="227:56" pos:end="227:93">(<argument pos:start="227:57" pos:end="227:92"><expr pos:start="227:57" pos:end="227:92"><name pos:start="227:57" pos:end="227:92"><name pos:start="227:57" pos:end="227:74">DronologyConstants</name><operator pos:start="227:75" pos:end="227:75">.</operator><name pos:start="227:76" pos:end="227:92">TAKE_OFF_ALTITUDE</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<expr_stmt pos:start="228:33" pos:end="228:48"><expr pos:start="228:33" pos:end="228:47"><call pos:start="228:33" pos:end="228:47"><name pos:start="228:33" pos:end="228:45"><name pos:start="228:33" pos:end="228:37">drone</name><operator pos:start="228:38" pos:end="228:38">.</operator><name pos:start="228:39" pos:end="228:45">takeOff</name></name><argument_list pos:start="228:46" pos:end="228:47">()</argument_list></call></expr>;</expr_stmt>
				<expr_stmt pos:start="229:33" pos:end="229:61"><expr pos:start="229:33" pos:end="229:60"><call pos:start="229:33" pos:end="229:60"><name pos:start="229:33" pos:end="229:58"><name pos:start="229:33" pos:end="229:42">activeUAVS</name><operator pos:start="229:43" pos:end="229:43">.</operator><name pos:start="229:44" pos:end="229:58">incrementAndGet</name></name><argument_list pos:start="229:59" pos:end="229:60">()</argument_list></call></expr>;</expr_stmt>
				<expr_stmt pos:start="230:33" pos:end="230:82"><expr pos:start="230:33" pos:end="230:81"><call pos:start="230:33" pos:end="230:81"><name pos:start="230:33" pos:end="230:61"><name pos:start="230:33" pos:end="230:54">awaitingTakeOffFlights</name><operator pos:start="230:55" pos:end="230:55">.</operator><name pos:start="230:56" pos:end="230:61">remove</name></name><argument_list pos:start="230:62" pos:end="230:81">(<argument pos:start="230:63" pos:end="230:80"><expr pos:start="230:63" pos:end="230:80"><name pos:start="230:63" pos:end="230:80">awaitingFlightPlan</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			</block_content>}</block></if></if_stmt>
		</block_content>}</block></if></if_stmt>
	</block_content>}</block></function>
 
	<function pos:start="235:9" pos:end="244:9"><type pos:start="235:9" pos:end="235:19"><specifier pos:start="235:9" pos:end="235:14">public</specifier> <name pos:start="235:16" pos:end="235:19">void</name></type> <name pos:start="235:21" pos:end="235:41">checkPendingForFlying</name><parameter_list pos:start="235:42" pos:end="235:43">()</parameter_list> <block pos:start="235:45" pos:end="244:9">{<block_content pos:start="236:17" pos:end="242:17">
		<for pos:start="236:17" pos:end="242:17">for <control pos:start="236:21" pos:end="236:81">(<init pos:start="236:22" pos:end="236:80"><decl pos:start="236:22" pos:end="236:80"><type pos:start="236:22" pos:end="236:32"><name pos:start="236:22" pos:end="236:32">IFlightPlan</name></type> <name pos:start="236:34" pos:end="236:44">pendingPlan</name> <range pos:start="236:46" pos:end="236:80">: <expr pos:start="236:48" pos:end="236:80"><call pos:start="236:48" pos:end="236:80"><name pos:start="236:48" pos:end="236:78"><name pos:start="236:48" pos:end="236:62">planPoolManager</name><operator pos:start="236:63" pos:end="236:63">.</operator><name pos:start="236:64" pos:end="236:78">getPendingPlans</name></name><argument_list pos:start="236:79" pos:end="236:80">()</argument_list></call></expr></range></decl></init>)</control> <block pos:start="236:83" pos:end="242:17">{<block_content pos:start="237:25" pos:end="241:25">
			<try pos:start="237:25" pos:end="241:25">try <block pos:start="237:29" pos:end="239:25">{<block_content pos:start="238:33" pos:end="238:64">
				<expr_stmt pos:start="238:33" pos:end="238:64"><expr pos:start="238:33" pos:end="238:63"><call pos:start="238:33" pos:end="238:63"><name pos:start="238:33" pos:end="238:50">checkForScheduling</name><argument_list pos:start="238:51" pos:end="238:63">(<argument pos:start="238:52" pos:end="238:62"><expr pos:start="238:52" pos:end="238:62"><name pos:start="238:52" pos:end="238:62">pendingPlan</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			</block_content>}</block> <catch pos:start="239:27" pos:end="241:25">catch <parameter_list pos:start="239:33" pos:end="239:72">(<parameter pos:start="239:34" pos:end="239:71"><decl pos:start="239:34" pos:end="239:71"><type pos:start="239:34" pos:end="239:47"><name pos:start="239:34" pos:end="239:47">DroneException</name></type> | <type pos:start="239:51" pos:end="239:71"><name pos:start="239:51" pos:end="239:69">FlightZoneException</name></type> <name pos:start="239:71" pos:end="239:71">e</name></decl></parameter>)</parameter_list> <block pos:start="239:74" pos:end="241:25">{<block_content pos:start="240:33" pos:end="240:48">
				<expr_stmt pos:start="240:33" pos:end="240:48"><expr pos:start="240:33" pos:end="240:47"><call pos:start="240:33" pos:end="240:47"><name pos:start="240:33" pos:end="240:44"><name pos:start="240:33" pos:end="240:38">LOGGER</name><operator pos:start="240:39" pos:end="240:39">.</operator><name pos:start="240:40" pos:end="240:44">error</name></name><argument_list pos:start="240:45" pos:end="240:47">(<argument pos:start="240:46" pos:end="240:46"><expr pos:start="240:46" pos:end="240:46"><name pos:start="240:46" pos:end="240:46">e</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			</block_content>}</block></catch></try>
		</block_content>}</block></for>

	</block_content>}</block></function>

	<function pos:start="246:9" pos:end="255:9"><type pos:start="246:9" pos:end="246:19"><specifier pos:start="246:9" pos:end="246:14">public</specifier> <name pos:start="246:16" pos:end="246:19">void</name></type> <name pos:start="246:21" pos:end="246:52">checkPendingForFlyingWithTakeoff</name><parameter_list pos:start="246:53" pos:end="246:54">()</parameter_list> <block pos:start="246:56" pos:end="255:9">{<block_content pos:start="247:17" pos:end="253:17">
		<for pos:start="247:17" pos:end="253:17">for <control pos:start="247:21" pos:end="247:81">(<init pos:start="247:22" pos:end="247:80"><decl pos:start="247:22" pos:end="247:80"><type pos:start="247:22" pos:end="247:32"><name pos:start="247:22" pos:end="247:32">IFlightPlan</name></type> <name pos:start="247:34" pos:end="247:44">pendingPlan</name> <range pos:start="247:46" pos:end="247:80">: <expr pos:start="247:48" pos:end="247:80"><call pos:start="247:48" pos:end="247:80"><name pos:start="247:48" pos:end="247:78"><name pos:start="247:48" pos:end="247:62">planPoolManager</name><operator pos:start="247:63" pos:end="247:63">.</operator><name pos:start="247:64" pos:end="247:78">getPendingPlans</name></name><argument_list pos:start="247:79" pos:end="247:80">()</argument_list></call></expr></range></decl></init>)</control> <block pos:start="247:83" pos:end="253:17">{<block_content pos:start="248:25" pos:end="252:25">
			<try pos:start="248:25" pos:end="252:25">try <block pos:start="248:29" pos:end="250:25">{<block_content pos:start="249:33" pos:end="249:75">
				<expr_stmt pos:start="249:33" pos:end="249:75"><expr pos:start="249:33" pos:end="249:74"><call pos:start="249:33" pos:end="249:74"><name pos:start="249:33" pos:end="249:61">checkForSchedulingWithTakeoff</name><argument_list pos:start="249:62" pos:end="249:74">(<argument pos:start="249:63" pos:end="249:73"><expr pos:start="249:63" pos:end="249:73"><name pos:start="249:63" pos:end="249:73">pendingPlan</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			</block_content>}</block> <catch pos:start="250:27" pos:end="252:25">catch <parameter_list pos:start="250:33" pos:end="250:72">(<parameter pos:start="250:34" pos:end="250:71"><decl pos:start="250:34" pos:end="250:71"><type pos:start="250:34" pos:end="250:47"><name pos:start="250:34" pos:end="250:47">DroneException</name></type> | <type pos:start="250:51" pos:end="250:71"><name pos:start="250:51" pos:end="250:69">FlightZoneException</name></type> <name pos:start="250:71" pos:end="250:71">e</name></decl></parameter>)</parameter_list> <block pos:start="250:74" pos:end="252:25">{<block_content pos:start="251:33" pos:end="251:48">
				<expr_stmt pos:start="251:33" pos:end="251:48"><expr pos:start="251:33" pos:end="251:47"><call pos:start="251:33" pos:end="251:47"><name pos:start="251:33" pos:end="251:44"><name pos:start="251:33" pos:end="251:38">LOGGER</name><operator pos:start="251:39" pos:end="251:39">.</operator><name pos:start="251:40" pos:end="251:44">error</name></name><argument_list pos:start="251:45" pos:end="251:47">(<argument pos:start="251:46" pos:end="251:46"><expr pos:start="251:46" pos:end="251:46"><name pos:start="251:46" pos:end="251:46">e</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			</block_content>}</block></catch></try>
		</block_content>}</block></for>

	</block_content>}</block></function>

	<function pos:start="257:9" pos:end="286:9"><type pos:start="257:9" pos:end="257:20"><specifier pos:start="257:9" pos:end="257:15">private</specifier> <name pos:start="257:17" pos:end="257:20">void</name></type> <name pos:start="257:22" pos:end="257:39">checkForScheduling</name><parameter_list pos:start="257:40" pos:end="257:64">(<parameter pos:start="257:41" pos:end="257:63"><decl pos:start="257:41" pos:end="257:63"><type pos:start="257:41" pos:end="257:51"><name pos:start="257:41" pos:end="257:51">IFlightPlan</name></type> <name pos:start="257:53" pos:end="257:63">pendingPlan</name></decl></parameter>)</parameter_list> <throws pos:start="257:66" pos:end="257:107">throws <argument pos:start="257:73" pos:end="257:86"><expr pos:start="257:73" pos:end="257:86"><name pos:start="257:73" pos:end="257:86">DroneException</name></expr></argument>, <argument pos:start="257:89" pos:end="257:107"><expr pos:start="257:89" pos:end="257:107"><name pos:start="257:89" pos:end="257:107">FlightZoneException</name></expr></argument></throws> <block pos:start="257:109" pos:end="286:9">{<block_content pos:start="258:17" pos:end="285:17">
		<decl_stmt pos:start="258:17" pos:end="258:35"><decl pos:start="258:17" pos:end="258:34"><type pos:start="258:17" pos:end="258:28"><name pos:start="258:17" pos:end="258:28">ManagedDrone</name></type> <name pos:start="258:30" pos:end="258:34">drone</name></decl>;</decl_stmt>
		<if_stmt pos:start="259:17" pos:end="266:17"><if pos:start="259:17" pos:end="264:17">if <condition pos:start="259:20" pos:end="259:63">(<expr pos:start="259:21" pos:end="259:62"><call pos:start="259:21" pos:end="259:54"><name pos:start="259:21" pos:end="259:52"><name pos:start="259:21" pos:end="259:31">pendingPlan</name><operator pos:start="259:32" pos:end="259:32">.</operator><name pos:start="259:33" pos:end="259:52">getDesignatedDroneId</name></name><argument_list pos:start="259:53" pos:end="259:54">()</argument_list></call> <operator pos:start="259:56" pos:end="259:57">==</operator> <literal type="null" pos:start="259:59" pos:end="259:62">null</literal></expr>)</condition> <block pos:start="259:65" pos:end="264:17">{<block_content pos:start="260:25" pos:end="263:25">
			<expr_stmt pos:start="260:25" pos:end="260:63"><expr pos:start="260:25" pos:end="260:62"><name pos:start="260:25" pos:end="260:29">drone</name> <operator pos:start="260:31" pos:end="260:31">=</operator> <call pos:start="260:33" pos:end="260:62"><name pos:start="260:33" pos:end="260:60"><name pos:start="260:33" pos:end="260:42">droneFleet</name><operator pos:start="260:43" pos:end="260:43">.</operator><name pos:start="260:44" pos:end="260:60">getAvailableDrone</name></name><argument_list pos:start="260:61" pos:end="260:62">()</argument_list></call></expr>;</expr_stmt>
			<if_stmt pos:start="261:25" pos:end="263:25"><if pos:start="261:25" pos:end="263:25">if <condition pos:start="261:28" pos:end="261:42">(<expr pos:start="261:29" pos:end="261:41"><name pos:start="261:29" pos:end="261:33">drone</name> <operator pos:start="261:35" pos:end="261:36">!=</operator> <literal type="null" pos:start="261:38" pos:end="261:41">null</literal></expr>)</condition> <block pos:start="261:44" pos:end="263:25">{<block_content pos:start="262:33" pos:end="262:94">
				<expr_stmt pos:start="262:33" pos:end="262:94"><expr pos:start="262:33" pos:end="262:93"><call pos:start="262:33" pos:end="262:93"><name pos:start="262:33" pos:end="262:58"><name pos:start="262:33" pos:end="262:47">planPoolManager</name><operator pos:start="262:48" pos:end="262:48">.</operator><name pos:start="262:49" pos:end="262:58">assignPlan</name></name><argument_list pos:start="262:59" pos:end="262:93">(<argument pos:start="262:60" pos:end="262:70"><expr pos:start="262:60" pos:end="262:70"><name pos:start="262:60" pos:end="262:70">pendingPlan</name></expr></argument>, <argument pos:start="262:73" pos:end="262:92"><expr pos:start="262:73" pos:end="262:92"><call pos:start="262:73" pos:end="262:92"><name pos:start="262:73" pos:end="262:90"><name pos:start="262:73" pos:end="262:77">drone</name><operator pos:start="262:78" pos:end="262:78">.</operator><name pos:start="262:79" pos:end="262:90">getDroneName</name></name><argument_list pos:start="262:91" pos:end="262:92">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			</block_content>}</block></if></if_stmt>
		</block_content>}</block></if> <else pos:start="264:19" pos:end="266:17">else <block pos:start="264:24" pos:end="266:17">{<block_content pos:start="265:25" pos:end="265:97">
			<expr_stmt pos:start="265:25" pos:end="265:97"><expr pos:start="265:25" pos:end="265:96"><name pos:start="265:25" pos:end="265:29">drone</name> <operator pos:start="265:31" pos:end="265:31">=</operator> <call pos:start="265:33" pos:end="265:96"><name pos:start="265:33" pos:end="265:60"><name pos:start="265:33" pos:end="265:42">droneFleet</name><operator pos:start="265:43" pos:end="265:43">.</operator><name pos:start="265:44" pos:end="265:60">getAvailableDrone</name></name><argument_list pos:start="265:61" pos:end="265:96">(<argument pos:start="265:62" pos:end="265:95"><expr pos:start="265:62" pos:end="265:95"><call pos:start="265:62" pos:end="265:95"><name pos:start="265:62" pos:end="265:93"><name pos:start="265:62" pos:end="265:72">pendingPlan</name><operator pos:start="265:73" pos:end="265:73">.</operator><name pos:start="265:74" pos:end="265:93">getDesignatedDroneId</name></name><argument_list pos:start="265:94" pos:end="265:95">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		</block_content>}</block></else></if_stmt>

		<if_stmt pos:start="268:17" pos:end="274:17"><if pos:start="268:17" pos:end="274:17">if <condition pos:start="268:20" pos:end="269:98">(<expr pos:start="268:21" pos:end="269:97"><name pos:start="268:21" pos:end="268:25">drone</name> <operator pos:start="268:27" pos:end="268:28">==</operator> <literal type="null" pos:start="268:30" pos:end="268:33">null</literal> <operator pos:start="268:35" pos:end="268:36">||</operator> <operator pos:start="268:38" pos:end="268:38">!</operator><call pos:start="268:39" pos:end="268:64"><name pos:start="268:39" pos:end="268:62"><name pos:start="268:39" pos:end="268:43">drone</name><operator pos:start="268:44" pos:end="268:44">.</operator><name pos:start="268:45" pos:end="268:62">getFlightModeState</name></name><argument_list pos:start="268:63" pos:end="268:64">()</argument_list></call><operator pos:start="268:65" pos:end="268:65">.</operator><call pos:start="268:66" pos:end="268:74"><name pos:start="268:66" pos:end="268:72">isInAir</name><argument_list pos:start="268:73" pos:end="268:74">()</argument_list></call>
				<operator pos:start="269:33" pos:end="269:34">||</operator> <operator pos:start="269:36" pos:end="269:36">(</operator><call pos:start="269:37" pos:end="269:88"><name pos:start="269:37" pos:end="269:66"><name pos:start="269:37" pos:end="269:51">planPoolManager</name><operator pos:start="269:52" pos:end="269:52">.</operator><name pos:start="269:53" pos:end="269:66">getCurrentPlan</name></name><argument_list pos:start="269:67" pos:end="269:88">(<argument pos:start="269:68" pos:end="269:87"><expr pos:start="269:68" pos:end="269:87"><call pos:start="269:68" pos:end="269:87"><name pos:start="269:68" pos:end="269:85"><name pos:start="269:68" pos:end="269:72">drone</name><operator pos:start="269:73" pos:end="269:73">.</operator><name pos:start="269:74" pos:end="269:85">getDroneName</name></name><argument_list pos:start="269:86" pos:end="269:87">()</argument_list></call></expr></argument>)</argument_list></call> <operator pos:start="269:90" pos:end="269:91">!=</operator> <literal type="null" pos:start="269:93" pos:end="269:96">null</literal><operator pos:start="269:97" pos:end="269:97">)</operator></expr>)</condition> <block pos:start="269:100" pos:end="274:17">{<block_content pos:start="270:25" pos:end="273:31">
			<if_stmt pos:start="270:25" pos:end="272:25"><if pos:start="270:25" pos:end="272:25">if <condition pos:start="270:28" pos:end="270:42">(<expr pos:start="270:29" pos:end="270:41"><name pos:start="270:29" pos:end="270:33">drone</name> <operator pos:start="270:35" pos:end="270:36">!=</operator> <literal type="null" pos:start="270:38" pos:end="270:41">null</literal></expr>)</condition> <block pos:start="270:44" pos:end="272:25">{<block_content pos:start="271:33" pos:end="271:77">
				<expr_stmt pos:start="271:33" pos:end="271:77"><expr pos:start="271:33" pos:end="271:76"><call pos:start="271:33" pos:end="271:76"><name pos:start="271:33" pos:end="271:69"><name pos:start="271:33" pos:end="271:42">droneFleet</name><operator pos:start="271:43" pos:end="271:43">.</operator><name pos:start="271:44" pos:end="271:69">returnDroneToAvailablePool</name></name><argument_list pos:start="271:70" pos:end="271:76">(<argument pos:start="271:71" pos:end="271:75"><expr pos:start="271:71" pos:end="271:75"><name pos:start="271:71" pos:end="271:75">drone</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			</block_content>}</block></if></if_stmt>
			<return pos:start="273:25" pos:end="273:31">return;</return>
		</block_content>}</block></if></if_stmt>

		<expr_stmt pos:start="276:17" pos:end="276:80"><expr pos:start="276:17" pos:end="276:79"><call pos:start="276:17" pos:end="276:79"><name pos:start="276:17" pos:end="276:44"><name pos:start="276:17" pos:end="276:31">planPoolManager</name><operator pos:start="276:32" pos:end="276:32">.</operator><name pos:start="276:33" pos:end="276:44">activatePlan</name></name><argument_list pos:start="276:45" pos:end="276:79">(<argument pos:start="276:46" pos:end="276:56"><expr pos:start="276:46" pos:end="276:56"><name pos:start="276:46" pos:end="276:56">pendingPlan</name></expr></argument>, <argument pos:start="276:59" pos:end="276:78"><expr pos:start="276:59" pos:end="276:78"><call pos:start="276:59" pos:end="276:78"><name pos:start="276:59" pos:end="276:76"><name pos:start="276:59" pos:end="276:63">drone</name><operator pos:start="276:64" pos:end="276:64">.</operator><name pos:start="276:65" pos:end="276:76">getDroneName</name></name><argument_list pos:start="276:77" pos:end="276:78">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		<decl_stmt pos:start="278:17" pos:end="278:75"><decl pos:start="278:17" pos:end="278:74"><type pos:start="278:17" pos:end="278:31"><name pos:start="278:17" pos:end="278:31">IFlightDirector</name></type> <name pos:start="278:33" pos:end="278:48">flightDirectives</name> <init pos:start="278:50" pos:end="278:74">= <expr pos:start="278:52" pos:end="278:74"><operator pos:start="278:52" pos:end="278:54">new</operator> <call pos:start="278:56" pos:end="278:74"><name pos:start="278:56" pos:end="278:67">SoloDirector</name><argument_list pos:start="278:68" pos:end="278:74">(<argument pos:start="278:69" pos:end="278:73"><expr pos:start="278:69" pos:end="278:73"><name pos:start="278:69" pos:end="278:73">drone</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt pos:start="279:17" pos:end="279:74"><expr pos:start="279:17" pos:end="279:73"><call pos:start="279:17" pos:end="279:73"><name pos:start="279:17" pos:end="279:45"><name pos:start="279:17" pos:end="279:32">flightDirectives</name><operator pos:start="279:33" pos:end="279:33">.</operator><name pos:start="279:34" pos:end="279:45">setWayPoints</name></name><argument_list pos:start="279:46" pos:end="279:73">(<argument pos:start="279:47" pos:end="279:72"><expr pos:start="279:47" pos:end="279:72"><call pos:start="279:47" pos:end="279:72"><name pos:start="279:47" pos:end="279:70"><name pos:start="279:47" pos:end="279:57">pendingPlan</name><operator pos:start="279:58" pos:end="279:58">.</operator><name pos:start="279:59" pos:end="279:70">getWayPoints</name></name><argument_list pos:start="279:71" pos:end="279:72">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt pos:start="280:17" pos:end="280:68"><expr pos:start="280:17" pos:end="280:67"><call pos:start="280:17" pos:end="280:36"><name pos:start="280:17" pos:end="280:34"><name pos:start="280:17" pos:end="280:21">drone</name><operator pos:start="280:22" pos:end="280:22">.</operator><name pos:start="280:23" pos:end="280:34">getMessenger</name></name><argument_list pos:start="280:35" pos:end="280:36">()</argument_list></call><operator pos:start="280:37" pos:end="280:37">.</operator><call pos:start="280:38" pos:end="280:67"><name pos:start="280:38" pos:end="280:49">assignFlight</name><argument_list pos:start="280:50" pos:end="280:67">(<argument pos:start="280:51" pos:end="280:66"><expr pos:start="280:51" pos:end="280:66"><name pos:start="280:51" pos:end="280:66">flightDirectives</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<comment type="line" pos:start="281:17" pos:end="281:58">// // this needs to be moved to launch....</comment>
		<expr_stmt pos:start="282:17" pos:end="282:53"><expr pos:start="282:17" pos:end="282:52"><call pos:start="282:17" pos:end="282:52"><name pos:start="282:17" pos:end="282:45"><name pos:start="282:17" pos:end="282:27">pendingPlan</name><operator pos:start="282:28" pos:end="282:28">.</operator><name pos:start="282:29" pos:end="282:45">setStatusToFlying</name></name><argument_list pos:start="282:46" pos:end="282:52">(<argument pos:start="282:47" pos:end="282:51"><expr pos:start="282:47" pos:end="282:51"><name pos:start="282:47" pos:end="282:51">drone</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<if_stmt pos:start="283:17" pos:end="285:17"><if pos:start="283:17" pos:end="285:17">if <condition pos:start="283:20" pos:end="283:57">(<expr pos:start="283:21" pos:end="283:56"><call pos:start="283:21" pos:end="283:46"><name pos:start="283:21" pos:end="283:44"><name pos:start="283:21" pos:end="283:25">drone</name><operator pos:start="283:26" pos:end="283:26">.</operator><name pos:start="283:27" pos:end="283:44">getFlightModeState</name></name><argument_list pos:start="283:45" pos:end="283:46">()</argument_list></call><operator pos:start="283:47" pos:end="283:47">.</operator><call pos:start="283:48" pos:end="283:56"><name pos:start="283:48" pos:end="283:54">isInAir</name><argument_list pos:start="283:55" pos:end="283:56">()</argument_list></call></expr>)</condition> <block pos:start="283:59" pos:end="285:17">{<block_content pos:start="284:25" pos:end="284:69">
			<expr_stmt pos:start="284:25" pos:end="284:69"><expr pos:start="284:25" pos:end="284:68"><call pos:start="284:25" pos:end="284:50"><name pos:start="284:25" pos:end="284:48"><name pos:start="284:25" pos:end="284:29">drone</name><operator pos:start="284:30" pos:end="284:30">.</operator><name pos:start="284:31" pos:end="284:48">getFlightModeState</name></name><argument_list pos:start="284:49" pos:end="284:50">()</argument_list></call><operator pos:start="284:51" pos:end="284:51">.</operator><call pos:start="284:52" pos:end="284:68"><name pos:start="284:52" pos:end="284:66">setModeToFlying</name><argument_list pos:start="284:67" pos:end="284:68">()</argument_list></call></expr>;</expr_stmt>
		</block_content>}</block></if></if_stmt>
	</block_content>}</block></function>

	<function pos:start="288:9" pos:end="316:9"><type pos:start="288:9" pos:end="288:20"><specifier pos:start="288:9" pos:end="288:15">private</specifier> <name pos:start="288:17" pos:end="288:20">void</name></type> <name pos:start="288:22" pos:end="288:50">checkForSchedulingWithTakeoff</name><parameter_list pos:start="288:51" pos:end="288:75">(<parameter pos:start="288:52" pos:end="288:74"><decl pos:start="288:52" pos:end="288:74"><type pos:start="288:52" pos:end="288:62"><name pos:start="288:52" pos:end="288:62">IFlightPlan</name></type> <name pos:start="288:64" pos:end="288:74">pendingPlan</name></decl></parameter>)</parameter_list> <throws pos:start="288:77" pos:end="288:118">throws <argument pos:start="288:84" pos:end="288:97"><expr pos:start="288:84" pos:end="288:97"><name pos:start="288:84" pos:end="288:97">DroneException</name></expr></argument>, <argument pos:start="288:100" pos:end="288:118"><expr pos:start="288:100" pos:end="288:118"><name pos:start="288:100" pos:end="288:118">FlightZoneException</name></expr></argument></throws> <block pos:start="288:120" pos:end="316:9">{<block_content pos:start="289:17" pos:end="314:17">
		<decl_stmt pos:start="289:17" pos:end="289:35"><decl pos:start="289:17" pos:end="289:34"><type pos:start="289:17" pos:end="289:28"><name pos:start="289:17" pos:end="289:28">ManagedDrone</name></type> <name pos:start="289:30" pos:end="289:34">drone</name></decl>;</decl_stmt>
		<if_stmt pos:start="290:17" pos:end="297:17"><if pos:start="290:17" pos:end="295:17">if <condition pos:start="290:20" pos:end="290:63">(<expr pos:start="290:21" pos:end="290:62"><call pos:start="290:21" pos:end="290:54"><name pos:start="290:21" pos:end="290:52"><name pos:start="290:21" pos:end="290:31">pendingPlan</name><operator pos:start="290:32" pos:end="290:32">.</operator><name pos:start="290:33" pos:end="290:52">getDesignatedDroneId</name></name><argument_list pos:start="290:53" pos:end="290:54">()</argument_list></call> <operator pos:start="290:56" pos:end="290:57">==</operator> <literal type="null" pos:start="290:59" pos:end="290:62">null</literal></expr>)</condition> <block pos:start="290:65" pos:end="295:17">{<block_content pos:start="291:25" pos:end="294:25">
			<expr_stmt pos:start="291:25" pos:end="291:63"><expr pos:start="291:25" pos:end="291:62"><name pos:start="291:25" pos:end="291:29">drone</name> <operator pos:start="291:31" pos:end="291:31">=</operator> <call pos:start="291:33" pos:end="291:62"><name pos:start="291:33" pos:end="291:60"><name pos:start="291:33" pos:end="291:42">droneFleet</name><operator pos:start="291:43" pos:end="291:43">.</operator><name pos:start="291:44" pos:end="291:60">getAvailableDrone</name></name><argument_list pos:start="291:61" pos:end="291:62">()</argument_list></call></expr>;</expr_stmt>
			<if_stmt pos:start="292:25" pos:end="294:25"><if pos:start="292:25" pos:end="294:25">if <condition pos:start="292:28" pos:end="292:42">(<expr pos:start="292:29" pos:end="292:41"><name pos:start="292:29" pos:end="292:33">drone</name> <operator pos:start="292:35" pos:end="292:36">!=</operator> <literal type="null" pos:start="292:38" pos:end="292:41">null</literal></expr>)</condition> <block pos:start="292:44" pos:end="294:25">{<block_content pos:start="293:33" pos:end="293:94">
				<expr_stmt pos:start="293:33" pos:end="293:94"><expr pos:start="293:33" pos:end="293:93"><call pos:start="293:33" pos:end="293:93"><name pos:start="293:33" pos:end="293:58"><name pos:start="293:33" pos:end="293:47">planPoolManager</name><operator pos:start="293:48" pos:end="293:48">.</operator><name pos:start="293:49" pos:end="293:58">assignPlan</name></name><argument_list pos:start="293:59" pos:end="293:93">(<argument pos:start="293:60" pos:end="293:70"><expr pos:start="293:60" pos:end="293:70"><name pos:start="293:60" pos:end="293:70">pendingPlan</name></expr></argument>, <argument pos:start="293:73" pos:end="293:92"><expr pos:start="293:73" pos:end="293:92"><call pos:start="293:73" pos:end="293:92"><name pos:start="293:73" pos:end="293:90"><name pos:start="293:73" pos:end="293:77">drone</name><operator pos:start="293:78" pos:end="293:78">.</operator><name pos:start="293:79" pos:end="293:90">getDroneName</name></name><argument_list pos:start="293:91" pos:end="293:92">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			</block_content>}</block></if></if_stmt>
		</block_content>}</block></if> <else pos:start="295:19" pos:end="297:17">else <block pos:start="295:24" pos:end="297:17">{<block_content pos:start="296:25" pos:end="296:97">
			<expr_stmt pos:start="296:25" pos:end="296:97"><expr pos:start="296:25" pos:end="296:96"><name pos:start="296:25" pos:end="296:29">drone</name> <operator pos:start="296:31" pos:end="296:31">=</operator> <call pos:start="296:33" pos:end="296:96"><name pos:start="296:33" pos:end="296:60"><name pos:start="296:33" pos:end="296:42">droneFleet</name><operator pos:start="296:43" pos:end="296:43">.</operator><name pos:start="296:44" pos:end="296:60">getAvailableDrone</name></name><argument_list pos:start="296:61" pos:end="296:96">(<argument pos:start="296:62" pos:end="296:95"><expr pos:start="296:62" pos:end="296:95"><call pos:start="296:62" pos:end="296:95"><name pos:start="296:62" pos:end="296:93"><name pos:start="296:62" pos:end="296:72">pendingPlan</name><operator pos:start="296:73" pos:end="296:73">.</operator><name pos:start="296:74" pos:end="296:93">getDesignatedDroneId</name></name><argument_list pos:start="296:94" pos:end="296:95">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		</block_content>}</block></else></if_stmt>

		<if_stmt pos:start="299:17" pos:end="301:17"><if pos:start="299:17" pos:end="301:17">if <condition pos:start="299:20" pos:end="299:100">(<expr pos:start="299:21" pos:end="299:99"><name pos:start="299:21" pos:end="299:25">drone</name> <operator pos:start="299:27" pos:end="299:28">==</operator> <literal type="null" pos:start="299:30" pos:end="299:33">null</literal> <operator pos:start="299:35" pos:end="299:36">||</operator> <operator pos:start="299:38" pos:end="299:38">(</operator><call pos:start="299:39" pos:end="299:90"><name pos:start="299:39" pos:end="299:68"><name pos:start="299:39" pos:end="299:53">planPoolManager</name><operator pos:start="299:54" pos:end="299:54">.</operator><name pos:start="299:55" pos:end="299:68">getCurrentPlan</name></name><argument_list pos:start="299:69" pos:end="299:90">(<argument pos:start="299:70" pos:end="299:89"><expr pos:start="299:70" pos:end="299:89"><call pos:start="299:70" pos:end="299:89"><name pos:start="299:70" pos:end="299:87"><name pos:start="299:70" pos:end="299:74">drone</name><operator pos:start="299:75" pos:end="299:75">.</operator><name pos:start="299:76" pos:end="299:87">getDroneName</name></name><argument_list pos:start="299:88" pos:end="299:89">()</argument_list></call></expr></argument>)</argument_list></call> <operator pos:start="299:92" pos:end="299:93">!=</operator> <literal type="null" pos:start="299:95" pos:end="299:98">null</literal><operator pos:start="299:99" pos:end="299:99">)</operator></expr>)</condition> <block pos:start="299:102" pos:end="301:17">{<block_content pos:start="300:25" pos:end="300:31">
			<return pos:start="300:25" pos:end="300:31">return;</return>
		</block_content>}</block></if></if_stmt>
		<expr_stmt pos:start="302:17" pos:end="302:80"><expr pos:start="302:17" pos:end="302:79"><call pos:start="302:17" pos:end="302:79"><name pos:start="302:17" pos:end="302:44"><name pos:start="302:17" pos:end="302:31">planPoolManager</name><operator pos:start="302:32" pos:end="302:32">.</operator><name pos:start="302:33" pos:end="302:44">activatePlan</name></name><argument_list pos:start="302:45" pos:end="302:79">(<argument pos:start="302:46" pos:end="302:56"><expr pos:start="302:46" pos:end="302:56"><name pos:start="302:46" pos:end="302:56">pendingPlan</name></expr></argument>, <argument pos:start="302:59" pos:end="302:78"><expr pos:start="302:59" pos:end="302:78"><call pos:start="302:59" pos:end="302:78"><name pos:start="302:59" pos:end="302:76"><name pos:start="302:59" pos:end="302:63">drone</name><operator pos:start="302:64" pos:end="302:64">.</operator><name pos:start="302:65" pos:end="302:76">getDroneName</name></name><argument_list pos:start="302:77" pos:end="302:78">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		<decl_stmt pos:start="304:17" pos:end="304:75"><decl pos:start="304:17" pos:end="304:74"><type pos:start="304:17" pos:end="304:31"><name pos:start="304:17" pos:end="304:31">IFlightDirector</name></type> <name pos:start="304:33" pos:end="304:48">flightDirectives</name> <init pos:start="304:50" pos:end="304:74">= <expr pos:start="304:52" pos:end="304:74"><operator pos:start="304:52" pos:end="304:54">new</operator> <call pos:start="304:56" pos:end="304:74"><name pos:start="304:56" pos:end="304:67">SoloDirector</name><argument_list pos:start="304:68" pos:end="304:74">(<argument pos:start="304:69" pos:end="304:73"><expr pos:start="304:69" pos:end="304:73"><name pos:start="304:69" pos:end="304:73">drone</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt pos:start="305:17" pos:end="305:74"><expr pos:start="305:17" pos:end="305:73"><call pos:start="305:17" pos:end="305:73"><name pos:start="305:17" pos:end="305:45"><name pos:start="305:17" pos:end="305:32">flightDirectives</name><operator pos:start="305:33" pos:end="305:33">.</operator><name pos:start="305:34" pos:end="305:45">setWayPoints</name></name><argument_list pos:start="305:46" pos:end="305:73">(<argument pos:start="305:47" pos:end="305:72"><expr pos:start="305:47" pos:end="305:72"><call pos:start="305:47" pos:end="305:72"><name pos:start="305:47" pos:end="305:70"><name pos:start="305:47" pos:end="305:57">pendingPlan</name><operator pos:start="305:58" pos:end="305:58">.</operator><name pos:start="305:59" pos:end="305:70">getWayPoints</name></name><argument_list pos:start="305:71" pos:end="305:72">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt pos:start="306:17" pos:end="306:68"><expr pos:start="306:17" pos:end="306:67"><call pos:start="306:17" pos:end="306:36"><name pos:start="306:17" pos:end="306:34"><name pos:start="306:17" pos:end="306:21">drone</name><operator pos:start="306:22" pos:end="306:22">.</operator><name pos:start="306:23" pos:end="306:34">getMessenger</name></name><argument_list pos:start="306:35" pos:end="306:36">()</argument_list></call><operator pos:start="306:37" pos:end="306:37">.</operator><call pos:start="306:38" pos:end="306:67"><name pos:start="306:38" pos:end="306:49">assignFlight</name><argument_list pos:start="306:50" pos:end="306:67">(<argument pos:start="306:51" pos:end="306:66"><expr pos:start="306:51" pos:end="306:66"><name pos:start="306:51" pos:end="306:66">flightDirectives</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<comment type="line" pos:start="307:17" pos:end="307:58">// // this needs to be moved to launch....</comment>
		<expr_stmt pos:start="308:17" pos:end="308:53"><expr pos:start="308:17" pos:end="308:52"><call pos:start="308:17" pos:end="308:52"><name pos:start="308:17" pos:end="308:45"><name pos:start="308:17" pos:end="308:27">pendingPlan</name><operator pos:start="308:28" pos:end="308:28">.</operator><name pos:start="308:29" pos:end="308:45">setStatusToFlying</name></name><argument_list pos:start="308:46" pos:end="308:52">(<argument pos:start="308:47" pos:end="308:51"><expr pos:start="308:47" pos:end="308:51"><name pos:start="308:47" pos:end="308:51">drone</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<if_stmt pos:start="309:17" pos:end="314:17"><if pos:start="309:17" pos:end="311:17">if <condition pos:start="309:20" pos:end="309:57">(<expr pos:start="309:21" pos:end="309:56"><call pos:start="309:21" pos:end="309:46"><name pos:start="309:21" pos:end="309:44"><name pos:start="309:21" pos:end="309:25">drone</name><operator pos:start="309:26" pos:end="309:26">.</operator><name pos:start="309:27" pos:end="309:44">getFlightModeState</name></name><argument_list pos:start="309:45" pos:end="309:46">()</argument_list></call><operator pos:start="309:47" pos:end="309:47">.</operator><call pos:start="309:48" pos:end="309:56"><name pos:start="309:48" pos:end="309:54">isInAir</name><argument_list pos:start="309:55" pos:end="309:56">()</argument_list></call></expr>)</condition> <block pos:start="309:59" pos:end="311:17">{<block_content pos:start="310:25" pos:end="310:69">
			<expr_stmt pos:start="310:25" pos:end="310:69"><expr pos:start="310:25" pos:end="310:68"><call pos:start="310:25" pos:end="310:50"><name pos:start="310:25" pos:end="310:48"><name pos:start="310:25" pos:end="310:29">drone</name><operator pos:start="310:30" pos:end="310:30">.</operator><name pos:start="310:31" pos:end="310:48">getFlightModeState</name></name><argument_list pos:start="310:49" pos:end="310:50">()</argument_list></call><operator pos:start="310:51" pos:end="310:51">.</operator><call pos:start="310:52" pos:end="310:68"><name pos:start="310:52" pos:end="310:66">setModeToFlying</name><argument_list pos:start="310:67" pos:end="310:68">()</argument_list></call></expr>;</expr_stmt>
		</block_content>}</block></if> <if type="elseif" pos:start="311:19" pos:end="314:17">else if <condition pos:start="311:27" pos:end="311:67">(<expr pos:start="311:28" pos:end="311:66"><call pos:start="311:28" pos:end="311:53"><name pos:start="311:28" pos:end="311:51"><name pos:start="311:28" pos:end="311:32">drone</name><operator pos:start="311:33" pos:end="311:33">.</operator><name pos:start="311:34" pos:end="311:51">getFlightModeState</name></name><argument_list pos:start="311:52" pos:end="311:53">()</argument_list></call><operator pos:start="311:54" pos:end="311:54">.</operator><call pos:start="311:55" pos:end="311:66"><name pos:start="311:55" pos:end="311:64">isOnGround</name><argument_list pos:start="311:65" pos:end="311:66">()</argument_list></call></expr>)</condition> <block pos:start="311:69" pos:end="314:17">{<block_content pos:start="312:25" pos:end="313:87">
			<expr_stmt pos:start="312:25" pos:end="312:64"><expr pos:start="312:25" pos:end="312:63"><call pos:start="312:25" pos:end="312:63"><name pos:start="312:25" pos:end="312:50"><name pos:start="312:25" pos:end="312:46">awaitingTakeOffFlights</name><operator pos:start="312:47" pos:end="312:47">.</operator><name pos:start="312:48" pos:end="312:50">add</name></name><argument_list pos:start="312:51" pos:end="312:63">(<argument pos:start="312:52" pos:end="312:62"><expr pos:start="312:52" pos:end="312:62"><name pos:start="312:52" pos:end="312:62">pendingPlan</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt pos:start="313:25" pos:end="313:87"><expr pos:start="313:25" pos:end="313:86"><call pos:start="313:25" pos:end="313:50"><name pos:start="313:25" pos:end="313:48"><name pos:start="313:25" pos:end="313:29">drone</name><operator pos:start="313:30" pos:end="313:30">.</operator><name pos:start="313:31" pos:end="313:48">getFlightModeState</name></name><argument_list pos:start="313:49" pos:end="313:50">()</argument_list></call><operator pos:start="313:51" pos:end="313:51">.</operator><call pos:start="313:52" pos:end="313:86"><name pos:start="313:52" pos:end="313:84">setModeToAwaitingTakeOffClearance</name><argument_list pos:start="313:85" pos:end="313:86">()</argument_list></call></expr>;</expr_stmt>
		</block_content>}</block></if></if_stmt>

	</block_content>}</block></function>

	<function pos:start="318:9" pos:end="336:9"><type pos:start="318:9" pos:end="318:19"><specifier pos:start="318:9" pos:end="318:14">public</specifier> <name pos:start="318:16" pos:end="318:19">void</name></type> <name pos:start="318:21" pos:end="318:44">checkForLandingReadiness</name><parameter_list pos:start="318:45" pos:end="318:46">()</parameter_list> <block pos:start="318:48" pos:end="336:9">{<block_content pos:start="319:17" pos:end="334:17">
		<if_stmt pos:start="319:17" pos:end="334:17"><if pos:start="319:17" pos:end="334:17">if <condition pos:start="319:20" pos:end="319:101">(<expr pos:start="319:21" pos:end="319:100"><operator pos:start="319:21" pos:end="319:21">!</operator><call pos:start="319:22" pos:end="319:53"><name pos:start="319:22" pos:end="319:51"><name pos:start="319:22" pos:end="319:43">awaitingLandingFlights</name><operator pos:start="319:44" pos:end="319:44">.</operator><name pos:start="319:45" pos:end="319:51">isEmpty</name></name><argument_list pos:start="319:52" pos:end="319:53">()</argument_list></call> <operator pos:start="319:55" pos:end="319:56">&amp;&amp;</operator> <call pos:start="319:58" pos:end="319:86"><name pos:start="319:58" pos:end="319:83"><name pos:start="319:58" pos:end="319:79">awaitingLandingFlights</name><operator pos:start="319:80" pos:end="319:80">.</operator><name pos:start="319:81" pos:end="319:83">get</name></name><argument_list pos:start="319:84" pos:end="319:86">(<argument pos:start="319:85" pos:end="319:85"><expr pos:start="319:85" pos:end="319:85"><literal type="number" pos:start="319:85" pos:end="319:85">0</literal></expr></argument>)</argument_list></call><operator pos:start="319:87" pos:end="319:87">.</operator><call pos:start="319:88" pos:end="319:100"><name pos:start="319:88" pos:end="319:98">isCompleted</name><argument_list pos:start="319:99" pos:end="319:100">()</argument_list></call></expr>)</condition> <block pos:start="319:103" pos:end="334:17">{<block_content pos:start="320:25" pos:end="332:25">
			<try pos:start="320:25" pos:end="332:25">try <block pos:start="320:29" pos:end="329:25">{<block_content pos:start="321:33" pos:end="328:65">
				<decl_stmt pos:start="321:33" pos:end="321:95"><decl pos:start="321:33" pos:end="321:94"><type pos:start="321:33" pos:end="321:43"><name pos:start="321:33" pos:end="321:43">IFlightPlan</name></type> <name pos:start="321:45" pos:end="321:62">awaitingFlightPlan</name> <init pos:start="321:64" pos:end="321:94">= <expr pos:start="321:66" pos:end="321:94"><call pos:start="321:66" pos:end="321:94"><name pos:start="321:66" pos:end="321:91"><name pos:start="321:66" pos:end="321:87">awaitingLandingFlights</name><operator pos:start="321:88" pos:end="321:88">.</operator><name pos:start="321:89" pos:end="321:91">get</name></name><argument_list pos:start="321:92" pos:end="321:94">(<argument pos:start="321:93" pos:end="321:93"><expr pos:start="321:93" pos:end="321:93"><literal type="number" pos:start="321:93" pos:end="321:93">0</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
				<decl_stmt pos:start="322:33" pos:end="322:126"><decl pos:start="322:33" pos:end="322:125"><type pos:start="322:33" pos:end="322:44"><name pos:start="322:33" pos:end="322:44">ManagedDrone</name></type> <name pos:start="322:46" pos:end="322:50">drone</name> <init pos:start="322:52" pos:end="322:125">= <expr pos:start="322:54" pos:end="322:125"><call pos:start="322:54" pos:end="322:125"><name pos:start="322:54" pos:end="322:82"><name pos:start="322:54" pos:end="322:63">droneFleet</name><operator pos:start="322:64" pos:end="322:64">.</operator><name pos:start="322:65" pos:end="322:82">getRegisteredDrone</name></name><argument_list pos:start="322:83" pos:end="322:125">(<argument pos:start="322:84" pos:end="322:124"><expr pos:start="322:84" pos:end="322:124"><call pos:start="322:84" pos:end="322:124"><name pos:start="322:84" pos:end="322:122"><name pos:start="322:84" pos:end="322:101">awaitingFlightPlan</name><operator pos:start="322:102" pos:end="322:102">.</operator><name pos:start="322:103" pos:end="322:122">getDesignatedDroneId</name></name><argument_list pos:start="322:123" pos:end="322:124">()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
				<expr_stmt pos:start="323:33" pos:end="323:98"><expr pos:start="323:33" pos:end="323:97"><call pos:start="323:33" pos:end="323:97"><name pos:start="323:33" pos:end="323:43"><name pos:start="323:33" pos:end="323:38">LOGGER</name><operator pos:start="323:39" pos:end="323:39">.</operator><name pos:start="323:40" pos:end="323:43">info</name></name><argument_list pos:start="323:44" pos:end="323:97">(<argument pos:start="323:45" pos:end="323:96"><expr pos:start="323:45" pos:end="323:96"><literal type="string" pos:start="323:45" pos:end="323:53">"Drone '"</literal> <operator pos:start="323:55" pos:end="323:55">+</operator> <call pos:start="323:57" pos:end="323:76"><name pos:start="323:57" pos:end="323:74"><name pos:start="323:57" pos:end="323:61">drone</name><operator pos:start="323:62" pos:end="323:62">.</operator><name pos:start="323:63" pos:end="323:74">getDroneName</name></name><argument_list pos:start="323:75" pos:end="323:76">()</argument_list></call> <operator pos:start="323:78" pos:end="323:78">+</operator> <literal type="string" pos:start="323:80" pos:end="323:96">"' ready to land"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

				<expr_stmt pos:start="325:33" pos:end="325:45"><expr pos:start="325:33" pos:end="325:44"><call pos:start="325:33" pos:end="325:44"><name pos:start="325:33" pos:end="325:42"><name pos:start="325:33" pos:end="325:37">drone</name><operator pos:start="325:38" pos:end="325:38">.</operator><name pos:start="325:39" pos:end="325:42">land</name></name><argument_list pos:start="325:43" pos:end="325:44">()</argument_list></call></expr>;</expr_stmt>
				<comment type="line" pos:start="326:33" pos:end="326:52">// land after alt &lt;1</comment>
				<expr_stmt pos:start="327:33" pos:end="327:61"><expr pos:start="327:33" pos:end="327:60"><call pos:start="327:33" pos:end="327:60"><name pos:start="327:33" pos:end="327:58"><name pos:start="327:33" pos:end="327:42">activeUAVS</name><operator pos:start="327:43" pos:end="327:43">.</operator><name pos:start="327:44" pos:end="327:58">decrementAndGet</name></name><argument_list pos:start="327:59" pos:end="327:60">()</argument_list></call></expr>;</expr_stmt>
				<expr_stmt pos:start="328:33" pos:end="328:65"><expr pos:start="328:33" pos:end="328:64"><call pos:start="328:33" pos:end="328:64"><name pos:start="328:33" pos:end="328:61"><name pos:start="328:33" pos:end="328:54">awaitingLandingFlights</name><operator pos:start="328:55" pos:end="328:55">.</operator><name pos:start="328:56" pos:end="328:61">remove</name></name><argument_list pos:start="328:62" pos:end="328:64">(<argument pos:start="328:63" pos:end="328:63"><expr pos:start="328:63" pos:end="328:63"><literal type="number" pos:start="328:63" pos:end="328:63">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			</block_content>}</block> <catch pos:start="329:27" pos:end="332:25">catch <parameter_list pos:start="329:33" pos:end="329:72">(<parameter pos:start="329:34" pos:end="329:71"><decl pos:start="329:34" pos:end="329:71"><type pos:start="329:34" pos:end="329:52"><name pos:start="329:34" pos:end="329:52">FlightZoneException</name></type> | <type pos:start="329:56" pos:end="329:71"><name pos:start="329:56" pos:end="329:69">DroneException</name></type> <name pos:start="329:71" pos:end="329:71">e</name></decl></parameter>)</parameter_list> <block pos:start="329:74" pos:end="332:25">{<block_content pos:start="331:33" pos:end="331:52">
				<comment type="line" pos:start="330:33" pos:end="330:66">// TODO Auto-generated catch block</comment>
				<expr_stmt pos:start="331:33" pos:end="331:52"><expr pos:start="331:33" pos:end="331:51"><call pos:start="331:33" pos:end="331:51"><name pos:start="331:33" pos:end="331:49"><name pos:start="331:33" pos:end="331:33">e</name><operator pos:start="331:34" pos:end="331:34">.</operator><name pos:start="331:35" pos:end="331:49">printStackTrace</name></name><argument_list pos:start="331:50" pos:end="331:51">()</argument_list></call></expr>;</expr_stmt>
			</block_content>}</block></catch></try>

		</block_content>}</block></if></if_stmt>

	</block_content>}</block></function>

	<function pos:start="338:9" pos:end="340:9"><type pos:start="338:9" pos:end="338:22"><specifier pos:start="338:9" pos:end="338:14">public</specifier> <name pos:start="338:16" pos:end="338:22">boolean</name></type> <name pos:start="338:24" pos:end="338:41">hasAwaitingLanding</name><parameter_list pos:start="338:42" pos:end="338:43">()</parameter_list> <block pos:start="338:45" pos:end="340:9">{<block_content pos:start="339:17" pos:end="339:57">
		<return pos:start="339:17" pos:end="339:57">return <expr pos:start="339:24" pos:end="339:56"><call pos:start="339:24" pos:end="339:52"><name pos:start="339:24" pos:end="339:50"><name pos:start="339:24" pos:end="339:45">awaitingLandingFlights</name><operator pos:start="339:46" pos:end="339:46">.</operator><name pos:start="339:47" pos:end="339:50">size</name></name><argument_list pos:start="339:51" pos:end="339:52">()</argument_list></call> <operator pos:start="339:54" pos:end="339:54">&gt;</operator> <literal type="number" pos:start="339:56" pos:end="339:56">0</literal></expr>;</return>
	</block_content>}</block></function>

	<function pos:start="342:9" pos:end="344:9"><type pos:start="342:9" pos:end="342:32"><specifier pos:start="342:9" pos:end="342:14">public</specifier> <name pos:start="342:16" pos:end="342:32"><name pos:start="342:16" pos:end="342:19">List</name><argument_list type="generic" pos:start="342:20" pos:end="342:32">&lt;<argument pos:start="342:21" pos:end="342:31"><name pos:start="342:21" pos:end="342:31">IFlightPlan</name></argument>&gt;</argument_list></name></type> <name pos:start="342:34" pos:end="342:58">getAwaitingTakeOffFlights</name><parameter_list pos:start="342:59" pos:end="342:60">()</parameter_list> <block pos:start="342:62" pos:end="344:9">{<block_content pos:start="343:17" pos:end="343:76">
		<return pos:start="343:17" pos:end="343:76">return <expr pos:start="343:24" pos:end="343:75"><call pos:start="343:24" pos:end="343:75"><name pos:start="343:24" pos:end="343:51"><name pos:start="343:24" pos:end="343:34">Collections</name><operator pos:start="343:35" pos:end="343:35">.</operator><name pos:start="343:36" pos:end="343:51">unmodifiableList</name></name><argument_list pos:start="343:52" pos:end="343:75">(<argument pos:start="343:53" pos:end="343:74"><expr pos:start="343:53" pos:end="343:74"><name pos:start="343:53" pos:end="343:74">awaitingTakeOffFlights</name></expr></argument>)</argument_list></call></expr>;</return>
	</block_content>}</block></function>

	<function pos:start="346:9" pos:end="349:9"><type pos:start="346:9" pos:end="346:19"><specifier pos:start="346:9" pos:end="346:14">public</specifier> <name pos:start="346:16" pos:end="346:19">void</name></type> <name pos:start="346:21" pos:end="346:42">checkForCompletedPlans</name><parameter_list pos:start="346:43" pos:end="346:44">()</parameter_list> <throws pos:start="346:46" pos:end="346:66">throws <argument pos:start="346:53" pos:end="346:66"><expr pos:start="346:53" pos:end="346:66"><name pos:start="346:53" pos:end="346:66">DroneException</name></expr></argument></throws> <block pos:start="346:68" pos:end="349:9">{<block_content pos:start="347:17" pos:end="347:58">
		<expr_stmt pos:start="347:17" pos:end="347:58"><expr pos:start="347:17" pos:end="347:57"><call pos:start="347:17" pos:end="347:57"><name pos:start="347:17" pos:end="347:55"><name pos:start="347:17" pos:end="347:31">planPoolManager</name><operator pos:start="347:32" pos:end="347:32">.</operator><name pos:start="347:33" pos:end="347:55">checkFormCompletedPlans</name></name><argument_list pos:start="347:56" pos:end="347:57">()</argument_list></call></expr>;</expr_stmt>

	</block_content>}</block></function>

	<function pos:start="351:9" pos:end="354:9"><type pos:start="351:9" pos:end="351:22"><specifier pos:start="351:9" pos:end="351:14">public</specifier> <name pos:start="351:16" pos:end="351:22">boolean</name></type> <name pos:start="351:24" pos:end="351:41">hasAwaitingTakeOff</name><parameter_list pos:start="351:42" pos:end="351:43">()</parameter_list> <block pos:start="351:45" pos:end="354:9">{<block_content pos:start="352:17" pos:end="352:57">
		<return pos:start="352:17" pos:end="352:57">return <expr pos:start="352:24" pos:end="352:56"><operator pos:start="352:24" pos:end="352:24">!</operator><call pos:start="352:25" pos:end="352:56"><name pos:start="352:25" pos:end="352:54"><name pos:start="352:25" pos:end="352:46">awaitingTakeOffFlights</name><operator pos:start="352:47" pos:end="352:47">.</operator><name pos:start="352:48" pos:end="352:54">isEmpty</name></name><argument_list pos:start="352:55" pos:end="352:56">()</argument_list></call></expr>;</return>

	</block_content>}</block></function>

	<function pos:start="356:9" pos:end="360:9"><type pos:start="356:9" pos:end="356:19"><specifier pos:start="356:9" pos:end="356:14">public</specifier> <name pos:start="356:16" pos:end="356:19">void</name></type> <name pos:start="356:21" pos:end="356:30">planFlight</name><parameter_list pos:start="356:31" pos:end="356:87">(<parameter pos:start="356:32" pos:end="356:43"><decl pos:start="356:32" pos:end="356:43"><type pos:start="356:32" pos:end="356:43"><name pos:start="356:32" pos:end="356:37">String</name></type> <name pos:start="356:39" pos:end="356:43">uavid</name></decl></parameter>, <parameter pos:start="356:46" pos:end="356:60"><decl pos:start="356:46" pos:end="356:60"><type pos:start="356:46" pos:end="356:60"><name pos:start="356:46" pos:end="356:51">String</name></type> <name pos:start="356:53" pos:end="356:60">planName</name></decl></parameter>, <parameter pos:start="356:63" pos:end="356:86"><decl pos:start="356:63" pos:end="356:86"><type pos:start="356:63" pos:end="356:86"><name pos:start="356:63" pos:end="356:76"><name pos:start="356:63" pos:end="356:66">List</name><argument_list type="generic" pos:start="356:67" pos:end="356:76">&lt;<argument pos:start="356:68" pos:end="356:75"><name pos:start="356:68" pos:end="356:75">Waypoint</name></argument>&gt;</argument_list></name></type> <name pos:start="356:78" pos:end="356:86">waypoints</name></decl></parameter>)</parameter_list> <throws pos:start="356:89" pos:end="356:109">throws <argument pos:start="356:96" pos:end="356:109"><expr pos:start="356:96" pos:end="356:109"><name pos:start="356:96" pos:end="356:109">DroneException</name></expr></argument></throws> <block pos:start="356:111" pos:end="360:9">{<block_content pos:start="357:17" pos:end="358:63">
		<decl_stmt pos:start="357:17" pos:end="357:88"><decl pos:start="357:17" pos:end="357:87"><type pos:start="357:17" pos:end="357:27"><name pos:start="357:17" pos:end="357:27">IFlightPlan</name></type> <name pos:start="357:29" pos:end="357:32">plan</name> <init pos:start="357:34" pos:end="357:87">= <expr pos:start="357:36" pos:end="357:87"><call pos:start="357:36" pos:end="357:87"><name pos:start="357:36" pos:end="357:59"><name pos:start="357:36" pos:end="357:52">FlightPlanFactory</name><operator pos:start="357:53" pos:end="357:53">.</operator><name pos:start="357:54" pos:end="357:59">create</name></name><argument_list pos:start="357:60" pos:end="357:87">(<argument pos:start="357:61" pos:end="357:65"><expr pos:start="357:61" pos:end="357:65"><name pos:start="357:61" pos:end="357:65">uavid</name></expr></argument>, <argument pos:start="357:68" pos:end="357:75"><expr pos:start="357:68" pos:end="357:75"><name pos:start="357:68" pos:end="357:75">planName</name></expr></argument>, <argument pos:start="357:78" pos:end="357:86"><expr pos:start="357:78" pos:end="357:86"><name pos:start="357:78" pos:end="357:86">waypoints</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt pos:start="358:17" pos:end="358:63"><expr pos:start="358:17" pos:end="358:62"><call pos:start="358:17" pos:end="358:45"><name pos:start="358:17" pos:end="358:43"><name pos:start="358:17" pos:end="358:31">PlanPoolManager</name><operator pos:start="358:32" pos:end="358:32">.</operator><name pos:start="358:33" pos:end="358:43">getInstance</name></name><argument_list pos:start="358:44" pos:end="358:45">()</argument_list></call><operator pos:start="358:46" pos:end="358:46">.</operator><call pos:start="358:47" pos:end="358:62"><name pos:start="358:47" pos:end="358:56">addNewPlan</name><argument_list pos:start="358:57" pos:end="358:62">(<argument pos:start="358:58" pos:end="358:61"><expr pos:start="358:58" pos:end="358:61"><name pos:start="358:58" pos:end="358:61">plan</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> 

	</block_content>}</block></function>

	<function pos:start="362:9" pos:end="366:9"><type pos:start="362:9" pos:end="362:19"><specifier pos:start="362:9" pos:end="362:14">public</specifier> <name pos:start="362:16" pos:end="362:19">void</name></type> <name pos:start="362:21" pos:end="362:30">planFlight</name><parameter_list pos:start="362:31" pos:end="362:73">(<parameter pos:start="362:32" pos:end="362:46"><decl pos:start="362:32" pos:end="362:46"><type pos:start="362:32" pos:end="362:46"><name pos:start="362:32" pos:end="362:37">String</name></type> <name pos:start="362:39" pos:end="362:46">planName</name></decl></parameter>, <parameter pos:start="362:49" pos:end="362:72"><decl pos:start="362:49" pos:end="362:72"><type pos:start="362:49" pos:end="362:72"><name pos:start="362:49" pos:end="362:62"><name pos:start="362:49" pos:end="362:52">List</name><argument_list type="generic" pos:start="362:53" pos:end="362:62">&lt;<argument pos:start="362:54" pos:end="362:61"><name pos:start="362:54" pos:end="362:61">Waypoint</name></argument>&gt;</argument_list></name></type> <name pos:start="362:64" pos:end="362:72">waypoints</name></decl></parameter>)</parameter_list> <throws pos:start="362:75" pos:end="362:95">throws <argument pos:start="362:82" pos:end="362:95"><expr pos:start="362:82" pos:end="362:95"><name pos:start="362:82" pos:end="362:95">DroneException</name></expr></argument></throws> <block pos:start="362:97" pos:end="366:9">{<block_content pos:start="363:17" pos:end="364:63">
 		<decl_stmt pos:start="363:17" pos:end="363:81"><decl pos:start="363:17" pos:end="363:80"><type pos:start="363:17" pos:end="363:27"><name pos:start="363:17" pos:end="363:27">IFlightPlan</name></type> <name pos:start="363:29" pos:end="363:32">plan</name> <init pos:start="363:34" pos:end="363:80">= <expr pos:start="363:36" pos:end="363:80"><call pos:start="363:36" pos:end="363:80"><name pos:start="363:36" pos:end="363:59"><name pos:start="363:36" pos:end="363:52">FlightPlanFactory</name><operator pos:start="363:53" pos:end="363:53">.</operator><name pos:start="363:54" pos:end="363:59">create</name></name><argument_list pos:start="363:60" pos:end="363:80">(<argument pos:start="363:61" pos:end="363:68"><expr pos:start="363:61" pos:end="363:68"><name pos:start="363:61" pos:end="363:68">planName</name></expr></argument>, <argument pos:start="363:71" pos:end="363:79"><expr pos:start="363:71" pos:end="363:79"><name pos:start="363:71" pos:end="363:79">waypoints</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt pos:start="364:17" pos:end="364:63"><expr pos:start="364:17" pos:end="364:62"><call pos:start="364:17" pos:end="364:45"><name pos:start="364:17" pos:end="364:43"><name pos:start="364:17" pos:end="364:31">PlanPoolManager</name><operator pos:start="364:32" pos:end="364:32">.</operator><name pos:start="364:33" pos:end="364:43">getInstance</name></name><argument_list pos:start="364:44" pos:end="364:45">()</argument_list></call><operator pos:start="364:46" pos:end="364:46">.</operator><call pos:start="364:47" pos:end="364:62"><name pos:start="364:47" pos:end="364:56">addNewPlan</name><argument_list pos:start="364:57" pos:end="364:62">(<argument pos:start="364:58" pos:end="364:61"><expr pos:start="364:58" pos:end="364:61"><name pos:start="364:58" pos:end="364:61">plan</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	</block_content>}</block></function>

	<function pos:start="368:9" pos:end="377:9"><annotation pos:start="368:9" pos:end="368:17">@<name pos:start="368:10" pos:end="368:17">Override</name></annotation>
	<type pos:start="369:9" pos:end="369:19"><specifier pos:start="369:9" pos:end="369:14">public</specifier> <name pos:start="369:16" pos:end="369:19">void</name></type> <name pos:start="369:21" pos:end="369:36">notifyPlanChange</name><parameter_list pos:start="369:37" pos:end="369:61">(<parameter pos:start="369:38" pos:end="369:60"><decl pos:start="369:38" pos:end="369:60"><type pos:start="369:38" pos:end="369:48"><name pos:start="369:38" pos:end="369:48">IFlightPlan</name></type> <name pos:start="369:50" pos:end="369:60">changedPlan</name></decl></parameter>)</parameter_list> <block pos:start="369:63" pos:end="377:9">{<block_content pos:start="370:17" pos:end="375:17">
		<if_stmt pos:start="370:17" pos:end="375:17"><if pos:start="370:17" pos:end="375:17">if <condition pos:start="370:20" pos:end="370:46">(<expr pos:start="370:21" pos:end="370:45"><call pos:start="370:21" pos:end="370:45"><name pos:start="370:21" pos:end="370:43"><name pos:start="370:21" pos:end="370:31">changedPlan</name><operator pos:start="370:32" pos:end="370:32">.</operator><name pos:start="370:33" pos:end="370:43">isCompleted</name></name><argument_list pos:start="370:44" pos:end="370:45">()</argument_list></call></expr>)</condition> <block pos:start="370:48" pos:end="375:17">{<block_content pos:start="371:25" pos:end="374:25">
			<decl_stmt pos:start="371:25" pos:end="371:76"><decl pos:start="371:25" pos:end="371:75"><type pos:start="371:25" pos:end="371:36"><name pos:start="371:25" pos:end="371:36">ManagedDrone</name></type> <name pos:start="371:38" pos:end="371:42">drone</name> <init pos:start="371:44" pos:end="371:75">= <expr pos:start="371:46" pos:end="371:75"><call pos:start="371:46" pos:end="371:75"><name pos:start="371:46" pos:end="371:73"><name pos:start="371:46" pos:end="371:56">changedPlan</name><operator pos:start="371:57" pos:end="371:57">.</operator><name pos:start="371:58" pos:end="371:73">getAssignedDrone</name></name><argument_list pos:start="371:74" pos:end="371:75">()</argument_list></call></expr></init></decl>;</decl_stmt>
			<if_stmt pos:start="372:25" pos:end="374:25"><if pos:start="372:25" pos:end="374:25">if <condition pos:start="372:28" pos:end="372:42">(<expr pos:start="372:29" pos:end="372:41"><name pos:start="372:29" pos:end="372:33">drone</name> <operator pos:start="372:35" pos:end="372:36">!=</operator> <literal type="null" pos:start="372:38" pos:end="372:41">null</literal></expr>)</condition> <block pos:start="372:44" pos:end="374:25">{<block_content pos:start="373:33" pos:end="373:77">
				<expr_stmt pos:start="373:33" pos:end="373:77"><expr pos:start="373:33" pos:end="373:76"><call pos:start="373:33" pos:end="373:76"><name pos:start="373:33" pos:end="373:69"><name pos:start="373:33" pos:end="373:42">droneFleet</name><operator pos:start="373:43" pos:end="373:43">.</operator><name pos:start="373:44" pos:end="373:69">returnDroneToAvailablePool</name></name><argument_list pos:start="373:70" pos:end="373:76">(<argument pos:start="373:71" pos:end="373:75"><expr pos:start="373:71" pos:end="373:75"><name pos:start="373:71" pos:end="373:75">drone</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			</block_content>}</block></if></if_stmt>
		</block_content>}</block></if></if_stmt>

	</block_content>}</block></function>

	<function pos:start="379:9" pos:end="413:9"><type pos:start="379:9" pos:end="379:19"><specifier pos:start="379:9" pos:end="379:14">public</specifier> <name pos:start="379:16" pos:end="379:19">void</name></type> <name pos:start="379:21" pos:end="379:32">returnToHome</name><parameter_list pos:start="379:33" pos:end="379:46">(<parameter pos:start="379:34" pos:end="379:45"><decl pos:start="379:34" pos:end="379:45"><type pos:start="379:34" pos:end="379:39"><name pos:start="379:34" pos:end="379:39">String</name></type> <name pos:start="379:41" pos:end="379:45">uavid</name></decl></parameter>)</parameter_list> <throws pos:start="379:48" pos:end="379:68">throws <argument pos:start="379:55" pos:end="379:68"><expr pos:start="379:55" pos:end="379:68"><name pos:start="379:55" pos:end="379:68">DroneException</name></expr></argument></throws> <block pos:start="379:70" pos:end="413:9">{<block_content pos:start="380:17" pos:end="412:17">
		<expr_stmt pos:start="380:17" pos:end="380:58"><expr pos:start="380:17" pos:end="380:57"><call pos:start="380:17" pos:end="380:57"><name pos:start="380:17" pos:end="380:27"><name pos:start="380:17" pos:end="380:22">LOGGER</name><operator pos:start="380:23" pos:end="380:23">.</operator><name pos:start="380:24" pos:end="380:27">info</name></name><argument_list pos:start="380:28" pos:end="380:57">(<argument pos:start="380:29" pos:end="380:56"><expr pos:start="380:29" pos:end="380:56"><name pos:start="380:29" pos:end="380:33">uavid</name> <operator pos:start="380:35" pos:end="380:35">+</operator> <literal type="string" pos:start="380:37" pos:end="380:56">" returning to home"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<decl_stmt pos:start="381:17" pos:end="381:74"><decl pos:start="381:17" pos:end="381:73"><type pos:start="381:17" pos:end="381:28"><name pos:start="381:17" pos:end="381:28">ManagedDrone</name></type> <name pos:start="381:30" pos:end="381:34">drone</name> <init pos:start="381:36" pos:end="381:73">= <expr pos:start="381:38" pos:end="381:73"><call pos:start="381:38" pos:end="381:73"><name pos:start="381:38" pos:end="381:66"><name pos:start="381:38" pos:end="381:47">droneFleet</name><operator pos:start="381:48" pos:end="381:48">.</operator><name pos:start="381:49" pos:end="381:66">getRegisteredDrone</name></name><argument_list pos:start="381:67" pos:end="381:73">(<argument pos:start="381:68" pos:end="381:72"><expr pos:start="381:68" pos:end="381:72"><name pos:start="381:68" pos:end="381:72">uavid</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<decl_stmt pos:start="382:17" pos:end="382:74"><decl pos:start="382:17" pos:end="382:73"><type pos:start="382:17" pos:end="382:29"><name pos:start="382:17" pos:end="382:29">LlaCoordinate</name></type> <name pos:start="382:31" pos:end="382:44">baseCoordinate</name> <init pos:start="382:46" pos:end="382:73">= <expr pos:start="382:48" pos:end="382:73"><call pos:start="382:48" pos:end="382:73"><name pos:start="382:48" pos:end="382:71"><name pos:start="382:48" pos:end="382:52">drone</name><operator pos:start="382:53" pos:end="382:53">.</operator><name pos:start="382:54" pos:end="382:71">getBaseCoordinates</name></name><argument_list pos:start="382:72" pos:end="382:73">()</argument_list></call></expr></init></decl>;</decl_stmt>

		<decl_stmt pos:start="384:17" pos:end="384:78"><decl pos:start="384:17" pos:end="384:77"><type pos:start="384:17" pos:end="384:22"><name pos:start="384:17" pos:end="384:22">double</name></type> <name pos:start="384:24" pos:end="384:38">currentAltitude</name> <init pos:start="384:40" pos:end="384:77">= <expr pos:start="384:42" pos:end="384:77"><call pos:start="384:42" pos:end="384:63"><name pos:start="384:42" pos:end="384:61"><name pos:start="384:42" pos:end="384:46">drone</name><operator pos:start="384:47" pos:end="384:47">.</operator><name pos:start="384:48" pos:end="384:61">getCoordinates</name></name><argument_list pos:start="384:62" pos:end="384:63">()</argument_list></call><operator pos:start="384:64" pos:end="384:64">.</operator><call pos:start="384:65" pos:end="384:77"><name pos:start="384:65" pos:end="384:75">getAltitude</name><argument_list pos:start="384:76" pos:end="384:77">()</argument_list></call></expr></init></decl>;</decl_stmt>
		<decl_stmt pos:start="385:17" pos:end="386:49"><decl pos:start="385:17" pos:end="386:48"><type pos:start="385:17" pos:end="385:29"><name pos:start="385:17" pos:end="385:29">LlaCoordinate</name></type> <name pos:start="385:31" pos:end="385:44">homeCoordinate</name> <init pos:start="385:46" pos:end="386:48">= <expr pos:start="385:48" pos:end="386:48"><operator pos:start="385:48" pos:end="385:50">new</operator> <call pos:start="385:52" pos:end="386:48"><name pos:start="385:52" pos:end="385:64">LlaCoordinate</name><argument_list pos:start="385:65" pos:end="386:48">(<argument pos:start="385:66" pos:end="385:93"><expr pos:start="385:66" pos:end="385:93"><call pos:start="385:66" pos:end="385:93"><name pos:start="385:66" pos:end="385:91"><name pos:start="385:66" pos:end="385:79">baseCoordinate</name><operator pos:start="385:80" pos:end="385:80">.</operator><name pos:start="385:81" pos:end="385:91">getLatitude</name></name><argument_list pos:start="385:92" pos:end="385:93">()</argument_list></call></expr></argument>, <argument pos:start="385:96" pos:end="385:124"><expr pos:start="385:96" pos:end="385:124"><call pos:start="385:96" pos:end="385:124"><name pos:start="385:96" pos:end="385:122"><name pos:start="385:96" pos:end="385:109">baseCoordinate</name><operator pos:start="385:110" pos:end="385:110">.</operator><name pos:start="385:111" pos:end="385:122">getLongitude</name></name><argument_list pos:start="385:123" pos:end="385:124">()</argument_list></call></expr></argument>,
				<argument pos:start="386:33" pos:end="386:47"><expr pos:start="386:33" pos:end="386:47"><name pos:start="386:33" pos:end="386:47">currentAltitude</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

		<decl_stmt pos:start="388:17" pos:end="389:97"><decl pos:start="388:17" pos:end="389:96"><type pos:start="388:17" pos:end="388:29"><name pos:start="388:17" pos:end="388:29">LlaCoordinate</name></type> <name pos:start="388:31" pos:end="388:52">homeCoordinateAltitude</name> <init pos:start="388:54" pos:end="389:96">= <expr pos:start="388:56" pos:end="389:96"><operator pos:start="388:56" pos:end="388:58">new</operator> <call pos:start="388:60" pos:end="389:96"><name pos:start="388:60" pos:end="388:72">LlaCoordinate</name><argument_list pos:start="388:73" pos:end="389:96">(<argument pos:start="388:74" pos:end="388:101"><expr pos:start="388:74" pos:end="388:101"><call pos:start="388:74" pos:end="388:101"><name pos:start="388:74" pos:end="388:99"><name pos:start="388:74" pos:end="388:87">baseCoordinate</name><operator pos:start="388:88" pos:end="388:88">.</operator><name pos:start="388:89" pos:end="388:99">getLatitude</name></name><argument_list pos:start="388:100" pos:end="388:101">()</argument_list></call></expr></argument>,
				<argument pos:start="389:33" pos:end="389:61"><expr pos:start="389:33" pos:end="389:61"><call pos:start="389:33" pos:end="389:61"><name pos:start="389:33" pos:end="389:59"><name pos:start="389:33" pos:end="389:46">baseCoordinate</name><operator pos:start="389:47" pos:end="389:47">.</operator><name pos:start="389:48" pos:end="389:59">getLongitude</name></name><argument_list pos:start="389:60" pos:end="389:61">()</argument_list></call></expr></argument>, <argument pos:start="389:64" pos:end="389:95"><expr pos:start="389:64" pos:end="389:95"><name pos:start="389:64" pos:end="389:95"><name pos:start="389:64" pos:end="389:81">DronologyConstants</name><operator pos:start="389:82" pos:end="389:82">.</operator><name pos:start="389:83" pos:end="389:95">HOME_ALTITUDE</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

		<decl_stmt pos:start="391:17" pos:end="391:60"><decl pos:start="391:17" pos:end="391:59"><type pos:start="391:17" pos:end="391:24"><name pos:start="391:17" pos:end="391:24">Waypoint</name></type> <name pos:start="391:26" pos:end="391:28">wps</name> <init pos:start="391:30" pos:end="391:59">= <expr pos:start="391:32" pos:end="391:59"><operator pos:start="391:32" pos:end="391:34">new</operator> <call pos:start="391:36" pos:end="391:59"><name pos:start="391:36" pos:end="391:43">Waypoint</name><argument_list pos:start="391:44" pos:end="391:59">(<argument pos:start="391:45" pos:end="391:58"><expr pos:start="391:45" pos:end="391:58"><name pos:start="391:45" pos:end="391:58">homeCoordinate</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<decl_stmt pos:start="392:17" pos:end="392:69"><decl pos:start="392:17" pos:end="392:68"><type pos:start="392:17" pos:end="392:24"><name pos:start="392:17" pos:end="392:24">Waypoint</name></type> <name pos:start="392:26" pos:end="392:29">wps2</name> <init pos:start="392:31" pos:end="392:68">= <expr pos:start="392:33" pos:end="392:68"><operator pos:start="392:33" pos:end="392:35">new</operator> <call pos:start="392:37" pos:end="392:68"><name pos:start="392:37" pos:end="392:44">Waypoint</name><argument_list pos:start="392:45" pos:end="392:68">(<argument pos:start="392:46" pos:end="392:67"><expr pos:start="392:46" pos:end="392:67"><name pos:start="392:46" pos:end="392:67">homeCoordinateAltitude</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<decl_stmt pos:start="393:17" pos:end="393:59"><decl pos:start="393:17" pos:end="393:58"><type pos:start="393:17" pos:end="393:30"><name pos:start="393:17" pos:end="393:30"><name pos:start="393:17" pos:end="393:20">List</name><argument_list type="generic" pos:start="393:21" pos:end="393:30">&lt;<argument pos:start="393:22" pos:end="393:29"><name pos:start="393:22" pos:end="393:29">Waypoint</name></argument>&gt;</argument_list></name></type> <name pos:start="393:32" pos:end="393:38">wpsList</name> <init pos:start="393:40" pos:end="393:58">= <expr pos:start="393:42" pos:end="393:58"><operator pos:start="393:42" pos:end="393:44">new</operator> <call pos:start="393:46" pos:end="393:58"><name pos:start="393:46" pos:end="393:56"><name pos:start="393:46" pos:end="393:54">ArrayList</name><argument_list type="generic" pos:start="393:55" pos:end="393:56">&lt;&gt;</argument_list></name><argument_list pos:start="393:57" pos:end="393:58">()</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt pos:start="394:17" pos:end="394:33"><expr pos:start="394:17" pos:end="394:32"><call pos:start="394:17" pos:end="394:32"><name pos:start="394:17" pos:end="394:27"><name pos:start="394:17" pos:end="394:23">wpsList</name><operator pos:start="394:24" pos:end="394:24">.</operator><name pos:start="394:25" pos:end="394:27">add</name></name><argument_list pos:start="394:28" pos:end="394:32">(<argument pos:start="394:29" pos:end="394:31"><expr pos:start="394:29" pos:end="394:31"><name pos:start="394:29" pos:end="394:31">wps</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt pos:start="395:17" pos:end="395:34"><expr pos:start="395:17" pos:end="395:33"><call pos:start="395:17" pos:end="395:33"><name pos:start="395:17" pos:end="395:27"><name pos:start="395:17" pos:end="395:23">wpsList</name><operator pos:start="395:24" pos:end="395:24">.</operator><name pos:start="395:25" pos:end="395:27">add</name></name><argument_list pos:start="395:28" pos:end="395:33">(<argument pos:start="395:29" pos:end="395:32"><expr pos:start="395:29" pos:end="395:32"><name pos:start="395:29" pos:end="395:32">wps2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<decl_stmt pos:start="396:17" pos:end="396:99"><decl pos:start="396:17" pos:end="396:98"><type pos:start="396:17" pos:end="396:27"><name pos:start="396:17" pos:end="396:27">IFlightPlan</name></type> <name pos:start="396:29" pos:end="396:37">homePlane</name> <init pos:start="396:39" pos:end="396:98">= <expr pos:start="396:41" pos:end="396:98"><call pos:start="396:41" pos:end="396:98"><name pos:start="396:41" pos:end="396:64"><name pos:start="396:41" pos:end="396:57">FlightPlanFactory</name><operator pos:start="396:58" pos:end="396:58">.</operator><name pos:start="396:59" pos:end="396:64">create</name></name><argument_list pos:start="396:65" pos:end="396:98">(<argument pos:start="396:66" pos:end="396:70"><expr pos:start="396:66" pos:end="396:70"><name pos:start="396:66" pos:end="396:70">uavid</name></expr></argument>, <argument pos:start="396:73" pos:end="396:88"><expr pos:start="396:73" pos:end="396:88"><literal type="string" pos:start="396:73" pos:end="396:88">"Return to Home"</literal></expr></argument>, <argument pos:start="396:91" pos:end="396:97"><expr pos:start="396:91" pos:end="396:97"><name pos:start="396:91" pos:end="396:97">wpsList</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<try pos:start="397:17" pos:end="412:17">try <block pos:start="397:21" pos:end="410:17">{<block_content pos:start="398:25" pos:end="409:59">
			<expr_stmt pos:start="398:25" pos:end="398:71"><expr pos:start="398:25" pos:end="398:70"><call pos:start="398:25" pos:end="398:70"><name pos:start="398:25" pos:end="398:52"><name pos:start="398:25" pos:end="398:39">planPoolManager</name><operator pos:start="398:40" pos:end="398:40">.</operator><name pos:start="398:41" pos:end="398:52">overridePlan</name></name><argument_list pos:start="398:53" pos:end="398:70">(<argument pos:start="398:54" pos:end="398:62"><expr pos:start="398:54" pos:end="398:62"><name pos:start="398:54" pos:end="398:62">homePlane</name></expr></argument>, <argument pos:start="398:65" pos:end="398:69"><expr pos:start="398:65" pos:end="398:69"><name pos:start="398:65" pos:end="398:69">uavid</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<if_stmt pos:start="399:25" pos:end="401:25"><if pos:start="399:25" pos:end="401:25">if <condition pos:start="399:28" pos:end="399:66">(<expr pos:start="399:29" pos:end="399:65"><call pos:start="399:29" pos:end="399:54"><name pos:start="399:29" pos:end="399:52"><name pos:start="399:29" pos:end="399:33">drone</name><operator pos:start="399:34" pos:end="399:34">.</operator><name pos:start="399:35" pos:end="399:52">getFlightModeState</name></name><argument_list pos:start="399:53" pos:end="399:54">()</argument_list></call><operator pos:start="399:55" pos:end="399:55">.</operator><call pos:start="399:56" pos:end="399:65"><name pos:start="399:56" pos:end="399:63">isFlying</name><argument_list pos:start="399:64" pos:end="399:65">()</argument_list></call></expr>)</condition> <block pos:start="399:68" pos:end="401:25">{<block_content pos:start="400:33" pos:end="400:76">
				<expr_stmt pos:start="400:33" pos:end="400:76"><expr pos:start="400:33" pos:end="400:75"><call pos:start="400:33" pos:end="400:58"><name pos:start="400:33" pos:end="400:56"><name pos:start="400:33" pos:end="400:37">drone</name><operator pos:start="400:38" pos:end="400:38">.</operator><name pos:start="400:39" pos:end="400:56">getFlightModeState</name></name><argument_list pos:start="400:57" pos:end="400:58">()</argument_list></call><operator pos:start="400:59" pos:end="400:59">.</operator><call pos:start="400:60" pos:end="400:75"><name pos:start="400:60" pos:end="400:73">setModeToInAir</name><argument_list pos:start="400:74" pos:end="400:75">()</argument_list></call></expr>;</expr_stmt>
			</block_content>}</block></if></if_stmt>
			<decl_stmt pos:start="402:25" pos:end="402:83"><decl pos:start="402:25" pos:end="402:82"><type pos:start="402:25" pos:end="402:39"><name pos:start="402:25" pos:end="402:39">IFlightDirector</name></type> <name pos:start="402:41" pos:end="402:56">flightDirectives</name> <init pos:start="402:58" pos:end="402:82">= <expr pos:start="402:60" pos:end="402:82"><operator pos:start="402:60" pos:end="402:62">new</operator> <call pos:start="402:64" pos:end="402:82"><name pos:start="402:64" pos:end="402:75">SoloDirector</name><argument_list pos:start="402:76" pos:end="402:82">(<argument pos:start="402:77" pos:end="402:81"><expr pos:start="402:77" pos:end="402:81"><name pos:start="402:77" pos:end="402:81">drone</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<expr_stmt pos:start="403:25" pos:end="403:80"><expr pos:start="403:25" pos:end="403:79"><call pos:start="403:25" pos:end="403:79"><name pos:start="403:25" pos:end="403:53"><name pos:start="403:25" pos:end="403:40">flightDirectives</name><operator pos:start="403:41" pos:end="403:41">.</operator><name pos:start="403:42" pos:end="403:53">setWayPoints</name></name><argument_list pos:start="403:54" pos:end="403:79">(<argument pos:start="403:55" pos:end="403:78"><expr pos:start="403:55" pos:end="403:78"><call pos:start="403:55" pos:end="403:78"><name pos:start="403:55" pos:end="403:76"><name pos:start="403:55" pos:end="403:63">homePlane</name><operator pos:start="403:64" pos:end="403:64">.</operator><name pos:start="403:65" pos:end="403:76">getWayPoints</name></name><argument_list pos:start="403:77" pos:end="403:78">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt pos:start="404:25" pos:end="404:76"><expr pos:start="404:25" pos:end="404:75"><call pos:start="404:25" pos:end="404:44"><name pos:start="404:25" pos:end="404:42"><name pos:start="404:25" pos:end="404:29">drone</name><operator pos:start="404:30" pos:end="404:30">.</operator><name pos:start="404:31" pos:end="404:42">getMessenger</name></name><argument_list pos:start="404:43" pos:end="404:44">()</argument_list></call><operator pos:start="404:45" pos:end="404:45">.</operator><call pos:start="404:46" pos:end="404:75"><name pos:start="404:46" pos:end="404:57">assignFlight</name><argument_list pos:start="404:58" pos:end="404:75">(<argument pos:start="404:59" pos:end="404:74"><expr pos:start="404:59" pos:end="404:74"><name pos:start="404:59" pos:end="404:74">flightDirectives</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt pos:start="405:25" pos:end="405:62"><expr pos:start="405:25" pos:end="405:61"><call pos:start="405:25" pos:end="405:61"><name pos:start="405:25" pos:end="405:50"><name pos:start="405:25" pos:end="405:46">awaitingLandingFlights</name><operator pos:start="405:47" pos:end="405:47">.</operator><name pos:start="405:48" pos:end="405:50">add</name></name><argument_list pos:start="405:51" pos:end="405:61">(<argument pos:start="405:52" pos:end="405:60"><expr pos:start="405:52" pos:end="405:60"><name pos:start="405:52" pos:end="405:60">homePlane</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

			<expr_stmt pos:start="407:25" pos:end="407:69"><expr pos:start="407:25" pos:end="407:68"><call pos:start="407:25" pos:end="407:50"><name pos:start="407:25" pos:end="407:48"><name pos:start="407:25" pos:end="407:29">drone</name><operator pos:start="407:30" pos:end="407:30">.</operator><name pos:start="407:31" pos:end="407:48">getFlightModeState</name></name><argument_list pos:start="407:49" pos:end="407:50">()</argument_list></call><operator pos:start="407:51" pos:end="407:51">.</operator><call pos:start="407:52" pos:end="407:68"><name pos:start="407:52" pos:end="407:66">setModeToFlying</name><argument_list pos:start="407:67" pos:end="407:68">()</argument_list></call></expr>;</expr_stmt>
			<expr_stmt pos:start="408:25" pos:end="408:45"><expr pos:start="408:25" pos:end="408:44"><call pos:start="408:25" pos:end="408:44"><name pos:start="408:25" pos:end="408:42"><name pos:start="408:25" pos:end="408:29">drone</name><operator pos:start="408:30" pos:end="408:30">.</operator><name pos:start="408:31" pos:end="408:42">returnToHome</name></name><argument_list pos:start="408:43" pos:end="408:44">()</argument_list></call></expr>;</expr_stmt>
			<expr_stmt pos:start="409:25" pos:end="409:59"><expr pos:start="409:25" pos:end="409:58"><call pos:start="409:25" pos:end="409:58"><name pos:start="409:25" pos:end="409:51"><name pos:start="409:25" pos:end="409:33">homePlane</name><operator pos:start="409:34" pos:end="409:34">.</operator><name pos:start="409:35" pos:end="409:51">setStatusToFlying</name></name><argument_list pos:start="409:52" pos:end="409:58">(<argument pos:start="409:53" pos:end="409:57"><expr pos:start="409:53" pos:end="409:57"><name pos:start="409:53" pos:end="409:57">drone</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		</block_content>}</block> <catch pos:start="410:19" pos:end="412:17">catch <parameter_list pos:start="410:25" pos:end="410:47">(<parameter pos:start="410:26" pos:end="410:46"><decl pos:start="410:26" pos:end="410:46"><type pos:start="410:26" pos:end="410:46"><name pos:start="410:26" pos:end="410:44">FlightZoneException</name></type> <name pos:start="410:46" pos:end="410:46">e</name></decl></parameter>)</parameter_list> <block pos:start="410:49" pos:end="412:17">{<block_content pos:start="411:25" pos:end="411:40">
			<expr_stmt pos:start="411:25" pos:end="411:40"><expr pos:start="411:25" pos:end="411:39"><call pos:start="411:25" pos:end="411:39"><name pos:start="411:25" pos:end="411:36"><name pos:start="411:25" pos:end="411:30">LOGGER</name><operator pos:start="411:31" pos:end="411:31">.</operator><name pos:start="411:32" pos:end="411:36">error</name></name><argument_list pos:start="411:37" pos:end="411:39">(<argument pos:start="411:38" pos:end="411:38"><expr pos:start="411:38" pos:end="411:38"><name pos:start="411:38" pos:end="411:38">e</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		</block_content>}</block></catch></try>
	</block_content>}</block></function>

	<function pos:start="415:9" pos:end="417:9"><type pos:start="415:9" pos:end="415:19"><specifier pos:start="415:9" pos:end="415:14">public</specifier> <name pos:start="415:16" pos:end="415:19">void</name></type> <name pos:start="415:21" pos:end="415:40">cancelPendingFlights</name><parameter_list pos:start="415:41" pos:end="415:54">(<parameter pos:start="415:42" pos:end="415:53"><decl pos:start="415:42" pos:end="415:53"><type pos:start="415:42" pos:end="415:47"><name pos:start="415:42" pos:end="415:47">String</name></type> <name pos:start="415:49" pos:end="415:53">uavid</name></decl></parameter>)</parameter_list> <throws pos:start="415:56" pos:end="415:76">throws <argument pos:start="415:63" pos:end="415:76"><expr pos:start="415:63" pos:end="415:76"><name pos:start="415:63" pos:end="415:76">DroneException</name></expr></argument></throws> <block pos:start="415:78" pos:end="417:9">{<block_content pos:start="416:17" pos:end="416:72">
		<expr_stmt pos:start="416:17" pos:end="416:72"><expr pos:start="416:17" pos:end="416:71"><call pos:start="416:17" pos:end="416:45"><name pos:start="416:17" pos:end="416:43"><name pos:start="416:17" pos:end="416:31">PlanPoolManager</name><operator pos:start="416:32" pos:end="416:32">.</operator><name pos:start="416:33" pos:end="416:43">getInstance</name></name><argument_list pos:start="416:44" pos:end="416:45">()</argument_list></call><operator pos:start="416:46" pos:end="416:46">.</operator><call pos:start="416:47" pos:end="416:71"><name pos:start="416:47" pos:end="416:64">cancelPendingPlans</name><argument_list pos:start="416:65" pos:end="416:71">(<argument pos:start="416:66" pos:end="416:70"><expr pos:start="416:66" pos:end="416:70"><name pos:start="416:66" pos:end="416:70">uavid</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	</block_content>}</block></function>

	<function pos:start="419:9" pos:end="426:9"><type pos:start="419:9" pos:end="419:19"><specifier pos:start="419:9" pos:end="419:14">public</specifier> <name pos:start="419:16" pos:end="419:19">void</name></type> <name pos:start="419:21" pos:end="419:31">pauseFlight</name><parameter_list pos:start="419:32" pos:end="419:45">(<parameter pos:start="419:33" pos:end="419:44"><decl pos:start="419:33" pos:end="419:44"><type pos:start="419:33" pos:end="419:38"><name pos:start="419:33" pos:end="419:38">String</name></type> <name pos:start="419:40" pos:end="419:44">uavid</name></decl></parameter>)</parameter_list> <throws pos:start="419:47" pos:end="419:67">throws <argument pos:start="419:54" pos:end="419:67"><expr pos:start="419:54" pos:end="419:67"><name pos:start="419:54" pos:end="419:67">DroneException</name></expr></argument></throws> <block pos:start="419:69" pos:end="426:9">{<block_content pos:start="420:17" pos:end="425:42">
		<decl_stmt pos:start="420:17" pos:end="420:74"><decl pos:start="420:17" pos:end="420:73"><type pos:start="420:17" pos:end="420:28"><name pos:start="420:17" pos:end="420:28">ManagedDrone</name></type> <name pos:start="420:30" pos:end="420:34">drone</name> <init pos:start="420:36" pos:end="420:73">= <expr pos:start="420:38" pos:end="420:73"><call pos:start="420:38" pos:end="420:73"><name pos:start="420:38" pos:end="420:66"><name pos:start="420:38" pos:end="420:47">droneFleet</name><operator pos:start="420:48" pos:end="420:48">.</operator><name pos:start="420:49" pos:end="420:66">getRegisteredDrone</name></name><argument_list pos:start="420:67" pos:end="420:73">(<argument pos:start="420:68" pos:end="420:72"><expr pos:start="420:68" pos:end="420:72"><name pos:start="420:68" pos:end="420:72">uavid</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<if_stmt pos:start="421:17" pos:end="423:17"><if pos:start="421:17" pos:end="423:17">if <condition pos:start="421:20" pos:end="421:74">(<expr pos:start="421:21" pos:end="421:73"><call pos:start="421:21" pos:end="421:52"><name pos:start="421:21" pos:end="421:50"><name pos:start="421:21" pos:end="421:25">drone</name><operator pos:start="421:26" pos:end="421:26">.</operator><name pos:start="421:27" pos:end="421:50">getFlightSafetyModeState</name></name><argument_list pos:start="421:51" pos:end="421:52">()</argument_list></call><operator pos:start="421:53" pos:end="421:53">.</operator><call pos:start="421:54" pos:end="421:73"><name pos:start="421:54" pos:end="421:71">isSafetyModeHalted</name><argument_list pos:start="421:72" pos:end="421:73">()</argument_list></call></expr>)</condition> <block pos:start="421:76" pos:end="423:17">{<block_content pos:start="422:25" pos:end="422:31">
			<return pos:start="422:25" pos:end="422:31">return;</return>
		</block_content>}</block></if></if_stmt>
		<expr_stmt pos:start="424:17" pos:end="424:61"><expr pos:start="424:17" pos:end="424:60"><call pos:start="424:17" pos:end="424:60"><name pos:start="424:17" pos:end="424:27"><name pos:start="424:17" pos:end="424:22">LOGGER</name><operator pos:start="424:23" pos:end="424:23">.</operator><name pos:start="424:24" pos:end="424:27">info</name></name><argument_list pos:start="424:28" pos:end="424:60">(<argument pos:start="424:29" pos:end="424:59"><expr pos:start="424:29" pos:end="424:59"><name pos:start="424:29" pos:end="424:33">uavid</name> <operator pos:start="424:35" pos:end="424:35">+</operator> <literal type="string" pos:start="424:37" pos:end="424:59">" Pause current flight"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt pos:start="425:17" pos:end="425:42"><expr pos:start="425:17" pos:end="425:41"><call pos:start="425:17" pos:end="425:41"><name pos:start="425:17" pos:end="425:33"><name pos:start="425:17" pos:end="425:21">drone</name><operator pos:start="425:22" pos:end="425:22">.</operator><name pos:start="425:23" pos:end="425:33">haltInPlace</name></name><argument_list pos:start="425:34" pos:end="425:41">(<argument pos:start="425:35" pos:end="425:40"><expr pos:start="425:35" pos:end="425:40"><literal type="number" pos:start="425:35" pos:end="425:40">300000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	</block_content>}</block></function>

	<function pos:start="428:9" pos:end="432:9"><type pos:start="428:9" pos:end="428:19"><specifier pos:start="428:9" pos:end="428:14">public</specifier> <name pos:start="428:16" pos:end="428:19">void</name></type> <name pos:start="428:21" pos:end="428:32">resumeFlight</name><parameter_list pos:start="428:33" pos:end="428:46">(<parameter pos:start="428:34" pos:end="428:45"><decl pos:start="428:34" pos:end="428:45"><type pos:start="428:34" pos:end="428:39"><name pos:start="428:34" pos:end="428:39">String</name></type> <name pos:start="428:41" pos:end="428:45">uavid</name></decl></parameter>)</parameter_list> <throws pos:start="428:48" pos:end="428:89">throws <argument pos:start="428:55" pos:end="428:68"><expr pos:start="428:55" pos:end="428:68"><name pos:start="428:55" pos:end="428:68">DroneException</name></expr></argument>, <argument pos:start="428:71" pos:end="428:89"><expr pos:start="428:71" pos:end="428:89"><name pos:start="428:71" pos:end="428:89">FlightZoneException</name></expr></argument></throws> <block pos:start="428:91" pos:end="432:9">{<block_content pos:start="429:17" pos:end="431:37">
		<expr_stmt pos:start="429:17" pos:end="429:62"><expr pos:start="429:17" pos:end="429:61"><call pos:start="429:17" pos:end="429:61"><name pos:start="429:17" pos:end="429:27"><name pos:start="429:17" pos:end="429:22">LOGGER</name><operator pos:start="429:23" pos:end="429:23">.</operator><name pos:start="429:24" pos:end="429:27">info</name></name><argument_list pos:start="429:28" pos:end="429:61">(<argument pos:start="429:29" pos:end="429:60"><expr pos:start="429:29" pos:end="429:60"><name pos:start="429:29" pos:end="429:33">uavid</name> <operator pos:start="429:35" pos:end="429:35">+</operator> <literal type="string" pos:start="429:37" pos:end="429:60">" Resume current flight"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<decl_stmt pos:start="430:17" pos:end="430:74"><decl pos:start="430:17" pos:end="430:73"><type pos:start="430:17" pos:end="430:28"><name pos:start="430:17" pos:end="430:28">ManagedDrone</name></type> <name pos:start="430:30" pos:end="430:34">drone</name> <init pos:start="430:36" pos:end="430:73">= <expr pos:start="430:38" pos:end="430:73"><call pos:start="430:38" pos:end="430:73"><name pos:start="430:38" pos:end="430:66"><name pos:start="430:38" pos:end="430:47">droneFleet</name><operator pos:start="430:48" pos:end="430:48">.</operator><name pos:start="430:49" pos:end="430:66">getRegisteredDrone</name></name><argument_list pos:start="430:67" pos:end="430:73">(<argument pos:start="430:68" pos:end="430:72"><expr pos:start="430:68" pos:end="430:72"><name pos:start="430:68" pos:end="430:72">uavid</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt pos:start="431:17" pos:end="431:37"><expr pos:start="431:17" pos:end="431:36"><call pos:start="431:17" pos:end="431:36"><name pos:start="431:17" pos:end="431:34"><name pos:start="431:17" pos:end="431:21">drone</name><operator pos:start="431:22" pos:end="431:22">.</operator><name pos:start="431:23" pos:end="431:34">resumeFlight</name></name><argument_list pos:start="431:35" pos:end="431:36">()</argument_list></call></expr>;</expr_stmt>
	</block_content>}</block></function>

	<function pos:start="434:9" pos:end="438:9"><type pos:start="434:9" pos:end="434:19"><specifier pos:start="434:9" pos:end="434:14">public</specifier> <name pos:start="434:16" pos:end="434:19">void</name></type> <name pos:start="434:21" pos:end="434:27">takeoff</name><parameter_list pos:start="434:28" pos:end="434:58">(<parameter pos:start="434:29" pos:end="434:40"><decl pos:start="434:29" pos:end="434:40"><type pos:start="434:29" pos:end="434:40"><name pos:start="434:29" pos:end="434:34">String</name></type> <name pos:start="434:36" pos:end="434:40">uavid</name></decl></parameter>, <parameter pos:start="434:43" pos:end="434:57"><decl pos:start="434:43" pos:end="434:57"><type pos:start="434:43" pos:end="434:57"><name pos:start="434:43" pos:end="434:48">double</name></type> <name pos:start="434:50" pos:end="434:57">altitude</name></decl></parameter>)</parameter_list> <throws pos:start="434:60" pos:end="434:101">throws <argument pos:start="434:67" pos:end="434:80"><expr pos:start="434:67" pos:end="434:80"><name pos:start="434:67" pos:end="434:80">DroneException</name></expr></argument>, <argument pos:start="434:83" pos:end="434:101"><expr pos:start="434:83" pos:end="434:101"><name pos:start="434:83" pos:end="434:101">FlightZoneException</name></expr></argument></throws> <block pos:start="434:103" pos:end="438:9">{<block_content pos:start="435:17" pos:end="437:115">
		<expr_stmt pos:start="435:17" pos:end="435:48"><expr pos:start="435:17" pos:end="435:47"><call pos:start="435:17" pos:end="435:47"><name pos:start="435:17" pos:end="435:27"><name pos:start="435:17" pos:end="435:22">LOGGER</name><operator pos:start="435:23" pos:end="435:23">.</operator><name pos:start="435:24" pos:end="435:27">info</name></name><argument_list pos:start="435:28" pos:end="435:47">(<argument pos:start="435:29" pos:end="435:46"><expr pos:start="435:29" pos:end="435:46"><name pos:start="435:29" pos:end="435:33">uavid</name> <operator pos:start="435:35" pos:end="435:35">+</operator> <literal type="string" pos:start="435:37" pos:end="435:46">" Takeoff"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<decl_stmt pos:start="436:17" pos:end="436:74"><decl pos:start="436:17" pos:end="436:73"><type pos:start="436:17" pos:end="436:28"><name pos:start="436:17" pos:end="436:28">ManagedDrone</name></type> <name pos:start="436:30" pos:end="436:34">drone</name> <init pos:start="436:36" pos:end="436:73">= <expr pos:start="436:38" pos:end="436:73"><call pos:start="436:38" pos:end="436:73"><name pos:start="436:38" pos:end="436:66"><name pos:start="436:38" pos:end="436:47">droneFleet</name><operator pos:start="436:48" pos:end="436:48">.</operator><name pos:start="436:49" pos:end="436:66">getRegisteredDrone</name></name><argument_list pos:start="436:67" pos:end="436:73">(<argument pos:start="436:68" pos:end="436:72"><expr pos:start="436:68" pos:end="436:72"><name pos:start="436:68" pos:end="436:72">uavid</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt pos:start="437:17" pos:end="437:115"><expr pos:start="437:17" pos:end="437:114"><call pos:start="437:17" pos:end="437:45"><name pos:start="437:17" pos:end="437:43"><name pos:start="437:17" pos:end="437:31">PlanPoolManager</name><operator pos:start="437:32" pos:end="437:32">.</operator><name pos:start="437:33" pos:end="437:43">getInstance</name></name><argument_list pos:start="437:44" pos:end="437:45">()</argument_list></call><operator pos:start="437:46" pos:end="437:46">.</operator><call pos:start="437:47" pos:end="437:114"><name pos:start="437:47" pos:end="437:56">addNewPlan</name><argument_list pos:start="437:57" pos:end="437:114">(<argument pos:start="437:58" pos:end="437:113"><expr pos:start="437:58" pos:end="437:113"><operator pos:start="437:58" pos:end="437:60">new</operator> <call pos:start="437:62" pos:end="437:113"><name pos:start="437:62" pos:end="437:84">SimpleTakeoffFlightPlan</name><argument_list pos:start="437:85" pos:end="437:113">(<argument pos:start="437:86" pos:end="437:90"><expr pos:start="437:86" pos:end="437:90"><name pos:start="437:86" pos:end="437:90">drone</name></expr></argument>, <argument pos:start="437:93" pos:end="437:102"><expr pos:start="437:93" pos:end="437:102"><literal type="string" pos:start="437:93" pos:end="437:102">"TAKE-OFF"</literal></expr></argument>, <argument pos:start="437:105" pos:end="437:112"><expr pos:start="437:105" pos:end="437:112"><name pos:start="437:105" pos:end="437:112">altitude</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	</block_content>}</block></function>

	<function pos:start="440:9" pos:end="443:9"><type pos:start="440:9" pos:end="440:19"><specifier pos:start="440:9" pos:end="440:14">public</specifier> <name pos:start="440:16" pos:end="440:19">void</name></type> <name pos:start="440:21" pos:end="440:33">emergencyStop</name><parameter_list pos:start="440:34" pos:end="440:47">(<parameter pos:start="440:35" pos:end="440:46"><decl pos:start="440:35" pos:end="440:46"><type pos:start="440:35" pos:end="440:40"><name pos:start="440:35" pos:end="440:40">String</name></type> <name pos:start="440:42" pos:end="440:46">uavid</name></decl></parameter>)</parameter_list> <throws pos:start="440:49" pos:end="440:69">throws <argument pos:start="440:56" pos:end="440:69"><expr pos:start="440:56" pos:end="440:69"><name pos:start="440:56" pos:end="440:69">DroneException</name></expr></argument></throws> <block pos:start="440:71" pos:end="443:9">{<block_content pos:start="441:17" pos:end="442:38">
		<decl_stmt pos:start="441:17" pos:end="441:74"><decl pos:start="441:17" pos:end="441:73"><type pos:start="441:17" pos:end="441:28"><name pos:start="441:17" pos:end="441:28">ManagedDrone</name></type> <name pos:start="441:30" pos:end="441:34">drone</name> <init pos:start="441:36" pos:end="441:73">= <expr pos:start="441:38" pos:end="441:73"><call pos:start="441:38" pos:end="441:73"><name pos:start="441:38" pos:end="441:66"><name pos:start="441:38" pos:end="441:47">droneFleet</name><operator pos:start="441:48" pos:end="441:48">.</operator><name pos:start="441:49" pos:end="441:66">getRegisteredDrone</name></name><argument_list pos:start="441:67" pos:end="441:73">(<argument pos:start="441:68" pos:end="441:72"><expr pos:start="441:68" pos:end="441:72"><name pos:start="441:68" pos:end="441:72">uavid</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt pos:start="442:17" pos:end="442:38"><expr pos:start="442:17" pos:end="442:37"><call pos:start="442:17" pos:end="442:37"><name pos:start="442:17" pos:end="442:35"><name pos:start="442:17" pos:end="442:21">drone</name><operator pos:start="442:22" pos:end="442:22">.</operator><name pos:start="442:23" pos:end="442:35">emergencyStop</name></name><argument_list pos:start="442:36" pos:end="442:37">()</argument_list></call></expr>;</expr_stmt>
	</block_content>}</block></function>
}</block></class>
</unit>
