<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="Java" filename="flatCode/RuntimeDroneTypes.java" pos:tabs="8"><package pos:start="1:1" pos:end="1:36">package <name pos:start="1:9" pos:end="1:35"><name pos:start="1:9" pos:end="1:11">edu</name><operator pos:start="1:12" pos:end="1:12">.</operator><name pos:start="1:13" pos:end="1:14">nd</name><operator pos:start="1:15" pos:end="1:15">.</operator><name pos:start="1:16" pos:end="1:24">dronology</name><operator pos:start="1:25" pos:end="1:25">.</operator><name pos:start="1:26" pos:end="1:29">core</name><operator pos:start="1:30" pos:end="1:30">.</operator><name pos:start="1:31" pos:end="1:35">fleet</name></name>;</package>

<import pos:start="3:1" pos:end="3:21">import <name pos:start="3:8" pos:end="3:20"><name pos:start="3:8" pos:end="3:11">java</name><operator pos:start="3:12" pos:end="3:12">.</operator><name pos:start="3:13" pos:end="3:16">util</name><operator pos:start="3:17" pos:end="3:17">.</operator><name pos:start="3:18" pos:end="3:20">Map</name></name>;</import>
<import pos:start="4:1" pos:end="4:46">import <name pos:start="4:8" pos:end="4:45"><name pos:start="4:8" pos:end="4:11">java</name><operator pos:start="4:12" pos:end="4:12">.</operator><name pos:start="4:13" pos:end="4:16">util</name><operator pos:start="4:17" pos:end="4:17">.</operator><name pos:start="4:18" pos:end="4:27">concurrent</name><operator pos:start="4:28" pos:end="4:28">.</operator><name pos:start="4:29" pos:end="4:45">ConcurrentHashMap</name></name>;</import>

<import pos:start="6:1" pos:end="6:55">import <name pos:start="6:8" pos:end="6:54"><name pos:start="6:8" pos:end="6:10">edu</name><operator pos:start="6:11" pos:end="6:11">.</operator><name pos:start="6:12" pos:end="6:13">nd</name><operator pos:start="6:14" pos:end="6:14">.</operator><name pos:start="6:15" pos:end="6:23">dronology</name><operator pos:start="6:24" pos:end="6:24">.</operator><name pos:start="6:25" pos:end="6:28">core</name><operator pos:start="6:29" pos:end="6:29">.</operator><name pos:start="6:30" pos:end="6:39">exceptions</name><operator pos:start="6:40" pos:end="6:40">.</operator><name pos:start="6:41" pos:end="6:54">DroneException</name></name>;</import>
<import pos:start="7:1" pos:end="7:60">import <name pos:start="7:8" pos:end="7:59"><name pos:start="7:8" pos:end="7:10">edu</name><operator pos:start="7:11" pos:end="7:11">.</operator><name pos:start="7:12" pos:end="7:13">nd</name><operator pos:start="7:14" pos:end="7:14">.</operator><name pos:start="7:15" pos:end="7:23">dronology</name><operator pos:start="7:24" pos:end="7:24">.</operator><name pos:start="7:25" pos:end="7:28">core</name><operator pos:start="7:29" pos:end="7:29">.</operator><name pos:start="7:30" pos:end="7:39">exceptions</name><operator pos:start="7:40" pos:end="7:40">.</operator><name pos:start="7:41" pos:end="7:59">FlightZoneException</name></name>;</import>
<import pos:start="8:1" pos:end="8:58">import <name pos:start="8:8" pos:end="8:57"><name pos:start="8:8" pos:end="8:10">edu</name><operator pos:start="8:11" pos:end="8:11">.</operator><name pos:start="8:12" pos:end="8:13">nd</name><operator pos:start="8:14" pos:end="8:14">.</operator><name pos:start="8:15" pos:end="8:23">dronology</name><operator pos:start="8:24" pos:end="8:24">.</operator><name pos:start="8:25" pos:end="8:28">core</name><operator pos:start="8:29" pos:end="8:29">.</operator><name pos:start="8:30" pos:end="8:36">vehicle</name><operator pos:start="8:37" pos:end="8:37">.</operator><name pos:start="8:38" pos:end="8:57">IDroneCommandHandler</name></name>;</import>
<import pos:start="9:1" pos:end="9:30">import <name pos:start="9:8" pos:end="9:29"><name pos:start="9:8" pos:end="9:10">net</name><operator pos:start="9:11" pos:end="9:11">.</operator><name pos:start="9:12" pos:end="9:13">mv</name><operator pos:start="9:14" pos:end="9:14">.</operator><name pos:start="9:15" pos:end="9:21">logging</name><operator pos:start="9:22" pos:end="9:22">.</operator><name pos:start="9:23" pos:end="9:29">ILogger</name></name>;</import>
<import pos:start="10:1" pos:end="10:37">import <name pos:start="10:8" pos:end="10:36"><name pos:start="10:8" pos:end="10:10">net</name><operator pos:start="10:11" pos:end="10:11">.</operator><name pos:start="10:12" pos:end="10:13">mv</name><operator pos:start="10:14" pos:end="10:14">.</operator><name pos:start="10:15" pos:end="10:21">logging</name><operator pos:start="10:22" pos:end="10:22">.</operator><name pos:start="10:23" pos:end="10:36">LoggerProvider</name></name>;</import>

<comment type="block" format="javadoc" pos:start="12:1" pos:end="18:3">/**
 * This is a SINGLETON class. To get an instance call getInstance() Sets the runtime mode of FlightZone either as SIMULATION or PHYSICAL The mode may only be set one time during execution. Simulation
 * uses soft drone objects. Physical uses real drones controlled using Dronekit API.
 * 
 * @author Jane Cleland-Huang 
 *
 */</comment>
<class pos:start="19:1" pos:end="116:1"><specifier pos:start="19:1" pos:end="19:6">public</specifier> class <name pos:start="19:14" pos:end="19:30">RuntimeDroneTypes</name> <block pos:start="19:32" pos:end="116:1">{
	<enum pos:start="20:9" pos:end="22:9"><specifier pos:start="20:9" pos:end="20:15">private</specifier> enum <name pos:start="20:22" pos:end="20:25">Mode</name> <block pos:start="20:27" pos:end="22:9">{
		<decl pos:start="21:17" pos:end="21:26"><name pos:start="21:17" pos:end="21:26">SIMULATION</name></decl>, <decl pos:start="21:29" pos:end="21:36"><name pos:start="21:29" pos:end="21:36">PHYSICAL</name></decl>
	}</block></enum>

	<decl_stmt pos:start="24:9" pos:end="24:96"><decl pos:start="24:9" pos:end="24:95"><type pos:start="24:9" pos:end="24:36"><specifier pos:start="24:9" pos:end="24:15">private</specifier> <specifier pos:start="24:17" pos:end="24:22">static</specifier> <specifier pos:start="24:24" pos:end="24:28">final</specifier> <name pos:start="24:30" pos:end="24:36">ILogger</name></type> <name pos:start="24:38" pos:end="24:43">LOGGER</name> <init pos:start="24:45" pos:end="24:95">= <expr pos:start="24:47" pos:end="24:95"><call pos:start="24:47" pos:end="24:95"><name pos:start="24:47" pos:end="24:70"><name pos:start="24:47" pos:end="24:60">LoggerProvider</name><operator pos:start="24:61" pos:end="24:61">.</operator><name pos:start="24:62" pos:end="24:70">getLogger</name></name><argument_list pos:start="24:71" pos:end="24:95">(<argument pos:start="24:72" pos:end="24:94"><expr pos:start="24:72" pos:end="24:94"><name pos:start="24:72" pos:end="24:94"><name pos:start="24:72" pos:end="24:88">RuntimeDroneTypes</name><operator pos:start="24:89" pos:end="24:89">.</operator><name pos:start="24:90" pos:end="24:94">class</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

	<decl_stmt pos:start="26:9" pos:end="26:33"><decl pos:start="26:9" pos:end="26:32"><type pos:start="26:9" pos:end="26:20"><specifier pos:start="26:9" pos:end="26:15">private</specifier> <name pos:start="26:17" pos:end="26:20">Mode</name></type> <name pos:start="26:22" pos:end="26:32">currentMode</name></decl>;</decl_stmt>

	<decl_stmt pos:start="28:9" pos:end="28:86"><decl pos:start="28:9" pos:end="28:85"><type pos:start="28:9" pos:end="28:41"><name pos:start="28:9" pos:end="28:41"><name pos:start="28:9" pos:end="28:11">Map</name><argument_list type="generic" pos:start="28:12" pos:end="28:41">&lt;<argument pos:start="28:13" pos:end="28:18"><name pos:start="28:13" pos:end="28:18">String</name></argument>, <argument pos:start="28:21" pos:end="28:40"><name pos:start="28:21" pos:end="28:40">IDroneCommandHandler</name></argument>&gt;</argument_list></name></type> <name pos:start="28:43" pos:end="28:57">commandHandlers</name> <init pos:start="28:59" pos:end="28:85">= <expr pos:start="28:61" pos:end="28:85"><operator pos:start="28:61" pos:end="28:63">new</operator> <call pos:start="28:65" pos:end="28:85"><name pos:start="28:65" pos:end="28:83"><name pos:start="28:65" pos:end="28:81">ConcurrentHashMap</name><argument_list type="generic" pos:start="28:82" pos:end="28:83">&lt;&gt;</argument_list></name><argument_list pos:start="28:84" pos:end="28:85">()</argument_list></call></expr></init></decl>;</decl_stmt>
	<decl_stmt pos:start="29:9" pos:end="29:66"><decl pos:start="29:9" pos:end="29:65"><type pos:start="29:9" pos:end="29:49"><specifier pos:start="29:9" pos:end="29:15">private</specifier> <specifier pos:start="29:17" pos:end="29:22">static</specifier> <specifier pos:start="29:24" pos:end="29:31">volatile</specifier> <name pos:start="29:33" pos:end="29:49">RuntimeDroneTypes</name></type> <name pos:start="29:51" pos:end="29:58">INSTANCE</name> <init pos:start="29:60" pos:end="29:65">= <expr pos:start="29:62" pos:end="29:65"><literal type="null" pos:start="29:62" pos:end="29:65">null</literal></expr></init></decl>;</decl_stmt>

	<constructor pos:start="31:9" pos:end="32:9"><specifier pos:start="31:9" pos:end="31:17">protected</specifier> <name pos:start="31:19" pos:end="31:35">RuntimeDroneTypes</name><parameter_list pos:start="31:36" pos:end="31:37">()</parameter_list> <block pos:start="31:39" pos:end="32:9">{<block_content>
	</block_content>}</block></constructor>

	<function pos:start="34:9" pos:end="43:9"><type pos:start="34:9" pos:end="34:39"><specifier pos:start="34:9" pos:end="34:14">public</specifier> <specifier pos:start="34:16" pos:end="34:21">static</specifier> <name pos:start="34:23" pos:end="34:39">RuntimeDroneTypes</name></type> <name pos:start="34:41" pos:end="34:51">getInstance</name><parameter_list pos:start="34:52" pos:end="34:53">()</parameter_list> <block pos:start="34:55" pos:end="43:9">{<block_content pos:start="35:17" pos:end="42:32">
		<if_stmt pos:start="35:17" pos:end="41:17"><if pos:start="35:17" pos:end="41:17">if <condition pos:start="35:20" pos:end="35:37">(<expr pos:start="35:21" pos:end="35:36"><name pos:start="35:21" pos:end="35:28">INSTANCE</name> <operator pos:start="35:30" pos:end="35:31">==</operator> <literal type="null" pos:start="35:33" pos:end="35:36">null</literal></expr>)</condition> <block pos:start="35:39" pos:end="41:17">{<block_content pos:start="36:25" pos:end="40:25">
			<synchronized pos:start="36:25" pos:end="40:25">synchronized <init pos:start="36:38" pos:end="36:62">(<expr pos:start="36:39" pos:end="36:61"><name pos:start="36:39" pos:end="36:61"><name pos:start="36:39" pos:end="36:55">RuntimeDroneTypes</name><operator pos:start="36:56" pos:end="36:56">.</operator><name pos:start="36:57" pos:end="36:61">class</name></name></expr>)</init> <block pos:start="36:64" pos:end="40:25">{<block_content pos:start="37:33" pos:end="39:33">
				<if_stmt pos:start="37:33" pos:end="39:33"><if pos:start="37:33" pos:end="39:33">if <condition pos:start="37:36" pos:end="37:53">(<expr pos:start="37:37" pos:end="37:52"><name pos:start="37:37" pos:end="37:44">INSTANCE</name> <operator pos:start="37:46" pos:end="37:47">==</operator> <literal type="null" pos:start="37:49" pos:end="37:52">null</literal></expr>)</condition> <block pos:start="37:55" pos:end="39:33">{<block_content pos:start="38:41" pos:end="38:75">
					<expr_stmt pos:start="38:41" pos:end="38:75"><expr pos:start="38:41" pos:end="38:74"><name pos:start="38:41" pos:end="38:48">INSTANCE</name> <operator pos:start="38:50" pos:end="38:50">=</operator> <operator pos:start="38:52" pos:end="38:54">new</operator> <call pos:start="38:56" pos:end="38:74"><name pos:start="38:56" pos:end="38:72">RuntimeDroneTypes</name><argument_list pos:start="38:73" pos:end="38:74">()</argument_list></call></expr>;</expr_stmt>
				</block_content>}</block></if></if_stmt>
			</block_content>}</block></synchronized>
		</block_content>}</block></if></if_stmt>
		<return pos:start="42:17" pos:end="42:32">return <expr pos:start="42:24" pos:end="42:31"><name pos:start="42:24" pos:end="42:31">INSTANCE</name></expr>;</return>
	</block_content>}</block></function>

	<comment type="block" format="javadoc" pos:start="45:9" pos:end="49:11">/**
	 * Sets flightmode to SIMULATION. Does not allow the flight mode to be reset after it is initially set.
	 * 
	 * @throws FlightZoneException
	 */</comment>
	<function pos:start="50:9" pos:end="58:9"><type pos:start="50:9" pos:end="50:19"><specifier pos:start="50:9" pos:end="50:14">public</specifier> <name pos:start="50:16" pos:end="50:19">void</name></type> <name pos:start="50:21" pos:end="50:41">setVirtualEnvironment</name><parameter_list pos:start="50:42" pos:end="50:43">()</parameter_list> <throws pos:start="50:45" pos:end="50:70">throws <argument pos:start="50:52" pos:end="50:70"><expr pos:start="50:52" pos:end="50:70"><name pos:start="50:52" pos:end="50:70">FlightZoneException</name></expr></argument></throws> <block pos:start="50:72" pos:end="58:9">{<block_content pos:start="51:17" pos:end="57:131">
		<if_stmt pos:start="51:17" pos:end="57:131"><if pos:start="51:17" pos:end="53:17">if <condition pos:start="51:20" pos:end="51:40">(<expr pos:start="51:21" pos:end="51:39"><name pos:start="51:21" pos:end="51:31">currentMode</name> <operator pos:start="51:33" pos:end="51:34">==</operator> <literal type="null" pos:start="51:36" pos:end="51:39">null</literal></expr>)</condition> <block pos:start="51:42" pos:end="53:17">{<block_content pos:start="52:25" pos:end="52:54">
			<expr_stmt pos:start="52:25" pos:end="52:54"><expr pos:start="52:25" pos:end="52:53"><name pos:start="52:25" pos:end="52:35">currentMode</name> <operator pos:start="52:37" pos:end="52:37">=</operator> <name pos:start="52:39" pos:end="52:53"><name pos:start="52:39" pos:end="52:42">Mode</name><operator pos:start="52:43" pos:end="52:43">.</operator><name pos:start="52:44" pos:end="52:53">SIMULATION</name></name></expr>;</expr_stmt>
		</block_content>}</block></if> <if type="elseif" pos:start="53:19" pos:end="55:17">else if <condition pos:start="53:27" pos:end="53:56">(<expr pos:start="53:28" pos:end="53:55"><name pos:start="53:28" pos:end="53:38">currentMode</name> <operator pos:start="53:40" pos:end="53:41">==</operator> <name pos:start="53:43" pos:end="53:55"><name pos:start="53:43" pos:end="53:46">Mode</name><operator pos:start="53:47" pos:end="53:47">.</operator><name pos:start="53:48" pos:end="53:55">PHYSICAL</name></name></expr>)</condition> <block pos:start="53:58" pos:end="55:17">{<block_content>
			<comment type="line" pos:start="54:25" pos:end="54:37">// Do nothing</comment>
		</block_content>}</block></if> <else pos:start="55:19" pos:end="57:131">else<block type="pseudo" pos:start="56:25" pos:end="57:131"><block_content pos:start="56:25" pos:end="57:131">
			<throw pos:start="56:25" pos:end="57:131">throw <expr pos:start="56:31" pos:end="57:130"><operator pos:start="56:31" pos:end="56:33">new</operator> <call pos:start="56:35" pos:end="57:130"><name pos:start="56:35" pos:end="56:53">FlightZoneException</name><argument_list pos:start="56:54" pos:end="57:130">(
					<argument pos:start="57:41" pos:end="57:129"><expr pos:start="57:41" pos:end="57:129"><literal type="string" pos:start="57:41" pos:end="57:129">"Flight mode has already been set to PHYSICAL.  You may not reset to SIMULATION runtime."</literal></expr></argument>)</argument_list></call></expr>;</throw></block_content></block></else></if_stmt>
	</block_content>}</block></function>

	<comment type="block" format="javadoc" pos:start="60:9" pos:end="64:11">/**
	 * Sets flightmode to PHYSICAL Does not allow the flight mode to be reset after it is initially set.
	 * 
	 * @throws FlightZoneException
	 */</comment>
	<function pos:start="65:9" pos:end="73:9"><type pos:start="65:9" pos:end="65:19"><specifier pos:start="65:9" pos:end="65:14">public</specifier> <name pos:start="65:16" pos:end="65:19">void</name></type> <name pos:start="65:21" pos:end="65:42">setPhysicalEnvironment</name><parameter_list pos:start="65:43" pos:end="65:44">()</parameter_list> <throws pos:start="65:46" pos:end="65:71">throws <argument pos:start="65:53" pos:end="65:71"><expr pos:start="65:53" pos:end="65:71"><name pos:start="65:53" pos:end="65:71">FlightZoneException</name></expr></argument></throws> <block pos:start="65:73" pos:end="73:9">{<block_content pos:start="66:17" pos:end="72:131">
		<if_stmt pos:start="66:17" pos:end="72:131"><if pos:start="66:17" pos:end="68:17">if <condition pos:start="66:20" pos:end="66:40">(<expr pos:start="66:21" pos:end="66:39"><name pos:start="66:21" pos:end="66:31">currentMode</name> <operator pos:start="66:33" pos:end="66:34">==</operator> <literal type="null" pos:start="66:36" pos:end="66:39">null</literal></expr>)</condition> <block pos:start="66:42" pos:end="68:17">{<block_content pos:start="67:25" pos:end="67:52">
			<expr_stmt pos:start="67:25" pos:end="67:52"><expr pos:start="67:25" pos:end="67:51"><name pos:start="67:25" pos:end="67:35">currentMode</name> <operator pos:start="67:37" pos:end="67:37">=</operator> <name pos:start="67:39" pos:end="67:51"><name pos:start="67:39" pos:end="67:42">Mode</name><operator pos:start="67:43" pos:end="67:43">.</operator><name pos:start="67:44" pos:end="67:51">PHYSICAL</name></name></expr>;</expr_stmt>
		</block_content>}</block></if> <if type="elseif" pos:start="68:19" pos:end="70:17">else if <condition pos:start="68:27" pos:end="68:58">(<expr pos:start="68:28" pos:end="68:57"><name pos:start="68:28" pos:end="68:38">currentMode</name> <operator pos:start="68:40" pos:end="68:41">==</operator> <name pos:start="68:43" pos:end="68:57"><name pos:start="68:43" pos:end="68:46">Mode</name><operator pos:start="68:47" pos:end="68:47">.</operator><name pos:start="68:48" pos:end="68:57">SIMULATION</name></name></expr>)</condition> <block pos:start="68:60" pos:end="70:17">{<block_content>
			<comment type="line" pos:start="69:25" pos:end="69:37">// Do nothing</comment>
		</block_content>}</block></if> <else pos:start="70:19" pos:end="72:131">else<block type="pseudo" pos:start="71:25" pos:end="72:131"><block_content pos:start="71:25" pos:end="72:131">
			<throw pos:start="71:25" pos:end="72:131">throw <expr pos:start="71:31" pos:end="72:130"><operator pos:start="71:31" pos:end="71:33">new</operator> <call pos:start="71:35" pos:end="72:130"><name pos:start="71:35" pos:end="71:53">FlightZoneException</name><argument_list pos:start="71:54" pos:end="72:130">(
					<argument pos:start="72:41" pos:end="72:129"><expr pos:start="72:41" pos:end="72:129"><literal type="string" pos:start="72:41" pos:end="72:129">"Flight mode has already been set to SIMULATION.  You may not reset to PHYSICAL runtime."</literal></expr></argument>)</argument_list></call></expr>;</throw></block_content></block></else></if_stmt>
	</block_content>}</block></function>

	<comment type="block" format="javadoc" pos:start="75:9" pos:end="78:11">/**
	 * 
	 * @return true if in SIMULATION mode. False otherwise.
	 */</comment>
	<function pos:start="79:9" pos:end="81:9"><type pos:start="79:9" pos:end="79:22"><specifier pos:start="79:9" pos:end="79:14">public</specifier> <name pos:start="79:16" pos:end="79:22">boolean</name></type> <name pos:start="79:24" pos:end="79:35">isSimulation</name><parameter_list pos:start="79:36" pos:end="79:37">()</parameter_list> <block pos:start="79:39" pos:end="81:9">{<block_content pos:start="80:17" pos:end="80:54">
		<return pos:start="80:17" pos:end="80:54">return <expr pos:start="80:24" pos:end="80:53"><name pos:start="80:24" pos:end="80:34">currentMode</name> <operator pos:start="80:36" pos:end="80:37">==</operator> <name pos:start="80:39" pos:end="80:53"><name pos:start="80:39" pos:end="80:42">Mode</name><operator pos:start="80:43" pos:end="80:43">.</operator><name pos:start="80:44" pos:end="80:53">SIMULATION</name></name></expr>;</return>
	</block_content>}</block></function>

	<comment type="block" format="javadoc" pos:start="83:9" pos:end="86:11">/**
	 * 
	 * @return true if in PHYSICAL mode. False otherwise.
	 */</comment>
	<function pos:start="87:9" pos:end="89:9"><type pos:start="87:9" pos:end="87:22"><specifier pos:start="87:9" pos:end="87:14">public</specifier> <name pos:start="87:16" pos:end="87:22">boolean</name></type> <name pos:start="87:24" pos:end="87:33">isPhysical</name><parameter_list pos:start="87:34" pos:end="87:35">()</parameter_list> <block pos:start="87:37" pos:end="89:9">{<block_content pos:start="88:17" pos:end="88:52">
		<return pos:start="88:17" pos:end="88:52">return <expr pos:start="88:24" pos:end="88:51"><name pos:start="88:24" pos:end="88:34">currentMode</name> <operator pos:start="88:36" pos:end="88:37">==</operator> <name pos:start="88:39" pos:end="88:51"><name pos:start="88:39" pos:end="88:42">Mode</name><operator pos:start="88:43" pos:end="88:43">.</operator><name pos:start="88:44" pos:end="88:51">PHYSICAL</name></name></expr>;</return>
	</block_content>}</block></function>

	<function pos:start="91:9" pos:end="98:9"><type pos:start="91:9" pos:end="91:19"><specifier pos:start="91:9" pos:end="91:14">public</specifier> <name pos:start="91:16" pos:end="91:19">void</name></type> <name pos:start="91:21" pos:end="91:42">registerCommandHandler</name><parameter_list pos:start="91:43" pos:end="91:79">(<parameter pos:start="91:44" pos:end="91:78"><decl pos:start="91:44" pos:end="91:78"><type pos:start="91:44" pos:end="91:63"><name pos:start="91:44" pos:end="91:63">IDroneCommandHandler</name></type> <name pos:start="91:65" pos:end="91:78">commandHandler</name></decl></parameter>)</parameter_list> <throws pos:start="91:81" pos:end="91:101">throws <argument pos:start="91:88" pos:end="91:101"><expr pos:start="91:88" pos:end="91:101"><name pos:start="91:88" pos:end="91:101">DroneException</name></expr></argument></throws> <block pos:start="91:103" pos:end="98:9">{<block_content pos:start="92:17" pos:end="97:63">
		<decl_stmt pos:start="92:17" pos:end="92:65"><decl pos:start="92:17" pos:end="92:64"><type pos:start="92:17" pos:end="92:22"><name pos:start="92:17" pos:end="92:22">String</name></type> <name pos:start="92:24" pos:end="92:32">handlerId</name> <init pos:start="92:34" pos:end="92:64">= <expr pos:start="92:36" pos:end="92:64"><call pos:start="92:36" pos:end="92:64"><name pos:start="92:36" pos:end="92:62"><name pos:start="92:36" pos:end="92:49">commandHandler</name><operator pos:start="92:50" pos:end="92:50">.</operator><name pos:start="92:51" pos:end="92:62">getHandlerId</name></name><argument_list pos:start="92:63" pos:end="92:64">()</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt pos:start="93:17" pos:end="93:110"><expr pos:start="93:17" pos:end="93:109"><call pos:start="93:17" pos:end="93:109"><name pos:start="93:17" pos:end="93:27"><name pos:start="93:17" pos:end="93:22">LOGGER</name><operator pos:start="93:23" pos:end="93:23">.</operator><name pos:start="93:24" pos:end="93:27">info</name></name><argument_list pos:start="93:28" pos:end="93:109">(<argument pos:start="93:29" pos:end="93:108"><expr pos:start="93:29" pos:end="93:108"><literal type="string" pos:start="93:29" pos:end="93:59">"Drone command handler added '"</literal> <operator pos:start="93:61" pos:end="93:61">+</operator> <name pos:start="93:63" pos:end="93:71">handlerId</name> <operator pos:start="93:73" pos:end="93:73">+</operator> <literal type="string" pos:start="93:75" pos:end="93:80">"' - "</literal> <operator pos:start="93:82" pos:end="93:82">+</operator> <call pos:start="93:84" pos:end="93:108"><name pos:start="93:84" pos:end="93:106"><name pos:start="93:84" pos:end="93:97">commandHandler</name><operator pos:start="93:98" pos:end="93:98">.</operator><name pos:start="93:99" pos:end="93:106">getClass</name></name><argument_list pos:start="93:107" pos:end="93:108">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<if_stmt pos:start="94:17" pos:end="96:17"><if pos:start="94:17" pos:end="96:17">if <condition pos:start="94:20" pos:end="94:59">(<expr pos:start="94:21" pos:end="94:58"><call pos:start="94:21" pos:end="94:58"><name pos:start="94:21" pos:end="94:47"><name pos:start="94:21" pos:end="94:35">commandHandlers</name><operator pos:start="94:36" pos:end="94:36">.</operator><name pos:start="94:37" pos:end="94:47">containsKey</name></name><argument_list pos:start="94:48" pos:end="94:58">(<argument pos:start="94:49" pos:end="94:57"><expr pos:start="94:49" pos:end="94:57"><name pos:start="94:49" pos:end="94:57">handlerId</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="94:61" pos:end="96:17">{<block_content pos:start="95:25" pos:end="95:114">
			<throw pos:start="95:25" pos:end="95:114">throw <expr pos:start="95:31" pos:end="95:113"><operator pos:start="95:31" pos:end="95:33">new</operator> <call pos:start="95:35" pos:end="95:113"><name pos:start="95:35" pos:end="95:48">DroneException</name><argument_list pos:start="95:49" pos:end="95:113">(<argument pos:start="95:50" pos:end="95:112"><expr pos:start="95:50" pos:end="95:112"><literal type="string" pos:start="95:50" pos:end="95:75">"CommandHandler with id '"</literal> <operator pos:start="95:77" pos:end="95:77">+</operator> <name pos:start="95:79" pos:end="95:87">handlerId</name> <operator pos:start="95:89" pos:end="95:89">+</operator> <literal type="string" pos:start="95:91" pos:end="95:112">"' already registered"</literal></expr></argument>)</argument_list></call></expr>;</throw>
		</block_content>}</block></if></if_stmt>
		<expr_stmt pos:start="97:17" pos:end="97:63"><expr pos:start="97:17" pos:end="97:62"><call pos:start="97:17" pos:end="97:62"><name pos:start="97:17" pos:end="97:35"><name pos:start="97:17" pos:end="97:31">commandHandlers</name><operator pos:start="97:32" pos:end="97:32">.</operator><name pos:start="97:33" pos:end="97:35">put</name></name><argument_list pos:start="97:36" pos:end="97:62">(<argument pos:start="97:37" pos:end="97:45"><expr pos:start="97:37" pos:end="97:45"><name pos:start="97:37" pos:end="97:45">handlerId</name></expr></argument>, <argument pos:start="97:48" pos:end="97:61"><expr pos:start="97:48" pos:end="97:61"><name pos:start="97:48" pos:end="97:61">commandHandler</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	</block_content>}</block></function>

	<function pos:start="100:9" pos:end="105:9"><type pos:start="100:9" pos:end="100:35"><specifier pos:start="100:9" pos:end="100:14">public</specifier> <name pos:start="100:16" pos:end="100:35">IDroneCommandHandler</name></type> <name pos:start="100:37" pos:end="100:53">getCommandHandler</name><parameter_list pos:start="100:54" pos:end="100:71">(<parameter pos:start="100:55" pos:end="100:70"><decl pos:start="100:55" pos:end="100:70"><type pos:start="100:55" pos:end="100:60"><name pos:start="100:55" pos:end="100:60">String</name></type> <name pos:start="100:62" pos:end="100:70">handlerId</name></decl></parameter>)</parameter_list> <throws pos:start="100:73" pos:end="100:93">throws <argument pos:start="100:80" pos:end="100:93"><expr pos:start="100:80" pos:end="100:93"><name pos:start="100:80" pos:end="100:93">DroneException</name></expr></argument></throws> <block pos:start="100:95" pos:end="105:9">{<block_content pos:start="101:17" pos:end="104:54">
		<if_stmt pos:start="101:17" pos:end="103:17"><if pos:start="101:17" pos:end="103:17">if <condition pos:start="101:20" pos:end="101:60">(<expr pos:start="101:21" pos:end="101:59"><operator pos:start="101:21" pos:end="101:21">!</operator><call pos:start="101:22" pos:end="101:59"><name pos:start="101:22" pos:end="101:48"><name pos:start="101:22" pos:end="101:36">commandHandlers</name><operator pos:start="101:37" pos:end="101:37">.</operator><name pos:start="101:38" pos:end="101:48">containsKey</name></name><argument_list pos:start="101:49" pos:end="101:59">(<argument pos:start="101:50" pos:end="101:58"><expr pos:start="101:50" pos:end="101:58"><name pos:start="101:50" pos:end="101:58">handlerId</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="101:62" pos:end="103:17">{<block_content pos:start="102:25" pos:end="102:110">
			<throw pos:start="102:25" pos:end="102:110">throw <expr pos:start="102:31" pos:end="102:109"><operator pos:start="102:31" pos:end="102:33">new</operator> <call pos:start="102:35" pos:end="102:109"><name pos:start="102:35" pos:end="102:48">DroneException</name><argument_list pos:start="102:49" pos:end="102:109">(<argument pos:start="102:50" pos:end="102:108"><expr pos:start="102:50" pos:end="102:108"><literal type="string" pos:start="102:50" pos:end="102:75">"CommandHandler with id '"</literal> <operator pos:start="102:77" pos:end="102:77">+</operator> <name pos:start="102:79" pos:end="102:87">handlerId</name> <operator pos:start="102:89" pos:end="102:89">+</operator> <literal type="string" pos:start="102:91" pos:end="102:108">"' not registered"</literal></expr></argument>)</argument_list></call></expr>;</throw>
		</block_content>}</block></if></if_stmt>
		<return pos:start="104:17" pos:end="104:54">return <expr pos:start="104:24" pos:end="104:53"><call pos:start="104:24" pos:end="104:53"><name pos:start="104:24" pos:end="104:42"><name pos:start="104:24" pos:end="104:38">commandHandlers</name><operator pos:start="104:39" pos:end="104:39">.</operator><name pos:start="104:40" pos:end="104:42">get</name></name><argument_list pos:start="104:43" pos:end="104:53">(<argument pos:start="104:44" pos:end="104:52"><expr pos:start="104:44" pos:end="104:52"><name pos:start="104:44" pos:end="104:52">handlerId</name></expr></argument>)</argument_list></call></expr>;</return>
	</block_content>}</block></function>

	<function pos:start="107:9" pos:end="115:9"><type pos:start="107:9" pos:end="107:19"><specifier pos:start="107:9" pos:end="107:14">public</specifier> <name pos:start="107:16" pos:end="107:19">void</name></type> <name pos:start="107:21" pos:end="107:44">unregisterCommandHandler</name><parameter_list pos:start="107:45" pos:end="107:62">(<parameter pos:start="107:46" pos:end="107:61"><decl pos:start="107:46" pos:end="107:61"><type pos:start="107:46" pos:end="107:51"><name pos:start="107:46" pos:end="107:51">String</name></type> <name pos:start="107:53" pos:end="107:61">handlerId</name></decl></parameter>)</parameter_list> <throws pos:start="107:64" pos:end="107:84">throws <argument pos:start="107:71" pos:end="107:84"><expr pos:start="107:71" pos:end="107:84"><name pos:start="107:71" pos:end="107:84">DroneException</name></expr></argument></throws> <block pos:start="107:86" pos:end="115:9">{<block_content pos:start="110:17" pos:end="114:75">
		<comment type="line" pos:start="108:17" pos:end="108:68">// String handlerId = commandHandler.getHandlerId();</comment>
		<comment type="line" pos:start="109:17" pos:end="109:113">// LOGGER.info("Drone command handler added '" + handlerId + "' - " + commandHandler.getClass());</comment>
		<if_stmt pos:start="110:17" pos:end="112:17"><if pos:start="110:17" pos:end="112:17">if <condition pos:start="110:20" pos:end="110:60">(<expr pos:start="110:21" pos:end="110:59"><operator pos:start="110:21" pos:end="110:21">!</operator><call pos:start="110:22" pos:end="110:59"><name pos:start="110:22" pos:end="110:48"><name pos:start="110:22" pos:end="110:36">commandHandlers</name><operator pos:start="110:37" pos:end="110:37">.</operator><name pos:start="110:38" pos:end="110:48">containsKey</name></name><argument_list pos:start="110:49" pos:end="110:59">(<argument pos:start="110:50" pos:end="110:58"><expr pos:start="110:50" pos:end="110:58"><name pos:start="110:50" pos:end="110:58">handlerId</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="110:62" pos:end="112:17">{<block_content pos:start="111:25" pos:end="111:110">
			<throw pos:start="111:25" pos:end="111:110">throw <expr pos:start="111:31" pos:end="111:109"><operator pos:start="111:31" pos:end="111:33">new</operator> <call pos:start="111:35" pos:end="111:109"><name pos:start="111:35" pos:end="111:48">DroneException</name><argument_list pos:start="111:49" pos:end="111:109">(<argument pos:start="111:50" pos:end="111:108"><expr pos:start="111:50" pos:end="111:108"><literal type="string" pos:start="111:50" pos:end="111:75">"CommandHandler with id '"</literal> <operator pos:start="111:77" pos:end="111:77">+</operator> <name pos:start="111:79" pos:end="111:87">handlerId</name> <operator pos:start="111:89" pos:end="111:89">+</operator> <literal type="string" pos:start="111:91" pos:end="111:108">"' not registered"</literal></expr></argument>)</argument_list></call></expr>;</throw>
		</block_content>}</block></if></if_stmt>
		<expr_stmt pos:start="113:17" pos:end="113:50"><expr pos:start="113:17" pos:end="113:49"><call pos:start="113:17" pos:end="113:49"><name pos:start="113:17" pos:end="113:38"><name pos:start="113:17" pos:end="113:31">commandHandlers</name><operator pos:start="113:32" pos:end="113:32">.</operator><name pos:start="113:33" pos:end="113:38">remove</name></name><argument_list pos:start="113:39" pos:end="113:49">(<argument pos:start="113:40" pos:end="113:48"><expr pos:start="113:40" pos:end="113:48"><name pos:start="113:40" pos:end="113:48">handlerId</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt pos:start="114:17" pos:end="114:75"><expr pos:start="114:17" pos:end="114:74"><call pos:start="114:17" pos:end="114:74"><name pos:start="114:17" pos:end="114:27"><name pos:start="114:17" pos:end="114:22">LOGGER</name><operator pos:start="114:23" pos:end="114:23">.</operator><name pos:start="114:24" pos:end="114:27">info</name></name><argument_list pos:start="114:28" pos:end="114:74">(<argument pos:start="114:29" pos:end="114:73"><expr pos:start="114:29" pos:end="114:73"><literal type="string" pos:start="114:29" pos:end="114:61">"Drone command handler removed '"</literal> <operator pos:start="114:63" pos:end="114:63">+</operator> <name pos:start="114:65" pos:end="114:73">handlerId</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	</block_content>}</block></function>
}</block></class>
</unit>
