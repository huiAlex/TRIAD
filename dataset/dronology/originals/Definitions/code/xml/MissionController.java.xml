<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="Java" filename="flatCode/MissionController.java" pos:tabs="8"><package pos:start="1:1" pos:end="1:66">package <name pos:start="1:9" pos:end="1:65"><name pos:start="1:9" pos:end="1:11">edu</name><operator pos:start="1:12" pos:end="1:12">.</operator><name pos:start="1:13" pos:end="1:14">nd</name><operator pos:start="1:15" pos:end="1:15">.</operator><name pos:start="1:16" pos:end="1:24">dronology</name><operator pos:start="1:25" pos:end="1:25">.</operator><name pos:start="1:26" pos:end="1:33">services</name><operator pos:start="1:34" pos:end="1:34">.</operator><name pos:start="1:35" pos:end="1:44">extensions</name><operator pos:start="1:45" pos:end="1:45">.</operator><name pos:start="1:46" pos:end="1:60">missionplanning</name><operator pos:start="1:61" pos:end="1:61">.</operator><name pos:start="1:62" pos:end="1:65">plan</name></name>;</package>

<import pos:start="3:1" pos:end="3:44">import <name pos:start="3:8" pos:end="3:43"><name pos:start="3:8" pos:end="3:11">java</name><operator pos:start="3:12" pos:end="3:12">.</operator><name pos:start="3:13" pos:end="3:16">util</name><operator pos:start="3:17" pos:end="3:17">.</operator><name pos:start="3:18" pos:end="3:27">concurrent</name><operator pos:start="3:28" pos:end="3:28">.</operator><name pos:start="3:29" pos:end="3:43">ExecutorService</name></name>;</import>
<import pos:start="4:1" pos:end="4:38">import <name pos:start="4:8" pos:end="4:37"><name pos:start="4:8" pos:end="4:11">java</name><operator pos:start="4:12" pos:end="4:12">.</operator><name pos:start="4:13" pos:end="4:16">util</name><operator pos:start="4:17" pos:end="4:17">.</operator><name pos:start="4:18" pos:end="4:27">concurrent</name><operator pos:start="4:28" pos:end="4:28">.</operator><name pos:start="4:29" pos:end="4:37">Executors</name></name>;</import>
<import pos:start="5:1" pos:end="5:49">import <name pos:start="5:8" pos:end="5:48"><name pos:start="5:8" pos:end="5:11">java</name><operator pos:start="5:12" pos:end="5:12">.</operator><name pos:start="5:13" pos:end="5:16">util</name><operator pos:start="5:17" pos:end="5:17">.</operator><name pos:start="5:18" pos:end="5:27">concurrent</name><operator pos:start="5:28" pos:end="5:28">.</operator><name pos:start="5:29" pos:end="5:34">atomic</name><operator pos:start="5:35" pos:end="5:35">.</operator><name pos:start="5:36" pos:end="5:48">AtomicBoolean</name></name>;</import>

<import pos:start="7:1" pos:end="7:53">import <name pos:start="7:8" pos:end="7:52"><name pos:start="7:8" pos:end="7:10">com</name><operator pos:start="7:11" pos:end="7:11">.</operator><name pos:start="7:12" pos:end="7:17">google</name><operator pos:start="7:18" pos:end="7:18">.</operator><name pos:start="7:19" pos:end="7:24">common</name><operator pos:start="7:25" pos:end="7:25">.</operator><name pos:start="7:26" pos:end="7:29">util</name><operator pos:start="7:30" pos:end="7:30">.</operator><name pos:start="7:31" pos:end="7:40">concurrent</name><operator pos:start="7:41" pos:end="7:41">.</operator><name pos:start="7:42" pos:end="7:52">RateLimiter</name></name>;</import>

<import pos:start="9:1" pos:end="9:58">import <name pos:start="9:8" pos:end="9:57"><name pos:start="9:8" pos:end="9:10">edu</name><operator pos:start="9:11" pos:end="9:11">.</operator><name pos:start="9:12" pos:end="9:13">nd</name><operator pos:start="9:14" pos:end="9:14">.</operator><name pos:start="9:15" pos:end="9:23">dronology</name><operator pos:start="9:24" pos:end="9:24">.</operator><name pos:start="9:25" pos:end="9:32">services</name><operator pos:start="9:33" pos:end="9:33">.</operator><name pos:start="9:34" pos:end="9:37">core</name><operator pos:start="9:38" pos:end="9:38">.</operator><name pos:start="9:39" pos:end="9:42">info</name><operator pos:start="9:43" pos:end="9:43">.</operator><name pos:start="9:44" pos:end="9:57">UAVMappingInfo</name></name>;</import>
<import pos:start="10:1" pos:end="10:57">import <name pos:start="10:8" pos:end="10:56"><name pos:start="10:8" pos:end="10:10">edu</name><operator pos:start="10:11" pos:end="10:11">.</operator><name pos:start="10:12" pos:end="10:13">nd</name><operator pos:start="10:14" pos:end="10:14">.</operator><name pos:start="10:15" pos:end="10:23">dronology</name><operator pos:start="10:24" pos:end="10:24">.</operator><name pos:start="10:25" pos:end="10:32">services</name><operator pos:start="10:33" pos:end="10:33">.</operator><name pos:start="10:34" pos:end="10:37">core</name><operator pos:start="10:38" pos:end="10:38">.</operator><name pos:start="10:39" pos:end="10:43">items</name><operator pos:start="10:44" pos:end="10:44">.</operator><name pos:start="10:45" pos:end="10:56">IMissionPlan</name></name>;</import>
<import pos:start="11:1" pos:end="11:86">import <name pos:start="11:8" pos:end="11:85"><name pos:start="11:8" pos:end="11:10">edu</name><operator pos:start="11:11" pos:end="11:11">.</operator><name pos:start="11:12" pos:end="11:13">nd</name><operator pos:start="11:14" pos:end="11:14">.</operator><name pos:start="11:15" pos:end="11:23">dronology</name><operator pos:start="11:24" pos:end="11:24">.</operator><name pos:start="11:25" pos:end="11:32">services</name><operator pos:start="11:33" pos:end="11:33">.</operator><name pos:start="11:34" pos:end="11:43">extensions</name><operator pos:start="11:44" pos:end="11:44">.</operator><name pos:start="11:45" pos:end="11:59">missionplanning</name><operator pos:start="11:60" pos:end="11:60">.</operator><name pos:start="11:61" pos:end="11:85">MissionExecutionException</name></name>;</import>
<import pos:start="12:1" pos:end="12:88">import <name pos:start="12:8" pos:end="12:87"><name pos:start="12:8" pos:end="12:10">edu</name><operator pos:start="12:11" pos:end="12:11">.</operator><name pos:start="12:12" pos:end="12:13">nd</name><operator pos:start="12:14" pos:end="12:14">.</operator><name pos:start="12:15" pos:end="12:23">dronology</name><operator pos:start="12:24" pos:end="12:24">.</operator><name pos:start="12:25" pos:end="12:32">services</name><operator pos:start="12:33" pos:end="12:33">.</operator><name pos:start="12:34" pos:end="12:43">extensions</name><operator pos:start="12:44" pos:end="12:44">.</operator><name pos:start="12:45" pos:end="12:59">missionplanning</name><operator pos:start="12:60" pos:end="12:60">.</operator><name pos:start="12:61" pos:end="12:64">sync</name><operator pos:start="12:65" pos:end="12:65">.</operator><name pos:start="12:66" pos:end="12:87">SynchronizationManager</name></name>;</import>
<import pos:start="13:1" pos:end="13:79">import <name pos:start="13:8" pos:end="13:78"><name pos:start="13:8" pos:end="13:10">edu</name><operator pos:start="13:11" pos:end="13:11">.</operator><name pos:start="13:12" pos:end="13:13">nd</name><operator pos:start="13:14" pos:end="13:14">.</operator><name pos:start="13:15" pos:end="13:23">dronology</name><operator pos:start="13:24" pos:end="13:24">.</operator><name pos:start="13:25" pos:end="13:32">services</name><operator pos:start="13:33" pos:end="13:33">.</operator><name pos:start="13:34" pos:end="13:43">extensions</name><operator pos:start="13:44" pos:end="13:44">.</operator><name pos:start="13:45" pos:end="13:59">missionplanning</name><operator pos:start="13:60" pos:end="13:60">.</operator><name pos:start="13:61" pos:end="13:62">v1</name><operator pos:start="13:63" pos:end="13:63">.</operator><name pos:start="13:64" pos:end="13:78">FullMissionPlan</name></name>;</import>
<import pos:start="14:1" pos:end="14:72">import <name pos:start="14:8" pos:end="14:71"><name pos:start="14:8" pos:end="14:10">edu</name><operator pos:start="14:11" pos:end="14:11">.</operator><name pos:start="14:12" pos:end="14:13">nd</name><operator pos:start="14:14" pos:end="14:14">.</operator><name pos:start="14:15" pos:end="14:23">dronology</name><operator pos:start="14:24" pos:end="14:24">.</operator><name pos:start="14:25" pos:end="14:32">services</name><operator pos:start="14:33" pos:end="14:33">.</operator><name pos:start="14:34" pos:end="14:42">instances</name><operator pos:start="14:43" pos:end="14:43">.</operator><name pos:start="14:44" pos:end="14:53">dronesetup</name><operator pos:start="14:54" pos:end="14:54">.</operator><name pos:start="14:55" pos:end="14:71">DroneSetupService</name></name>;</import>
<import pos:start="15:1" pos:end="15:48">import <name pos:start="15:8" pos:end="15:47"><name pos:start="15:8" pos:end="15:10">edu</name><operator pos:start="15:11" pos:end="15:11">.</operator><name pos:start="15:12" pos:end="15:13">nd</name><operator pos:start="15:14" pos:end="15:14">.</operator><name pos:start="15:15" pos:end="15:23">dronology</name><operator pos:start="15:24" pos:end="15:24">.</operator><name pos:start="15:25" pos:end="15:28">util</name><operator pos:start="15:29" pos:end="15:29">.</operator><name pos:start="15:30" pos:end="15:47">NamedThreadFactory</name></name>;</import>
<import pos:start="16:1" pos:end="16:30">import <name pos:start="16:8" pos:end="16:29"><name pos:start="16:8" pos:end="16:10">net</name><operator pos:start="16:11" pos:end="16:11">.</operator><name pos:start="16:12" pos:end="16:13">mv</name><operator pos:start="16:14" pos:end="16:14">.</operator><name pos:start="16:15" pos:end="16:21">logging</name><operator pos:start="16:22" pos:end="16:22">.</operator><name pos:start="16:23" pos:end="16:29">ILogger</name></name>;</import>
<import pos:start="17:1" pos:end="17:37">import <name pos:start="17:8" pos:end="17:36"><name pos:start="17:8" pos:end="17:10">net</name><operator pos:start="17:11" pos:end="17:11">.</operator><name pos:start="17:12" pos:end="17:13">mv</name><operator pos:start="17:14" pos:end="17:14">.</operator><name pos:start="17:15" pos:end="17:21">logging</name><operator pos:start="17:22" pos:end="17:22">.</operator><name pos:start="17:23" pos:end="17:36">LoggerProvider</name></name>;</import>

<comment type="block" format="javadoc" pos:start="19:1" pos:end="27:3">/**
 * 
 * Central control class responsible for building, initializing, and executing a
 * {@link FullMissionPlan}.&lt;br&gt;
 * The {@link MissionController} periodically checks for new tasks that can be
 * activated and activates them on demand.
 * 
 * @author Michael Vierhauser
 */</comment>
<class pos:start="28:1" pos:end="106:1"><specifier pos:start="28:1" pos:end="28:6">public</specifier> class <name pos:start="28:14" pos:end="28:30">MissionController</name> <super_list pos:start="28:32" pos:end="28:50"><implements pos:start="28:32" pos:end="28:50">implements <super pos:start="28:43" pos:end="28:50"><name pos:start="28:43" pos:end="28:50">Runnable</name></super></implements></super_list> <block pos:start="28:52" pos:end="106:1">{
	<decl_stmt pos:start="29:9" pos:end="29:96"><decl pos:start="29:9" pos:end="29:95"><type pos:start="29:9" pos:end="29:36"><specifier pos:start="29:9" pos:end="29:15">private</specifier> <specifier pos:start="29:17" pos:end="29:22">static</specifier> <specifier pos:start="29:24" pos:end="29:28">final</specifier> <name pos:start="29:30" pos:end="29:36">ILogger</name></type> <name pos:start="29:38" pos:end="29:43">LOGGER</name> <init pos:start="29:45" pos:end="29:95">= <expr pos:start="29:47" pos:end="29:95"><call pos:start="29:47" pos:end="29:95"><name pos:start="29:47" pos:end="29:70"><name pos:start="29:47" pos:end="29:60">LoggerProvider</name><operator pos:start="29:61" pos:end="29:61">.</operator><name pos:start="29:62" pos:end="29:70">getLogger</name></name><argument_list pos:start="29:71" pos:end="29:95">(<argument pos:start="29:72" pos:end="29:94"><expr pos:start="29:72" pos:end="29:94"><name pos:start="29:72" pos:end="29:94"><name pos:start="29:72" pos:end="29:88">MissionController</name><operator pos:start="29:89" pos:end="29:89">.</operator><name pos:start="29:90" pos:end="29:94">class</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<decl_stmt pos:start="30:9" pos:end="30:52"><decl pos:start="30:9" pos:end="30:51"><type pos:start="30:9" pos:end="30:19"><name pos:start="30:9" pos:end="30:19">RateLimiter</name></type> <name pos:start="30:21" pos:end="30:27">barrier</name> <init pos:start="30:29" pos:end="30:51">= <expr pos:start="30:31" pos:end="30:51"><call pos:start="30:31" pos:end="30:51"><name pos:start="30:31" pos:end="30:48"><name pos:start="30:31" pos:end="30:41">RateLimiter</name><operator pos:start="30:42" pos:end="30:42">.</operator><name pos:start="30:43" pos:end="30:48">create</name></name><argument_list pos:start="30:49" pos:end="30:51">(<argument pos:start="30:50" pos:end="30:50"><expr pos:start="30:50" pos:end="30:50"><literal type="number" pos:start="30:50" pos:end="30:50">1</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<decl_stmt pos:start="31:9" pos:end="31:63"><decl pos:start="31:9" pos:end="31:62"><type pos:start="31:9" pos:end="31:21"><name pos:start="31:9" pos:end="31:21">AtomicBoolean</name></type> <name pos:start="31:23" pos:end="31:36">missionrunning</name> <init pos:start="31:38" pos:end="31:62">= <expr pos:start="31:40" pos:end="31:62"><operator pos:start="31:40" pos:end="31:42">new</operator> <call pos:start="31:44" pos:end="31:62"><name pos:start="31:44" pos:end="31:56">AtomicBoolean</name><argument_list pos:start="31:57" pos:end="31:62">(<argument pos:start="31:58" pos:end="31:61"><expr pos:start="31:58" pos:end="31:61"><literal type="boolean" pos:start="31:58" pos:end="31:61">true</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<decl_stmt pos:start="32:9" pos:end="32:62"><decl pos:start="32:9" pos:end="32:61"><type pos:start="32:9" pos:end="32:49"><specifier pos:start="32:9" pos:end="32:15">private</specifier> <specifier pos:start="32:17" pos:end="32:25">transient</specifier> <name pos:start="32:27" pos:end="32:49">IExecuteableMissionPlan</name></type> <name pos:start="32:51" pos:end="32:61">missionPlan</name></decl>;</decl_stmt>
	<decl_stmt pos:start="33:9" pos:end="34:91"><decl pos:start="33:9" pos:end="34:90"><type pos:start="33:9" pos:end="33:44"><specifier pos:start="33:9" pos:end="33:15">private</specifier> <specifier pos:start="33:17" pos:end="33:22">static</specifier> <specifier pos:start="33:24" pos:end="33:28">final</specifier> <name pos:start="33:30" pos:end="33:44">ExecutorService</name></type> <name pos:start="33:46" pos:end="33:61">SERVICE_EXECUTOR</name> <init pos:start="33:63" pos:end="34:90">= <expr pos:start="33:65" pos:end="34:90"><call pos:start="33:65" pos:end="34:90"><name pos:start="33:65" pos:end="34:48"><name pos:start="33:65" pos:end="33:73">Executors</name>
			<operator pos:start="34:25" pos:end="34:25">.</operator><name pos:start="34:26" pos:end="34:48">newSingleThreadExecutor</name></name><argument_list pos:start="34:49" pos:end="34:90">(<argument pos:start="34:50" pos:end="34:89"><expr pos:start="34:50" pos:end="34:89"><operator pos:start="34:50" pos:end="34:52">new</operator> <call pos:start="34:54" pos:end="34:89"><name pos:start="34:54" pos:end="34:71">NamedThreadFactory</name><argument_list pos:start="34:72" pos:end="34:89">(<argument pos:start="34:73" pos:end="34:88"><expr pos:start="34:73" pos:end="34:88"><literal type="string" pos:start="34:73" pos:end="34:88">"MissionControl"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<decl_stmt pos:start="35:9" pos:end="35:60"><decl pos:start="35:9" pos:end="35:59"><type pos:start="35:9" pos:end="35:50"><specifier pos:start="35:9" pos:end="35:15">private</specifier> <specifier pos:start="35:17" pos:end="35:25">transient</specifier> <specifier pos:start="35:27" pos:end="35:32">static</specifier> <name pos:start="35:34" pos:end="35:50">MissionController</name></type> <name pos:start="35:52" pos:end="35:59">INSTANCE</name></decl>;</decl_stmt>

	<function pos:start="37:9" pos:end="47:9"><annotation pos:start="37:9" pos:end="37:19">@<name pos:start="37:10" pos:end="37:19">Deprecated</name></annotation>
	<type pos:start="38:9" pos:end="38:19"><specifier pos:start="38:9" pos:end="38:14">public</specifier> <name pos:start="38:16" pos:end="38:19">void</name></type> <name pos:start="38:21" pos:end="38:34">executeMission</name><parameter_list pos:start="38:35" pos:end="38:50">(<parameter pos:start="38:36" pos:end="38:49"><decl pos:start="38:36" pos:end="38:49"><type pos:start="38:36" pos:end="38:41"><name pos:start="38:36" pos:end="38:41">String</name></type> <name pos:start="38:43" pos:end="38:49">mission</name></decl></parameter>)</parameter_list> <throws pos:start="38:52" pos:end="38:83">throws <argument pos:start="38:59" pos:end="38:83"><expr pos:start="38:59" pos:end="38:83"><name pos:start="38:59" pos:end="38:83">MissionExecutionException</name></expr></argument></throws> <block pos:start="38:85" pos:end="47:9">{<block_content pos:start="39:17" pos:end="46:46">
		<if_stmt pos:start="39:17" pos:end="41:17"><if pos:start="39:17" pos:end="41:17">if <condition pos:start="39:20" pos:end="39:40">(<expr pos:start="39:21" pos:end="39:39"><name pos:start="39:21" pos:end="39:31">missionPlan</name> <operator pos:start="39:33" pos:end="39:34">!=</operator> <literal type="null" pos:start="39:36" pos:end="39:39">null</literal></expr>)</condition> <block pos:start="39:42" pos:end="41:17">{<block_content pos:start="40:25" pos:end="40:101">
			<throw pos:start="40:25" pos:end="40:101">throw <expr pos:start="40:31" pos:end="40:100"><operator pos:start="40:31" pos:end="40:33">new</operator> <call pos:start="40:35" pos:end="40:100"><name pos:start="40:35" pos:end="40:59">MissionExecutionException</name><argument_list pos:start="40:60" pos:end="40:100">(<argument pos:start="40:61" pos:end="40:99"><expr pos:start="40:61" pos:end="40:99"><literal type="string" pos:start="40:61" pos:end="40:99">"Another mission is currently running!"</literal></expr></argument>)</argument_list></call></expr>;</throw>
		</block_content>}</block></if></if_stmt>

		<decl_stmt pos:start="43:17" pos:end="43:66"><decl pos:start="43:17" pos:end="43:65"><type pos:start="43:17" pos:end="43:31"><name pos:start="43:17" pos:end="43:31">FullMissionPlan</name></type> <name pos:start="43:33" pos:end="43:34">mp</name> <init pos:start="43:36" pos:end="43:65">= <expr pos:start="43:38" pos:end="43:65"><operator pos:start="43:38" pos:end="43:40">new</operator> <call pos:start="43:42" pos:end="43:65"><name pos:start="43:42" pos:end="43:56">FullMissionPlan</name><argument_list pos:start="43:57" pos:end="43:65">(<argument pos:start="43:58" pos:end="43:64"><expr pos:start="43:58" pos:end="43:64"><name pos:start="43:58" pos:end="43:64">mission</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt pos:start="44:17" pos:end="44:27"><expr pos:start="44:17" pos:end="44:26"><call pos:start="44:17" pos:end="44:26"><name pos:start="44:17" pos:end="44:24"><name pos:start="44:17" pos:end="44:18">mp</name><operator pos:start="44:19" pos:end="44:19">.</operator><name pos:start="44:20" pos:end="44:24">build</name></name><argument_list pos:start="44:25" pos:end="44:26">()</argument_list></call></expr>;</expr_stmt>
		<expr_stmt pos:start="45:17" pos:end="45:33"><expr pos:start="45:17" pos:end="45:32"><name pos:start="45:17" pos:end="45:27">missionPlan</name> <operator pos:start="45:29" pos:end="45:29">=</operator> <name pos:start="45:31" pos:end="45:32">mp</name></expr>;</expr_stmt>
		<expr_stmt pos:start="46:17" pos:end="46:46"><expr pos:start="46:17" pos:end="46:45"><call pos:start="46:17" pos:end="46:45"><name pos:start="46:17" pos:end="46:39"><name pos:start="46:17" pos:end="46:32">SERVICE_EXECUTOR</name><operator pos:start="46:33" pos:end="46:33">.</operator><name pos:start="46:34" pos:end="46:39">submit</name></name><argument_list pos:start="46:40" pos:end="46:45">(<argument pos:start="46:41" pos:end="46:44"><expr pos:start="46:41" pos:end="46:44"><name pos:start="46:41" pos:end="46:44">this</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	</block_content>}</block></function>

	<function pos:start="49:9" pos:end="59:9"><type pos:start="49:9" pos:end="49:19"><specifier pos:start="49:9" pos:end="49:14">public</specifier> <name pos:start="49:16" pos:end="49:19">void</name></type> <name pos:start="49:21" pos:end="49:34">executeMission</name><parameter_list pos:start="49:35" pos:end="49:80">(<parameter pos:start="49:36" pos:end="49:55"><decl pos:start="49:36" pos:end="49:55"><type pos:start="49:36" pos:end="49:55"><name pos:start="49:36" pos:end="49:47">IMissionPlan</name></type> <name pos:start="49:49" pos:end="49:55">mission</name></decl></parameter>, <parameter pos:start="49:58" pos:end="49:79"><decl pos:start="49:58" pos:end="49:79"><type pos:start="49:58" pos:end="49:79"><name pos:start="49:58" pos:end="49:71">UAVMappingInfo</name></type> <name pos:start="49:73" pos:end="49:79">mapping</name></decl></parameter>)</parameter_list> <throws pos:start="49:82" pos:end="49:113">throws <argument pos:start="49:89" pos:end="49:113"><expr pos:start="49:89" pos:end="49:113"><name pos:start="49:89" pos:end="49:113">MissionExecutionException</name></expr></argument></throws> <block pos:start="49:115" pos:end="59:9">{<block_content pos:start="50:17" pos:end="57:46">
		<if_stmt pos:start="50:17" pos:end="52:17"><if pos:start="50:17" pos:end="52:17">if <condition pos:start="50:20" pos:end="50:40">(<expr pos:start="50:21" pos:end="50:39"><name pos:start="50:21" pos:end="50:31">missionPlan</name> <operator pos:start="50:33" pos:end="50:34">!=</operator> <literal type="null" pos:start="50:36" pos:end="50:39">null</literal></expr>)</condition> <block pos:start="50:42" pos:end="52:17">{<block_content pos:start="51:25" pos:end="51:101">
			<throw pos:start="51:25" pos:end="51:101">throw <expr pos:start="51:31" pos:end="51:100"><operator pos:start="51:31" pos:end="51:33">new</operator> <call pos:start="51:35" pos:end="51:100"><name pos:start="51:35" pos:end="51:59">MissionExecutionException</name><argument_list pos:start="51:60" pos:end="51:100">(<argument pos:start="51:61" pos:end="51:99"><expr pos:start="51:61" pos:end="51:99"><literal type="string" pos:start="51:61" pos:end="51:99">"Another mission is currently running!"</literal></expr></argument>)</argument_list></call></expr>;</throw>
		</block_content>}</block></if></if_stmt>
		
		<decl_stmt pos:start="54:17" pos:end="54:68"><decl pos:start="54:17" pos:end="54:67"><type pos:start="54:17" pos:end="54:32"><name pos:start="54:17" pos:end="54:32">FullMissionPlan2</name></type> <name pos:start="54:34" pos:end="54:35">mp</name> <init pos:start="54:37" pos:end="54:67">= <expr pos:start="54:39" pos:end="54:67"><operator pos:start="54:39" pos:end="54:41">new</operator> <call pos:start="54:43" pos:end="54:67"><name pos:start="54:43" pos:end="54:58">FullMissionPlan2</name><argument_list pos:start="54:59" pos:end="54:67">(<argument pos:start="54:60" pos:end="54:66"><expr pos:start="54:60" pos:end="54:66"><name pos:start="54:60" pos:end="54:66">mission</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt pos:start="55:17" pos:end="55:34"><expr pos:start="55:17" pos:end="55:33"><call pos:start="55:17" pos:end="55:33"><name pos:start="55:17" pos:end="55:24"><name pos:start="55:17" pos:end="55:18">mp</name><operator pos:start="55:19" pos:end="55:19">.</operator><name pos:start="55:20" pos:end="55:24">build</name></name><argument_list pos:start="55:25" pos:end="55:33">(<argument pos:start="55:26" pos:end="55:32"><expr pos:start="55:26" pos:end="55:32"><name pos:start="55:26" pos:end="55:32">mapping</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt pos:start="56:17" pos:end="56:33"><expr pos:start="56:17" pos:end="56:32"><name pos:start="56:17" pos:end="56:27">missionPlan</name> <operator pos:start="56:29" pos:end="56:29">=</operator> <name pos:start="56:31" pos:end="56:32">mp</name></expr>;</expr_stmt>
		<expr_stmt pos:start="57:17" pos:end="57:46"><expr pos:start="57:17" pos:end="57:45"><call pos:start="57:17" pos:end="57:45"><name pos:start="57:17" pos:end="57:39"><name pos:start="57:17" pos:end="57:32">SERVICE_EXECUTOR</name><operator pos:start="57:33" pos:end="57:33">.</operator><name pos:start="57:34" pos:end="57:39">submit</name></name><argument_list pos:start="57:40" pos:end="57:45">(<argument pos:start="57:41" pos:end="57:44"><expr pos:start="57:41" pos:end="57:44"><name pos:start="57:41" pos:end="57:44">this</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	</block_content>}</block></function>

	<function pos:start="61:9" pos:end="80:9"><annotation pos:start="61:9" pos:end="61:17">@<name pos:start="61:10" pos:end="61:17">Override</name></annotation>
	<type pos:start="62:9" pos:end="62:19"><specifier pos:start="62:9" pos:end="62:14">public</specifier> <name pos:start="62:16" pos:end="62:19">void</name></type> <name pos:start="62:21" pos:end="62:23">run</name><parameter_list pos:start="62:24" pos:end="62:25">()</parameter_list> <block pos:start="62:27" pos:end="80:9">{<block_content pos:start="63:17" pos:end="79:35">
		<expr_stmt pos:start="63:17" pos:end="63:47"><expr pos:start="63:17" pos:end="63:46"><call pos:start="63:17" pos:end="63:46"><name pos:start="63:17" pos:end="63:40"><name pos:start="63:17" pos:end="63:30">missionrunning</name><operator pos:start="63:31" pos:end="63:31">.</operator><name pos:start="63:32" pos:end="63:40">getAndSet</name></name><argument_list pos:start="63:41" pos:end="63:46">(<argument pos:start="63:42" pos:end="63:45"><expr pos:start="63:42" pos:end="63:45"><literal type="boolean" pos:start="63:42" pos:end="63:45">true</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<while pos:start="64:17" pos:end="76:17">while <condition pos:start="64:23" pos:end="64:77">(<expr pos:start="64:24" pos:end="64:76"><call pos:start="64:24" pos:end="64:43"><name pos:start="64:24" pos:end="64:41"><name pos:start="64:24" pos:end="64:37">missionrunning</name><operator pos:start="64:38" pos:end="64:38">.</operator><name pos:start="64:39" pos:end="64:41">get</name></name><argument_list pos:start="64:42" pos:end="64:43">()</argument_list></call> <operator pos:start="64:45" pos:end="64:46">&amp;&amp;</operator> <call pos:start="64:48" pos:end="64:76"><name pos:start="64:48" pos:end="64:74"><name pos:start="64:48" pos:end="64:58">missionPlan</name><operator pos:start="64:59" pos:end="64:59">.</operator><name pos:start="64:60" pos:end="64:74">isMissionActive</name></name><argument_list pos:start="64:75" pos:end="64:76">()</argument_list></call></expr>)</condition> <block pos:start="64:79" pos:end="76:17">{<block_content pos:start="65:25" pos:end="75:25">
			<expr_stmt pos:start="65:25" pos:end="65:42"><expr pos:start="65:25" pos:end="65:41"><call pos:start="65:25" pos:end="65:41"><name pos:start="65:25" pos:end="65:39"><name pos:start="65:25" pos:end="65:31">barrier</name><operator pos:start="65:32" pos:end="65:32">.</operator><name pos:start="65:33" pos:end="65:39">acquire</name></name><argument_list pos:start="65:40" pos:end="65:41">()</argument_list></call></expr>;</expr_stmt>
			<try pos:start="66:25" pos:end="75:25">try <block pos:start="66:29" pos:end="68:25">{<block_content pos:start="67:33" pos:end="67:67">
				<expr_stmt pos:start="67:33" pos:end="67:67"><expr pos:start="67:33" pos:end="67:66"><call pos:start="67:33" pos:end="67:66"><name pos:start="67:33" pos:end="67:64"><name pos:start="67:33" pos:end="67:43">missionPlan</name><operator pos:start="67:44" pos:end="67:44">.</operator><name pos:start="67:45" pos:end="67:64">checkAndActivateTask</name></name><argument_list pos:start="67:65" pos:end="67:66">()</argument_list></call></expr>;</expr_stmt>
			</block_content>}</block> <catch pos:start="68:27" pos:end="75:25">catch <parameter_list pos:start="68:33" pos:end="68:61">(<parameter pos:start="68:34" pos:end="68:60"><decl pos:start="68:34" pos:end="68:60"><type pos:start="68:34" pos:end="68:60"><name pos:start="68:34" pos:end="68:58">MissionExecutionException</name></type> <name pos:start="68:60" pos:end="68:60">e</name></decl></parameter>)</parameter_list> <block pos:start="68:63" pos:end="75:25">{<block_content pos:start="69:33" pos:end="74:33">
				<expr_stmt pos:start="69:33" pos:end="69:48"><expr pos:start="69:33" pos:end="69:47"><call pos:start="69:33" pos:end="69:47"><name pos:start="69:33" pos:end="69:44"><name pos:start="69:33" pos:end="69:38">LOGGER</name><operator pos:start="69:39" pos:end="69:39">.</operator><name pos:start="69:40" pos:end="69:44">error</name></name><argument_list pos:start="69:45" pos:end="69:47">(<argument pos:start="69:46" pos:end="69:46"><expr pos:start="69:46" pos:end="69:46"><name pos:start="69:46" pos:end="69:46">e</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<try pos:start="70:33" pos:end="74:33">try <block pos:start="70:37" pos:end="72:33">{<block_content pos:start="71:41" pos:end="71:56">
					<expr_stmt pos:start="71:41" pos:end="71:56"><expr pos:start="71:41" pos:end="71:55"><call pos:start="71:41" pos:end="71:55"><name pos:start="71:41" pos:end="71:53">cancelMission</name><argument_list pos:start="71:54" pos:end="71:55">()</argument_list></call></expr>;</expr_stmt>
				</block_content>}</block> <catch pos:start="72:35" pos:end="74:33">catch <parameter_list pos:start="72:41" pos:end="72:70">(<parameter pos:start="72:42" pos:end="72:69"><decl pos:start="72:42" pos:end="72:69"><type pos:start="72:42" pos:end="72:69"><name pos:start="72:42" pos:end="72:66">MissionExecutionException</name></type> <name pos:start="72:68" pos:end="72:69">e1</name></decl></parameter>)</parameter_list> <block pos:start="72:72" pos:end="74:33">{<block_content pos:start="73:41" pos:end="73:57">
					<expr_stmt pos:start="73:41" pos:end="73:57"><expr pos:start="73:41" pos:end="73:56"><call pos:start="73:41" pos:end="73:56"><name pos:start="73:41" pos:end="73:52"><name pos:start="73:41" pos:end="73:46">LOGGER</name><operator pos:start="73:47" pos:end="73:47">.</operator><name pos:start="73:48" pos:end="73:52">error</name></name><argument_list pos:start="73:53" pos:end="73:56">(<argument pos:start="73:54" pos:end="73:55"><expr pos:start="73:54" pos:end="73:55"><name pos:start="73:54" pos:end="73:55">e1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				</block_content>}</block></catch></try>
			</block_content>}</block></catch></try>
		</block_content>}</block></while>
		<expr_stmt pos:start="77:17" pos:end="77:48"><expr pos:start="77:17" pos:end="77:47"><call pos:start="77:17" pos:end="77:47"><name pos:start="77:17" pos:end="77:27"><name pos:start="77:17" pos:end="77:22">LOGGER</name><operator pos:start="77:23" pos:end="77:23">.</operator><name pos:start="77:24" pos:end="77:27">info</name></name><argument_list pos:start="77:28" pos:end="77:47">(<argument pos:start="77:29" pos:end="77:46"><expr pos:start="77:29" pos:end="77:46"><literal type="string" pos:start="77:29" pos:end="77:46">"Mission complete"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt pos:start="78:17" pos:end="78:70"><expr pos:start="78:17" pos:end="78:69"><call pos:start="78:17" pos:end="78:52"><name pos:start="78:17" pos:end="78:50"><name pos:start="78:17" pos:end="78:38">SynchronizationManager</name><operator pos:start="78:39" pos:end="78:39">.</operator><name pos:start="78:40" pos:end="78:50">getInstance</name></name><argument_list pos:start="78:51" pos:end="78:52">()</argument_list></call><operator pos:start="78:53" pos:end="78:53">.</operator><call pos:start="78:54" pos:end="78:69"><name pos:start="78:54" pos:end="78:67">resetAltitudes</name><argument_list pos:start="78:68" pos:end="78:69">()</argument_list></call></expr>;</expr_stmt>
		<expr_stmt pos:start="79:17" pos:end="79:35"><expr pos:start="79:17" pos:end="79:34"><name pos:start="79:17" pos:end="79:27">missionPlan</name> <operator pos:start="79:29" pos:end="79:29">=</operator> <literal type="null" pos:start="79:31" pos:end="79:34">null</literal></expr>;</expr_stmt>
	</block_content>}</block></function>

	<comment type="block" format="javadoc" pos:start="82:9" pos:end="84:11">/**
	 * @return The singleton MissionController instance
	 */</comment>
	<function pos:start="85:9" pos:end="94:9"><type pos:start="85:9" pos:end="85:39"><specifier pos:start="85:9" pos:end="85:14">public</specifier> <specifier pos:start="85:16" pos:end="85:21">static</specifier> <name pos:start="85:23" pos:end="85:39">MissionController</name></type> <name pos:start="85:41" pos:end="85:51">getInstance</name><parameter_list pos:start="85:52" pos:end="85:53">()</parameter_list> <block pos:start="85:55" pos:end="94:9">{<block_content pos:start="86:17" pos:end="93:32">
		<if_stmt pos:start="86:17" pos:end="92:17"><if pos:start="86:17" pos:end="92:17">if <condition pos:start="86:20" pos:end="86:37">(<expr pos:start="86:21" pos:end="86:36"><name pos:start="86:21" pos:end="86:28">INSTANCE</name> <operator pos:start="86:30" pos:end="86:31">==</operator> <literal type="null" pos:start="86:33" pos:end="86:36">null</literal></expr>)</condition> <block pos:start="86:39" pos:end="92:17">{<block_content pos:start="87:25" pos:end="91:25">
			<synchronized pos:start="87:25" pos:end="91:25">synchronized <init pos:start="87:38" pos:end="87:62">(<expr pos:start="87:39" pos:end="87:61"><name pos:start="87:39" pos:end="87:61"><name pos:start="87:39" pos:end="87:55">DroneSetupService</name><operator pos:start="87:56" pos:end="87:56">.</operator><name pos:start="87:57" pos:end="87:61">class</name></name></expr>)</init> <block pos:start="87:64" pos:end="91:25">{<block_content pos:start="88:33" pos:end="90:33">
				<if_stmt pos:start="88:33" pos:end="90:33"><if pos:start="88:33" pos:end="90:33">if <condition pos:start="88:36" pos:end="88:53">(<expr pos:start="88:37" pos:end="88:52"><name pos:start="88:37" pos:end="88:44">INSTANCE</name> <operator pos:start="88:46" pos:end="88:47">==</operator> <literal type="null" pos:start="88:49" pos:end="88:52">null</literal></expr>)</condition> <block pos:start="88:55" pos:end="90:33">{<block_content pos:start="89:41" pos:end="89:75">
					<expr_stmt pos:start="89:41" pos:end="89:75"><expr pos:start="89:41" pos:end="89:74"><name pos:start="89:41" pos:end="89:48">INSTANCE</name> <operator pos:start="89:50" pos:end="89:50">=</operator> <operator pos:start="89:52" pos:end="89:54">new</operator> <call pos:start="89:56" pos:end="89:74"><name pos:start="89:56" pos:end="89:72">MissionController</name><argument_list pos:start="89:73" pos:end="89:74">()</argument_list></call></expr>;</expr_stmt>
				</block_content>}</block></if></if_stmt>
			</block_content>}</block></synchronized>
		</block_content>}</block></if></if_stmt>
		<return pos:start="93:17" pos:end="93:32">return <expr pos:start="93:24" pos:end="93:31"><name pos:start="93:24" pos:end="93:31">INSTANCE</name></expr>;</return>
	</block_content>}</block></function>

	<function pos:start="96:9" pos:end="104:9"><type pos:start="96:9" pos:end="96:19"><specifier pos:start="96:9" pos:end="96:14">public</specifier> <name pos:start="96:16" pos:end="96:19">void</name></type> <name pos:start="96:21" pos:end="96:33">cancelMission</name><parameter_list pos:start="96:34" pos:end="96:35">()</parameter_list> <throws pos:start="96:37" pos:end="96:68">throws <argument pos:start="96:44" pos:end="96:68"><expr pos:start="96:44" pos:end="96:68"><name pos:start="96:44" pos:end="96:68">MissionExecutionException</name></expr></argument></throws> <block pos:start="96:70" pos:end="104:9">{<block_content pos:start="97:17" pos:end="103:35">
		<if_stmt pos:start="97:17" pos:end="99:17"><if pos:start="97:17" pos:end="99:17">if <condition pos:start="97:20" pos:end="97:40">(<expr pos:start="97:21" pos:end="97:39"><name pos:start="97:21" pos:end="97:31">missionPlan</name> <operator pos:start="97:33" pos:end="97:34">==</operator> <literal type="null" pos:start="97:36" pos:end="97:39">null</literal></expr>)</condition> <block pos:start="97:42" pos:end="99:17">{<block_content pos:start="98:25" pos:end="98:91">
			<throw pos:start="98:25" pos:end="98:91">throw <expr pos:start="98:31" pos:end="98:90"><operator pos:start="98:31" pos:end="98:33">new</operator> <call pos:start="98:35" pos:end="98:90"><name pos:start="98:35" pos:end="98:59">MissionExecutionException</name><argument_list pos:start="98:60" pos:end="98:90">(<argument pos:start="98:61" pos:end="98:89"><expr pos:start="98:61" pos:end="98:89"><literal type="string" pos:start="98:61" pos:end="98:89">"No mission currently active"</literal></expr></argument>)</argument_list></call></expr>;</throw>
		</block_content>}</block></if></if_stmt>
		<expr_stmt pos:start="100:17" pos:end="100:70"><expr pos:start="100:17" pos:end="100:69"><call pos:start="100:17" pos:end="100:52"><name pos:start="100:17" pos:end="100:50"><name pos:start="100:17" pos:end="100:38">SynchronizationManager</name><operator pos:start="100:39" pos:end="100:39">.</operator><name pos:start="100:40" pos:end="100:50">getInstance</name></name><argument_list pos:start="100:51" pos:end="100:52">()</argument_list></call><operator pos:start="100:53" pos:end="100:53">.</operator><call pos:start="100:54" pos:end="100:69"><name pos:start="100:54" pos:end="100:67">resetAltitudes</name><argument_list pos:start="100:68" pos:end="100:69">()</argument_list></call></expr>;</expr_stmt>
		<expr_stmt pos:start="101:17" pos:end="101:48"><expr pos:start="101:17" pos:end="101:47"><call pos:start="101:17" pos:end="101:47"><name pos:start="101:17" pos:end="101:40"><name pos:start="101:17" pos:end="101:30">missionrunning</name><operator pos:start="101:31" pos:end="101:31">.</operator><name pos:start="101:32" pos:end="101:40">getAndSet</name></name><argument_list pos:start="101:41" pos:end="101:47">(<argument pos:start="101:42" pos:end="101:46"><expr pos:start="101:42" pos:end="101:46"><literal type="boolean" pos:start="101:42" pos:end="101:46">false</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt pos:start="102:17" pos:end="102:44"><expr pos:start="102:17" pos:end="102:43"><call pos:start="102:17" pos:end="102:43"><name pos:start="102:17" pos:end="102:41"><name pos:start="102:17" pos:end="102:27">missionPlan</name><operator pos:start="102:28" pos:end="102:28">.</operator><name pos:start="102:29" pos:end="102:41">cancelMission</name></name><argument_list pos:start="102:42" pos:end="102:43">()</argument_list></call></expr>;</expr_stmt>
		<expr_stmt pos:start="103:17" pos:end="103:35"><expr pos:start="103:17" pos:end="103:34"><name pos:start="103:17" pos:end="103:27">missionPlan</name> <operator pos:start="103:29" pos:end="103:29">=</operator> <literal type="null" pos:start="103:31" pos:end="103:34">null</literal></expr>;</expr_stmt>
	</block_content>}</block></function>

}</block></class>
</unit>
