<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="Java" filename="flatCode/FakePythonGroundstation.java" pos:tabs="8"><package pos:start="1:1" pos:end="1:34">package <name pos:start="1:9" pos:end="1:33"><name pos:start="1:9" pos:end="1:11">edu</name><operator pos:start="1:12" pos:end="1:12">.</operator><name pos:start="1:13" pos:end="1:14">nd</name><operator pos:start="1:15" pos:end="1:15">.</operator><name pos:start="1:16" pos:end="1:24">dronology</name><operator pos:start="1:25" pos:end="1:25">.</operator><name pos:start="1:26" pos:end="1:29">misc</name><operator pos:start="1:30" pos:end="1:30">.</operator><name pos:start="1:31" pos:end="1:33">gcs</name></name>;</package>

<import pos:start="3:1" pos:end="3:30">import <name pos:start="3:8" pos:end="3:29"><name pos:start="3:8" pos:end="3:11">java</name><operator pos:start="3:12" pos:end="3:12">.</operator><name pos:start="3:13" pos:end="3:14">io</name><operator pos:start="3:15" pos:end="3:15">.</operator><name pos:start="3:16" pos:end="3:29">BufferedReader</name></name>;</import>
<import pos:start="4:1" pos:end="4:30">import <name pos:start="4:8" pos:end="4:29"><name pos:start="4:8" pos:end="4:11">java</name><operator pos:start="4:12" pos:end="4:12">.</operator><name pos:start="4:13" pos:end="4:14">io</name><operator pos:start="4:15" pos:end="4:15">.</operator><name pos:start="4:16" pos:end="4:29">BufferedWriter</name></name>;</import>
<import pos:start="5:1" pos:end="5:20">import <name pos:start="5:8" pos:end="5:19"><name pos:start="5:8" pos:end="5:11">java</name><operator pos:start="5:12" pos:end="5:12">.</operator><name pos:start="5:13" pos:end="5:14">io</name><operator pos:start="5:15" pos:end="5:15">.</operator><name pos:start="5:16" pos:end="5:19">File</name></name>;</import>
<import pos:start="6:1" pos:end="6:27">import <name pos:start="6:8" pos:end="6:26"><name pos:start="6:8" pos:end="6:11">java</name><operator pos:start="6:12" pos:end="6:12">.</operator><name pos:start="6:13" pos:end="6:14">io</name><operator pos:start="6:15" pos:end="6:15">.</operator><name pos:start="6:16" pos:end="6:26">InputStream</name></name>;</import>
<import pos:start="7:1" pos:end="7:33">import <name pos:start="7:8" pos:end="7:32"><name pos:start="7:8" pos:end="7:11">java</name><operator pos:start="7:12" pos:end="7:12">.</operator><name pos:start="7:13" pos:end="7:14">io</name><operator pos:start="7:15" pos:end="7:15">.</operator><name pos:start="7:16" pos:end="7:32">InputStreamReader</name></name>;</import>
<import pos:start="8:1" pos:end="8:28">import <name pos:start="8:8" pos:end="8:27"><name pos:start="8:8" pos:end="8:11">java</name><operator pos:start="8:12" pos:end="8:12">.</operator><name pos:start="8:13" pos:end="8:14">io</name><operator pos:start="8:15" pos:end="8:15">.</operator><name pos:start="8:16" pos:end="8:27">OutputStream</name></name>;</import>
<import pos:start="9:1" pos:end="9:34">import <name pos:start="9:8" pos:end="9:33"><name pos:start="9:8" pos:end="9:11">java</name><operator pos:start="9:12" pos:end="9:12">.</operator><name pos:start="9:13" pos:end="9:14">io</name><operator pos:start="9:15" pos:end="9:15">.</operator><name pos:start="9:16" pos:end="9:33">OutputStreamWriter</name></name>;</import>
<import pos:start="10:1" pos:end="10:29">import <name pos:start="10:8" pos:end="10:28"><name pos:start="10:8" pos:end="10:11">java</name><operator pos:start="10:12" pos:end="10:12">.</operator><name pos:start="10:13" pos:end="10:15">net</name><operator pos:start="10:16" pos:end="10:16">.</operator><name pos:start="10:17" pos:end="10:28">ServerSocket</name></name>;</import>
<import pos:start="11:1" pos:end="11:23">import <name pos:start="11:8" pos:end="11:22"><name pos:start="11:8" pos:end="11:11">java</name><operator pos:start="11:12" pos:end="11:12">.</operator><name pos:start="11:13" pos:end="11:15">net</name><operator pos:start="11:16" pos:end="11:16">.</operator><name pos:start="11:17" pos:end="11:22">Socket</name></name>;</import>
<import pos:start="12:1" pos:end="12:28">import <name pos:start="12:8" pos:end="12:27"><name pos:start="12:8" pos:end="12:11">java</name><operator pos:start="12:12" pos:end="12:12">.</operator><name pos:start="12:13" pos:end="12:16">text</name><operator pos:start="12:17" pos:end="12:17">.</operator><name pos:start="12:18" pos:end="12:27">DateFormat</name></name>;</import>
<import pos:start="13:1" pos:end="13:24">import <name pos:start="13:8" pos:end="13:23"><name pos:start="13:8" pos:end="13:11">java</name><operator pos:start="13:12" pos:end="13:12">.</operator><name pos:start="13:13" pos:end="13:16">util</name><operator pos:start="13:17" pos:end="13:17">.</operator><name pos:start="13:18" pos:end="13:23">Random</name></name>;</import>

<import pos:start="15:1" pos:end="15:39">import <name pos:start="15:8" pos:end="15:38"><name pos:start="15:8" pos:end="15:10">org</name><operator pos:start="15:11" pos:end="15:11">.</operator><name pos:start="15:12" pos:end="15:17">apache</name><operator pos:start="15:18" pos:end="15:18">.</operator><name pos:start="15:19" pos:end="15:25">commons</name><operator pos:start="15:26" pos:end="15:26">.</operator><name pos:start="15:27" pos:end="15:28">io</name><operator pos:start="15:29" pos:end="15:29">.</operator><name pos:start="15:30" pos:end="15:38">FileUtils</name></name>;</import>

<import pos:start="17:1" pos:end="17:41">import <name pos:start="17:8" pos:end="17:40"><name pos:start="17:8" pos:end="17:10">com</name><operator pos:start="17:11" pos:end="17:11">.</operator><name pos:start="17:12" pos:end="17:17">google</name><operator pos:start="17:18" pos:end="17:18">.</operator><name pos:start="17:19" pos:end="17:22">gson</name><operator pos:start="17:23" pos:end="17:23">.</operator><name pos:start="17:24" pos:end="17:40">FieldNamingPolicy</name></name>;</import>
<import pos:start="18:1" pos:end="18:28">import <name pos:start="18:8" pos:end="18:27"><name pos:start="18:8" pos:end="18:10">com</name><operator pos:start="18:11" pos:end="18:11">.</operator><name pos:start="18:12" pos:end="18:17">google</name><operator pos:start="18:18" pos:end="18:18">.</operator><name pos:start="18:19" pos:end="18:22">gson</name><operator pos:start="18:23" pos:end="18:23">.</operator><name pos:start="18:24" pos:end="18:27">Gson</name></name>;</import>
<import pos:start="19:1" pos:end="19:35">import <name pos:start="19:8" pos:end="19:34"><name pos:start="19:8" pos:end="19:10">com</name><operator pos:start="19:11" pos:end="19:11">.</operator><name pos:start="19:12" pos:end="19:17">google</name><operator pos:start="19:18" pos:end="19:18">.</operator><name pos:start="19:19" pos:end="19:22">gson</name><operator pos:start="19:23" pos:end="19:23">.</operator><name pos:start="19:24" pos:end="19:34">GsonBuilder</name></name>;</import>

<import pos:start="21:1" pos:end="21:54">import <name pos:start="21:8" pos:end="21:53"><name pos:start="21:8" pos:end="21:10">edu</name><operator pos:start="21:11" pos:end="21:11">.</operator><name pos:start="21:12" pos:end="21:13">nd</name><operator pos:start="21:14" pos:end="21:14">.</operator><name pos:start="21:15" pos:end="21:23">dronology</name><operator pos:start="21:24" pos:end="21:24">.</operator><name pos:start="21:25" pos:end="21:28">core</name><operator pos:start="21:29" pos:end="21:29">.</operator><name pos:start="21:30" pos:end="21:39">coordinate</name><operator pos:start="21:40" pos:end="21:40">.</operator><name pos:start="21:41" pos:end="21:53">LlaCoordinate</name></name>;</import>
<import pos:start="22:1" pos:end="22:72">import <name pos:start="22:8" pos:end="22:71"><name pos:start="22:8" pos:end="22:10">edu</name><operator pos:start="22:11" pos:end="22:11">.</operator><name pos:start="22:12" pos:end="22:13">nd</name><operator pos:start="22:14" pos:end="22:14">.</operator><name pos:start="22:15" pos:end="22:23">dronology</name><operator pos:start="22:24" pos:end="22:24">.</operator><name pos:start="22:25" pos:end="22:32">gstation</name><operator pos:start="22:33" pos:end="22:33">.</operator><name pos:start="22:34" pos:end="22:42">connector</name><operator pos:start="22:43" pos:end="22:43">.</operator><name pos:start="22:44" pos:end="22:51">messages</name><operator pos:start="22:52" pos:end="22:52">.</operator><name pos:start="22:53" pos:end="22:71">UAVHandshakeMessage</name></name>;</import>
<import pos:start="23:1" pos:end="23:73">import <name pos:start="23:8" pos:end="23:72"><name pos:start="23:8" pos:end="23:10">edu</name><operator pos:start="23:11" pos:end="23:11">.</operator><name pos:start="23:12" pos:end="23:13">nd</name><operator pos:start="23:14" pos:end="23:14">.</operator><name pos:start="23:15" pos:end="23:23">dronology</name><operator pos:start="23:24" pos:end="23:24">.</operator><name pos:start="23:25" pos:end="23:32">gstation</name><operator pos:start="23:33" pos:end="23:33">.</operator><name pos:start="23:34" pos:end="23:42">connector</name><operator pos:start="23:43" pos:end="23:43">.</operator><name pos:start="23:44" pos:end="23:51">messages</name><operator pos:start="23:52" pos:end="23:52">.</operator><name pos:start="23:53" pos:end="23:72">UAVMonitoringMessage</name></name>;</import>

<class pos:start="25:1" pos:end="169:1"><specifier pos:start="25:1" pos:end="25:6">public</specifier> class <name pos:start="25:14" pos:end="25:36">FakePythonGroundstation</name> <block pos:start="25:38" pos:end="169:1">{

	<decl_stmt pos:start="27:9" pos:end="27:37"><decl pos:start="27:9" pos:end="27:36"><type pos:start="27:9" pos:end="27:29"><specifier pos:start="27:9" pos:end="27:15">private</specifier> <specifier pos:start="27:17" pos:end="27:22">static</specifier> <name pos:start="27:24" pos:end="27:29">Socket</name></type> <name pos:start="27:31" pos:end="27:36">socket</name></decl>;</decl_stmt>

	<decl_stmt pos:start="29:9" pos:end="31:88"><decl pos:start="29:9" pos:end="31:87"><type pos:start="29:9" pos:end="29:25"><specifier pos:start="29:9" pos:end="29:13">final</specifier> <specifier pos:start="29:15" pos:end="29:20">static</specifier> <name pos:start="29:22" pos:end="29:25">Gson</name></type> <name pos:start="29:27" pos:end="29:30">GSON</name> <init pos:start="29:32" pos:end="31:87">= <expr pos:start="29:34" pos:end="31:87"><operator pos:start="29:34" pos:end="29:36">new</operator> <call pos:start="29:38" pos:end="29:50"><name pos:start="29:38" pos:end="29:48">GsonBuilder</name><argument_list pos:start="29:49" pos:end="29:50">()</argument_list></call><operator pos:start="29:51" pos:end="29:51">.</operator><call pos:start="29:52" pos:end="29:85"><name pos:start="29:52" pos:end="29:83">enableComplexMapKeySerialization</name><argument_list pos:start="29:84" pos:end="29:85">()</argument_list></call><operator pos:start="29:86" pos:end="29:86">.</operator><call pos:start="29:87" pos:end="29:102"><name pos:start="29:87" pos:end="29:100">serializeNulls</name><argument_list pos:start="29:101" pos:end="29:102">()</argument_list></call>
			<operator pos:start="30:25" pos:end="30:25">.</operator><call pos:start="30:26" pos:end="30:55"><name pos:start="30:26" pos:end="30:38">setDateFormat</name><argument_list pos:start="30:39" pos:end="30:55">(<argument pos:start="30:40" pos:end="30:54"><expr pos:start="30:40" pos:end="30:54"><name pos:start="30:40" pos:end="30:54"><name pos:start="30:40" pos:end="30:49">DateFormat</name><operator pos:start="30:50" pos:end="30:50">.</operator><name pos:start="30:51" pos:end="30:54">LONG</name></name></expr></argument>)</argument_list></call><operator pos:start="30:56" pos:end="30:56">.</operator><call pos:start="30:57" pos:end="30:118"><name pos:start="30:57" pos:end="30:76">setFieldNamingPolicy</name><argument_list pos:start="30:77" pos:end="30:118">(<argument pos:start="30:78" pos:end="30:117"><expr pos:start="30:78" pos:end="30:117"><name pos:start="30:78" pos:end="30:117"><name pos:start="30:78" pos:end="30:94">FieldNamingPolicy</name><operator pos:start="30:95" pos:end="30:95">.</operator><name pos:start="30:96" pos:end="30:117">LOWER_CASE_WITH_DASHES</name></name></expr></argument>)</argument_list></call>
			<operator pos:start="31:25" pos:end="31:25">.</operator><call pos:start="31:26" pos:end="31:40"><name pos:start="31:26" pos:end="31:35">setVersion</name><argument_list pos:start="31:36" pos:end="31:40">(<argument pos:start="31:37" pos:end="31:39"><expr pos:start="31:37" pos:end="31:39"><literal type="number" pos:start="31:37" pos:end="31:39">1.0</literal></expr></argument>)</argument_list></call><operator pos:start="31:41" pos:end="31:41">.</operator><call pos:start="31:42" pos:end="31:78"><name pos:start="31:42" pos:end="31:76">serializeSpecialFloatingPointValues</name><argument_list pos:start="31:77" pos:end="31:78">()</argument_list></call><operator pos:start="31:79" pos:end="31:79">.</operator><call pos:start="31:80" pos:end="31:87"><name pos:start="31:80" pos:end="31:85">create</name><argument_list pos:start="31:86" pos:end="31:87">()</argument_list></call></expr></init></decl>;</decl_stmt>

	<decl_stmt pos:start="33:9" pos:end="33:45"><decl pos:start="33:9" pos:end="33:44"><type pos:start="33:9" pos:end="33:29"><specifier pos:start="33:9" pos:end="33:15">private</specifier> <specifier pos:start="33:17" pos:end="33:22">static</specifier> <name pos:start="33:24" pos:end="33:29">String</name></type> <name pos:start="33:31" pos:end="33:44">STATUS_MESSAGE</name></decl>;</decl_stmt>

	<function pos:start="35:9" pos:end="146:9"><type pos:start="35:9" pos:end="35:26"><specifier pos:start="35:9" pos:end="35:14">public</specifier> <specifier pos:start="35:16" pos:end="35:21">static</specifier> <name pos:start="35:23" pos:end="35:26">void</name></type> <name pos:start="35:28" pos:end="35:31">main</name><parameter_list pos:start="35:32" pos:end="35:46">(<parameter pos:start="35:33" pos:end="35:45"><decl pos:start="35:33" pos:end="35:45"><type pos:start="35:33" pos:end="35:40"><name pos:start="35:33" pos:end="35:40"><name pos:start="35:33" pos:end="35:38">String</name><index pos:start="35:39" pos:end="35:40">[]</index></name></type> <name pos:start="35:42" pos:end="35:45">args</name></decl></parameter>)</parameter_list> <block pos:start="35:48" pos:end="146:9">{<block_content pos:start="36:17" pos:end="145:17">
		<try pos:start="36:17" pos:end="145:17">try <block pos:start="36:21" pos:end="143:17">{<block_content pos:start="37:25" pos:end="142:25">
			<decl_stmt pos:start="37:25" pos:end="37:40"><decl pos:start="37:25" pos:end="37:39"><type pos:start="37:25" pos:end="37:27"><name pos:start="37:25" pos:end="37:27">int</name></type> <name pos:start="37:29" pos:end="37:32">port</name> <init pos:start="37:34" pos:end="37:39">= <expr pos:start="37:36" pos:end="37:39"><literal type="number" pos:start="37:36" pos:end="37:39">1234</literal></expr></init></decl>;</decl_stmt>
			<decl_stmt pos:start="38:25" pos:end="38:75"><decl pos:start="38:25" pos:end="38:74"><type pos:start="38:25" pos:end="38:36"><name pos:start="38:25" pos:end="38:36">ServerSocket</name></type> <name pos:start="38:38" pos:end="38:49">serverSocket</name> <init pos:start="38:51" pos:end="38:74">= <expr pos:start="38:53" pos:end="38:74"><operator pos:start="38:53" pos:end="38:55">new</operator> <call pos:start="38:57" pos:end="38:74"><name pos:start="38:57" pos:end="38:68">ServerSocket</name><argument_list pos:start="38:69" pos:end="38:74">(<argument pos:start="38:70" pos:end="38:73"><expr pos:start="38:70" pos:end="38:73"><name pos:start="38:70" pos:end="38:73">port</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<comment type="line" pos:start="39:25" pos:end="39:93">// Server is running always. This is done using this while(true) loop</comment>

			<decl_stmt pos:start="41:25" pos:end="41:86"><decl pos:start="41:25" pos:end="41:85"><type pos:start="41:25" pos:end="41:28"><name pos:start="41:25" pos:end="41:28">File</name></type> <name pos:start="41:30" pos:end="41:34">mfile</name> <init pos:start="41:36" pos:end="41:85">= <expr pos:start="41:38" pos:end="41:85"><operator pos:start="41:38" pos:end="41:40">new</operator> <call pos:start="41:42" pos:end="41:85"><name pos:start="41:42" pos:end="41:45">File</name><argument_list pos:start="41:46" pos:end="41:85">(<argument pos:start="41:47" pos:end="41:84"><expr pos:start="41:47" pos:end="41:84"><literal type="string" pos:start="41:47" pos:end="41:51">"sac"</literal> <operator pos:start="41:53" pos:end="41:53">+</operator> <name pos:start="41:55" pos:end="41:68"><name pos:start="41:55" pos:end="41:58">File</name><operator pos:start="41:59" pos:end="41:59">.</operator><name pos:start="41:60" pos:end="41:68">separator</name></name> <operator pos:start="41:70" pos:end="41:70">+</operator> <literal type="string" pos:start="41:72" pos:end="41:84">"message.txt"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<expr_stmt pos:start="42:25" pos:end="42:68"><expr pos:start="42:25" pos:end="42:67"><call pos:start="42:25" pos:end="42:67"><name pos:start="42:25" pos:end="42:42"><name pos:start="42:25" pos:end="42:30">System</name><operator pos:start="42:31" pos:end="42:31">.</operator><name pos:start="42:32" pos:end="42:34">out</name><operator pos:start="42:35" pos:end="42:35">.</operator><name pos:start="42:36" pos:end="42:42">println</name></name><argument_list pos:start="42:43" pos:end="42:67">(<argument pos:start="42:44" pos:end="42:66"><expr pos:start="42:44" pos:end="42:66"><call pos:start="42:44" pos:end="42:66"><name pos:start="42:44" pos:end="42:64"><name pos:start="42:44" pos:end="42:48">mfile</name><operator pos:start="42:49" pos:end="42:49">.</operator><name pos:start="42:50" pos:end="42:64">getAbsolutePath</name></name><argument_list pos:start="42:65" pos:end="42:66">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt pos:start="43:25" pos:end="43:75"><expr pos:start="43:25" pos:end="43:74"><name pos:start="43:25" pos:end="43:38">STATUS_MESSAGE</name> <operator pos:start="43:40" pos:end="43:40">=</operator> <call pos:start="43:42" pos:end="43:74"><name pos:start="43:42" pos:end="43:67"><name pos:start="43:42" pos:end="43:50">FileUtils</name><operator pos:start="43:51" pos:end="43:51">.</operator><name pos:start="43:52" pos:end="43:67">readFileToString</name></name><argument_list pos:start="43:68" pos:end="43:74">(<argument pos:start="43:69" pos:end="43:73"><expr pos:start="43:69" pos:end="43:73"><name pos:start="43:69" pos:end="43:73">mfile</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

			<expr_stmt pos:start="45:25" pos:end="45:55"><expr pos:start="45:25" pos:end="45:54"><name pos:start="45:25" pos:end="45:30">socket</name> <operator pos:start="45:32" pos:end="45:32">=</operator> <call pos:start="45:34" pos:end="45:54"><name pos:start="45:34" pos:end="45:52"><name pos:start="45:34" pos:end="45:45">serverSocket</name><operator pos:start="45:46" pos:end="45:46">.</operator><name pos:start="45:47" pos:end="45:52">accept</name></name><argument_list pos:start="45:53" pos:end="45:54">()</argument_list></call></expr>;</expr_stmt>
			<expr_stmt pos:start="46:25" pos:end="46:68"><expr pos:start="46:25" pos:end="46:67"><call pos:start="46:25" pos:end="46:67"><name pos:start="46:25" pos:end="46:42"><name pos:start="46:25" pos:end="46:30">System</name><operator pos:start="46:31" pos:end="46:31">.</operator><name pos:start="46:32" pos:end="46:34">out</name><operator pos:start="46:35" pos:end="46:35">.</operator><name pos:start="46:36" pos:end="46:42">println</name></name><argument_list pos:start="46:43" pos:end="46:67">(<argument pos:start="46:44" pos:end="46:66"><expr pos:start="46:44" pos:end="46:66"><literal type="string" pos:start="46:44" pos:end="46:66">"Client has connected!"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<decl_stmt pos:start="47:25" pos:end="47:65"><decl pos:start="47:25" pos:end="47:64"><type pos:start="47:25" pos:end="47:35"><name pos:start="47:25" pos:end="47:35">InputStream</name></type> <name pos:start="47:37" pos:end="47:38">is</name> <init pos:start="47:40" pos:end="47:64">= <expr pos:start="47:42" pos:end="47:64"><call pos:start="47:42" pos:end="47:64"><name pos:start="47:42" pos:end="47:62"><name pos:start="47:42" pos:end="47:47">socket</name><operator pos:start="47:48" pos:end="47:48">.</operator><name pos:start="47:49" pos:end="47:62">getInputStream</name></name><argument_list pos:start="47:63" pos:end="47:64">()</argument_list></call></expr></init></decl>;</decl_stmt>
			<decl_stmt pos:start="48:25" pos:end="48:74"><decl pos:start="48:25" pos:end="48:73"><type pos:start="48:25" pos:end="48:41"><name pos:start="48:25" pos:end="48:41">InputStreamReader</name></type> <name pos:start="48:43" pos:end="48:45">isr</name> <init pos:start="48:47" pos:end="48:73">= <expr pos:start="48:49" pos:end="48:73"><operator pos:start="48:49" pos:end="48:51">new</operator> <call pos:start="48:53" pos:end="48:73"><name pos:start="48:53" pos:end="48:69">InputStreamReader</name><argument_list pos:start="48:70" pos:end="48:73">(<argument pos:start="48:71" pos:end="48:72"><expr pos:start="48:71" pos:end="48:72"><name pos:start="48:71" pos:end="48:72">is</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<decl_stmt pos:start="49:25" pos:end="49:68"><decl pos:start="49:25" pos:end="49:67"><type pos:start="49:25" pos:end="49:38"><name pos:start="49:25" pos:end="49:38">BufferedReader</name></type> <name pos:start="49:40" pos:end="49:41">br</name> <init pos:start="49:43" pos:end="49:67">= <expr pos:start="49:45" pos:end="49:67"><operator pos:start="49:45" pos:end="49:47">new</operator> <call pos:start="49:49" pos:end="49:67"><name pos:start="49:49" pos:end="49:62">BufferedReader</name><argument_list pos:start="49:63" pos:end="49:67">(<argument pos:start="49:64" pos:end="49:66"><expr pos:start="49:64" pos:end="49:66"><name pos:start="49:64" pos:end="49:66">isr</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

			<decl_stmt pos:start="51:25" pos:end="51:90"><decl pos:start="51:25" pos:end="51:89"><type pos:start="51:25" pos:end="51:37"><name pos:start="51:25" pos:end="51:37">LlaCoordinate</name></type> <name pos:start="51:39" pos:end="51:43">cord1</name> <init pos:start="51:45" pos:end="51:89">= <expr pos:start="51:47" pos:end="51:89"><operator pos:start="51:47" pos:end="51:49">new</operator> <call pos:start="51:51" pos:end="51:89"><name pos:start="51:51" pos:end="51:63">LlaCoordinate</name><argument_list pos:start="51:64" pos:end="51:89">(<argument pos:start="51:65" pos:end="51:73"><expr pos:start="51:65" pos:end="51:73"><literal type="number" pos:start="51:65" pos:end="51:73">41.519200</literal></expr></argument>, <argument pos:start="51:76" pos:end="51:85"><expr pos:start="51:76" pos:end="51:85"><operator pos:start="51:76" pos:end="51:76">-</operator><literal type="number" pos:start="51:77" pos:end="51:85">86.239127</literal></expr></argument>, <argument pos:start="51:88" pos:end="51:88"><expr pos:start="51:88" pos:end="51:88"><literal type="number" pos:start="51:88" pos:end="51:88">0</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<decl_stmt pos:start="52:25" pos:end="52:90"><decl pos:start="52:25" pos:end="52:89"><type pos:start="52:25" pos:end="52:37"><name pos:start="52:25" pos:end="52:37">LlaCoordinate</name></type> <name pos:start="52:39" pos:end="52:43">cord2</name> <init pos:start="52:45" pos:end="52:89">= <expr pos:start="52:47" pos:end="52:89"><operator pos:start="52:47" pos:end="52:49">new</operator> <call pos:start="52:51" pos:end="52:89"><name pos:start="52:51" pos:end="52:63">LlaCoordinate</name><argument_list pos:start="52:64" pos:end="52:89">(<argument pos:start="52:65" pos:end="52:73"><expr pos:start="52:65" pos:end="52:73"><literal type="number" pos:start="52:65" pos:end="52:73">41.519400</literal></expr></argument>, <argument pos:start="52:76" pos:end="52:85"><expr pos:start="52:76" pos:end="52:85"><operator pos:start="52:76" pos:end="52:76">-</operator><literal type="number" pos:start="52:77" pos:end="52:85">86.239527</literal></expr></argument>, <argument pos:start="52:88" pos:end="52:88"><expr pos:start="52:88" pos:end="52:88"><literal type="number" pos:start="52:88" pos:end="52:88">0</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<decl_stmt pos:start="53:25" pos:end="53:90"><decl pos:start="53:25" pos:end="53:89"><type pos:start="53:25" pos:end="53:37"><name pos:start="53:25" pos:end="53:37">LlaCoordinate</name></type> <name pos:start="53:39" pos:end="53:43">cord3</name> <init pos:start="53:45" pos:end="53:89">= <expr pos:start="53:47" pos:end="53:89"><operator pos:start="53:47" pos:end="53:49">new</operator> <call pos:start="53:51" pos:end="53:89"><name pos:start="53:51" pos:end="53:63">LlaCoordinate</name><argument_list pos:start="53:64" pos:end="53:89">(<argument pos:start="53:65" pos:end="53:73"><expr pos:start="53:65" pos:end="53:73"><literal type="number" pos:start="53:65" pos:end="53:73">41.519600</literal></expr></argument>, <argument pos:start="53:76" pos:end="53:85"><expr pos:start="53:76" pos:end="53:85"><operator pos:start="53:76" pos:end="53:76">-</operator><literal type="number" pos:start="53:77" pos:end="53:85">86.239927</literal></expr></argument>, <argument pos:start="53:88" pos:end="53:88"><expr pos:start="53:88" pos:end="53:88"><literal type="number" pos:start="53:88" pos:end="53:88">0</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

			<decl_stmt pos:start="55:25" pos:end="55:98"><decl pos:start="55:25" pos:end="55:97"><type pos:start="55:25" pos:end="55:43"><name pos:start="55:25" pos:end="55:43">UAVHandshakeMessage</name></type> <name pos:start="55:45" pos:end="55:53">handshake</name> <init pos:start="55:55" pos:end="55:97">= <expr pos:start="55:57" pos:end="55:97"><operator pos:start="55:57" pos:end="55:59">new</operator> <call pos:start="55:61" pos:end="55:97"><name pos:start="55:61" pos:end="55:79">UAVHandshakeMessage</name><argument_list pos:start="55:80" pos:end="55:97">(<argument pos:start="55:81" pos:end="55:86"><expr pos:start="55:81" pos:end="55:86"><literal type="string" pos:start="55:81" pos:end="55:86">"FAKE"</literal></expr></argument>, <argument pos:start="55:89" pos:end="55:96"><expr pos:start="55:89" pos:end="55:96"><literal type="string" pos:start="55:89" pos:end="55:96">"Drone1"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<expr_stmt pos:start="56:25" pos:end="56:49"><expr pos:start="56:25" pos:end="56:48"><call pos:start="56:25" pos:end="56:48"><name pos:start="56:25" pos:end="56:41"><name pos:start="56:25" pos:end="56:33">handshake</name><operator pos:start="56:34" pos:end="56:34">.</operator><name pos:start="56:35" pos:end="56:41">setHome</name></name><argument_list pos:start="56:42" pos:end="56:48">(<argument pos:start="56:43" pos:end="56:47"><expr pos:start="56:43" pos:end="56:47"><name pos:start="56:43" pos:end="56:47">cord1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt pos:start="57:25" pos:end="57:76"><expr pos:start="57:25" pos:end="57:75"><call pos:start="57:25" pos:end="57:75"><name pos:start="57:25" pos:end="57:41"><name pos:start="57:25" pos:end="57:33">handshake</name><operator pos:start="57:34" pos:end="57:34">.</operator><name pos:start="57:35" pos:end="57:41">setType</name></name><argument_list pos:start="57:42" pos:end="57:75">(<argument pos:start="57:43" pos:end="57:74"><expr pos:start="57:43" pos:end="57:74"><name pos:start="57:43" pos:end="57:74"><name pos:start="57:43" pos:end="57:61">UAVHandshakeMessage</name><operator pos:start="57:62" pos:end="57:62">.</operator><name pos:start="57:63" pos:end="57:74">MESSAGE_TYPE</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<decl_stmt pos:start="58:25" pos:end="58:85"><decl pos:start="58:25" pos:end="58:84"><type pos:start="58:25" pos:end="58:28"><name pos:start="58:25" pos:end="58:28">File</name></type> <name pos:start="58:30" pos:end="58:33">file</name> <init pos:start="58:35" pos:end="58:84">= <expr pos:start="58:37" pos:end="58:84"><operator pos:start="58:37" pos:end="58:39">new</operator> <call pos:start="58:41" pos:end="58:84"><name pos:start="58:41" pos:end="58:44">File</name><argument_list pos:start="58:45" pos:end="58:84">(<argument pos:start="58:46" pos:end="58:83"><expr pos:start="58:46" pos:end="58:83"><literal type="string" pos:start="58:46" pos:end="58:50">"sac"</literal> <operator pos:start="58:52" pos:end="58:52">+</operator> <name pos:start="58:54" pos:end="58:67"><name pos:start="58:54" pos:end="58:57">File</name><operator pos:start="58:58" pos:end="58:58">.</operator><name pos:start="58:59" pos:end="58:67">separator</name></name> <operator pos:start="58:69" pos:end="58:69">+</operator> <literal type="string" pos:start="58:71" pos:end="58:83">"sacjson.txt"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<expr_stmt pos:start="59:25" pos:end="59:67"><expr pos:start="59:25" pos:end="59:66"><call pos:start="59:25" pos:end="59:66"><name pos:start="59:25" pos:end="59:42"><name pos:start="59:25" pos:end="59:30">System</name><operator pos:start="59:31" pos:end="59:31">.</operator><name pos:start="59:32" pos:end="59:34">out</name><operator pos:start="59:35" pos:end="59:35">.</operator><name pos:start="59:36" pos:end="59:42">println</name></name><argument_list pos:start="59:43" pos:end="59:66">(<argument pos:start="59:44" pos:end="59:65"><expr pos:start="59:44" pos:end="59:65"><call pos:start="59:44" pos:end="59:65"><name pos:start="59:44" pos:end="59:63"><name pos:start="59:44" pos:end="59:47">file</name><operator pos:start="59:48" pos:end="59:48">.</operator><name pos:start="59:49" pos:end="59:63">getAbsolutePath</name></name><argument_list pos:start="59:64" pos:end="59:65">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<decl_stmt pos:start="60:25" pos:end="60:70"><decl pos:start="60:25" pos:end="60:69"><type pos:start="60:25" pos:end="60:30"><name pos:start="60:25" pos:end="60:30">String</name></type> <name pos:start="60:32" pos:end="60:34">sac</name> <init pos:start="60:36" pos:end="60:69">= <expr pos:start="60:38" pos:end="60:69"><call pos:start="60:38" pos:end="60:69"><name pos:start="60:38" pos:end="60:63"><name pos:start="60:38" pos:end="60:46">FileUtils</name><operator pos:start="60:47" pos:end="60:47">.</operator><name pos:start="60:48" pos:end="60:63">readFileToString</name></name><argument_list pos:start="60:64" pos:end="60:69">(<argument pos:start="60:65" pos:end="60:68"><expr pos:start="60:65" pos:end="60:68"><name pos:start="60:65" pos:end="60:68">file</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<expr_stmt pos:start="61:25" pos:end="61:64"><expr pos:start="61:25" pos:end="61:63"><call pos:start="61:25" pos:end="61:63"><name pos:start="61:25" pos:end="61:44"><name pos:start="61:25" pos:end="61:33">handshake</name><operator pos:start="61:34" pos:end="61:34">.</operator><name pos:start="61:35" pos:end="61:44">addPropery</name></name><argument_list pos:start="61:45" pos:end="61:63">(<argument pos:start="61:46" pos:end="61:57"><expr pos:start="61:46" pos:end="61:57"><literal type="string" pos:start="61:46" pos:end="61:57">"safetycase"</literal></expr></argument>, <argument pos:start="61:60" pos:end="61:62"><expr pos:start="61:60" pos:end="61:62"><name pos:start="61:60" pos:end="61:62">sac</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

			<decl_stmt pos:start="63:25" pos:end="63:100"><decl pos:start="63:25" pos:end="63:99"><type pos:start="63:25" pos:end="63:43"><name pos:start="63:25" pos:end="63:43">UAVHandshakeMessage</name></type> <name pos:start="63:45" pos:end="63:54">handshake2</name> <init pos:start="63:56" pos:end="63:99">= <expr pos:start="63:58" pos:end="63:99"><operator pos:start="63:58" pos:end="63:60">new</operator> <call pos:start="63:62" pos:end="63:99"><name pos:start="63:62" pos:end="63:80">UAVHandshakeMessage</name><argument_list pos:start="63:81" pos:end="63:99">(<argument pos:start="63:82" pos:end="63:87"><expr pos:start="63:82" pos:end="63:87"><literal type="string" pos:start="63:82" pos:end="63:87">"FAKE"</literal></expr></argument>,  <argument pos:start="63:91" pos:end="63:98"><expr pos:start="63:91" pos:end="63:98"><literal type="string" pos:start="63:91" pos:end="63:98">"Drone2"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<expr_stmt pos:start="64:25" pos:end="64:50"><expr pos:start="64:25" pos:end="64:49"><call pos:start="64:25" pos:end="64:49"><name pos:start="64:25" pos:end="64:42"><name pos:start="64:25" pos:end="64:34">handshake2</name><operator pos:start="64:35" pos:end="64:35">.</operator><name pos:start="64:36" pos:end="64:42">setHome</name></name><argument_list pos:start="64:43" pos:end="64:49">(<argument pos:start="64:44" pos:end="64:48"><expr pos:start="64:44" pos:end="64:48"><name pos:start="64:44" pos:end="64:48">cord2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt pos:start="65:25" pos:end="65:77"><expr pos:start="65:25" pos:end="65:76"><call pos:start="65:25" pos:end="65:76"><name pos:start="65:25" pos:end="65:42"><name pos:start="65:25" pos:end="65:34">handshake2</name><operator pos:start="65:35" pos:end="65:35">.</operator><name pos:start="65:36" pos:end="65:42">setType</name></name><argument_list pos:start="65:43" pos:end="65:76">(<argument pos:start="65:44" pos:end="65:75"><expr pos:start="65:44" pos:end="65:75"><name pos:start="65:44" pos:end="65:75"><name pos:start="65:44" pos:end="65:62">UAVHandshakeMessage</name><operator pos:start="65:63" pos:end="65:63">.</operator><name pos:start="65:64" pos:end="65:75">MESSAGE_TYPE</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt pos:start="66:25" pos:end="66:65"><expr pos:start="66:25" pos:end="66:64"><call pos:start="66:25" pos:end="66:64"><name pos:start="66:25" pos:end="66:45"><name pos:start="66:25" pos:end="66:34">handshake2</name><operator pos:start="66:35" pos:end="66:35">.</operator><name pos:start="66:36" pos:end="66:45">addPropery</name></name><argument_list pos:start="66:46" pos:end="66:64">(<argument pos:start="66:47" pos:end="66:58"><expr pos:start="66:47" pos:end="66:58"><literal type="string" pos:start="66:47" pos:end="66:58">"safetycase"</literal></expr></argument>, <argument pos:start="66:61" pos:end="66:63"><expr pos:start="66:61" pos:end="66:63"><name pos:start="66:61" pos:end="66:63">sac</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

			<decl_stmt pos:start="68:25" pos:end="68:100"><decl pos:start="68:25" pos:end="68:99"><type pos:start="68:25" pos:end="68:43"><name pos:start="68:25" pos:end="68:43">UAVHandshakeMessage</name></type> <name pos:start="68:45" pos:end="68:54">handshake3</name> <init pos:start="68:56" pos:end="68:99">= <expr pos:start="68:58" pos:end="68:99"><operator pos:start="68:58" pos:end="68:60">new</operator> <call pos:start="68:62" pos:end="68:99"><name pos:start="68:62" pos:end="68:80">UAVHandshakeMessage</name><argument_list pos:start="68:81" pos:end="68:99">(<argument pos:start="68:82" pos:end="68:87"><expr pos:start="68:82" pos:end="68:87"><literal type="string" pos:start="68:82" pos:end="68:87">"FAKE"</literal></expr></argument>,  <argument pos:start="68:91" pos:end="68:98"><expr pos:start="68:91" pos:end="68:98"><literal type="string" pos:start="68:91" pos:end="68:98">"Drone3"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<expr_stmt pos:start="69:25" pos:end="69:50"><expr pos:start="69:25" pos:end="69:49"><call pos:start="69:25" pos:end="69:49"><name pos:start="69:25" pos:end="69:42"><name pos:start="69:25" pos:end="69:34">handshake3</name><operator pos:start="69:35" pos:end="69:35">.</operator><name pos:start="69:36" pos:end="69:42">setHome</name></name><argument_list pos:start="69:43" pos:end="69:49">(<argument pos:start="69:44" pos:end="69:48"><expr pos:start="69:44" pos:end="69:48"><name pos:start="69:44" pos:end="69:48">cord3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt pos:start="70:25" pos:end="70:77"><expr pos:start="70:25" pos:end="70:76"><call pos:start="70:25" pos:end="70:76"><name pos:start="70:25" pos:end="70:42"><name pos:start="70:25" pos:end="70:34">handshake3</name><operator pos:start="70:35" pos:end="70:35">.</operator><name pos:start="70:36" pos:end="70:42">setType</name></name><argument_list pos:start="70:43" pos:end="70:76">(<argument pos:start="70:44" pos:end="70:75"><expr pos:start="70:44" pos:end="70:75"><name pos:start="70:44" pos:end="70:75"><name pos:start="70:44" pos:end="70:62">UAVHandshakeMessage</name><operator pos:start="70:63" pos:end="70:63">.</operator><name pos:start="70:64" pos:end="70:75">MESSAGE_TYPE</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt pos:start="71:25" pos:end="71:65"><expr pos:start="71:25" pos:end="71:64"><call pos:start="71:25" pos:end="71:64"><name pos:start="71:25" pos:end="71:45"><name pos:start="71:25" pos:end="71:34">handshake3</name><operator pos:start="71:35" pos:end="71:35">.</operator><name pos:start="71:36" pos:end="71:45">addPropery</name></name><argument_list pos:start="71:46" pos:end="71:64">(<argument pos:start="71:47" pos:end="71:58"><expr pos:start="71:47" pos:end="71:58"><literal type="string" pos:start="71:47" pos:end="71:58">"safetycase"</literal></expr></argument>, <argument pos:start="71:61" pos:end="71:63"><expr pos:start="71:61" pos:end="71:63"><name pos:start="71:61" pos:end="71:63">sac</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

			<decl_stmt pos:start="73:25" pos:end="73:72"><decl pos:start="73:25" pos:end="73:71"><type pos:start="73:25" pos:end="73:30"><name pos:start="73:25" pos:end="73:30">String</name></type> <name pos:start="73:32" pos:end="73:46">handshakeString</name> <init pos:start="73:48" pos:end="73:71">= <expr pos:start="73:50" pos:end="73:71"><call pos:start="73:50" pos:end="73:71"><name pos:start="73:50" pos:end="73:60"><name pos:start="73:50" pos:end="73:53">GSON</name><operator pos:start="73:54" pos:end="73:54">.</operator><name pos:start="73:55" pos:end="73:60">toJson</name></name><argument_list pos:start="73:61" pos:end="73:71">(<argument pos:start="73:62" pos:end="73:70"><expr pos:start="73:62" pos:end="73:70"><name pos:start="73:62" pos:end="73:70">handshake</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<decl_stmt pos:start="74:25" pos:end="74:74"><decl pos:start="74:25" pos:end="74:73"><type pos:start="74:25" pos:end="74:30"><name pos:start="74:25" pos:end="74:30">String</name></type> <name pos:start="74:32" pos:end="74:47">handshakeString2</name> <init pos:start="74:49" pos:end="74:73">= <expr pos:start="74:51" pos:end="74:73"><call pos:start="74:51" pos:end="74:73"><name pos:start="74:51" pos:end="74:61"><name pos:start="74:51" pos:end="74:54">GSON</name><operator pos:start="74:55" pos:end="74:55">.</operator><name pos:start="74:56" pos:end="74:61">toJson</name></name><argument_list pos:start="74:62" pos:end="74:73">(<argument pos:start="74:63" pos:end="74:72"><expr pos:start="74:63" pos:end="74:72"><name pos:start="74:63" pos:end="74:72">handshake2</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<decl_stmt pos:start="75:25" pos:end="75:74"><decl pos:start="75:25" pos:end="75:73"><type pos:start="75:25" pos:end="75:30"><name pos:start="75:25" pos:end="75:30">String</name></type> <name pos:start="75:32" pos:end="75:47">handshakeString3</name> <init pos:start="75:49" pos:end="75:73">= <expr pos:start="75:51" pos:end="75:73"><call pos:start="75:51" pos:end="75:73"><name pos:start="75:51" pos:end="75:61"><name pos:start="75:51" pos:end="75:54">GSON</name><operator pos:start="75:55" pos:end="75:55">.</operator><name pos:start="75:56" pos:end="75:61">toJson</name></name><argument_list pos:start="75:62" pos:end="75:73">(<argument pos:start="75:63" pos:end="75:72"><expr pos:start="75:63" pos:end="75:72"><name pos:start="75:63" pos:end="75:72">handshake3</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<expr_stmt pos:start="76:25" pos:end="76:43"><expr pos:start="76:25" pos:end="76:42"><call pos:start="76:25" pos:end="76:42"><name pos:start="76:25" pos:end="76:36"><name pos:start="76:25" pos:end="76:30">Thread</name><operator pos:start="76:31" pos:end="76:31">.</operator><name pos:start="76:32" pos:end="76:36">sleep</name></name><argument_list pos:start="76:37" pos:end="76:42">(<argument pos:start="76:38" pos:end="76:41"><expr pos:start="76:38" pos:end="76:41"><literal type="number" pos:start="76:38" pos:end="76:41">3000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<decl_stmt pos:start="77:25" pos:end="77:67"><decl pos:start="77:25" pos:end="77:66"><type pos:start="77:25" pos:end="77:36"><name pos:start="77:25" pos:end="77:36">OutputStream</name></type> <name pos:start="77:38" pos:end="77:39">os</name> <init pos:start="77:41" pos:end="77:66">= <expr pos:start="77:43" pos:end="77:66"><call pos:start="77:43" pos:end="77:66"><name pos:start="77:43" pos:end="77:64"><name pos:start="77:43" pos:end="77:48">socket</name><operator pos:start="77:49" pos:end="77:49">.</operator><name pos:start="77:50" pos:end="77:64">getOutputStream</name></name><argument_list pos:start="77:65" pos:end="77:66">()</argument_list></call></expr></init></decl>;</decl_stmt>
			<decl_stmt pos:start="78:25" pos:end="78:76"><decl pos:start="78:25" pos:end="78:75"><type pos:start="78:25" pos:end="78:42"><name pos:start="78:25" pos:end="78:42">OutputStreamWriter</name></type> <name pos:start="78:44" pos:end="78:46">osw</name> <init pos:start="78:48" pos:end="78:75">= <expr pos:start="78:50" pos:end="78:75"><operator pos:start="78:50" pos:end="78:52">new</operator> <call pos:start="78:54" pos:end="78:75"><name pos:start="78:54" pos:end="78:71">OutputStreamWriter</name><argument_list pos:start="78:72" pos:end="78:75">(<argument pos:start="78:73" pos:end="78:74"><expr pos:start="78:73" pos:end="78:74"><name pos:start="78:73" pos:end="78:74">os</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<decl_stmt pos:start="79:25" pos:end="79:68"><decl pos:start="79:25" pos:end="79:67"><type pos:start="79:25" pos:end="79:38"><name pos:start="79:25" pos:end="79:38">BufferedWriter</name></type> <name pos:start="79:40" pos:end="79:41">bw</name> <init pos:start="79:43" pos:end="79:67">= <expr pos:start="79:45" pos:end="79:67"><operator pos:start="79:45" pos:end="79:47">new</operator> <call pos:start="79:49" pos:end="79:67"><name pos:start="79:49" pos:end="79:62">BufferedWriter</name><argument_list pos:start="79:63" pos:end="79:67">(<argument pos:start="79:64" pos:end="79:66"><expr pos:start="79:64" pos:end="79:66"><name pos:start="79:64" pos:end="79:66">osw</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<expr_stmt pos:start="80:25" pos:end="80:50"><expr pos:start="80:25" pos:end="80:49"><call pos:start="80:25" pos:end="80:49"><name pos:start="80:25" pos:end="80:32"><name pos:start="80:25" pos:end="80:26">bw</name><operator pos:start="80:27" pos:end="80:27">.</operator><name pos:start="80:28" pos:end="80:32">write</name></name><argument_list pos:start="80:33" pos:end="80:49">(<argument pos:start="80:34" pos:end="80:48"><expr pos:start="80:34" pos:end="80:48"><name pos:start="80:34" pos:end="80:48">handshakeString</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt pos:start="81:25" pos:end="81:39"><expr pos:start="81:25" pos:end="81:38"><call pos:start="81:25" pos:end="81:38"><name pos:start="81:25" pos:end="81:32"><name pos:start="81:25" pos:end="81:26">bw</name><operator pos:start="81:27" pos:end="81:27">.</operator><name pos:start="81:28" pos:end="81:32">write</name></name><argument_list pos:start="81:33" pos:end="81:38">(<argument pos:start="81:34" pos:end="81:37"><expr pos:start="81:34" pos:end="81:37"><literal type="string" pos:start="81:34" pos:end="81:37">"\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt pos:start="82:25" pos:end="82:95"><expr pos:start="82:25" pos:end="82:94"><call pos:start="82:25" pos:end="82:94"><name pos:start="82:25" pos:end="82:42"><name pos:start="82:25" pos:end="82:30">System</name><operator pos:start="82:31" pos:end="82:31">.</operator><name pos:start="82:32" pos:end="82:34">out</name><operator pos:start="82:35" pos:end="82:35">.</operator><name pos:start="82:36" pos:end="82:42">println</name></name><argument_list pos:start="82:43" pos:end="82:94">(<argument pos:start="82:44" pos:end="82:93"><expr pos:start="82:44" pos:end="82:93"><literal type="string" pos:start="82:44" pos:end="82:75">"Message sent to the client is "</literal> <operator pos:start="82:77" pos:end="82:77">+</operator> <name pos:start="82:79" pos:end="82:93">handshakeString</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt pos:start="83:25" pos:end="83:35"><expr pos:start="83:25" pos:end="83:34"><call pos:start="83:25" pos:end="83:34"><name pos:start="83:25" pos:end="83:32"><name pos:start="83:25" pos:end="83:26">bw</name><operator pos:start="83:27" pos:end="83:27">.</operator><name pos:start="83:28" pos:end="83:32">flush</name></name><argument_list pos:start="83:33" pos:end="83:34">()</argument_list></call></expr>;</expr_stmt>

			<expr_stmt pos:start="85:25" pos:end="85:43"><expr pos:start="85:25" pos:end="85:42"><call pos:start="85:25" pos:end="85:42"><name pos:start="85:25" pos:end="85:36"><name pos:start="85:25" pos:end="85:30">Thread</name><operator pos:start="85:31" pos:end="85:31">.</operator><name pos:start="85:32" pos:end="85:36">sleep</name></name><argument_list pos:start="85:37" pos:end="85:42">(<argument pos:start="85:38" pos:end="85:41"><expr pos:start="85:38" pos:end="85:41"><literal type="number" pos:start="85:38" pos:end="85:41">1000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt pos:start="86:25" pos:end="86:51"><expr pos:start="86:25" pos:end="86:50"><call pos:start="86:25" pos:end="86:50"><name pos:start="86:25" pos:end="86:32"><name pos:start="86:25" pos:end="86:26">bw</name><operator pos:start="86:27" pos:end="86:27">.</operator><name pos:start="86:28" pos:end="86:32">write</name></name><argument_list pos:start="86:33" pos:end="86:50">(<argument pos:start="86:34" pos:end="86:49"><expr pos:start="86:34" pos:end="86:49"><name pos:start="86:34" pos:end="86:49">handshakeString2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt pos:start="87:25" pos:end="87:39"><expr pos:start="87:25" pos:end="87:38"><call pos:start="87:25" pos:end="87:38"><name pos:start="87:25" pos:end="87:32"><name pos:start="87:25" pos:end="87:26">bw</name><operator pos:start="87:27" pos:end="87:27">.</operator><name pos:start="87:28" pos:end="87:32">write</name></name><argument_list pos:start="87:33" pos:end="87:38">(<argument pos:start="87:34" pos:end="87:37"><expr pos:start="87:34" pos:end="87:37"><literal type="string" pos:start="87:34" pos:end="87:37">"\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt pos:start="88:25" pos:end="88:96"><expr pos:start="88:25" pos:end="88:95"><call pos:start="88:25" pos:end="88:95"><name pos:start="88:25" pos:end="88:42"><name pos:start="88:25" pos:end="88:30">System</name><operator pos:start="88:31" pos:end="88:31">.</operator><name pos:start="88:32" pos:end="88:34">out</name><operator pos:start="88:35" pos:end="88:35">.</operator><name pos:start="88:36" pos:end="88:42">println</name></name><argument_list pos:start="88:43" pos:end="88:95">(<argument pos:start="88:44" pos:end="88:94"><expr pos:start="88:44" pos:end="88:94"><literal type="string" pos:start="88:44" pos:end="88:75">"Message sent to the client is "</literal> <operator pos:start="88:77" pos:end="88:77">+</operator> <name pos:start="88:79" pos:end="88:94">handshakeString2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt pos:start="89:25" pos:end="89:35"><expr pos:start="89:25" pos:end="89:34"><call pos:start="89:25" pos:end="89:34"><name pos:start="89:25" pos:end="89:32"><name pos:start="89:25" pos:end="89:26">bw</name><operator pos:start="89:27" pos:end="89:27">.</operator><name pos:start="89:28" pos:end="89:32">flush</name></name><argument_list pos:start="89:33" pos:end="89:34">()</argument_list></call></expr>;</expr_stmt>

			<expr_stmt pos:start="91:25" pos:end="91:43"><expr pos:start="91:25" pos:end="91:42"><call pos:start="91:25" pos:end="91:42"><name pos:start="91:25" pos:end="91:36"><name pos:start="91:25" pos:end="91:30">Thread</name><operator pos:start="91:31" pos:end="91:31">.</operator><name pos:start="91:32" pos:end="91:36">sleep</name></name><argument_list pos:start="91:37" pos:end="91:42">(<argument pos:start="91:38" pos:end="91:41"><expr pos:start="91:38" pos:end="91:41"><literal type="number" pos:start="91:38" pos:end="91:41">1000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt pos:start="92:25" pos:end="92:51"><expr pos:start="92:25" pos:end="92:50"><call pos:start="92:25" pos:end="92:50"><name pos:start="92:25" pos:end="92:32"><name pos:start="92:25" pos:end="92:26">bw</name><operator pos:start="92:27" pos:end="92:27">.</operator><name pos:start="92:28" pos:end="92:32">write</name></name><argument_list pos:start="92:33" pos:end="92:50">(<argument pos:start="92:34" pos:end="92:49"><expr pos:start="92:34" pos:end="92:49"><name pos:start="92:34" pos:end="92:49">handshakeString3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt pos:start="93:25" pos:end="93:39"><expr pos:start="93:25" pos:end="93:38"><call pos:start="93:25" pos:end="93:38"><name pos:start="93:25" pos:end="93:32"><name pos:start="93:25" pos:end="93:26">bw</name><operator pos:start="93:27" pos:end="93:27">.</operator><name pos:start="93:28" pos:end="93:32">write</name></name><argument_list pos:start="93:33" pos:end="93:38">(<argument pos:start="93:34" pos:end="93:37"><expr pos:start="93:34" pos:end="93:37"><literal type="string" pos:start="93:34" pos:end="93:37">"\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt pos:start="94:25" pos:end="94:96"><expr pos:start="94:25" pos:end="94:95"><call pos:start="94:25" pos:end="94:95"><name pos:start="94:25" pos:end="94:42"><name pos:start="94:25" pos:end="94:30">System</name><operator pos:start="94:31" pos:end="94:31">.</operator><name pos:start="94:32" pos:end="94:34">out</name><operator pos:start="94:35" pos:end="94:35">.</operator><name pos:start="94:36" pos:end="94:42">println</name></name><argument_list pos:start="94:43" pos:end="94:95">(<argument pos:start="94:44" pos:end="94:94"><expr pos:start="94:44" pos:end="94:94"><literal type="string" pos:start="94:44" pos:end="94:75">"Message sent to the client is "</literal> <operator pos:start="94:77" pos:end="94:77">+</operator> <name pos:start="94:79" pos:end="94:94">handshakeString3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt pos:start="95:25" pos:end="95:35"><expr pos:start="95:25" pos:end="95:34"><call pos:start="95:25" pos:end="95:34"><name pos:start="95:25" pos:end="95:32"><name pos:start="95:25" pos:end="95:26">bw</name><operator pos:start="95:27" pos:end="95:27">.</operator><name pos:start="95:28" pos:end="95:32">flush</name></name><argument_list pos:start="95:33" pos:end="95:34">()</argument_list></call></expr>;</expr_stmt>

			<comment type="line" pos:start="97:25" pos:end="97:41">// br.readLine();</comment>
			<comment type="line" pos:start="98:25" pos:end="98:42">// bw.write("\n");</comment>
			<comment type="line" pos:start="99:25" pos:end="99:38">// bw.flush();</comment>

			<expr_stmt pos:start="101:25" pos:end="101:42"><expr pos:start="101:25" pos:end="101:41"><call pos:start="101:25" pos:end="101:41"><name pos:start="101:25" pos:end="101:36"><name pos:start="101:25" pos:end="101:30">Thread</name><operator pos:start="101:31" pos:end="101:31">.</operator><name pos:start="101:32" pos:end="101:36">sleep</name></name><argument_list pos:start="101:37" pos:end="101:41">(<argument pos:start="101:38" pos:end="101:40"><expr pos:start="101:38" pos:end="101:40"><literal type="number" pos:start="101:38" pos:end="101:40">500</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<decl_stmt pos:start="102:25" pos:end="102:36"><decl pos:start="102:25" pos:end="102:35"><type pos:start="102:25" pos:end="102:27"><name pos:start="102:25" pos:end="102:27">int</name></type> <name pos:start="102:29" pos:end="102:31">run</name> <init pos:start="102:33" pos:end="102:35">= <expr pos:start="102:35" pos:end="102:35"><literal type="number" pos:start="102:35" pos:end="102:35">0</literal></expr></init></decl>;</decl_stmt>
			<while pos:start="103:25" pos:end="142:25">while <condition pos:start="103:31" pos:end="103:36">(<expr pos:start="103:32" pos:end="103:35"><literal type="boolean" pos:start="103:32" pos:end="103:35">true</literal></expr>)</condition> <block pos:start="103:38" pos:end="142:25">{<block_content pos:start="104:33" pos:end="140:51">
				<decl_stmt pos:start="104:33" pos:end="104:46"><decl pos:start="104:33" pos:end="104:45"><type pos:start="104:33" pos:end="104:38"><name pos:start="104:33" pos:end="104:38">String</name></type> <name pos:start="104:40" pos:end="104:45">toSend</name></decl>;</decl_stmt>
				<if_stmt pos:start="105:33" pos:end="110:33"><if pos:start="105:33" pos:end="107:33">if <condition pos:start="105:36" pos:end="105:49">(<expr pos:start="105:37" pos:end="105:48"><name pos:start="105:37" pos:end="105:39">run</name> <operator pos:start="105:41" pos:end="105:41">%</operator> <literal type="number" pos:start="105:43" pos:end="105:43">5</literal> <operator pos:start="105:45" pos:end="105:46">==</operator> <literal type="number" pos:start="105:48" pos:end="105:48">0</literal></expr>)</condition> <block pos:start="105:51" pos:end="107:33">{<block_content pos:start="106:41" pos:end="106:73">
					<expr_stmt pos:start="106:41" pos:end="106:73"><expr pos:start="106:41" pos:end="106:72"><name pos:start="106:41" pos:end="106:46">toSend</name> <operator pos:start="106:48" pos:end="106:48">=</operator> <call pos:start="106:50" pos:end="106:72"><name pos:start="106:50" pos:end="106:70">sendMonitoringMessage</name><argument_list pos:start="106:71" pos:end="106:72">()</argument_list></call></expr>;</expr_stmt>
				</block_content>}</block></if> <else pos:start="107:35" pos:end="110:33">else <block pos:start="107:40" pos:end="110:33">{<block_content pos:start="109:41" pos:end="109:73">
					<comment type="line" pos:start="108:41" pos:end="108:72">// toSend = sendStatusMessage();</comment>
					<expr_stmt pos:start="109:41" pos:end="109:73"><expr pos:start="109:41" pos:end="109:72"><name pos:start="109:41" pos:end="109:46">toSend</name> <operator pos:start="109:48" pos:end="109:48">=</operator> <call pos:start="109:50" pos:end="109:72"><name pos:start="109:50" pos:end="109:70">sendMonitoringMessage</name><argument_list pos:start="109:71" pos:end="109:72">()</argument_list></call></expr>;</expr_stmt>
				</block_content>}</block></else></if_stmt>

				<comment type="line" pos:start="112:33" pos:end="112:65">// if flying mission mlevel &gt; 20%</comment>
				<comment type="line" pos:start="113:33" pos:end="113:61">// if retunr home blvel &gt; 10;</comment>

				<comment type="line" pos:start="115:33" pos:end="115:70">// Reading the message from the client</comment>

				<comment type="line" pos:start="117:33" pos:end="117:65">// String number = br.readLine();</comment>
				<comment type="line" pos:start="118:33" pos:end="118:99">// System.out.println("Message received from client is " + number);</comment>

				<comment type="line" pos:start="120:33" pos:end="120:93">// Multiplying the number by 2 and forming the return message</comment>
				<comment type="line" pos:start="121:33" pos:end="121:56">// String returnMessage;</comment>
				<comment type="line" pos:start="122:33" pos:end="122:40">// try {</comment>
				<comment type="line" pos:start="123:33" pos:end="123:84">// int numberInIntFormat = Integer.parseInt(number);</comment>
				<comment type="line" pos:start="124:33" pos:end="124:75">// int returnValue = numberInIntFormat * 2;</comment>
				<comment type="line" pos:start="125:33" pos:end="125:86">// returnMessage = String.valueOf(returnValue) + "\n";</comment>
				<comment type="line" pos:start="126:33" pos:end="126:70">// } catch (NumberFormatException e) {</comment>
				<comment type="line" pos:start="127:33" pos:end="127:100">// // Input was not a number. Sending proper message back to client.</comment>
				<comment type="line" pos:start="128:33" pos:end="128:83">// returnMessage = "Please send a proper number\n";</comment>
				<comment type="line" pos:start="129:33" pos:end="129:36">// }</comment>

				<comment type="line" pos:start="131:33" pos:end="131:75">// Sending the response back to the client.</comment>
				<comment type="line" pos:start="132:33" pos:end="132:78">// OutputStream os = socket.getOutputStream();</comment>
				<comment type="line" pos:start="133:33" pos:end="133:87">// OutputStreamWriter osw = new OutputStreamWriter(os);</comment>
				<comment type="line" pos:start="134:33" pos:end="134:79">// BufferedWriter bw = new BufferedWriter(osw);</comment>
				<expr_stmt pos:start="135:33" pos:end="135:49"><expr pos:start="135:33" pos:end="135:48"><call pos:start="135:33" pos:end="135:48"><name pos:start="135:33" pos:end="135:40"><name pos:start="135:33" pos:end="135:34">bw</name><operator pos:start="135:35" pos:end="135:35">.</operator><name pos:start="135:36" pos:end="135:40">write</name></name><argument_list pos:start="135:41" pos:end="135:48">(<argument pos:start="135:42" pos:end="135:47"><expr pos:start="135:42" pos:end="135:47"><name pos:start="135:42" pos:end="135:47">toSend</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<expr_stmt pos:start="136:33" pos:end="136:47"><expr pos:start="136:33" pos:end="136:46"><call pos:start="136:33" pos:end="136:46"><name pos:start="136:33" pos:end="136:40"><name pos:start="136:33" pos:end="136:34">bw</name><operator pos:start="136:35" pos:end="136:35">.</operator><name pos:start="136:36" pos:end="136:40">write</name></name><argument_list pos:start="136:41" pos:end="136:46">(<argument pos:start="136:42" pos:end="136:45"><expr pos:start="136:42" pos:end="136:45"><literal type="string" pos:start="136:42" pos:end="136:45">"\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<expr_stmt pos:start="137:33" pos:end="137:94"><expr pos:start="137:33" pos:end="137:93"><call pos:start="137:33" pos:end="137:93"><name pos:start="137:33" pos:end="137:50"><name pos:start="137:33" pos:end="137:38">System</name><operator pos:start="137:39" pos:end="137:39">.</operator><name pos:start="137:40" pos:end="137:42">out</name><operator pos:start="137:43" pos:end="137:43">.</operator><name pos:start="137:44" pos:end="137:50">println</name></name><argument_list pos:start="137:51" pos:end="137:93">(<argument pos:start="137:52" pos:end="137:92"><expr pos:start="137:52" pos:end="137:92"><literal type="string" pos:start="137:52" pos:end="137:83">"Message sent to the client is "</literal> <operator pos:start="137:85" pos:end="137:85">+</operator> <name pos:start="137:87" pos:end="137:92">toSend</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<expr_stmt pos:start="138:33" pos:end="138:43"><expr pos:start="138:33" pos:end="138:42"><call pos:start="138:33" pos:end="138:42"><name pos:start="138:33" pos:end="138:40"><name pos:start="138:33" pos:end="138:34">bw</name><operator pos:start="138:35" pos:end="138:35">.</operator><name pos:start="138:36" pos:end="138:40">flush</name></name><argument_list pos:start="138:41" pos:end="138:42">()</argument_list></call></expr>;</expr_stmt>
				<expr_stmt pos:start="139:33" pos:end="139:38"><expr pos:start="139:33" pos:end="139:37"><name pos:start="139:33" pos:end="139:35">run</name><operator pos:start="139:36" pos:end="139:37">++</operator></expr>;</expr_stmt>
				<expr_stmt pos:start="140:33" pos:end="140:51"><expr pos:start="140:33" pos:end="140:50"><call pos:start="140:33" pos:end="140:50"><name pos:start="140:33" pos:end="140:44"><name pos:start="140:33" pos:end="140:38">Thread</name><operator pos:start="140:39" pos:end="140:39">.</operator><name pos:start="140:40" pos:end="140:44">sleep</name></name><argument_list pos:start="140:45" pos:end="140:50">(<argument pos:start="140:46" pos:end="140:49"><expr pos:start="140:46" pos:end="140:49"><literal type="number" pos:start="140:46" pos:end="140:49">1000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

			</block_content>}</block></while>
		</block_content>}</block> <catch pos:start="143:19" pos:end="145:17">catch <parameter_list pos:start="143:25" pos:end="143:37">(<parameter pos:start="143:26" pos:end="143:36"><decl pos:start="143:26" pos:end="143:36"><type pos:start="143:26" pos:end="143:36"><name pos:start="143:26" pos:end="143:34">Exception</name></type> <name pos:start="143:36" pos:end="143:36">e</name></decl></parameter>)</parameter_list> <block pos:start="143:39" pos:end="145:17">{<block_content pos:start="144:25" pos:end="144:44">
			<expr_stmt pos:start="144:25" pos:end="144:44"><expr pos:start="144:25" pos:end="144:43"><call pos:start="144:25" pos:end="144:43"><name pos:start="144:25" pos:end="144:41"><name pos:start="144:25" pos:end="144:25">e</name><operator pos:start="144:26" pos:end="144:26">.</operator><name pos:start="144:27" pos:end="144:41">printStackTrace</name></name><argument_list pos:start="144:42" pos:end="144:43">()</argument_list></call></expr>;</expr_stmt>
		</block_content>}</block></catch></try>
	</block_content>}</block></function>

	<function pos:start="148:9" pos:end="151:9"><type pos:start="148:9" pos:end="148:29"><specifier pos:start="148:9" pos:end="148:15">private</specifier> <specifier pos:start="148:17" pos:end="148:22">static</specifier> <name pos:start="148:24" pos:end="148:29">String</name></type> <name pos:start="148:31" pos:end="148:47">sendStatusMessage</name><parameter_list pos:start="148:48" pos:end="148:49">()</parameter_list> <block pos:start="148:51" pos:end="151:9">{<block_content pos:start="150:17" pos:end="150:38">

		<return pos:start="150:17" pos:end="150:38">return <expr pos:start="150:24" pos:end="150:37"><name pos:start="150:24" pos:end="150:37">STATUS_MESSAGE</name></expr>;</return>
	</block_content>}</block></function>

	<function pos:start="153:9" pos:end="167:9"><type pos:start="153:9" pos:end="153:29"><specifier pos:start="153:9" pos:end="153:15">private</specifier> <specifier pos:start="153:17" pos:end="153:22">static</specifier> <name pos:start="153:24" pos:end="153:29">String</name></type> <name pos:start="153:31" pos:end="153:51">sendMonitoringMessage</name><parameter_list pos:start="153:52" pos:end="153:53">()</parameter_list> <block pos:start="153:55" pos:end="167:9">{<block_content pos:start="154:17" pos:end="166:30">
		<decl_stmt pos:start="154:17" pos:end="154:95"><decl pos:start="154:17" pos:end="154:94"><type pos:start="154:17" pos:end="154:36"><name pos:start="154:17" pos:end="154:36">UAVMonitoringMessage</name></type> <name pos:start="154:38" pos:end="154:39">mm</name> <init pos:start="154:41" pos:end="154:94">= <expr pos:start="154:43" pos:end="154:94"><operator pos:start="154:43" pos:end="154:45">new</operator> <call pos:start="154:47" pos:end="154:94"><name pos:start="154:47" pos:end="154:66">UAVMonitoringMessage</name><argument_list pos:start="154:67" pos:end="154:94">(<argument pos:start="154:68" pos:end="154:75"><expr pos:start="154:68" pos:end="154:75"><literal type="string" pos:start="154:68" pos:end="154:75">"Drone1"</literal></expr></argument>,<argument pos:start="154:77" pos:end="154:82"><expr pos:start="154:77" pos:end="154:82"><literal type="string" pos:start="154:77" pos:end="154:82">"FAKE"</literal></expr></argument>,  <argument pos:start="154:86" pos:end="154:93"><expr pos:start="154:86" pos:end="154:93"><literal type="string" pos:start="154:86" pos:end="154:93">"Drone1"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<decl_stmt pos:start="155:17" pos:end="155:43"><decl pos:start="155:17" pos:end="155:42"><type pos:start="155:17" pos:end="155:22"><name pos:start="155:17" pos:end="155:22">Random</name></type> <name pos:start="155:24" pos:end="155:27">rand</name> <init pos:start="155:29" pos:end="155:42">= <expr pos:start="155:31" pos:end="155:42"><operator pos:start="155:31" pos:end="155:33">new</operator> <call pos:start="155:35" pos:end="155:42"><name pos:start="155:35" pos:end="155:40">Random</name><argument_list pos:start="155:41" pos:end="155:42">()</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt pos:start="156:17" pos:end="156:62"><expr pos:start="156:17" pos:end="156:61"><call pos:start="156:17" pos:end="156:61"><name pos:start="156:17" pos:end="156:26"><name pos:start="156:17" pos:end="156:18">mm</name><operator pos:start="156:19" pos:end="156:19">.</operator><name pos:start="156:20" pos:end="156:26">setType</name></name><argument_list pos:start="156:27" pos:end="156:61">(<argument pos:start="156:28" pos:end="156:60"><expr pos:start="156:28" pos:end="156:60"><name pos:start="156:28" pos:end="156:60"><name pos:start="156:28" pos:end="156:47">UAVMonitoringMessage</name><operator pos:start="156:48" pos:end="156:48">.</operator><name pos:start="156:49" pos:end="156:60">MESSAGE_TYPE</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<comment type="line" pos:start="157:17" pos:end="157:41">// mm.setuavid("DRONE1");</comment>

		<expr_stmt pos:start="159:17" pos:end="159:49"><expr pos:start="159:17" pos:end="159:48"><call pos:start="159:17" pos:end="159:48"><name pos:start="159:17" pos:end="159:29"><name pos:start="159:17" pos:end="159:18">mm</name><operator pos:start="159:19" pos:end="159:19">.</operator><name pos:start="159:20" pos:end="159:29">addPropery</name></name><argument_list pos:start="159:30" pos:end="159:48">(<argument pos:start="159:31" pos:end="159:41"><expr pos:start="159:31" pos:end="159:41"><literal type="string" pos:start="159:31" pos:end="159:41">"longitude"</literal></expr></argument>, <argument pos:start="159:44" pos:end="159:47"><expr pos:start="159:44" pos:end="159:47"><literal type="string" pos:start="159:44" pos:end="159:47">"23"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt pos:start="160:17" pos:end="160:48"><expr pos:start="160:17" pos:end="160:47"><call pos:start="160:17" pos:end="160:47"><name pos:start="160:17" pos:end="160:29"><name pos:start="160:17" pos:end="160:18">mm</name><operator pos:start="160:19" pos:end="160:19">.</operator><name pos:start="160:20" pos:end="160:29">addPropery</name></name><argument_list pos:start="160:30" pos:end="160:47">(<argument pos:start="160:31" pos:end="160:40"><expr pos:start="160:31" pos:end="160:40"><literal type="string" pos:start="160:31" pos:end="160:40">"velocity"</literal></expr></argument>, <argument pos:start="160:43" pos:end="160:46"><expr pos:start="160:43" pos:end="160:46"><literal type="string" pos:start="160:43" pos:end="160:46">"80"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt pos:start="161:17" pos:end="161:48"><expr pos:start="161:17" pos:end="161:47"><call pos:start="161:17" pos:end="161:47"><name pos:start="161:17" pos:end="161:29"><name pos:start="161:17" pos:end="161:18">mm</name><operator pos:start="161:19" pos:end="161:19">.</operator><name pos:start="161:20" pos:end="161:29">addPropery</name></name><argument_list pos:start="161:30" pos:end="161:47">(<argument pos:start="161:31" pos:end="161:40"><expr pos:start="161:31" pos:end="161:40"><literal type="string" pos:start="161:31" pos:end="161:40">"altitude"</literal></expr></argument>, <argument pos:start="161:43" pos:end="161:46"><expr pos:start="161:43" pos:end="161:46"><literal type="string" pos:start="161:43" pos:end="161:46">"50"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt pos:start="162:17" pos:end="162:84"><expr pos:start="162:17" pos:end="162:83"><call pos:start="162:17" pos:end="162:83"><name pos:start="162:17" pos:end="162:29"><name pos:start="162:17" pos:end="162:18">mm</name><operator pos:start="162:19" pos:end="162:19">.</operator><name pos:start="162:20" pos:end="162:29">addPropery</name></name><argument_list pos:start="162:30" pos:end="162:83">(<argument pos:start="162:31" pos:end="162:60"><expr pos:start="162:31" pos:end="162:60"><literal type="string" pos:start="162:31" pos:end="162:60">"battery_remaining_percentage"</literal></expr></argument>, <argument pos:start="162:63" pos:end="162:82"><expr pos:start="162:63" pos:end="162:82"><call pos:start="162:63" pos:end="162:78"><name pos:start="162:63" pos:end="162:74"><name pos:start="162:63" pos:end="162:66">rand</name><operator pos:start="162:67" pos:end="162:67">.</operator><name pos:start="162:68" pos:end="162:74">nextInt</name></name><argument_list pos:start="162:75" pos:end="162:78">(<argument pos:start="162:76" pos:end="162:77"><expr pos:start="162:76" pos:end="162:77"><literal type="number" pos:start="162:76" pos:end="162:77">10</literal></expr></argument>)</argument_list></call> <operator pos:start="162:80" pos:end="162:80">+</operator> <literal type="number" pos:start="162:82" pos:end="162:82">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt pos:start="163:17" pos:end="163:47"><expr pos:start="163:17" pos:end="163:46"><call pos:start="163:17" pos:end="163:46"><name pos:start="163:17" pos:end="163:29"><name pos:start="163:17" pos:end="163:18">mm</name><operator pos:start="163:19" pos:end="163:19">.</operator><name pos:start="163:20" pos:end="163:29">addPropery</name></name><argument_list pos:start="163:30" pos:end="163:46">(<argument pos:start="163:31" pos:end="163:40"><expr pos:start="163:31" pos:end="163:40"><literal type="string" pos:start="163:31" pos:end="163:40">"gps_bias"</literal></expr></argument>, <argument pos:start="163:43" pos:end="163:45"><expr pos:start="163:43" pos:end="163:45"><literal type="string" pos:start="163:43" pos:end="163:45">"1"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<comment type="line" pos:start="164:17" pos:end="164:55">// mm.addPropery("max_velocity", "60");</comment>
		<decl_stmt pos:start="165:17" pos:end="165:48"><decl pos:start="165:17" pos:end="165:47"><type pos:start="165:17" pos:end="165:22"><name pos:start="165:17" pos:end="165:22">String</name></type> <name pos:start="165:24" pos:end="165:29">toSend</name> <init pos:start="165:31" pos:end="165:47">= <expr pos:start="165:33" pos:end="165:47"><call pos:start="165:33" pos:end="165:47"><name pos:start="165:33" pos:end="165:43"><name pos:start="165:33" pos:end="165:36">GSON</name><operator pos:start="165:37" pos:end="165:37">.</operator><name pos:start="165:38" pos:end="165:43">toJson</name></name><argument_list pos:start="165:44" pos:end="165:47">(<argument pos:start="165:45" pos:end="165:46"><expr pos:start="165:45" pos:end="165:46"><name pos:start="165:45" pos:end="165:46">mm</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<return pos:start="166:17" pos:end="166:30">return <expr pos:start="166:24" pos:end="166:29"><name pos:start="166:24" pos:end="166:29">toSend</name></expr>;</return>
	</block_content>}</block></function>

}</block></class></unit>
