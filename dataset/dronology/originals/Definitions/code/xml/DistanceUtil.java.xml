<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="Java" filename="flatCode/DistanceUtil.java" pos:tabs="8"><package pos:start="1:1" pos:end="1:35">package <name pos:start="1:9" pos:end="1:34"><name pos:start="1:9" pos:end="1:11">edu</name><operator pos:start="1:12" pos:end="1:12">.</operator><name pos:start="1:13" pos:end="1:14">nd</name><operator pos:start="1:15" pos:end="1:15">.</operator><name pos:start="1:16" pos:end="1:24">dronology</name><operator pos:start="1:25" pos:end="1:25">.</operator><name pos:start="1:26" pos:end="1:29">core</name><operator pos:start="1:30" pos:end="1:30">.</operator><name pos:start="1:31" pos:end="1:34">util</name></name>;</package>

<import pos:start="3:1" pos:end="3:54">import <name pos:start="3:8" pos:end="3:53"><name pos:start="3:8" pos:end="3:10">edu</name><operator pos:start="3:11" pos:end="3:11">.</operator><name pos:start="3:12" pos:end="3:13">nd</name><operator pos:start="3:14" pos:end="3:14">.</operator><name pos:start="3:15" pos:end="3:23">dronology</name><operator pos:start="3:24" pos:end="3:24">.</operator><name pos:start="3:25" pos:end="3:28">core</name><operator pos:start="3:29" pos:end="3:29">.</operator><name pos:start="3:30" pos:end="3:39">coordinate</name><operator pos:start="3:40" pos:end="3:40">.</operator><name pos:start="3:41" pos:end="3:53">LlaCoordinate</name></name>;</import>
<import pos:start="4:1" pos:end="4:38">import <name pos:start="4:8" pos:end="4:37"><name pos:start="4:8" pos:end="4:10">edu</name><operator pos:start="4:11" pos:end="4:11">.</operator><name pos:start="4:12" pos:end="4:13">nd</name><operator pos:start="4:14" pos:end="4:14">.</operator><name pos:start="4:15" pos:end="4:23">dronology</name><operator pos:start="4:24" pos:end="4:24">.</operator><name pos:start="4:25" pos:end="4:28">util</name><operator pos:start="4:29" pos:end="4:29">.</operator><name pos:start="4:30" pos:end="4:37">NullUtil</name></name>;</import>

<class pos:start="6:1" pos:end="59:1"><specifier pos:start="6:1" pos:end="6:6">public</specifier> class <name pos:start="6:14" pos:end="6:25">DistanceUtil</name> <block pos:start="6:27" pos:end="59:1">{

	<comment type="block" format="javadoc" pos:start="8:9" pos:end="14:11">/**
	 * Calculate distance between two points in latitude and longitude taking into account height difference. If you are not interested in height difference pass 0.0. Uses Haversine method as its base.
	 * 
	 * lat1, lon1 Start point lat2, lon2 End point el1 Start altitude in meters el2 End altitude in meters
	 * 
	 * @returns Distance in Meters
	 */</comment>
	<function pos:start="15:9" pos:end="35:9"><type pos:start="15:9" pos:end="15:28"><specifier pos:start="15:9" pos:end="15:14">public</specifier> <specifier pos:start="15:16" pos:end="15:21">static</specifier> <name pos:start="15:23" pos:end="15:28">double</name></type> <name pos:start="15:30" pos:end="15:37">distance</name><parameter_list pos:start="15:38" pos:end="15:113">(<parameter pos:start="15:39" pos:end="15:49"><decl pos:start="15:39" pos:end="15:49"><type pos:start="15:39" pos:end="15:49"><name pos:start="15:39" pos:end="15:44">double</name></type> <name pos:start="15:46" pos:end="15:49">lat1</name></decl></parameter>, <parameter pos:start="15:52" pos:end="15:62"><decl pos:start="15:52" pos:end="15:62"><type pos:start="15:52" pos:end="15:62"><name pos:start="15:52" pos:end="15:57">double</name></type> <name pos:start="15:59" pos:end="15:62">lat2</name></decl></parameter>, <parameter pos:start="15:65" pos:end="15:75"><decl pos:start="15:65" pos:end="15:75"><type pos:start="15:65" pos:end="15:75"><name pos:start="15:65" pos:end="15:70">double</name></type> <name pos:start="15:72" pos:end="15:75">lon1</name></decl></parameter>, <parameter pos:start="15:78" pos:end="15:88"><decl pos:start="15:78" pos:end="15:88"><type pos:start="15:78" pos:end="15:88"><name pos:start="15:78" pos:end="15:83">double</name></type> <name pos:start="15:85" pos:end="15:88">lon2</name></decl></parameter>, <parameter pos:start="15:91" pos:end="15:100"><decl pos:start="15:91" pos:end="15:100"><type pos:start="15:91" pos:end="15:100"><name pos:start="15:91" pos:end="15:96">double</name></type> <name pos:start="15:98" pos:end="15:100">el1</name></decl></parameter>, <parameter pos:start="15:103" pos:end="15:112"><decl pos:start="15:103" pos:end="15:112"><type pos:start="15:103" pos:end="15:112"><name pos:start="15:103" pos:end="15:108">double</name></type> <name pos:start="15:110" pos:end="15:112">el2</name></decl></parameter>)</parameter_list> <block pos:start="15:115" pos:end="35:9">{<block_content pos:start="21:17" pos:end="34:43">

		<comment type="line" pos:start="17:17" pos:end="17:39">// lat1 = lat1/1000000;</comment>
		<comment type="line" pos:start="18:17" pos:end="18:39">// lat2 = lat2/1000000;</comment>
		<comment type="line" pos:start="19:17" pos:end="19:39">// lon1 = lon1/1000000;</comment>
		<comment type="line" pos:start="20:17" pos:end="20:39">// lon2 = lon2/1000000;</comment>
		<decl_stmt pos:start="21:17" pos:end="21:35"><decl pos:start="21:17" pos:end="21:34"><type pos:start="21:17" pos:end="21:25"><specifier pos:start="21:17" pos:end="21:21">final</specifier> <name pos:start="21:23" pos:end="21:25">int</name></type> <name pos:start="21:27" pos:end="21:27">R</name> <init pos:start="21:29" pos:end="21:34">= <expr pos:start="21:31" pos:end="21:34"><literal type="number" pos:start="21:31" pos:end="21:34">6371</literal></expr></init></decl>;</decl_stmt> <comment type="line" pos:start="21:37" pos:end="21:58">// Radius of the earth</comment>

		<decl_stmt pos:start="23:17" pos:end="23:65"><decl pos:start="23:17" pos:end="23:64"><type pos:start="23:17" pos:end="23:22"><name pos:start="23:17" pos:end="23:22">double</name></type> <name pos:start="23:24" pos:end="23:34">latDistance</name> <init pos:start="23:36" pos:end="23:64">= <expr pos:start="23:38" pos:end="23:64"><call pos:start="23:38" pos:end="23:64"><name pos:start="23:38" pos:end="23:51"><name pos:start="23:38" pos:end="23:41">Math</name><operator pos:start="23:42" pos:end="23:42">.</operator><name pos:start="23:43" pos:end="23:51">toRadians</name></name><argument_list pos:start="23:52" pos:end="23:64">(<argument pos:start="23:53" pos:end="23:63"><expr pos:start="23:53" pos:end="23:63"><name pos:start="23:53" pos:end="23:56">lat2</name> <operator pos:start="23:58" pos:end="23:58">-</operator> <name pos:start="23:60" pos:end="23:63">lat1</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<decl_stmt pos:start="24:17" pos:end="24:65"><decl pos:start="24:17" pos:end="24:64"><type pos:start="24:17" pos:end="24:22"><name pos:start="24:17" pos:end="24:22">double</name></type> <name pos:start="24:24" pos:end="24:34">lonDistance</name> <init pos:start="24:36" pos:end="24:64">= <expr pos:start="24:38" pos:end="24:64"><call pos:start="24:38" pos:end="24:64"><name pos:start="24:38" pos:end="24:51"><name pos:start="24:38" pos:end="24:41">Math</name><operator pos:start="24:42" pos:end="24:42">.</operator><name pos:start="24:43" pos:end="24:51">toRadians</name></name><argument_list pos:start="24:52" pos:end="24:64">(<argument pos:start="24:53" pos:end="24:63"><expr pos:start="24:53" pos:end="24:63"><name pos:start="24:53" pos:end="24:56">lon2</name> <operator pos:start="24:58" pos:end="24:58">-</operator> <name pos:start="24:60" pos:end="24:63">lon1</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<decl_stmt pos:start="25:17" pos:end="26:121"><decl pos:start="25:17" pos:end="26:120"><type pos:start="25:17" pos:end="25:22"><name pos:start="25:17" pos:end="25:22">double</name></type> <name pos:start="25:24" pos:end="25:24">a</name> <init pos:start="25:26" pos:end="26:120">= <expr pos:start="25:28" pos:end="26:120"><call pos:start="25:28" pos:end="25:52"><name pos:start="25:28" pos:end="25:35"><name pos:start="25:28" pos:end="25:31">Math</name><operator pos:start="25:32" pos:end="25:32">.</operator><name pos:start="25:33" pos:end="25:35">sin</name></name><argument_list pos:start="25:36" pos:end="25:52">(<argument pos:start="25:37" pos:end="25:51"><expr pos:start="25:37" pos:end="25:51"><name pos:start="25:37" pos:end="25:47">latDistance</name> <operator pos:start="25:49" pos:end="25:49">/</operator> <literal type="number" pos:start="25:51" pos:end="25:51">2</literal></expr></argument>)</argument_list></call> <operator pos:start="25:54" pos:end="25:54">*</operator> <call pos:start="25:56" pos:end="25:80"><name pos:start="25:56" pos:end="25:63"><name pos:start="25:56" pos:end="25:59">Math</name><operator pos:start="25:60" pos:end="25:60">.</operator><name pos:start="25:61" pos:end="25:63">sin</name></name><argument_list pos:start="25:64" pos:end="25:80">(<argument pos:start="25:65" pos:end="25:79"><expr pos:start="25:65" pos:end="25:79"><name pos:start="25:65" pos:end="25:75">latDistance</name> <operator pos:start="25:77" pos:end="25:77">/</operator> <literal type="number" pos:start="25:79" pos:end="25:79">2</literal></expr></argument>)</argument_list></call> <operator pos:start="25:82" pos:end="25:82">+</operator> <call pos:start="25:84" pos:end="25:113"><name pos:start="25:84" pos:end="25:91"><name pos:start="25:84" pos:end="25:87">Math</name><operator pos:start="25:88" pos:end="25:88">.</operator><name pos:start="25:89" pos:end="25:91">cos</name></name><argument_list pos:start="25:92" pos:end="25:113">(<argument pos:start="25:93" pos:end="25:112"><expr pos:start="25:93" pos:end="25:112"><call pos:start="25:93" pos:end="25:112"><name pos:start="25:93" pos:end="25:106"><name pos:start="25:93" pos:end="25:96">Math</name><operator pos:start="25:97" pos:end="25:97">.</operator><name pos:start="25:98" pos:end="25:106">toRadians</name></name><argument_list pos:start="25:107" pos:end="25:112">(<argument pos:start="25:108" pos:end="25:111"><expr pos:start="25:108" pos:end="25:111"><name pos:start="25:108" pos:end="25:111">lat1</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call>
				<operator pos:start="26:33" pos:end="26:33">*</operator> <call pos:start="26:35" pos:end="26:64"><name pos:start="26:35" pos:end="26:42"><name pos:start="26:35" pos:end="26:38">Math</name><operator pos:start="26:39" pos:end="26:39">.</operator><name pos:start="26:40" pos:end="26:42">cos</name></name><argument_list pos:start="26:43" pos:end="26:64">(<argument pos:start="26:44" pos:end="26:63"><expr pos:start="26:44" pos:end="26:63"><call pos:start="26:44" pos:end="26:63"><name pos:start="26:44" pos:end="26:57"><name pos:start="26:44" pos:end="26:47">Math</name><operator pos:start="26:48" pos:end="26:48">.</operator><name pos:start="26:49" pos:end="26:57">toRadians</name></name><argument_list pos:start="26:58" pos:end="26:63">(<argument pos:start="26:59" pos:end="26:62"><expr pos:start="26:59" pos:end="26:62"><name pos:start="26:59" pos:end="26:62">lat2</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call> <operator pos:start="26:66" pos:end="26:66">*</operator> <call pos:start="26:68" pos:end="26:92"><name pos:start="26:68" pos:end="26:75"><name pos:start="26:68" pos:end="26:71">Math</name><operator pos:start="26:72" pos:end="26:72">.</operator><name pos:start="26:73" pos:end="26:75">sin</name></name><argument_list pos:start="26:76" pos:end="26:92">(<argument pos:start="26:77" pos:end="26:91"><expr pos:start="26:77" pos:end="26:91"><name pos:start="26:77" pos:end="26:87">lonDistance</name> <operator pos:start="26:89" pos:end="26:89">/</operator> <literal type="number" pos:start="26:91" pos:end="26:91">2</literal></expr></argument>)</argument_list></call> <operator pos:start="26:94" pos:end="26:94">*</operator> <call pos:start="26:96" pos:end="26:120"><name pos:start="26:96" pos:end="26:103"><name pos:start="26:96" pos:end="26:99">Math</name><operator pos:start="26:100" pos:end="26:100">.</operator><name pos:start="26:101" pos:end="26:103">sin</name></name><argument_list pos:start="26:104" pos:end="26:120">(<argument pos:start="26:105" pos:end="26:119"><expr pos:start="26:105" pos:end="26:119"><name pos:start="26:105" pos:end="26:115">lonDistance</name> <operator pos:start="26:117" pos:end="26:117">/</operator> <literal type="number" pos:start="26:119" pos:end="26:119">2</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<decl_stmt pos:start="27:17" pos:end="27:74"><decl pos:start="27:17" pos:end="27:73"><type pos:start="27:17" pos:end="27:22"><name pos:start="27:17" pos:end="27:22">double</name></type> <name pos:start="27:24" pos:end="27:24">c</name> <init pos:start="27:26" pos:end="27:73">= <expr pos:start="27:28" pos:end="27:73"><literal type="number" pos:start="27:28" pos:end="27:28">2</literal> <operator pos:start="27:30" pos:end="27:30">*</operator> <call pos:start="27:32" pos:end="27:73"><name pos:start="27:32" pos:end="27:41"><name pos:start="27:32" pos:end="27:35">Math</name><operator pos:start="27:36" pos:end="27:36">.</operator><name pos:start="27:37" pos:end="27:41">atan2</name></name><argument_list pos:start="27:42" pos:end="27:73">(<argument pos:start="27:43" pos:end="27:54"><expr pos:start="27:43" pos:end="27:54"><call pos:start="27:43" pos:end="27:54"><name pos:start="27:43" pos:end="27:51"><name pos:start="27:43" pos:end="27:46">Math</name><operator pos:start="27:47" pos:end="27:47">.</operator><name pos:start="27:48" pos:end="27:51">sqrt</name></name><argument_list pos:start="27:52" pos:end="27:54">(<argument pos:start="27:53" pos:end="27:53"><expr pos:start="27:53" pos:end="27:53"><name pos:start="27:53" pos:end="27:53">a</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="27:57" pos:end="27:72"><expr pos:start="27:57" pos:end="27:72"><call pos:start="27:57" pos:end="27:72"><name pos:start="27:57" pos:end="27:65"><name pos:start="27:57" pos:end="27:60">Math</name><operator pos:start="27:61" pos:end="27:61">.</operator><name pos:start="27:62" pos:end="27:65">sqrt</name></name><argument_list pos:start="27:66" pos:end="27:72">(<argument pos:start="27:67" pos:end="27:71"><expr pos:start="27:67" pos:end="27:71"><literal type="number" pos:start="27:67" pos:end="27:67">1</literal> <operator pos:start="27:69" pos:end="27:69">-</operator> <name pos:start="27:71" pos:end="27:71">a</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<decl_stmt pos:start="28:17" pos:end="28:47"><decl pos:start="28:17" pos:end="28:46"><type pos:start="28:17" pos:end="28:22"><name pos:start="28:17" pos:end="28:22">double</name></type> <name pos:start="28:24" pos:end="28:31">distance</name> <init pos:start="28:33" pos:end="28:46">= <expr pos:start="28:35" pos:end="28:46"><name pos:start="28:35" pos:end="28:35">R</name> <operator pos:start="28:37" pos:end="28:37">*</operator> <name pos:start="28:39" pos:end="28:39">c</name> <operator pos:start="28:41" pos:end="28:41">*</operator> <literal type="number" pos:start="28:43" pos:end="28:46">1000</literal></expr></init></decl>;</decl_stmt> <comment type="line" pos:start="28:49" pos:end="28:68">// convert to meters</comment>

		<decl_stmt pos:start="30:17" pos:end="30:42"><decl pos:start="30:17" pos:end="30:41"><type pos:start="30:17" pos:end="30:22"><name pos:start="30:17" pos:end="30:22">double</name></type> <name pos:start="30:24" pos:end="30:29">height</name> <init pos:start="30:31" pos:end="30:41">= <expr pos:start="30:33" pos:end="30:41"><name pos:start="30:33" pos:end="30:35">el1</name> <operator pos:start="30:37" pos:end="30:37">-</operator> <name pos:start="30:39" pos:end="30:41">el2</name></expr></init></decl>;</decl_stmt>

		<expr_stmt pos:start="32:17" pos:end="32:71"><expr pos:start="32:17" pos:end="32:70"><name pos:start="32:17" pos:end="32:24">distance</name> <operator pos:start="32:26" pos:end="32:26">=</operator> <call pos:start="32:28" pos:end="32:48"><name pos:start="32:28" pos:end="32:35"><name pos:start="32:28" pos:end="32:31">Math</name><operator pos:start="32:32" pos:end="32:32">.</operator><name pos:start="32:33" pos:end="32:35">pow</name></name><argument_list pos:start="32:36" pos:end="32:48">(<argument pos:start="32:37" pos:end="32:44"><expr pos:start="32:37" pos:end="32:44"><name pos:start="32:37" pos:end="32:44">distance</name></expr></argument>, <argument pos:start="32:47" pos:end="32:47"><expr pos:start="32:47" pos:end="32:47"><literal type="number" pos:start="32:47" pos:end="32:47">2</literal></expr></argument>)</argument_list></call> <operator pos:start="32:50" pos:end="32:50">+</operator> <call pos:start="32:52" pos:end="32:70"><name pos:start="32:52" pos:end="32:59"><name pos:start="32:52" pos:end="32:55">Math</name><operator pos:start="32:56" pos:end="32:56">.</operator><name pos:start="32:57" pos:end="32:59">pow</name></name><argument_list pos:start="32:60" pos:end="32:70">(<argument pos:start="32:61" pos:end="32:66"><expr pos:start="32:61" pos:end="32:66"><name pos:start="32:61" pos:end="32:66">height</name></expr></argument>, <argument pos:start="32:69" pos:end="32:69"><expr pos:start="32:69" pos:end="32:69"><literal type="number" pos:start="32:69" pos:end="32:69">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		<return pos:start="34:17" pos:end="34:43">return <expr pos:start="34:24" pos:end="34:42"><call pos:start="34:24" pos:end="34:42"><name pos:start="34:24" pos:end="34:32"><name pos:start="34:24" pos:end="34:27">Math</name><operator pos:start="34:28" pos:end="34:28">.</operator><name pos:start="34:29" pos:end="34:32">sqrt</name></name><argument_list pos:start="34:33" pos:end="34:42">(<argument pos:start="34:34" pos:end="34:41"><expr pos:start="34:34" pos:end="34:41"><name pos:start="34:34" pos:end="34:41">distance</name></expr></argument>)</argument_list></call></expr>;</return>
	</block_content>}</block></function>

	<function pos:start="37:9" pos:end="40:9"><type pos:start="37:9" pos:end="37:28"><specifier pos:start="37:9" pos:end="37:14">public</specifier> <specifier pos:start="37:16" pos:end="37:21">static</specifier> <name pos:start="37:23" pos:end="37:28">double</name></type> <name pos:start="37:30" pos:end="37:37">distance</name><parameter_list pos:start="37:38" pos:end="37:98">(<parameter pos:start="37:39" pos:end="37:67"><decl pos:start="37:39" pos:end="37:67"><type pos:start="37:39" pos:end="37:67"><name pos:start="37:39" pos:end="37:51">LlaCoordinate</name></type> <name pos:start="37:53" pos:end="37:67">currentPosition</name></decl></parameter>, <parameter pos:start="37:70" pos:end="37:97"><decl pos:start="37:70" pos:end="37:97"><type pos:start="37:70" pos:end="37:97"><name pos:start="37:70" pos:end="37:82">LlaCoordinate</name></type> <name pos:start="37:84" pos:end="37:97">targetPosition</name></decl></parameter>)</parameter_list> <block pos:start="37:100" pos:end="40:9">{<block_content pos:start="38:17" pos:end="39:69">
		<return pos:start="38:17" pos:end="39:69">return <expr pos:start="38:24" pos:end="39:68"><call pos:start="38:24" pos:end="39:68"><name pos:start="38:24" pos:end="38:31">distance</name><argument_list pos:start="38:32" pos:end="39:68">(<argument pos:start="38:33" pos:end="38:61"><expr pos:start="38:33" pos:end="38:61"><call pos:start="38:33" pos:end="38:61"><name pos:start="38:33" pos:end="38:59"><name pos:start="38:33" pos:end="38:47">currentPosition</name><operator pos:start="38:48" pos:end="38:48">.</operator><name pos:start="38:49" pos:end="38:59">getLatitude</name></name><argument_list pos:start="38:60" pos:end="38:61">()</argument_list></call></expr></argument>, <argument pos:start="38:64" pos:end="38:91"><expr pos:start="38:64" pos:end="38:91"><call pos:start="38:64" pos:end="38:91"><name pos:start="38:64" pos:end="38:89"><name pos:start="38:64" pos:end="38:77">targetPosition</name><operator pos:start="38:78" pos:end="38:78">.</operator><name pos:start="38:79" pos:end="38:89">getLatitude</name></name><argument_list pos:start="38:90" pos:end="38:91">()</argument_list></call></expr></argument>, <argument pos:start="38:94" pos:end="38:123"><expr pos:start="38:94" pos:end="38:123"><call pos:start="38:94" pos:end="38:123"><name pos:start="38:94" pos:end="38:121"><name pos:start="38:94" pos:end="38:108">currentPosition</name><operator pos:start="38:109" pos:end="38:109">.</operator><name pos:start="38:110" pos:end="38:121">getLongitude</name></name><argument_list pos:start="38:122" pos:end="38:123">()</argument_list></call></expr></argument>,
				<argument pos:start="39:33" pos:end="39:61"><expr pos:start="39:33" pos:end="39:61"><call pos:start="39:33" pos:end="39:61"><name pos:start="39:33" pos:end="39:59"><name pos:start="39:33" pos:end="39:46">targetPosition</name><operator pos:start="39:47" pos:end="39:47">.</operator><name pos:start="39:48" pos:end="39:59">getLongitude</name></name><argument_list pos:start="39:60" pos:end="39:61">()</argument_list></call></expr></argument>, <argument pos:start="39:64" pos:end="39:64"><expr pos:start="39:64" pos:end="39:64"><literal type="number" pos:start="39:64" pos:end="39:64">0</literal></expr></argument>, <argument pos:start="39:67" pos:end="39:67"><expr pos:start="39:67" pos:end="39:67"><literal type="number" pos:start="39:67" pos:end="39:67">0</literal></expr></argument>)</argument_list></call></expr>;</return>
	</block_content>}</block></function>

	<function pos:start="42:9" pos:end="57:9"><type pos:start="42:9" pos:end="42:28"><specifier pos:start="42:9" pos:end="42:14">public</specifier> <specifier pos:start="42:16" pos:end="42:21">static</specifier> <name pos:start="42:23" pos:end="42:28">double</name></type> <name pos:start="42:30" pos:end="42:51">calculateTotalDistance</name><parameter_list pos:start="42:52" pos:end="42:81">(<parameter pos:start="42:53" pos:end="42:80"><decl pos:start="42:53" pos:end="42:80"><type pos:start="42:53" pos:end="42:68"><name pos:start="42:53" pos:end="42:65">LlaCoordinate</name><modifier pos:start="42:66" pos:end="42:68">...</modifier></type> <name pos:start="42:70" pos:end="42:80">coordinates</name></decl></parameter>)</parameter_list> <block pos:start="42:83" pos:end="57:9">{<block_content pos:start="43:17" pos:end="56:37">
		<expr_stmt pos:start="43:17" pos:end="43:53"><expr pos:start="43:17" pos:end="43:52"><call pos:start="43:17" pos:end="43:52"><name pos:start="43:17" pos:end="43:39"><name pos:start="43:17" pos:end="43:24">NullUtil</name><operator pos:start="43:25" pos:end="43:25">.</operator><name pos:start="43:26" pos:end="43:39">checkArrayNull</name></name><argument_list pos:start="43:40" pos:end="43:52">(<argument pos:start="43:41" pos:end="43:51"><expr pos:start="43:41" pos:end="43:51"><name pos:start="43:41" pos:end="43:51">coordinates</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<if_stmt pos:start="44:17" pos:end="46:17"><if pos:start="44:17" pos:end="46:17">if <condition pos:start="44:20" pos:end="44:43">(<expr pos:start="44:21" pos:end="44:42"><name pos:start="44:21" pos:end="44:42"><name pos:start="44:21" pos:end="44:31">coordinates</name><operator pos:start="44:32" pos:end="44:32">.</operator><name pos:start="44:33" pos:end="44:38">length</name></name> <operator pos:start="44:40" pos:end="44:40">&lt;</operator> <literal type="number" pos:start="44:42" pos:end="44:42">2</literal></expr>)</condition> <block pos:start="44:45" pos:end="46:17">{<block_content pos:start="45:25" pos:end="45:138">
			<throw pos:start="45:25" pos:end="45:138">throw <expr pos:start="45:31" pos:end="45:137"><operator pos:start="45:31" pos:end="45:33">new</operator> <call pos:start="45:35" pos:end="45:137"><name pos:start="45:35" pos:end="45:58">IllegalArgumentException</name><argument_list pos:start="45:59" pos:end="45:137">(<argument pos:start="45:60" pos:end="45:136"><expr pos:start="45:60" pos:end="45:136"><literal type="string" pos:start="45:60" pos:end="45:136">"At least 2 coordinates are required to calculate the distance between them!"</literal></expr></argument>)</argument_list></call></expr>;</throw>
		</block_content>}</block></if></if_stmt>
		<decl_stmt pos:start="47:17" pos:end="47:41"><decl pos:start="47:17" pos:end="47:40"><type pos:start="47:17" pos:end="47:22"><name pos:start="47:17" pos:end="47:22">double</name></type> <name pos:start="47:24" pos:end="47:36">totaldistance</name> <init pos:start="47:38" pos:end="47:40">= <expr pos:start="47:40" pos:end="47:40"><literal type="number" pos:start="47:40" pos:end="47:40">0</literal></expr></init></decl>;</decl_stmt>
		<for pos:start="48:17" pos:end="55:17">for <control pos:start="48:21" pos:end="48:60">(<init pos:start="48:22" pos:end="48:31"><decl pos:start="48:22" pos:end="48:30"><type pos:start="48:22" pos:end="48:24"><name pos:start="48:22" pos:end="48:24">int</name></type> <name pos:start="48:26" pos:end="48:26">i</name> <init pos:start="48:28" pos:end="48:30">= <expr pos:start="48:30" pos:end="48:30"><literal type="number" pos:start="48:30" pos:end="48:30">0</literal></expr></init></decl>;</init> <condition pos:start="48:33" pos:end="48:55"><expr pos:start="48:33" pos:end="48:54"><name pos:start="48:33" pos:end="48:33">i</name> <operator pos:start="48:35" pos:end="48:35">&lt;</operator> <name pos:start="48:37" pos:end="48:54"><name pos:start="48:37" pos:end="48:47">coordinates</name><operator pos:start="48:48" pos:end="48:48">.</operator><name pos:start="48:49" pos:end="48:54">length</name></name></expr>;</condition> <incr pos:start="48:57" pos:end="48:59"><expr pos:start="48:57" pos:end="48:59"><name pos:start="48:57" pos:end="48:57">i</name><operator pos:start="48:58" pos:end="48:59">++</operator></expr></incr>)</control> <block pos:start="48:62" pos:end="55:17">{<block_content pos:start="49:25" pos:end="54:64">
			<decl_stmt pos:start="49:25" pos:end="49:63"><decl pos:start="49:25" pos:end="49:62"><type pos:start="49:25" pos:end="49:37"><name pos:start="49:25" pos:end="49:37">LlaCoordinate</name></type> <name pos:start="49:39" pos:end="49:45">current</name> <init pos:start="49:47" pos:end="49:62">= <expr pos:start="49:49" pos:end="49:62"><name pos:start="49:49" pos:end="49:62"><name pos:start="49:49" pos:end="49:59">coordinates</name><index pos:start="49:60" pos:end="49:62">[<expr pos:start="49:61" pos:end="49:61"><name pos:start="49:61" pos:end="49:61">i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>
			<if_stmt pos:start="50:25" pos:end="52:25"><if pos:start="50:25" pos:end="52:25">if <condition pos:start="50:28" pos:end="50:57">(<expr pos:start="50:29" pos:end="50:56"><name pos:start="50:29" pos:end="50:56"><name pos:start="50:29" pos:end="50:39">coordinates</name><operator pos:start="50:40" pos:end="50:40">.</operator><name pos:start="50:41" pos:end="50:46">length</name></name> <operator pos:start="50:48" pos:end="50:48">&lt;</operator> <operator pos:start="50:50" pos:end="50:50">(</operator><name pos:start="50:51" pos:end="50:51">i</name> <operator pos:start="50:53" pos:end="50:53">+</operator> <literal type="number" pos:start="50:55" pos:end="50:55">2</literal><operator pos:start="50:56" pos:end="50:56">)</operator></expr>)</condition> <block pos:start="50:59" pos:end="52:25">{<block_content pos:start="51:33" pos:end="51:38">
				<break pos:start="51:33" pos:end="51:38">break;</break>
			</block_content>}</block></if></if_stmt>
			<decl_stmt pos:start="53:25" pos:end="53:64"><decl pos:start="53:25" pos:end="53:63"><type pos:start="53:25" pos:end="53:37"><name pos:start="53:25" pos:end="53:37">LlaCoordinate</name></type> <name pos:start="53:39" pos:end="53:42">next</name> <init pos:start="53:44" pos:end="53:63">= <expr pos:start="53:46" pos:end="53:63"><name pos:start="53:46" pos:end="53:63"><name pos:start="53:46" pos:end="53:56">coordinates</name><index pos:start="53:57" pos:end="53:63">[<expr pos:start="53:58" pos:end="53:62"><name pos:start="53:58" pos:end="53:58">i</name> <operator pos:start="53:60" pos:end="53:60">+</operator> <literal type="number" pos:start="53:62" pos:end="53:62">1</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>
			<expr_stmt pos:start="54:25" pos:end="54:64"><expr pos:start="54:25" pos:end="54:63"><name pos:start="54:25" pos:end="54:37">totaldistance</name> <operator pos:start="54:39" pos:end="54:39">=</operator> <call pos:start="54:41" pos:end="54:63"><name pos:start="54:41" pos:end="54:48">distance</name><argument_list pos:start="54:49" pos:end="54:63">(<argument pos:start="54:50" pos:end="54:56"><expr pos:start="54:50" pos:end="54:56"><name pos:start="54:50" pos:end="54:56">current</name></expr></argument>, <argument pos:start="54:59" pos:end="54:62"><expr pos:start="54:59" pos:end="54:62"><name pos:start="54:59" pos:end="54:62">next</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		</block_content>}</block></for>
		<return pos:start="56:17" pos:end="56:37">return <expr pos:start="56:24" pos:end="56:36"><name pos:start="56:24" pos:end="56:36">totaldistance</name></expr>;</return>
	</block_content>}</block></function>

}</block></class>
</unit>
