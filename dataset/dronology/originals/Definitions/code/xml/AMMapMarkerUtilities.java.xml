<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="Java" filename="flatCode/AMMapMarkerUtilities.java" pos:tabs="8"><package pos:start="1:1" pos:end="1:47">package <name pos:start="1:9" pos:end="1:46"><name pos:start="1:9" pos:end="1:11">edu</name><operator pos:start="1:12" pos:end="1:12">.</operator><name pos:start="1:13" pos:end="1:14">nd</name><operator pos:start="1:15" pos:end="1:15">.</operator><name pos:start="1:16" pos:end="1:24">dronology</name><operator pos:start="1:25" pos:end="1:25">.</operator><name pos:start="1:26" pos:end="1:27">ui</name><operator pos:start="1:28" pos:end="1:28">.</operator><name pos:start="1:29" pos:end="1:34">vaadin</name><operator pos:start="1:35" pos:end="1:35">.</operator><name pos:start="1:36" pos:end="1:46">areamapping</name></name>;</package>

<import pos:start="3:1" pos:end="3:36">import <name pos:start="3:8" pos:end="3:35"><name pos:start="3:8" pos:end="3:11">java</name><operator pos:start="3:12" pos:end="3:12">.</operator><name pos:start="3:13" pos:end="3:14">io</name><operator pos:start="3:15" pos:end="3:15">.</operator><name pos:start="3:16" pos:end="3:35">ByteArrayInputStream</name></name>;</import>
<import pos:start="4:1" pos:end="4:20">import <name pos:start="4:8" pos:end="4:19"><name pos:start="4:8" pos:end="4:11">java</name><operator pos:start="4:12" pos:end="4:12">.</operator><name pos:start="4:13" pos:end="4:14">io</name><operator pos:start="4:15" pos:end="4:15">.</operator><name pos:start="4:16" pos:end="4:19">File</name></name>;</import>
<import pos:start="5:1" pos:end="5:32">import <name pos:start="5:8" pos:end="5:31"><name pos:start="5:8" pos:end="5:11">java</name><operator pos:start="5:12" pos:end="5:12">.</operator><name pos:start="5:13" pos:end="5:15">rmi</name><operator pos:start="5:16" pos:end="5:16">.</operator><name pos:start="5:17" pos:end="5:31">RemoteException</name></name>;</import>
<import pos:start="6:1" pos:end="6:27">import <name pos:start="6:8" pos:end="6:26"><name pos:start="6:8" pos:end="6:11">java</name><operator pos:start="6:12" pos:end="6:12">.</operator><name pos:start="6:13" pos:end="6:16">util</name><operator pos:start="6:17" pos:end="6:17">.</operator><name pos:start="6:18" pos:end="6:26">ArrayList</name></name>;</import>
<import pos:start="7:1" pos:end="7:28">import <name pos:start="7:8" pos:end="7:27"><name pos:start="7:8" pos:end="7:11">java</name><operator pos:start="7:12" pos:end="7:12">.</operator><name pos:start="7:13" pos:end="7:16">util</name><operator pos:start="7:17" pos:end="7:17">.</operator><name pos:start="7:18" pos:end="7:27">Comparator</name></name>;</import>
<import pos:start="8:1" pos:end="8:26">import <name pos:start="8:8" pos:end="8:25"><name pos:start="8:8" pos:end="8:11">java</name><operator pos:start="8:12" pos:end="8:12">.</operator><name pos:start="8:13" pos:end="8:16">util</name><operator pos:start="8:17" pos:end="8:17">.</operator><name pos:start="8:18" pos:end="8:25">Iterator</name></name>;</import>
<import pos:start="9:1" pos:end="9:28">import <name pos:start="9:8" pos:end="9:27"><name pos:start="9:8" pos:end="9:11">java</name><operator pos:start="9:12" pos:end="9:12">.</operator><name pos:start="9:13" pos:end="9:16">util</name><operator pos:start="9:17" pos:end="9:17">.</operator><name pos:start="9:18" pos:end="9:27">LinkedList</name></name>;</import>
<import pos:start="10:1" pos:end="10:22">import <name pos:start="10:8" pos:end="10:21"><name pos:start="10:8" pos:end="10:11">java</name><operator pos:start="10:12" pos:end="10:12">.</operator><name pos:start="10:13" pos:end="10:16">util</name><operator pos:start="10:17" pos:end="10:17">.</operator><name pos:start="10:18" pos:end="10:21">List</name></name>;</import>
<import pos:start="11:1" pos:end="11:22">import <name pos:start="11:8" pos:end="11:21"><name pos:start="11:8" pos:end="11:11">java</name><operator pos:start="11:12" pos:end="11:12">.</operator><name pos:start="11:13" pos:end="11:16">util</name><operator pos:start="11:17" pos:end="11:17">.</operator><name pos:start="11:18" pos:end="11:21">UUID</name></name>;</import>
<import pos:start="12:1" pos:end="12:24">import <name pos:start="12:8" pos:end="12:23"><name pos:start="12:8" pos:end="12:11">java</name><operator pos:start="12:12" pos:end="12:12">.</operator><name pos:start="12:13" pos:end="12:16">util</name><operator pos:start="12:17" pos:end="12:17">.</operator><name pos:start="12:18" pos:end="12:23">Vector</name></name>;</import>

<import pos:start="14:1" pos:end="14:37">import <name pos:start="14:8" pos:end="14:36"><name pos:start="14:8" pos:end="14:10">org</name><operator pos:start="14:11" pos:end="14:11">.</operator><name pos:start="14:12" pos:end="14:17">vaadin</name><operator pos:start="14:18" pos:end="14:18">.</operator><name pos:start="14:19" pos:end="14:23">addon</name><operator pos:start="14:24" pos:end="14:24">.</operator><name pos:start="14:25" pos:end="14:31">leaflet</name><operator pos:start="14:32" pos:end="14:32">.</operator><name pos:start="14:33" pos:end="14:36">LMap</name></name>;</import>
<import pos:start="15:1" pos:end="15:40">import <name pos:start="15:8" pos:end="15:39"><name pos:start="15:8" pos:end="15:10">org</name><operator pos:start="15:11" pos:end="15:11">.</operator><name pos:start="15:12" pos:end="15:17">vaadin</name><operator pos:start="15:18" pos:end="15:18">.</operator><name pos:start="15:19" pos:end="15:23">addon</name><operator pos:start="15:24" pos:end="15:24">.</operator><name pos:start="15:25" pos:end="15:31">leaflet</name><operator pos:start="15:32" pos:end="15:32">.</operator><name pos:start="15:33" pos:end="15:39">LMarker</name></name>;</import>
<import pos:start="16:1" pos:end="16:41">import <name pos:start="16:8" pos:end="16:40"><name pos:start="16:8" pos:end="16:10">org</name><operator pos:start="16:11" pos:end="16:11">.</operator><name pos:start="16:12" pos:end="16:17">vaadin</name><operator pos:start="16:18" pos:end="16:18">.</operator><name pos:start="16:19" pos:end="16:23">addon</name><operator pos:start="16:24" pos:end="16:24">.</operator><name pos:start="16:25" pos:end="16:31">leaflet</name><operator pos:start="16:32" pos:end="16:32">.</operator><name pos:start="16:33" pos:end="16:40">LPolygon</name></name>;</import>
<import pos:start="17:1" pos:end="17:42">import <name pos:start="17:8" pos:end="17:41"><name pos:start="17:8" pos:end="17:10">org</name><operator pos:start="17:11" pos:end="17:11">.</operator><name pos:start="17:12" pos:end="17:17">vaadin</name><operator pos:start="17:18" pos:end="17:18">.</operator><name pos:start="17:19" pos:end="17:23">addon</name><operator pos:start="17:24" pos:end="17:24">.</operator><name pos:start="17:25" pos:end="17:31">leaflet</name><operator pos:start="17:32" pos:end="17:32">.</operator><name pos:start="17:33" pos:end="17:41">LPolyline</name></name>;</import>
<import pos:start="18:1" pos:end="18:53">import <name pos:start="18:8" pos:end="18:52"><name pos:start="18:8" pos:end="18:10">org</name><operator pos:start="18:11" pos:end="18:11">.</operator><name pos:start="18:12" pos:end="18:17">vaadin</name><operator pos:start="18:18" pos:end="18:18">.</operator><name pos:start="18:19" pos:end="18:23">addon</name><operator pos:start="18:24" pos:end="18:24">.</operator><name pos:start="18:25" pos:end="18:31">leaflet</name><operator pos:start="18:32" pos:end="18:32">.</operator><name pos:start="18:33" pos:end="18:52">LeafletMouseOutEvent</name></name>;</import>
<import pos:start="19:1" pos:end="19:56">import <name pos:start="19:8" pos:end="19:55"><name pos:start="19:8" pos:end="19:10">org</name><operator pos:start="19:11" pos:end="19:11">.</operator><name pos:start="19:12" pos:end="19:17">vaadin</name><operator pos:start="19:18" pos:end="19:18">.</operator><name pos:start="19:19" pos:end="19:23">addon</name><operator pos:start="19:24" pos:end="19:24">.</operator><name pos:start="19:25" pos:end="19:31">leaflet</name><operator pos:start="19:32" pos:end="19:32">.</operator><name pos:start="19:33" pos:end="19:55">LeafletMouseOutListener</name></name>;</import>
<import pos:start="20:1" pos:end="20:54">import <name pos:start="20:8" pos:end="20:53"><name pos:start="20:8" pos:end="20:10">org</name><operator pos:start="20:11" pos:end="20:11">.</operator><name pos:start="20:12" pos:end="20:17">vaadin</name><operator pos:start="20:18" pos:end="20:18">.</operator><name pos:start="20:19" pos:end="20:23">addon</name><operator pos:start="20:24" pos:end="20:24">.</operator><name pos:start="20:25" pos:end="20:31">leaflet</name><operator pos:start="20:32" pos:end="20:32">.</operator><name pos:start="20:33" pos:end="20:53">LeafletMouseOverEvent</name></name>;</import>
<import pos:start="21:1" pos:end="21:57">import <name pos:start="21:8" pos:end="21:56"><name pos:start="21:8" pos:end="21:10">org</name><operator pos:start="21:11" pos:end="21:11">.</operator><name pos:start="21:12" pos:end="21:17">vaadin</name><operator pos:start="21:18" pos:end="21:18">.</operator><name pos:start="21:19" pos:end="21:23">addon</name><operator pos:start="21:24" pos:end="21:24">.</operator><name pos:start="21:25" pos:end="21:31">leaflet</name><operator pos:start="21:32" pos:end="21:32">.</operator><name pos:start="21:33" pos:end="21:56">LeafletMouseOverListener</name></name>;</import>
<import pos:start="22:1" pos:end="22:45">import <name pos:start="22:8" pos:end="22:44"><name pos:start="22:8" pos:end="22:10">org</name><operator pos:start="22:11" pos:end="22:11">.</operator><name pos:start="22:12" pos:end="22:17">vaadin</name><operator pos:start="22:18" pos:end="22:18">.</operator><name pos:start="22:19" pos:end="22:23">addon</name><operator pos:start="22:24" pos:end="22:24">.</operator><name pos:start="22:25" pos:end="22:31">leaflet</name><operator pos:start="22:32" pos:end="22:32">.</operator><name pos:start="22:33" pos:end="22:38">shared</name><operator pos:start="22:39" pos:end="22:39">.</operator><name pos:start="22:40" pos:end="22:44">Point</name></name>;</import>

<import pos:start="24:1" pos:end="24:38">import <name pos:start="24:8" pos:end="24:37"><name pos:start="24:8" pos:end="24:10">com</name><operator pos:start="24:11" pos:end="24:11">.</operator><name pos:start="24:12" pos:end="24:17">vaadin</name><operator pos:start="24:18" pos:end="24:18">.</operator><name pos:start="24:19" pos:end="24:24">server</name><operator pos:start="24:25" pos:end="24:25">.</operator><name pos:start="24:26" pos:end="24:37">FileResource</name></name>;</import>
<import pos:start="25:1" pos:end="25:39">import <name pos:start="25:8" pos:end="25:38"><name pos:start="25:8" pos:end="25:10">com</name><operator pos:start="25:11" pos:end="25:11">.</operator><name pos:start="25:12" pos:end="25:17">vaadin</name><operator pos:start="25:18" pos:end="25:18">.</operator><name pos:start="25:19" pos:end="25:24">server</name><operator pos:start="25:25" pos:end="25:25">.</operator><name pos:start="25:26" pos:end="25:38">VaadinService</name></name>;</import>
<import pos:start="26:1" pos:end="26:31">import <name pos:start="26:8" pos:end="26:30"><name pos:start="26:8" pos:end="26:10">com</name><operator pos:start="26:11" pos:end="26:11">.</operator><name pos:start="26:12" pos:end="26:17">vaadin</name><operator pos:start="26:18" pos:end="26:18">.</operator><name pos:start="26:19" pos:end="26:20">ui</name><operator pos:start="26:21" pos:end="26:21">.</operator><name pos:start="26:22" pos:end="26:30">Component</name></name>;</import>
<import pos:start="27:1" pos:end="27:34">import <name pos:start="27:8" pos:end="27:33"><name pos:start="27:8" pos:end="27:10">com</name><operator pos:start="27:11" pos:end="27:11">.</operator><name pos:start="27:12" pos:end="27:17">vaadin</name><operator pos:start="27:18" pos:end="27:18">.</operator><name pos:start="27:19" pos:end="27:20">ui</name><operator pos:start="27:21" pos:end="27:21">.</operator><name pos:start="27:22" pos:end="27:33">Notification</name></name>;</import>

<import pos:start="29:1" pos:end="29:54">import <name pos:start="29:8" pos:end="29:53"><name pos:start="29:8" pos:end="29:10">edu</name><operator pos:start="29:11" pos:end="29:11">.</operator><name pos:start="29:12" pos:end="29:13">nd</name><operator pos:start="29:14" pos:end="29:14">.</operator><name pos:start="29:15" pos:end="29:23">dronology</name><operator pos:start="29:24" pos:end="29:24">.</operator><name pos:start="29:25" pos:end="29:28">core</name><operator pos:start="29:29" pos:end="29:29">.</operator><name pos:start="29:30" pos:end="29:39">coordinate</name><operator pos:start="29:40" pos:end="29:40">.</operator><name pos:start="29:41" pos:end="29:53">LlaCoordinate</name></name>;</import>
<import pos:start="30:1" pos:end="30:57">import <name pos:start="30:8" pos:end="30:56"><name pos:start="30:8" pos:end="30:10">edu</name><operator pos:start="30:11" pos:end="30:11">.</operator><name pos:start="30:12" pos:end="30:13">nd</name><operator pos:start="30:14" pos:end="30:14">.</operator><name pos:start="30:15" pos:end="30:23">dronology</name><operator pos:start="30:24" pos:end="30:24">.</operator><name pos:start="30:25" pos:end="30:32">services</name><operator pos:start="30:33" pos:end="30:33">.</operator><name pos:start="30:34" pos:end="30:37">core</name><operator pos:start="30:38" pos:end="30:38">.</operator><name pos:start="30:39" pos:end="30:43">items</name><operator pos:start="30:44" pos:end="30:44">.</operator><name pos:start="30:45" pos:end="30:56">IAreaMapping</name></name>;</import>
<import pos:start="31:1" pos:end="31:57">import <name pos:start="31:8" pos:end="31:56"><name pos:start="31:8" pos:end="31:10">edu</name><operator pos:start="31:11" pos:end="31:11">.</operator><name pos:start="31:12" pos:end="31:13">nd</name><operator pos:start="31:14" pos:end="31:14">.</operator><name pos:start="31:15" pos:end="31:23">dronology</name><operator pos:start="31:24" pos:end="31:24">.</operator><name pos:start="31:25" pos:end="31:32">services</name><operator pos:start="31:33" pos:end="31:33">.</operator><name pos:start="31:34" pos:end="31:37">core</name><operator pos:start="31:38" pos:end="31:38">.</operator><name pos:start="31:39" pos:end="31:43">items</name><operator pos:start="31:44" pos:end="31:44">.</operator><name pos:start="31:45" pos:end="31:56">PriorityArea</name></name>;</import>
<import pos:start="32:1" pos:end="32:57">import <name pos:start="32:8" pos:end="32:56"><name pos:start="32:8" pos:end="32:10">edu</name><operator pos:start="32:11" pos:end="32:11">.</operator><name pos:start="32:12" pos:end="32:13">nd</name><operator pos:start="32:14" pos:end="32:14">.</operator><name pos:start="32:15" pos:end="32:23">dronology</name><operator pos:start="32:24" pos:end="32:24">.</operator><name pos:start="32:25" pos:end="32:32">services</name><operator pos:start="32:33" pos:end="32:33">.</operator><name pos:start="32:34" pos:end="32:37">core</name><operator pos:start="32:38" pos:end="32:38">.</operator><name pos:start="32:39" pos:end="32:43">items</name><operator pos:start="32:44" pos:end="32:44">.</operator><name pos:start="32:45" pos:end="32:56">PrioritySide</name></name>;</import>
<import pos:start="33:1" pos:end="33:81">import <name pos:start="33:8" pos:end="33:80"><name pos:start="33:8" pos:end="33:10">edu</name><operator pos:start="33:11" pos:end="33:11">.</operator><name pos:start="33:12" pos:end="33:13">nd</name><operator pos:start="33:14" pos:end="33:14">.</operator><name pos:start="33:15" pos:end="33:23">dronology</name><operator pos:start="33:24" pos:end="33:24">.</operator><name pos:start="33:25" pos:end="33:32">services</name><operator pos:start="33:33" pos:end="33:33">.</operator><name pos:start="33:34" pos:end="33:37">core</name><operator pos:start="33:38" pos:end="33:38">.</operator><name pos:start="33:39" pos:end="33:49">persistence</name><operator pos:start="33:50" pos:end="33:50">.</operator><name pos:start="33:51" pos:end="33:80">AreaMappingPersistenceProvider</name></name>;</import>
<import pos:start="34:1" pos:end="34:71">import <name pos:start="34:8" pos:end="34:70"><name pos:start="34:8" pos:end="34:10">edu</name><operator pos:start="34:11" pos:end="34:11">.</operator><name pos:start="34:12" pos:end="34:13">nd</name><operator pos:start="34:14" pos:end="34:14">.</operator><name pos:start="34:15" pos:end="34:23">dronology</name><operator pos:start="34:24" pos:end="34:24">.</operator><name pos:start="34:25" pos:end="34:32">services</name><operator pos:start="34:33" pos:end="34:33">.</operator><name pos:start="34:34" pos:end="34:37">core</name><operator pos:start="34:38" pos:end="34:38">.</operator><name pos:start="34:39" pos:end="34:49">persistence</name><operator pos:start="34:50" pos:end="34:50">.</operator><name pos:start="34:51" pos:end="34:70">PersistenceException</name></name>;</import>
<import pos:start="35:1" pos:end="35:71">import <name pos:start="35:8" pos:end="35:70"><name pos:start="35:8" pos:end="35:10">edu</name><operator pos:start="35:11" pos:end="35:11">.</operator><name pos:start="35:12" pos:end="35:13">nd</name><operator pos:start="35:14" pos:end="35:14">.</operator><name pos:start="35:15" pos:end="35:23">dronology</name><operator pos:start="35:24" pos:end="35:24">.</operator><name pos:start="35:25" pos:end="35:32">services</name><operator pos:start="35:33" pos:end="35:33">.</operator><name pos:start="35:34" pos:end="35:37">core</name><operator pos:start="35:38" pos:end="35:38">.</operator><name pos:start="35:39" pos:end="35:44">remote</name><operator pos:start="35:45" pos:end="35:45">.</operator><name pos:start="35:46" pos:end="35:70">IAreaMappingRemoteService</name></name>;</import>
<import pos:start="36:1" pos:end="36:69">import <name pos:start="36:8" pos:end="36:68"><name pos:start="36:8" pos:end="36:10">edu</name><operator pos:start="36:11" pos:end="36:11">.</operator><name pos:start="36:12" pos:end="36:13">nd</name><operator pos:start="36:14" pos:end="36:14">.</operator><name pos:start="36:15" pos:end="36:23">dronology</name><operator pos:start="36:24" pos:end="36:24">.</operator><name pos:start="36:25" pos:end="36:32">services</name><operator pos:start="36:33" pos:end="36:33">.</operator><name pos:start="36:34" pos:end="36:37">core</name><operator pos:start="36:38" pos:end="36:38">.</operator><name pos:start="36:39" pos:end="36:42">util</name><operator pos:start="36:43" pos:end="36:43">.</operator><name pos:start="36:44" pos:end="36:68">DronologyServiceException</name></name>;</import>
<import pos:start="37:1" pos:end="37:83">import <name pos:start="37:8" pos:end="37:82"><name pos:start="37:8" pos:end="37:10">edu</name><operator pos:start="37:11" pos:end="37:11">.</operator><name pos:start="37:12" pos:end="37:13">nd</name><operator pos:start="37:14" pos:end="37:14">.</operator><name pos:start="37:15" pos:end="37:23">dronology</name><operator pos:start="37:24" pos:end="37:24">.</operator><name pos:start="37:25" pos:end="37:26">ui</name><operator pos:start="37:27" pos:end="37:27">.</operator><name pos:start="37:28" pos:end="37:33">vaadin</name><operator pos:start="37:34" pos:end="37:34">.</operator><name pos:start="37:35" pos:end="37:45">areamapping</name><operator pos:start="37:46" pos:end="37:46">.</operator><name pos:start="37:47" pos:end="37:59">mapoperations</name><operator pos:start="37:60" pos:end="37:60">.</operator><name pos:start="37:61" pos:end="37:82">AMMapAddMarkerListener</name></name>;</import>
<import pos:start="38:1" pos:end="38:84">import <name pos:start="38:8" pos:end="38:83"><name pos:start="38:8" pos:end="38:10">edu</name><operator pos:start="38:11" pos:end="38:11">.</operator><name pos:start="38:12" pos:end="38:13">nd</name><operator pos:start="38:14" pos:end="38:14">.</operator><name pos:start="38:15" pos:end="38:23">dronology</name><operator pos:start="38:24" pos:end="38:24">.</operator><name pos:start="38:25" pos:end="38:26">ui</name><operator pos:start="38:27" pos:end="38:27">.</operator><name pos:start="38:28" pos:end="38:33">vaadin</name><operator pos:start="38:34" pos:end="38:34">.</operator><name pos:start="38:35" pos:end="38:45">areamapping</name><operator pos:start="38:46" pos:end="38:46">.</operator><name pos:start="38:47" pos:end="38:59">mapoperations</name><operator pos:start="38:60" pos:end="38:60">.</operator><name pos:start="38:61" pos:end="38:83">AMMarkerDragEndListener</name></name>;</import>
<import pos:start="39:1" pos:end="39:85">import <name pos:start="39:8" pos:end="39:84"><name pos:start="39:8" pos:end="39:10">edu</name><operator pos:start="39:11" pos:end="39:11">.</operator><name pos:start="39:12" pos:end="39:13">nd</name><operator pos:start="39:14" pos:end="39:14">.</operator><name pos:start="39:15" pos:end="39:23">dronology</name><operator pos:start="39:24" pos:end="39:24">.</operator><name pos:start="39:25" pos:end="39:26">ui</name><operator pos:start="39:27" pos:end="39:27">.</operator><name pos:start="39:28" pos:end="39:33">vaadin</name><operator pos:start="39:34" pos:end="39:34">.</operator><name pos:start="39:35" pos:end="39:45">areamapping</name><operator pos:start="39:46" pos:end="39:46">.</operator><name pos:start="39:47" pos:end="39:59">mapoperations</name><operator pos:start="39:60" pos:end="39:60">.</operator><name pos:start="39:61" pos:end="39:84">AMMarkerMouseOutListener</name></name>;</import>
<import pos:start="40:1" pos:end="40:86">import <name pos:start="40:8" pos:end="40:85"><name pos:start="40:8" pos:end="40:10">edu</name><operator pos:start="40:11" pos:end="40:11">.</operator><name pos:start="40:12" pos:end="40:13">nd</name><operator pos:start="40:14" pos:end="40:14">.</operator><name pos:start="40:15" pos:end="40:23">dronology</name><operator pos:start="40:24" pos:end="40:24">.</operator><name pos:start="40:25" pos:end="40:26">ui</name><operator pos:start="40:27" pos:end="40:27">.</operator><name pos:start="40:28" pos:end="40:33">vaadin</name><operator pos:start="40:34" pos:end="40:34">.</operator><name pos:start="40:35" pos:end="40:45">areamapping</name><operator pos:start="40:46" pos:end="40:46">.</operator><name pos:start="40:47" pos:end="40:59">mapoperations</name><operator pos:start="40:60" pos:end="40:60">.</operator><name pos:start="40:61" pos:end="40:85">AMMarkerMouseOverListener</name></name>;</import>
<import pos:start="41:1" pos:end="41:84">import <name pos:start="41:8" pos:end="41:83"><name pos:start="41:8" pos:end="41:10">edu</name><operator pos:start="41:11" pos:end="41:11">.</operator><name pos:start="41:12" pos:end="41:13">nd</name><operator pos:start="41:14" pos:end="41:14">.</operator><name pos:start="41:15" pos:end="41:23">dronology</name><operator pos:start="41:24" pos:end="41:24">.</operator><name pos:start="41:25" pos:end="41:26">ui</name><operator pos:start="41:27" pos:end="41:27">.</operator><name pos:start="41:28" pos:end="41:33">vaadin</name><operator pos:start="41:34" pos:end="41:34">.</operator><name pos:start="41:35" pos:end="41:45">areamapping</name><operator pos:start="41:46" pos:end="41:46">.</operator><name pos:start="41:47" pos:end="41:59">mapoperations</name><operator pos:start="41:60" pos:end="41:60">.</operator><name pos:start="41:61" pos:end="41:83">AMPolylineClickListener</name></name>;</import>
<import pos:start="42:1" pos:end="42:92">import <name pos:start="42:8" pos:end="42:91"><name pos:start="42:8" pos:end="42:10">edu</name><operator pos:start="42:11" pos:end="42:11">.</operator><name pos:start="42:12" pos:end="42:13">nd</name><operator pos:start="42:14" pos:end="42:14">.</operator><name pos:start="42:15" pos:end="42:23">dronology</name><operator pos:start="42:24" pos:end="42:24">.</operator><name pos:start="42:25" pos:end="42:26">ui</name><operator pos:start="42:27" pos:end="42:27">.</operator><name pos:start="42:28" pos:end="42:33">vaadin</name><operator pos:start="42:34" pos:end="42:34">.</operator><name pos:start="42:35" pos:end="42:45">areamapping</name><operator pos:start="42:46" pos:end="42:46">.</operator><name pos:start="42:47" pos:end="42:59">mapoperations</name><operator pos:start="42:60" pos:end="42:60">.</operator><name pos:start="42:61" pos:end="42:91">AMPriorityAreaMouseOverListener</name></name>;</import>
<import pos:start="43:1" pos:end="43:86">import <name pos:start="43:8" pos:end="43:85"><name pos:start="43:8" pos:end="43:10">edu</name><operator pos:start="43:11" pos:end="43:11">.</operator><name pos:start="43:12" pos:end="43:13">nd</name><operator pos:start="43:14" pos:end="43:14">.</operator><name pos:start="43:15" pos:end="43:23">dronology</name><operator pos:start="43:24" pos:end="43:24">.</operator><name pos:start="43:25" pos:end="43:26">ui</name><operator pos:start="43:27" pos:end="43:27">.</operator><name pos:start="43:28" pos:end="43:33">vaadin</name><operator pos:start="43:34" pos:end="43:34">.</operator><name pos:start="43:35" pos:end="43:45">areamapping</name><operator pos:start="43:46" pos:end="43:46">.</operator><name pos:start="43:47" pos:end="43:59">mapoperations</name><operator pos:start="43:60" pos:end="43:60">.</operator><name pos:start="43:61" pos:end="43:85">AMPriorityDragEndListener</name></name>;</import>
<import pos:start="44:1" pos:end="44:87">import <name pos:start="44:8" pos:end="44:86"><name pos:start="44:8" pos:end="44:10">edu</name><operator pos:start="44:11" pos:end="44:11">.</operator><name pos:start="44:12" pos:end="44:13">nd</name><operator pos:start="44:14" pos:end="44:14">.</operator><name pos:start="44:15" pos:end="44:23">dronology</name><operator pos:start="44:24" pos:end="44:24">.</operator><name pos:start="44:25" pos:end="44:26">ui</name><operator pos:start="44:27" pos:end="44:27">.</operator><name pos:start="44:28" pos:end="44:33">vaadin</name><operator pos:start="44:34" pos:end="44:34">.</operator><name pos:start="44:35" pos:end="44:45">areamapping</name><operator pos:start="44:46" pos:end="44:46">.</operator><name pos:start="44:47" pos:end="44:59">mapoperations</name><operator pos:start="44:60" pos:end="44:60">.</operator><name pos:start="44:61" pos:end="44:86">AMPriorityMouseOutListener</name></name>;</import>
<import pos:start="45:1" pos:end="45:92">import <name pos:start="45:8" pos:end="45:91"><name pos:start="45:8" pos:end="45:10">edu</name><operator pos:start="45:11" pos:end="45:11">.</operator><name pos:start="45:12" pos:end="45:13">nd</name><operator pos:start="45:14" pos:end="45:14">.</operator><name pos:start="45:15" pos:end="45:23">dronology</name><operator pos:start="45:24" pos:end="45:24">.</operator><name pos:start="45:25" pos:end="45:26">ui</name><operator pos:start="45:27" pos:end="45:27">.</operator><name pos:start="45:28" pos:end="45:33">vaadin</name><operator pos:start="45:34" pos:end="45:34">.</operator><name pos:start="45:35" pos:end="45:45">areamapping</name><operator pos:start="45:46" pos:end="45:46">.</operator><name pos:start="45:47" pos:end="45:59">mapoperations</name><operator pos:start="45:60" pos:end="45:60">.</operator><name pos:start="45:61" pos:end="45:91">AMPrioritySideMouseOverListener</name></name>;</import>
<import pos:start="46:1" pos:end="46:81">import <name pos:start="46:8" pos:end="46:80"><name pos:start="46:8" pos:end="46:10">edu</name><operator pos:start="46:11" pos:end="46:11">.</operator><name pos:start="46:12" pos:end="46:13">nd</name><operator pos:start="46:14" pos:end="46:14">.</operator><name pos:start="46:15" pos:end="46:23">dronology</name><operator pos:start="46:24" pos:end="46:24">.</operator><name pos:start="46:25" pos:end="46:26">ui</name><operator pos:start="46:27" pos:end="46:27">.</operator><name pos:start="46:28" pos:end="46:33">vaadin</name><operator pos:start="46:34" pos:end="46:34">.</operator><name pos:start="46:35" pos:end="46:45">areamapping</name><operator pos:start="46:46" pos:end="46:46">.</operator><name pos:start="46:47" pos:end="46:59">mapoperations</name><operator pos:start="46:60" pos:end="46:60">.</operator><name pos:start="46:61" pos:end="46:80">AMRightClickListener</name></name>;</import>
<import pos:start="47:1" pos:end="47:84">import <name pos:start="47:8" pos:end="47:83"><name pos:start="47:8" pos:end="47:10">edu</name><operator pos:start="47:11" pos:end="47:11">.</operator><name pos:start="47:12" pos:end="47:13">nd</name><operator pos:start="47:14" pos:end="47:14">.</operator><name pos:start="47:15" pos:end="47:23">dronology</name><operator pos:start="47:24" pos:end="47:24">.</operator><name pos:start="47:25" pos:end="47:26">ui</name><operator pos:start="47:27" pos:end="47:27">.</operator><name pos:start="47:28" pos:end="47:33">vaadin</name><operator pos:start="47:34" pos:end="47:34">.</operator><name pos:start="47:35" pos:end="47:45">areamapping</name><operator pos:start="47:46" pos:end="47:46">.</operator><name pos:start="47:47" pos:end="47:59">mapoperations</name><operator pos:start="47:60" pos:end="47:60">.</operator><name pos:start="47:61" pos:end="47:83">AMUpstreamClickListener</name></name>;</import>
<import pos:start="48:1" pos:end="48:75">import <name pos:start="48:8" pos:end="48:74"><name pos:start="48:8" pos:end="48:10">edu</name><operator pos:start="48:11" pos:end="48:11">.</operator><name pos:start="48:12" pos:end="48:13">nd</name><operator pos:start="48:14" pos:end="48:14">.</operator><name pos:start="48:15" pos:end="48:23">dronology</name><operator pos:start="48:24" pos:end="48:24">.</operator><name pos:start="48:25" pos:end="48:26">ui</name><operator pos:start="48:27" pos:end="48:27">.</operator><name pos:start="48:28" pos:end="48:33">vaadin</name><operator pos:start="48:34" pos:end="48:34">.</operator><name pos:start="48:35" pos:end="48:45">areamapping</name><operator pos:start="48:46" pos:end="48:46">.</operator><name pos:start="48:47" pos:end="48:53">windows</name><operator pos:start="48:54" pos:end="48:54">.</operator><name pos:start="48:55" pos:end="48:74">AMPriorityInfoWindow</name></name>;</import>
<import pos:start="49:1" pos:end="49:64">import <name pos:start="49:8" pos:end="49:63"><name pos:start="49:8" pos:end="49:10">edu</name><operator pos:start="49:11" pos:end="49:11">.</operator><name pos:start="49:12" pos:end="49:13">nd</name><operator pos:start="49:14" pos:end="49:14">.</operator><name pos:start="49:15" pos:end="49:23">dronology</name><operator pos:start="49:24" pos:end="49:24">.</operator><name pos:start="49:25" pos:end="49:26">ui</name><operator pos:start="49:27" pos:end="49:27">.</operator><name pos:start="49:28" pos:end="49:33">vaadin</name><operator pos:start="49:34" pos:end="49:34">.</operator><name pos:start="49:35" pos:end="49:43">connector</name><operator pos:start="49:44" pos:end="49:44">.</operator><name pos:start="49:45" pos:end="49:63">BaseServiceProvider</name></name>;</import>
<import pos:start="50:1" pos:end="50:45">import <name pos:start="50:8" pos:end="50:44"><name pos:start="50:8" pos:end="50:10">edu</name><operator pos:start="50:11" pos:end="50:11">.</operator><name pos:start="50:12" pos:end="50:13">nd</name><operator pos:start="50:14" pos:end="50:14">.</operator><name pos:start="50:15" pos:end="50:23">dronology</name><operator pos:start="50:24" pos:end="50:24">.</operator><name pos:start="50:25" pos:end="50:26">ui</name><operator pos:start="50:27" pos:end="50:27">.</operator><name pos:start="50:28" pos:end="50:33">vaadin</name><operator pos:start="50:34" pos:end="50:34">.</operator><name pos:start="50:35" pos:end="50:39">start</name><operator pos:start="50:40" pos:end="50:40">.</operator><name pos:start="50:41" pos:end="50:44">MyUI</name></name>;</import>

<comment type="block" format="javadoc" pos:start="52:1" pos:end="57:3">/**
 * Adapted from the MapMarkerUtilities class in the utils folder, this class has listeners that allow the user to interact with the map.
 * Also includes many functions for manipulating and updating a current mapping
 * @author Andrew Slavin
 *
 */</comment>

<class pos:start="59:1" pos:end="935:1"><specifier pos:start="59:1" pos:end="59:6">public</specifier> class <name pos:start="59:14" pos:end="59:33">AMMapMarkerUtilities</name> <block pos:start="59:35" pos:end="935:1">{	
	<decl_stmt pos:start="60:9" pos:end="60:25"><decl pos:start="60:9" pos:end="60:24"><type pos:start="60:9" pos:end="60:20"><specifier pos:start="60:9" pos:end="60:15">private</specifier> <name pos:start="60:17" pos:end="60:20">LMap</name></type> <name pos:start="60:22" pos:end="60:24">map</name></decl>;</decl_stmt>
	<decl_stmt pos:start="61:9" pos:end="61:44"><decl pos:start="61:9" pos:end="61:43"><type pos:start="61:9" pos:end="61:30"><specifier pos:start="61:9" pos:end="61:15">private</specifier> <name pos:start="61:17" pos:end="61:30">AMMapComponent</name></type> <name pos:start="61:32" pos:end="61:43">mapComponent</name></decl>;</decl_stmt>
	 
	<decl_stmt pos:start="63:9" pos:end="63:60"><decl pos:start="63:9" pos:end="63:59"><type pos:start="63:9" pos:end="63:38"><specifier pos:start="63:9" pos:end="63:15">private</specifier> <name pos:start="63:17" pos:end="63:38">AMMapAddMarkerListener</name></type> <name pos:start="63:40" pos:end="63:59">mapAddMarkerListener</name></decl>;</decl_stmt>
	<decl_stmt pos:start="64:9" pos:end="64:66"><decl pos:start="64:9" pos:end="64:65"><type pos:start="64:9" pos:end="64:41"><specifier pos:start="64:9" pos:end="64:15">private</specifier> <name pos:start="64:17" pos:end="64:41">AMMarkerMouseOverListener</name></type> <name pos:start="64:43" pos:end="64:65">markerMouseOverListener</name></decl>;</decl_stmt>
	<decl_stmt pos:start="65:9" pos:end="65:64"><decl pos:start="65:9" pos:end="65:63"><type pos:start="65:9" pos:end="65:40"><specifier pos:start="65:9" pos:end="65:15">private</specifier> <name pos:start="65:17" pos:end="65:40">AMMarkerMouseOutListener</name></type> <name pos:start="65:42" pos:end="65:63">markerMouseOutListener</name></decl>;</decl_stmt>
	<decl_stmt pos:start="66:9" pos:end="66:62"><decl pos:start="66:9" pos:end="66:61"><type pos:start="66:9" pos:end="66:39"><specifier pos:start="66:9" pos:end="66:15">private</specifier> <name pos:start="66:17" pos:end="66:39">AMMarkerDragEndListener</name></type> <name pos:start="66:41" pos:end="66:61">markerDragEndListener</name></decl>;</decl_stmt>
	<decl_stmt pos:start="67:9" pos:end="67:62"><decl pos:start="67:9" pos:end="67:61"><type pos:start="67:9" pos:end="67:39"><specifier pos:start="67:9" pos:end="67:15">private</specifier> <name pos:start="67:17" pos:end="67:39">AMPolylineClickListener</name></type> <name pos:start="67:41" pos:end="67:61">polylineClickListener</name></decl>;</decl_stmt>
	<decl_stmt pos:start="68:9" pos:end="68:56"><decl pos:start="68:9" pos:end="68:55"><type pos:start="68:9" pos:end="68:36"><specifier pos:start="68:9" pos:end="68:15">private</specifier> <name pos:start="68:17" pos:end="68:36">AMRightClickListener</name></type> <name pos:start="68:38" pos:end="68:55">rightClickListener</name></decl>;</decl_stmt>
	
	<decl_stmt pos:start="70:9" pos:end="70:56"><decl pos:start="70:9" pos:end="70:55"><type pos:start="70:9" pos:end="70:36"><specifier pos:start="70:9" pos:end="70:15">private</specifier> <name pos:start="70:17" pos:end="70:36">AMPriorityInfoWindow</name></type> <name pos:start="70:38" pos:end="70:55">priorityInfoWindow</name></decl>;</decl_stmt>
	
	<decl_stmt pos:start="72:9" pos:end="72:71"><decl pos:start="72:9" pos:end="72:70"><type pos:start="72:9" pos:end="72:33"><specifier pos:start="72:9" pos:end="72:15">private</specifier> <name pos:start="72:17" pos:end="72:33"><name pos:start="72:17" pos:end="72:26">LinkedList</name><argument_list type="generic" pos:start="72:27" pos:end="72:33">&lt;<argument pos:start="72:28" pos:end="72:32"><name pos:start="72:28" pos:end="72:32">Point</name></argument>&gt;</argument_list></name></type> <name pos:start="72:35" pos:end="72:49">polygonVertices</name> <init pos:start="72:51" pos:end="72:70">= <expr pos:start="72:53" pos:end="72:70"><operator pos:start="72:53" pos:end="72:55">new</operator> <call pos:start="72:57" pos:end="72:70"><name pos:start="72:57" pos:end="72:68"><name pos:start="72:57" pos:end="72:66">LinkedList</name><argument_list type="generic" pos:start="72:67" pos:end="72:68">&lt;&gt;</argument_list></name><argument_list pos:start="72:69" pos:end="72:70">()</argument_list></call></expr></init></decl>;</decl_stmt>
	<decl_stmt pos:start="73:9" pos:end="73:71"><decl pos:start="73:9" pos:end="73:70"><type pos:start="73:9" pos:end="73:36"><specifier pos:start="73:9" pos:end="73:15">private</specifier> <name pos:start="73:17" pos:end="73:36"><name pos:start="73:17" pos:end="73:22">Vector</name><argument_list type="generic" pos:start="73:23" pos:end="73:36">&lt;<argument pos:start="73:24" pos:end="73:35"><name pos:start="73:24" pos:end="73:35">PriorityArea</name></argument>&gt;</argument_list></name></type> <name pos:start="73:38" pos:end="73:53">allPriorityAreas</name> <init pos:start="73:55" pos:end="73:70">= <expr pos:start="73:57" pos:end="73:70"><operator pos:start="73:57" pos:end="73:59">new</operator> <call pos:start="73:61" pos:end="73:70"><name pos:start="73:61" pos:end="73:68"><name pos:start="73:61" pos:end="73:66">Vector</name><argument_list type="generic" pos:start="73:67" pos:end="73:68">&lt;&gt;</argument_list></name><argument_list pos:start="73:69" pos:end="73:70">()</argument_list></call></expr></init></decl>;</decl_stmt>
	<decl_stmt pos:start="74:9" pos:end="74:48"><decl pos:start="74:9" pos:end="74:47"><type pos:start="74:9" pos:end="74:41"><specifier pos:start="74:9" pos:end="74:15">private</specifier> <name pos:start="74:17" pos:end="74:41"><name pos:start="74:17" pos:end="74:22">Vector</name><argument_list type="generic" pos:start="74:23" pos:end="74:41">&lt;<argument pos:start="74:24" pos:end="74:40"><name pos:start="74:24" pos:end="74:40"><name pos:start="74:24" pos:end="74:27">List</name><argument_list type="generic" pos:start="74:28" pos:end="74:40">&lt;<argument pos:start="74:29" pos:end="74:39"><name pos:start="74:29" pos:end="74:39">UIEdgePoint</name></argument>&gt;</argument_list></name></argument>&gt;</argument_list></name></type> <name pos:start="74:43" pos:end="74:47">sides</name></decl>;</decl_stmt>
	<decl_stmt pos:start="75:9" pos:end="75:41"><decl pos:start="75:9" pos:end="75:40"><type pos:start="75:9" pos:end="75:25"><specifier pos:start="75:9" pos:end="75:15">private</specifier> <name pos:start="75:17" pos:end="75:25">LPolyline</name></type> <name pos:start="75:27" pos:end="75:40">mousedOverLine</name></decl>;</decl_stmt>
	<decl_stmt pos:start="76:9" pos:end="76:44"><decl pos:start="76:9" pos:end="76:43"><type pos:start="76:9" pos:end="76:28"><specifier pos:start="76:9" pos:end="76:15">private</specifier> <name pos:start="76:17" pos:end="76:28">PriorityArea</name></type> <name pos:start="76:30" pos:end="76:43">mousedOverArea</name></decl>;</decl_stmt>
	<decl_stmt pos:start="77:9" pos:end="77:44"><decl pos:start="77:9" pos:end="77:43"><type pos:start="77:9" pos:end="77:28"><specifier pos:start="77:9" pos:end="77:15">private</specifier> <name pos:start="77:17" pos:end="77:28">PrioritySide</name></type> <name pos:start="77:30" pos:end="77:43">mousedOverSide</name></decl>;</decl_stmt>
	<decl_stmt pos:start="78:9" pos:end="78:39"><decl pos:start="78:9" pos:end="78:38"><type pos:start="78:9" pos:end="78:28"><specifier pos:start="78:9" pos:end="78:15">private</specifier> <name pos:start="78:17" pos:end="78:28">PriorityArea</name></type> <name pos:start="78:30" pos:end="78:38">areaToAdd</name></decl>;</decl_stmt>
	<decl_stmt pos:start="79:9" pos:end="79:72"><decl pos:start="79:9" pos:end="79:71"><type pos:start="79:9" pos:end="79:35"><specifier pos:start="79:9" pos:end="79:15">private</specifier> <name pos:start="79:17" pos:end="79:35"><name pos:start="79:17" pos:end="79:26">LinkedList</name><argument_list type="generic" pos:start="79:27" pos:end="79:35">&lt;<argument pos:start="79:28" pos:end="79:34"><name pos:start="79:28" pos:end="79:34">LMarker</name></argument>&gt;</argument_list></name></type> <name pos:start="79:37" pos:end="79:50">newPolygonPins</name> <init pos:start="79:52" pos:end="79:71">= <expr pos:start="79:54" pos:end="79:71"><operator pos:start="79:54" pos:end="79:56">new</operator> <call pos:start="79:58" pos:end="79:71"><name pos:start="79:58" pos:end="79:69"><name pos:start="79:58" pos:end="79:67">LinkedList</name><argument_list type="generic" pos:start="79:68" pos:end="79:69">&lt;&gt;</argument_list></name><argument_list pos:start="79:70" pos:end="79:71">()</argument_list></call></expr></init></decl>;</decl_stmt>
	<decl_stmt pos:start="80:9" pos:end="80:72"><decl pos:start="80:9" pos:end="80:71"><type pos:start="80:9" pos:end="80:35"><specifier pos:start="80:9" pos:end="80:15">private</specifier> <name pos:start="80:17" pos:end="80:35"><name pos:start="80:17" pos:end="80:26">LinkedList</name><argument_list type="generic" pos:start="80:27" pos:end="80:35">&lt;<argument pos:start="80:28" pos:end="80:34"><name pos:start="80:28" pos:end="80:34">LMarker</name></argument>&gt;</argument_list></name></type> <name pos:start="80:37" pos:end="80:50">allPolygonPins</name> <init pos:start="80:52" pos:end="80:71">= <expr pos:start="80:54" pos:end="80:71"><operator pos:start="80:54" pos:end="80:56">new</operator> <call pos:start="80:58" pos:end="80:71"><name pos:start="80:58" pos:end="80:69"><name pos:start="80:58" pos:end="80:67">LinkedList</name><argument_list type="generic" pos:start="80:68" pos:end="80:69">&lt;&gt;</argument_list></name><argument_list pos:start="80:70" pos:end="80:71">()</argument_list></call></expr></init></decl>;</decl_stmt>
	<decl_stmt pos:start="81:9" pos:end="81:74"><decl pos:start="81:9" pos:end="81:73"><type pos:start="81:9" pos:end="81:33"><specifier pos:start="81:9" pos:end="81:15">private</specifier> <name pos:start="81:17" pos:end="81:33"><name pos:start="81:17" pos:end="81:26">LinkedList</name><argument_list type="generic" pos:start="81:27" pos:end="81:33">&lt;<argument pos:start="81:28" pos:end="81:32"><name pos:start="81:28" pos:end="81:32">Point</name></argument>&gt;</argument_list></name></type> <name pos:start="81:35" pos:end="81:52">allPolygonPinsCopy</name> <init pos:start="81:54" pos:end="81:73">= <expr pos:start="81:56" pos:end="81:73"><operator pos:start="81:56" pos:end="81:58">new</operator> <call pos:start="81:60" pos:end="81:73"><name pos:start="81:60" pos:end="81:71"><name pos:start="81:60" pos:end="81:69">LinkedList</name><argument_list type="generic" pos:start="81:70" pos:end="81:71">&lt;&gt;</argument_list></name><argument_list pos:start="81:72" pos:end="81:73">()</argument_list></call></expr></init></decl>;</decl_stmt>
	<decl_stmt pos:start="82:9" pos:end="82:75"><decl pos:start="82:9" pos:end="82:74"><type pos:start="82:9" pos:end="82:37"><specifier pos:start="82:9" pos:end="82:15">private</specifier> <name pos:start="82:17" pos:end="82:37"><name pos:start="82:17" pos:end="82:26">LinkedList</name><argument_list type="generic" pos:start="82:27" pos:end="82:37">&lt;<argument pos:start="82:28" pos:end="82:36"><name pos:start="82:28" pos:end="82:36">LPolyline</name></argument>&gt;</argument_list></name></type> <name pos:start="82:39" pos:end="82:53">newPolygonLines</name> <init pos:start="82:55" pos:end="82:74">= <expr pos:start="82:57" pos:end="82:74"><operator pos:start="82:57" pos:end="82:59">new</operator> <call pos:start="82:61" pos:end="82:74"><name pos:start="82:61" pos:end="82:72"><name pos:start="82:61" pos:end="82:70">LinkedList</name><argument_list type="generic" pos:start="82:71" pos:end="82:72">&lt;&gt;</argument_list></name><argument_list pos:start="82:73" pos:end="82:74">()</argument_list></call></expr></init></decl>;</decl_stmt>
	<decl_stmt pos:start="83:9" pos:end="83:80"><decl pos:start="83:9" pos:end="83:79"><type pos:start="83:9" pos:end="83:37"><specifier pos:start="83:9" pos:end="83:15">private</specifier> <name pos:start="83:17" pos:end="83:37"><name pos:start="83:17" pos:end="83:26">LinkedList</name><argument_list type="generic" pos:start="83:27" pos:end="83:37">&lt;<argument pos:start="83:28" pos:end="83:36"><name pos:start="83:28" pos:end="83:36">LPolyline</name></argument>&gt;</argument_list></name></type> <name pos:start="83:39" pos:end="83:58">newPrioritySideLines</name> <init pos:start="83:60" pos:end="83:79">= <expr pos:start="83:62" pos:end="83:79"><operator pos:start="83:62" pos:end="83:64">new</operator> <call pos:start="83:66" pos:end="83:79"><name pos:start="83:66" pos:end="83:77"><name pos:start="83:66" pos:end="83:75">LinkedList</name><argument_list type="generic" pos:start="83:76" pos:end="83:77">&lt;&gt;</argument_list></name><argument_list pos:start="83:78" pos:end="83:79">()</argument_list></call></expr></init></decl>;</decl_stmt>
	<decl_stmt pos:start="84:9" pos:end="84:76"><decl pos:start="84:9" pos:end="84:75"><type pos:start="84:9" pos:end="84:37"><specifier pos:start="84:9" pos:end="84:15">private</specifier> <name pos:start="84:17" pos:end="84:37"><name pos:start="84:17" pos:end="84:26">LinkedList</name><argument_list type="generic" pos:start="84:27" pos:end="84:37">&lt;<argument pos:start="84:28" pos:end="84:36"><name pos:start="84:28" pos:end="84:36">LPolyline</name></argument>&gt;</argument_list></name></type> <name pos:start="84:39" pos:end="84:54">allPriorityLines</name> <init pos:start="84:56" pos:end="84:75">= <expr pos:start="84:58" pos:end="84:75"><operator pos:start="84:58" pos:end="84:60">new</operator> <call pos:start="84:62" pos:end="84:75"><name pos:start="84:62" pos:end="84:73"><name pos:start="84:62" pos:end="84:71">LinkedList</name><argument_list type="generic" pos:start="84:72" pos:end="84:73">&lt;&gt;</argument_list></name><argument_list pos:start="84:74" pos:end="84:75">()</argument_list></call></expr></init></decl>;</decl_stmt> <comment type="line" pos:start="84:78" pos:end="84:104">// all red lines on the map</comment>
	<decl_stmt pos:start="85:9" pos:end="85:79"><decl pos:start="85:9" pos:end="85:78"><type pos:start="85:9" pos:end="85:40"><specifier pos:start="85:9" pos:end="85:15">private</specifier> <name pos:start="85:17" pos:end="85:40"><name pos:start="85:17" pos:end="85:26">LinkedList</name><argument_list type="generic" pos:start="85:27" pos:end="85:40">&lt;<argument pos:start="85:28" pos:end="85:39"><name pos:start="85:28" pos:end="85:39">PrioritySide</name></argument>&gt;</argument_list></name></type> <name pos:start="85:42" pos:end="85:57">allPrioritySides</name> <init pos:start="85:59" pos:end="85:78">= <expr pos:start="85:61" pos:end="85:78"><operator pos:start="85:61" pos:end="85:63">new</operator> <call pos:start="85:65" pos:end="85:78"><name pos:start="85:65" pos:end="85:76"><name pos:start="85:65" pos:end="85:74">LinkedList</name><argument_list type="generic" pos:start="85:75" pos:end="85:76">&lt;&gt;</argument_list></name><argument_list pos:start="85:77" pos:end="85:78">()</argument_list></call></expr></init></decl>;</decl_stmt>
	<decl_stmt pos:start="86:9" pos:end="86:80"><decl pos:start="86:9" pos:end="86:79"><type pos:start="86:9" pos:end="86:37"><specifier pos:start="86:9" pos:end="86:15">private</specifier> <name pos:start="86:17" pos:end="86:37"><name pos:start="86:17" pos:end="86:26">LinkedList</name><argument_list type="generic" pos:start="86:27" pos:end="86:37">&lt;<argument pos:start="86:28" pos:end="86:36"><name pos:start="86:28" pos:end="86:36">LPolyline</name></argument>&gt;</argument_list></name></type> <name pos:start="86:39" pos:end="86:58">removedPriorityLines</name> <init pos:start="86:60" pos:end="86:79">= <expr pos:start="86:62" pos:end="86:79"><operator pos:start="86:62" pos:end="86:64">new</operator> <call pos:start="86:66" pos:end="86:79"><name pos:start="86:66" pos:end="86:77"><name pos:start="86:66" pos:end="86:75">LinkedList</name><argument_list type="generic" pos:start="86:76" pos:end="86:77">&lt;&gt;</argument_list></name><argument_list pos:start="86:78" pos:end="86:79">()</argument_list></call></expr></init></decl>;</decl_stmt>
	<decl_stmt pos:start="87:9" pos:end="87:72"><decl pos:start="87:9" pos:end="87:71"><type pos:start="87:9" pos:end="87:37"><specifier pos:start="87:9" pos:end="87:15">private</specifier> <name pos:start="87:17" pos:end="87:37"><name pos:start="87:17" pos:end="87:26">LinkedList</name><argument_list type="generic" pos:start="87:27" pos:end="87:37">&lt;<argument pos:start="87:28" pos:end="87:36"><name pos:start="87:28" pos:end="87:36">LPolyline</name></argument>&gt;</argument_list></name></type> <name pos:start="87:39" pos:end="87:50">allPolylines</name> <init pos:start="87:52" pos:end="87:71">= <expr pos:start="87:54" pos:end="87:71"><operator pos:start="87:54" pos:end="87:56">new</operator> <call pos:start="87:58" pos:end="87:71"><name pos:start="87:58" pos:end="87:69"><name pos:start="87:58" pos:end="87:67">LinkedList</name><argument_list type="generic" pos:start="87:68" pos:end="87:69">&lt;&gt;</argument_list></name><argument_list pos:start="87:70" pos:end="87:71">()</argument_list></call></expr></init></decl>;</decl_stmt>
	<decl_stmt pos:start="88:9" pos:end="88:78"><decl pos:start="88:9" pos:end="88:77"><type pos:start="88:9" pos:end="88:39"><specifier pos:start="88:9" pos:end="88:15">private</specifier> <name pos:start="88:17" pos:end="88:39"><name pos:start="88:17" pos:end="88:26">LinkedList</name><argument_list type="generic" pos:start="88:27" pos:end="88:39">&lt;<argument pos:start="88:28" pos:end="88:38"><name pos:start="88:28" pos:end="88:38">UIEdgePoint</name></argument>&gt;</argument_list></name></type> <name pos:start="88:41" pos:end="88:56">allSideWaypoints</name> <init pos:start="88:58" pos:end="88:77">= <expr pos:start="88:60" pos:end="88:77"><operator pos:start="88:60" pos:end="88:62">new</operator> <call pos:start="88:64" pos:end="88:77"><name pos:start="88:64" pos:end="88:75"><name pos:start="88:64" pos:end="88:73">LinkedList</name><argument_list type="generic" pos:start="88:74" pos:end="88:75">&lt;&gt;</argument_list></name><argument_list pos:start="88:76" pos:end="88:77">()</argument_list></call></expr></init></decl>;</decl_stmt>
	
	<decl_stmt pos:start="90:9" pos:end="90:33"><decl pos:start="90:9" pos:end="90:32"><type pos:start="90:9" pos:end="90:23"><specifier pos:start="90:9" pos:end="90:15">private</specifier> <name pos:start="90:17" pos:end="90:23">Boolean</name></type> <name pos:start="90:25" pos:end="90:32">upstream</name></decl>;</decl_stmt> <comment type="line" pos:start="90:35" pos:end="90:118">// true means that upstream is the direction the points are drawn; false is opposite</comment>
	<decl_stmt pos:start="91:9" pos:end="91:49"><decl pos:start="91:9" pos:end="91:48"><type pos:start="91:9" pos:end="91:23"><specifier pos:start="91:9" pos:end="91:15">private</specifier> <name pos:start="91:17" pos:end="91:23">boolean</name></type> <name pos:start="91:25" pos:end="91:40">sidesAreEditable</name> <init pos:start="91:42" pos:end="91:48">= <expr pos:start="91:44" pos:end="91:48"><literal type="boolean" pos:start="91:44" pos:end="91:48">false</literal></expr></init></decl>;</decl_stmt>
	<decl_stmt pos:start="92:9" pos:end="92:54"><decl pos:start="92:9" pos:end="92:53"><type pos:start="92:9" pos:end="92:23"><specifier pos:start="92:9" pos:end="92:15">private</specifier> <name pos:start="92:17" pos:end="92:23">boolean</name></type> <name pos:start="92:25" pos:end="92:45">prioritiesAreEditable</name> <init pos:start="92:47" pos:end="92:53">= <expr pos:start="92:49" pos:end="92:53"><literal type="boolean" pos:start="92:49" pos:end="92:53">false</literal></expr></init></decl>;</decl_stmt>
	
	<constructor pos:start="94:9" pos:end="109:9"><specifier pos:start="94:9" pos:end="94:14">public</specifier> <name pos:start="94:16" pos:end="94:35">AMMapMarkerUtilities</name><parameter_list pos:start="94:36" pos:end="94:64">(<parameter pos:start="94:37" pos:end="94:63"><decl pos:start="94:37" pos:end="94:63"><type pos:start="94:37" pos:end="94:50"><name pos:start="94:37" pos:end="94:50">AMMapComponent</name></type> <name pos:start="94:52" pos:end="94:63">mapComponent</name></decl></parameter>)</parameter_list> <block pos:start="94:66" pos:end="109:9">{<block_content pos:start="95:17" pos:end="108:64">
		<expr_stmt pos:start="95:17" pos:end="95:49"><expr pos:start="95:17" pos:end="95:48"><name pos:start="95:17" pos:end="95:33"><name pos:start="95:17" pos:end="95:20">this</name><operator pos:start="95:21" pos:end="95:21">.</operator><name pos:start="95:22" pos:end="95:33">mapComponent</name></name> <operator pos:start="95:35" pos:end="95:35">=</operator> <name pos:start="95:37" pos:end="95:48">mapComponent</name></expr>;</expr_stmt>
		<expr_stmt pos:start="96:17" pos:end="96:49"><expr pos:start="96:17" pos:end="96:48"><name pos:start="96:17" pos:end="96:24"><name pos:start="96:17" pos:end="96:20">this</name><operator pos:start="96:21" pos:end="96:21">.</operator><name pos:start="96:22" pos:end="96:24">map</name></name> <operator pos:start="96:26" pos:end="96:26">=</operator> <call pos:start="96:28" pos:end="96:48"><name pos:start="96:28" pos:end="96:46"><name pos:start="96:28" pos:end="96:39">mapComponent</name><operator pos:start="96:40" pos:end="96:40">.</operator><name pos:start="96:41" pos:end="96:46">getMap</name></name><argument_list pos:start="96:47" pos:end="96:48">()</argument_list></call></expr>;</expr_stmt>

		<comment type="line" pos:start="98:17" pos:end="98:32">// add listeners</comment>
		<expr_stmt pos:start="99:17" pos:end="99:77"><expr pos:start="99:17" pos:end="99:76"><name pos:start="99:17" pos:end="99:41"><name pos:start="99:17" pos:end="99:20">this</name><operator pos:start="99:21" pos:end="99:21">.</operator><name pos:start="99:22" pos:end="99:41">mapAddMarkerListener</name></name> <operator pos:start="99:43" pos:end="99:43">=</operator> <operator pos:start="99:45" pos:end="99:47">new</operator> <call pos:start="99:49" pos:end="99:76"><name pos:start="99:49" pos:end="99:70">AMMapAddMarkerListener</name><argument_list pos:start="99:71" pos:end="99:76">(<argument pos:start="99:72" pos:end="99:75"><expr pos:start="99:72" pos:end="99:75"><name pos:start="99:72" pos:end="99:75">this</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt pos:start="100:17" pos:end="100:83"><expr pos:start="100:17" pos:end="100:82"><name pos:start="100:17" pos:end="100:44"><name pos:start="100:17" pos:end="100:20">this</name><operator pos:start="100:21" pos:end="100:21">.</operator><name pos:start="100:22" pos:end="100:44">markerMouseOverListener</name></name> <operator pos:start="100:46" pos:end="100:46">=</operator> <operator pos:start="100:48" pos:end="100:50">new</operator> <call pos:start="100:52" pos:end="100:82"><name pos:start="100:52" pos:end="100:76">AMMarkerMouseOverListener</name><argument_list pos:start="100:77" pos:end="100:82">(<argument pos:start="100:78" pos:end="100:81"><expr pos:start="100:78" pos:end="100:81"><name pos:start="100:78" pos:end="100:81">this</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt pos:start="101:17" pos:end="101:81"><expr pos:start="101:17" pos:end="101:80"><name pos:start="101:17" pos:end="101:43"><name pos:start="101:17" pos:end="101:20">this</name><operator pos:start="101:21" pos:end="101:21">.</operator><name pos:start="101:22" pos:end="101:43">markerMouseOutListener</name></name> <operator pos:start="101:45" pos:end="101:45">=</operator> <operator pos:start="101:47" pos:end="101:49">new</operator> <call pos:start="101:51" pos:end="101:80"><name pos:start="101:51" pos:end="101:74">AMMarkerMouseOutListener</name><argument_list pos:start="101:75" pos:end="101:80">(<argument pos:start="101:76" pos:end="101:79"><expr pos:start="101:76" pos:end="101:79"><name pos:start="101:76" pos:end="101:79">this</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt pos:start="102:17" pos:end="102:79"><expr pos:start="102:17" pos:end="102:78"><name pos:start="102:17" pos:end="102:42"><name pos:start="102:17" pos:end="102:20">this</name><operator pos:start="102:21" pos:end="102:21">.</operator><name pos:start="102:22" pos:end="102:42">markerDragEndListener</name></name> <operator pos:start="102:44" pos:end="102:44">=</operator> <operator pos:start="102:46" pos:end="102:48">new</operator> <call pos:start="102:50" pos:end="102:78"><name pos:start="102:50" pos:end="102:72">AMMarkerDragEndListener</name><argument_list pos:start="102:73" pos:end="102:78">(<argument pos:start="102:74" pos:end="102:77"><expr pos:start="102:74" pos:end="102:77"><name pos:start="102:74" pos:end="102:77">this</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt pos:start="103:17" pos:end="103:79"><expr pos:start="103:17" pos:end="103:78"><name pos:start="103:17" pos:end="103:42"><name pos:start="103:17" pos:end="103:20">this</name><operator pos:start="103:21" pos:end="103:21">.</operator><name pos:start="103:22" pos:end="103:42">polylineClickListener</name></name> <operator pos:start="103:44" pos:end="103:44">=</operator> <operator pos:start="103:46" pos:end="103:48">new</operator> <call pos:start="103:50" pos:end="103:78"><name pos:start="103:50" pos:end="103:72">AMPolylineClickListener</name><argument_list pos:start="103:73" pos:end="103:78">(<argument pos:start="103:74" pos:end="103:77"><expr pos:start="103:74" pos:end="103:77"><name pos:start="103:74" pos:end="103:77">this</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>	
		<expr_stmt pos:start="104:17" pos:end="104:73"><expr pos:start="104:17" pos:end="104:72"><name pos:start="104:17" pos:end="104:39"><name pos:start="104:17" pos:end="104:20">this</name><operator pos:start="104:21" pos:end="104:21">.</operator><name pos:start="104:22" pos:end="104:39">rightClickListener</name></name> <operator pos:start="104:41" pos:end="104:41">=</operator> <operator pos:start="104:43" pos:end="104:45">new</operator> <call pos:start="104:47" pos:end="104:72"><name pos:start="104:47" pos:end="104:66">AMRightClickListener</name><argument_list pos:start="104:67" pos:end="104:72">(<argument pos:start="104:68" pos:end="104:71"><expr pos:start="104:68" pos:end="104:71"><name pos:start="104:68" pos:end="104:71">this</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		
		<expr_stmt pos:start="106:17" pos:end="106:59"><expr pos:start="106:17" pos:end="106:58"><call pos:start="106:17" pos:end="106:58"><name pos:start="106:17" pos:end="106:36"><name pos:start="106:17" pos:end="106:19">map</name><operator pos:start="106:20" pos:end="106:20">.</operator><name pos:start="106:21" pos:end="106:36">addClickListener</name></name><argument_list pos:start="106:37" pos:end="106:58">(<argument pos:start="106:38" pos:end="106:57"><expr pos:start="106:38" pos:end="106:57"><name pos:start="106:38" pos:end="106:57">mapAddMarkerListener</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<comment type="line" pos:start="107:17" pos:end="107:129">// rightClickListener only knows that the map is being clicked, but uses info about which polyline is moused over</comment>
		<expr_stmt pos:start="108:17" pos:end="108:64"><expr pos:start="108:17" pos:end="108:63"><call pos:start="108:17" pos:end="108:63"><name pos:start="108:17" pos:end="108:43"><name pos:start="108:17" pos:end="108:19">map</name><operator pos:start="108:20" pos:end="108:20">.</operator><name pos:start="108:21" pos:end="108:43">addContextClickListener</name></name><argument_list pos:start="108:44" pos:end="108:63">(<argument pos:start="108:45" pos:end="108:62"><expr pos:start="108:45" pos:end="108:62"><name pos:start="108:45" pos:end="108:62">rightClickListener</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	</block_content>}</block></constructor>
	
	<constructor pos:start="111:9" pos:end="113:9"><specifier pos:start="111:9" pos:end="111:14">public</specifier> <name pos:start="111:16" pos:end="111:35">AMMapMarkerUtilities</name><parameter_list pos:start="111:36" pos:end="111:45">(<parameter pos:start="111:37" pos:end="111:44"><decl pos:start="111:37" pos:end="111:44"><type pos:start="111:37" pos:end="111:40"><name pos:start="111:37" pos:end="111:40">LMap</name></type> <name pos:start="111:42" pos:end="111:44">map</name></decl></parameter>)</parameter_list> <block pos:start="111:47" pos:end="113:9">{<block_content pos:start="112:17" pos:end="112:31">
		<expr_stmt pos:start="112:17" pos:end="112:31"><expr pos:start="112:17" pos:end="112:30"><name pos:start="112:17" pos:end="112:24"><name pos:start="112:17" pos:end="112:20">this</name><operator pos:start="112:21" pos:end="112:21">.</operator><name pos:start="112:22" pos:end="112:24">map</name></name> <operator pos:start="112:26" pos:end="112:26">=</operator> <name pos:start="112:28" pos:end="112:30">map</name></expr>;</expr_stmt>
	</block_content>}</block></constructor>
	
	<comment type="line" pos:start="115:9" pos:end="115:165">// adds a new pin at a specified point and at a certain index in the list of waypoints (index is relevant when adding a waypoint between two other waypoints)</comment>
	<comment type="line" pos:start="116:9" pos:end="116:58">// -1 signals that a waypoint was added to the end</comment>
	<function pos:start="117:9" pos:end="132:9"><type pos:start="117:9" pos:end="117:22"><specifier pos:start="117:9" pos:end="117:14">public</specifier> <name pos:start="117:16" pos:end="117:22">LMarker</name></type> <name pos:start="117:24" pos:end="117:32">addNewPin</name><parameter_list pos:start="117:33" pos:end="117:56">(<parameter pos:start="117:34" pos:end="117:44"><decl pos:start="117:34" pos:end="117:44"><type pos:start="117:34" pos:end="117:44"><name pos:start="117:34" pos:end="117:38">Point</name></type> <name pos:start="117:40" pos:end="117:44">point</name></decl></parameter>, <parameter pos:start="117:47" pos:end="117:55"><decl pos:start="117:47" pos:end="117:55"><type pos:start="117:47" pos:end="117:55"><name pos:start="117:47" pos:end="117:49">int</name></type> <name pos:start="117:51" pos:end="117:55">index</name></decl></parameter>)</parameter_list> <block pos:start="117:58" pos:end="132:9">{<block_content pos:start="118:17" pos:end="131:43"> 
		<if_stmt pos:start="118:17" pos:end="121:17"><if pos:start="118:17" pos:end="121:17">if <condition pos:start="118:20" pos:end="118:94">(<expr pos:start="118:21" pos:end="118:93"><call pos:start="118:21" pos:end="118:29"><name pos:start="118:21" pos:end="118:27">getPins</name><argument_list pos:start="118:28" pos:end="118:29">()</argument_list></call><operator pos:start="118:30" pos:end="118:30">.</operator><call pos:start="118:31" pos:end="118:36"><name pos:start="118:31" pos:end="118:34">size</name><argument_list pos:start="118:35" pos:end="118:36">()</argument_list></call> <operator pos:start="118:38" pos:end="118:39">==</operator> <literal type="number" pos:start="118:41" pos:end="118:41">0</literal> <operator pos:start="118:43" pos:end="118:44">&amp;&amp;</operator> <call pos:start="118:46" pos:end="118:82"><name pos:start="118:46" pos:end="118:80"><name pos:start="118:46" pos:end="118:57">mapComponent</name><operator pos:start="118:58" pos:end="118:58">.</operator><name pos:start="118:59" pos:end="118:80">getEditSidesController</name></name><argument_list pos:start="118:81" pos:end="118:82">()</argument_list></call><operator pos:start="118:83" pos:end="118:83">.</operator><call pos:start="118:84" pos:end="118:93"><name pos:start="118:84" pos:end="118:91">getSideA</name><argument_list pos:start="118:92" pos:end="118:93">()</argument_list></call></expr>)</condition> <block pos:start="118:96" pos:end="121:17">{<block_content pos:start="119:25" pos:end="120:73">
			<expr_stmt pos:start="119:25" pos:end="119:99"><expr pos:start="119:25" pos:end="119:98"><call pos:start="119:25" pos:end="119:98"><name pos:start="119:25" pos:end="119:41"><name pos:start="119:25" pos:end="119:36">Notification</name><operator pos:start="119:37" pos:end="119:37">.</operator><name pos:start="119:38" pos:end="119:41">show</name></name><argument_list pos:start="119:42" pos:end="119:98">(<argument pos:start="119:43" pos:end="119:64"><expr pos:start="119:43" pos:end="119:64"><literal type="string" pos:start="119:43" pos:end="119:64">"Starting with Side A"</literal></expr></argument>, <argument pos:start="119:67" pos:end="119:97"><expr pos:start="119:67" pos:end="119:97"><name pos:start="119:67" pos:end="119:97"><name pos:start="119:67" pos:end="119:78">Notification</name><operator pos:start="119:79" pos:end="119:79">.</operator><name pos:start="119:80" pos:end="119:83">Type</name><operator pos:start="119:84" pos:end="119:84">.</operator><name pos:start="119:85" pos:end="119:97">ERROR_MESSAGE</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt pos:start="120:25" pos:end="120:73"><expr pos:start="120:25" pos:end="120:72"><call pos:start="120:25" pos:end="120:61"><name pos:start="120:25" pos:end="120:59"><name pos:start="120:25" pos:end="120:36">mapComponent</name><operator pos:start="120:37" pos:end="120:37">.</operator><name pos:start="120:38" pos:end="120:59">getEditSidesController</name></name><argument_list pos:start="120:60" pos:end="120:61">()</argument_list></call><operator pos:start="120:62" pos:end="120:62">.</operator><call pos:start="120:63" pos:end="120:72"><name pos:start="120:63" pos:end="120:70">setSideA</name><argument_list pos:start="120:71" pos:end="120:72">()</argument_list></call></expr>;</expr_stmt>
		</block_content>}</block></if></if_stmt>
		<if_stmt pos:start="122:17" pos:end="123:54"><if pos:start="122:17" pos:end="123:54">if <condition pos:start="122:20" pos:end="122:50">(<expr pos:start="122:21" pos:end="122:49"><name pos:start="122:21" pos:end="122:25">index</name> <operator pos:start="122:27" pos:end="122:27">&gt;</operator> <call pos:start="122:29" pos:end="122:42"><name pos:start="122:29" pos:end="122:40"><name pos:start="122:29" pos:end="122:32">this</name><operator pos:start="122:33" pos:end="122:33">.</operator><name pos:start="122:34" pos:end="122:40">getPins</name></name><argument_list pos:start="122:41" pos:end="122:42">()</argument_list></call><operator pos:start="122:43" pos:end="122:43">.</operator><call pos:start="122:44" pos:end="122:49"><name pos:start="122:44" pos:end="122:47">size</name><argument_list pos:start="122:48" pos:end="122:49">()</argument_list></call></expr>)</condition><block type="pseudo" pos:start="123:25" pos:end="123:54"><block_content pos:start="123:25" pos:end="123:54">
			<expr_stmt pos:start="123:25" pos:end="123:54"><expr pos:start="123:25" pos:end="123:53"><name pos:start="123:25" pos:end="123:29">index</name> <operator pos:start="123:31" pos:end="123:31">=</operator> <call pos:start="123:33" pos:end="123:46"><name pos:start="123:33" pos:end="123:44"><name pos:start="123:33" pos:end="123:36">this</name><operator pos:start="123:37" pos:end="123:37">.</operator><name pos:start="123:38" pos:end="123:44">getPins</name></name><argument_list pos:start="123:45" pos:end="123:46">()</argument_list></call><operator pos:start="123:47" pos:end="123:47">.</operator><call pos:start="123:48" pos:end="123:53"><name pos:start="123:48" pos:end="123:51">size</name><argument_list pos:start="123:52" pos:end="123:53">()</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
		<comment type="line" pos:start="124:17" pos:end="124:85">// Creates a waypoint at the given point, and assigns it a random id.</comment>
		<decl_stmt pos:start="125:17" pos:end="125:62"><decl pos:start="125:17" pos:end="125:61"><type pos:start="125:17" pos:end="125:27"><name pos:start="125:17" pos:end="125:27">UIEdgePoint</name></type> <name pos:start="125:29" pos:end="125:29">p</name> <init pos:start="125:31" pos:end="125:61">= <expr pos:start="125:33" pos:end="125:61"><operator pos:start="125:33" pos:end="125:35">new</operator> <call pos:start="125:37" pos:end="125:61"><name pos:start="125:37" pos:end="125:47">UIEdgePoint</name><argument_list pos:start="125:48" pos:end="125:61">(<argument pos:start="125:49" pos:end="125:53"><expr pos:start="125:49" pos:end="125:53"><name pos:start="125:49" pos:end="125:53">point</name></expr></argument>, <argument pos:start="125:56" pos:end="125:60"><expr pos:start="125:56" pos:end="125:60"><literal type="boolean" pos:start="125:56" pos:end="125:60">false</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<comment type="line" pos:start="126:17" pos:end="126:27">// set side</comment>
		<if_stmt pos:start="127:17" pos:end="130:37"><if pos:start="127:17" pos:end="128:37">if <condition pos:start="127:20" pos:end="127:69">(<expr pos:start="127:21" pos:end="127:68"><call pos:start="127:21" pos:end="127:57"><name pos:start="127:21" pos:end="127:55"><name pos:start="127:21" pos:end="127:32">mapComponent</name><operator pos:start="127:33" pos:end="127:33">.</operator><name pos:start="127:34" pos:end="127:55">getEditSidesController</name></name><argument_list pos:start="127:56" pos:end="127:57">()</argument_list></call><operator pos:start="127:58" pos:end="127:58">.</operator><call pos:start="127:59" pos:end="127:68"><name pos:start="127:59" pos:end="127:66">getSideA</name><argument_list pos:start="127:67" pos:end="127:68">()</argument_list></call></expr>)</condition><block type="pseudo" pos:start="128:25" pos:end="128:37"><block_content pos:start="128:25" pos:end="128:37">
			<expr_stmt pos:start="128:25" pos:end="128:37"><expr pos:start="128:25" pos:end="128:36"><call pos:start="128:25" pos:end="128:36"><name pos:start="128:25" pos:end="128:33"><name pos:start="128:25" pos:end="128:25">p</name><operator pos:start="128:26" pos:end="128:26">.</operator><name pos:start="128:27" pos:end="128:33">setSide</name></name><argument_list pos:start="128:34" pos:end="128:36">(<argument pos:start="128:35" pos:end="128:35"><expr pos:start="128:35" pos:end="128:35"><literal type="number" pos:start="128:35" pos:end="128:35">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>
		<else pos:start="129:17" pos:end="130:37">else<block type="pseudo" pos:start="130:25" pos:end="130:37"><block_content pos:start="130:25" pos:end="130:37">
			<expr_stmt pos:start="130:25" pos:end="130:37"><expr pos:start="130:25" pos:end="130:36"><call pos:start="130:25" pos:end="130:36"><name pos:start="130:25" pos:end="130:33"><name pos:start="130:25" pos:end="130:25">p</name><operator pos:start="130:26" pos:end="130:26">.</operator><name pos:start="130:27" pos:end="130:33">setSide</name></name><argument_list pos:start="130:34" pos:end="130:36">(<argument pos:start="130:35" pos:end="130:35"><expr pos:start="130:35" pos:end="130:35"><literal type="number" pos:start="130:35" pos:end="130:35">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>
		<return pos:start="131:17" pos:end="131:43">return <expr pos:start="131:24" pos:end="131:42"><call pos:start="131:24" pos:end="131:42"><name pos:start="131:24" pos:end="131:32">addNewPin</name><argument_list pos:start="131:33" pos:end="131:42">(<argument pos:start="131:34" pos:end="131:34"><expr pos:start="131:34" pos:end="131:34"><name pos:start="131:34" pos:end="131:34">p</name></expr></argument>, <argument pos:start="131:37" pos:end="131:41"><expr pos:start="131:37" pos:end="131:41"><name pos:start="131:37" pos:end="131:41">index</name></expr></argument>)</argument_list></call></expr>;</return>
	</block_content>}</block></function>
	
	<function pos:start="134:9" pos:end="170:9"><type pos:start="134:9" pos:end="134:22"><specifier pos:start="134:9" pos:end="134:14">public</specifier> <name pos:start="134:16" pos:end="134:22">LMarker</name></type> <name pos:start="134:24" pos:end="134:32">addNewPin</name><parameter_list pos:start="134:33" pos:end="134:58">(<parameter pos:start="134:34" pos:end="134:46"><decl pos:start="134:34" pos:end="134:46"><type pos:start="134:34" pos:end="134:46"><name pos:start="134:34" pos:end="134:44">UIEdgePoint</name></type> <name pos:start="134:46" pos:end="134:46">p</name></decl></parameter>, <parameter pos:start="134:49" pos:end="134:57"><decl pos:start="134:49" pos:end="134:57"><type pos:start="134:49" pos:end="134:57"><name pos:start="134:49" pos:end="134:51">int</name></type> <name pos:start="134:53" pos:end="134:57">index</name></decl></parameter>)</parameter_list> <block pos:start="134:60" pos:end="170:9">{<block_content pos:start="135:17" pos:end="169:30">
		<if_stmt pos:start="135:17" pos:end="137:17"><if pos:start="135:17" pos:end="137:17">if <condition pos:start="135:20" pos:end="135:50">(<expr pos:start="135:21" pos:end="135:49"><name pos:start="135:21" pos:end="135:25">index</name> <operator pos:start="135:27" pos:end="135:27">&gt;</operator> <call pos:start="135:29" pos:end="135:42"><name pos:start="135:29" pos:end="135:40"><name pos:start="135:29" pos:end="135:32">this</name><operator pos:start="135:33" pos:end="135:33">.</operator><name pos:start="135:34" pos:end="135:40">getPins</name></name><argument_list pos:start="135:41" pos:end="135:42">()</argument_list></call><operator pos:start="135:43" pos:end="135:43">.</operator><call pos:start="135:44" pos:end="135:49"><name pos:start="135:44" pos:end="135:47">size</name><argument_list pos:start="135:48" pos:end="135:49">()</argument_list></call></expr>)</condition> <block pos:start="135:52" pos:end="137:17">{<block_content pos:start="136:25" pos:end="136:54">
			<expr_stmt pos:start="136:25" pos:end="136:54"><expr pos:start="136:25" pos:end="136:53"><name pos:start="136:25" pos:end="136:29">index</name> <operator pos:start="136:31" pos:end="136:31">=</operator> <call pos:start="136:33" pos:end="136:46"><name pos:start="136:33" pos:end="136:44"><name pos:start="136:33" pos:end="136:36">this</name><operator pos:start="136:37" pos:end="136:37">.</operator><name pos:start="136:38" pos:end="136:44">getPins</name></name><argument_list pos:start="136:45" pos:end="136:46">()</argument_list></call><operator pos:start="136:47" pos:end="136:47">.</operator><call pos:start="136:48" pos:end="136:53"><name pos:start="136:48" pos:end="136:51">size</name><argument_list pos:start="136:52" pos:end="136:53">()</argument_list></call></expr>;</expr_stmt>
		</block_content>}</block></if></if_stmt>
		
		<comment type="line" pos:start="139:17" pos:end="139:35">// Assign the order</comment>
		<if_stmt pos:start="140:17" pos:end="151:17"><if pos:start="140:17" pos:end="142:17">if <condition pos:start="140:20" pos:end="140:32">(<expr pos:start="140:21" pos:end="140:31"><name pos:start="140:21" pos:end="140:25">index</name> <operator pos:start="140:27" pos:end="140:28">==</operator> <operator pos:start="140:30" pos:end="140:30">-</operator><literal type="number" pos:start="140:31" pos:end="140:31">1</literal></expr>)</condition> <block pos:start="140:34" pos:end="142:17">{<block_content pos:start="141:25" pos:end="141:58">
			<expr_stmt pos:start="141:25" pos:end="141:58"><expr pos:start="141:25" pos:end="141:57"><call pos:start="141:25" pos:end="141:57"><name pos:start="141:25" pos:end="141:34"><name pos:start="141:25" pos:end="141:25">p</name><operator pos:start="141:26" pos:end="141:26">.</operator><name pos:start="141:27" pos:end="141:34">setOrder</name></name><argument_list pos:start="141:35" pos:end="141:57">(<argument pos:start="141:36" pos:end="141:56"><expr pos:start="141:36" pos:end="141:56"><call pos:start="141:36" pos:end="141:49"><name pos:start="141:36" pos:end="141:47"><name pos:start="141:36" pos:end="141:39">this</name><operator pos:start="141:40" pos:end="141:40">.</operator><name pos:start="141:41" pos:end="141:47">getPins</name></name><argument_list pos:start="141:48" pos:end="141:49">()</argument_list></call><operator pos:start="141:50" pos:end="141:50">.</operator><call pos:start="141:51" pos:end="141:56"><name pos:start="141:51" pos:end="141:54">size</name><argument_list pos:start="141:55" pos:end="141:56">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		</block_content>}</block></if> <else pos:start="142:19" pos:end="151:17">else <block pos:start="142:24" pos:end="151:17">{<block_content pos:start="143:25" pos:end="150:25">
			<expr_stmt pos:start="143:25" pos:end="143:42"><expr pos:start="143:25" pos:end="143:41"><call pos:start="143:25" pos:end="143:41"><name pos:start="143:25" pos:end="143:34"><name pos:start="143:25" pos:end="143:25">p</name><operator pos:start="143:26" pos:end="143:26">.</operator><name pos:start="143:27" pos:end="143:34">setOrder</name></name><argument_list pos:start="143:35" pos:end="143:41">(<argument pos:start="143:36" pos:end="143:40"><expr pos:start="143:36" pos:end="143:40"><name pos:start="143:36" pos:end="143:40">index</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<decl_stmt pos:start="144:25" pos:end="144:60"><decl pos:start="144:25" pos:end="144:59"><type pos:start="144:25" pos:end="144:37"><name pos:start="144:25" pos:end="144:37"><name pos:start="144:25" pos:end="144:28">List</name><argument_list type="generic" pos:start="144:29" pos:end="144:37">&lt;<argument pos:start="144:30" pos:end="144:36"><name pos:start="144:30" pos:end="144:36">LMarker</name></argument>&gt;</argument_list></name></type> <name pos:start="144:39" pos:end="144:42">pins</name> <init pos:start="144:44" pos:end="144:59">= <expr pos:start="144:46" pos:end="144:59"><call pos:start="144:46" pos:end="144:59"><name pos:start="144:46" pos:end="144:57"><name pos:start="144:46" pos:end="144:49">this</name><operator pos:start="144:50" pos:end="144:50">.</operator><name pos:start="144:51" pos:end="144:57">getPins</name></name><argument_list pos:start="144:58" pos:end="144:59">()</argument_list></call></expr></init></decl>;</decl_stmt>
			<for pos:start="145:25" pos:end="150:25">for <control pos:start="145:29" pos:end="145:61">(<init pos:start="145:30" pos:end="145:39"><decl pos:start="145:30" pos:end="145:38"><type pos:start="145:30" pos:end="145:32"><name pos:start="145:30" pos:end="145:32">int</name></type> <name pos:start="145:34" pos:end="145:34">i</name> <init pos:start="145:36" pos:end="145:38">= <expr pos:start="145:38" pos:end="145:38"><literal type="number" pos:start="145:38" pos:end="145:38">0</literal></expr></init></decl>;</init> <condition pos:start="145:41" pos:end="145:56"><expr pos:start="145:41" pos:end="145:55"><name pos:start="145:41" pos:end="145:41">i</name> <operator pos:start="145:43" pos:end="145:43">&lt;</operator> <call pos:start="145:45" pos:end="145:55"><name pos:start="145:45" pos:end="145:53"><name pos:start="145:45" pos:end="145:48">pins</name><operator pos:start="145:49" pos:end="145:49">.</operator><name pos:start="145:50" pos:end="145:53">size</name></name><argument_list pos:start="145:54" pos:end="145:55">()</argument_list></call></expr>;</condition> <incr pos:start="145:58" pos:end="145:60"><expr pos:start="145:58" pos:end="145:60"><name pos:start="145:58" pos:end="145:58">i</name><operator pos:start="145:59" pos:end="145:60">++</operator></expr></incr>)</control> <block pos:start="145:63" pos:end="150:25">{<block_content pos:start="146:33" pos:end="149:33">
				<decl_stmt pos:start="146:33" pos:end="146:88"><decl pos:start="146:33" pos:end="146:87"><type pos:start="146:33" pos:end="146:43"><name pos:start="146:33" pos:end="146:43">UIEdgePoint</name></type> <name pos:start="146:45" pos:end="146:50">pInMap</name> <init pos:start="146:52" pos:end="146:87">= <expr pos:start="146:54" pos:end="146:87"><operator pos:start="146:54" pos:end="146:54">(</operator><name pos:start="146:55" pos:end="146:65">UIEdgePoint</name><operator pos:start="146:66" pos:end="146:66">)</operator><call pos:start="146:67" pos:end="146:77"><name pos:start="146:67" pos:end="146:74"><name pos:start="146:67" pos:end="146:70">pins</name><operator pos:start="146:71" pos:end="146:71">.</operator><name pos:start="146:72" pos:end="146:74">get</name></name><argument_list pos:start="146:75" pos:end="146:77">(<argument pos:start="146:76" pos:end="146:76"><expr pos:start="146:76" pos:end="146:76"><name pos:start="146:76" pos:end="146:76">i</name></expr></argument>)</argument_list></call><operator pos:start="146:78" pos:end="146:78">.</operator><call pos:start="146:79" pos:end="146:87"><name pos:start="146:79" pos:end="146:85">getData</name><argument_list pos:start="146:86" pos:end="146:87">()</argument_list></call></expr></init></decl>;</decl_stmt>
				<if_stmt pos:start="147:33" pos:end="149:33"><if pos:start="147:33" pos:end="149:33">if <condition pos:start="147:36" pos:end="147:63">(<expr pos:start="147:37" pos:end="147:62"><call pos:start="147:37" pos:end="147:53"><name pos:start="147:37" pos:end="147:51"><name pos:start="147:37" pos:end="147:42">pInMap</name><operator pos:start="147:43" pos:end="147:43">.</operator><name pos:start="147:44" pos:end="147:51">getOrder</name></name><argument_list pos:start="147:52" pos:end="147:53">()</argument_list></call> <operator pos:start="147:55" pos:end="147:56">&gt;=</operator> <name pos:start="147:58" pos:end="147:62">index</name></expr>)</condition> <block pos:start="147:65" pos:end="149:33">{<block_content pos:start="148:41" pos:end="148:79">
					<expr_stmt pos:start="148:41" pos:end="148:79"><expr pos:start="148:41" pos:end="148:78"><call pos:start="148:41" pos:end="148:78"><name pos:start="148:41" pos:end="148:55"><name pos:start="148:41" pos:end="148:46">pInMap</name><operator pos:start="148:47" pos:end="148:47">.</operator><name pos:start="148:48" pos:end="148:55">setOrder</name></name><argument_list pos:start="148:56" pos:end="148:78">(<argument pos:start="148:57" pos:end="148:77"><expr pos:start="148:57" pos:end="148:77"><call pos:start="148:57" pos:end="148:73"><name pos:start="148:57" pos:end="148:71"><name pos:start="148:57" pos:end="148:62">pInMap</name><operator pos:start="148:63" pos:end="148:63">.</operator><name pos:start="148:64" pos:end="148:71">getOrder</name></name><argument_list pos:start="148:72" pos:end="148:73">()</argument_list></call> <operator pos:start="148:75" pos:end="148:75">+</operator> <literal type="number" pos:start="148:77" pos:end="148:77">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				</block_content>}</block></if></if_stmt>
			</block_content>}</block></for>
		</block_content>}</block></else></if_stmt>
		
		<decl_stmt pos:start="153:17" pos:end="153:38"><decl pos:start="153:17" pos:end="153:37"><type pos:start="153:17" pos:end="153:23"><name pos:start="153:17" pos:end="153:23">LMarker</name></type> <name pos:start="153:25" pos:end="153:30">newPin</name> <init pos:start="153:32" pos:end="153:37">= <expr pos:start="153:34" pos:end="153:37"><literal type="null" pos:start="153:34" pos:end="153:37">null</literal></expr></init></decl>;</decl_stmt>
		<comment type="line" pos:start="154:17" pos:end="154:79">// if sideA is selected, draw it green; otherwise, draw it blue</comment>
		<expr_stmt pos:start="155:17" pos:end="155:46"><expr pos:start="155:17" pos:end="155:45"><name pos:start="155:17" pos:end="155:22">newPin</name> <operator pos:start="155:24" pos:end="155:24">=</operator> <call pos:start="155:26" pos:end="155:45"><name pos:start="155:26" pos:end="155:42">addPinForWayPoint</name><argument_list pos:start="155:43" pos:end="155:45">(<argument pos:start="155:44" pos:end="155:44"><expr pos:start="155:44" pos:end="155:44"><name pos:start="155:44" pos:end="155:44">p</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<decl_stmt pos:start="156:17" pos:end="156:98"><decl pos:start="156:17" pos:end="156:97"><type pos:start="156:17" pos:end="156:22"><name pos:start="156:17" pos:end="156:22">String</name></type> <name pos:start="156:24" pos:end="156:31">basepath</name> <init pos:start="156:33" pos:end="156:97">= <expr pos:start="156:35" pos:end="156:97"><call pos:start="156:35" pos:end="156:60"><name pos:start="156:35" pos:end="156:58"><name pos:start="156:35" pos:end="156:47">VaadinService</name><operator pos:start="156:48" pos:end="156:48">.</operator><name pos:start="156:49" pos:end="156:58">getCurrent</name></name><argument_list pos:start="156:59" pos:end="156:60">()</argument_list></call><operator pos:start="156:61" pos:end="156:61">.</operator><call pos:start="156:62" pos:end="156:79"><name pos:start="156:62" pos:end="156:77">getBaseDirectory</name><argument_list pos:start="156:78" pos:end="156:79">()</argument_list></call><operator pos:start="156:80" pos:end="156:80">.</operator><call pos:start="156:81" pos:end="156:97"><name pos:start="156:81" pos:end="156:95">getAbsolutePath</name><argument_list pos:start="156:96" pos:end="156:97">()</argument_list></call></expr></init></decl>;</decl_stmt>
		<decl_stmt pos:start="157:17" pos:end="157:106"><decl pos:start="157:17" pos:end="157:105"><type pos:start="157:17" pos:end="157:28"><name pos:start="157:17" pos:end="157:28">FileResource</name></type> <name pos:start="157:30" pos:end="157:38">greenIcon</name> <init pos:start="157:40" pos:end="157:105">= <expr pos:start="157:42" pos:end="157:105"><operator pos:start="157:42" pos:end="157:44">new</operator> <call pos:start="157:46" pos:end="157:105"><name pos:start="157:46" pos:end="157:57">FileResource</name><argument_list pos:start="157:58" pos:end="157:105">(<argument pos:start="157:59" pos:end="157:104"><expr pos:start="157:59" pos:end="157:104"><operator pos:start="157:59" pos:end="157:61">new</operator> <call pos:start="157:63" pos:end="157:104"><name pos:start="157:63" pos:end="157:66">File</name><argument_list pos:start="157:67" pos:end="157:104">(<argument pos:start="157:68" pos:end="157:103"><expr pos:start="157:68" pos:end="157:103"><name pos:start="157:68" pos:end="157:75">basepath</name><operator pos:start="157:76" pos:end="157:76">+</operator><literal type="string" pos:start="157:77" pos:end="157:103">"/VAADIN/img/green-dot.png"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<decl_stmt pos:start="158:17" pos:end="158:104"><decl pos:start="158:17" pos:end="158:103"><type pos:start="158:17" pos:end="158:28"><name pos:start="158:17" pos:end="158:28">FileResource</name></type> <name pos:start="158:30" pos:end="158:37">blueIcon</name> <init pos:start="158:39" pos:end="158:103">= <expr pos:start="158:41" pos:end="158:103"><operator pos:start="158:41" pos:end="158:43">new</operator> <call pos:start="158:45" pos:end="158:103"><name pos:start="158:45" pos:end="158:56">FileResource</name><argument_list pos:start="158:57" pos:end="158:103">(<argument pos:start="158:58" pos:end="158:102"><expr pos:start="158:58" pos:end="158:102"><operator pos:start="158:58" pos:end="158:60">new</operator> <call pos:start="158:62" pos:end="158:102"><name pos:start="158:62" pos:end="158:65">File</name><argument_list pos:start="158:66" pos:end="158:102">(<argument pos:start="158:67" pos:end="158:101"><expr pos:start="158:67" pos:end="158:101"><name pos:start="158:67" pos:end="158:74">basepath</name><operator pos:start="158:75" pos:end="158:75">+</operator><literal type="string" pos:start="158:76" pos:end="158:101">"/VAADIN/img/blue-dot.png"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<if_stmt pos:start="159:17" pos:end="162:49"><if pos:start="159:17" pos:end="160:50">if <condition pos:start="159:20" pos:end="159:37">(<expr pos:start="159:21" pos:end="159:36"><call pos:start="159:21" pos:end="159:31"><name pos:start="159:21" pos:end="159:29"><name pos:start="159:21" pos:end="159:21">p</name><operator pos:start="159:22" pos:end="159:22">.</operator><name pos:start="159:23" pos:end="159:29">getSide</name></name><argument_list pos:start="159:30" pos:end="159:31">()</argument_list></call> <operator pos:start="159:33" pos:end="159:34">==</operator> <literal type="number" pos:start="159:36" pos:end="159:36">0</literal></expr>)</condition><block type="pseudo" pos:start="160:25" pos:end="160:50"><block_content pos:start="160:25" pos:end="160:50"> <comment type="line" pos:start="159:39" pos:end="159:59">// side A is 0 is red</comment>
			<expr_stmt pos:start="160:25" pos:end="160:50"><expr pos:start="160:25" pos:end="160:49"><call pos:start="160:25" pos:end="160:49"><name pos:start="160:25" pos:end="160:38"><name pos:start="160:25" pos:end="160:30">newPin</name><operator pos:start="160:31" pos:end="160:31">.</operator><name pos:start="160:32" pos:end="160:38">setIcon</name></name><argument_list pos:start="160:39" pos:end="160:49">(<argument pos:start="160:40" pos:end="160:48"><expr pos:start="160:40" pos:end="160:48"><name pos:start="160:40" pos:end="160:48">greenIcon</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>
		<if type="elseif" pos:start="161:17" pos:end="162:49">else if <condition pos:start="161:25" pos:end="161:42">(<expr pos:start="161:26" pos:end="161:41"><call pos:start="161:26" pos:end="161:36"><name pos:start="161:26" pos:end="161:34"><name pos:start="161:26" pos:end="161:26">p</name><operator pos:start="161:27" pos:end="161:27">.</operator><name pos:start="161:28" pos:end="161:34">getSide</name></name><argument_list pos:start="161:35" pos:end="161:36">()</argument_list></call> <operator pos:start="161:38" pos:end="161:39">==</operator> <literal type="number" pos:start="161:41" pos:end="161:41">1</literal></expr>)</condition><block type="pseudo" pos:start="162:25" pos:end="162:49"><block_content pos:start="162:25" pos:end="162:49"> <comment type="line" pos:start="161:44" pos:end="161:65">// side B is 1 is blue</comment>
			<expr_stmt pos:start="162:25" pos:end="162:49"><expr pos:start="162:25" pos:end="162:48"><call pos:start="162:25" pos:end="162:48"><name pos:start="162:25" pos:end="162:38"><name pos:start="162:25" pos:end="162:30">newPin</name><operator pos:start="162:31" pos:end="162:31">.</operator><name pos:start="162:32" pos:end="162:38">setIcon</name></name><argument_list pos:start="162:39" pos:end="162:48">(<argument pos:start="162:40" pos:end="162:47"><expr pos:start="162:40" pos:end="162:47"><name pos:start="162:40" pos:end="162:47">blueIcon</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
		<expr_stmt pos:start="163:17" pos:end="163:54"><expr pos:start="163:17" pos:end="163:53"><call pos:start="163:17" pos:end="163:53"><name pos:start="163:17" pos:end="163:34"><name pos:start="163:17" pos:end="163:22">newPin</name><operator pos:start="163:23" pos:end="163:23">.</operator><name pos:start="163:24" pos:end="163:34">setIconSize</name></name><argument_list pos:start="163:35" pos:end="163:53">(<argument pos:start="163:36" pos:end="163:52"><expr pos:start="163:36" pos:end="163:52"><operator pos:start="163:36" pos:end="163:38">new</operator> <call pos:start="163:40" pos:end="163:52"><name pos:start="163:40" pos:end="163:44">Point</name><argument_list pos:start="163:45" pos:end="163:52">(<argument pos:start="163:46" pos:end="163:47"><expr pos:start="163:46" pos:end="163:47"><literal type="number" pos:start="163:46" pos:end="163:47">15</literal></expr></argument>, <argument pos:start="163:50" pos:end="163:51"><expr pos:start="163:50" pos:end="163:51"><literal type="number" pos:start="163:50" pos:end="163:51">15</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt pos:start="164:17" pos:end="164:55"><expr pos:start="164:17" pos:end="164:54"><call pos:start="164:17" pos:end="164:54"><name pos:start="164:17" pos:end="164:36"><name pos:start="164:17" pos:end="164:22">newPin</name><operator pos:start="164:23" pos:end="164:23">.</operator><name pos:start="164:24" pos:end="164:36">setIconAnchor</name></name><argument_list pos:start="164:37" pos:end="164:54">(<argument pos:start="164:38" pos:end="164:53"><expr pos:start="164:38" pos:end="164:53"><operator pos:start="164:38" pos:end="164:40">new</operator> <call pos:start="164:42" pos:end="164:53"><name pos:start="164:42" pos:end="164:46">Point</name><argument_list pos:start="164:47" pos:end="164:53">(<argument pos:start="164:48" pos:end="164:48"><expr pos:start="164:48" pos:end="164:48"><literal type="number" pos:start="164:48" pos:end="164:48">7</literal></expr></argument>, <argument pos:start="164:51" pos:end="164:52"><expr pos:start="164:51" pos:end="164:52"><literal type="number" pos:start="164:51" pos:end="164:52">10</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		
		
		<expr_stmt pos:start="167:17" pos:end="167:50"><expr pos:start="167:17" pos:end="167:49"><call pos:start="167:17" pos:end="167:49"><name pos:start="167:17" pos:end="167:47"><name pos:start="167:17" pos:end="167:28">mapComponent</name><operator pos:start="167:29" pos:end="167:29">.</operator><name pos:start="167:30" pos:end="167:47">updateLinesAndGrid</name></name><argument_list pos:start="167:48" pos:end="167:49">()</argument_list></call></expr>;</expr_stmt>	
		<expr_stmt pos:start="168:17" pos:end="168:40"><expr pos:start="168:17" pos:end="168:39"><call pos:start="168:17" pos:end="168:39"><name pos:start="168:17" pos:end="168:36"><name pos:start="168:17" pos:end="168:32">allSideWaypoints</name><operator pos:start="168:33" pos:end="168:33">.</operator><name pos:start="168:34" pos:end="168:36">add</name></name><argument_list pos:start="168:37" pos:end="168:39">(<argument pos:start="168:38" pos:end="168:38"><expr pos:start="168:38" pos:end="168:38"><name pos:start="168:38" pos:end="168:38">p</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<return pos:start="169:17" pos:end="169:30">return <expr pos:start="169:24" pos:end="169:29"><name pos:start="169:24" pos:end="169:29">newPin</name></expr>;</return>
	</block_content>}</block></function>
	
	<comment type="line" pos:start="172:9" pos:end="172:57">// adds a vertex to a polygon as it's being drawn</comment>
	<function pos:start="173:9" pos:end="202:9"><type pos:start="173:9" pos:end="173:19"><specifier pos:start="173:9" pos:end="173:14">public</specifier> <name pos:start="173:16" pos:end="173:19">void</name></type> <name pos:start="173:21" pos:end="173:36">addPolygonVertex</name><parameter_list pos:start="173:37" pos:end="173:49">(<parameter pos:start="173:38" pos:end="173:48"><decl pos:start="173:38" pos:end="173:48"><type pos:start="173:38" pos:end="173:42"><name pos:start="173:38" pos:end="173:42">Point</name></type> <name pos:start="173:44" pos:end="173:48">point</name></decl></parameter>)</parameter_list> <block pos:start="173:51" pos:end="202:9">{<block_content pos:start="175:17" pos:end="201:54">

		<decl_stmt pos:start="175:17" pos:end="175:62"><decl pos:start="175:17" pos:end="175:61"><type pos:start="175:17" pos:end="175:27"><name pos:start="175:17" pos:end="175:27">UIEdgePoint</name></type> <name pos:start="175:29" pos:end="175:29">p</name> <init pos:start="175:31" pos:end="175:61">= <expr pos:start="175:33" pos:end="175:61"><operator pos:start="175:33" pos:end="175:35">new</operator> <call pos:start="175:37" pos:end="175:61"><name pos:start="175:37" pos:end="175:47">UIEdgePoint</name><argument_list pos:start="175:48" pos:end="175:61">(<argument pos:start="175:49" pos:end="175:53"><expr pos:start="175:49" pos:end="175:53"><name pos:start="175:49" pos:end="175:53">point</name></expr></argument>, <argument pos:start="175:56" pos:end="175:60"><expr pos:start="175:56" pos:end="175:60"><literal type="boolean" pos:start="175:56" pos:end="175:60">false</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<decl_stmt pos:start="176:17" pos:end="176:58"><decl pos:start="176:17" pos:end="176:57"><type pos:start="176:17" pos:end="176:23"><name pos:start="176:17" pos:end="176:23">LMarker</name></type> <name pos:start="176:25" pos:end="176:30">newPin</name> <init pos:start="176:32" pos:end="176:57">= <expr pos:start="176:34" pos:end="176:57"><operator pos:start="176:34" pos:end="176:36">new</operator> <call pos:start="176:38" pos:end="176:57"><name pos:start="176:38" pos:end="176:44">LMarker</name><argument_list pos:start="176:45" pos:end="176:57">(<argument pos:start="176:46" pos:end="176:56"><expr pos:start="176:46" pos:end="176:56"><call pos:start="176:46" pos:end="176:56"><name pos:start="176:46" pos:end="176:54"><name pos:start="176:46" pos:end="176:46">p</name><operator pos:start="176:47" pos:end="176:47">.</operator><name pos:start="176:48" pos:end="176:54">toPoint</name></name><argument_list pos:start="176:55" pos:end="176:56">()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt pos:start="177:17" pos:end="177:36"><expr pos:start="177:17" pos:end="177:35"><call pos:start="177:17" pos:end="177:35"><name pos:start="177:17" pos:end="177:30"><name pos:start="177:17" pos:end="177:22">newPin</name><operator pos:start="177:23" pos:end="177:23">.</operator><name pos:start="177:24" pos:end="177:30">setData</name></name><argument_list pos:start="177:31" pos:end="177:35">(<argument pos:start="177:32" pos:end="177:34"><expr pos:start="177:32" pos:end="177:34"><operator pos:start="177:32" pos:end="177:32">(</operator><name pos:start="177:33" pos:end="177:33">p</name><operator pos:start="177:34" pos:end="177:34">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt pos:start="178:17" pos:end="178:40"><expr pos:start="178:17" pos:end="178:39"><call pos:start="178:17" pos:end="178:39"><name pos:start="178:17" pos:end="178:28"><name pos:start="178:17" pos:end="178:22">newPin</name><operator pos:start="178:23" pos:end="178:23">.</operator><name pos:start="178:24" pos:end="178:28">setId</name></name><argument_list pos:start="178:29" pos:end="178:39">(<argument pos:start="178:30" pos:end="178:38"><expr pos:start="178:30" pos:end="178:38"><call pos:start="178:30" pos:end="178:38"><name pos:start="178:30" pos:end="178:36"><name pos:start="178:30" pos:end="178:30">p</name><operator pos:start="178:31" pos:end="178:31">.</operator><name pos:start="178:32" pos:end="178:36">getId</name></name><argument_list pos:start="178:37" pos:end="178:38">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt pos:start="179:17" pos:end="179:40"><expr pos:start="179:17" pos:end="179:39"><call pos:start="179:17" pos:end="179:39"><name pos:start="179:17" pos:end="179:32"><name pos:start="179:17" pos:end="179:22">newPin</name><operator pos:start="179:23" pos:end="179:23">.</operator><name pos:start="179:24" pos:end="179:32">setHeight</name></name><argument_list pos:start="179:33" pos:end="179:39">(<argument pos:start="179:34" pos:end="179:38"><expr pos:start="179:34" pos:end="179:38"><literal type="string" pos:start="179:34" pos:end="179:38">"2px"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt pos:start="180:17" pos:end="180:87"><expr pos:start="180:17" pos:end="180:86"><call pos:start="180:17" pos:end="180:86"><name pos:start="180:17" pos:end="180:41"><name pos:start="180:17" pos:end="180:22">newPin</name><operator pos:start="180:23" pos:end="180:23">.</operator><name pos:start="180:24" pos:end="180:41">addDragEndListener</name></name><argument_list pos:start="180:42" pos:end="180:86">(<argument pos:start="180:43" pos:end="180:85"><expr pos:start="180:43" pos:end="180:85"><operator pos:start="180:43" pos:end="180:45">new</operator> <call pos:start="180:47" pos:end="180:85"><name pos:start="180:47" pos:end="180:71">AMPriorityDragEndListener</name><argument_list pos:start="180:72" pos:end="180:85">(<argument pos:start="180:73" pos:end="180:76"><expr pos:start="180:73" pos:end="180:76"><name pos:start="180:73" pos:end="180:76">this</name></expr></argument>, <argument pos:start="180:79" pos:end="180:84"><expr pos:start="180:79" pos:end="180:84"><name pos:start="180:79" pos:end="180:84">newPin</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt pos:start="181:17" pos:end="181:43"><expr pos:start="181:17" pos:end="181:42"><call pos:start="181:17" pos:end="181:42"><name pos:start="181:17" pos:end="181:34"><name pos:start="181:17" pos:end="181:30">newPolygonPins</name><operator pos:start="181:31" pos:end="181:31">.</operator><name pos:start="181:32" pos:end="181:34">add</name></name><argument_list pos:start="181:35" pos:end="181:42">(<argument pos:start="181:36" pos:end="181:41"><expr pos:start="181:36" pos:end="181:41"><name pos:start="181:36" pos:end="181:41">newPin</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt pos:start="182:17" pos:end="182:41"><expr pos:start="182:17" pos:end="182:40"><call pos:start="182:17" pos:end="182:40"><name pos:start="182:17" pos:end="182:32"><name pos:start="182:17" pos:end="182:19">map</name><operator pos:start="182:20" pos:end="182:20">.</operator><name pos:start="182:21" pos:end="182:32">addComponent</name></name><argument_list pos:start="182:33" pos:end="182:40">(<argument pos:start="182:34" pos:end="182:39"><expr pos:start="182:34" pos:end="182:39"><name pos:start="182:34" pos:end="182:39">newPin</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt pos:start="183:17" pos:end="183:36"><expr pos:start="183:17" pos:end="183:35"><call pos:start="183:17" pos:end="183:35"><name pos:start="183:17" pos:end="183:33">setAllPolygonPins</name><argument_list pos:start="183:34" pos:end="183:35">()</argument_list></call></expr>;</expr_stmt>
		<expr_stmt pos:start="184:17" pos:end="184:43"><expr pos:start="184:17" pos:end="184:42"><call pos:start="184:17" pos:end="184:42"><name pos:start="184:17" pos:end="184:35"><name pos:start="184:17" pos:end="184:31">polygonVertices</name><operator pos:start="184:32" pos:end="184:32">.</operator><name pos:start="184:33" pos:end="184:35">add</name></name><argument_list pos:start="184:36" pos:end="184:42">(<argument pos:start="184:37" pos:end="184:41"><expr pos:start="184:37" pos:end="184:41"><name pos:start="184:37" pos:end="184:41">point</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		
		<comment type="line" pos:start="186:17" pos:end="186:75">// add polyline between each additional point that is drawn</comment>
		<if_stmt pos:start="187:17" pos:end="196:17"><if pos:start="187:17" pos:end="196:17">if <condition pos:start="187:20" pos:end="187:47">(<expr pos:start="187:21" pos:end="187:46"><call pos:start="187:21" pos:end="187:42"><name pos:start="187:21" pos:end="187:40"><name pos:start="187:21" pos:end="187:35">polygonVertices</name><operator pos:start="187:36" pos:end="187:36">.</operator><name pos:start="187:37" pos:end="187:40">size</name></name><argument_list pos:start="187:41" pos:end="187:42">()</argument_list></call> <operator pos:start="187:44" pos:end="187:44">&gt;</operator> <literal type="number" pos:start="187:46" pos:end="187:46">1</literal></expr>)</condition> <block pos:start="187:49" pos:end="196:17">{<block_content pos:start="188:25" pos:end="195:54">
			<decl_stmt pos:start="188:25" pos:end="188:113"><decl pos:start="188:25" pos:end="188:112"><type pos:start="188:25" pos:end="188:33"><name pos:start="188:25" pos:end="188:33">LPolyline</name></type> <name pos:start="188:35" pos:end="188:42">polyline</name> <init pos:start="188:44" pos:end="188:112">= <expr pos:start="188:46" pos:end="188:112"><operator pos:start="188:46" pos:end="188:48">new</operator> <call pos:start="188:50" pos:end="188:112"><name pos:start="188:50" pos:end="188:58">LPolyline</name><argument_list pos:start="188:59" pos:end="188:112">(<argument pos:start="188:60" pos:end="188:64"><expr pos:start="188:60" pos:end="188:64"><name pos:start="188:60" pos:end="188:64">point</name></expr></argument>, <argument pos:start="188:67" pos:end="188:111"><expr pos:start="188:67" pos:end="188:111"><call pos:start="188:67" pos:end="188:111"><name pos:start="188:67" pos:end="188:85"><name pos:start="188:67" pos:end="188:81">polygonVertices</name><operator pos:start="188:82" pos:end="188:82">.</operator><name pos:start="188:83" pos:end="188:85">get</name></name><argument_list pos:start="188:86" pos:end="188:111">(<argument pos:start="188:87" pos:end="188:110"><expr pos:start="188:87" pos:end="188:110"><call pos:start="188:87" pos:end="188:108"><name pos:start="188:87" pos:end="188:106"><name pos:start="188:87" pos:end="188:101">polygonVertices</name><operator pos:start="188:102" pos:end="188:102">.</operator><name pos:start="188:103" pos:end="188:106">size</name></name><argument_list pos:start="188:107" pos:end="188:108">()</argument_list></call><operator pos:start="188:109" pos:end="188:109">-</operator><literal type="number" pos:start="188:110" pos:end="188:110">2</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<expr_stmt pos:start="189:25" pos:end="189:69"><expr pos:start="189:25" pos:end="189:68"><call pos:start="189:25" pos:end="189:68"><name pos:start="189:25" pos:end="189:38"><name pos:start="189:25" pos:end="189:32">polyline</name><operator pos:start="189:33" pos:end="189:33">.</operator><name pos:start="189:34" pos:end="189:38">setId</name></name><argument_list pos:start="189:39" pos:end="189:68">(<argument pos:start="189:40" pos:end="189:67"><expr pos:start="189:40" pos:end="189:67"><call pos:start="189:40" pos:end="189:56"><name pos:start="189:40" pos:end="189:54"><name pos:start="189:40" pos:end="189:43">UUID</name><operator pos:start="189:44" pos:end="189:44">.</operator><name pos:start="189:45" pos:end="189:54">randomUUID</name></name><argument_list pos:start="189:55" pos:end="189:56">()</argument_list></call><operator pos:start="189:57" pos:end="189:57">.</operator><call pos:start="189:58" pos:end="189:67"><name pos:start="189:58" pos:end="189:65">toString</name><argument_list pos:start="189:66" pos:end="189:67">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt pos:start="190:25" pos:end="190:53"><expr pos:start="190:25" pos:end="190:52"><call pos:start="190:25" pos:end="190:52"><name pos:start="190:25" pos:end="190:41"><name pos:start="190:25" pos:end="190:32">polyline</name><operator pos:start="190:33" pos:end="190:33">.</operator><name pos:start="190:34" pos:end="190:41">setColor</name></name><argument_list pos:start="190:42" pos:end="190:52">(<argument pos:start="190:43" pos:end="190:51"><expr pos:start="190:43" pos:end="190:51"><literal type="string" pos:start="190:43" pos:end="190:51">"#ff5050"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt pos:start="191:25" pos:end="191:54"><expr pos:start="191:25" pos:end="191:53"><call pos:start="191:25" pos:end="191:53"><name pos:start="191:25" pos:end="191:45"><name pos:start="191:25" pos:end="191:32">polyline</name><operator pos:start="191:33" pos:end="191:33">.</operator><name pos:start="191:34" pos:end="191:45">setDashArray</name></name><argument_list pos:start="191:46" pos:end="191:53">(<argument pos:start="191:47" pos:end="191:52"><expr pos:start="191:47" pos:end="191:52"><literal type="string" pos:start="191:47" pos:end="191:52">"5 10"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt pos:start="192:25" pos:end="192:48"><expr pos:start="192:25" pos:end="192:47"><call pos:start="192:25" pos:end="192:47"><name pos:start="192:25" pos:end="192:42"><name pos:start="192:25" pos:end="192:32">polyline</name><operator pos:start="192:33" pos:end="192:33">.</operator><name pos:start="192:34" pos:end="192:42">setHeight</name></name><argument_list pos:start="192:43" pos:end="192:47">(<argument pos:start="192:44" pos:end="192:46"><expr pos:start="192:44" pos:end="192:46"><literal type="string" pos:start="192:44" pos:end="192:46">"2"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt pos:start="193:25" pos:end="193:46"><expr pos:start="193:25" pos:end="193:45"><call pos:start="193:25" pos:end="193:45"><name pos:start="193:25" pos:end="193:42"><name pos:start="193:25" pos:end="193:32">polyline</name><operator pos:start="193:33" pos:end="193:33">.</operator><name pos:start="193:34" pos:end="193:42">setWeight</name></name><argument_list pos:start="193:43" pos:end="193:45">(<argument pos:start="193:44" pos:end="193:44"><expr pos:start="193:44" pos:end="193:44"><literal type="number" pos:start="193:44" pos:end="193:44">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt pos:start="194:25" pos:end="194:51"><expr pos:start="194:25" pos:end="194:50"><call pos:start="194:25" pos:end="194:50"><name pos:start="194:25" pos:end="194:40"><name pos:start="194:25" pos:end="194:27">map</name><operator pos:start="194:28" pos:end="194:28">.</operator><name pos:start="194:29" pos:end="194:40">addComponent</name></name><argument_list pos:start="194:41" pos:end="194:50">(<argument pos:start="194:42" pos:end="194:49"><expr pos:start="194:42" pos:end="194:49"><name pos:start="194:42" pos:end="194:49">polyline</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt pos:start="195:25" pos:end="195:54"><expr pos:start="195:25" pos:end="195:53"><call pos:start="195:25" pos:end="195:53"><name pos:start="195:25" pos:end="195:43"><name pos:start="195:25" pos:end="195:39">newPolygonLines</name><operator pos:start="195:40" pos:end="195:40">.</operator><name pos:start="195:41" pos:end="195:43">add</name></name><argument_list pos:start="195:44" pos:end="195:53">(<argument pos:start="195:45" pos:end="195:52"><expr pos:start="195:45" pos:end="195:52"><name pos:start="195:45" pos:end="195:52">polyline</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		</block_content>}</block></if></if_stmt>
		<decl_stmt pos:start="197:17" pos:end="197:98"><decl pos:start="197:17" pos:end="197:97"><type pos:start="197:17" pos:end="197:22"><name pos:start="197:17" pos:end="197:22">String</name></type> <name pos:start="197:24" pos:end="197:31">basepath</name> <init pos:start="197:33" pos:end="197:97">= <expr pos:start="197:35" pos:end="197:97"><call pos:start="197:35" pos:end="197:60"><name pos:start="197:35" pos:end="197:58"><name pos:start="197:35" pos:end="197:47">VaadinService</name><operator pos:start="197:48" pos:end="197:48">.</operator><name pos:start="197:49" pos:end="197:58">getCurrent</name></name><argument_list pos:start="197:59" pos:end="197:60">()</argument_list></call><operator pos:start="197:61" pos:end="197:61">.</operator><call pos:start="197:62" pos:end="197:79"><name pos:start="197:62" pos:end="197:77">getBaseDirectory</name><argument_list pos:start="197:78" pos:end="197:79">()</argument_list></call><operator pos:start="197:80" pos:end="197:80">.</operator><call pos:start="197:81" pos:end="197:97"><name pos:start="197:81" pos:end="197:95">getAbsolutePath</name><argument_list pos:start="197:96" pos:end="197:97">()</argument_list></call></expr></init></decl>;</decl_stmt>
		<decl_stmt pos:start="198:17" pos:end="198:102"><decl pos:start="198:17" pos:end="198:101"><type pos:start="198:17" pos:end="198:28"><name pos:start="198:17" pos:end="198:28">FileResource</name></type> <name pos:start="198:30" pos:end="198:36">redIcon</name> <init pos:start="198:38" pos:end="198:101">= <expr pos:start="198:40" pos:end="198:101"><operator pos:start="198:40" pos:end="198:42">new</operator> <call pos:start="198:44" pos:end="198:101"><name pos:start="198:44" pos:end="198:55">FileResource</name><argument_list pos:start="198:56" pos:end="198:101">(<argument pos:start="198:57" pos:end="198:100"><expr pos:start="198:57" pos:end="198:100"><operator pos:start="198:57" pos:end="198:59">new</operator> <call pos:start="198:61" pos:end="198:100"><name pos:start="198:61" pos:end="198:64">File</name><argument_list pos:start="198:65" pos:end="198:100">(<argument pos:start="198:66" pos:end="198:99"><expr pos:start="198:66" pos:end="198:99"><name pos:start="198:66" pos:end="198:73">basepath</name><operator pos:start="198:74" pos:end="198:74">+</operator><literal type="string" pos:start="198:75" pos:end="198:99">"/VAADIN/img/red-dot.png"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt pos:start="199:17" pos:end="199:40"><expr pos:start="199:17" pos:end="199:39"><call pos:start="199:17" pos:end="199:39"><name pos:start="199:17" pos:end="199:30"><name pos:start="199:17" pos:end="199:22">newPin</name><operator pos:start="199:23" pos:end="199:23">.</operator><name pos:start="199:24" pos:end="199:30">setIcon</name></name><argument_list pos:start="199:31" pos:end="199:39">(<argument pos:start="199:32" pos:end="199:38"><expr pos:start="199:32" pos:end="199:38"><name pos:start="199:32" pos:end="199:38">redIcon</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt pos:start="200:17" pos:end="200:54"><expr pos:start="200:17" pos:end="200:53"><call pos:start="200:17" pos:end="200:53"><name pos:start="200:17" pos:end="200:34"><name pos:start="200:17" pos:end="200:22">newPin</name><operator pos:start="200:23" pos:end="200:23">.</operator><name pos:start="200:24" pos:end="200:34">setIconSize</name></name><argument_list pos:start="200:35" pos:end="200:53">(<argument pos:start="200:36" pos:end="200:52"><expr pos:start="200:36" pos:end="200:52"><operator pos:start="200:36" pos:end="200:38">new</operator> <call pos:start="200:40" pos:end="200:52"><name pos:start="200:40" pos:end="200:44">Point</name><argument_list pos:start="200:45" pos:end="200:52">(<argument pos:start="200:46" pos:end="200:47"><expr pos:start="200:46" pos:end="200:47"><literal type="number" pos:start="200:46" pos:end="200:47">10</literal></expr></argument>, <argument pos:start="200:50" pos:end="200:51"><expr pos:start="200:50" pos:end="200:51"><literal type="number" pos:start="200:50" pos:end="200:51">10</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt pos:start="201:17" pos:end="201:54"><expr pos:start="201:17" pos:end="201:53"><call pos:start="201:17" pos:end="201:53"><name pos:start="201:17" pos:end="201:36"><name pos:start="201:17" pos:end="201:22">newPin</name><operator pos:start="201:23" pos:end="201:23">.</operator><name pos:start="201:24" pos:end="201:36">setIconAnchor</name></name><argument_list pos:start="201:37" pos:end="201:53">(<argument pos:start="201:38" pos:end="201:52"><expr pos:start="201:38" pos:end="201:52"><operator pos:start="201:38" pos:end="201:40">new</operator> <call pos:start="201:42" pos:end="201:52"><name pos:start="201:42" pos:end="201:46">Point</name><argument_list pos:start="201:47" pos:end="201:52">(<argument pos:start="201:48" pos:end="201:48"><expr pos:start="201:48" pos:end="201:48"><literal type="number" pos:start="201:48" pos:end="201:48">5</literal></expr></argument>, <argument pos:start="201:51" pos:end="201:51"><expr pos:start="201:51" pos:end="201:51"><literal type="number" pos:start="201:51" pos:end="201:51">7</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	</block_content>}</block></function>
	
	<comment type="line" pos:start="204:9" pos:end="204:63">// adds a pin in a location designated by the wayPoints</comment>
	<function pos:start="205:9" pos:end="218:9"><type pos:start="205:9" pos:end="205:23"><specifier pos:start="205:9" pos:end="205:15">private</specifier> <name pos:start="205:17" pos:end="205:23">LMarker</name></type> <name pos:start="205:25" pos:end="205:41">addPinForWayPoint</name><parameter_list pos:start="205:42" pos:end="205:63">(<parameter pos:start="205:43" pos:end="205:62"><decl pos:start="205:43" pos:end="205:62"><type pos:start="205:43" pos:end="205:53"><name pos:start="205:43" pos:end="205:53">UIEdgePoint</name></type> <name pos:start="205:55" pos:end="205:62">wayPoint</name></decl></parameter>)</parameter_list> <block pos:start="205:65" pos:end="218:9">{<block_content pos:start="206:17" pos:end="217:37">
		<decl_stmt pos:start="206:17" pos:end="206:72"><decl pos:start="206:17" pos:end="206:71"><type pos:start="206:17" pos:end="206:23"><name pos:start="206:17" pos:end="206:23">LMarker</name></type> <name pos:start="206:25" pos:end="206:37">leafletMarker</name> <init pos:start="206:39" pos:end="206:71">= <expr pos:start="206:41" pos:end="206:71"><operator pos:start="206:41" pos:end="206:43">new</operator> <call pos:start="206:45" pos:end="206:71"><name pos:start="206:45" pos:end="206:51">LMarker</name><argument_list pos:start="206:52" pos:end="206:71">(<argument pos:start="206:53" pos:end="206:70"><expr pos:start="206:53" pos:end="206:70"><call pos:start="206:53" pos:end="206:70"><name pos:start="206:53" pos:end="206:68"><name pos:start="206:53" pos:end="206:60">wayPoint</name><operator pos:start="206:61" pos:end="206:61">.</operator><name pos:start="206:62" pos:end="206:68">toPoint</name></name><argument_list pos:start="206:69" pos:end="206:70">()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt pos:start="207:17" pos:end="207:48"><expr pos:start="207:17" pos:end="207:47"><call pos:start="207:17" pos:end="207:47"><name pos:start="207:17" pos:end="207:37"><name pos:start="207:17" pos:end="207:29">leafletMarker</name><operator pos:start="207:30" pos:end="207:30">.</operator><name pos:start="207:31" pos:end="207:37">setData</name></name><argument_list pos:start="207:38" pos:end="207:47">(<argument pos:start="207:39" pos:end="207:46"><expr pos:start="207:39" pos:end="207:46"><name pos:start="207:39" pos:end="207:46">wayPoint</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt pos:start="208:17" pos:end="208:54"><expr pos:start="208:17" pos:end="208:53"><call pos:start="208:17" pos:end="208:53"><name pos:start="208:17" pos:end="208:35"><name pos:start="208:17" pos:end="208:29">leafletMarker</name><operator pos:start="208:30" pos:end="208:30">.</operator><name pos:start="208:31" pos:end="208:35">setId</name></name><argument_list pos:start="208:36" pos:end="208:53">(<argument pos:start="208:37" pos:end="208:52"><expr pos:start="208:37" pos:end="208:52"><call pos:start="208:37" pos:end="208:52"><name pos:start="208:37" pos:end="208:50"><name pos:start="208:37" pos:end="208:44">wayPoint</name><operator pos:start="208:45" pos:end="208:45">.</operator><name pos:start="208:46" pos:end="208:50">getId</name></name><argument_list pos:start="208:51" pos:end="208:52">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		
		<if_stmt pos:start="210:17" pos:end="210:113"><if pos:start="210:17" pos:end="210:113">if <condition pos:start="210:20" pos:end="210:52">(<expr pos:start="210:21" pos:end="210:51"><name pos:start="210:21" pos:end="210:43">markerMouseOverListener</name> <operator pos:start="210:45" pos:end="210:46">!=</operator> <literal type="null" pos:start="210:48" pos:end="210:51">null</literal></expr>)</condition><block type="pseudo" pos:start="210:54" pos:end="210:113"><block_content pos:start="210:54" pos:end="210:113"> <expr_stmt pos:start="210:54" pos:end="210:113"><expr pos:start="210:54" pos:end="210:112"><call pos:start="210:54" pos:end="210:112"><name pos:start="210:54" pos:end="210:87"><name pos:start="210:54" pos:end="210:66">leafletMarker</name><operator pos:start="210:67" pos:end="210:67">.</operator><name pos:start="210:68" pos:end="210:87">addMouseOverListener</name></name><argument_list pos:start="210:88" pos:end="210:112">(<argument pos:start="210:89" pos:end="210:111"><expr pos:start="210:89" pos:end="210:111"><name pos:start="210:89" pos:end="210:111">markerMouseOverListener</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
		<if_stmt pos:start="211:17" pos:end="211:110"><if pos:start="211:17" pos:end="211:110">if <condition pos:start="211:20" pos:end="211:51">(<expr pos:start="211:21" pos:end="211:50"><name pos:start="211:21" pos:end="211:42">markerMouseOutListener</name> <operator pos:start="211:44" pos:end="211:45">!=</operator> <literal type="null" pos:start="211:47" pos:end="211:50">null</literal></expr>)</condition><block type="pseudo" pos:start="211:53" pos:end="211:110"><block_content pos:start="211:53" pos:end="211:110"> <expr_stmt pos:start="211:53" pos:end="211:110"><expr pos:start="211:53" pos:end="211:109"><call pos:start="211:53" pos:end="211:109"><name pos:start="211:53" pos:end="211:85"><name pos:start="211:53" pos:end="211:65">leafletMarker</name><operator pos:start="211:66" pos:end="211:66">.</operator><name pos:start="211:67" pos:end="211:85">addMouseOutListener</name></name><argument_list pos:start="211:86" pos:end="211:109">(<argument pos:start="211:87" pos:end="211:108"><expr pos:start="211:87" pos:end="211:108"><name pos:start="211:87" pos:end="211:108">markerMouseOutListener</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
		<if_stmt pos:start="212:17" pos:end="212:107"><if pos:start="212:17" pos:end="212:107">if <condition pos:start="212:20" pos:end="212:50">(<expr pos:start="212:21" pos:end="212:49"><name pos:start="212:21" pos:end="212:41">markerDragEndListener</name> <operator pos:start="212:43" pos:end="212:44">!=</operator> <literal type="null" pos:start="212:46" pos:end="212:49">null</literal></expr>)</condition><block type="pseudo" pos:start="212:52" pos:end="212:107"><block_content pos:start="212:52" pos:end="212:107"> <expr_stmt pos:start="212:52" pos:end="212:107"><expr pos:start="212:52" pos:end="212:106"><call pos:start="212:52" pos:end="212:106"><name pos:start="212:52" pos:end="212:83"><name pos:start="212:52" pos:end="212:64">leafletMarker</name><operator pos:start="212:65" pos:end="212:65">.</operator><name pos:start="212:66" pos:end="212:83">addDragEndListener</name></name><argument_list pos:start="212:84" pos:end="212:106">(<argument pos:start="212:85" pos:end="212:105"><expr pos:start="212:85" pos:end="212:105"><name pos:start="212:85" pos:end="212:105">markerDragEndListener</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

		<expr_stmt pos:start="214:17" pos:end="214:82"><expr pos:start="214:17" pos:end="214:81"><call pos:start="214:17" pos:end="214:81"><name pos:start="214:17" pos:end="214:46"><name pos:start="214:17" pos:end="214:29">leafletMarker</name><operator pos:start="214:30" pos:end="214:30">.</operator><name pos:start="214:31" pos:end="214:46">addClickListener</name></name><argument_list pos:start="214:47" pos:end="214:81">(<argument pos:start="214:48" pos:end="214:80"><expr pos:start="214:48" pos:end="214:80"><operator pos:start="214:48" pos:end="214:50">new</operator> <call pos:start="214:52" pos:end="214:80"><name pos:start="214:52" pos:end="214:74">AMUpstreamClickListener</name><argument_list pos:start="214:75" pos:end="214:80">(<argument pos:start="214:76" pos:end="214:79"><expr pos:start="214:76" pos:end="214:79"><name pos:start="214:76" pos:end="214:79">this</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		
		<expr_stmt pos:start="216:17" pos:end="216:48"><expr pos:start="216:17" pos:end="216:47"><call pos:start="216:17" pos:end="216:47"><name pos:start="216:17" pos:end="216:32"><name pos:start="216:17" pos:end="216:19">map</name><operator pos:start="216:20" pos:end="216:20">.</operator><name pos:start="216:21" pos:end="216:32">addComponent</name></name><argument_list pos:start="216:33" pos:end="216:47">(<argument pos:start="216:34" pos:end="216:46"><expr pos:start="216:34" pos:end="216:46"><name pos:start="216:34" pos:end="216:46">leafletMarker</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<return pos:start="217:17" pos:end="217:37">return <expr pos:start="217:24" pos:end="217:36"><name pos:start="217:24" pos:end="217:36">leafletMarker</name></expr>;</return>
	</block_content>}</block></function>
	
	<comment type="line" pos:start="220:9" pos:end="220:42">// removes a pin when given its ID</comment>
	<function pos:start="221:9" pos:end="224:9"><type pos:start="221:9" pos:end="221:19"><specifier pos:start="221:9" pos:end="221:14">public</specifier> <name pos:start="221:16" pos:end="221:19">void</name></type> <name pos:start="221:21" pos:end="221:33">removePinById</name> <parameter_list pos:start="221:35" pos:end="221:45">(<parameter pos:start="221:36" pos:end="221:44"><decl pos:start="221:36" pos:end="221:44"><type pos:start="221:36" pos:end="221:41"><name pos:start="221:36" pos:end="221:41">String</name></type> <name pos:start="221:43" pos:end="221:44">id</name></decl></parameter>)</parameter_list> <block pos:start="221:47" pos:end="224:9">{<block_content pos:start="222:17" pos:end="223:29">
		<decl_stmt pos:start="222:17" pos:end="222:48"><decl pos:start="222:17" pos:end="222:47"><type pos:start="222:17" pos:end="222:23"><name pos:start="222:17" pos:end="222:23">LMarker</name></type> <name pos:start="222:25" pos:end="222:25">p</name> <init pos:start="222:27" pos:end="222:47">= <expr pos:start="222:29" pos:end="222:47"><call pos:start="222:29" pos:end="222:47"><name pos:start="222:29" pos:end="222:43"><name pos:start="222:29" pos:end="222:32">this</name><operator pos:start="222:33" pos:end="222:33">.</operator><name pos:start="222:34" pos:end="222:43">getPinById</name></name><argument_list pos:start="222:44" pos:end="222:47">(<argument pos:start="222:45" pos:end="222:46"><expr pos:start="222:45" pos:end="222:46"><name pos:start="222:45" pos:end="222:46">id</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt pos:start="223:17" pos:end="223:29"><expr pos:start="223:17" pos:end="223:28"><call pos:start="223:17" pos:end="223:28"><name pos:start="223:17" pos:end="223:25">removePin</name><argument_list pos:start="223:26" pos:end="223:28">(<argument pos:start="223:27" pos:end="223:27"><expr pos:start="223:27" pos:end="223:27"><name pos:start="223:27" pos:end="223:27">p</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	</block_content>}</block></function>
	
	<comment type="line" pos:start="226:9" pos:end="226:36">// remove a pin from the map</comment>
	<function pos:start="227:9" pos:end="266:9"><type pos:start="227:9" pos:end="227:19"><specifier pos:start="227:9" pos:end="227:14">public</specifier> <name pos:start="227:16" pos:end="227:19">void</name></type> <name pos:start="227:21" pos:end="227:29">removePin</name> <parameter_list pos:start="227:31" pos:end="227:41">(<parameter pos:start="227:32" pos:end="227:40"><decl pos:start="227:32" pos:end="227:40"><type pos:start="227:32" pos:end="227:38"><name pos:start="227:32" pos:end="227:38">LMarker</name></type> <name pos:start="227:40" pos:end="227:40">p</name></decl></parameter>)</parameter_list> <block pos:start="227:43" pos:end="266:9">{<block_content pos:start="228:17" pos:end="265:50">
		<if_stmt pos:start="228:17" pos:end="229:31"><if pos:start="228:17" pos:end="229:31">if <condition pos:start="228:20" pos:end="228:30">(<expr pos:start="228:21" pos:end="228:29"><name pos:start="228:21" pos:end="228:21">p</name> <operator pos:start="228:23" pos:end="228:24">==</operator> <literal type="null" pos:start="228:26" pos:end="228:29">null</literal></expr>)</condition><block type="pseudo" pos:start="229:25" pos:end="229:31"><block_content pos:start="229:25" pos:end="229:31">
			<return pos:start="229:25" pos:end="229:31">return;</return></block_content></block></if></if_stmt>
		
		<decl_stmt pos:start="231:17" pos:end="231:57"><decl pos:start="231:17" pos:end="231:56"><type pos:start="231:17" pos:end="231:27"><name pos:start="231:17" pos:end="231:27">UIEdgePoint</name></type> <name pos:start="231:29" pos:end="231:29">w</name> <init pos:start="231:31" pos:end="231:56">= <expr pos:start="231:33" pos:end="231:56"><operator pos:start="231:33" pos:end="231:33">(</operator><name pos:start="231:34" pos:end="231:44">UIEdgePoint</name><operator pos:start="231:45" pos:end="231:45">)</operator><call pos:start="231:46" pos:end="231:56"><name pos:start="231:46" pos:end="231:54"><name pos:start="231:46" pos:end="231:46">p</name><operator pos:start="231:47" pos:end="231:47">.</operator><name pos:start="231:48" pos:end="231:54">getData</name></name><argument_list pos:start="231:55" pos:end="231:56">()</argument_list></call></expr></init></decl>;</decl_stmt>
		
		<decl_stmt pos:start="233:17" pos:end="233:52"><decl pos:start="233:17" pos:end="233:51"><type pos:start="233:17" pos:end="233:29"><name pos:start="233:17" pos:end="233:29"><name pos:start="233:17" pos:end="233:20">List</name><argument_list type="generic" pos:start="233:21" pos:end="233:29">&lt;<argument pos:start="233:22" pos:end="233:28"><name pos:start="233:22" pos:end="233:28">LMarker</name></argument>&gt;</argument_list></name></type> <name pos:start="233:31" pos:end="233:34">pins</name> <init pos:start="233:36" pos:end="233:51">= <expr pos:start="233:38" pos:end="233:51"><call pos:start="233:38" pos:end="233:51"><name pos:start="233:38" pos:end="233:49"><name pos:start="233:38" pos:end="233:41">this</name><operator pos:start="233:42" pos:end="233:42">.</operator><name pos:start="233:43" pos:end="233:49">getPins</name></name><argument_list pos:start="233:50" pos:end="233:51">()</argument_list></call></expr></init></decl>;</decl_stmt>
		<for pos:start="234:17" pos:end="238:17">for <control pos:start="234:21" pos:end="234:53">(<init pos:start="234:22" pos:end="234:31"><decl pos:start="234:22" pos:end="234:30"><type pos:start="234:22" pos:end="234:24"><name pos:start="234:22" pos:end="234:24">int</name></type> <name pos:start="234:26" pos:end="234:26">i</name> <init pos:start="234:28" pos:end="234:30">= <expr pos:start="234:30" pos:end="234:30"><literal type="number" pos:start="234:30" pos:end="234:30">0</literal></expr></init></decl>;</init> <condition pos:start="234:33" pos:end="234:48"><expr pos:start="234:33" pos:end="234:47"><name pos:start="234:33" pos:end="234:33">i</name> <operator pos:start="234:35" pos:end="234:35">&lt;</operator> <call pos:start="234:37" pos:end="234:47"><name pos:start="234:37" pos:end="234:45"><name pos:start="234:37" pos:end="234:40">pins</name><operator pos:start="234:41" pos:end="234:41">.</operator><name pos:start="234:42" pos:end="234:45">size</name></name><argument_list pos:start="234:46" pos:end="234:47">()</argument_list></call></expr>;</condition> <incr pos:start="234:50" pos:end="234:52"><expr pos:start="234:50" pos:end="234:52"><name pos:start="234:50" pos:end="234:50">i</name><operator pos:start="234:51" pos:end="234:52">++</operator></expr></incr>)</control> <block pos:start="234:55" pos:end="238:17">{<block_content pos:start="235:25" pos:end="237:71">
			<decl_stmt pos:start="235:25" pos:end="235:80"><decl pos:start="235:25" pos:end="235:79"><type pos:start="235:25" pos:end="235:35"><name pos:start="235:25" pos:end="235:35">UIEdgePoint</name></type> <name pos:start="235:37" pos:end="235:42">pInMap</name> <init pos:start="235:44" pos:end="235:79">= <expr pos:start="235:46" pos:end="235:79"><operator pos:start="235:46" pos:end="235:46">(</operator><name pos:start="235:47" pos:end="235:57">UIEdgePoint</name><operator pos:start="235:58" pos:end="235:58">)</operator><call pos:start="235:59" pos:end="235:69"><name pos:start="235:59" pos:end="235:66"><name pos:start="235:59" pos:end="235:62">pins</name><operator pos:start="235:63" pos:end="235:63">.</operator><name pos:start="235:64" pos:end="235:66">get</name></name><argument_list pos:start="235:67" pos:end="235:69">(<argument pos:start="235:68" pos:end="235:68"><expr pos:start="235:68" pos:end="235:68"><name pos:start="235:68" pos:end="235:68">i</name></expr></argument>)</argument_list></call><operator pos:start="235:70" pos:end="235:70">.</operator><call pos:start="235:71" pos:end="235:79"><name pos:start="235:71" pos:end="235:77">getData</name><argument_list pos:start="235:78" pos:end="235:79">()</argument_list></call></expr></init></decl>;</decl_stmt>
			<if_stmt pos:start="236:25" pos:end="237:71"><if pos:start="236:25" pos:end="237:71">if <condition pos:start="236:28" pos:end="236:62">(<expr pos:start="236:29" pos:end="236:61"><call pos:start="236:29" pos:end="236:45"><name pos:start="236:29" pos:end="236:43"><name pos:start="236:29" pos:end="236:34">pInMap</name><operator pos:start="236:35" pos:end="236:35">.</operator><name pos:start="236:36" pos:end="236:43">getOrder</name></name><argument_list pos:start="236:44" pos:end="236:45">()</argument_list></call> <operator pos:start="236:47" pos:end="236:48">&gt;=</operator> <call pos:start="236:50" pos:end="236:61"><name pos:start="236:50" pos:end="236:59"><name pos:start="236:50" pos:end="236:50">w</name><operator pos:start="236:51" pos:end="236:51">.</operator><name pos:start="236:52" pos:end="236:59">getOrder</name></name><argument_list pos:start="236:60" pos:end="236:61">()</argument_list></call></expr>)</condition><block type="pseudo" pos:start="237:33" pos:end="237:71"><block_content pos:start="237:33" pos:end="237:71">
				<expr_stmt pos:start="237:33" pos:end="237:71"><expr pos:start="237:33" pos:end="237:70"><call pos:start="237:33" pos:end="237:70"><name pos:start="237:33" pos:end="237:47"><name pos:start="237:33" pos:end="237:38">pInMap</name><operator pos:start="237:39" pos:end="237:39">.</operator><name pos:start="237:40" pos:end="237:47">setOrder</name></name><argument_list pos:start="237:48" pos:end="237:70">(<argument pos:start="237:49" pos:end="237:69"><expr pos:start="237:49" pos:end="237:69"><call pos:start="237:49" pos:end="237:65"><name pos:start="237:49" pos:end="237:63"><name pos:start="237:49" pos:end="237:54">pInMap</name><operator pos:start="237:55" pos:end="237:55">.</operator><name pos:start="237:56" pos:end="237:63">getOrder</name></name><argument_list pos:start="237:64" pos:end="237:65">()</argument_list></call> <operator pos:start="237:67" pos:end="237:67">-</operator> <literal type="number" pos:start="237:69" pos:end="237:69">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
		</block_content>}</block></for>
		<expr_stmt pos:start="239:17" pos:end="239:39"><expr pos:start="239:17" pos:end="239:38"><call pos:start="239:17" pos:end="239:38"><name pos:start="239:17" pos:end="239:35"><name pos:start="239:17" pos:end="239:19">map</name><operator pos:start="239:20" pos:end="239:20">.</operator><name pos:start="239:21" pos:end="239:35">removeComponent</name></name><argument_list pos:start="239:36" pos:end="239:38">(<argument pos:start="239:37" pos:end="239:37"><expr pos:start="239:37" pos:end="239:37"><name pos:start="239:37" pos:end="239:37">p</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		
		<comment type="line" pos:start="241:17" pos:end="241:103">// if pin was in a priority side, remove it from the list and redraw the priority sides</comment>
		<for pos:start="242:17" pos:end="264:17">for <control pos:start="242:21" pos:end="242:58">(<init pos:start="242:22" pos:end="242:57"><decl pos:start="242:22" pos:end="242:57"><type pos:start="242:22" pos:end="242:33"><name pos:start="242:22" pos:end="242:33">PrioritySide</name></type> <name pos:start="242:35" pos:end="242:38">side</name> <range pos:start="242:40" pos:end="242:57">: <expr pos:start="242:42" pos:end="242:57"><name pos:start="242:42" pos:end="242:57">allPrioritySides</name></expr></range></decl></init>)</control> <block pos:start="242:60" pos:end="264:17">{<block_content pos:start="243:25" pos:end="263:56">
			<decl_stmt pos:start="243:25" pos:end="243:89"><decl pos:start="243:25" pos:end="243:88"><type pos:start="243:25" pos:end="243:43"><name pos:start="243:25" pos:end="243:43"><name pos:start="243:25" pos:end="243:28">List</name><argument_list type="generic" pos:start="243:29" pos:end="243:43">&lt;<argument pos:start="243:30" pos:end="243:42"><name pos:start="243:30" pos:end="243:42">LlaCoordinate</name></argument>&gt;</argument_list></name></type> <name pos:start="243:45" pos:end="243:54">tempCoords</name> <init pos:start="243:56" pos:end="243:88">= <expr pos:start="243:58" pos:end="243:88"><operator pos:start="243:58" pos:end="243:60">new</operator> <call pos:start="243:62" pos:end="243:88"><name pos:start="243:62" pos:end="243:86"><name pos:start="243:62" pos:end="243:71">LinkedList</name><argument_list type="generic" pos:start="243:72" pos:end="243:86">&lt;<argument pos:start="243:73" pos:end="243:85"><name pos:start="243:73" pos:end="243:85">LlaCoordinate</name></argument>&gt;</argument_list></name><argument_list pos:start="243:87" pos:end="243:88">()</argument_list></call></expr></init></decl>;</decl_stmt>
			<expr_stmt pos:start="244:25" pos:end="244:53"><expr pos:start="244:25" pos:end="244:52"><call pos:start="244:25" pos:end="244:52"><name pos:start="244:25" pos:end="244:50"><name pos:start="244:25" pos:end="244:44">removedPriorityLines</name><operator pos:start="244:45" pos:end="244:45">.</operator><name pos:start="244:46" pos:end="244:50">clear</name></name><argument_list pos:start="244:51" pos:end="244:52">()</argument_list></call></expr>;</expr_stmt>
			<for pos:start="245:25" pos:end="262:25">for <control pos:start="245:29" pos:end="245:79">(<init pos:start="245:30" pos:end="245:39"><decl pos:start="245:30" pos:end="245:38"><type pos:start="245:30" pos:end="245:32"><name pos:start="245:30" pos:end="245:32">int</name></type> <name pos:start="245:34" pos:end="245:34">i</name> <init pos:start="245:36" pos:end="245:38">= <expr pos:start="245:38" pos:end="245:38"><literal type="number" pos:start="245:38" pos:end="245:38">0</literal></expr></init></decl>;</init> <condition pos:start="245:41" pos:end="245:73"><expr pos:start="245:41" pos:end="245:72"><name pos:start="245:41" pos:end="245:41">i</name> <operator pos:start="245:43" pos:end="245:43">&lt;</operator> <call pos:start="245:45" pos:end="245:65"><name pos:start="245:45" pos:end="245:63"><name pos:start="245:45" pos:end="245:48">side</name><operator pos:start="245:49" pos:end="245:49">.</operator><name pos:start="245:50" pos:end="245:63">getCoordinates</name></name><argument_list pos:start="245:64" pos:end="245:65">()</argument_list></call><operator pos:start="245:66" pos:end="245:66">.</operator><call pos:start="245:67" pos:end="245:72"><name pos:start="245:67" pos:end="245:70">size</name><argument_list pos:start="245:71" pos:end="245:72">()</argument_list></call></expr>;</condition> <incr pos:start="245:75" pos:end="245:78"><expr pos:start="245:75" pos:end="245:78"><name pos:start="245:75" pos:end="245:75">i</name> <operator pos:start="245:77" pos:end="245:78">++</operator></expr></incr>)</control> <block pos:start="245:81" pos:end="262:25">{<block_content pos:start="246:33" pos:end="261:33">
				<if_stmt pos:start="246:33" pos:end="261:33"><if pos:start="246:33" pos:end="258:33">if <condition pos:start="246:36" pos:end="246:140">(<expr pos:start="246:37" pos:end="246:139"><operator pos:start="246:37" pos:end="246:39">new</operator> <call pos:start="246:41" pos:end="246:102"><name pos:start="246:41" pos:end="246:53">LlaCoordinate</name><argument_list pos:start="246:54" pos:end="246:102">(<argument pos:start="246:55" pos:end="246:75"><expr pos:start="246:55" pos:end="246:75"><call pos:start="246:55" pos:end="246:66"><name pos:start="246:55" pos:end="246:64"><name pos:start="246:55" pos:end="246:55">p</name><operator pos:start="246:56" pos:end="246:56">.</operator><name pos:start="246:57" pos:end="246:64">getPoint</name></name><argument_list pos:start="246:65" pos:end="246:66">()</argument_list></call><operator pos:start="246:67" pos:end="246:67">.</operator><call pos:start="246:68" pos:end="246:75"><name pos:start="246:68" pos:end="246:73">getLat</name><argument_list pos:start="246:74" pos:end="246:75">()</argument_list></call></expr></argument>, <argument pos:start="246:78" pos:end="246:98"><expr pos:start="246:78" pos:end="246:98"><call pos:start="246:78" pos:end="246:89"><name pos:start="246:78" pos:end="246:87"><name pos:start="246:78" pos:end="246:78">p</name><operator pos:start="246:79" pos:end="246:79">.</operator><name pos:start="246:80" pos:end="246:87">getPoint</name></name><argument_list pos:start="246:88" pos:end="246:89">()</argument_list></call><operator pos:start="246:90" pos:end="246:90">.</operator><call pos:start="246:91" pos:end="246:98"><name pos:start="246:91" pos:end="246:96">getLon</name><argument_list pos:start="246:97" pos:end="246:98">()</argument_list></call></expr></argument>, <argument pos:start="246:101" pos:end="246:101"><expr pos:start="246:101" pos:end="246:101"><literal type="number" pos:start="246:101" pos:end="246:101">0</literal></expr></argument>)</argument_list></call><operator pos:start="246:103" pos:end="246:103">.</operator><call pos:start="246:104" pos:end="246:139"><name pos:start="246:104" pos:end="246:109">equals</name><argument_list pos:start="246:110" pos:end="246:139">(<argument pos:start="246:111" pos:end="246:138"><expr pos:start="246:111" pos:end="246:138"><call pos:start="246:111" pos:end="246:131"><name pos:start="246:111" pos:end="246:129"><name pos:start="246:111" pos:end="246:114">side</name><operator pos:start="246:115" pos:end="246:115">.</operator><name pos:start="246:116" pos:end="246:129">getCoordinates</name></name><argument_list pos:start="246:130" pos:end="246:131">()</argument_list></call><operator pos:start="246:132" pos:end="246:132">.</operator><call pos:start="246:133" pos:end="246:138"><name pos:start="246:133" pos:end="246:135">get</name><argument_list pos:start="246:136" pos:end="246:138">(<argument pos:start="246:137" pos:end="246:137"><expr pos:start="246:137" pos:end="246:137"><name pos:start="246:137" pos:end="246:137">i</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="246:142" pos:end="258:33">{<block_content pos:start="248:41" pos:end="257:41">
					<comment type="line" pos:start="247:41" pos:end="247:77">// remove lines from allPriorityLines</comment>
					<for pos:start="248:41" pos:end="257:41">for <control pos:start="248:45" pos:end="248:84">(<init pos:start="248:46" pos:end="248:83"><decl pos:start="248:46" pos:end="248:83"><type pos:start="248:46" pos:end="248:54"><name pos:start="248:46" pos:end="248:54">LPolyline</name></type> <name pos:start="248:56" pos:end="248:59">line</name> <range pos:start="248:61" pos:end="248:83">: <expr pos:start="248:63" pos:end="248:83"><call pos:start="248:63" pos:end="248:83"><name pos:start="248:63" pos:end="248:81">getAllPriorityLines</name><argument_list pos:start="248:82" pos:end="248:83">()</argument_list></call></expr></range></decl></init>)</control> <block pos:start="248:86" pos:end="257:41">{<block_content pos:start="249:49" pos:end="256:49">
						<if_stmt pos:start="249:49" pos:end="256:49"><if pos:start="249:49" pos:end="256:49">if <condition pos:start="249:52" pos:end="252:192">(<expr pos:start="249:53" pos:end="252:191"><operator pos:start="249:53" pos:end="249:53">(</operator><operator pos:start="249:54" pos:end="249:54">(</operator><name pos:start="249:55" pos:end="249:60">double</name><operator pos:start="249:61" pos:end="249:61">)</operator><call pos:start="249:62" pos:end="249:112"><name pos:start="249:62" pos:end="249:71"><name pos:start="249:62" pos:end="249:65">Math</name><operator pos:start="249:66" pos:end="249:66">.</operator><name pos:start="249:67" pos:end="249:71">round</name></name><argument_list pos:start="249:72" pos:end="249:112">(<argument pos:start="249:73" pos:end="249:111"><expr pos:start="249:73" pos:end="249:111"><call pos:start="249:73" pos:end="249:88"><name pos:start="249:73" pos:end="249:86"><name pos:start="249:73" pos:end="249:76">line</name><operator pos:start="249:77" pos:end="249:77">.</operator><name pos:start="249:78" pos:end="249:86">getPoints</name></name><argument_list pos:start="249:87" pos:end="249:88">()</argument_list></call><index pos:start="249:89" pos:end="249:91">[<expr pos:start="249:90" pos:end="249:90"><literal type="number" pos:start="249:90" pos:end="249:90">0</literal></expr>]</index><operator pos:start="249:92" pos:end="249:92">.</operator><call pos:start="249:93" pos:end="249:100"><name pos:start="249:93" pos:end="249:98">getLat</name><argument_list pos:start="249:99" pos:end="249:100">()</argument_list></call> <operator pos:start="249:102" pos:end="249:102">*</operator> <literal type="number" pos:start="249:104" pos:end="249:111">1000000d</literal></expr></argument>)</argument_list></call> <operator pos:start="249:114" pos:end="249:114">/</operator> <literal type="number" pos:start="249:116" pos:end="249:123">1000000d</literal> <operator pos:start="249:125" pos:end="249:126">==</operator> <operator pos:start="249:128" pos:end="249:128">(</operator><name pos:start="249:129" pos:end="249:134">double</name><operator pos:start="249:135" pos:end="249:135">)</operator><call pos:start="249:136" pos:end="249:179"><name pos:start="249:136" pos:end="249:145"><name pos:start="249:136" pos:end="249:139">Math</name><operator pos:start="249:140" pos:end="249:140">.</operator><name pos:start="249:141" pos:end="249:145">round</name></name><argument_list pos:start="249:146" pos:end="249:179">(<argument pos:start="249:147" pos:end="249:178"><expr pos:start="249:147" pos:end="249:178"><call pos:start="249:147" pos:end="249:158"><name pos:start="249:147" pos:end="249:156"><name pos:start="249:147" pos:end="249:147">p</name><operator pos:start="249:148" pos:end="249:148">.</operator><name pos:start="249:149" pos:end="249:156">getPoint</name></name><argument_list pos:start="249:157" pos:end="249:158">()</argument_list></call><operator pos:start="249:159" pos:end="249:159">.</operator><call pos:start="249:160" pos:end="249:167"><name pos:start="249:160" pos:end="249:165">getLat</name><argument_list pos:start="249:166" pos:end="249:167">()</argument_list></call> <operator pos:start="249:169" pos:end="249:169">*</operator> <literal type="number" pos:start="249:171" pos:end="249:178">1000000d</literal></expr></argument>)</argument_list></call> <operator pos:start="249:181" pos:end="249:181">/</operator> <literal type="number" pos:start="249:183" pos:end="249:190">1000000d</literal><operator pos:start="249:191" pos:end="249:191">)</operator>
						<operator pos:start="250:49" pos:end="250:50">&amp;&amp;</operator> <operator pos:start="250:52" pos:end="250:52">(</operator><operator pos:start="250:53" pos:end="250:53">(</operator><name pos:start="250:54" pos:end="250:59">double</name><operator pos:start="250:60" pos:end="250:60">)</operator><call pos:start="250:61" pos:end="250:111"><name pos:start="250:61" pos:end="250:70"><name pos:start="250:61" pos:end="250:64">Math</name><operator pos:start="250:65" pos:end="250:65">.</operator><name pos:start="250:66" pos:end="250:70">round</name></name><argument_list pos:start="250:71" pos:end="250:111">(<argument pos:start="250:72" pos:end="250:110"><expr pos:start="250:72" pos:end="250:110"><call pos:start="250:72" pos:end="250:87"><name pos:start="250:72" pos:end="250:85"><name pos:start="250:72" pos:end="250:75">line</name><operator pos:start="250:76" pos:end="250:76">.</operator><name pos:start="250:77" pos:end="250:85">getPoints</name></name><argument_list pos:start="250:86" pos:end="250:87">()</argument_list></call><index pos:start="250:88" pos:end="250:90">[<expr pos:start="250:89" pos:end="250:89"><literal type="number" pos:start="250:89" pos:end="250:89">0</literal></expr>]</index><operator pos:start="250:91" pos:end="250:91">.</operator><call pos:start="250:92" pos:end="250:99"><name pos:start="250:92" pos:end="250:97">getLon</name><argument_list pos:start="250:98" pos:end="250:99">()</argument_list></call> <operator pos:start="250:101" pos:end="250:101">*</operator> <literal type="number" pos:start="250:103" pos:end="250:110">1000000d</literal></expr></argument>)</argument_list></call> <operator pos:start="250:113" pos:end="250:113">/</operator> <literal type="number" pos:start="250:115" pos:end="250:122">1000000d</literal> <operator pos:start="250:124" pos:end="250:125">==</operator> <operator pos:start="250:127" pos:end="250:127">(</operator><name pos:start="250:128" pos:end="250:133">double</name><operator pos:start="250:134" pos:end="250:134">)</operator><call pos:start="250:135" pos:end="250:178"><name pos:start="250:135" pos:end="250:144"><name pos:start="250:135" pos:end="250:138">Math</name><operator pos:start="250:139" pos:end="250:139">.</operator><name pos:start="250:140" pos:end="250:144">round</name></name><argument_list pos:start="250:145" pos:end="250:178">(<argument pos:start="250:146" pos:end="250:177"><expr pos:start="250:146" pos:end="250:177"><call pos:start="250:146" pos:end="250:157"><name pos:start="250:146" pos:end="250:155"><name pos:start="250:146" pos:end="250:146">p</name><operator pos:start="250:147" pos:end="250:147">.</operator><name pos:start="250:148" pos:end="250:155">getPoint</name></name><argument_list pos:start="250:156" pos:end="250:157">()</argument_list></call><operator pos:start="250:158" pos:end="250:158">.</operator><call pos:start="250:159" pos:end="250:166"><name pos:start="250:159" pos:end="250:164">getLon</name><argument_list pos:start="250:165" pos:end="250:166">()</argument_list></call> <operator pos:start="250:168" pos:end="250:168">*</operator> <literal type="number" pos:start="250:170" pos:end="250:177">1000000d</literal></expr></argument>)</argument_list></call> <operator pos:start="250:180" pos:end="250:180">/</operator> <literal type="number" pos:start="250:182" pos:end="250:189">1000000d</literal><operator pos:start="250:190" pos:end="250:190">)</operator>
						<operator pos:start="251:49" pos:end="251:50">||</operator> <operator pos:start="251:52" pos:end="251:52">(</operator><operator pos:start="251:53" pos:end="251:53">(</operator><operator pos:start="251:54" pos:end="251:54">(</operator><name pos:start="251:55" pos:end="251:60">double</name><operator pos:start="251:61" pos:end="251:61">)</operator><call pos:start="251:62" pos:end="251:112"><name pos:start="251:62" pos:end="251:71"><name pos:start="251:62" pos:end="251:65">Math</name><operator pos:start="251:66" pos:end="251:66">.</operator><name pos:start="251:67" pos:end="251:71">round</name></name><argument_list pos:start="251:72" pos:end="251:112">(<argument pos:start="251:73" pos:end="251:111"><expr pos:start="251:73" pos:end="251:111"><call pos:start="251:73" pos:end="251:88"><name pos:start="251:73" pos:end="251:86"><name pos:start="251:73" pos:end="251:76">line</name><operator pos:start="251:77" pos:end="251:77">.</operator><name pos:start="251:78" pos:end="251:86">getPoints</name></name><argument_list pos:start="251:87" pos:end="251:88">()</argument_list></call><index pos:start="251:89" pos:end="251:91">[<expr pos:start="251:90" pos:end="251:90"><literal type="number" pos:start="251:90" pos:end="251:90">1</literal></expr>]</index><operator pos:start="251:92" pos:end="251:92">.</operator><call pos:start="251:93" pos:end="251:100"><name pos:start="251:93" pos:end="251:98">getLat</name><argument_list pos:start="251:99" pos:end="251:100">()</argument_list></call> <operator pos:start="251:102" pos:end="251:102">*</operator> <literal type="number" pos:start="251:104" pos:end="251:111">1000000d</literal></expr></argument>)</argument_list></call> <operator pos:start="251:114" pos:end="251:114">/</operator> <literal type="number" pos:start="251:116" pos:end="251:123">1000000d</literal> <operator pos:start="251:125" pos:end="251:126">==</operator> <operator pos:start="251:128" pos:end="251:128">(</operator><name pos:start="251:129" pos:end="251:134">double</name><operator pos:start="251:135" pos:end="251:135">)</operator><call pos:start="251:136" pos:end="251:179"><name pos:start="251:136" pos:end="251:145"><name pos:start="251:136" pos:end="251:139">Math</name><operator pos:start="251:140" pos:end="251:140">.</operator><name pos:start="251:141" pos:end="251:145">round</name></name><argument_list pos:start="251:146" pos:end="251:179">(<argument pos:start="251:147" pos:end="251:178"><expr pos:start="251:147" pos:end="251:178"><call pos:start="251:147" pos:end="251:158"><name pos:start="251:147" pos:end="251:156"><name pos:start="251:147" pos:end="251:147">p</name><operator pos:start="251:148" pos:end="251:148">.</operator><name pos:start="251:149" pos:end="251:156">getPoint</name></name><argument_list pos:start="251:157" pos:end="251:158">()</argument_list></call><operator pos:start="251:159" pos:end="251:159">.</operator><call pos:start="251:160" pos:end="251:167"><name pos:start="251:160" pos:end="251:165">getLat</name><argument_list pos:start="251:166" pos:end="251:167">()</argument_list></call> <operator pos:start="251:169" pos:end="251:169">*</operator> <literal type="number" pos:start="251:171" pos:end="251:178">1000000d</literal></expr></argument>)</argument_list></call> <operator pos:start="251:181" pos:end="251:181">/</operator> <literal type="number" pos:start="251:183" pos:end="251:190">1000000d</literal><operator pos:start="251:191" pos:end="251:191">)</operator>
						<operator pos:start="252:49" pos:end="252:50">&amp;&amp;</operator> <operator pos:start="252:52" pos:end="252:52">(</operator><operator pos:start="252:53" pos:end="252:53">(</operator><name pos:start="252:54" pos:end="252:59">double</name><operator pos:start="252:60" pos:end="252:60">)</operator><call pos:start="252:61" pos:end="252:111"><name pos:start="252:61" pos:end="252:70"><name pos:start="252:61" pos:end="252:64">Math</name><operator pos:start="252:65" pos:end="252:65">.</operator><name pos:start="252:66" pos:end="252:70">round</name></name><argument_list pos:start="252:71" pos:end="252:111">(<argument pos:start="252:72" pos:end="252:110"><expr pos:start="252:72" pos:end="252:110"><call pos:start="252:72" pos:end="252:87"><name pos:start="252:72" pos:end="252:85"><name pos:start="252:72" pos:end="252:75">line</name><operator pos:start="252:76" pos:end="252:76">.</operator><name pos:start="252:77" pos:end="252:85">getPoints</name></name><argument_list pos:start="252:86" pos:end="252:87">()</argument_list></call><index pos:start="252:88" pos:end="252:90">[<expr pos:start="252:89" pos:end="252:89"><literal type="number" pos:start="252:89" pos:end="252:89">1</literal></expr>]</index><operator pos:start="252:91" pos:end="252:91">.</operator><call pos:start="252:92" pos:end="252:99"><name pos:start="252:92" pos:end="252:97">getLon</name><argument_list pos:start="252:98" pos:end="252:99">()</argument_list></call> <operator pos:start="252:101" pos:end="252:101">*</operator> <literal type="number" pos:start="252:103" pos:end="252:110">1000000d</literal></expr></argument>)</argument_list></call> <operator pos:start="252:113" pos:end="252:113">/</operator> <literal type="number" pos:start="252:115" pos:end="252:122">1000000d</literal> <operator pos:start="252:124" pos:end="252:125">==</operator> <operator pos:start="252:127" pos:end="252:127">(</operator><name pos:start="252:128" pos:end="252:133">double</name><operator pos:start="252:134" pos:end="252:134">)</operator><call pos:start="252:135" pos:end="252:178"><name pos:start="252:135" pos:end="252:144"><name pos:start="252:135" pos:end="252:138">Math</name><operator pos:start="252:139" pos:end="252:139">.</operator><name pos:start="252:140" pos:end="252:144">round</name></name><argument_list pos:start="252:145" pos:end="252:178">(<argument pos:start="252:146" pos:end="252:177"><expr pos:start="252:146" pos:end="252:177"><call pos:start="252:146" pos:end="252:157"><name pos:start="252:146" pos:end="252:155"><name pos:start="252:146" pos:end="252:146">p</name><operator pos:start="252:147" pos:end="252:147">.</operator><name pos:start="252:148" pos:end="252:155">getPoint</name></name><argument_list pos:start="252:156" pos:end="252:157">()</argument_list></call><operator pos:start="252:158" pos:end="252:158">.</operator><call pos:start="252:159" pos:end="252:166"><name pos:start="252:159" pos:end="252:164">getLon</name><argument_list pos:start="252:165" pos:end="252:166">()</argument_list></call> <operator pos:start="252:168" pos:end="252:168">*</operator> <literal type="number" pos:start="252:170" pos:end="252:177">1000000d</literal></expr></argument>)</argument_list></call> <operator pos:start="252:180" pos:end="252:180">/</operator> <literal type="number" pos:start="252:182" pos:end="252:189">1000000d</literal><operator pos:start="252:190" pos:end="252:190">)</operator><operator pos:start="252:191" pos:end="252:191">)</operator></expr>)</condition>
						<block pos:start="253:49" pos:end="256:49">{<block_content pos:start="254:57" pos:end="255:86">
							<expr_stmt pos:start="254:57" pos:end="254:87"><expr pos:start="254:57" pos:end="254:86"><call pos:start="254:57" pos:end="254:86"><name pos:start="254:57" pos:end="254:80"><name pos:start="254:57" pos:end="254:76">removedPriorityLines</name><operator pos:start="254:77" pos:end="254:77">.</operator><name pos:start="254:78" pos:end="254:80">add</name></name><argument_list pos:start="254:81" pos:end="254:86">(<argument pos:start="254:82" pos:end="254:85"><expr pos:start="254:82" pos:end="254:85"><name pos:start="254:82" pos:end="254:85">line</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
							<expr_stmt pos:start="255:57" pos:end="255:86"><expr pos:start="255:57" pos:end="255:85"><call pos:start="255:57" pos:end="255:85"><name pos:start="255:57" pos:end="255:79"><name pos:start="255:57" pos:end="255:72">allPriorityLines</name><operator pos:start="255:73" pos:end="255:73">.</operator><name pos:start="255:74" pos:end="255:79">remove</name></name><argument_list pos:start="255:80" pos:end="255:85">(<argument pos:start="255:81" pos:end="255:84"><expr pos:start="255:81" pos:end="255:84"><name pos:start="255:81" pos:end="255:84">line</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
						</block_content>}</block></if></if_stmt>
					</block_content>}</block></for>
				</block_content>}</block></if>
				<else pos:start="259:33" pos:end="261:33">else <block pos:start="259:38" pos:end="261:33">{<block_content pos:start="260:41" pos:end="260:85">
					<expr_stmt pos:start="260:41" pos:end="260:85"><expr pos:start="260:41" pos:end="260:84"><call pos:start="260:41" pos:end="260:84"><name pos:start="260:41" pos:end="260:54"><name pos:start="260:41" pos:end="260:50">tempCoords</name><operator pos:start="260:51" pos:end="260:51">.</operator><name pos:start="260:52" pos:end="260:54">add</name></name><argument_list pos:start="260:55" pos:end="260:84">(<argument pos:start="260:56" pos:end="260:83"><expr pos:start="260:56" pos:end="260:83"><call pos:start="260:56" pos:end="260:76"><name pos:start="260:56" pos:end="260:74"><name pos:start="260:56" pos:end="260:59">side</name><operator pos:start="260:60" pos:end="260:60">.</operator><name pos:start="260:61" pos:end="260:74">getCoordinates</name></name><argument_list pos:start="260:75" pos:end="260:76">()</argument_list></call><operator pos:start="260:77" pos:end="260:77">.</operator><call pos:start="260:78" pos:end="260:83"><name pos:start="260:78" pos:end="260:80">get</name><argument_list pos:start="260:81" pos:end="260:83">(<argument pos:start="260:82" pos:end="260:82"><expr pos:start="260:82" pos:end="260:82"><name pos:start="260:82" pos:end="260:82">i</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:start="260:87" pos:end="260:158">// if the deleted pin isn't in allPrioritySides, add it to the temp list</comment>
				</block_content>}</block></else></if_stmt>
			</block_content>}</block></for>
			<expr_stmt pos:start="263:25" pos:end="263:56"><expr pos:start="263:25" pos:end="263:55"><call pos:start="263:25" pos:end="263:55"><name pos:start="263:25" pos:end="263:43"><name pos:start="263:25" pos:end="263:28">side</name><operator pos:start="263:29" pos:end="263:29">.</operator><name pos:start="263:30" pos:end="263:43">setCoordinates</name></name><argument_list pos:start="263:44" pos:end="263:55">(<argument pos:start="263:45" pos:end="263:54"><expr pos:start="263:45" pos:end="263:54"><name pos:start="263:45" pos:end="263:54">tempCoords</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		</block_content>}</block></for>
		<expr_stmt pos:start="265:17" pos:end="265:50"><expr pos:start="265:17" pos:end="265:49"><call pos:start="265:17" pos:end="265:49"><name pos:start="265:17" pos:end="265:47"><name pos:start="265:17" pos:end="265:28">mapComponent</name><operator pos:start="265:29" pos:end="265:29">.</operator><name pos:start="265:30" pos:end="265:47">updateLinesAndGrid</name></name><argument_list pos:start="265:48" pos:end="265:49">()</argument_list></call></expr>;</expr_stmt>
	</block_content>}</block></function>
	
	<comment type="line" pos:start="268:9" pos:end="268:46">//removes all of the pins from the map</comment>
	<function pos:start="269:9" pos:end="275:9"><type pos:start="269:9" pos:end="269:19"><specifier pos:start="269:9" pos:end="269:14">public</specifier> <name pos:start="269:16" pos:end="269:19">void</name></type> <name pos:start="269:21" pos:end="269:33">removeAllPins</name><parameter_list pos:start="269:34" pos:end="269:35">()</parameter_list> <block pos:start="269:37" pos:end="275:9">{<block_content pos:start="270:17" pos:end="274:17">
		<expr_stmt pos:start="270:17" pos:end="270:41"><expr pos:start="270:17" pos:end="270:40"><call pos:start="270:17" pos:end="270:40"><name pos:start="270:17" pos:end="270:38"><name pos:start="270:17" pos:end="270:32">allSideWaypoints</name><operator pos:start="270:33" pos:end="270:33">.</operator><name pos:start="270:34" pos:end="270:38">clear</name></name><argument_list pos:start="270:39" pos:end="270:40">()</argument_list></call></expr>;</expr_stmt>
		<decl_stmt pos:start="271:17" pos:end="271:47"><decl pos:start="271:17" pos:end="271:46"><type pos:start="271:17" pos:end="271:29"><name pos:start="271:17" pos:end="271:29"><name pos:start="271:17" pos:end="271:20">List</name><argument_list type="generic" pos:start="271:21" pos:end="271:29">&lt;<argument pos:start="271:22" pos:end="271:28"><name pos:start="271:22" pos:end="271:28">LMarker</name></argument>&gt;</argument_list></name></type> <name pos:start="271:31" pos:end="271:34">pins</name> <init pos:start="271:36" pos:end="271:46">= <expr pos:start="271:38" pos:end="271:46"><call pos:start="271:38" pos:end="271:46"><name pos:start="271:38" pos:end="271:44">getPins</name><argument_list pos:start="271:45" pos:end="271:46">()</argument_list></call></expr></init></decl>;</decl_stmt>
		<for pos:start="272:17" pos:end="274:17">for <control pos:start="272:21" pos:end="272:58">(<init pos:start="272:22" pos:end="272:45"><decl pos:start="272:22" pos:end="272:44"><type pos:start="272:22" pos:end="272:24"><name pos:start="272:22" pos:end="272:24">int</name></type> <name pos:start="272:26" pos:end="272:26">i</name> <init pos:start="272:28" pos:end="272:44">= <expr pos:start="272:30" pos:end="272:44"><call pos:start="272:30" pos:end="272:40"><name pos:start="272:30" pos:end="272:38"><name pos:start="272:30" pos:end="272:33">pins</name><operator pos:start="272:34" pos:end="272:34">.</operator><name pos:start="272:35" pos:end="272:38">size</name></name><argument_list pos:start="272:39" pos:end="272:40">()</argument_list></call> <operator pos:start="272:42" pos:end="272:42">-</operator> <literal type="number" pos:start="272:44" pos:end="272:44">1</literal></expr></init></decl>;</init> <condition pos:start="272:47" pos:end="272:53"><expr pos:start="272:47" pos:end="272:52"><name pos:start="272:47" pos:end="272:47">i</name> <operator pos:start="272:49" pos:end="272:50">&gt;=</operator> <literal type="number" pos:start="272:52" pos:end="272:52">0</literal></expr>;</condition> <incr pos:start="272:55" pos:end="272:57"><expr pos:start="272:55" pos:end="272:57"><name pos:start="272:55" pos:end="272:55">i</name><operator pos:start="272:56" pos:end="272:57">--</operator></expr></incr>)</control> <block pos:start="272:60" pos:end="274:17">{<block_content pos:start="273:25" pos:end="273:57">
			<expr_stmt pos:start="273:25" pos:end="273:57"><expr pos:start="273:25" pos:end="273:56"><call pos:start="273:25" pos:end="273:56"><name pos:start="273:25" pos:end="273:43"><name pos:start="273:25" pos:end="273:27">map</name><operator pos:start="273:28" pos:end="273:28">.</operator><name pos:start="273:29" pos:end="273:43">removeComponent</name></name><argument_list pos:start="273:44" pos:end="273:56">(<argument pos:start="273:45" pos:end="273:55"><expr pos:start="273:45" pos:end="273:55"><call pos:start="273:45" pos:end="273:55"><name pos:start="273:45" pos:end="273:52"><name pos:start="273:45" pos:end="273:48">pins</name><operator pos:start="273:49" pos:end="273:49">.</operator><name pos:start="273:50" pos:end="273:52">get</name></name><argument_list pos:start="273:53" pos:end="273:55">(<argument pos:start="273:54" pos:end="273:54"><expr pos:start="273:54" pos:end="273:54"><name pos:start="273:54" pos:end="273:54">i</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		</block_content>}</block></for>
	</block_content>}</block></function>
	
	<comment type="block" format="javadoc" pos:start="277:9" pos:end="285:11">/**
	 * 
	 * @param wayPoints
	 * @param fromActive
	 * 			should be true if drawLines is being called from the active flights UI. This
	 * 			determines if the first line segment should be green (which it shouldn't
	 * 			be in the flight routes UI). 
	 * @return list of polylines drawn on the map
	 */</comment>
	<function pos:start="286:9" pos:end="391:9"><type pos:start="286:9" pos:end="286:38"><specifier pos:start="286:9" pos:end="286:14">public</specifier> <name pos:start="286:16" pos:end="286:38"><name pos:start="286:16" pos:end="286:21">Vector</name><argument_list type="generic" pos:start="286:22" pos:end="286:38">&lt;<argument pos:start="286:23" pos:end="286:37"><name pos:start="286:23" pos:end="286:37"><name pos:start="286:23" pos:end="286:26">List</name><argument_list type="generic" pos:start="286:27" pos:end="286:37">&lt;<argument pos:start="286:28" pos:end="286:36"><name pos:start="286:28" pos:end="286:36">LPolyline</name></argument>&gt;</argument_list></name></argument>&gt;</argument_list></name></type> <name pos:start="286:40" pos:end="286:60">drawLinesForWayPoints</name><parameter_list pos:start="286:61" pos:end="286:117">(<parameter pos:start="286:62" pos:end="286:96"><decl pos:start="286:62" pos:end="286:96"><type pos:start="286:62" pos:end="286:96"><name pos:start="286:62" pos:end="286:86"><name pos:start="286:62" pos:end="286:67">Vector</name><argument_list type="generic" pos:start="286:68" pos:end="286:86">&lt;<argument pos:start="286:69" pos:end="286:85"><name pos:start="286:69" pos:end="286:85"><name pos:start="286:69" pos:end="286:72">List</name><argument_list type="generic" pos:start="286:73" pos:end="286:85">&lt;<argument pos:start="286:74" pos:end="286:84"><name pos:start="286:74" pos:end="286:84">UIEdgePoint</name></argument>&gt;</argument_list></name></argument>&gt;</argument_list></name></type> <name pos:start="286:88" pos:end="286:96">wayPoints</name></decl></parameter>, <parameter pos:start="286:99" pos:end="286:116"><decl pos:start="286:99" pos:end="286:116"><type pos:start="286:99" pos:end="286:116"><name pos:start="286:99" pos:end="286:105">boolean</name></type> <name pos:start="286:107" pos:end="286:116">fromActive</name></decl></parameter>)</parameter_list> <block pos:start="286:119" pos:end="391:9">{<block_content pos:start="288:17" pos:end="390:33">
		<comment type="line" pos:start="287:17" pos:end="287:118">// Draws polylines based on a list of waypoints, then outputs the newly formed arraylist of polylines.</comment>
		<expr_stmt pos:start="288:17" pos:end="288:34"><expr pos:start="288:17" pos:end="288:33"><name pos:start="288:17" pos:end="288:21">sides</name> <operator pos:start="288:23" pos:end="288:23">=</operator> <name pos:start="288:25" pos:end="288:33">wayPoints</name></expr>;</expr_stmt>
		<decl_stmt pos:start="289:17" pos:end="289:67"><decl pos:start="289:17" pos:end="289:66"><type pos:start="289:17" pos:end="289:39"><name pos:start="289:17" pos:end="289:39"><name pos:start="289:17" pos:end="289:22">Vector</name><argument_list type="generic" pos:start="289:23" pos:end="289:39">&lt;<argument pos:start="289:24" pos:end="289:38"><name pos:start="289:24" pos:end="289:38"><name pos:start="289:24" pos:end="289:27">List</name><argument_list type="generic" pos:start="289:28" pos:end="289:38">&lt;<argument pos:start="289:29" pos:end="289:37"><name pos:start="289:29" pos:end="289:37">LPolyline</name></argument>&gt;</argument_list></name></argument>&gt;</argument_list></name></type> <name pos:start="289:41" pos:end="289:49">polylines</name> <init pos:start="289:51" pos:end="289:66">= <expr pos:start="289:53" pos:end="289:66"><operator pos:start="289:53" pos:end="289:55">new</operator> <call pos:start="289:57" pos:end="289:66"><name pos:start="289:57" pos:end="289:64"><name pos:start="289:57" pos:end="289:62">Vector</name><argument_list type="generic" pos:start="289:63" pos:end="289:64">&lt;&gt;</argument_list></name><argument_list pos:start="289:65" pos:end="289:66">()</argument_list></call></expr></init></decl>;</decl_stmt>
		
		
		<for pos:start="292:17" pos:end="388:17">for <control pos:start="292:21" pos:end="292:44">(<init pos:start="292:22" pos:end="292:31"><decl pos:start="292:22" pos:end="292:30"><type pos:start="292:22" pos:end="292:24"><name pos:start="292:22" pos:end="292:24">int</name></type> <name pos:start="292:26" pos:end="292:26">j</name> <init pos:start="292:28" pos:end="292:30">= <expr pos:start="292:30" pos:end="292:30"><literal type="number" pos:start="292:30" pos:end="292:30">0</literal></expr></init></decl>;</init> <condition pos:start="292:33" pos:end="292:39"><expr pos:start="292:33" pos:end="292:38"><name pos:start="292:33" pos:end="292:33">j</name> <operator pos:start="292:35" pos:end="292:36">&lt;=</operator> <literal type="number" pos:start="292:38" pos:end="292:38">1</literal></expr>;</condition> <incr pos:start="292:41" pos:end="292:43"><expr pos:start="292:41" pos:end="292:43"><name pos:start="292:41" pos:end="292:41">j</name><operator pos:start="292:42" pos:end="292:43">++</operator></expr></incr>)</control> <block pos:start="292:46" pos:end="388:17">{<block_content pos:start="293:25" pos:end="387:25">
			<expr_stmt pos:start="293:25" pos:end="293:60"><expr pos:start="293:25" pos:end="293:59"><call pos:start="293:25" pos:end="293:59"><name pos:start="293:25" pos:end="293:37"><name pos:start="293:25" pos:end="293:33">polylines</name><operator pos:start="293:34" pos:end="293:34">.</operator><name pos:start="293:35" pos:end="293:37">add</name></name><argument_list pos:start="293:38" pos:end="293:59">(<argument pos:start="293:39" pos:end="293:39"><expr pos:start="293:39" pos:end="293:39"><name pos:start="293:39" pos:end="293:39">j</name></expr></argument>, <argument pos:start="293:42" pos:end="293:58"><expr pos:start="293:42" pos:end="293:58"><operator pos:start="293:42" pos:end="293:44">new</operator> <call pos:start="293:46" pos:end="293:58"><name pos:start="293:46" pos:end="293:56"><name pos:start="293:46" pos:end="293:54">ArrayList</name><argument_list type="generic" pos:start="293:55" pos:end="293:56">&lt;&gt;</argument_list></name><argument_list pos:start="293:57" pos:end="293:58">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<for pos:start="294:25" pos:end="387:25">for <control pos:start="294:29" pos:end="294:77">(<init pos:start="294:30" pos:end="294:39"><decl pos:start="294:30" pos:end="294:38"><type pos:start="294:30" pos:end="294:32"><name pos:start="294:30" pos:end="294:32">int</name></type> <name pos:start="294:34" pos:end="294:34">i</name> <init pos:start="294:36" pos:end="294:38">= <expr pos:start="294:38" pos:end="294:38"><literal type="number" pos:start="294:38" pos:end="294:38">0</literal></expr></init></decl>;</init> <condition pos:start="294:41" pos:end="294:72"><expr pos:start="294:41" pos:end="294:71"><name pos:start="294:41" pos:end="294:41">i</name> <operator pos:start="294:43" pos:end="294:43">&lt;</operator> <call pos:start="294:45" pos:end="294:60"><name pos:start="294:45" pos:end="294:57"><name pos:start="294:45" pos:end="294:53">wayPoints</name><operator pos:start="294:54" pos:end="294:54">.</operator><name pos:start="294:55" pos:end="294:57">get</name></name><argument_list pos:start="294:58" pos:end="294:60">(<argument pos:start="294:59" pos:end="294:59"><expr pos:start="294:59" pos:end="294:59"><name pos:start="294:59" pos:end="294:59">j</name></expr></argument>)</argument_list></call><operator pos:start="294:61" pos:end="294:61">.</operator><call pos:start="294:62" pos:end="294:67"><name pos:start="294:62" pos:end="294:65">size</name><argument_list pos:start="294:66" pos:end="294:67">()</argument_list></call> <operator pos:start="294:69" pos:end="294:69">-</operator> <literal type="number" pos:start="294:71" pos:end="294:71">1</literal></expr>;</condition> <incr pos:start="294:74" pos:end="294:76"><expr pos:start="294:74" pos:end="294:76"><name pos:start="294:74" pos:end="294:74">i</name><operator pos:start="294:75" pos:end="294:76">++</operator></expr></incr>)</control> <block pos:start="294:79" pos:end="387:25">{<block_content pos:start="295:33" pos:end="386:63">
				<decl_stmt pos:start="295:33" pos:end="295:78"><decl pos:start="295:33" pos:end="295:77"><type pos:start="295:33" pos:end="295:43"><name pos:start="295:33" pos:end="295:43">UIEdgePoint</name></type> <name pos:start="295:45" pos:end="295:51">current</name> <init pos:start="295:53" pos:end="295:77">= <expr pos:start="295:55" pos:end="295:77"><call pos:start="295:55" pos:end="295:70"><name pos:start="295:55" pos:end="295:67"><name pos:start="295:55" pos:end="295:63">wayPoints</name><operator pos:start="295:64" pos:end="295:64">.</operator><name pos:start="295:65" pos:end="295:67">get</name></name><argument_list pos:start="295:68" pos:end="295:70">(<argument pos:start="295:69" pos:end="295:69"><expr pos:start="295:69" pos:end="295:69"><name pos:start="295:69" pos:end="295:69">j</name></expr></argument>)</argument_list></call><operator pos:start="295:71" pos:end="295:71">.</operator><call pos:start="295:72" pos:end="295:77"><name pos:start="295:72" pos:end="295:74">get</name><argument_list pos:start="295:75" pos:end="295:77">(<argument pos:start="295:76" pos:end="295:76"><expr pos:start="295:76" pos:end="295:76"><name pos:start="295:76" pos:end="295:76">i</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
				<decl_stmt pos:start="296:33" pos:end="296:125"><decl pos:start="296:33" pos:end="296:124"><type pos:start="296:33" pos:end="296:41"><name pos:start="296:33" pos:end="296:41">LPolyline</name></type> <name pos:start="296:43" pos:end="296:50">polyline</name> <init pos:start="296:52" pos:end="296:124">= <expr pos:start="296:54" pos:end="296:124"><operator pos:start="296:54" pos:end="296:56">new</operator> <call pos:start="296:58" pos:end="296:124"><name pos:start="296:58" pos:end="296:66">LPolyline</name><argument_list pos:start="296:67" pos:end="296:124">(<argument pos:start="296:68" pos:end="296:84"><expr pos:start="296:68" pos:end="296:84"><call pos:start="296:68" pos:end="296:84"><name pos:start="296:68" pos:end="296:82"><name pos:start="296:68" pos:end="296:74">current</name><operator pos:start="296:75" pos:end="296:75">.</operator><name pos:start="296:76" pos:end="296:82">toPoint</name></name><argument_list pos:start="296:83" pos:end="296:84">()</argument_list></call></expr></argument>, <argument pos:start="296:87" pos:end="296:123"><expr pos:start="296:87" pos:end="296:123"><call pos:start="296:87" pos:end="296:102"><name pos:start="296:87" pos:end="296:99"><name pos:start="296:87" pos:end="296:95">wayPoints</name><operator pos:start="296:96" pos:end="296:96">.</operator><name pos:start="296:97" pos:end="296:99">get</name></name><argument_list pos:start="296:100" pos:end="296:102">(<argument pos:start="296:101" pos:end="296:101"><expr pos:start="296:101" pos:end="296:101"><name pos:start="296:101" pos:end="296:101">j</name></expr></argument>)</argument_list></call><operator pos:start="296:103" pos:end="296:103">.</operator><call pos:start="296:104" pos:end="296:113"><name pos:start="296:104" pos:end="296:106">get</name><argument_list pos:start="296:107" pos:end="296:113">(<argument pos:start="296:108" pos:end="296:112"><expr pos:start="296:108" pos:end="296:112"><name pos:start="296:108" pos:end="296:108">i</name> <operator pos:start="296:110" pos:end="296:110">+</operator> <literal type="number" pos:start="296:112" pos:end="296:112">1</literal></expr></argument>)</argument_list></call><operator pos:start="296:114" pos:end="296:114">.</operator><call pos:start="296:115" pos:end="296:123"><name pos:start="296:115" pos:end="296:121">toPoint</name><argument_list pos:start="296:122" pos:end="296:123">()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
				<expr_stmt pos:start="297:33" pos:end="297:77"><expr pos:start="297:33" pos:end="297:76"><call pos:start="297:33" pos:end="297:76"><name pos:start="297:33" pos:end="297:46"><name pos:start="297:33" pos:end="297:40">polyline</name><operator pos:start="297:41" pos:end="297:41">.</operator><name pos:start="297:42" pos:end="297:46">setId</name></name><argument_list pos:start="297:47" pos:end="297:76">(<argument pos:start="297:48" pos:end="297:75"><expr pos:start="297:48" pos:end="297:75"><call pos:start="297:48" pos:end="297:64"><name pos:start="297:48" pos:end="297:62"><name pos:start="297:48" pos:end="297:51">UUID</name><operator pos:start="297:52" pos:end="297:52">.</operator><name pos:start="297:53" pos:end="297:62">randomUUID</name></name><argument_list pos:start="297:63" pos:end="297:64">()</argument_list></call><operator pos:start="297:65" pos:end="297:65">.</operator><call pos:start="297:66" pos:end="297:75"><name pos:start="297:66" pos:end="297:73">toString</name><argument_list pos:start="297:74" pos:end="297:75">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				
				<comment type="line" pos:start="299:33" pos:end="299:111">// if priority lines were recently deleted, update allPriorityLines accordingly</comment>
				<if_stmt pos:start="300:33" pos:end="320:33"><if pos:start="300:33" pos:end="320:33">if <condition pos:start="300:36" pos:end="300:69">(<expr pos:start="300:37" pos:end="300:68"><call pos:start="300:37" pos:end="300:63"><name pos:start="300:37" pos:end="300:61"><name pos:start="300:37" pos:end="300:56">removedPriorityLines</name><operator pos:start="300:57" pos:end="300:57">.</operator><name pos:start="300:58" pos:end="300:61">size</name></name><argument_list pos:start="300:62" pos:end="300:63">()</argument_list></call> <operator pos:start="300:65" pos:end="300:66">==</operator> <literal type="number" pos:start="300:68" pos:end="300:68">2</literal></expr>)</condition> <block pos:start="300:71" pos:end="320:33">{<block_content pos:start="301:41" pos:end="319:41">
					<if_stmt pos:start="301:41" pos:end="319:41"><if pos:start="301:41" pos:end="319:41">if <condition pos:start="301:44" pos:end="316:218">(<expr pos:start="301:45" pos:end="316:217"><operator pos:start="301:45" pos:end="301:45">(</operator><operator pos:start="301:46" pos:end="301:46">(</operator><operator pos:start="301:47" pos:end="301:47">(</operator><name pos:start="301:48" pos:end="301:53">double</name><operator pos:start="301:54" pos:end="301:54">)</operator><call pos:start="301:55" pos:end="301:109"><name pos:start="301:55" pos:end="301:64"><name pos:start="301:55" pos:end="301:58">Math</name><operator pos:start="301:59" pos:end="301:59">.</operator><name pos:start="301:60" pos:end="301:64">round</name></name><argument_list pos:start="301:65" pos:end="301:109">(<argument pos:start="301:66" pos:end="301:108"><expr pos:start="301:66" pos:end="301:108"><call pos:start="301:66" pos:end="301:85"><name pos:start="301:66" pos:end="301:83"><name pos:start="301:66" pos:end="301:73">polyline</name><operator pos:start="301:74" pos:end="301:74">.</operator><name pos:start="301:75" pos:end="301:83">getPoints</name></name><argument_list pos:start="301:84" pos:end="301:85">()</argument_list></call><index pos:start="301:86" pos:end="301:88">[<expr pos:start="301:87" pos:end="301:87"><literal type="number" pos:start="301:87" pos:end="301:87">0</literal></expr>]</index><operator pos:start="301:89" pos:end="301:89">.</operator><call pos:start="301:90" pos:end="301:97"><name pos:start="301:90" pos:end="301:95">getLat</name><argument_list pos:start="301:96" pos:end="301:97">()</argument_list></call> <operator pos:start="301:99" pos:end="301:99">*</operator> <literal type="number" pos:start="301:101" pos:end="301:108">1000000d</literal></expr></argument>)</argument_list></call> <operator pos:start="301:111" pos:end="301:111">/</operator> <literal type="number" pos:start="301:113" pos:end="301:120">1000000d</literal> <operator pos:start="301:122" pos:end="301:123">==</operator> <operator pos:start="301:125" pos:end="301:125">(</operator><name pos:start="301:126" pos:end="301:131">double</name><operator pos:start="301:132" pos:end="301:132">)</operator><call pos:start="301:133" pos:end="301:206"><name pos:start="301:133" pos:end="301:142"><name pos:start="301:133" pos:end="301:136">Math</name><operator pos:start="301:137" pos:end="301:137">.</operator><name pos:start="301:138" pos:end="301:142">round</name></name><argument_list pos:start="301:143" pos:end="301:206">(<argument pos:start="301:144" pos:end="301:205"><expr pos:start="301:144" pos:end="301:205"><call pos:start="301:144" pos:end="301:170"><name pos:start="301:144" pos:end="301:167"><name pos:start="301:144" pos:end="301:163">removedPriorityLines</name><operator pos:start="301:164" pos:end="301:164">.</operator><name pos:start="301:165" pos:end="301:167">get</name></name><argument_list pos:start="301:168" pos:end="301:170">(<argument pos:start="301:169" pos:end="301:169"><expr pos:start="301:169" pos:end="301:169"><literal type="number" pos:start="301:169" pos:end="301:169">0</literal></expr></argument>)</argument_list></call><operator pos:start="301:171" pos:end="301:171">.</operator><call pos:start="301:172" pos:end="301:182"><name pos:start="301:172" pos:end="301:180">getPoints</name><argument_list pos:start="301:181" pos:end="301:182">()</argument_list></call><index pos:start="301:183" pos:end="301:185">[<expr pos:start="301:184" pos:end="301:184"><literal type="number" pos:start="301:184" pos:end="301:184">0</literal></expr>]</index><operator pos:start="301:186" pos:end="301:186">.</operator><call pos:start="301:187" pos:end="301:194"><name pos:start="301:187" pos:end="301:192">getLat</name><argument_list pos:start="301:193" pos:end="301:194">()</argument_list></call> <operator pos:start="301:196" pos:end="301:196">*</operator> <literal type="number" pos:start="301:198" pos:end="301:205">1000000d</literal></expr></argument>)</argument_list></call> <operator pos:start="301:208" pos:end="301:208">/</operator> <literal type="number" pos:start="301:210" pos:end="301:217">1000000d</literal><operator pos:start="301:218" pos:end="301:218">)</operator>
					<operator pos:start="302:41" pos:end="302:42">&amp;&amp;</operator> <operator pos:start="302:44" pos:end="302:44">(</operator><operator pos:start="302:45" pos:end="302:45">(</operator><name pos:start="302:46" pos:end="302:51">double</name><operator pos:start="302:52" pos:end="302:52">)</operator><call pos:start="302:53" pos:end="302:107"><name pos:start="302:53" pos:end="302:62"><name pos:start="302:53" pos:end="302:56">Math</name><operator pos:start="302:57" pos:end="302:57">.</operator><name pos:start="302:58" pos:end="302:62">round</name></name><argument_list pos:start="302:63" pos:end="302:107">(<argument pos:start="302:64" pos:end="302:106"><expr pos:start="302:64" pos:end="302:106"><call pos:start="302:64" pos:end="302:83"><name pos:start="302:64" pos:end="302:81"><name pos:start="302:64" pos:end="302:71">polyline</name><operator pos:start="302:72" pos:end="302:72">.</operator><name pos:start="302:73" pos:end="302:81">getPoints</name></name><argument_list pos:start="302:82" pos:end="302:83">()</argument_list></call><index pos:start="302:84" pos:end="302:86">[<expr pos:start="302:85" pos:end="302:85"><literal type="number" pos:start="302:85" pos:end="302:85">0</literal></expr>]</index><operator pos:start="302:87" pos:end="302:87">.</operator><call pos:start="302:88" pos:end="302:95"><name pos:start="302:88" pos:end="302:93">getLon</name><argument_list pos:start="302:94" pos:end="302:95">()</argument_list></call> <operator pos:start="302:97" pos:end="302:97">*</operator> <literal type="number" pos:start="302:99" pos:end="302:106">1000000d</literal></expr></argument>)</argument_list></call> <operator pos:start="302:109" pos:end="302:109">/</operator> <literal type="number" pos:start="302:111" pos:end="302:118">1000000d</literal> <operator pos:start="302:120" pos:end="302:121">==</operator> <operator pos:start="302:123" pos:end="302:123">(</operator><name pos:start="302:124" pos:end="302:129">double</name><operator pos:start="302:130" pos:end="302:130">)</operator><call pos:start="302:131" pos:end="302:204"><name pos:start="302:131" pos:end="302:140"><name pos:start="302:131" pos:end="302:134">Math</name><operator pos:start="302:135" pos:end="302:135">.</operator><name pos:start="302:136" pos:end="302:140">round</name></name><argument_list pos:start="302:141" pos:end="302:204">(<argument pos:start="302:142" pos:end="302:203"><expr pos:start="302:142" pos:end="302:203"><call pos:start="302:142" pos:end="302:168"><name pos:start="302:142" pos:end="302:165"><name pos:start="302:142" pos:end="302:161">removedPriorityLines</name><operator pos:start="302:162" pos:end="302:162">.</operator><name pos:start="302:163" pos:end="302:165">get</name></name><argument_list pos:start="302:166" pos:end="302:168">(<argument pos:start="302:167" pos:end="302:167"><expr pos:start="302:167" pos:end="302:167"><literal type="number" pos:start="302:167" pos:end="302:167">0</literal></expr></argument>)</argument_list></call><operator pos:start="302:169" pos:end="302:169">.</operator><call pos:start="302:170" pos:end="302:180"><name pos:start="302:170" pos:end="302:178">getPoints</name><argument_list pos:start="302:179" pos:end="302:180">()</argument_list></call><index pos:start="302:181" pos:end="302:183">[<expr pos:start="302:182" pos:end="302:182"><literal type="number" pos:start="302:182" pos:end="302:182">0</literal></expr>]</index><operator pos:start="302:184" pos:end="302:184">.</operator><call pos:start="302:185" pos:end="302:192"><name pos:start="302:185" pos:end="302:190">getLon</name><argument_list pos:start="302:191" pos:end="302:192">()</argument_list></call> <operator pos:start="302:194" pos:end="302:194">*</operator> <literal type="number" pos:start="302:196" pos:end="302:203">1000000d</literal></expr></argument>)</argument_list></call> <operator pos:start="302:206" pos:end="302:206">/</operator> <literal type="number" pos:start="302:208" pos:end="302:215">1000000d</literal><operator pos:start="302:216" pos:end="302:216">)</operator>
					<operator pos:start="303:41" pos:end="303:42">&amp;&amp;</operator> <operator pos:start="303:44" pos:end="303:44">(</operator><operator pos:start="303:45" pos:end="303:45">(</operator><name pos:start="303:46" pos:end="303:51">double</name><operator pos:start="303:52" pos:end="303:52">)</operator><call pos:start="303:53" pos:end="303:107"><name pos:start="303:53" pos:end="303:62"><name pos:start="303:53" pos:end="303:56">Math</name><operator pos:start="303:57" pos:end="303:57">.</operator><name pos:start="303:58" pos:end="303:62">round</name></name><argument_list pos:start="303:63" pos:end="303:107">(<argument pos:start="303:64" pos:end="303:106"><expr pos:start="303:64" pos:end="303:106"><call pos:start="303:64" pos:end="303:83"><name pos:start="303:64" pos:end="303:81"><name pos:start="303:64" pos:end="303:71">polyline</name><operator pos:start="303:72" pos:end="303:72">.</operator><name pos:start="303:73" pos:end="303:81">getPoints</name></name><argument_list pos:start="303:82" pos:end="303:83">()</argument_list></call><index pos:start="303:84" pos:end="303:86">[<expr pos:start="303:85" pos:end="303:85"><literal type="number" pos:start="303:85" pos:end="303:85">1</literal></expr>]</index><operator pos:start="303:87" pos:end="303:87">.</operator><call pos:start="303:88" pos:end="303:95"><name pos:start="303:88" pos:end="303:93">getLat</name><argument_list pos:start="303:94" pos:end="303:95">()</argument_list></call> <operator pos:start="303:97" pos:end="303:97">*</operator> <literal type="number" pos:start="303:99" pos:end="303:106">1000000d</literal></expr></argument>)</argument_list></call> <operator pos:start="303:109" pos:end="303:109">/</operator> <literal type="number" pos:start="303:111" pos:end="303:118">1000000d</literal> <operator pos:start="303:120" pos:end="303:121">==</operator> <operator pos:start="303:123" pos:end="303:123">(</operator><name pos:start="303:124" pos:end="303:129">double</name><operator pos:start="303:130" pos:end="303:130">)</operator><call pos:start="303:131" pos:end="303:204"><name pos:start="303:131" pos:end="303:140"><name pos:start="303:131" pos:end="303:134">Math</name><operator pos:start="303:135" pos:end="303:135">.</operator><name pos:start="303:136" pos:end="303:140">round</name></name><argument_list pos:start="303:141" pos:end="303:204">(<argument pos:start="303:142" pos:end="303:203"><expr pos:start="303:142" pos:end="303:203"><call pos:start="303:142" pos:end="303:168"><name pos:start="303:142" pos:end="303:165"><name pos:start="303:142" pos:end="303:161">removedPriorityLines</name><operator pos:start="303:162" pos:end="303:162">.</operator><name pos:start="303:163" pos:end="303:165">get</name></name><argument_list pos:start="303:166" pos:end="303:168">(<argument pos:start="303:167" pos:end="303:167"><expr pos:start="303:167" pos:end="303:167"><literal type="number" pos:start="303:167" pos:end="303:167">1</literal></expr></argument>)</argument_list></call><operator pos:start="303:169" pos:end="303:169">.</operator><call pos:start="303:170" pos:end="303:180"><name pos:start="303:170" pos:end="303:178">getPoints</name><argument_list pos:start="303:179" pos:end="303:180">()</argument_list></call><index pos:start="303:181" pos:end="303:183">[<expr pos:start="303:182" pos:end="303:182"><literal type="number" pos:start="303:182" pos:end="303:182">0</literal></expr>]</index><operator pos:start="303:184" pos:end="303:184">.</operator><call pos:start="303:185" pos:end="303:192"><name pos:start="303:185" pos:end="303:190">getLat</name><argument_list pos:start="303:191" pos:end="303:192">()</argument_list></call> <operator pos:start="303:194" pos:end="303:194">*</operator> <literal type="number" pos:start="303:196" pos:end="303:203">1000000d</literal></expr></argument>)</argument_list></call> <operator pos:start="303:206" pos:end="303:206">/</operator> <literal type="number" pos:start="303:208" pos:end="303:215">1000000d</literal><operator pos:start="303:216" pos:end="303:216">)</operator>
					<operator pos:start="304:41" pos:end="304:42">&amp;&amp;</operator> <operator pos:start="304:44" pos:end="304:44">(</operator><operator pos:start="304:45" pos:end="304:45">(</operator><name pos:start="304:46" pos:end="304:51">double</name><operator pos:start="304:52" pos:end="304:52">)</operator><call pos:start="304:53" pos:end="304:107"><name pos:start="304:53" pos:end="304:62"><name pos:start="304:53" pos:end="304:56">Math</name><operator pos:start="304:57" pos:end="304:57">.</operator><name pos:start="304:58" pos:end="304:62">round</name></name><argument_list pos:start="304:63" pos:end="304:107">(<argument pos:start="304:64" pos:end="304:106"><expr pos:start="304:64" pos:end="304:106"><call pos:start="304:64" pos:end="304:83"><name pos:start="304:64" pos:end="304:81"><name pos:start="304:64" pos:end="304:71">polyline</name><operator pos:start="304:72" pos:end="304:72">.</operator><name pos:start="304:73" pos:end="304:81">getPoints</name></name><argument_list pos:start="304:82" pos:end="304:83">()</argument_list></call><index pos:start="304:84" pos:end="304:86">[<expr pos:start="304:85" pos:end="304:85"><literal type="number" pos:start="304:85" pos:end="304:85">1</literal></expr>]</index><operator pos:start="304:87" pos:end="304:87">.</operator><call pos:start="304:88" pos:end="304:95"><name pos:start="304:88" pos:end="304:93">getLon</name><argument_list pos:start="304:94" pos:end="304:95">()</argument_list></call> <operator pos:start="304:97" pos:end="304:97">*</operator> <literal type="number" pos:start="304:99" pos:end="304:106">1000000d</literal></expr></argument>)</argument_list></call> <operator pos:start="304:109" pos:end="304:109">/</operator> <literal type="number" pos:start="304:111" pos:end="304:118">1000000d</literal> <operator pos:start="304:120" pos:end="304:121">==</operator> <operator pos:start="304:123" pos:end="304:123">(</operator><name pos:start="304:124" pos:end="304:129">double</name><operator pos:start="304:130" pos:end="304:130">)</operator><call pos:start="304:131" pos:end="304:204"><name pos:start="304:131" pos:end="304:140"><name pos:start="304:131" pos:end="304:134">Math</name><operator pos:start="304:135" pos:end="304:135">.</operator><name pos:start="304:136" pos:end="304:140">round</name></name><argument_list pos:start="304:141" pos:end="304:204">(<argument pos:start="304:142" pos:end="304:203"><expr pos:start="304:142" pos:end="304:203"><call pos:start="304:142" pos:end="304:168"><name pos:start="304:142" pos:end="304:165"><name pos:start="304:142" pos:end="304:161">removedPriorityLines</name><operator pos:start="304:162" pos:end="304:162">.</operator><name pos:start="304:163" pos:end="304:165">get</name></name><argument_list pos:start="304:166" pos:end="304:168">(<argument pos:start="304:167" pos:end="304:167"><expr pos:start="304:167" pos:end="304:167"><literal type="number" pos:start="304:167" pos:end="304:167">1</literal></expr></argument>)</argument_list></call><operator pos:start="304:169" pos:end="304:169">.</operator><call pos:start="304:170" pos:end="304:180"><name pos:start="304:170" pos:end="304:178">getPoints</name><argument_list pos:start="304:179" pos:end="304:180">()</argument_list></call><index pos:start="304:181" pos:end="304:183">[<expr pos:start="304:182" pos:end="304:182"><literal type="number" pos:start="304:182" pos:end="304:182">0</literal></expr>]</index><operator pos:start="304:184" pos:end="304:184">.</operator><call pos:start="304:185" pos:end="304:192"><name pos:start="304:185" pos:end="304:190">getLon</name><argument_list pos:start="304:191" pos:end="304:192">()</argument_list></call> <operator pos:start="304:194" pos:end="304:194">*</operator> <literal type="number" pos:start="304:196" pos:end="304:203">1000000d</literal></expr></argument>)</argument_list></call> <operator pos:start="304:206" pos:end="304:206">/</operator> <literal type="number" pos:start="304:208" pos:end="304:215">1000000d</literal><operator pos:start="304:216" pos:end="304:216">)</operator><operator pos:start="304:217" pos:end="304:217">)</operator>
					<operator pos:start="305:41" pos:end="305:42">||</operator> <operator pos:start="305:44" pos:end="305:44">(</operator><operator pos:start="305:45" pos:end="305:45">(</operator><operator pos:start="305:46" pos:end="305:46">(</operator><name pos:start="305:47" pos:end="305:52">double</name><operator pos:start="305:53" pos:end="305:53">)</operator><call pos:start="305:54" pos:end="305:108"><name pos:start="305:54" pos:end="305:63"><name pos:start="305:54" pos:end="305:57">Math</name><operator pos:start="305:58" pos:end="305:58">.</operator><name pos:start="305:59" pos:end="305:63">round</name></name><argument_list pos:start="305:64" pos:end="305:108">(<argument pos:start="305:65" pos:end="305:107"><expr pos:start="305:65" pos:end="305:107"><call pos:start="305:65" pos:end="305:84"><name pos:start="305:65" pos:end="305:82"><name pos:start="305:65" pos:end="305:72">polyline</name><operator pos:start="305:73" pos:end="305:73">.</operator><name pos:start="305:74" pos:end="305:82">getPoints</name></name><argument_list pos:start="305:83" pos:end="305:84">()</argument_list></call><index pos:start="305:85" pos:end="305:87">[<expr pos:start="305:86" pos:end="305:86"><literal type="number" pos:start="305:86" pos:end="305:86">0</literal></expr>]</index><operator pos:start="305:88" pos:end="305:88">.</operator><call pos:start="305:89" pos:end="305:96"><name pos:start="305:89" pos:end="305:94">getLat</name><argument_list pos:start="305:95" pos:end="305:96">()</argument_list></call> <operator pos:start="305:98" pos:end="305:98">*</operator> <literal type="number" pos:start="305:100" pos:end="305:107">1000000d</literal></expr></argument>)</argument_list></call> <operator pos:start="305:110" pos:end="305:110">/</operator> <literal type="number" pos:start="305:112" pos:end="305:119">1000000d</literal> <operator pos:start="305:121" pos:end="305:122">==</operator> <operator pos:start="305:124" pos:end="305:124">(</operator><name pos:start="305:125" pos:end="305:130">double</name><operator pos:start="305:131" pos:end="305:131">)</operator><call pos:start="305:132" pos:end="305:205"><name pos:start="305:132" pos:end="305:141"><name pos:start="305:132" pos:end="305:135">Math</name><operator pos:start="305:136" pos:end="305:136">.</operator><name pos:start="305:137" pos:end="305:141">round</name></name><argument_list pos:start="305:142" pos:end="305:205">(<argument pos:start="305:143" pos:end="305:204"><expr pos:start="305:143" pos:end="305:204"><call pos:start="305:143" pos:end="305:169"><name pos:start="305:143" pos:end="305:166"><name pos:start="305:143" pos:end="305:162">removedPriorityLines</name><operator pos:start="305:163" pos:end="305:163">.</operator><name pos:start="305:164" pos:end="305:166">get</name></name><argument_list pos:start="305:167" pos:end="305:169">(<argument pos:start="305:168" pos:end="305:168"><expr pos:start="305:168" pos:end="305:168"><literal type="number" pos:start="305:168" pos:end="305:168">0</literal></expr></argument>)</argument_list></call><operator pos:start="305:170" pos:end="305:170">.</operator><call pos:start="305:171" pos:end="305:181"><name pos:start="305:171" pos:end="305:179">getPoints</name><argument_list pos:start="305:180" pos:end="305:181">()</argument_list></call><index pos:start="305:182" pos:end="305:184">[<expr pos:start="305:183" pos:end="305:183"><literal type="number" pos:start="305:183" pos:end="305:183">0</literal></expr>]</index><operator pos:start="305:185" pos:end="305:185">.</operator><call pos:start="305:186" pos:end="305:193"><name pos:start="305:186" pos:end="305:191">getLat</name><argument_list pos:start="305:192" pos:end="305:193">()</argument_list></call> <operator pos:start="305:195" pos:end="305:195">*</operator> <literal type="number" pos:start="305:197" pos:end="305:204">1000000d</literal></expr></argument>)</argument_list></call> <operator pos:start="305:207" pos:end="305:207">/</operator> <literal type="number" pos:start="305:209" pos:end="305:216">1000000d</literal><operator pos:start="305:217" pos:end="305:217">)</operator>
					<operator pos:start="306:41" pos:end="306:42">&amp;&amp;</operator> <operator pos:start="306:44" pos:end="306:44">(</operator><operator pos:start="306:45" pos:end="306:45">(</operator><name pos:start="306:46" pos:end="306:51">double</name><operator pos:start="306:52" pos:end="306:52">)</operator><call pos:start="306:53" pos:end="306:107"><name pos:start="306:53" pos:end="306:62"><name pos:start="306:53" pos:end="306:56">Math</name><operator pos:start="306:57" pos:end="306:57">.</operator><name pos:start="306:58" pos:end="306:62">round</name></name><argument_list pos:start="306:63" pos:end="306:107">(<argument pos:start="306:64" pos:end="306:106"><expr pos:start="306:64" pos:end="306:106"><call pos:start="306:64" pos:end="306:83"><name pos:start="306:64" pos:end="306:81"><name pos:start="306:64" pos:end="306:71">polyline</name><operator pos:start="306:72" pos:end="306:72">.</operator><name pos:start="306:73" pos:end="306:81">getPoints</name></name><argument_list pos:start="306:82" pos:end="306:83">()</argument_list></call><index pos:start="306:84" pos:end="306:86">[<expr pos:start="306:85" pos:end="306:85"><literal type="number" pos:start="306:85" pos:end="306:85">0</literal></expr>]</index><operator pos:start="306:87" pos:end="306:87">.</operator><call pos:start="306:88" pos:end="306:95"><name pos:start="306:88" pos:end="306:93">getLon</name><argument_list pos:start="306:94" pos:end="306:95">()</argument_list></call> <operator pos:start="306:97" pos:end="306:97">*</operator> <literal type="number" pos:start="306:99" pos:end="306:106">1000000d</literal></expr></argument>)</argument_list></call> <operator pos:start="306:109" pos:end="306:109">/</operator> <literal type="number" pos:start="306:111" pos:end="306:118">1000000d</literal> <operator pos:start="306:120" pos:end="306:121">==</operator> <operator pos:start="306:123" pos:end="306:123">(</operator><name pos:start="306:124" pos:end="306:129">double</name><operator pos:start="306:130" pos:end="306:130">)</operator><call pos:start="306:131" pos:end="306:204"><name pos:start="306:131" pos:end="306:140"><name pos:start="306:131" pos:end="306:134">Math</name><operator pos:start="306:135" pos:end="306:135">.</operator><name pos:start="306:136" pos:end="306:140">round</name></name><argument_list pos:start="306:141" pos:end="306:204">(<argument pos:start="306:142" pos:end="306:203"><expr pos:start="306:142" pos:end="306:203"><call pos:start="306:142" pos:end="306:168"><name pos:start="306:142" pos:end="306:165"><name pos:start="306:142" pos:end="306:161">removedPriorityLines</name><operator pos:start="306:162" pos:end="306:162">.</operator><name pos:start="306:163" pos:end="306:165">get</name></name><argument_list pos:start="306:166" pos:end="306:168">(<argument pos:start="306:167" pos:end="306:167"><expr pos:start="306:167" pos:end="306:167"><literal type="number" pos:start="306:167" pos:end="306:167">0</literal></expr></argument>)</argument_list></call><operator pos:start="306:169" pos:end="306:169">.</operator><call pos:start="306:170" pos:end="306:180"><name pos:start="306:170" pos:end="306:178">getPoints</name><argument_list pos:start="306:179" pos:end="306:180">()</argument_list></call><index pos:start="306:181" pos:end="306:183">[<expr pos:start="306:182" pos:end="306:182"><literal type="number" pos:start="306:182" pos:end="306:182">0</literal></expr>]</index><operator pos:start="306:184" pos:end="306:184">.</operator><call pos:start="306:185" pos:end="306:192"><name pos:start="306:185" pos:end="306:190">getLon</name><argument_list pos:start="306:191" pos:end="306:192">()</argument_list></call> <operator pos:start="306:194" pos:end="306:194">*</operator> <literal type="number" pos:start="306:196" pos:end="306:203">1000000d</literal></expr></argument>)</argument_list></call> <operator pos:start="306:206" pos:end="306:206">/</operator> <literal type="number" pos:start="306:208" pos:end="306:215">1000000d</literal><operator pos:start="306:216" pos:end="306:216">)</operator>
					<operator pos:start="307:41" pos:end="307:42">&amp;&amp;</operator> <operator pos:start="307:44" pos:end="307:44">(</operator><operator pos:start="307:45" pos:end="307:45">(</operator><name pos:start="307:46" pos:end="307:51">double</name><operator pos:start="307:52" pos:end="307:52">)</operator><call pos:start="307:53" pos:end="307:107"><name pos:start="307:53" pos:end="307:62"><name pos:start="307:53" pos:end="307:56">Math</name><operator pos:start="307:57" pos:end="307:57">.</operator><name pos:start="307:58" pos:end="307:62">round</name></name><argument_list pos:start="307:63" pos:end="307:107">(<argument pos:start="307:64" pos:end="307:106"><expr pos:start="307:64" pos:end="307:106"><call pos:start="307:64" pos:end="307:83"><name pos:start="307:64" pos:end="307:81"><name pos:start="307:64" pos:end="307:71">polyline</name><operator pos:start="307:72" pos:end="307:72">.</operator><name pos:start="307:73" pos:end="307:81">getPoints</name></name><argument_list pos:start="307:82" pos:end="307:83">()</argument_list></call><index pos:start="307:84" pos:end="307:86">[<expr pos:start="307:85" pos:end="307:85"><literal type="number" pos:start="307:85" pos:end="307:85">1</literal></expr>]</index><operator pos:start="307:87" pos:end="307:87">.</operator><call pos:start="307:88" pos:end="307:95"><name pos:start="307:88" pos:end="307:93">getLat</name><argument_list pos:start="307:94" pos:end="307:95">()</argument_list></call> <operator pos:start="307:97" pos:end="307:97">*</operator> <literal type="number" pos:start="307:99" pos:end="307:106">1000000d</literal></expr></argument>)</argument_list></call> <operator pos:start="307:109" pos:end="307:109">/</operator> <literal type="number" pos:start="307:111" pos:end="307:118">1000000d</literal> <operator pos:start="307:120" pos:end="307:121">==</operator> <operator pos:start="307:123" pos:end="307:123">(</operator><name pos:start="307:124" pos:end="307:129">double</name><operator pos:start="307:130" pos:end="307:130">)</operator><call pos:start="307:131" pos:end="307:204"><name pos:start="307:131" pos:end="307:140"><name pos:start="307:131" pos:end="307:134">Math</name><operator pos:start="307:135" pos:end="307:135">.</operator><name pos:start="307:136" pos:end="307:140">round</name></name><argument_list pos:start="307:141" pos:end="307:204">(<argument pos:start="307:142" pos:end="307:203"><expr pos:start="307:142" pos:end="307:203"><call pos:start="307:142" pos:end="307:168"><name pos:start="307:142" pos:end="307:165"><name pos:start="307:142" pos:end="307:161">removedPriorityLines</name><operator pos:start="307:162" pos:end="307:162">.</operator><name pos:start="307:163" pos:end="307:165">get</name></name><argument_list pos:start="307:166" pos:end="307:168">(<argument pos:start="307:167" pos:end="307:167"><expr pos:start="307:167" pos:end="307:167"><literal type="number" pos:start="307:167" pos:end="307:167">1</literal></expr></argument>)</argument_list></call><operator pos:start="307:169" pos:end="307:169">.</operator><call pos:start="307:170" pos:end="307:180"><name pos:start="307:170" pos:end="307:178">getPoints</name><argument_list pos:start="307:179" pos:end="307:180">()</argument_list></call><index pos:start="307:181" pos:end="307:183">[<expr pos:start="307:182" pos:end="307:182"><literal type="number" pos:start="307:182" pos:end="307:182">1</literal></expr>]</index><operator pos:start="307:184" pos:end="307:184">.</operator><call pos:start="307:185" pos:end="307:192"><name pos:start="307:185" pos:end="307:190">getLat</name><argument_list pos:start="307:191" pos:end="307:192">()</argument_list></call> <operator pos:start="307:194" pos:end="307:194">*</operator> <literal type="number" pos:start="307:196" pos:end="307:203">1000000d</literal></expr></argument>)</argument_list></call> <operator pos:start="307:206" pos:end="307:206">/</operator> <literal type="number" pos:start="307:208" pos:end="307:215">1000000d</literal><operator pos:start="307:216" pos:end="307:216">)</operator>
					<operator pos:start="308:41" pos:end="308:42">&amp;&amp;</operator> <operator pos:start="308:44" pos:end="308:44">(</operator><operator pos:start="308:45" pos:end="308:45">(</operator><name pos:start="308:46" pos:end="308:51">double</name><operator pos:start="308:52" pos:end="308:52">)</operator><call pos:start="308:53" pos:end="308:107"><name pos:start="308:53" pos:end="308:62"><name pos:start="308:53" pos:end="308:56">Math</name><operator pos:start="308:57" pos:end="308:57">.</operator><name pos:start="308:58" pos:end="308:62">round</name></name><argument_list pos:start="308:63" pos:end="308:107">(<argument pos:start="308:64" pos:end="308:106"><expr pos:start="308:64" pos:end="308:106"><call pos:start="308:64" pos:end="308:83"><name pos:start="308:64" pos:end="308:81"><name pos:start="308:64" pos:end="308:71">polyline</name><operator pos:start="308:72" pos:end="308:72">.</operator><name pos:start="308:73" pos:end="308:81">getPoints</name></name><argument_list pos:start="308:82" pos:end="308:83">()</argument_list></call><index pos:start="308:84" pos:end="308:86">[<expr pos:start="308:85" pos:end="308:85"><literal type="number" pos:start="308:85" pos:end="308:85">1</literal></expr>]</index><operator pos:start="308:87" pos:end="308:87">.</operator><call pos:start="308:88" pos:end="308:95"><name pos:start="308:88" pos:end="308:93">getLon</name><argument_list pos:start="308:94" pos:end="308:95">()</argument_list></call> <operator pos:start="308:97" pos:end="308:97">*</operator> <literal type="number" pos:start="308:99" pos:end="308:106">1000000d</literal></expr></argument>)</argument_list></call> <operator pos:start="308:109" pos:end="308:109">/</operator> <literal type="number" pos:start="308:111" pos:end="308:118">1000000d</literal> <operator pos:start="308:120" pos:end="308:121">==</operator> <operator pos:start="308:123" pos:end="308:123">(</operator><name pos:start="308:124" pos:end="308:129">double</name><operator pos:start="308:130" pos:end="308:130">)</operator><call pos:start="308:131" pos:end="308:204"><name pos:start="308:131" pos:end="308:140"><name pos:start="308:131" pos:end="308:134">Math</name><operator pos:start="308:135" pos:end="308:135">.</operator><name pos:start="308:136" pos:end="308:140">round</name></name><argument_list pos:start="308:141" pos:end="308:204">(<argument pos:start="308:142" pos:end="308:203"><expr pos:start="308:142" pos:end="308:203"><call pos:start="308:142" pos:end="308:168"><name pos:start="308:142" pos:end="308:165"><name pos:start="308:142" pos:end="308:161">removedPriorityLines</name><operator pos:start="308:162" pos:end="308:162">.</operator><name pos:start="308:163" pos:end="308:165">get</name></name><argument_list pos:start="308:166" pos:end="308:168">(<argument pos:start="308:167" pos:end="308:167"><expr pos:start="308:167" pos:end="308:167"><literal type="number" pos:start="308:167" pos:end="308:167">1</literal></expr></argument>)</argument_list></call><operator pos:start="308:169" pos:end="308:169">.</operator><call pos:start="308:170" pos:end="308:180"><name pos:start="308:170" pos:end="308:178">getPoints</name><argument_list pos:start="308:179" pos:end="308:180">()</argument_list></call><index pos:start="308:181" pos:end="308:183">[<expr pos:start="308:182" pos:end="308:182"><literal type="number" pos:start="308:182" pos:end="308:182">1</literal></expr>]</index><operator pos:start="308:184" pos:end="308:184">.</operator><call pos:start="308:185" pos:end="308:192"><name pos:start="308:185" pos:end="308:190">getLon</name><argument_list pos:start="308:191" pos:end="308:192">()</argument_list></call> <operator pos:start="308:194" pos:end="308:194">*</operator> <literal type="number" pos:start="308:196" pos:end="308:203">1000000d</literal></expr></argument>)</argument_list></call> <operator pos:start="308:206" pos:end="308:206">/</operator> <literal type="number" pos:start="308:208" pos:end="308:215">1000000d</literal><operator pos:start="308:216" pos:end="308:216">)</operator><operator pos:start="308:217" pos:end="308:217">)</operator>
					<operator pos:start="309:41" pos:end="309:42">||</operator> <operator pos:start="309:44" pos:end="309:44">(</operator><operator pos:start="309:45" pos:end="309:45">(</operator><operator pos:start="309:46" pos:end="309:46">(</operator><name pos:start="309:47" pos:end="309:52">double</name><operator pos:start="309:53" pos:end="309:53">)</operator><call pos:start="309:54" pos:end="309:108"><name pos:start="309:54" pos:end="309:63"><name pos:start="309:54" pos:end="309:57">Math</name><operator pos:start="309:58" pos:end="309:58">.</operator><name pos:start="309:59" pos:end="309:63">round</name></name><argument_list pos:start="309:64" pos:end="309:108">(<argument pos:start="309:65" pos:end="309:107"><expr pos:start="309:65" pos:end="309:107"><call pos:start="309:65" pos:end="309:84"><name pos:start="309:65" pos:end="309:82"><name pos:start="309:65" pos:end="309:72">polyline</name><operator pos:start="309:73" pos:end="309:73">.</operator><name pos:start="309:74" pos:end="309:82">getPoints</name></name><argument_list pos:start="309:83" pos:end="309:84">()</argument_list></call><index pos:start="309:85" pos:end="309:87">[<expr pos:start="309:86" pos:end="309:86"><literal type="number" pos:start="309:86" pos:end="309:86">0</literal></expr>]</index><operator pos:start="309:88" pos:end="309:88">.</operator><call pos:start="309:89" pos:end="309:96"><name pos:start="309:89" pos:end="309:94">getLat</name><argument_list pos:start="309:95" pos:end="309:96">()</argument_list></call> <operator pos:start="309:98" pos:end="309:98">*</operator> <literal type="number" pos:start="309:100" pos:end="309:107">1000000d</literal></expr></argument>)</argument_list></call> <operator pos:start="309:110" pos:end="309:110">/</operator> <literal type="number" pos:start="309:112" pos:end="309:119">1000000d</literal> <operator pos:start="309:121" pos:end="309:122">==</operator> <operator pos:start="309:124" pos:end="309:124">(</operator><name pos:start="309:125" pos:end="309:130">double</name><operator pos:start="309:131" pos:end="309:131">)</operator><call pos:start="309:132" pos:end="309:205"><name pos:start="309:132" pos:end="309:141"><name pos:start="309:132" pos:end="309:135">Math</name><operator pos:start="309:136" pos:end="309:136">.</operator><name pos:start="309:137" pos:end="309:141">round</name></name><argument_list pos:start="309:142" pos:end="309:205">(<argument pos:start="309:143" pos:end="309:204"><expr pos:start="309:143" pos:end="309:204"><call pos:start="309:143" pos:end="309:169"><name pos:start="309:143" pos:end="309:166"><name pos:start="309:143" pos:end="309:162">removedPriorityLines</name><operator pos:start="309:163" pos:end="309:163">.</operator><name pos:start="309:164" pos:end="309:166">get</name></name><argument_list pos:start="309:167" pos:end="309:169">(<argument pos:start="309:168" pos:end="309:168"><expr pos:start="309:168" pos:end="309:168"><literal type="number" pos:start="309:168" pos:end="309:168">0</literal></expr></argument>)</argument_list></call><operator pos:start="309:170" pos:end="309:170">.</operator><call pos:start="309:171" pos:end="309:181"><name pos:start="309:171" pos:end="309:179">getPoints</name><argument_list pos:start="309:180" pos:end="309:181">()</argument_list></call><index pos:start="309:182" pos:end="309:184">[<expr pos:start="309:183" pos:end="309:183"><literal type="number" pos:start="309:183" pos:end="309:183">1</literal></expr>]</index><operator pos:start="309:185" pos:end="309:185">.</operator><call pos:start="309:186" pos:end="309:193"><name pos:start="309:186" pos:end="309:191">getLat</name><argument_list pos:start="309:192" pos:end="309:193">()</argument_list></call> <operator pos:start="309:195" pos:end="309:195">*</operator> <literal type="number" pos:start="309:197" pos:end="309:204">1000000d</literal></expr></argument>)</argument_list></call> <operator pos:start="309:207" pos:end="309:207">/</operator> <literal type="number" pos:start="309:209" pos:end="309:216">1000000d</literal><operator pos:start="309:217" pos:end="309:217">)</operator>
					<operator pos:start="310:41" pos:end="310:42">&amp;&amp;</operator> <operator pos:start="310:44" pos:end="310:44">(</operator><operator pos:start="310:45" pos:end="310:45">(</operator><name pos:start="310:46" pos:end="310:51">double</name><operator pos:start="310:52" pos:end="310:52">)</operator><call pos:start="310:53" pos:end="310:107"><name pos:start="310:53" pos:end="310:62"><name pos:start="310:53" pos:end="310:56">Math</name><operator pos:start="310:57" pos:end="310:57">.</operator><name pos:start="310:58" pos:end="310:62">round</name></name><argument_list pos:start="310:63" pos:end="310:107">(<argument pos:start="310:64" pos:end="310:106"><expr pos:start="310:64" pos:end="310:106"><call pos:start="310:64" pos:end="310:83"><name pos:start="310:64" pos:end="310:81"><name pos:start="310:64" pos:end="310:71">polyline</name><operator pos:start="310:72" pos:end="310:72">.</operator><name pos:start="310:73" pos:end="310:81">getPoints</name></name><argument_list pos:start="310:82" pos:end="310:83">()</argument_list></call><index pos:start="310:84" pos:end="310:86">[<expr pos:start="310:85" pos:end="310:85"><literal type="number" pos:start="310:85" pos:end="310:85">0</literal></expr>]</index><operator pos:start="310:87" pos:end="310:87">.</operator><call pos:start="310:88" pos:end="310:95"><name pos:start="310:88" pos:end="310:93">getLon</name><argument_list pos:start="310:94" pos:end="310:95">()</argument_list></call> <operator pos:start="310:97" pos:end="310:97">*</operator> <literal type="number" pos:start="310:99" pos:end="310:106">1000000d</literal></expr></argument>)</argument_list></call> <operator pos:start="310:109" pos:end="310:109">/</operator> <literal type="number" pos:start="310:111" pos:end="310:118">1000000d</literal> <operator pos:start="310:120" pos:end="310:121">==</operator> <operator pos:start="310:123" pos:end="310:123">(</operator><name pos:start="310:124" pos:end="310:129">double</name><operator pos:start="310:130" pos:end="310:130">)</operator><call pos:start="310:131" pos:end="310:204"><name pos:start="310:131" pos:end="310:140"><name pos:start="310:131" pos:end="310:134">Math</name><operator pos:start="310:135" pos:end="310:135">.</operator><name pos:start="310:136" pos:end="310:140">round</name></name><argument_list pos:start="310:141" pos:end="310:204">(<argument pos:start="310:142" pos:end="310:203"><expr pos:start="310:142" pos:end="310:203"><call pos:start="310:142" pos:end="310:168"><name pos:start="310:142" pos:end="310:165"><name pos:start="310:142" pos:end="310:161">removedPriorityLines</name><operator pos:start="310:162" pos:end="310:162">.</operator><name pos:start="310:163" pos:end="310:165">get</name></name><argument_list pos:start="310:166" pos:end="310:168">(<argument pos:start="310:167" pos:end="310:167"><expr pos:start="310:167" pos:end="310:167"><literal type="number" pos:start="310:167" pos:end="310:167">0</literal></expr></argument>)</argument_list></call><operator pos:start="310:169" pos:end="310:169">.</operator><call pos:start="310:170" pos:end="310:180"><name pos:start="310:170" pos:end="310:178">getPoints</name><argument_list pos:start="310:179" pos:end="310:180">()</argument_list></call><index pos:start="310:181" pos:end="310:183">[<expr pos:start="310:182" pos:end="310:182"><literal type="number" pos:start="310:182" pos:end="310:182">1</literal></expr>]</index><operator pos:start="310:184" pos:end="310:184">.</operator><call pos:start="310:185" pos:end="310:192"><name pos:start="310:185" pos:end="310:190">getLon</name><argument_list pos:start="310:191" pos:end="310:192">()</argument_list></call> <operator pos:start="310:194" pos:end="310:194">*</operator> <literal type="number" pos:start="310:196" pos:end="310:203">1000000d</literal></expr></argument>)</argument_list></call> <operator pos:start="310:206" pos:end="310:206">/</operator> <literal type="number" pos:start="310:208" pos:end="310:215">1000000d</literal><operator pos:start="310:216" pos:end="310:216">)</operator>
					<operator pos:start="311:41" pos:end="311:42">&amp;&amp;</operator> <operator pos:start="311:44" pos:end="311:44">(</operator><operator pos:start="311:45" pos:end="311:45">(</operator><name pos:start="311:46" pos:end="311:51">double</name><operator pos:start="311:52" pos:end="311:52">)</operator><call pos:start="311:53" pos:end="311:107"><name pos:start="311:53" pos:end="311:62"><name pos:start="311:53" pos:end="311:56">Math</name><operator pos:start="311:57" pos:end="311:57">.</operator><name pos:start="311:58" pos:end="311:62">round</name></name><argument_list pos:start="311:63" pos:end="311:107">(<argument pos:start="311:64" pos:end="311:106"><expr pos:start="311:64" pos:end="311:106"><call pos:start="311:64" pos:end="311:83"><name pos:start="311:64" pos:end="311:81"><name pos:start="311:64" pos:end="311:71">polyline</name><operator pos:start="311:72" pos:end="311:72">.</operator><name pos:start="311:73" pos:end="311:81">getPoints</name></name><argument_list pos:start="311:82" pos:end="311:83">()</argument_list></call><index pos:start="311:84" pos:end="311:86">[<expr pos:start="311:85" pos:end="311:85"><literal type="number" pos:start="311:85" pos:end="311:85">1</literal></expr>]</index><operator pos:start="311:87" pos:end="311:87">.</operator><call pos:start="311:88" pos:end="311:95"><name pos:start="311:88" pos:end="311:93">getLat</name><argument_list pos:start="311:94" pos:end="311:95">()</argument_list></call> <operator pos:start="311:97" pos:end="311:97">*</operator> <literal type="number" pos:start="311:99" pos:end="311:106">1000000d</literal></expr></argument>)</argument_list></call> <operator pos:start="311:109" pos:end="311:109">/</operator> <literal type="number" pos:start="311:111" pos:end="311:118">1000000d</literal> <operator pos:start="311:120" pos:end="311:121">==</operator> <operator pos:start="311:123" pos:end="311:123">(</operator><name pos:start="311:124" pos:end="311:129">double</name><operator pos:start="311:130" pos:end="311:130">)</operator><call pos:start="311:131" pos:end="311:204"><name pos:start="311:131" pos:end="311:140"><name pos:start="311:131" pos:end="311:134">Math</name><operator pos:start="311:135" pos:end="311:135">.</operator><name pos:start="311:136" pos:end="311:140">round</name></name><argument_list pos:start="311:141" pos:end="311:204">(<argument pos:start="311:142" pos:end="311:203"><expr pos:start="311:142" pos:end="311:203"><call pos:start="311:142" pos:end="311:168"><name pos:start="311:142" pos:end="311:165"><name pos:start="311:142" pos:end="311:161">removedPriorityLines</name><operator pos:start="311:162" pos:end="311:162">.</operator><name pos:start="311:163" pos:end="311:165">get</name></name><argument_list pos:start="311:166" pos:end="311:168">(<argument pos:start="311:167" pos:end="311:167"><expr pos:start="311:167" pos:end="311:167"><literal type="number" pos:start="311:167" pos:end="311:167">1</literal></expr></argument>)</argument_list></call><operator pos:start="311:169" pos:end="311:169">.</operator><call pos:start="311:170" pos:end="311:180"><name pos:start="311:170" pos:end="311:178">getPoints</name><argument_list pos:start="311:179" pos:end="311:180">()</argument_list></call><index pos:start="311:181" pos:end="311:183">[<expr pos:start="311:182" pos:end="311:182"><literal type="number" pos:start="311:182" pos:end="311:182">1</literal></expr>]</index><operator pos:start="311:184" pos:end="311:184">.</operator><call pos:start="311:185" pos:end="311:192"><name pos:start="311:185" pos:end="311:190">getLat</name><argument_list pos:start="311:191" pos:end="311:192">()</argument_list></call> <operator pos:start="311:194" pos:end="311:194">*</operator> <literal type="number" pos:start="311:196" pos:end="311:203">1000000d</literal></expr></argument>)</argument_list></call> <operator pos:start="311:206" pos:end="311:206">/</operator> <literal type="number" pos:start="311:208" pos:end="311:215">1000000d</literal><operator pos:start="311:216" pos:end="311:216">)</operator>
					<operator pos:start="312:41" pos:end="312:42">&amp;&amp;</operator> <operator pos:start="312:44" pos:end="312:44">(</operator><operator pos:start="312:45" pos:end="312:45">(</operator><name pos:start="312:46" pos:end="312:51">double</name><operator pos:start="312:52" pos:end="312:52">)</operator><call pos:start="312:53" pos:end="312:107"><name pos:start="312:53" pos:end="312:62"><name pos:start="312:53" pos:end="312:56">Math</name><operator pos:start="312:57" pos:end="312:57">.</operator><name pos:start="312:58" pos:end="312:62">round</name></name><argument_list pos:start="312:63" pos:end="312:107">(<argument pos:start="312:64" pos:end="312:106"><expr pos:start="312:64" pos:end="312:106"><call pos:start="312:64" pos:end="312:83"><name pos:start="312:64" pos:end="312:81"><name pos:start="312:64" pos:end="312:71">polyline</name><operator pos:start="312:72" pos:end="312:72">.</operator><name pos:start="312:73" pos:end="312:81">getPoints</name></name><argument_list pos:start="312:82" pos:end="312:83">()</argument_list></call><index pos:start="312:84" pos:end="312:86">[<expr pos:start="312:85" pos:end="312:85"><literal type="number" pos:start="312:85" pos:end="312:85">1</literal></expr>]</index><operator pos:start="312:87" pos:end="312:87">.</operator><call pos:start="312:88" pos:end="312:95"><name pos:start="312:88" pos:end="312:93">getLon</name><argument_list pos:start="312:94" pos:end="312:95">()</argument_list></call> <operator pos:start="312:97" pos:end="312:97">*</operator> <literal type="number" pos:start="312:99" pos:end="312:106">1000000d</literal></expr></argument>)</argument_list></call> <operator pos:start="312:109" pos:end="312:109">/</operator> <literal type="number" pos:start="312:111" pos:end="312:118">1000000d</literal> <operator pos:start="312:120" pos:end="312:121">==</operator> <operator pos:start="312:123" pos:end="312:123">(</operator><name pos:start="312:124" pos:end="312:129">double</name><operator pos:start="312:130" pos:end="312:130">)</operator><call pos:start="312:131" pos:end="312:204"><name pos:start="312:131" pos:end="312:140"><name pos:start="312:131" pos:end="312:134">Math</name><operator pos:start="312:135" pos:end="312:135">.</operator><name pos:start="312:136" pos:end="312:140">round</name></name><argument_list pos:start="312:141" pos:end="312:204">(<argument pos:start="312:142" pos:end="312:203"><expr pos:start="312:142" pos:end="312:203"><call pos:start="312:142" pos:end="312:168"><name pos:start="312:142" pos:end="312:165"><name pos:start="312:142" pos:end="312:161">removedPriorityLines</name><operator pos:start="312:162" pos:end="312:162">.</operator><name pos:start="312:163" pos:end="312:165">get</name></name><argument_list pos:start="312:166" pos:end="312:168">(<argument pos:start="312:167" pos:end="312:167"><expr pos:start="312:167" pos:end="312:167"><literal type="number" pos:start="312:167" pos:end="312:167">1</literal></expr></argument>)</argument_list></call><operator pos:start="312:169" pos:end="312:169">.</operator><call pos:start="312:170" pos:end="312:180"><name pos:start="312:170" pos:end="312:178">getPoints</name><argument_list pos:start="312:179" pos:end="312:180">()</argument_list></call><index pos:start="312:181" pos:end="312:183">[<expr pos:start="312:182" pos:end="312:182"><literal type="number" pos:start="312:182" pos:end="312:182">1</literal></expr>]</index><operator pos:start="312:184" pos:end="312:184">.</operator><call pos:start="312:185" pos:end="312:192"><name pos:start="312:185" pos:end="312:190">getLon</name><argument_list pos:start="312:191" pos:end="312:192">()</argument_list></call> <operator pos:start="312:194" pos:end="312:194">*</operator> <literal type="number" pos:start="312:196" pos:end="312:203">1000000d</literal></expr></argument>)</argument_list></call> <operator pos:start="312:206" pos:end="312:206">/</operator> <literal type="number" pos:start="312:208" pos:end="312:215">1000000d</literal><operator pos:start="312:216" pos:end="312:216">)</operator><operator pos:start="312:217" pos:end="312:217">)</operator>
					<operator pos:start="313:41" pos:end="313:42">||</operator> <operator pos:start="313:44" pos:end="313:44">(</operator><operator pos:start="313:45" pos:end="313:45">(</operator><operator pos:start="313:46" pos:end="313:46">(</operator><name pos:start="313:47" pos:end="313:52">double</name><operator pos:start="313:53" pos:end="313:53">)</operator><call pos:start="313:54" pos:end="313:108"><name pos:start="313:54" pos:end="313:63"><name pos:start="313:54" pos:end="313:57">Math</name><operator pos:start="313:58" pos:end="313:58">.</operator><name pos:start="313:59" pos:end="313:63">round</name></name><argument_list pos:start="313:64" pos:end="313:108">(<argument pos:start="313:65" pos:end="313:107"><expr pos:start="313:65" pos:end="313:107"><call pos:start="313:65" pos:end="313:84"><name pos:start="313:65" pos:end="313:82"><name pos:start="313:65" pos:end="313:72">polyline</name><operator pos:start="313:73" pos:end="313:73">.</operator><name pos:start="313:74" pos:end="313:82">getPoints</name></name><argument_list pos:start="313:83" pos:end="313:84">()</argument_list></call><index pos:start="313:85" pos:end="313:87">[<expr pos:start="313:86" pos:end="313:86"><literal type="number" pos:start="313:86" pos:end="313:86">0</literal></expr>]</index><operator pos:start="313:88" pos:end="313:88">.</operator><call pos:start="313:89" pos:end="313:96"><name pos:start="313:89" pos:end="313:94">getLat</name><argument_list pos:start="313:95" pos:end="313:96">()</argument_list></call> <operator pos:start="313:98" pos:end="313:98">*</operator> <literal type="number" pos:start="313:100" pos:end="313:107">1000000d</literal></expr></argument>)</argument_list></call> <operator pos:start="313:110" pos:end="313:110">/</operator> <literal type="number" pos:start="313:112" pos:end="313:119">1000000d</literal> <operator pos:start="313:121" pos:end="313:122">==</operator> <operator pos:start="313:124" pos:end="313:124">(</operator><name pos:start="313:125" pos:end="313:130">double</name><operator pos:start="313:131" pos:end="313:131">)</operator><call pos:start="313:132" pos:end="313:205"><name pos:start="313:132" pos:end="313:141"><name pos:start="313:132" pos:end="313:135">Math</name><operator pos:start="313:136" pos:end="313:136">.</operator><name pos:start="313:137" pos:end="313:141">round</name></name><argument_list pos:start="313:142" pos:end="313:205">(<argument pos:start="313:143" pos:end="313:204"><expr pos:start="313:143" pos:end="313:204"><call pos:start="313:143" pos:end="313:169"><name pos:start="313:143" pos:end="313:166"><name pos:start="313:143" pos:end="313:162">removedPriorityLines</name><operator pos:start="313:163" pos:end="313:163">.</operator><name pos:start="313:164" pos:end="313:166">get</name></name><argument_list pos:start="313:167" pos:end="313:169">(<argument pos:start="313:168" pos:end="313:168"><expr pos:start="313:168" pos:end="313:168"><literal type="number" pos:start="313:168" pos:end="313:168">0</literal></expr></argument>)</argument_list></call><operator pos:start="313:170" pos:end="313:170">.</operator><call pos:start="313:171" pos:end="313:181"><name pos:start="313:171" pos:end="313:179">getPoints</name><argument_list pos:start="313:180" pos:end="313:181">()</argument_list></call><index pos:start="313:182" pos:end="313:184">[<expr pos:start="313:183" pos:end="313:183"><literal type="number" pos:start="313:183" pos:end="313:183">1</literal></expr>]</index><operator pos:start="313:185" pos:end="313:185">.</operator><call pos:start="313:186" pos:end="313:193"><name pos:start="313:186" pos:end="313:191">getLat</name><argument_list pos:start="313:192" pos:end="313:193">()</argument_list></call> <operator pos:start="313:195" pos:end="313:195">*</operator> <literal type="number" pos:start="313:197" pos:end="313:204">1000000d</literal></expr></argument>)</argument_list></call> <operator pos:start="313:207" pos:end="313:207">/</operator> <literal type="number" pos:start="313:209" pos:end="313:216">1000000d</literal><operator pos:start="313:217" pos:end="313:217">)</operator>
					<operator pos:start="314:41" pos:end="314:42">&amp;&amp;</operator> <operator pos:start="314:44" pos:end="314:44">(</operator><operator pos:start="314:45" pos:end="314:45">(</operator><name pos:start="314:46" pos:end="314:51">double</name><operator pos:start="314:52" pos:end="314:52">)</operator><call pos:start="314:53" pos:end="314:107"><name pos:start="314:53" pos:end="314:62"><name pos:start="314:53" pos:end="314:56">Math</name><operator pos:start="314:57" pos:end="314:57">.</operator><name pos:start="314:58" pos:end="314:62">round</name></name><argument_list pos:start="314:63" pos:end="314:107">(<argument pos:start="314:64" pos:end="314:106"><expr pos:start="314:64" pos:end="314:106"><call pos:start="314:64" pos:end="314:83"><name pos:start="314:64" pos:end="314:81"><name pos:start="314:64" pos:end="314:71">polyline</name><operator pos:start="314:72" pos:end="314:72">.</operator><name pos:start="314:73" pos:end="314:81">getPoints</name></name><argument_list pos:start="314:82" pos:end="314:83">()</argument_list></call><index pos:start="314:84" pos:end="314:86">[<expr pos:start="314:85" pos:end="314:85"><literal type="number" pos:start="314:85" pos:end="314:85">0</literal></expr>]</index><operator pos:start="314:87" pos:end="314:87">.</operator><call pos:start="314:88" pos:end="314:95"><name pos:start="314:88" pos:end="314:93">getLon</name><argument_list pos:start="314:94" pos:end="314:95">()</argument_list></call> <operator pos:start="314:97" pos:end="314:97">*</operator> <literal type="number" pos:start="314:99" pos:end="314:106">1000000d</literal></expr></argument>)</argument_list></call> <operator pos:start="314:109" pos:end="314:109">/</operator> <literal type="number" pos:start="314:111" pos:end="314:118">1000000d</literal> <operator pos:start="314:120" pos:end="314:121">==</operator> <operator pos:start="314:123" pos:end="314:123">(</operator><name pos:start="314:124" pos:end="314:129">double</name><operator pos:start="314:130" pos:end="314:130">)</operator><call pos:start="314:131" pos:end="314:204"><name pos:start="314:131" pos:end="314:140"><name pos:start="314:131" pos:end="314:134">Math</name><operator pos:start="314:135" pos:end="314:135">.</operator><name pos:start="314:136" pos:end="314:140">round</name></name><argument_list pos:start="314:141" pos:end="314:204">(<argument pos:start="314:142" pos:end="314:203"><expr pos:start="314:142" pos:end="314:203"><call pos:start="314:142" pos:end="314:168"><name pos:start="314:142" pos:end="314:165"><name pos:start="314:142" pos:end="314:161">removedPriorityLines</name><operator pos:start="314:162" pos:end="314:162">.</operator><name pos:start="314:163" pos:end="314:165">get</name></name><argument_list pos:start="314:166" pos:end="314:168">(<argument pos:start="314:167" pos:end="314:167"><expr pos:start="314:167" pos:end="314:167"><literal type="number" pos:start="314:167" pos:end="314:167">0</literal></expr></argument>)</argument_list></call><operator pos:start="314:169" pos:end="314:169">.</operator><call pos:start="314:170" pos:end="314:180"><name pos:start="314:170" pos:end="314:178">getPoints</name><argument_list pos:start="314:179" pos:end="314:180">()</argument_list></call><index pos:start="314:181" pos:end="314:183">[<expr pos:start="314:182" pos:end="314:182"><literal type="number" pos:start="314:182" pos:end="314:182">1</literal></expr>]</index><operator pos:start="314:184" pos:end="314:184">.</operator><call pos:start="314:185" pos:end="314:192"><name pos:start="314:185" pos:end="314:190">getLon</name><argument_list pos:start="314:191" pos:end="314:192">()</argument_list></call> <operator pos:start="314:194" pos:end="314:194">*</operator> <literal type="number" pos:start="314:196" pos:end="314:203">1000000d</literal></expr></argument>)</argument_list></call> <operator pos:start="314:206" pos:end="314:206">/</operator> <literal type="number" pos:start="314:208" pos:end="314:215">1000000d</literal><operator pos:start="314:216" pos:end="314:216">)</operator>
					<operator pos:start="315:41" pos:end="315:42">&amp;&amp;</operator> <operator pos:start="315:44" pos:end="315:44">(</operator><operator pos:start="315:45" pos:end="315:45">(</operator><name pos:start="315:46" pos:end="315:51">double</name><operator pos:start="315:52" pos:end="315:52">)</operator><call pos:start="315:53" pos:end="315:107"><name pos:start="315:53" pos:end="315:62"><name pos:start="315:53" pos:end="315:56">Math</name><operator pos:start="315:57" pos:end="315:57">.</operator><name pos:start="315:58" pos:end="315:62">round</name></name><argument_list pos:start="315:63" pos:end="315:107">(<argument pos:start="315:64" pos:end="315:106"><expr pos:start="315:64" pos:end="315:106"><call pos:start="315:64" pos:end="315:83"><name pos:start="315:64" pos:end="315:81"><name pos:start="315:64" pos:end="315:71">polyline</name><operator pos:start="315:72" pos:end="315:72">.</operator><name pos:start="315:73" pos:end="315:81">getPoints</name></name><argument_list pos:start="315:82" pos:end="315:83">()</argument_list></call><index pos:start="315:84" pos:end="315:86">[<expr pos:start="315:85" pos:end="315:85"><literal type="number" pos:start="315:85" pos:end="315:85">1</literal></expr>]</index><operator pos:start="315:87" pos:end="315:87">.</operator><call pos:start="315:88" pos:end="315:95"><name pos:start="315:88" pos:end="315:93">getLat</name><argument_list pos:start="315:94" pos:end="315:95">()</argument_list></call> <operator pos:start="315:97" pos:end="315:97">*</operator> <literal type="number" pos:start="315:99" pos:end="315:106">1000000d</literal></expr></argument>)</argument_list></call> <operator pos:start="315:109" pos:end="315:109">/</operator> <literal type="number" pos:start="315:111" pos:end="315:118">1000000d</literal> <operator pos:start="315:120" pos:end="315:121">==</operator> <operator pos:start="315:123" pos:end="315:123">(</operator><name pos:start="315:124" pos:end="315:129">double</name><operator pos:start="315:130" pos:end="315:130">)</operator><call pos:start="315:131" pos:end="315:204"><name pos:start="315:131" pos:end="315:140"><name pos:start="315:131" pos:end="315:134">Math</name><operator pos:start="315:135" pos:end="315:135">.</operator><name pos:start="315:136" pos:end="315:140">round</name></name><argument_list pos:start="315:141" pos:end="315:204">(<argument pos:start="315:142" pos:end="315:203"><expr pos:start="315:142" pos:end="315:203"><call pos:start="315:142" pos:end="315:168"><name pos:start="315:142" pos:end="315:165"><name pos:start="315:142" pos:end="315:161">removedPriorityLines</name><operator pos:start="315:162" pos:end="315:162">.</operator><name pos:start="315:163" pos:end="315:165">get</name></name><argument_list pos:start="315:166" pos:end="315:168">(<argument pos:start="315:167" pos:end="315:167"><expr pos:start="315:167" pos:end="315:167"><literal type="number" pos:start="315:167" pos:end="315:167">1</literal></expr></argument>)</argument_list></call><operator pos:start="315:169" pos:end="315:169">.</operator><call pos:start="315:170" pos:end="315:180"><name pos:start="315:170" pos:end="315:178">getPoints</name><argument_list pos:start="315:179" pos:end="315:180">()</argument_list></call><index pos:start="315:181" pos:end="315:183">[<expr pos:start="315:182" pos:end="315:182"><literal type="number" pos:start="315:182" pos:end="315:182">0</literal></expr>]</index><operator pos:start="315:184" pos:end="315:184">.</operator><call pos:start="315:185" pos:end="315:192"><name pos:start="315:185" pos:end="315:190">getLat</name><argument_list pos:start="315:191" pos:end="315:192">()</argument_list></call> <operator pos:start="315:194" pos:end="315:194">*</operator> <literal type="number" pos:start="315:196" pos:end="315:203">1000000d</literal></expr></argument>)</argument_list></call> <operator pos:start="315:206" pos:end="315:206">/</operator> <literal type="number" pos:start="315:208" pos:end="315:215">1000000d</literal><operator pos:start="315:216" pos:end="315:216">)</operator>
					<operator pos:start="316:41" pos:end="316:42">&amp;&amp;</operator> <operator pos:start="316:44" pos:end="316:44">(</operator><operator pos:start="316:45" pos:end="316:45">(</operator><name pos:start="316:46" pos:end="316:51">double</name><operator pos:start="316:52" pos:end="316:52">)</operator><call pos:start="316:53" pos:end="316:107"><name pos:start="316:53" pos:end="316:62"><name pos:start="316:53" pos:end="316:56">Math</name><operator pos:start="316:57" pos:end="316:57">.</operator><name pos:start="316:58" pos:end="316:62">round</name></name><argument_list pos:start="316:63" pos:end="316:107">(<argument pos:start="316:64" pos:end="316:106"><expr pos:start="316:64" pos:end="316:106"><call pos:start="316:64" pos:end="316:83"><name pos:start="316:64" pos:end="316:81"><name pos:start="316:64" pos:end="316:71">polyline</name><operator pos:start="316:72" pos:end="316:72">.</operator><name pos:start="316:73" pos:end="316:81">getPoints</name></name><argument_list pos:start="316:82" pos:end="316:83">()</argument_list></call><index pos:start="316:84" pos:end="316:86">[<expr pos:start="316:85" pos:end="316:85"><literal type="number" pos:start="316:85" pos:end="316:85">1</literal></expr>]</index><operator pos:start="316:87" pos:end="316:87">.</operator><call pos:start="316:88" pos:end="316:95"><name pos:start="316:88" pos:end="316:93">getLon</name><argument_list pos:start="316:94" pos:end="316:95">()</argument_list></call> <operator pos:start="316:97" pos:end="316:97">*</operator> <literal type="number" pos:start="316:99" pos:end="316:106">1000000d</literal></expr></argument>)</argument_list></call> <operator pos:start="316:109" pos:end="316:109">/</operator> <literal type="number" pos:start="316:111" pos:end="316:118">1000000d</literal> <operator pos:start="316:120" pos:end="316:121">==</operator> <operator pos:start="316:123" pos:end="316:123">(</operator><name pos:start="316:124" pos:end="316:129">double</name><operator pos:start="316:130" pos:end="316:130">)</operator><call pos:start="316:131" pos:end="316:204"><name pos:start="316:131" pos:end="316:140"><name pos:start="316:131" pos:end="316:134">Math</name><operator pos:start="316:135" pos:end="316:135">.</operator><name pos:start="316:136" pos:end="316:140">round</name></name><argument_list pos:start="316:141" pos:end="316:204">(<argument pos:start="316:142" pos:end="316:203"><expr pos:start="316:142" pos:end="316:203"><call pos:start="316:142" pos:end="316:168"><name pos:start="316:142" pos:end="316:165"><name pos:start="316:142" pos:end="316:161">removedPriorityLines</name><operator pos:start="316:162" pos:end="316:162">.</operator><name pos:start="316:163" pos:end="316:165">get</name></name><argument_list pos:start="316:166" pos:end="316:168">(<argument pos:start="316:167" pos:end="316:167"><expr pos:start="316:167" pos:end="316:167"><literal type="number" pos:start="316:167" pos:end="316:167">1</literal></expr></argument>)</argument_list></call><operator pos:start="316:169" pos:end="316:169">.</operator><call pos:start="316:170" pos:end="316:180"><name pos:start="316:170" pos:end="316:178">getPoints</name><argument_list pos:start="316:179" pos:end="316:180">()</argument_list></call><index pos:start="316:181" pos:end="316:183">[<expr pos:start="316:182" pos:end="316:182"><literal type="number" pos:start="316:182" pos:end="316:182">0</literal></expr>]</index><operator pos:start="316:184" pos:end="316:184">.</operator><call pos:start="316:185" pos:end="316:192"><name pos:start="316:185" pos:end="316:190">getLon</name><argument_list pos:start="316:191" pos:end="316:192">()</argument_list></call> <operator pos:start="316:194" pos:end="316:194">*</operator> <literal type="number" pos:start="316:196" pos:end="316:203">1000000d</literal></expr></argument>)</argument_list></call> <operator pos:start="316:206" pos:end="316:206">/</operator> <literal type="number" pos:start="316:208" pos:end="316:215">1000000d</literal><operator pos:start="316:216" pos:end="316:216">)</operator><operator pos:start="316:217" pos:end="316:217">)</operator></expr>)</condition>
					<block pos:start="317:41" pos:end="319:41">{<block_content pos:start="318:49" pos:end="318:79">
						<expr_stmt pos:start="318:49" pos:end="318:79"><expr pos:start="318:49" pos:end="318:78"><call pos:start="318:49" pos:end="318:78"><name pos:start="318:49" pos:end="318:68"><name pos:start="318:49" pos:end="318:64">allPriorityLines</name><operator pos:start="318:65" pos:end="318:65">.</operator><name pos:start="318:66" pos:end="318:68">add</name></name><argument_list pos:start="318:69" pos:end="318:78">(<argument pos:start="318:70" pos:end="318:77"><expr pos:start="318:70" pos:end="318:77"><name pos:start="318:70" pos:end="318:77">polyline</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					</block_content>}</block></if></if_stmt>
				</block_content>}</block></if></if_stmt>
	
				<comment type="line" pos:start="322:33" pos:end="322:88">// if it's a priority line, draw it red; otherwise, grey</comment>
				<expr_stmt pos:start="323:33" pos:end="323:58"><expr pos:start="323:33" pos:end="323:57"><call pos:start="323:33" pos:end="323:57"><name pos:start="323:33" pos:end="323:49"><name pos:start="323:33" pos:end="323:40">polyline</name><operator pos:start="323:41" pos:end="323:41">.</operator><name pos:start="323:42" pos:end="323:49">setColor</name></name><argument_list pos:start="323:50" pos:end="323:57">(<argument pos:start="323:51" pos:end="323:56"><expr pos:start="323:51" pos:end="323:56"><literal type="string" pos:start="323:51" pos:end="323:56">"#444"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

				<for pos:start="325:33" pos:end="362:33">for <control pos:start="325:37" pos:end="325:71">(<init pos:start="325:38" pos:end="325:70"><decl pos:start="325:38" pos:end="325:70"><type pos:start="325:38" pos:end="325:46"><name pos:start="325:38" pos:end="325:46">LPolyline</name></type> <name pos:start="325:48" pos:end="325:51">line</name> <range pos:start="325:53" pos:end="325:70">: <expr pos:start="325:55" pos:end="325:70"><name pos:start="325:55" pos:end="325:70">allPriorityLines</name></expr></range></decl></init>)</control> <block pos:start="325:73" pos:end="362:33">{<block_content pos:start="326:41" pos:end="361:41">
					<if_stmt pos:start="326:41" pos:end="361:41"><if pos:start="326:41" pos:end="361:41">if <condition pos:start="326:44" pos:end="333:187">(<expr pos:start="326:45" pos:end="333:186"><operator pos:start="326:45" pos:end="326:45">(</operator><operator pos:start="326:46" pos:end="326:46">(</operator><operator pos:start="326:47" pos:end="326:47">(</operator><name pos:start="326:48" pos:end="326:53">double</name><operator pos:start="326:54" pos:end="326:54">)</operator><call pos:start="326:55" pos:end="326:103"><name pos:start="326:55" pos:end="326:64"><name pos:start="326:55" pos:end="326:58">Math</name><operator pos:start="326:59" pos:end="326:59">.</operator><name pos:start="326:60" pos:end="326:64">round</name></name><argument_list pos:start="326:65" pos:end="326:103">(<argument pos:start="326:66" pos:end="326:102"><expr pos:start="326:66" pos:end="326:102"><call pos:start="326:66" pos:end="326:81"><name pos:start="326:66" pos:end="326:79"><name pos:start="326:66" pos:end="326:69">line</name><operator pos:start="326:70" pos:end="326:70">.</operator><name pos:start="326:71" pos:end="326:79">getPoints</name></name><argument_list pos:start="326:80" pos:end="326:81">()</argument_list></call><index pos:start="326:82" pos:end="326:84">[<expr pos:start="326:83" pos:end="326:83"><literal type="number" pos:start="326:83" pos:end="326:83">0</literal></expr>]</index><operator pos:start="326:85" pos:end="326:85">.</operator><call pos:start="326:86" pos:end="326:93"><name pos:start="326:86" pos:end="326:91">getLat</name><argument_list pos:start="326:92" pos:end="326:93">()</argument_list></call> <operator pos:start="326:95" pos:end="326:95">*</operator> <literal type="number" pos:start="326:97" pos:end="326:102">10000d</literal></expr></argument>)</argument_list></call> <operator pos:start="326:105" pos:end="326:105">/</operator> <literal type="number" pos:start="326:107" pos:end="326:112">10000d</literal> <operator pos:start="326:114" pos:end="326:115">==</operator> <operator pos:start="326:117" pos:end="326:117">(</operator><name pos:start="326:118" pos:end="326:123">double</name><operator pos:start="326:124" pos:end="326:124">)</operator><call pos:start="326:125" pos:end="326:177"><name pos:start="326:125" pos:end="326:134"><name pos:start="326:125" pos:end="326:128">Math</name><operator pos:start="326:129" pos:end="326:129">.</operator><name pos:start="326:130" pos:end="326:134">round</name></name><argument_list pos:start="326:135" pos:end="326:177">(<argument pos:start="326:136" pos:end="326:176"><expr pos:start="326:136" pos:end="326:176"><call pos:start="326:136" pos:end="326:155"><name pos:start="326:136" pos:end="326:153"><name pos:start="326:136" pos:end="326:143">polyline</name><operator pos:start="326:144" pos:end="326:144">.</operator><name pos:start="326:145" pos:end="326:153">getPoints</name></name><argument_list pos:start="326:154" pos:end="326:155">()</argument_list></call><index pos:start="326:156" pos:end="326:158">[<expr pos:start="326:157" pos:end="326:157"><literal type="number" pos:start="326:157" pos:end="326:157">0</literal></expr>]</index><operator pos:start="326:159" pos:end="326:159">.</operator><call pos:start="326:160" pos:end="326:167"><name pos:start="326:160" pos:end="326:165">getLat</name><argument_list pos:start="326:166" pos:end="326:167">()</argument_list></call> <operator pos:start="326:169" pos:end="326:169">*</operator> <literal type="number" pos:start="326:171" pos:end="326:176">10000d</literal></expr></argument>)</argument_list></call> <operator pos:start="326:179" pos:end="326:179">/</operator> <literal type="number" pos:start="326:181" pos:end="326:186">10000d</literal><operator pos:start="326:187" pos:end="326:187">)</operator>
					<operator pos:start="327:41" pos:end="327:42">&amp;&amp;</operator> <operator pos:start="327:44" pos:end="327:44">(</operator><operator pos:start="327:45" pos:end="327:45">(</operator><name pos:start="327:46" pos:end="327:51">double</name><operator pos:start="327:52" pos:end="327:52">)</operator><call pos:start="327:53" pos:end="327:101"><name pos:start="327:53" pos:end="327:62"><name pos:start="327:53" pos:end="327:56">Math</name><operator pos:start="327:57" pos:end="327:57">.</operator><name pos:start="327:58" pos:end="327:62">round</name></name><argument_list pos:start="327:63" pos:end="327:101">(<argument pos:start="327:64" pos:end="327:100"><expr pos:start="327:64" pos:end="327:100"><call pos:start="327:64" pos:end="327:79"><name pos:start="327:64" pos:end="327:77"><name pos:start="327:64" pos:end="327:67">line</name><operator pos:start="327:68" pos:end="327:68">.</operator><name pos:start="327:69" pos:end="327:77">getPoints</name></name><argument_list pos:start="327:78" pos:end="327:79">()</argument_list></call><index pos:start="327:80" pos:end="327:82">[<expr pos:start="327:81" pos:end="327:81"><literal type="number" pos:start="327:81" pos:end="327:81">0</literal></expr>]</index><operator pos:start="327:83" pos:end="327:83">.</operator><call pos:start="327:84" pos:end="327:91"><name pos:start="327:84" pos:end="327:89">getLon</name><argument_list pos:start="327:90" pos:end="327:91">()</argument_list></call> <operator pos:start="327:93" pos:end="327:93">*</operator> <literal type="number" pos:start="327:95" pos:end="327:100">10000d</literal></expr></argument>)</argument_list></call> <operator pos:start="327:103" pos:end="327:103">/</operator> <literal type="number" pos:start="327:105" pos:end="327:110">10000d</literal> <operator pos:start="327:112" pos:end="327:113">==</operator> <operator pos:start="327:115" pos:end="327:115">(</operator><name pos:start="327:116" pos:end="327:121">double</name><operator pos:start="327:122" pos:end="327:122">)</operator><call pos:start="327:123" pos:end="327:175"><name pos:start="327:123" pos:end="327:132"><name pos:start="327:123" pos:end="327:126">Math</name><operator pos:start="327:127" pos:end="327:127">.</operator><name pos:start="327:128" pos:end="327:132">round</name></name><argument_list pos:start="327:133" pos:end="327:175">(<argument pos:start="327:134" pos:end="327:174"><expr pos:start="327:134" pos:end="327:174"><call pos:start="327:134" pos:end="327:153"><name pos:start="327:134" pos:end="327:151"><name pos:start="327:134" pos:end="327:141">polyline</name><operator pos:start="327:142" pos:end="327:142">.</operator><name pos:start="327:143" pos:end="327:151">getPoints</name></name><argument_list pos:start="327:152" pos:end="327:153">()</argument_list></call><index pos:start="327:154" pos:end="327:156">[<expr pos:start="327:155" pos:end="327:155"><literal type="number" pos:start="327:155" pos:end="327:155">0</literal></expr>]</index><operator pos:start="327:157" pos:end="327:157">.</operator><call pos:start="327:158" pos:end="327:165"><name pos:start="327:158" pos:end="327:163">getLon</name><argument_list pos:start="327:164" pos:end="327:165">()</argument_list></call> <operator pos:start="327:167" pos:end="327:167">*</operator> <literal type="number" pos:start="327:169" pos:end="327:174">10000d</literal></expr></argument>)</argument_list></call> <operator pos:start="327:177" pos:end="327:177">/</operator> <literal type="number" pos:start="327:179" pos:end="327:184">10000d</literal><operator pos:start="327:185" pos:end="327:185">)</operator>
					<operator pos:start="328:41" pos:end="328:42">&amp;&amp;</operator> <operator pos:start="328:44" pos:end="328:44">(</operator><operator pos:start="328:45" pos:end="328:45">(</operator><name pos:start="328:46" pos:end="328:51">double</name><operator pos:start="328:52" pos:end="328:52">)</operator><call pos:start="328:53" pos:end="328:101"><name pos:start="328:53" pos:end="328:62"><name pos:start="328:53" pos:end="328:56">Math</name><operator pos:start="328:57" pos:end="328:57">.</operator><name pos:start="328:58" pos:end="328:62">round</name></name><argument_list pos:start="328:63" pos:end="328:101">(<argument pos:start="328:64" pos:end="328:100"><expr pos:start="328:64" pos:end="328:100"><call pos:start="328:64" pos:end="328:79"><name pos:start="328:64" pos:end="328:77"><name pos:start="328:64" pos:end="328:67">line</name><operator pos:start="328:68" pos:end="328:68">.</operator><name pos:start="328:69" pos:end="328:77">getPoints</name></name><argument_list pos:start="328:78" pos:end="328:79">()</argument_list></call><index pos:start="328:80" pos:end="328:82">[<expr pos:start="328:81" pos:end="328:81"><literal type="number" pos:start="328:81" pos:end="328:81">1</literal></expr>]</index><operator pos:start="328:83" pos:end="328:83">.</operator><call pos:start="328:84" pos:end="328:91"><name pos:start="328:84" pos:end="328:89">getLat</name><argument_list pos:start="328:90" pos:end="328:91">()</argument_list></call> <operator pos:start="328:93" pos:end="328:93">*</operator> <literal type="number" pos:start="328:95" pos:end="328:100">10000d</literal></expr></argument>)</argument_list></call> <operator pos:start="328:103" pos:end="328:103">/</operator> <literal type="number" pos:start="328:105" pos:end="328:110">10000d</literal> <operator pos:start="328:112" pos:end="328:113">==</operator> <operator pos:start="328:115" pos:end="328:115">(</operator><name pos:start="328:116" pos:end="328:121">double</name><operator pos:start="328:122" pos:end="328:122">)</operator><call pos:start="328:123" pos:end="328:175"><name pos:start="328:123" pos:end="328:132"><name pos:start="328:123" pos:end="328:126">Math</name><operator pos:start="328:127" pos:end="328:127">.</operator><name pos:start="328:128" pos:end="328:132">round</name></name><argument_list pos:start="328:133" pos:end="328:175">(<argument pos:start="328:134" pos:end="328:174"><expr pos:start="328:134" pos:end="328:174"><call pos:start="328:134" pos:end="328:153"><name pos:start="328:134" pos:end="328:151"><name pos:start="328:134" pos:end="328:141">polyline</name><operator pos:start="328:142" pos:end="328:142">.</operator><name pos:start="328:143" pos:end="328:151">getPoints</name></name><argument_list pos:start="328:152" pos:end="328:153">()</argument_list></call><index pos:start="328:154" pos:end="328:156">[<expr pos:start="328:155" pos:end="328:155"><literal type="number" pos:start="328:155" pos:end="328:155">1</literal></expr>]</index><operator pos:start="328:157" pos:end="328:157">.</operator><call pos:start="328:158" pos:end="328:165"><name pos:start="328:158" pos:end="328:163">getLat</name><argument_list pos:start="328:164" pos:end="328:165">()</argument_list></call> <operator pos:start="328:167" pos:end="328:167">*</operator> <literal type="number" pos:start="328:169" pos:end="328:174">10000d</literal></expr></argument>)</argument_list></call> <operator pos:start="328:177" pos:end="328:177">/</operator> <literal type="number" pos:start="328:179" pos:end="328:184">10000d</literal><operator pos:start="328:185" pos:end="328:185">)</operator>
					<operator pos:start="329:41" pos:end="329:42">&amp;&amp;</operator> <operator pos:start="329:44" pos:end="329:44">(</operator><operator pos:start="329:45" pos:end="329:45">(</operator><name pos:start="329:46" pos:end="329:51">double</name><operator pos:start="329:52" pos:end="329:52">)</operator><call pos:start="329:53" pos:end="329:101"><name pos:start="329:53" pos:end="329:62"><name pos:start="329:53" pos:end="329:56">Math</name><operator pos:start="329:57" pos:end="329:57">.</operator><name pos:start="329:58" pos:end="329:62">round</name></name><argument_list pos:start="329:63" pos:end="329:101">(<argument pos:start="329:64" pos:end="329:100"><expr pos:start="329:64" pos:end="329:100"><call pos:start="329:64" pos:end="329:79"><name pos:start="329:64" pos:end="329:77"><name pos:start="329:64" pos:end="329:67">line</name><operator pos:start="329:68" pos:end="329:68">.</operator><name pos:start="329:69" pos:end="329:77">getPoints</name></name><argument_list pos:start="329:78" pos:end="329:79">()</argument_list></call><index pos:start="329:80" pos:end="329:82">[<expr pos:start="329:81" pos:end="329:81"><literal type="number" pos:start="329:81" pos:end="329:81">1</literal></expr>]</index><operator pos:start="329:83" pos:end="329:83">.</operator><call pos:start="329:84" pos:end="329:91"><name pos:start="329:84" pos:end="329:89">getLon</name><argument_list pos:start="329:90" pos:end="329:91">()</argument_list></call> <operator pos:start="329:93" pos:end="329:93">*</operator> <literal type="number" pos:start="329:95" pos:end="329:100">10000d</literal></expr></argument>)</argument_list></call> <operator pos:start="329:103" pos:end="329:103">/</operator> <literal type="number" pos:start="329:105" pos:end="329:110">10000d</literal> <operator pos:start="329:112" pos:end="329:113">==</operator> <operator pos:start="329:115" pos:end="329:115">(</operator><name pos:start="329:116" pos:end="329:121">double</name><operator pos:start="329:122" pos:end="329:122">)</operator><call pos:start="329:123" pos:end="329:175"><name pos:start="329:123" pos:end="329:132"><name pos:start="329:123" pos:end="329:126">Math</name><operator pos:start="329:127" pos:end="329:127">.</operator><name pos:start="329:128" pos:end="329:132">round</name></name><argument_list pos:start="329:133" pos:end="329:175">(<argument pos:start="329:134" pos:end="329:174"><expr pos:start="329:134" pos:end="329:174"><call pos:start="329:134" pos:end="329:153"><name pos:start="329:134" pos:end="329:151"><name pos:start="329:134" pos:end="329:141">polyline</name><operator pos:start="329:142" pos:end="329:142">.</operator><name pos:start="329:143" pos:end="329:151">getPoints</name></name><argument_list pos:start="329:152" pos:end="329:153">()</argument_list></call><index pos:start="329:154" pos:end="329:156">[<expr pos:start="329:155" pos:end="329:155"><literal type="number" pos:start="329:155" pos:end="329:155">1</literal></expr>]</index><operator pos:start="329:157" pos:end="329:157">.</operator><call pos:start="329:158" pos:end="329:165"><name pos:start="329:158" pos:end="329:163">getLon</name><argument_list pos:start="329:164" pos:end="329:165">()</argument_list></call> <operator pos:start="329:167" pos:end="329:167">*</operator> <literal type="number" pos:start="329:169" pos:end="329:174">10000d</literal></expr></argument>)</argument_list></call> <operator pos:start="329:177" pos:end="329:177">/</operator> <literal type="number" pos:start="329:179" pos:end="329:184">10000d</literal><operator pos:start="329:185" pos:end="329:185">)</operator><operator pos:start="329:186" pos:end="329:186">)</operator>
					<operator pos:start="330:41" pos:end="330:42">||</operator> <operator pos:start="330:44" pos:end="330:44">(</operator><operator pos:start="330:45" pos:end="330:45">(</operator><operator pos:start="330:46" pos:end="330:46">(</operator><name pos:start="330:47" pos:end="330:52">double</name><operator pos:start="330:53" pos:end="330:53">)</operator><call pos:start="330:54" pos:end="330:102"><name pos:start="330:54" pos:end="330:63"><name pos:start="330:54" pos:end="330:57">Math</name><operator pos:start="330:58" pos:end="330:58">.</operator><name pos:start="330:59" pos:end="330:63">round</name></name><argument_list pos:start="330:64" pos:end="330:102">(<argument pos:start="330:65" pos:end="330:101"><expr pos:start="330:65" pos:end="330:101"><call pos:start="330:65" pos:end="330:80"><name pos:start="330:65" pos:end="330:78"><name pos:start="330:65" pos:end="330:68">line</name><operator pos:start="330:69" pos:end="330:69">.</operator><name pos:start="330:70" pos:end="330:78">getPoints</name></name><argument_list pos:start="330:79" pos:end="330:80">()</argument_list></call><index pos:start="330:81" pos:end="330:83">[<expr pos:start="330:82" pos:end="330:82"><literal type="number" pos:start="330:82" pos:end="330:82">0</literal></expr>]</index><operator pos:start="330:84" pos:end="330:84">.</operator><call pos:start="330:85" pos:end="330:92"><name pos:start="330:85" pos:end="330:90">getLat</name><argument_list pos:start="330:91" pos:end="330:92">()</argument_list></call> <operator pos:start="330:94" pos:end="330:94">*</operator> <literal type="number" pos:start="330:96" pos:end="330:101">10000d</literal></expr></argument>)</argument_list></call> <operator pos:start="330:104" pos:end="330:104">/</operator> <literal type="number" pos:start="330:106" pos:end="330:111">10000d</literal> <operator pos:start="330:113" pos:end="330:114">==</operator> <operator pos:start="330:116" pos:end="330:116">(</operator><name pos:start="330:117" pos:end="330:122">double</name><operator pos:start="330:123" pos:end="330:123">)</operator><call pos:start="330:124" pos:end="330:176"><name pos:start="330:124" pos:end="330:133"><name pos:start="330:124" pos:end="330:127">Math</name><operator pos:start="330:128" pos:end="330:128">.</operator><name pos:start="330:129" pos:end="330:133">round</name></name><argument_list pos:start="330:134" pos:end="330:176">(<argument pos:start="330:135" pos:end="330:175"><expr pos:start="330:135" pos:end="330:175"><call pos:start="330:135" pos:end="330:154"><name pos:start="330:135" pos:end="330:152"><name pos:start="330:135" pos:end="330:142">polyline</name><operator pos:start="330:143" pos:end="330:143">.</operator><name pos:start="330:144" pos:end="330:152">getPoints</name></name><argument_list pos:start="330:153" pos:end="330:154">()</argument_list></call><index pos:start="330:155" pos:end="330:157">[<expr pos:start="330:156" pos:end="330:156"><literal type="number" pos:start="330:156" pos:end="330:156">1</literal></expr>]</index><operator pos:start="330:158" pos:end="330:158">.</operator><call pos:start="330:159" pos:end="330:166"><name pos:start="330:159" pos:end="330:164">getLat</name><argument_list pos:start="330:165" pos:end="330:166">()</argument_list></call> <operator pos:start="330:168" pos:end="330:168">*</operator> <literal type="number" pos:start="330:170" pos:end="330:175">10000d</literal></expr></argument>)</argument_list></call> <operator pos:start="330:178" pos:end="330:178">/</operator> <literal type="number" pos:start="330:180" pos:end="330:185">10000d</literal><operator pos:start="330:186" pos:end="330:186">)</operator>
					<operator pos:start="331:41" pos:end="331:42">&amp;&amp;</operator> <operator pos:start="331:44" pos:end="331:44">(</operator><operator pos:start="331:45" pos:end="331:45">(</operator><name pos:start="331:46" pos:end="331:51">double</name><operator pos:start="331:52" pos:end="331:52">)</operator><call pos:start="331:53" pos:end="331:101"><name pos:start="331:53" pos:end="331:62"><name pos:start="331:53" pos:end="331:56">Math</name><operator pos:start="331:57" pos:end="331:57">.</operator><name pos:start="331:58" pos:end="331:62">round</name></name><argument_list pos:start="331:63" pos:end="331:101">(<argument pos:start="331:64" pos:end="331:100"><expr pos:start="331:64" pos:end="331:100"><call pos:start="331:64" pos:end="331:79"><name pos:start="331:64" pos:end="331:77"><name pos:start="331:64" pos:end="331:67">line</name><operator pos:start="331:68" pos:end="331:68">.</operator><name pos:start="331:69" pos:end="331:77">getPoints</name></name><argument_list pos:start="331:78" pos:end="331:79">()</argument_list></call><index pos:start="331:80" pos:end="331:82">[<expr pos:start="331:81" pos:end="331:81"><literal type="number" pos:start="331:81" pos:end="331:81">0</literal></expr>]</index><operator pos:start="331:83" pos:end="331:83">.</operator><call pos:start="331:84" pos:end="331:91"><name pos:start="331:84" pos:end="331:89">getLon</name><argument_list pos:start="331:90" pos:end="331:91">()</argument_list></call> <operator pos:start="331:93" pos:end="331:93">*</operator> <literal type="number" pos:start="331:95" pos:end="331:100">10000d</literal></expr></argument>)</argument_list></call> <operator pos:start="331:103" pos:end="331:103">/</operator> <literal type="number" pos:start="331:105" pos:end="331:110">10000d</literal> <operator pos:start="331:112" pos:end="331:113">==</operator> <operator pos:start="331:115" pos:end="331:115">(</operator><name pos:start="331:116" pos:end="331:121">double</name><operator pos:start="331:122" pos:end="331:122">)</operator><call pos:start="331:123" pos:end="331:175"><name pos:start="331:123" pos:end="331:132"><name pos:start="331:123" pos:end="331:126">Math</name><operator pos:start="331:127" pos:end="331:127">.</operator><name pos:start="331:128" pos:end="331:132">round</name></name><argument_list pos:start="331:133" pos:end="331:175">(<argument pos:start="331:134" pos:end="331:174"><expr pos:start="331:134" pos:end="331:174"><call pos:start="331:134" pos:end="331:153"><name pos:start="331:134" pos:end="331:151"><name pos:start="331:134" pos:end="331:141">polyline</name><operator pos:start="331:142" pos:end="331:142">.</operator><name pos:start="331:143" pos:end="331:151">getPoints</name></name><argument_list pos:start="331:152" pos:end="331:153">()</argument_list></call><index pos:start="331:154" pos:end="331:156">[<expr pos:start="331:155" pos:end="331:155"><literal type="number" pos:start="331:155" pos:end="331:155">1</literal></expr>]</index><operator pos:start="331:157" pos:end="331:157">.</operator><call pos:start="331:158" pos:end="331:165"><name pos:start="331:158" pos:end="331:163">getLon</name><argument_list pos:start="331:164" pos:end="331:165">()</argument_list></call> <operator pos:start="331:167" pos:end="331:167">*</operator> <literal type="number" pos:start="331:169" pos:end="331:174">10000d</literal></expr></argument>)</argument_list></call> <operator pos:start="331:177" pos:end="331:177">/</operator> <literal type="number" pos:start="331:179" pos:end="331:184">10000d</literal><operator pos:start="331:185" pos:end="331:185">)</operator>
					<operator pos:start="332:41" pos:end="332:42">&amp;&amp;</operator> <operator pos:start="332:44" pos:end="332:44">(</operator><operator pos:start="332:45" pos:end="332:45">(</operator><name pos:start="332:46" pos:end="332:51">double</name><operator pos:start="332:52" pos:end="332:52">)</operator><call pos:start="332:53" pos:end="332:101"><name pos:start="332:53" pos:end="332:62"><name pos:start="332:53" pos:end="332:56">Math</name><operator pos:start="332:57" pos:end="332:57">.</operator><name pos:start="332:58" pos:end="332:62">round</name></name><argument_list pos:start="332:63" pos:end="332:101">(<argument pos:start="332:64" pos:end="332:100"><expr pos:start="332:64" pos:end="332:100"><call pos:start="332:64" pos:end="332:79"><name pos:start="332:64" pos:end="332:77"><name pos:start="332:64" pos:end="332:67">line</name><operator pos:start="332:68" pos:end="332:68">.</operator><name pos:start="332:69" pos:end="332:77">getPoints</name></name><argument_list pos:start="332:78" pos:end="332:79">()</argument_list></call><index pos:start="332:80" pos:end="332:82">[<expr pos:start="332:81" pos:end="332:81"><literal type="number" pos:start="332:81" pos:end="332:81">1</literal></expr>]</index><operator pos:start="332:83" pos:end="332:83">.</operator><call pos:start="332:84" pos:end="332:91"><name pos:start="332:84" pos:end="332:89">getLat</name><argument_list pos:start="332:90" pos:end="332:91">()</argument_list></call> <operator pos:start="332:93" pos:end="332:93">*</operator> <literal type="number" pos:start="332:95" pos:end="332:100">10000d</literal></expr></argument>)</argument_list></call> <operator pos:start="332:103" pos:end="332:103">/</operator> <literal type="number" pos:start="332:105" pos:end="332:110">10000d</literal> <operator pos:start="332:112" pos:end="332:113">==</operator> <operator pos:start="332:115" pos:end="332:115">(</operator><name pos:start="332:116" pos:end="332:121">double</name><operator pos:start="332:122" pos:end="332:122">)</operator><call pos:start="332:123" pos:end="332:175"><name pos:start="332:123" pos:end="332:132"><name pos:start="332:123" pos:end="332:126">Math</name><operator pos:start="332:127" pos:end="332:127">.</operator><name pos:start="332:128" pos:end="332:132">round</name></name><argument_list pos:start="332:133" pos:end="332:175">(<argument pos:start="332:134" pos:end="332:174"><expr pos:start="332:134" pos:end="332:174"><call pos:start="332:134" pos:end="332:153"><name pos:start="332:134" pos:end="332:151"><name pos:start="332:134" pos:end="332:141">polyline</name><operator pos:start="332:142" pos:end="332:142">.</operator><name pos:start="332:143" pos:end="332:151">getPoints</name></name><argument_list pos:start="332:152" pos:end="332:153">()</argument_list></call><index pos:start="332:154" pos:end="332:156">[<expr pos:start="332:155" pos:end="332:155"><literal type="number" pos:start="332:155" pos:end="332:155">0</literal></expr>]</index><operator pos:start="332:157" pos:end="332:157">.</operator><call pos:start="332:158" pos:end="332:165"><name pos:start="332:158" pos:end="332:163">getLat</name><argument_list pos:start="332:164" pos:end="332:165">()</argument_list></call> <operator pos:start="332:167" pos:end="332:167">*</operator> <literal type="number" pos:start="332:169" pos:end="332:174">10000d</literal></expr></argument>)</argument_list></call> <operator pos:start="332:177" pos:end="332:177">/</operator> <literal type="number" pos:start="332:179" pos:end="332:184">10000d</literal><operator pos:start="332:185" pos:end="332:185">)</operator>
					<operator pos:start="333:41" pos:end="333:42">&amp;&amp;</operator> <operator pos:start="333:44" pos:end="333:44">(</operator><operator pos:start="333:45" pos:end="333:45">(</operator><name pos:start="333:46" pos:end="333:51">double</name><operator pos:start="333:52" pos:end="333:52">)</operator><call pos:start="333:53" pos:end="333:101"><name pos:start="333:53" pos:end="333:62"><name pos:start="333:53" pos:end="333:56">Math</name><operator pos:start="333:57" pos:end="333:57">.</operator><name pos:start="333:58" pos:end="333:62">round</name></name><argument_list pos:start="333:63" pos:end="333:101">(<argument pos:start="333:64" pos:end="333:100"><expr pos:start="333:64" pos:end="333:100"><call pos:start="333:64" pos:end="333:79"><name pos:start="333:64" pos:end="333:77"><name pos:start="333:64" pos:end="333:67">line</name><operator pos:start="333:68" pos:end="333:68">.</operator><name pos:start="333:69" pos:end="333:77">getPoints</name></name><argument_list pos:start="333:78" pos:end="333:79">()</argument_list></call><index pos:start="333:80" pos:end="333:82">[<expr pos:start="333:81" pos:end="333:81"><literal type="number" pos:start="333:81" pos:end="333:81">1</literal></expr>]</index><operator pos:start="333:83" pos:end="333:83">.</operator><call pos:start="333:84" pos:end="333:91"><name pos:start="333:84" pos:end="333:89">getLon</name><argument_list pos:start="333:90" pos:end="333:91">()</argument_list></call> <operator pos:start="333:93" pos:end="333:93">*</operator> <literal type="number" pos:start="333:95" pos:end="333:100">10000d</literal></expr></argument>)</argument_list></call> <operator pos:start="333:103" pos:end="333:103">/</operator> <literal type="number" pos:start="333:105" pos:end="333:110">10000d</literal> <operator pos:start="333:112" pos:end="333:113">==</operator> <operator pos:start="333:115" pos:end="333:115">(</operator><name pos:start="333:116" pos:end="333:121">double</name><operator pos:start="333:122" pos:end="333:122">)</operator><call pos:start="333:123" pos:end="333:175"><name pos:start="333:123" pos:end="333:132"><name pos:start="333:123" pos:end="333:126">Math</name><operator pos:start="333:127" pos:end="333:127">.</operator><name pos:start="333:128" pos:end="333:132">round</name></name><argument_list pos:start="333:133" pos:end="333:175">(<argument pos:start="333:134" pos:end="333:174"><expr pos:start="333:134" pos:end="333:174"><call pos:start="333:134" pos:end="333:153"><name pos:start="333:134" pos:end="333:151"><name pos:start="333:134" pos:end="333:141">polyline</name><operator pos:start="333:142" pos:end="333:142">.</operator><name pos:start="333:143" pos:end="333:151">getPoints</name></name><argument_list pos:start="333:152" pos:end="333:153">()</argument_list></call><index pos:start="333:154" pos:end="333:156">[<expr pos:start="333:155" pos:end="333:155"><literal type="number" pos:start="333:155" pos:end="333:155">0</literal></expr>]</index><operator pos:start="333:157" pos:end="333:157">.</operator><call pos:start="333:158" pos:end="333:165"><name pos:start="333:158" pos:end="333:163">getLon</name><argument_list pos:start="333:164" pos:end="333:165">()</argument_list></call> <operator pos:start="333:167" pos:end="333:167">*</operator> <literal type="number" pos:start="333:169" pos:end="333:174">10000d</literal></expr></argument>)</argument_list></call> <operator pos:start="333:177" pos:end="333:177">/</operator> <literal type="number" pos:start="333:179" pos:end="333:184">10000d</literal><operator pos:start="333:185" pos:end="333:185">)</operator><operator pos:start="333:186" pos:end="333:186">)</operator></expr>)</condition>
					<block pos:start="334:41" pos:end="361:41">{<block_content pos:start="336:49" pos:end="360:73">
						<comment type="line" pos:start="335:49" pos:end="335:135">// if a priority line endpoint was dragged, change that information in allPrioritySides</comment>
						<if_stmt pos:start="336:49" pos:end="354:49"><if pos:start="336:49" pos:end="354:49">if <condition pos:start="336:52" pos:end="336:99">(<expr pos:start="336:53" pos:end="336:98"><call pos:start="336:53" pos:end="336:98"><name pos:start="336:53" pos:end="336:96"><name pos:start="336:53" pos:end="336:73">markerDragEndListener</name><operator pos:start="336:74" pos:end="336:74">.</operator><name pos:start="336:75" pos:end="336:96">getDraggedPriorityLine</name></name><argument_list pos:start="336:97" pos:end="336:98">()</argument_list></call></expr>)</condition> <block pos:start="336:101" pos:end="354:49">{<block_content pos:start="337:57" pos:end="353:93">
							<for pos:start="337:57" pos:end="352:57">for <control pos:start="337:61" pos:end="337:105">(<init pos:start="337:62" pos:end="337:71"><decl pos:start="337:62" pos:end="337:70"><type pos:start="337:62" pos:end="337:64"><name pos:start="337:62" pos:end="337:64">int</name></type> <name pos:start="337:66" pos:end="337:66">p</name> <init pos:start="337:68" pos:end="337:70">= <expr pos:start="337:70" pos:end="337:70"><literal type="number" pos:start="337:70" pos:end="337:70">0</literal></expr></init></decl>;</init> <condition pos:start="337:73" pos:end="337:100"><expr pos:start="337:73" pos:end="337:99"><name pos:start="337:73" pos:end="337:73">p</name> <operator pos:start="337:75" pos:end="337:75">&lt;</operator> <call pos:start="337:77" pos:end="337:99"><name pos:start="337:77" pos:end="337:97"><name pos:start="337:77" pos:end="337:92">allPrioritySides</name><operator pos:start="337:93" pos:end="337:93">.</operator><name pos:start="337:94" pos:end="337:97">size</name></name><argument_list pos:start="337:98" pos:end="337:99">()</argument_list></call></expr>;</condition> <incr pos:start="337:102" pos:end="337:104"><expr pos:start="337:102" pos:end="337:104"><name pos:start="337:102" pos:end="337:102">p</name><operator pos:start="337:103" pos:end="337:104">++</operator></expr></incr>)</control> <block pos:start="337:107" pos:end="352:57">{<block_content pos:start="338:65" pos:end="351:65">
								<for pos:start="338:65" pos:end="351:65">for <control pos:start="338:69" pos:end="338:137">(<init pos:start="338:70" pos:end="338:79"><decl pos:start="338:70" pos:end="338:78"><type pos:start="338:70" pos:end="338:72"><name pos:start="338:70" pos:end="338:72">int</name></type> <name pos:start="338:74" pos:end="338:74">q</name> <init pos:start="338:76" pos:end="338:78">= <expr pos:start="338:78" pos:end="338:78"><literal type="number" pos:start="338:78" pos:end="338:78">0</literal></expr></init></decl>;</init> <condition pos:start="338:81" pos:end="338:132"><expr pos:start="338:81" pos:end="338:131"><name pos:start="338:81" pos:end="338:81">q</name> <operator pos:start="338:83" pos:end="338:83">&lt;</operator> <call pos:start="338:85" pos:end="338:107"><name pos:start="338:85" pos:end="338:104"><name pos:start="338:85" pos:end="338:100">allPrioritySides</name><operator pos:start="338:101" pos:end="338:101">.</operator><name pos:start="338:102" pos:end="338:104">get</name></name><argument_list pos:start="338:105" pos:end="338:107">(<argument pos:start="338:106" pos:end="338:106"><expr pos:start="338:106" pos:end="338:106"><name pos:start="338:106" pos:end="338:106">p</name></expr></argument>)</argument_list></call><operator pos:start="338:108" pos:end="338:108">.</operator><call pos:start="338:109" pos:end="338:124"><name pos:start="338:109" pos:end="338:122">getCoordinates</name><argument_list pos:start="338:123" pos:end="338:124">()</argument_list></call><operator pos:start="338:125" pos:end="338:125">.</operator><call pos:start="338:126" pos:end="338:131"><name pos:start="338:126" pos:end="338:129">size</name><argument_list pos:start="338:130" pos:end="338:131">()</argument_list></call></expr>;</condition> <incr pos:start="338:134" pos:end="338:136"><expr pos:start="338:134" pos:end="338:136"><name pos:start="338:134" pos:end="338:134">q</name><operator pos:start="338:135" pos:end="338:136">++</operator></expr></incr>)</control> <block pos:start="338:139" pos:end="351:65">{<block_content pos:start="339:73" pos:end="350:73">
									<if_stmt pos:start="339:73" pos:end="344:73"><if pos:start="339:73" pos:end="344:73">if <condition pos:start="339:76" pos:end="340:247">(<expr pos:start="339:77" pos:end="340:245"><operator pos:start="339:77" pos:end="339:77">(</operator><name pos:start="339:78" pos:end="339:83">double</name><operator pos:start="339:84" pos:end="339:84">)</operator><call pos:start="339:85" pos:end="339:166"><name pos:start="339:85" pos:end="339:94"><name pos:start="339:85" pos:end="339:88">Math</name><operator pos:start="339:89" pos:end="339:89">.</operator><name pos:start="339:90" pos:end="339:94">round</name></name><argument_list pos:start="339:95" pos:end="339:166">(<argument pos:start="339:96" pos:end="339:165"><expr pos:start="339:96" pos:end="339:165"><call pos:start="339:96" pos:end="339:118"><name pos:start="339:96" pos:end="339:115"><name pos:start="339:96" pos:end="339:111">allPrioritySides</name><operator pos:start="339:112" pos:end="339:112">.</operator><name pos:start="339:113" pos:end="339:115">get</name></name><argument_list pos:start="339:116" pos:end="339:118">(<argument pos:start="339:117" pos:end="339:117"><expr pos:start="339:117" pos:end="339:117"><name pos:start="339:117" pos:end="339:117">p</name></expr></argument>)</argument_list></call><operator pos:start="339:119" pos:end="339:119">.</operator><call pos:start="339:120" pos:end="339:135"><name pos:start="339:120" pos:end="339:133">getCoordinates</name><argument_list pos:start="339:134" pos:end="339:135">()</argument_list></call><operator pos:start="339:136" pos:end="339:136">.</operator><call pos:start="339:137" pos:end="339:142"><name pos:start="339:137" pos:end="339:139">get</name><argument_list pos:start="339:140" pos:end="339:142">(<argument pos:start="339:141" pos:end="339:141"><expr pos:start="339:141" pos:end="339:141"><name pos:start="339:141" pos:end="339:141">q</name></expr></argument>)</argument_list></call><operator pos:start="339:143" pos:end="339:143">.</operator><call pos:start="339:144" pos:end="339:156"><name pos:start="339:144" pos:end="339:154">getLatitude</name><argument_list pos:start="339:155" pos:end="339:156">()</argument_list></call> <operator pos:start="339:158" pos:end="339:158">*</operator> <literal type="number" pos:start="339:160" pos:end="339:165">10000d</literal></expr></argument>)</argument_list></call> <operator pos:start="339:168" pos:end="339:168">/</operator> <literal type="number" pos:start="339:170" pos:end="339:175">10000d</literal> <operator pos:start="339:177" pos:end="339:178">==</operator> <operator pos:start="339:180" pos:end="339:180">(</operator><name pos:start="339:181" pos:end="339:186">double</name><operator pos:start="339:187" pos:end="339:187">)</operator><call pos:start="339:188" pos:end="339:236"><name pos:start="339:188" pos:end="339:197"><name pos:start="339:188" pos:end="339:191">Math</name><operator pos:start="339:192" pos:end="339:192">.</operator><name pos:start="339:193" pos:end="339:197">round</name></name><argument_list pos:start="339:198" pos:end="339:236">(<argument pos:start="339:199" pos:end="339:235"><expr pos:start="339:199" pos:end="339:235"><call pos:start="339:199" pos:end="339:214"><name pos:start="339:199" pos:end="339:212"><name pos:start="339:199" pos:end="339:202">line</name><operator pos:start="339:203" pos:end="339:203">.</operator><name pos:start="339:204" pos:end="339:212">getPoints</name></name><argument_list pos:start="339:213" pos:end="339:214">()</argument_list></call><index pos:start="339:215" pos:end="339:217">[<expr pos:start="339:216" pos:end="339:216"><literal type="number" pos:start="339:216" pos:end="339:216">0</literal></expr>]</index><operator pos:start="339:218" pos:end="339:218">.</operator><call pos:start="339:219" pos:end="339:226"><name pos:start="339:219" pos:end="339:224">getLat</name><argument_list pos:start="339:225" pos:end="339:226">()</argument_list></call> <operator pos:start="339:228" pos:end="339:228">*</operator> <literal type="number" pos:start="339:230" pos:end="339:235">10000d</literal></expr></argument>)</argument_list></call> <operator pos:start="339:238" pos:end="339:238">/</operator> <literal type="number" pos:start="339:240" pos:end="339:245">10000d</literal> 
									<operator pos:start="340:73" pos:end="340:74">&amp;&amp;</operator> <operator pos:start="340:76" pos:end="340:76">(</operator><name pos:start="340:77" pos:end="340:82">double</name><operator pos:start="340:83" pos:end="340:83">)</operator><call pos:start="340:84" pos:end="340:166"><name pos:start="340:84" pos:end="340:93"><name pos:start="340:84" pos:end="340:87">Math</name><operator pos:start="340:88" pos:end="340:88">.</operator><name pos:start="340:89" pos:end="340:93">round</name></name><argument_list pos:start="340:94" pos:end="340:166">(<argument pos:start="340:95" pos:end="340:165"><expr pos:start="340:95" pos:end="340:165"><call pos:start="340:95" pos:end="340:117"><name pos:start="340:95" pos:end="340:114"><name pos:start="340:95" pos:end="340:110">allPrioritySides</name><operator pos:start="340:111" pos:end="340:111">.</operator><name pos:start="340:112" pos:end="340:114">get</name></name><argument_list pos:start="340:115" pos:end="340:117">(<argument pos:start="340:116" pos:end="340:116"><expr pos:start="340:116" pos:end="340:116"><name pos:start="340:116" pos:end="340:116">p</name></expr></argument>)</argument_list></call><operator pos:start="340:118" pos:end="340:118">.</operator><call pos:start="340:119" pos:end="340:134"><name pos:start="340:119" pos:end="340:132">getCoordinates</name><argument_list pos:start="340:133" pos:end="340:134">()</argument_list></call><operator pos:start="340:135" pos:end="340:135">.</operator><call pos:start="340:136" pos:end="340:141"><name pos:start="340:136" pos:end="340:138">get</name><argument_list pos:start="340:139" pos:end="340:141">(<argument pos:start="340:140" pos:end="340:140"><expr pos:start="340:140" pos:end="340:140"><name pos:start="340:140" pos:end="340:140">q</name></expr></argument>)</argument_list></call><operator pos:start="340:142" pos:end="340:142">.</operator><call pos:start="340:143" pos:end="340:156"><name pos:start="340:143" pos:end="340:154">getLongitude</name><argument_list pos:start="340:155" pos:end="340:156">()</argument_list></call> <operator pos:start="340:158" pos:end="340:158">*</operator> <literal type="number" pos:start="340:160" pos:end="340:165">10000d</literal></expr></argument>)</argument_list></call> <operator pos:start="340:168" pos:end="340:168">/</operator> <literal type="number" pos:start="340:170" pos:end="340:175">10000d</literal> <operator pos:start="340:177" pos:end="340:178">==</operator> <operator pos:start="340:180" pos:end="340:180">(</operator><name pos:start="340:181" pos:end="340:186">double</name><operator pos:start="340:187" pos:end="340:187">)</operator><call pos:start="340:188" pos:end="340:236"><name pos:start="340:188" pos:end="340:197"><name pos:start="340:188" pos:end="340:191">Math</name><operator pos:start="340:192" pos:end="340:192">.</operator><name pos:start="340:193" pos:end="340:197">round</name></name><argument_list pos:start="340:198" pos:end="340:236">(<argument pos:start="340:199" pos:end="340:235"><expr pos:start="340:199" pos:end="340:235"><call pos:start="340:199" pos:end="340:214"><name pos:start="340:199" pos:end="340:212"><name pos:start="340:199" pos:end="340:202">line</name><operator pos:start="340:203" pos:end="340:203">.</operator><name pos:start="340:204" pos:end="340:212">getPoints</name></name><argument_list pos:start="340:213" pos:end="340:214">()</argument_list></call><index pos:start="340:215" pos:end="340:217">[<expr pos:start="340:216" pos:end="340:216"><literal type="number" pos:start="340:216" pos:end="340:216">0</literal></expr>]</index><operator pos:start="340:218" pos:end="340:218">.</operator><call pos:start="340:219" pos:end="340:226"><name pos:start="340:219" pos:end="340:224">getLon</name><argument_list pos:start="340:225" pos:end="340:226">()</argument_list></call> <operator pos:start="340:228" pos:end="340:228">*</operator> <literal type="number" pos:start="340:230" pos:end="340:235">10000d</literal></expr></argument>)</argument_list></call> <operator pos:start="340:238" pos:end="340:238">/</operator> <literal type="number" pos:start="340:240" pos:end="340:245">10000d</literal></expr> )</condition> <block pos:start="340:249" pos:end="344:73">{<block_content pos:start="341:81" pos:end="343:131">
										<decl_stmt pos:start="341:81" pos:end="341:172"><decl pos:start="341:81" pos:end="341:171"><type pos:start="341:81" pos:end="341:99"><name pos:start="341:81" pos:end="341:99"><name pos:start="341:81" pos:end="341:84">List</name><argument_list type="generic" pos:start="341:85" pos:end="341:99">&lt;<argument pos:start="341:86" pos:end="341:98"><name pos:start="341:86" pos:end="341:98">LlaCoordinate</name></argument>&gt;</argument_list></name></type> <name pos:start="341:101" pos:end="341:110">tempCoords</name> <init pos:start="341:112" pos:end="341:171">= <expr pos:start="341:114" pos:end="341:171"><operator pos:start="341:114" pos:end="341:116">new</operator> <call pos:start="341:118" pos:end="341:171"><name pos:start="341:118" pos:end="341:129"><name pos:start="341:118" pos:end="341:127">LinkedList</name><argument_list type="generic" pos:start="341:128" pos:end="341:129">&lt;&gt;</argument_list></name><argument_list pos:start="341:130" pos:end="341:171">(<argument pos:start="341:131" pos:end="341:170"><expr pos:start="341:131" pos:end="341:170"><call pos:start="341:131" pos:end="341:153"><name pos:start="341:131" pos:end="341:150"><name pos:start="341:131" pos:end="341:146">allPrioritySides</name><operator pos:start="341:147" pos:end="341:147">.</operator><name pos:start="341:148" pos:end="341:150">get</name></name><argument_list pos:start="341:151" pos:end="341:153">(<argument pos:start="341:152" pos:end="341:152"><expr pos:start="341:152" pos:end="341:152"><name pos:start="341:152" pos:end="341:152">p</name></expr></argument>)</argument_list></call><operator pos:start="341:154" pos:end="341:154">.</operator><call pos:start="341:155" pos:end="341:170"><name pos:start="341:155" pos:end="341:168">getCoordinates</name><argument_list pos:start="341:169" pos:end="341:170">()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
										<expr_stmt pos:start="342:81" pos:end="342:188"><expr pos:start="342:81" pos:end="342:187"><call pos:start="342:81" pos:end="342:187"><name pos:start="342:81" pos:end="342:94"><name pos:start="342:81" pos:end="342:90">tempCoords</name><operator pos:start="342:91" pos:end="342:91">.</operator><name pos:start="342:92" pos:end="342:94">set</name></name><argument_list pos:start="342:95" pos:end="342:187">(<argument pos:start="342:96" pos:end="342:96"><expr pos:start="342:96" pos:end="342:96"><name pos:start="342:96" pos:end="342:96">q</name></expr></argument>, <argument pos:start="342:99" pos:end="342:186"><expr pos:start="342:99" pos:end="342:186"><operator pos:start="342:99" pos:end="342:101">new</operator> <call pos:start="342:103" pos:end="342:186"><name pos:start="342:103" pos:end="342:115">LlaCoordinate</name><argument_list pos:start="342:116" pos:end="342:186">(<argument pos:start="342:117" pos:end="342:148"><expr pos:start="342:117" pos:end="342:148"><call pos:start="342:117" pos:end="342:136"><name pos:start="342:117" pos:end="342:134"><name pos:start="342:117" pos:end="342:124">polyline</name><operator pos:start="342:125" pos:end="342:125">.</operator><name pos:start="342:126" pos:end="342:134">getPoints</name></name><argument_list pos:start="342:135" pos:end="342:136">()</argument_list></call><index pos:start="342:137" pos:end="342:139">[<expr pos:start="342:138" pos:end="342:138"><literal type="number" pos:start="342:138" pos:end="342:138">0</literal></expr>]</index><operator pos:start="342:140" pos:end="342:140">.</operator><call pos:start="342:141" pos:end="342:148"><name pos:start="342:141" pos:end="342:146">getLat</name><argument_list pos:start="342:147" pos:end="342:148">()</argument_list></call></expr></argument>, <argument pos:start="342:151" pos:end="342:182"><expr pos:start="342:151" pos:end="342:182"><call pos:start="342:151" pos:end="342:170"><name pos:start="342:151" pos:end="342:168"><name pos:start="342:151" pos:end="342:158">polyline</name><operator pos:start="342:159" pos:end="342:159">.</operator><name pos:start="342:160" pos:end="342:168">getPoints</name></name><argument_list pos:start="342:169" pos:end="342:170">()</argument_list></call><index pos:start="342:171" pos:end="342:173">[<expr pos:start="342:172" pos:end="342:172"><literal type="number" pos:start="342:172" pos:end="342:172">0</literal></expr>]</index><operator pos:start="342:174" pos:end="342:174">.</operator><call pos:start="342:175" pos:end="342:182"><name pos:start="342:175" pos:end="342:180">getLon</name><argument_list pos:start="342:181" pos:end="342:182">()</argument_list></call></expr></argument>, <argument pos:start="342:185" pos:end="342:185"><expr pos:start="342:185" pos:end="342:185"><literal type="number" pos:start="342:185" pos:end="342:185">0</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
										<expr_stmt pos:start="343:81" pos:end="343:131"><expr pos:start="343:81" pos:end="343:130"><call pos:start="343:81" pos:end="343:103"><name pos:start="343:81" pos:end="343:100"><name pos:start="343:81" pos:end="343:96">allPrioritySides</name><operator pos:start="343:97" pos:end="343:97">.</operator><name pos:start="343:98" pos:end="343:100">get</name></name><argument_list pos:start="343:101" pos:end="343:103">(<argument pos:start="343:102" pos:end="343:102"><expr pos:start="343:102" pos:end="343:102"><name pos:start="343:102" pos:end="343:102">p</name></expr></argument>)</argument_list></call><operator pos:start="343:104" pos:end="343:104">.</operator><call pos:start="343:105" pos:end="343:130"><name pos:start="343:105" pos:end="343:118">setCoordinates</name><argument_list pos:start="343:119" pos:end="343:130">(<argument pos:start="343:120" pos:end="343:129"><expr pos:start="343:120" pos:end="343:129"><name pos:start="343:120" pos:end="343:129">tempCoords</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
									</block_content>}</block></if></if_stmt>
									<if_stmt pos:start="345:73" pos:end="350:73"><if pos:start="345:73" pos:end="350:73">if <condition pos:start="345:76" pos:end="346:247">(<expr pos:start="345:77" pos:end="346:245"><operator pos:start="345:77" pos:end="345:77">(</operator><name pos:start="345:78" pos:end="345:83">double</name><operator pos:start="345:84" pos:end="345:84">)</operator><call pos:start="345:85" pos:end="345:166"><name pos:start="345:85" pos:end="345:94"><name pos:start="345:85" pos:end="345:88">Math</name><operator pos:start="345:89" pos:end="345:89">.</operator><name pos:start="345:90" pos:end="345:94">round</name></name><argument_list pos:start="345:95" pos:end="345:166">(<argument pos:start="345:96" pos:end="345:165"><expr pos:start="345:96" pos:end="345:165"><call pos:start="345:96" pos:end="345:118"><name pos:start="345:96" pos:end="345:115"><name pos:start="345:96" pos:end="345:111">allPrioritySides</name><operator pos:start="345:112" pos:end="345:112">.</operator><name pos:start="345:113" pos:end="345:115">get</name></name><argument_list pos:start="345:116" pos:end="345:118">(<argument pos:start="345:117" pos:end="345:117"><expr pos:start="345:117" pos:end="345:117"><name pos:start="345:117" pos:end="345:117">p</name></expr></argument>)</argument_list></call><operator pos:start="345:119" pos:end="345:119">.</operator><call pos:start="345:120" pos:end="345:135"><name pos:start="345:120" pos:end="345:133">getCoordinates</name><argument_list pos:start="345:134" pos:end="345:135">()</argument_list></call><operator pos:start="345:136" pos:end="345:136">.</operator><call pos:start="345:137" pos:end="345:142"><name pos:start="345:137" pos:end="345:139">get</name><argument_list pos:start="345:140" pos:end="345:142">(<argument pos:start="345:141" pos:end="345:141"><expr pos:start="345:141" pos:end="345:141"><name pos:start="345:141" pos:end="345:141">q</name></expr></argument>)</argument_list></call><operator pos:start="345:143" pos:end="345:143">.</operator><call pos:start="345:144" pos:end="345:156"><name pos:start="345:144" pos:end="345:154">getLatitude</name><argument_list pos:start="345:155" pos:end="345:156">()</argument_list></call> <operator pos:start="345:158" pos:end="345:158">*</operator> <literal type="number" pos:start="345:160" pos:end="345:165">10000d</literal></expr></argument>)</argument_list></call> <operator pos:start="345:168" pos:end="345:168">/</operator> <literal type="number" pos:start="345:170" pos:end="345:175">10000d</literal> <operator pos:start="345:177" pos:end="345:178">==</operator> <operator pos:start="345:180" pos:end="345:180">(</operator><name pos:start="345:181" pos:end="345:186">double</name><operator pos:start="345:187" pos:end="345:187">)</operator><call pos:start="345:188" pos:end="345:236"><name pos:start="345:188" pos:end="345:197"><name pos:start="345:188" pos:end="345:191">Math</name><operator pos:start="345:192" pos:end="345:192">.</operator><name pos:start="345:193" pos:end="345:197">round</name></name><argument_list pos:start="345:198" pos:end="345:236">(<argument pos:start="345:199" pos:end="345:235"><expr pos:start="345:199" pos:end="345:235"><call pos:start="345:199" pos:end="345:214"><name pos:start="345:199" pos:end="345:212"><name pos:start="345:199" pos:end="345:202">line</name><operator pos:start="345:203" pos:end="345:203">.</operator><name pos:start="345:204" pos:end="345:212">getPoints</name></name><argument_list pos:start="345:213" pos:end="345:214">()</argument_list></call><index pos:start="345:215" pos:end="345:217">[<expr pos:start="345:216" pos:end="345:216"><literal type="number" pos:start="345:216" pos:end="345:216">1</literal></expr>]</index><operator pos:start="345:218" pos:end="345:218">.</operator><call pos:start="345:219" pos:end="345:226"><name pos:start="345:219" pos:end="345:224">getLat</name><argument_list pos:start="345:225" pos:end="345:226">()</argument_list></call> <operator pos:start="345:228" pos:end="345:228">*</operator> <literal type="number" pos:start="345:230" pos:end="345:235">10000d</literal></expr></argument>)</argument_list></call> <operator pos:start="345:238" pos:end="345:238">/</operator> <literal type="number" pos:start="345:240" pos:end="345:245">10000d</literal> 
									<operator pos:start="346:73" pos:end="346:74">&amp;&amp;</operator> <operator pos:start="346:76" pos:end="346:76">(</operator><name pos:start="346:77" pos:end="346:82">double</name><operator pos:start="346:83" pos:end="346:83">)</operator><call pos:start="346:84" pos:end="346:166"><name pos:start="346:84" pos:end="346:93"><name pos:start="346:84" pos:end="346:87">Math</name><operator pos:start="346:88" pos:end="346:88">.</operator><name pos:start="346:89" pos:end="346:93">round</name></name><argument_list pos:start="346:94" pos:end="346:166">(<argument pos:start="346:95" pos:end="346:165"><expr pos:start="346:95" pos:end="346:165"><call pos:start="346:95" pos:end="346:117"><name pos:start="346:95" pos:end="346:114"><name pos:start="346:95" pos:end="346:110">allPrioritySides</name><operator pos:start="346:111" pos:end="346:111">.</operator><name pos:start="346:112" pos:end="346:114">get</name></name><argument_list pos:start="346:115" pos:end="346:117">(<argument pos:start="346:116" pos:end="346:116"><expr pos:start="346:116" pos:end="346:116"><name pos:start="346:116" pos:end="346:116">p</name></expr></argument>)</argument_list></call><operator pos:start="346:118" pos:end="346:118">.</operator><call pos:start="346:119" pos:end="346:134"><name pos:start="346:119" pos:end="346:132">getCoordinates</name><argument_list pos:start="346:133" pos:end="346:134">()</argument_list></call><operator pos:start="346:135" pos:end="346:135">.</operator><call pos:start="346:136" pos:end="346:141"><name pos:start="346:136" pos:end="346:138">get</name><argument_list pos:start="346:139" pos:end="346:141">(<argument pos:start="346:140" pos:end="346:140"><expr pos:start="346:140" pos:end="346:140"><name pos:start="346:140" pos:end="346:140">q</name></expr></argument>)</argument_list></call><operator pos:start="346:142" pos:end="346:142">.</operator><call pos:start="346:143" pos:end="346:156"><name pos:start="346:143" pos:end="346:154">getLongitude</name><argument_list pos:start="346:155" pos:end="346:156">()</argument_list></call> <operator pos:start="346:158" pos:end="346:158">*</operator> <literal type="number" pos:start="346:160" pos:end="346:165">10000d</literal></expr></argument>)</argument_list></call> <operator pos:start="346:168" pos:end="346:168">/</operator> <literal type="number" pos:start="346:170" pos:end="346:175">10000d</literal> <operator pos:start="346:177" pos:end="346:178">==</operator> <operator pos:start="346:180" pos:end="346:180">(</operator><name pos:start="346:181" pos:end="346:186">double</name><operator pos:start="346:187" pos:end="346:187">)</operator><call pos:start="346:188" pos:end="346:236"><name pos:start="346:188" pos:end="346:197"><name pos:start="346:188" pos:end="346:191">Math</name><operator pos:start="346:192" pos:end="346:192">.</operator><name pos:start="346:193" pos:end="346:197">round</name></name><argument_list pos:start="346:198" pos:end="346:236">(<argument pos:start="346:199" pos:end="346:235"><expr pos:start="346:199" pos:end="346:235"><call pos:start="346:199" pos:end="346:214"><name pos:start="346:199" pos:end="346:212"><name pos:start="346:199" pos:end="346:202">line</name><operator pos:start="346:203" pos:end="346:203">.</operator><name pos:start="346:204" pos:end="346:212">getPoints</name></name><argument_list pos:start="346:213" pos:end="346:214">()</argument_list></call><index pos:start="346:215" pos:end="346:217">[<expr pos:start="346:216" pos:end="346:216"><literal type="number" pos:start="346:216" pos:end="346:216">1</literal></expr>]</index><operator pos:start="346:218" pos:end="346:218">.</operator><call pos:start="346:219" pos:end="346:226"><name pos:start="346:219" pos:end="346:224">getLon</name><argument_list pos:start="346:225" pos:end="346:226">()</argument_list></call> <operator pos:start="346:228" pos:end="346:228">*</operator> <literal type="number" pos:start="346:230" pos:end="346:235">10000d</literal></expr></argument>)</argument_list></call> <operator pos:start="346:238" pos:end="346:238">/</operator> <literal type="number" pos:start="346:240" pos:end="346:245">10000d</literal></expr> )</condition> <block pos:start="346:249" pos:end="350:73">{<block_content pos:start="347:81" pos:end="349:131">
										<decl_stmt pos:start="347:81" pos:end="347:172"><decl pos:start="347:81" pos:end="347:171"><type pos:start="347:81" pos:end="347:99"><name pos:start="347:81" pos:end="347:99"><name pos:start="347:81" pos:end="347:84">List</name><argument_list type="generic" pos:start="347:85" pos:end="347:99">&lt;<argument pos:start="347:86" pos:end="347:98"><name pos:start="347:86" pos:end="347:98">LlaCoordinate</name></argument>&gt;</argument_list></name></type> <name pos:start="347:101" pos:end="347:110">tempCoords</name> <init pos:start="347:112" pos:end="347:171">= <expr pos:start="347:114" pos:end="347:171"><operator pos:start="347:114" pos:end="347:116">new</operator> <call pos:start="347:118" pos:end="347:171"><name pos:start="347:118" pos:end="347:129"><name pos:start="347:118" pos:end="347:127">LinkedList</name><argument_list type="generic" pos:start="347:128" pos:end="347:129">&lt;&gt;</argument_list></name><argument_list pos:start="347:130" pos:end="347:171">(<argument pos:start="347:131" pos:end="347:170"><expr pos:start="347:131" pos:end="347:170"><call pos:start="347:131" pos:end="347:153"><name pos:start="347:131" pos:end="347:150"><name pos:start="347:131" pos:end="347:146">allPrioritySides</name><operator pos:start="347:147" pos:end="347:147">.</operator><name pos:start="347:148" pos:end="347:150">get</name></name><argument_list pos:start="347:151" pos:end="347:153">(<argument pos:start="347:152" pos:end="347:152"><expr pos:start="347:152" pos:end="347:152"><name pos:start="347:152" pos:end="347:152">p</name></expr></argument>)</argument_list></call><operator pos:start="347:154" pos:end="347:154">.</operator><call pos:start="347:155" pos:end="347:170"><name pos:start="347:155" pos:end="347:168">getCoordinates</name><argument_list pos:start="347:169" pos:end="347:170">()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
										<expr_stmt pos:start="348:81" pos:end="348:188"><expr pos:start="348:81" pos:end="348:187"><call pos:start="348:81" pos:end="348:187"><name pos:start="348:81" pos:end="348:94"><name pos:start="348:81" pos:end="348:90">tempCoords</name><operator pos:start="348:91" pos:end="348:91">.</operator><name pos:start="348:92" pos:end="348:94">set</name></name><argument_list pos:start="348:95" pos:end="348:187">(<argument pos:start="348:96" pos:end="348:96"><expr pos:start="348:96" pos:end="348:96"><name pos:start="348:96" pos:end="348:96">q</name></expr></argument>, <argument pos:start="348:99" pos:end="348:186"><expr pos:start="348:99" pos:end="348:186"><operator pos:start="348:99" pos:end="348:101">new</operator> <call pos:start="348:103" pos:end="348:186"><name pos:start="348:103" pos:end="348:115">LlaCoordinate</name><argument_list pos:start="348:116" pos:end="348:186">(<argument pos:start="348:117" pos:end="348:148"><expr pos:start="348:117" pos:end="348:148"><call pos:start="348:117" pos:end="348:136"><name pos:start="348:117" pos:end="348:134"><name pos:start="348:117" pos:end="348:124">polyline</name><operator pos:start="348:125" pos:end="348:125">.</operator><name pos:start="348:126" pos:end="348:134">getPoints</name></name><argument_list pos:start="348:135" pos:end="348:136">()</argument_list></call><index pos:start="348:137" pos:end="348:139">[<expr pos:start="348:138" pos:end="348:138"><literal type="number" pos:start="348:138" pos:end="348:138">1</literal></expr>]</index><operator pos:start="348:140" pos:end="348:140">.</operator><call pos:start="348:141" pos:end="348:148"><name pos:start="348:141" pos:end="348:146">getLat</name><argument_list pos:start="348:147" pos:end="348:148">()</argument_list></call></expr></argument>, <argument pos:start="348:151" pos:end="348:182"><expr pos:start="348:151" pos:end="348:182"><call pos:start="348:151" pos:end="348:170"><name pos:start="348:151" pos:end="348:168"><name pos:start="348:151" pos:end="348:158">polyline</name><operator pos:start="348:159" pos:end="348:159">.</operator><name pos:start="348:160" pos:end="348:168">getPoints</name></name><argument_list pos:start="348:169" pos:end="348:170">()</argument_list></call><index pos:start="348:171" pos:end="348:173">[<expr pos:start="348:172" pos:end="348:172"><literal type="number" pos:start="348:172" pos:end="348:172">1</literal></expr>]</index><operator pos:start="348:174" pos:end="348:174">.</operator><call pos:start="348:175" pos:end="348:182"><name pos:start="348:175" pos:end="348:180">getLon</name><argument_list pos:start="348:181" pos:end="348:182">()</argument_list></call></expr></argument>, <argument pos:start="348:185" pos:end="348:185"><expr pos:start="348:185" pos:end="348:185"><literal type="number" pos:start="348:185" pos:end="348:185">0</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
										<expr_stmt pos:start="349:81" pos:end="349:131"><expr pos:start="349:81" pos:end="349:130"><call pos:start="349:81" pos:end="349:103"><name pos:start="349:81" pos:end="349:100"><name pos:start="349:81" pos:end="349:96">allPrioritySides</name><operator pos:start="349:97" pos:end="349:97">.</operator><name pos:start="349:98" pos:end="349:100">get</name></name><argument_list pos:start="349:101" pos:end="349:103">(<argument pos:start="349:102" pos:end="349:102"><expr pos:start="349:102" pos:end="349:102"><name pos:start="349:102" pos:end="349:102">p</name></expr></argument>)</argument_list></call><operator pos:start="349:104" pos:end="349:104">.</operator><call pos:start="349:105" pos:end="349:130"><name pos:start="349:105" pos:end="349:118">setCoordinates</name><argument_list pos:start="349:119" pos:end="349:130">(<argument pos:start="349:120" pos:end="349:129"><expr pos:start="349:120" pos:end="349:129"><name pos:start="349:120" pos:end="349:129">tempCoords</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
									</block_content>}</block></if></if_stmt>
								</block_content>}</block></for>
							</block_content>}</block></for>
							<expr_stmt pos:start="353:57" pos:end="353:93"><expr pos:start="353:57" pos:end="353:92"><call pos:start="353:57" pos:end="353:92"><name pos:start="353:57" pos:end="353:70"><name pos:start="353:57" pos:end="353:60">line</name><operator pos:start="353:61" pos:end="353:61">.</operator><name pos:start="353:62" pos:end="353:70">setPoints</name></name><argument_list pos:start="353:71" pos:end="353:92">(<argument pos:start="353:72" pos:end="353:91"><expr pos:start="353:72" pos:end="353:91"><call pos:start="353:72" pos:end="353:91"><name pos:start="353:72" pos:end="353:89"><name pos:start="353:72" pos:end="353:79">polyline</name><operator pos:start="353:80" pos:end="353:80">.</operator><name pos:start="353:81" pos:end="353:89">getPoints</name></name><argument_list pos:start="353:90" pos:end="353:91">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
						</block_content>}</block></if></if_stmt>
						
						<comment type="line" pos:start="356:49" pos:end="356:77">// highlight as priority line</comment>
						<expr_stmt pos:start="357:49" pos:end="357:77"><expr pos:start="357:49" pos:end="357:76"><call pos:start="357:49" pos:end="357:76"><name pos:start="357:49" pos:end="357:65"><name pos:start="357:49" pos:end="357:56">polyline</name><operator pos:start="357:57" pos:end="357:57">.</operator><name pos:start="357:58" pos:end="357:65">setColor</name></name><argument_list pos:start="357:66" pos:end="357:76">(<argument pos:start="357:67" pos:end="357:75"><expr pos:start="357:67" pos:end="357:75"><literal type="string" pos:start="357:67" pos:end="357:75">"#ff5050"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
						<expr_stmt pos:start="358:49" pos:end="358:139"><expr pos:start="358:49" pos:end="358:138"><call pos:start="358:49" pos:end="358:138"><name pos:start="358:49" pos:end="358:77"><name pos:start="358:49" pos:end="358:56">polyline</name><operator pos:start="358:57" pos:end="358:57">.</operator><name pos:start="358:58" pos:end="358:77">addMouseOverListener</name></name><argument_list pos:start="358:78" pos:end="358:138">(<argument pos:start="358:79" pos:end="358:137"><expr pos:start="358:79" pos:end="358:137"><operator pos:start="358:79" pos:end="358:81">new</operator> <call pos:start="358:83" pos:end="358:137"><name pos:start="358:83" pos:end="358:113">AMPrioritySideMouseOverListener</name><argument_list pos:start="358:114" pos:end="358:137">(<argument pos:start="358:115" pos:end="358:126"><expr pos:start="358:115" pos:end="358:126"><name pos:start="358:115" pos:end="358:126">mapComponent</name></expr></argument>, <argument pos:start="358:129" pos:end="358:136"><expr pos:start="358:129" pos:end="358:136"><name pos:start="358:129" pos:end="358:136">polyline</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
						<expr_stmt pos:start="359:49" pos:end="359:115"><expr pos:start="359:49" pos:end="359:114"><call pos:start="359:49" pos:end="359:114"><name pos:start="359:49" pos:end="359:76"><name pos:start="359:49" pos:end="359:56">polyline</name><operator pos:start="359:57" pos:end="359:57">.</operator><name pos:start="359:58" pos:end="359:76">addMouseOutListener</name></name><argument_list pos:start="359:77" pos:end="359:114">(<argument pos:start="359:78" pos:end="359:113"><expr pos:start="359:78" pos:end="359:113"><operator pos:start="359:78" pos:end="359:80">new</operator> <call pos:start="359:82" pos:end="359:113"><name pos:start="359:82" pos:end="359:107">AMPriorityMouseOutListener</name><argument_list pos:start="359:108" pos:end="359:113">(<argument pos:start="359:109" pos:end="359:112"><expr pos:start="359:109" pos:end="359:112"><name pos:start="359:109" pos:end="359:112">this</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
						<expr_stmt pos:start="360:49" pos:end="360:73"><expr pos:start="360:49" pos:end="360:72"><call pos:start="360:49" pos:end="360:72"><name pos:start="360:49" pos:end="360:67"><name pos:start="360:49" pos:end="360:56">polyline</name><operator pos:start="360:57" pos:end="360:57">.</operator><name pos:start="360:58" pos:end="360:67">setOpacity</name></name><argument_list pos:start="360:68" pos:end="360:72">(<argument pos:start="360:69" pos:end="360:71"><expr pos:start="360:69" pos:end="360:71"><literal type="number" pos:start="360:69" pos:end="360:71">0.7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					</block_content>}</block></if></if_stmt>
				</block_content>}</block></for>
				
				<expr_stmt pos:start="364:33" pos:end="364:59"><expr pos:start="364:33" pos:end="364:58"><call pos:start="364:33" pos:end="364:58"><name pos:start="364:33" pos:end="364:48"><name pos:start="364:33" pos:end="364:35">map</name><operator pos:start="364:36" pos:end="364:36">.</operator><name pos:start="364:37" pos:end="364:48">addComponent</name></name><argument_list pos:start="364:49" pos:end="364:58">(<argument pos:start="364:50" pos:end="364:57"><expr pos:start="364:50" pos:end="364:57"><name pos:start="364:50" pos:end="364:57">polyline</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<expr_stmt pos:start="365:33" pos:end="365:59"><expr pos:start="365:33" pos:end="365:58"><call pos:start="365:33" pos:end="365:58"><name pos:start="365:33" pos:end="365:48"><name pos:start="365:33" pos:end="365:44">allPolylines</name><operator pos:start="365:45" pos:end="365:45">.</operator><name pos:start="365:46" pos:end="365:48">add</name></name><argument_list pos:start="365:49" pos:end="365:58">(<argument pos:start="365:50" pos:end="365:57"><expr pos:start="365:50" pos:end="365:57"><name pos:start="365:50" pos:end="365:57">polyline</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				

				<comment type="line" pos:start="368:33" pos:end="368:71">// assigns the line that is moused over</comment>
				<expr_stmt pos:start="369:33" pos:end="374:35"><expr pos:start="369:33" pos:end="374:34"><call pos:start="369:33" pos:end="374:34"><name pos:start="369:33" pos:end="369:61"><name pos:start="369:33" pos:end="369:40">polyline</name><operator pos:start="369:41" pos:end="369:41">.</operator><name pos:start="369:42" pos:end="369:61">addMouseOverListener</name></name><argument_list pos:start="369:62" pos:end="374:34">(<argument pos:start="369:63" pos:end="374:33"><expr pos:start="369:63" pos:end="374:33"><operator pos:start="369:63" pos:end="369:65">new</operator> <class pos:start="369:67" pos:end="374:33"><super pos:start="369:67" pos:end="369:90"><name pos:start="369:67" pos:end="369:90">LeafletMouseOverListener</name></super><argument_list pos:start="369:91" pos:end="369:92">()</argument_list> <block pos:start="369:94" pos:end="374:33">{
					<function pos:start="370:41" pos:end="373:41"><annotation pos:start="370:41" pos:end="370:49">@<name pos:start="370:42" pos:end="370:49">Override</name></annotation>
					<type pos:start="371:41" pos:end="371:51"><specifier pos:start="371:41" pos:end="371:46">public</specifier> <name pos:start="371:48" pos:end="371:51">void</name></type> <name pos:start="371:53" pos:end="371:63">onMouseOver</name><parameter_list pos:start="371:64" pos:end="371:92">(<parameter pos:start="371:65" pos:end="371:91"><decl pos:start="371:65" pos:end="371:91"><type pos:start="371:65" pos:end="371:85"><name pos:start="371:65" pos:end="371:85">LeafletMouseOverEvent</name></type> <name pos:start="371:87" pos:end="371:91">event</name></decl></parameter>)</parameter_list> <block pos:start="371:94" pos:end="373:41">{<block_content pos:start="372:49" pos:end="372:94">
						<expr_stmt pos:start="372:49" pos:end="372:94"><expr pos:start="372:49" pos:end="372:93"><name pos:start="372:49" pos:end="372:62">mousedOverLine</name> <operator pos:start="372:64" pos:end="372:64">=</operator> <operator pos:start="372:66" pos:end="372:66">(</operator><name pos:start="372:67" pos:end="372:75">LPolyline</name><operator pos:start="372:76" pos:end="372:76">)</operator><call pos:start="372:77" pos:end="372:93"><name pos:start="372:77" pos:end="372:91"><name pos:start="372:77" pos:end="372:81">event</name><operator pos:start="372:82" pos:end="372:82">.</operator><name pos:start="372:83" pos:end="372:91">getSource</name></name><argument_list pos:start="372:92" pos:end="372:93">()</argument_list></call></expr>;</expr_stmt>
					</block_content>}</block></function>
				}</block></class></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				
				<comment type="line" pos:start="376:33" pos:end="376:100">// if the mouse is removed from the line, set mousedOverLine to null</comment>
				<expr_stmt pos:start="377:33" pos:end="382:35"><expr pos:start="377:33" pos:end="382:34"><call pos:start="377:33" pos:end="382:34"><name pos:start="377:33" pos:end="377:60"><name pos:start="377:33" pos:end="377:40">polyline</name><operator pos:start="377:41" pos:end="377:41">.</operator><name pos:start="377:42" pos:end="377:60">addMouseOutListener</name></name><argument_list pos:start="377:61" pos:end="382:34">(<argument pos:start="377:62" pos:end="382:33"><expr pos:start="377:62" pos:end="382:33"><operator pos:start="377:62" pos:end="377:64">new</operator> <class pos:start="377:66" pos:end="382:33"><super pos:start="377:66" pos:end="377:88"><name pos:start="377:66" pos:end="377:88">LeafletMouseOutListener</name></super><argument_list pos:start="377:89" pos:end="377:90">()</argument_list> <block pos:start="377:92" pos:end="382:33">{
					<function pos:start="378:41" pos:end="381:41"><annotation pos:start="378:41" pos:end="378:49">@<name pos:start="378:42" pos:end="378:49">Override</name></annotation>
					<type pos:start="379:41" pos:end="379:51"><specifier pos:start="379:41" pos:end="379:46">public</specifier> <name pos:start="379:48" pos:end="379:51">void</name></type> <name pos:start="379:53" pos:end="379:62">onMouseOut</name><parameter_list pos:start="379:63" pos:end="379:90">(<parameter pos:start="379:64" pos:end="379:89"><decl pos:start="379:64" pos:end="379:89"><type pos:start="379:64" pos:end="379:83"><name pos:start="379:64" pos:end="379:83">LeafletMouseOutEvent</name></type> <name pos:start="379:85" pos:end="379:89">event</name></decl></parameter>)</parameter_list> <block pos:start="379:92" pos:end="381:41">{<block_content pos:start="380:49" pos:end="380:70">
						<expr_stmt pos:start="380:49" pos:end="380:70"><expr pos:start="380:49" pos:end="380:69"><name pos:start="380:49" pos:end="380:62">mousedOverLine</name> <operator pos:start="380:64" pos:end="380:64">=</operator> <literal type="null" pos:start="380:66" pos:end="380:69">null</literal></expr>;</expr_stmt>
					</block_content>}</block></function>
				}</block></class></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	
				<if_stmt pos:start="384:33" pos:end="384:116"><if pos:start="384:33" pos:end="384:116">if <condition pos:start="384:36" pos:end="384:66">(<expr pos:start="384:37" pos:end="384:65"><name pos:start="384:37" pos:end="384:57">polylineClickListener</name> <operator pos:start="384:59" pos:end="384:60">!=</operator> <literal type="null" pos:start="384:62" pos:end="384:65">null</literal></expr>)</condition><block type="pseudo" pos:start="384:68" pos:end="384:116"><block_content pos:start="384:68" pos:end="384:116"> <expr_stmt pos:start="384:68" pos:end="384:116"><expr pos:start="384:68" pos:end="384:115"><call pos:start="384:68" pos:end="384:115"><name pos:start="384:68" pos:end="384:92"><name pos:start="384:68" pos:end="384:75">polyline</name><operator pos:start="384:76" pos:end="384:76">.</operator><name pos:start="384:77" pos:end="384:92">addClickListener</name></name><argument_list pos:start="384:93" pos:end="384:115">(<argument pos:start="384:94" pos:end="384:114"><expr pos:start="384:94" pos:end="384:114"><name pos:start="384:94" pos:end="384:114">polylineClickListener</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
				
				<expr_stmt pos:start="386:33" pos:end="386:63"><expr pos:start="386:33" pos:end="386:62"><call pos:start="386:33" pos:end="386:48"><name pos:start="386:33" pos:end="386:45"><name pos:start="386:33" pos:end="386:41">polylines</name><operator pos:start="386:42" pos:end="386:42">.</operator><name pos:start="386:43" pos:end="386:45">get</name></name><argument_list pos:start="386:46" pos:end="386:48">(<argument pos:start="386:47" pos:end="386:47"><expr pos:start="386:47" pos:end="386:47"><name pos:start="386:47" pos:end="386:47">j</name></expr></argument>)</argument_list></call><operator pos:start="386:49" pos:end="386:49">.</operator><call pos:start="386:50" pos:end="386:62"><name pos:start="386:50" pos:end="386:52">add</name><argument_list pos:start="386:53" pos:end="386:62">(<argument pos:start="386:54" pos:end="386:61"><expr pos:start="386:54" pos:end="386:61"><name pos:start="386:54" pos:end="386:61">polyline</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			</block_content>}</block></for>
		</block_content>}</block></for>
		<expr_stmt pos:start="389:17" pos:end="389:36"><expr pos:start="389:17" pos:end="389:35"><call pos:start="389:17" pos:end="389:35"><name pos:start="389:17" pos:end="389:33">highlightUpstream</name><argument_list pos:start="389:34" pos:end="389:35">()</argument_list></call></expr>;</expr_stmt>
		<return pos:start="390:17" pos:end="390:33">return <expr pos:start="390:24" pos:end="390:32"><name pos:start="390:24" pos:end="390:32">polylines</name></expr>;</return>
	</block_content>}</block></function>
	
	<comment type="line" pos:start="393:9" pos:end="393:94">// Removes all lines from the map and the polylines arraylist unless drawing a polygon</comment>
	<function pos:start="394:9" pos:end="409:9"><type pos:start="394:9" pos:end="394:19"><specifier pos:start="394:9" pos:end="394:14">public</specifier> <name pos:start="394:16" pos:end="394:19">void</name></type> <name pos:start="394:21" pos:end="394:34">removeAllLines</name><parameter_list pos:start="394:35" pos:end="394:36">()</parameter_list> <block pos:start="394:38" pos:end="409:9">{<block_content pos:start="395:17" pos:end="408:37">
		<if_stmt pos:start="395:17" pos:end="396:31"><if pos:start="395:17" pos:end="396:31">if <condition pos:start="395:20" pos:end="395:80">(<expr pos:start="395:21" pos:end="395:79"><call pos:start="395:21" pos:end="395:62"><name pos:start="395:21" pos:end="395:60"><name pos:start="395:21" pos:end="395:32">mapComponent</name><operator pos:start="395:33" pos:end="395:33">.</operator><name pos:start="395:34" pos:end="395:60">getEditPrioritiesController</name></name><argument_list pos:start="395:61" pos:end="395:62">()</argument_list></call><operator pos:start="395:63" pos:end="395:63">.</operator><call pos:start="395:64" pos:end="395:79"><name pos:start="395:64" pos:end="395:77">getDrawingArea</name><argument_list pos:start="395:78" pos:end="395:79">()</argument_list></call></expr>)</condition><block type="pseudo" pos:start="396:25" pos:end="396:31"><block_content pos:start="396:25" pos:end="396:31">
			<return pos:start="396:25" pos:end="396:31">return;</return></block_content></block></if></if_stmt>
		<decl_stmt pos:start="397:17" pos:end="397:56"><decl pos:start="397:17" pos:end="397:55"><type pos:start="397:17" pos:end="397:35"><name pos:start="397:17" pos:end="397:35"><name pos:start="397:17" pos:end="397:24">Iterator</name><argument_list type="generic" pos:start="397:25" pos:end="397:35">&lt;<argument pos:start="397:26" pos:end="397:34"><name pos:start="397:26" pos:end="397:34">Component</name></argument>&gt;</argument_list></name></type> <name pos:start="397:37" pos:end="397:38">it</name> <init pos:start="397:40" pos:end="397:55">= <expr pos:start="397:42" pos:end="397:55"><call pos:start="397:42" pos:end="397:55"><name pos:start="397:42" pos:end="397:53"><name pos:start="397:42" pos:end="397:44">map</name><operator pos:start="397:45" pos:end="397:45">.</operator><name pos:start="397:46" pos:end="397:53">iterator</name></name><argument_list pos:start="397:54" pos:end="397:55">()</argument_list></call></expr></init></decl>;</decl_stmt>
		<decl_stmt pos:start="398:17" pos:end="398:73"><decl pos:start="398:17" pos:end="398:72"><type pos:start="398:17" pos:end="398:37"><name pos:start="398:17" pos:end="398:37"><name pos:start="398:17" pos:end="398:26">LinkedList</name><argument_list type="generic" pos:start="398:27" pos:end="398:37">&lt;<argument pos:start="398:28" pos:end="398:36"><name pos:start="398:28" pos:end="398:36">LPolyline</name></argument>&gt;</argument_list></name></type> <name pos:start="398:39" pos:end="398:51">linesToRemove</name> <init pos:start="398:53" pos:end="398:72">= <expr pos:start="398:55" pos:end="398:72"><operator pos:start="398:55" pos:end="398:57">new</operator> <call pos:start="398:59" pos:end="398:72"><name pos:start="398:59" pos:end="398:70"><name pos:start="398:59" pos:end="398:68">LinkedList</name><argument_list type="generic" pos:start="398:69" pos:end="398:70">&lt;&gt;</argument_list></name><argument_list pos:start="398:71" pos:end="398:72">()</argument_list></call></expr></init></decl>;</decl_stmt>
		<while pos:start="399:17" pos:end="404:17">while<condition pos:start="399:22" pos:end="399:35">(<expr pos:start="399:23" pos:end="399:34"><call pos:start="399:23" pos:end="399:34"><name pos:start="399:23" pos:end="399:32"><name pos:start="399:23" pos:end="399:24">it</name><operator pos:start="399:25" pos:end="399:25">.</operator><name pos:start="399:26" pos:end="399:32">hasNext</name></name><argument_list pos:start="399:33" pos:end="399:34">()</argument_list></call></expr>)</condition> <block pos:start="399:37" pos:end="404:17">{<block_content pos:start="400:25" pos:end="403:25">
			<decl_stmt pos:start="400:25" pos:end="400:48"><decl pos:start="400:25" pos:end="400:47"><type pos:start="400:25" pos:end="400:33"><name pos:start="400:25" pos:end="400:33">Component</name></type> <name pos:start="400:35" pos:end="400:35">c</name> <init pos:start="400:37" pos:end="400:47">= <expr pos:start="400:39" pos:end="400:47"><call pos:start="400:39" pos:end="400:47"><name pos:start="400:39" pos:end="400:45"><name pos:start="400:39" pos:end="400:40">it</name><operator pos:start="400:41" pos:end="400:41">.</operator><name pos:start="400:42" pos:end="400:45">next</name></name><argument_list pos:start="400:46" pos:end="400:47">()</argument_list></call></expr></init></decl>;</decl_stmt>
			<if_stmt pos:start="401:25" pos:end="403:25"><if pos:start="401:25" pos:end="403:25">if <condition pos:start="401:28" pos:end="401:60">(<expr pos:start="401:29" pos:end="401:59"><call pos:start="401:29" pos:end="401:40"><name pos:start="401:29" pos:end="401:38"><name pos:start="401:29" pos:end="401:29">c</name><operator pos:start="401:30" pos:end="401:30">.</operator><name pos:start="401:31" pos:end="401:38">getClass</name></name><argument_list pos:start="401:39" pos:end="401:40">()</argument_list></call> <operator pos:start="401:42" pos:end="401:43">==</operator> <name pos:start="401:45" pos:end="401:59"><name pos:start="401:45" pos:end="401:53">LPolyline</name><operator pos:start="401:54" pos:end="401:54">.</operator><name pos:start="401:55" pos:end="401:59">class</name></name></expr>)</condition> <block pos:start="401:62" pos:end="403:25">{<block_content pos:start="402:33" pos:end="402:64">
				<expr_stmt pos:start="402:33" pos:end="402:64"><expr pos:start="402:33" pos:end="402:63"><call pos:start="402:33" pos:end="402:63"><name pos:start="402:33" pos:end="402:49"><name pos:start="402:33" pos:end="402:45">linesToRemove</name><operator pos:start="402:46" pos:end="402:46">.</operator><name pos:start="402:47" pos:end="402:49">add</name></name><argument_list pos:start="402:50" pos:end="402:63">(<argument pos:start="402:51" pos:end="402:62"><expr pos:start="402:51" pos:end="402:62"><operator pos:start="402:51" pos:end="402:51">(</operator><name pos:start="402:52" pos:end="402:60">LPolyline</name><operator pos:start="402:61" pos:end="402:61">)</operator><name pos:start="402:62" pos:end="402:62">c</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			</block_content>}</block></if></if_stmt>
		</block_content>}</block></while>
		<for pos:start="405:17" pos:end="407:17">for <control pos:start="405:21" pos:end="405:56">(<init pos:start="405:22" pos:end="405:55"><decl pos:start="405:22" pos:end="405:55"><type pos:start="405:22" pos:end="405:30"><name pos:start="405:22" pos:end="405:30">LPolyline</name></type> <name pos:start="405:32" pos:end="405:39">polyline</name> <range pos:start="405:41" pos:end="405:55">: <expr pos:start="405:43" pos:end="405:55"><name pos:start="405:43" pos:end="405:55">linesToRemove</name></expr></range></decl></init>)</control> <block pos:start="405:58" pos:end="407:17">{<block_content pos:start="406:25" pos:end="406:54">
			<expr_stmt pos:start="406:25" pos:end="406:54"><expr pos:start="406:25" pos:end="406:53"><call pos:start="406:25" pos:end="406:53"><name pos:start="406:25" pos:end="406:43"><name pos:start="406:25" pos:end="406:27">map</name><operator pos:start="406:28" pos:end="406:28">.</operator><name pos:start="406:29" pos:end="406:43">removeComponent</name></name><argument_list pos:start="406:44" pos:end="406:53">(<argument pos:start="406:45" pos:end="406:52"><expr pos:start="406:45" pos:end="406:52"><name pos:start="406:45" pos:end="406:52">polyline</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		</block_content>}</block></for>
		<expr_stmt pos:start="408:17" pos:end="408:37"><expr pos:start="408:17" pos:end="408:36"><call pos:start="408:17" pos:end="408:36"><name pos:start="408:17" pos:end="408:34"><name pos:start="408:17" pos:end="408:28">allPolylines</name><operator pos:start="408:29" pos:end="408:29">.</operator><name pos:start="408:30" pos:end="408:34">clear</name></name><argument_list pos:start="408:35" pos:end="408:36">()</argument_list></call></expr>;</expr_stmt>
	</block_content>}</block></function>
	
	<comment type="line" pos:start="411:9" pos:end="411:85">// Removes all lines and points from the polygon that's currently being drawn</comment>
	<function pos:start="412:9" pos:end="421:9"><type pos:start="412:9" pos:end="412:19"><specifier pos:start="412:9" pos:end="412:14">public</specifier> <name pos:start="412:16" pos:end="412:19">void</name></type> <name pos:start="412:21" pos:end="412:36">deleteNewPolygon</name><parameter_list pos:start="412:37" pos:end="412:38">()</parameter_list> <block pos:start="412:40" pos:end="421:9">{<block_content pos:start="413:17" pos:end="420:39">
		<for pos:start="413:17" pos:end="415:17">for <control pos:start="413:21" pos:end="413:63">(<init pos:start="413:22" pos:end="413:31"><decl pos:start="413:22" pos:end="413:30"><type pos:start="413:22" pos:end="413:24"><name pos:start="413:22" pos:end="413:24">int</name></type> <name pos:start="413:26" pos:end="413:26">i</name> <init pos:start="413:28" pos:end="413:30">= <expr pos:start="413:30" pos:end="413:30"><literal type="number" pos:start="413:30" pos:end="413:30">0</literal></expr></init></decl>;</init> <condition pos:start="413:33" pos:end="413:58"><expr pos:start="413:33" pos:end="413:57"><name pos:start="413:33" pos:end="413:33">i</name> <operator pos:start="413:35" pos:end="413:35">&lt;</operator> <call pos:start="413:37" pos:end="413:57"><name pos:start="413:37" pos:end="413:55"><name pos:start="413:37" pos:end="413:50">newPolygonPins</name><operator pos:start="413:51" pos:end="413:51">.</operator><name pos:start="413:52" pos:end="413:55">size</name></name><argument_list pos:start="413:56" pos:end="413:57">()</argument_list></call></expr>;</condition> <incr pos:start="413:60" pos:end="413:62"><expr pos:start="413:60" pos:end="413:62"><name pos:start="413:60" pos:end="413:60">i</name><operator pos:start="413:61" pos:end="413:62">++</operator></expr></incr>)</control> <block pos:start="413:65" pos:end="415:17">{<block_content pos:start="414:25" pos:end="414:67">
			<expr_stmt pos:start="414:25" pos:end="414:67"><expr pos:start="414:25" pos:end="414:66"><call pos:start="414:25" pos:end="414:66"><name pos:start="414:25" pos:end="414:43"><name pos:start="414:25" pos:end="414:27">map</name><operator pos:start="414:28" pos:end="414:28">.</operator><name pos:start="414:29" pos:end="414:43">removeComponent</name></name><argument_list pos:start="414:44" pos:end="414:66">(<argument pos:start="414:45" pos:end="414:65"><expr pos:start="414:45" pos:end="414:65"><call pos:start="414:45" pos:end="414:65"><name pos:start="414:45" pos:end="414:62"><name pos:start="414:45" pos:end="414:58">newPolygonPins</name><operator pos:start="414:59" pos:end="414:59">.</operator><name pos:start="414:60" pos:end="414:62">get</name></name><argument_list pos:start="414:63" pos:end="414:65">(<argument pos:start="414:64" pos:end="414:64"><expr pos:start="414:64" pos:end="414:64"><name pos:start="414:64" pos:end="414:64">i</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		</block_content>}</block></for>
		<for pos:start="416:17" pos:end="418:17">for <control pos:start="416:21" pos:end="416:64">(<init pos:start="416:22" pos:end="416:31"><decl pos:start="416:22" pos:end="416:30"><type pos:start="416:22" pos:end="416:24"><name pos:start="416:22" pos:end="416:24">int</name></type> <name pos:start="416:26" pos:end="416:26">i</name> <init pos:start="416:28" pos:end="416:30">= <expr pos:start="416:30" pos:end="416:30"><literal type="number" pos:start="416:30" pos:end="416:30">0</literal></expr></init></decl>;</init> <condition pos:start="416:33" pos:end="416:59"><expr pos:start="416:33" pos:end="416:58"><name pos:start="416:33" pos:end="416:33">i</name> <operator pos:start="416:35" pos:end="416:35">&lt;</operator> <call pos:start="416:37" pos:end="416:58"><name pos:start="416:37" pos:end="416:56"><name pos:start="416:37" pos:end="416:51">newPolygonLines</name><operator pos:start="416:52" pos:end="416:52">.</operator><name pos:start="416:53" pos:end="416:56">size</name></name><argument_list pos:start="416:57" pos:end="416:58">()</argument_list></call></expr>;</condition> <incr pos:start="416:61" pos:end="416:63"><expr pos:start="416:61" pos:end="416:63"><name pos:start="416:61" pos:end="416:61">i</name><operator pos:start="416:62" pos:end="416:63">++</operator></expr></incr>)</control> <block pos:start="416:66" pos:end="418:17">{<block_content pos:start="417:25" pos:end="417:68">
			<expr_stmt pos:start="417:25" pos:end="417:68"><expr pos:start="417:25" pos:end="417:67"><call pos:start="417:25" pos:end="417:67"><name pos:start="417:25" pos:end="417:43"><name pos:start="417:25" pos:end="417:27">map</name><operator pos:start="417:28" pos:end="417:28">.</operator><name pos:start="417:29" pos:end="417:43">removeComponent</name></name><argument_list pos:start="417:44" pos:end="417:67">(<argument pos:start="417:45" pos:end="417:66"><expr pos:start="417:45" pos:end="417:66"><call pos:start="417:45" pos:end="417:66"><name pos:start="417:45" pos:end="417:63"><name pos:start="417:45" pos:end="417:59">newPolygonLines</name><operator pos:start="417:60" pos:end="417:60">.</operator><name pos:start="417:61" pos:end="417:63">get</name></name><argument_list pos:start="417:64" pos:end="417:66">(<argument pos:start="417:65" pos:end="417:65"><expr pos:start="417:65" pos:end="417:65"><name pos:start="417:65" pos:end="417:65">i</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		</block_content>}</block></for>
		<expr_stmt pos:start="419:17" pos:end="419:40"><expr pos:start="419:17" pos:end="419:39"><call pos:start="419:17" pos:end="419:39"><name pos:start="419:17" pos:end="419:37"><name pos:start="419:17" pos:end="419:31">polygonVertices</name><operator pos:start="419:32" pos:end="419:32">.</operator><name pos:start="419:33" pos:end="419:37">clear</name></name><argument_list pos:start="419:38" pos:end="419:39">()</argument_list></call></expr>;</expr_stmt>
		<expr_stmt pos:start="420:17" pos:end="420:39"><expr pos:start="420:17" pos:end="420:38"><call pos:start="420:17" pos:end="420:38"><name pos:start="420:17" pos:end="420:36">clearPolygonVertices</name><argument_list pos:start="420:37" pos:end="420:38">()</argument_list></call></expr>;</expr_stmt>
	</block_content>}</block></function>
	
	<comment type="line" pos:start="423:9" pos:end="423:51">// removes a polygon from the existing list</comment>
	<function pos:start="424:9" pos:end="440:9"><type pos:start="424:9" pos:end="424:19"><specifier pos:start="424:9" pos:end="424:14">public</specifier> <name pos:start="424:16" pos:end="424:19">void</name></type> <name pos:start="424:21" pos:end="424:36">deleteOldPolygon</name><parameter_list pos:start="424:37" pos:end="424:63">(<parameter pos:start="424:38" pos:end="424:62"><decl pos:start="424:38" pos:end="424:62"><type pos:start="424:38" pos:end="424:49"><name pos:start="424:38" pos:end="424:49">PriorityArea</name></type> <name pos:start="424:51" pos:end="424:62">areaToDelete</name></decl></parameter>)</parameter_list> <block pos:start="424:65" pos:end="440:9">{<block_content pos:start="425:17" pos:end="439:17">
		<for pos:start="425:17" pos:end="429:17">for <control pos:start="425:21" pos:end="425:65">(<init pos:start="425:22" pos:end="425:31"><decl pos:start="425:22" pos:end="425:30"><type pos:start="425:22" pos:end="425:24"><name pos:start="425:22" pos:end="425:24">int</name></type> <name pos:start="425:26" pos:end="425:26">i</name> <init pos:start="425:28" pos:end="425:30">= <expr pos:start="425:30" pos:end="425:30"><literal type="number" pos:start="425:30" pos:end="425:30">0</literal></expr></init></decl>;</init> <condition pos:start="425:33" pos:end="425:60"><expr pos:start="425:33" pos:end="425:59"><name pos:start="425:33" pos:end="425:33">i</name> <operator pos:start="425:35" pos:end="425:35">&lt;</operator> <call pos:start="425:37" pos:end="425:59"><name pos:start="425:37" pos:end="425:57"><name pos:start="425:37" pos:end="425:52">allPriorityAreas</name><operator pos:start="425:53" pos:end="425:53">.</operator><name pos:start="425:54" pos:end="425:57">size</name></name><argument_list pos:start="425:58" pos:end="425:59">()</argument_list></call></expr>;</condition> <incr pos:start="425:62" pos:end="425:64"><expr pos:start="425:62" pos:end="425:64"><name pos:start="425:62" pos:end="425:62">i</name><operator pos:start="425:63" pos:end="425:64">++</operator></expr></incr>)</control> <block pos:start="425:67" pos:end="429:17">{<block_content pos:start="426:25" pos:end="428:25">
			<if_stmt pos:start="426:25" pos:end="428:25"><if pos:start="426:25" pos:end="428:25">if <condition pos:start="426:28" pos:end="426:89">(<expr pos:start="426:29" pos:end="426:88"><call pos:start="426:29" pos:end="426:51"><name pos:start="426:29" pos:end="426:48"><name pos:start="426:29" pos:end="426:44">allPriorityAreas</name><operator pos:start="426:45" pos:end="426:45">.</operator><name pos:start="426:46" pos:end="426:48">get</name></name><argument_list pos:start="426:49" pos:end="426:51">(<argument pos:start="426:50" pos:end="426:50"><expr pos:start="426:50" pos:end="426:50"><name pos:start="426:50" pos:end="426:50">i</name></expr></argument>)</argument_list></call><operator pos:start="426:52" pos:end="426:52">.</operator><call pos:start="426:53" pos:end="426:59"><name pos:start="426:53" pos:end="426:57">getId</name><argument_list pos:start="426:58" pos:end="426:59">()</argument_list></call><operator pos:start="426:60" pos:end="426:60">.</operator><call pos:start="426:61" pos:end="426:88"><name pos:start="426:61" pos:end="426:66">equals</name><argument_list pos:start="426:67" pos:end="426:88">(<argument pos:start="426:68" pos:end="426:87"><expr pos:start="426:68" pos:end="426:87"><call pos:start="426:68" pos:end="426:87"><name pos:start="426:68" pos:end="426:85"><name pos:start="426:68" pos:end="426:79">areaToDelete</name><operator pos:start="426:80" pos:end="426:80">.</operator><name pos:start="426:81" pos:end="426:85">getId</name></name><argument_list pos:start="426:86" pos:end="426:87">()</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="426:91" pos:end="428:25">{<block_content pos:start="427:33" pos:end="427:59">
				<expr_stmt pos:start="427:33" pos:end="427:59"><expr pos:start="427:33" pos:end="427:58"><call pos:start="427:33" pos:end="427:58"><name pos:start="427:33" pos:end="427:55"><name pos:start="427:33" pos:end="427:48">allPriorityAreas</name><operator pos:start="427:49" pos:end="427:49">.</operator><name pos:start="427:50" pos:end="427:55">remove</name></name><argument_list pos:start="427:56" pos:end="427:58">(<argument pos:start="427:57" pos:end="427:57"><expr pos:start="427:57" pos:end="427:57"><name pos:start="427:57" pos:end="427:57">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			</block_content>}</block></if></if_stmt>
		</block_content>}</block></for>
		<comment type="line" pos:start="430:17" pos:end="430:76">// redraw polygons to map (without the one that was deleted)</comment>
		<decl_stmt pos:start="431:17" pos:end="431:94"><decl pos:start="431:17" pos:end="431:93"><type pos:start="431:17" pos:end="431:40"><name pos:start="431:17" pos:end="431:40"><name pos:start="431:17" pos:end="431:26">LinkedList</name><argument_list type="generic" pos:start="431:27" pos:end="431:40">&lt;<argument pos:start="431:28" pos:end="431:39"><name pos:start="431:28" pos:end="431:39">PriorityArea</name></argument>&gt;</argument_list></name></type> <name pos:start="431:42" pos:end="431:56">tempPolygonList</name> <init pos:start="431:58" pos:end="431:93">= <expr pos:start="431:60" pos:end="431:93"><operator pos:start="431:60" pos:end="431:62">new</operator> <call pos:start="431:64" pos:end="431:93"><name pos:start="431:64" pos:end="431:75"><name pos:start="431:64" pos:end="431:73">LinkedList</name><argument_list type="generic" pos:start="431:74" pos:end="431:75">&lt;&gt;</argument_list></name><argument_list pos:start="431:76" pos:end="431:93">(<argument pos:start="431:77" pos:end="431:92"><expr pos:start="431:77" pos:end="431:92"><name pos:start="431:77" pos:end="431:92">allPriorityAreas</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt pos:start="432:17" pos:end="432:41"><expr pos:start="432:17" pos:end="432:40"><call pos:start="432:17" pos:end="432:40"><name pos:start="432:17" pos:end="432:38">removeAllPriorityAreas</name><argument_list pos:start="432:39" pos:end="432:40">()</argument_list></call></expr>;</expr_stmt>
		<for pos:start="433:17" pos:end="439:17">for <control pos:start="433:21" pos:end="433:64">(<init pos:start="433:22" pos:end="433:31"><decl pos:start="433:22" pos:end="433:30"><type pos:start="433:22" pos:end="433:24"><name pos:start="433:22" pos:end="433:24">int</name></type> <name pos:start="433:26" pos:end="433:26">i</name> <init pos:start="433:28" pos:end="433:30">= <expr pos:start="433:30" pos:end="433:30"><literal type="number" pos:start="433:30" pos:end="433:30">0</literal></expr></init></decl>;</init> <condition pos:start="433:33" pos:end="433:59"><expr pos:start="433:33" pos:end="433:58"><name pos:start="433:33" pos:end="433:33">i</name> <operator pos:start="433:35" pos:end="433:35">&lt;</operator> <call pos:start="433:37" pos:end="433:58"><name pos:start="433:37" pos:end="433:56"><name pos:start="433:37" pos:end="433:51">tempPolygonList</name><operator pos:start="433:52" pos:end="433:52">.</operator><name pos:start="433:53" pos:end="433:56">size</name></name><argument_list pos:start="433:57" pos:end="433:58">()</argument_list></call></expr>;</condition> <incr pos:start="433:61" pos:end="433:63"><expr pos:start="433:61" pos:end="433:63"><name pos:start="433:61" pos:end="433:61">i</name><operator pos:start="433:62" pos:end="433:63">++</operator></expr></incr>)</control> <block pos:start="433:66" pos:end="439:17">{<block_content pos:start="434:25" pos:end="438:163">
			<for pos:start="434:25" pos:end="436:25">for <control pos:start="434:29" pos:end="434:96">(<init pos:start="434:30" pos:end="434:39"><decl pos:start="434:30" pos:end="434:38"><type pos:start="434:30" pos:end="434:32"><name pos:start="434:30" pos:end="434:32">int</name></type> <name pos:start="434:34" pos:end="434:34">j</name> <init pos:start="434:36" pos:end="434:38">= <expr pos:start="434:38" pos:end="434:38"><literal type="number" pos:start="434:38" pos:end="434:38">0</literal></expr></init></decl>;</init> <condition pos:start="434:41" pos:end="434:91"><expr pos:start="434:41" pos:end="434:90"><name pos:start="434:41" pos:end="434:41">j</name> <operator pos:start="434:43" pos:end="434:43">&lt;</operator> <call pos:start="434:45" pos:end="434:66"><name pos:start="434:45" pos:end="434:63"><name pos:start="434:45" pos:end="434:59">tempPolygonList</name><operator pos:start="434:60" pos:end="434:60">.</operator><name pos:start="434:61" pos:end="434:63">get</name></name><argument_list pos:start="434:64" pos:end="434:66">(<argument pos:start="434:65" pos:end="434:65"><expr pos:start="434:65" pos:end="434:65"><name pos:start="434:65" pos:end="434:65">i</name></expr></argument>)</argument_list></call><operator pos:start="434:67" pos:end="434:67">.</operator><call pos:start="434:68" pos:end="434:83"><name pos:start="434:68" pos:end="434:81">getCoordinates</name><argument_list pos:start="434:82" pos:end="434:83">()</argument_list></call><operator pos:start="434:84" pos:end="434:84">.</operator><call pos:start="434:85" pos:end="434:90"><name pos:start="434:85" pos:end="434:88">size</name><argument_list pos:start="434:89" pos:end="434:90">()</argument_list></call></expr>;</condition> <incr pos:start="434:93" pos:end="434:95"><expr pos:start="434:93" pos:end="434:95"><name pos:start="434:93" pos:end="434:93">j</name><operator pos:start="434:94" pos:end="434:95">++</operator></expr></incr>)</control> <block pos:start="434:98" pos:end="436:25">{<block_content pos:start="435:41" pos:end="435:193">
					<expr_stmt pos:start="435:41" pos:end="435:193"><expr pos:start="435:41" pos:end="435:192"><call pos:start="435:41" pos:end="435:192"><name pos:start="435:41" pos:end="435:56">addPolygonVertex</name><argument_list pos:start="435:57" pos:end="435:192">(<argument pos:start="435:58" pos:end="435:191"><expr pos:start="435:58" pos:end="435:191"><operator pos:start="435:58" pos:end="435:60">new</operator> <call pos:start="435:62" pos:end="435:191"><name pos:start="435:62" pos:end="435:66">Point</name><argument_list pos:start="435:67" pos:end="435:191">(<argument pos:start="435:68" pos:end="435:127"><expr pos:start="435:68" pos:end="435:127"><call pos:start="435:68" pos:end="435:89"><name pos:start="435:68" pos:end="435:86"><name pos:start="435:68" pos:end="435:82">tempPolygonList</name><operator pos:start="435:83" pos:end="435:83">.</operator><name pos:start="435:84" pos:end="435:86">get</name></name><argument_list pos:start="435:87" pos:end="435:89">(<argument pos:start="435:88" pos:end="435:88"><expr pos:start="435:88" pos:end="435:88"><name pos:start="435:88" pos:end="435:88">i</name></expr></argument>)</argument_list></call><operator pos:start="435:90" pos:end="435:90">.</operator><call pos:start="435:91" pos:end="435:106"><name pos:start="435:91" pos:end="435:104">getCoordinates</name><argument_list pos:start="435:105" pos:end="435:106">()</argument_list></call><operator pos:start="435:107" pos:end="435:107">.</operator><call pos:start="435:108" pos:end="435:113"><name pos:start="435:108" pos:end="435:110">get</name><argument_list pos:start="435:111" pos:end="435:113">(<argument pos:start="435:112" pos:end="435:112"><expr pos:start="435:112" pos:end="435:112"><name pos:start="435:112" pos:end="435:112">j</name></expr></argument>)</argument_list></call><operator pos:start="435:114" pos:end="435:114">.</operator><call pos:start="435:115" pos:end="435:127"><name pos:start="435:115" pos:end="435:125">getLatitude</name><argument_list pos:start="435:126" pos:end="435:127">()</argument_list></call></expr></argument>, <argument pos:start="435:130" pos:end="435:190"><expr pos:start="435:130" pos:end="435:190"><call pos:start="435:130" pos:end="435:151"><name pos:start="435:130" pos:end="435:148"><name pos:start="435:130" pos:end="435:144">tempPolygonList</name><operator pos:start="435:145" pos:end="435:145">.</operator><name pos:start="435:146" pos:end="435:148">get</name></name><argument_list pos:start="435:149" pos:end="435:151">(<argument pos:start="435:150" pos:end="435:150"><expr pos:start="435:150" pos:end="435:150"><name pos:start="435:150" pos:end="435:150">i</name></expr></argument>)</argument_list></call><operator pos:start="435:152" pos:end="435:152">.</operator><call pos:start="435:153" pos:end="435:168"><name pos:start="435:153" pos:end="435:166">getCoordinates</name><argument_list pos:start="435:167" pos:end="435:168">()</argument_list></call><operator pos:start="435:169" pos:end="435:169">.</operator><call pos:start="435:170" pos:end="435:175"><name pos:start="435:170" pos:end="435:172">get</name><argument_list pos:start="435:173" pos:end="435:175">(<argument pos:start="435:174" pos:end="435:174"><expr pos:start="435:174" pos:end="435:174"><name pos:start="435:174" pos:end="435:174">j</name></expr></argument>)</argument_list></call><operator pos:start="435:176" pos:end="435:176">.</operator><call pos:start="435:177" pos:end="435:190"><name pos:start="435:177" pos:end="435:188">getLongitude</name><argument_list pos:start="435:189" pos:end="435:190">()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			</block_content>}</block></for>
				<expr_stmt pos:start="437:33" pos:end="437:46"><expr pos:start="437:33" pos:end="437:45"><call pos:start="437:33" pos:end="437:45"><name pos:start="437:33" pos:end="437:43">drawPolygon</name><argument_list pos:start="437:44" pos:end="437:45">()</argument_list></call></expr>;</expr_stmt>	
				<expr_stmt pos:start="438:33" pos:end="438:163"><expr pos:start="438:33" pos:end="438:162"><call pos:start="438:33" pos:end="438:162"><name pos:start="438:33" pos:end="438:47">addPriorityArea</name><argument_list pos:start="438:48" pos:end="438:162">(<argument pos:start="438:49" pos:end="438:80"><expr pos:start="438:49" pos:end="438:80"><call pos:start="438:49" pos:end="438:70"><name pos:start="438:49" pos:end="438:67"><name pos:start="438:49" pos:end="438:63">tempPolygonList</name><operator pos:start="438:64" pos:end="438:64">.</operator><name pos:start="438:65" pos:end="438:67">get</name></name><argument_list pos:start="438:68" pos:end="438:70">(<argument pos:start="438:69" pos:end="438:69"><expr pos:start="438:69" pos:end="438:69"><name pos:start="438:69" pos:end="438:69">i</name></expr></argument>)</argument_list></call><operator pos:start="438:71" pos:end="438:71">.</operator><call pos:start="438:72" pos:end="438:80"><name pos:start="438:72" pos:end="438:78">getType</name><argument_list pos:start="438:79" pos:end="438:80">()</argument_list></call></expr></argument>, <argument pos:start="438:83" pos:end="438:121"><expr pos:start="438:83" pos:end="438:121"><call pos:start="438:83" pos:end="438:104"><name pos:start="438:83" pos:end="438:101"><name pos:start="438:83" pos:end="438:97">tempPolygonList</name><operator pos:start="438:98" pos:end="438:98">.</operator><name pos:start="438:99" pos:end="438:101">get</name></name><argument_list pos:start="438:102" pos:end="438:104">(<argument pos:start="438:103" pos:end="438:103"><expr pos:start="438:103" pos:end="438:103"><name pos:start="438:103" pos:end="438:103">i</name></expr></argument>)</argument_list></call><operator pos:start="438:105" pos:end="438:105">.</operator><call pos:start="438:106" pos:end="438:121"><name pos:start="438:106" pos:end="438:119">getDescription</name><argument_list pos:start="438:120" pos:end="438:121">()</argument_list></call></expr></argument>, <argument pos:start="438:124" pos:end="438:161"><expr pos:start="438:124" pos:end="438:161"><call pos:start="438:124" pos:end="438:145"><name pos:start="438:124" pos:end="438:142"><name pos:start="438:124" pos:end="438:138">tempPolygonList</name><operator pos:start="438:139" pos:end="438:139">.</operator><name pos:start="438:140" pos:end="438:142">get</name></name><argument_list pos:start="438:143" pos:end="438:145">(<argument pos:start="438:144" pos:end="438:144"><expr pos:start="438:144" pos:end="438:144"><name pos:start="438:144" pos:end="438:144">i</name></expr></argument>)</argument_list></call><operator pos:start="438:146" pos:end="438:146">.</operator><call pos:start="438:147" pos:end="438:161"><name pos:start="438:147" pos:end="438:159">getImportance</name><argument_list pos:start="438:160" pos:end="438:161">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		</block_content>}</block></for>
	</block_content>}</block></function>
	
	<comment type="line" pos:start="442:9" pos:end="442:43">// redraws all the lines to the map</comment>
	<function pos:start="443:9" pos:end="447:9"><type pos:start="443:9" pos:end="443:38"><specifier pos:start="443:9" pos:end="443:14">public</specifier> <name pos:start="443:16" pos:end="443:38"><name pos:start="443:16" pos:end="443:21">Vector</name><argument_list type="generic" pos:start="443:22" pos:end="443:38">&lt;<argument pos:start="443:23" pos:end="443:37"><name pos:start="443:23" pos:end="443:37"><name pos:start="443:23" pos:end="443:26">List</name><argument_list type="generic" pos:start="443:27" pos:end="443:37">&lt;<argument pos:start="443:28" pos:end="443:36"><name pos:start="443:28" pos:end="443:36">LPolyline</name></argument>&gt;</argument_list></name></argument>&gt;</argument_list></name></type> <name pos:start="443:40" pos:end="443:53">redrawAllLines</name><parameter_list pos:start="443:54" pos:end="443:73">(<parameter pos:start="443:55" pos:end="443:72"><decl pos:start="443:55" pos:end="443:72"><type pos:start="443:55" pos:end="443:61"><name pos:start="443:55" pos:end="443:61">boolean</name></type> <name pos:start="443:63" pos:end="443:72">fromActive</name></decl></parameter>)</parameter_list> <block pos:start="443:75" pos:end="447:9">{<block_content pos:start="444:17" pos:end="446:68">
		<expr_stmt pos:start="444:17" pos:end="444:33"><expr pos:start="444:17" pos:end="444:32"><call pos:start="444:17" pos:end="444:32"><name pos:start="444:17" pos:end="444:30">removeAllLines</name><argument_list pos:start="444:31" pos:end="444:32">()</argument_list></call></expr>;</expr_stmt>
		<decl_stmt pos:start="445:17" pos:end="445:76"><decl pos:start="445:17" pos:end="445:75"><type pos:start="445:17" pos:end="445:41"><name pos:start="445:17" pos:end="445:41"><name pos:start="445:17" pos:end="445:22">Vector</name><argument_list type="generic" pos:start="445:23" pos:end="445:41">&lt;<argument pos:start="445:24" pos:end="445:40"><name pos:start="445:24" pos:end="445:40"><name pos:start="445:24" pos:end="445:27">List</name><argument_list type="generic" pos:start="445:28" pos:end="445:40">&lt;<argument pos:start="445:29" pos:end="445:39"><name pos:start="445:29" pos:end="445:39">UIEdgePoint</name></argument>&gt;</argument_list></name></argument>&gt;</argument_list></name></type> <name pos:start="445:43" pos:end="445:51">mapPoints</name> <init pos:start="445:53" pos:end="445:75">= <expr pos:start="445:55" pos:end="445:75"><call pos:start="445:55" pos:end="445:75"><name pos:start="445:55" pos:end="445:73">getOrderedWayPoints</name><argument_list pos:start="445:74" pos:end="445:75">()</argument_list></call></expr></init></decl>;</decl_stmt>
		<return pos:start="446:17" pos:end="446:68">return <expr pos:start="446:24" pos:end="446:67"><call pos:start="446:24" pos:end="446:67"><name pos:start="446:24" pos:end="446:44">drawLinesForWayPoints</name><argument_list pos:start="446:45" pos:end="446:67">(<argument pos:start="446:46" pos:end="446:54"><expr pos:start="446:46" pos:end="446:54"><name pos:start="446:46" pos:end="446:54">mapPoints</name></expr></argument>, <argument pos:start="446:57" pos:end="446:66"><expr pos:start="446:57" pos:end="446:66"><name pos:start="446:57" pos:end="446:66">fromActive</name></expr></argument>)</argument_list></call></expr>;</return>
	</block_content>}</block></function>
	
	<comment type="line" pos:start="449:9" pos:end="449:77">// highlights the points that are upstream based on upstream variable</comment>
	<function pos:start="450:9" pos:end="497:9"><type pos:start="450:9" pos:end="450:19"><specifier pos:start="450:9" pos:end="450:14">public</specifier> <name pos:start="450:16" pos:end="450:19">void</name></type> <name pos:start="450:21" pos:end="450:37">highlightUpstream</name><parameter_list pos:start="450:38" pos:end="450:39">()</parameter_list> <block pos:start="450:41" pos:end="497:9">{<block_content pos:start="451:17" pos:end="496:17">
		<if_stmt pos:start="451:17" pos:end="452:31"><if pos:start="451:17" pos:end="452:31">if <condition pos:start="451:20" pos:end="451:135">(<expr pos:start="451:21" pos:end="451:134"><name pos:start="451:21" pos:end="451:28">upstream</name> <operator pos:start="451:30" pos:end="451:31">==</operator> <literal type="null" pos:start="451:33" pos:end="451:36">null</literal> <operator pos:start="451:38" pos:end="451:39">||</operator> <call pos:start="451:41" pos:end="451:66"><name pos:start="451:41" pos:end="451:64"><name pos:start="451:41" pos:end="451:44">this</name><operator pos:start="451:45" pos:end="451:45">.</operator><name pos:start="451:46" pos:end="451:64">getOrderedWayPoints</name></name><argument_list pos:start="451:65" pos:end="451:66">()</argument_list></call><operator pos:start="451:67" pos:end="451:67">.</operator><call pos:start="451:68" pos:end="451:73"><name pos:start="451:68" pos:end="451:70">get</name><argument_list pos:start="451:71" pos:end="451:73">(<argument pos:start="451:72" pos:end="451:72"><expr pos:start="451:72" pos:end="451:72"><literal type="number" pos:start="451:72" pos:end="451:72">0</literal></expr></argument>)</argument_list></call><operator pos:start="451:74" pos:end="451:74">.</operator><call pos:start="451:75" pos:end="451:80"><name pos:start="451:75" pos:end="451:78">size</name><argument_list pos:start="451:79" pos:end="451:80">()</argument_list></call> <operator pos:start="451:82" pos:end="451:83">==</operator> <literal type="number" pos:start="451:85" pos:end="451:85">0</literal> <operator pos:start="451:87" pos:end="451:88">||</operator> <call pos:start="451:90" pos:end="451:115"><name pos:start="451:90" pos:end="451:113"><name pos:start="451:90" pos:end="451:93">this</name><operator pos:start="451:94" pos:end="451:94">.</operator><name pos:start="451:95" pos:end="451:113">getOrderedWayPoints</name></name><argument_list pos:start="451:114" pos:end="451:115">()</argument_list></call><operator pos:start="451:116" pos:end="451:116">.</operator><call pos:start="451:117" pos:end="451:122"><name pos:start="451:117" pos:end="451:119">get</name><argument_list pos:start="451:120" pos:end="451:122">(<argument pos:start="451:121" pos:end="451:121"><expr pos:start="451:121" pos:end="451:121"><literal type="number" pos:start="451:121" pos:end="451:121">1</literal></expr></argument>)</argument_list></call><operator pos:start="451:123" pos:end="451:123">.</operator><call pos:start="451:124" pos:end="451:129"><name pos:start="451:124" pos:end="451:127">size</name><argument_list pos:start="451:128" pos:end="451:129">()</argument_list></call> <operator pos:start="451:131" pos:end="451:132">==</operator> <literal type="number" pos:start="451:134" pos:end="451:134">0</literal></expr>)</condition><block type="pseudo" pos:start="452:25" pos:end="452:31"><block_content pos:start="452:25" pos:end="452:31">
			<return pos:start="452:25" pos:end="452:31">return;</return></block_content></block></if></if_stmt>
		<decl_stmt pos:start="453:17" pos:end="453:98"><decl pos:start="453:17" pos:end="453:97"><type pos:start="453:17" pos:end="453:22"><name pos:start="453:17" pos:end="453:22">String</name></type> <name pos:start="453:24" pos:end="453:31">basepath</name> <init pos:start="453:33" pos:end="453:97">= <expr pos:start="453:35" pos:end="453:97"><call pos:start="453:35" pos:end="453:60"><name pos:start="453:35" pos:end="453:58"><name pos:start="453:35" pos:end="453:47">VaadinService</name><operator pos:start="453:48" pos:end="453:48">.</operator><name pos:start="453:49" pos:end="453:58">getCurrent</name></name><argument_list pos:start="453:59" pos:end="453:60">()</argument_list></call><operator pos:start="453:61" pos:end="453:61">.</operator><call pos:start="453:62" pos:end="453:79"><name pos:start="453:62" pos:end="453:77">getBaseDirectory</name><argument_list pos:start="453:78" pos:end="453:79">()</argument_list></call><operator pos:start="453:80" pos:end="453:80">.</operator><call pos:start="453:81" pos:end="453:97"><name pos:start="453:81" pos:end="453:95">getAbsolutePath</name><argument_list pos:start="453:96" pos:end="453:97">()</argument_list></call></expr></init></decl>;</decl_stmt>
		<decl_stmt pos:start="454:17" pos:end="454:110"><decl pos:start="454:17" pos:end="454:109"><type pos:start="454:17" pos:end="454:28"><name pos:start="454:17" pos:end="454:28">FileResource</name></type> <name pos:start="454:30" pos:end="454:42">waterfallIcon</name> <init pos:start="454:44" pos:end="454:109">= <expr pos:start="454:46" pos:end="454:109"><operator pos:start="454:46" pos:end="454:48">new</operator> <call pos:start="454:50" pos:end="454:109"><name pos:start="454:50" pos:end="454:61">FileResource</name><argument_list pos:start="454:62" pos:end="454:109">(<argument pos:start="454:63" pos:end="454:108"><expr pos:start="454:63" pos:end="454:108"><operator pos:start="454:63" pos:end="454:65">new</operator> <call pos:start="454:67" pos:end="454:108"><name pos:start="454:67" pos:end="454:70">File</name><argument_list pos:start="454:71" pos:end="454:108">(<argument pos:start="454:72" pos:end="454:107"><expr pos:start="454:72" pos:end="454:107"><name pos:start="454:72" pos:end="454:79">basepath</name><operator pos:start="454:80" pos:end="454:80">+</operator><literal type="string" pos:start="454:81" pos:end="454:107">"/VAADIN/img/waterfall.png"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<decl_stmt pos:start="455:17" pos:end="455:106"><decl pos:start="455:17" pos:end="455:105"><type pos:start="455:17" pos:end="455:28"><name pos:start="455:17" pos:end="455:28">FileResource</name></type> <name pos:start="455:30" pos:end="455:38">greenIcon</name> <init pos:start="455:40" pos:end="455:105">= <expr pos:start="455:42" pos:end="455:105"><operator pos:start="455:42" pos:end="455:44">new</operator> <call pos:start="455:46" pos:end="455:105"><name pos:start="455:46" pos:end="455:57">FileResource</name><argument_list pos:start="455:58" pos:end="455:105">(<argument pos:start="455:59" pos:end="455:104"><expr pos:start="455:59" pos:end="455:104"><operator pos:start="455:59" pos:end="455:61">new</operator> <call pos:start="455:63" pos:end="455:104"><name pos:start="455:63" pos:end="455:66">File</name><argument_list pos:start="455:67" pos:end="455:104">(<argument pos:start="455:68" pos:end="455:103"><expr pos:start="455:68" pos:end="455:103"><name pos:start="455:68" pos:end="455:75">basepath</name><operator pos:start="455:76" pos:end="455:76">+</operator><literal type="string" pos:start="455:77" pos:end="455:103">"/VAADIN/img/green-dot.png"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<decl_stmt pos:start="456:17" pos:end="456:104"><decl pos:start="456:17" pos:end="456:103"><type pos:start="456:17" pos:end="456:28"><name pos:start="456:17" pos:end="456:28">FileResource</name></type> <name pos:start="456:30" pos:end="456:37">blueIcon</name> <init pos:start="456:39" pos:end="456:103">= <expr pos:start="456:41" pos:end="456:103"><operator pos:start="456:41" pos:end="456:43">new</operator> <call pos:start="456:45" pos:end="456:103"><name pos:start="456:45" pos:end="456:56">FileResource</name><argument_list pos:start="456:57" pos:end="456:103">(<argument pos:start="456:58" pos:end="456:102"><expr pos:start="456:58" pos:end="456:102"><operator pos:start="456:58" pos:end="456:60">new</operator> <call pos:start="456:62" pos:end="456:102"><name pos:start="456:62" pos:end="456:65">File</name><argument_list pos:start="456:66" pos:end="456:102">(<argument pos:start="456:67" pos:end="456:101"><expr pos:start="456:67" pos:end="456:101"><name pos:start="456:67" pos:end="456:74">basepath</name><operator pos:start="456:75" pos:end="456:75">+</operator><literal type="string" pos:start="456:76" pos:end="456:101">"/VAADIN/img/blue-dot.png"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<for pos:start="457:17" pos:end="496:17">for <control pos:start="457:21" pos:end="457:63">(<init pos:start="457:22" pos:end="457:31"><decl pos:start="457:22" pos:end="457:30"><type pos:start="457:22" pos:end="457:24"><name pos:start="457:22" pos:end="457:24">int</name></type> <name pos:start="457:26" pos:end="457:26">i</name> <init pos:start="457:28" pos:end="457:30">= <expr pos:start="457:30" pos:end="457:30"><literal type="number" pos:start="457:30" pos:end="457:30">0</literal></expr></init></decl>;</init> <condition pos:start="457:33" pos:end="457:58"><expr pos:start="457:33" pos:end="457:57"><name pos:start="457:33" pos:end="457:33">i</name> <operator pos:start="457:35" pos:end="457:35">&lt;</operator> <call pos:start="457:37" pos:end="457:50"><name pos:start="457:37" pos:end="457:48"><name pos:start="457:37" pos:end="457:40">this</name><operator pos:start="457:41" pos:end="457:41">.</operator><name pos:start="457:42" pos:end="457:48">getPins</name></name><argument_list pos:start="457:49" pos:end="457:50">()</argument_list></call><operator pos:start="457:51" pos:end="457:51">.</operator><call pos:start="457:52" pos:end="457:57"><name pos:start="457:52" pos:end="457:55">size</name><argument_list pos:start="457:56" pos:end="457:57">()</argument_list></call></expr>;</condition> <incr pos:start="457:60" pos:end="457:62"><expr pos:start="457:60" pos:end="457:62"><name pos:start="457:60" pos:end="457:60">i</name><operator pos:start="457:61" pos:end="457:62">++</operator></expr></incr>)</control> <block pos:start="457:65" pos:end="496:17">{<block_content pos:start="459:25" pos:end="495:25">
			<comment type="line" pos:start="458:25" pos:end="458:110">// if upstream is false, make the last waypoints on both sides into the waterfall icon</comment>
			<if_stmt pos:start="459:25" pos:end="495:25"><if pos:start="459:25" pos:end="469:25">if <condition pos:start="459:28" pos:end="464:46">(<expr pos:start="459:29" pos:end="464:45"><operator pos:start="459:29" pos:end="459:29">(</operator><operator pos:start="459:30" pos:end="459:30">(</operator><operator pos:start="459:31" pos:end="459:31">(</operator><name pos:start="459:32" pos:end="459:37">double</name><operator pos:start="459:38" pos:end="459:38">)</operator><call pos:start="459:39" pos:end="459:95"><name pos:start="459:39" pos:end="459:48"><name pos:start="459:39" pos:end="459:42">Math</name><operator pos:start="459:43" pos:end="459:43">.</operator><name pos:start="459:44" pos:end="459:48">round</name></name><argument_list pos:start="459:49" pos:end="459:95">(<argument pos:start="459:50" pos:end="459:94"><expr pos:start="459:50" pos:end="459:94"><call pos:start="459:50" pos:end="459:58"><name pos:start="459:50" pos:end="459:56">getPins</name><argument_list pos:start="459:57" pos:end="459:58">()</argument_list></call><operator pos:start="459:59" pos:end="459:59">.</operator><call pos:start="459:60" pos:end="459:65"><name pos:start="459:60" pos:end="459:62">get</name><argument_list pos:start="459:63" pos:end="459:65">(<argument pos:start="459:64" pos:end="459:64"><expr pos:start="459:64" pos:end="459:64"><name pos:start="459:64" pos:end="459:64">i</name></expr></argument>)</argument_list></call><operator pos:start="459:66" pos:end="459:66">.</operator><call pos:start="459:67" pos:end="459:76"><name pos:start="459:67" pos:end="459:74">getPoint</name><argument_list pos:start="459:75" pos:end="459:76">()</argument_list></call><operator pos:start="459:77" pos:end="459:77">.</operator><call pos:start="459:78" pos:end="459:85"><name pos:start="459:78" pos:end="459:83">getLat</name><argument_list pos:start="459:84" pos:end="459:85">()</argument_list></call> <operator pos:start="459:87" pos:end="459:87">*</operator> <literal type="number" pos:start="459:89" pos:end="459:94">10000d</literal></expr></argument>)</argument_list></call> <operator pos:start="459:97" pos:end="459:97">/</operator> <literal type="number" pos:start="459:99" pos:end="459:104">10000d</literal> <operator pos:start="459:106" pos:end="459:107">==</operator> <operator pos:start="459:109" pos:end="459:109">(</operator><name pos:start="459:110" pos:end="459:115">double</name><operator pos:start="459:116" pos:end="459:116">)</operator><call pos:start="459:117" pos:end="459:242"><name pos:start="459:117" pos:end="459:126"><name pos:start="459:117" pos:end="459:120">Math</name><operator pos:start="459:121" pos:end="459:121">.</operator><name pos:start="459:122" pos:end="459:126">round</name></name><argument_list pos:start="459:127" pos:end="459:242">(<argument pos:start="459:128" pos:end="459:241"><expr pos:start="459:128" pos:end="459:241"><call pos:start="459:128" pos:end="459:232"><name pos:start="459:128" pos:end="459:145"><name pos:start="459:128" pos:end="459:133">Double</name><operator pos:start="459:134" pos:end="459:134">.</operator><name pos:start="459:135" pos:end="459:145">parseDouble</name></name><argument_list pos:start="459:146" pos:end="459:232">(<argument pos:start="459:147" pos:end="459:231"><expr pos:start="459:147" pos:end="459:231"><call pos:start="459:147" pos:end="459:167"><name pos:start="459:147" pos:end="459:165">getOrderedWayPoints</name><argument_list pos:start="459:166" pos:end="459:167">()</argument_list></call><operator pos:start="459:168" pos:end="459:168">.</operator><call pos:start="459:169" pos:end="459:174"><name pos:start="459:169" pos:end="459:171">get</name><argument_list pos:start="459:172" pos:end="459:174">(<argument pos:start="459:173" pos:end="459:173"><expr pos:start="459:173" pos:end="459:173"><literal type="number" pos:start="459:173" pos:end="459:173">0</literal></expr></argument>)</argument_list></call><operator pos:start="459:175" pos:end="459:175">.</operator><call pos:start="459:176" pos:end="459:217"><name pos:start="459:176" pos:end="459:178">get</name><argument_list pos:start="459:179" pos:end="459:217">(<argument pos:start="459:180" pos:end="459:216"><expr pos:start="459:180" pos:end="459:216"><call pos:start="459:180" pos:end="459:200"><name pos:start="459:180" pos:end="459:198">getOrderedWayPoints</name><argument_list pos:start="459:199" pos:end="459:200">()</argument_list></call><operator pos:start="459:201" pos:end="459:201">.</operator><call pos:start="459:202" pos:end="459:207"><name pos:start="459:202" pos:end="459:204">get</name><argument_list pos:start="459:205" pos:end="459:207">(<argument pos:start="459:206" pos:end="459:206"><expr pos:start="459:206" pos:end="459:206"><literal type="number" pos:start="459:206" pos:end="459:206">0</literal></expr></argument>)</argument_list></call><operator pos:start="459:208" pos:end="459:208">.</operator><call pos:start="459:209" pos:end="459:214"><name pos:start="459:209" pos:end="459:212">size</name><argument_list pos:start="459:213" pos:end="459:214">()</argument_list></call><operator pos:start="459:215" pos:end="459:215">-</operator><literal type="number" pos:start="459:216" pos:end="459:216">1</literal></expr></argument>)</argument_list></call><operator pos:start="459:218" pos:end="459:218">.</operator><call pos:start="459:219" pos:end="459:231"><name pos:start="459:219" pos:end="459:229">getLatitude</name><argument_list pos:start="459:230" pos:end="459:231">()</argument_list></call></expr></argument>)</argument_list></call> <operator pos:start="459:234" pos:end="459:234">*</operator> <literal type="number" pos:start="459:236" pos:end="459:241">10000d</literal></expr></argument>)</argument_list></call> <operator pos:start="459:244" pos:end="459:244">/</operator> <literal type="number" pos:start="459:246" pos:end="459:251">10000d</literal><operator pos:start="459:252" pos:end="459:252">)</operator> 
			<operator pos:start="460:25" pos:end="460:26">&amp;&amp;</operator> <operator pos:start="460:28" pos:end="460:28">(</operator><operator pos:start="460:29" pos:end="460:29">(</operator><name pos:start="460:30" pos:end="460:35">double</name><operator pos:start="460:36" pos:end="460:36">)</operator><call pos:start="460:37" pos:end="460:93"><name pos:start="460:37" pos:end="460:46"><name pos:start="460:37" pos:end="460:40">Math</name><operator pos:start="460:41" pos:end="460:41">.</operator><name pos:start="460:42" pos:end="460:46">round</name></name><argument_list pos:start="460:47" pos:end="460:93">(<argument pos:start="460:48" pos:end="460:92"><expr pos:start="460:48" pos:end="460:92"><call pos:start="460:48" pos:end="460:56"><name pos:start="460:48" pos:end="460:54">getPins</name><argument_list pos:start="460:55" pos:end="460:56">()</argument_list></call><operator pos:start="460:57" pos:end="460:57">.</operator><call pos:start="460:58" pos:end="460:63"><name pos:start="460:58" pos:end="460:60">get</name><argument_list pos:start="460:61" pos:end="460:63">(<argument pos:start="460:62" pos:end="460:62"><expr pos:start="460:62" pos:end="460:62"><name pos:start="460:62" pos:end="460:62">i</name></expr></argument>)</argument_list></call><operator pos:start="460:64" pos:end="460:64">.</operator><call pos:start="460:65" pos:end="460:74"><name pos:start="460:65" pos:end="460:72">getPoint</name><argument_list pos:start="460:73" pos:end="460:74">()</argument_list></call><operator pos:start="460:75" pos:end="460:75">.</operator><call pos:start="460:76" pos:end="460:83"><name pos:start="460:76" pos:end="460:81">getLon</name><argument_list pos:start="460:82" pos:end="460:83">()</argument_list></call> <operator pos:start="460:85" pos:end="460:85">*</operator> <literal type="number" pos:start="460:87" pos:end="460:92">10000d</literal></expr></argument>)</argument_list></call> <operator pos:start="460:95" pos:end="460:95">/</operator> <literal type="number" pos:start="460:97" pos:end="460:102">10000d</literal> <operator pos:start="460:104" pos:end="460:105">==</operator> <operator pos:start="460:107" pos:end="460:107">(</operator><name pos:start="460:108" pos:end="460:113">double</name><operator pos:start="460:114" pos:end="460:114">)</operator><call pos:start="460:115" pos:end="460:240"><name pos:start="460:115" pos:end="460:124"><name pos:start="460:115" pos:end="460:118">Math</name><operator pos:start="460:119" pos:end="460:119">.</operator><name pos:start="460:120" pos:end="460:124">round</name></name><argument_list pos:start="460:125" pos:end="460:240">(<argument pos:start="460:126" pos:end="460:239"><expr pos:start="460:126" pos:end="460:239"><call pos:start="460:126" pos:end="460:231"><name pos:start="460:126" pos:end="460:143"><name pos:start="460:126" pos:end="460:131">Double</name><operator pos:start="460:132" pos:end="460:132">.</operator><name pos:start="460:133" pos:end="460:143">parseDouble</name></name><argument_list pos:start="460:144" pos:end="460:231">(<argument pos:start="460:145" pos:end="460:230"><expr pos:start="460:145" pos:end="460:230"><call pos:start="460:145" pos:end="460:165"><name pos:start="460:145" pos:end="460:163">getOrderedWayPoints</name><argument_list pos:start="460:164" pos:end="460:165">()</argument_list></call><operator pos:start="460:166" pos:end="460:166">.</operator><call pos:start="460:167" pos:end="460:172"><name pos:start="460:167" pos:end="460:169">get</name><argument_list pos:start="460:170" pos:end="460:172">(<argument pos:start="460:171" pos:end="460:171"><expr pos:start="460:171" pos:end="460:171"><literal type="number" pos:start="460:171" pos:end="460:171">0</literal></expr></argument>)</argument_list></call><operator pos:start="460:173" pos:end="460:173">.</operator><call pos:start="460:174" pos:end="460:215"><name pos:start="460:174" pos:end="460:176">get</name><argument_list pos:start="460:177" pos:end="460:215">(<argument pos:start="460:178" pos:end="460:214"><expr pos:start="460:178" pos:end="460:214"><call pos:start="460:178" pos:end="460:198"><name pos:start="460:178" pos:end="460:196">getOrderedWayPoints</name><argument_list pos:start="460:197" pos:end="460:198">()</argument_list></call><operator pos:start="460:199" pos:end="460:199">.</operator><call pos:start="460:200" pos:end="460:205"><name pos:start="460:200" pos:end="460:202">get</name><argument_list pos:start="460:203" pos:end="460:205">(<argument pos:start="460:204" pos:end="460:204"><expr pos:start="460:204" pos:end="460:204"><literal type="number" pos:start="460:204" pos:end="460:204">0</literal></expr></argument>)</argument_list></call><operator pos:start="460:206" pos:end="460:206">.</operator><call pos:start="460:207" pos:end="460:212"><name pos:start="460:207" pos:end="460:210">size</name><argument_list pos:start="460:211" pos:end="460:212">()</argument_list></call><operator pos:start="460:213" pos:end="460:213">-</operator><literal type="number" pos:start="460:214" pos:end="460:214">1</literal></expr></argument>)</argument_list></call><operator pos:start="460:216" pos:end="460:216">.</operator><call pos:start="460:217" pos:end="460:230"><name pos:start="460:217" pos:end="460:228">getLongitude</name><argument_list pos:start="460:229" pos:end="460:230">()</argument_list></call></expr></argument>)</argument_list></call><operator pos:start="460:232" pos:end="460:232">*</operator> <literal type="number" pos:start="460:234" pos:end="460:239">10000d</literal></expr></argument>)</argument_list></call> <operator pos:start="460:242" pos:end="460:242">/</operator> <literal type="number" pos:start="460:244" pos:end="460:249">10000d</literal><operator pos:start="460:250" pos:end="460:250">)</operator>	
			<operator pos:start="461:25" pos:end="461:26">&amp;&amp;</operator> <name pos:start="461:28" pos:end="461:35">upstream</name> <operator pos:start="461:37" pos:end="461:38">==</operator> <literal type="boolean" pos:start="461:40" pos:end="461:44">false</literal><operator pos:start="461:45" pos:end="461:45">)</operator>
			<operator pos:start="462:25" pos:end="462:26">||</operator> <operator pos:start="462:28" pos:end="462:28">(</operator><operator pos:start="462:29" pos:end="462:29">(</operator><operator pos:start="462:30" pos:end="462:30">(</operator><name pos:start="462:31" pos:end="462:36">double</name><operator pos:start="462:37" pos:end="462:37">)</operator><call pos:start="462:38" pos:end="462:94"><name pos:start="462:38" pos:end="462:47"><name pos:start="462:38" pos:end="462:41">Math</name><operator pos:start="462:42" pos:end="462:42">.</operator><name pos:start="462:43" pos:end="462:47">round</name></name><argument_list pos:start="462:48" pos:end="462:94">(<argument pos:start="462:49" pos:end="462:93"><expr pos:start="462:49" pos:end="462:93"><call pos:start="462:49" pos:end="462:57"><name pos:start="462:49" pos:end="462:55">getPins</name><argument_list pos:start="462:56" pos:end="462:57">()</argument_list></call><operator pos:start="462:58" pos:end="462:58">.</operator><call pos:start="462:59" pos:end="462:64"><name pos:start="462:59" pos:end="462:61">get</name><argument_list pos:start="462:62" pos:end="462:64">(<argument pos:start="462:63" pos:end="462:63"><expr pos:start="462:63" pos:end="462:63"><name pos:start="462:63" pos:end="462:63">i</name></expr></argument>)</argument_list></call><operator pos:start="462:65" pos:end="462:65">.</operator><call pos:start="462:66" pos:end="462:75"><name pos:start="462:66" pos:end="462:73">getPoint</name><argument_list pos:start="462:74" pos:end="462:75">()</argument_list></call><operator pos:start="462:76" pos:end="462:76">.</operator><call pos:start="462:77" pos:end="462:84"><name pos:start="462:77" pos:end="462:82">getLat</name><argument_list pos:start="462:83" pos:end="462:84">()</argument_list></call> <operator pos:start="462:86" pos:end="462:86">*</operator> <literal type="number" pos:start="462:88" pos:end="462:93">10000d</literal></expr></argument>)</argument_list></call> <operator pos:start="462:96" pos:end="462:96">/</operator> <literal type="number" pos:start="462:98" pos:end="462:103">10000d</literal> <operator pos:start="462:105" pos:end="462:106">==</operator> <operator pos:start="462:108" pos:end="462:108">(</operator><name pos:start="462:109" pos:end="462:114">double</name><operator pos:start="462:115" pos:end="462:115">)</operator><call pos:start="462:116" pos:end="462:241"><name pos:start="462:116" pos:end="462:125"><name pos:start="462:116" pos:end="462:119">Math</name><operator pos:start="462:120" pos:end="462:120">.</operator><name pos:start="462:121" pos:end="462:125">round</name></name><argument_list pos:start="462:126" pos:end="462:241">(<argument pos:start="462:127" pos:end="462:240"><expr pos:start="462:127" pos:end="462:240"><call pos:start="462:127" pos:end="462:231"><name pos:start="462:127" pos:end="462:144"><name pos:start="462:127" pos:end="462:132">Double</name><operator pos:start="462:133" pos:end="462:133">.</operator><name pos:start="462:134" pos:end="462:144">parseDouble</name></name><argument_list pos:start="462:145" pos:end="462:231">(<argument pos:start="462:146" pos:end="462:230"><expr pos:start="462:146" pos:end="462:230"><call pos:start="462:146" pos:end="462:166"><name pos:start="462:146" pos:end="462:164">getOrderedWayPoints</name><argument_list pos:start="462:165" pos:end="462:166">()</argument_list></call><operator pos:start="462:167" pos:end="462:167">.</operator><call pos:start="462:168" pos:end="462:173"><name pos:start="462:168" pos:end="462:170">get</name><argument_list pos:start="462:171" pos:end="462:173">(<argument pos:start="462:172" pos:end="462:172"><expr pos:start="462:172" pos:end="462:172"><literal type="number" pos:start="462:172" pos:end="462:172">1</literal></expr></argument>)</argument_list></call><operator pos:start="462:174" pos:end="462:174">.</operator><call pos:start="462:175" pos:end="462:216"><name pos:start="462:175" pos:end="462:177">get</name><argument_list pos:start="462:178" pos:end="462:216">(<argument pos:start="462:179" pos:end="462:215"><expr pos:start="462:179" pos:end="462:215"><call pos:start="462:179" pos:end="462:199"><name pos:start="462:179" pos:end="462:197">getOrderedWayPoints</name><argument_list pos:start="462:198" pos:end="462:199">()</argument_list></call><operator pos:start="462:200" pos:end="462:200">.</operator><call pos:start="462:201" pos:end="462:206"><name pos:start="462:201" pos:end="462:203">get</name><argument_list pos:start="462:204" pos:end="462:206">(<argument pos:start="462:205" pos:end="462:205"><expr pos:start="462:205" pos:end="462:205"><literal type="number" pos:start="462:205" pos:end="462:205">1</literal></expr></argument>)</argument_list></call><operator pos:start="462:207" pos:end="462:207">.</operator><call pos:start="462:208" pos:end="462:213"><name pos:start="462:208" pos:end="462:211">size</name><argument_list pos:start="462:212" pos:end="462:213">()</argument_list></call><operator pos:start="462:214" pos:end="462:214">-</operator><literal type="number" pos:start="462:215" pos:end="462:215">1</literal></expr></argument>)</argument_list></call><operator pos:start="462:217" pos:end="462:217">.</operator><call pos:start="462:218" pos:end="462:230"><name pos:start="462:218" pos:end="462:228">getLatitude</name><argument_list pos:start="462:229" pos:end="462:230">()</argument_list></call></expr></argument>)</argument_list></call> <operator pos:start="462:233" pos:end="462:233">*</operator> <literal type="number" pos:start="462:235" pos:end="462:240">10000d</literal></expr></argument>)</argument_list></call> <operator pos:start="462:243" pos:end="462:243">/</operator> <literal type="number" pos:start="462:245" pos:end="462:250">10000d</literal><operator pos:start="462:251" pos:end="462:251">)</operator> 
			<operator pos:start="463:25" pos:end="463:26">&amp;&amp;</operator> <operator pos:start="463:28" pos:end="463:28">(</operator><operator pos:start="463:29" pos:end="463:29">(</operator><name pos:start="463:30" pos:end="463:35">double</name><operator pos:start="463:36" pos:end="463:36">)</operator><call pos:start="463:37" pos:end="463:93"><name pos:start="463:37" pos:end="463:46"><name pos:start="463:37" pos:end="463:40">Math</name><operator pos:start="463:41" pos:end="463:41">.</operator><name pos:start="463:42" pos:end="463:46">round</name></name><argument_list pos:start="463:47" pos:end="463:93">(<argument pos:start="463:48" pos:end="463:92"><expr pos:start="463:48" pos:end="463:92"><call pos:start="463:48" pos:end="463:56"><name pos:start="463:48" pos:end="463:54">getPins</name><argument_list pos:start="463:55" pos:end="463:56">()</argument_list></call><operator pos:start="463:57" pos:end="463:57">.</operator><call pos:start="463:58" pos:end="463:63"><name pos:start="463:58" pos:end="463:60">get</name><argument_list pos:start="463:61" pos:end="463:63">(<argument pos:start="463:62" pos:end="463:62"><expr pos:start="463:62" pos:end="463:62"><name pos:start="463:62" pos:end="463:62">i</name></expr></argument>)</argument_list></call><operator pos:start="463:64" pos:end="463:64">.</operator><call pos:start="463:65" pos:end="463:74"><name pos:start="463:65" pos:end="463:72">getPoint</name><argument_list pos:start="463:73" pos:end="463:74">()</argument_list></call><operator pos:start="463:75" pos:end="463:75">.</operator><call pos:start="463:76" pos:end="463:83"><name pos:start="463:76" pos:end="463:81">getLon</name><argument_list pos:start="463:82" pos:end="463:83">()</argument_list></call> <operator pos:start="463:85" pos:end="463:85">*</operator> <literal type="number" pos:start="463:87" pos:end="463:92">10000d</literal></expr></argument>)</argument_list></call> <operator pos:start="463:95" pos:end="463:95">/</operator> <literal type="number" pos:start="463:97" pos:end="463:102">10000d</literal> <operator pos:start="463:104" pos:end="463:105">==</operator> <operator pos:start="463:107" pos:end="463:107">(</operator><name pos:start="463:108" pos:end="463:113">double</name><operator pos:start="463:114" pos:end="463:114">)</operator><call pos:start="463:115" pos:end="463:240"><name pos:start="463:115" pos:end="463:124"><name pos:start="463:115" pos:end="463:118">Math</name><operator pos:start="463:119" pos:end="463:119">.</operator><name pos:start="463:120" pos:end="463:124">round</name></name><argument_list pos:start="463:125" pos:end="463:240">(<argument pos:start="463:126" pos:end="463:239"><expr pos:start="463:126" pos:end="463:239"><call pos:start="463:126" pos:end="463:231"><name pos:start="463:126" pos:end="463:143"><name pos:start="463:126" pos:end="463:131">Double</name><operator pos:start="463:132" pos:end="463:132">.</operator><name pos:start="463:133" pos:end="463:143">parseDouble</name></name><argument_list pos:start="463:144" pos:end="463:231">(<argument pos:start="463:145" pos:end="463:230"><expr pos:start="463:145" pos:end="463:230"><call pos:start="463:145" pos:end="463:165"><name pos:start="463:145" pos:end="463:163">getOrderedWayPoints</name><argument_list pos:start="463:164" pos:end="463:165">()</argument_list></call><operator pos:start="463:166" pos:end="463:166">.</operator><call pos:start="463:167" pos:end="463:172"><name pos:start="463:167" pos:end="463:169">get</name><argument_list pos:start="463:170" pos:end="463:172">(<argument pos:start="463:171" pos:end="463:171"><expr pos:start="463:171" pos:end="463:171"><literal type="number" pos:start="463:171" pos:end="463:171">1</literal></expr></argument>)</argument_list></call><operator pos:start="463:173" pos:end="463:173">.</operator><call pos:start="463:174" pos:end="463:215"><name pos:start="463:174" pos:end="463:176">get</name><argument_list pos:start="463:177" pos:end="463:215">(<argument pos:start="463:178" pos:end="463:214"><expr pos:start="463:178" pos:end="463:214"><call pos:start="463:178" pos:end="463:198"><name pos:start="463:178" pos:end="463:196">getOrderedWayPoints</name><argument_list pos:start="463:197" pos:end="463:198">()</argument_list></call><operator pos:start="463:199" pos:end="463:199">.</operator><call pos:start="463:200" pos:end="463:205"><name pos:start="463:200" pos:end="463:202">get</name><argument_list pos:start="463:203" pos:end="463:205">(<argument pos:start="463:204" pos:end="463:204"><expr pos:start="463:204" pos:end="463:204"><literal type="number" pos:start="463:204" pos:end="463:204">1</literal></expr></argument>)</argument_list></call><operator pos:start="463:206" pos:end="463:206">.</operator><call pos:start="463:207" pos:end="463:212"><name pos:start="463:207" pos:end="463:210">size</name><argument_list pos:start="463:211" pos:end="463:212">()</argument_list></call><operator pos:start="463:213" pos:end="463:213">-</operator><literal type="number" pos:start="463:214" pos:end="463:214">1</literal></expr></argument>)</argument_list></call><operator pos:start="463:216" pos:end="463:216">.</operator><call pos:start="463:217" pos:end="463:230"><name pos:start="463:217" pos:end="463:228">getLongitude</name><argument_list pos:start="463:229" pos:end="463:230">()</argument_list></call></expr></argument>)</argument_list></call><operator pos:start="463:232" pos:end="463:232">*</operator> <literal type="number" pos:start="463:234" pos:end="463:239">10000d</literal></expr></argument>)</argument_list></call> <operator pos:start="463:242" pos:end="463:242">/</operator> <literal type="number" pos:start="463:244" pos:end="463:249">10000d</literal><operator pos:start="463:250" pos:end="463:250">)</operator>	
			<operator pos:start="464:25" pos:end="464:26">&amp;&amp;</operator> <name pos:start="464:28" pos:end="464:35">upstream</name> <operator pos:start="464:37" pos:end="464:38">==</operator> <literal type="boolean" pos:start="464:40" pos:end="464:44">false</literal><operator pos:start="464:45" pos:end="464:45">)</operator></expr>)</condition> <block pos:start="464:48" pos:end="469:25">{<block_content pos:start="465:33" pos:end="468:79">
				<decl_stmt pos:start="465:33" pos:end="465:78"><decl pos:start="465:33" pos:end="465:77"><type pos:start="465:33" pos:end="465:39"><name pos:start="465:33" pos:end="465:39">LMarker</name></type> <name pos:start="465:41" pos:end="465:53">leafletMarker</name> <init pos:start="465:55" pos:end="465:77">= <expr pos:start="465:57" pos:end="465:77"><call pos:start="465:57" pos:end="465:70"><name pos:start="465:57" pos:end="465:68"><name pos:start="465:57" pos:end="465:60">this</name><operator pos:start="465:61" pos:end="465:61">.</operator><name pos:start="465:62" pos:end="465:68">getPins</name></name><argument_list pos:start="465:69" pos:end="465:70">()</argument_list></call><operator pos:start="465:71" pos:end="465:71">.</operator><call pos:start="465:72" pos:end="465:77"><name pos:start="465:72" pos:end="465:74">get</name><argument_list pos:start="465:75" pos:end="465:77">(<argument pos:start="465:76" pos:end="465:76"><expr pos:start="465:76" pos:end="465:76"><name pos:start="465:76" pos:end="465:76">i</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
				<expr_stmt pos:start="466:33" pos:end="466:69"><expr pos:start="466:33" pos:end="466:68"><call pos:start="466:33" pos:end="466:68"><name pos:start="466:33" pos:end="466:53"><name pos:start="466:33" pos:end="466:45">leafletMarker</name><operator pos:start="466:46" pos:end="466:46">.</operator><name pos:start="466:47" pos:end="466:53">setIcon</name></name><argument_list pos:start="466:54" pos:end="466:68">(<argument pos:start="466:55" pos:end="466:67"><expr pos:start="466:55" pos:end="466:67"><name pos:start="466:55" pos:end="466:67">waterfallIcon</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<expr_stmt pos:start="467:33" pos:end="467:77"><expr pos:start="467:33" pos:end="467:76"><call pos:start="467:33" pos:end="467:76"><name pos:start="467:33" pos:end="467:57"><name pos:start="467:33" pos:end="467:45">leafletMarker</name><operator pos:start="467:46" pos:end="467:46">.</operator><name pos:start="467:47" pos:end="467:57">setIconSize</name></name><argument_list pos:start="467:58" pos:end="467:76">(<argument pos:start="467:59" pos:end="467:75"><expr pos:start="467:59" pos:end="467:75"><operator pos:start="467:59" pos:end="467:61">new</operator> <call pos:start="467:63" pos:end="467:75"><name pos:start="467:63" pos:end="467:67">Point</name><argument_list pos:start="467:68" pos:end="467:75">(<argument pos:start="467:69" pos:end="467:70"><expr pos:start="467:69" pos:end="467:70"><literal type="number" pos:start="467:69" pos:end="467:70">30</literal></expr></argument>, <argument pos:start="467:73" pos:end="467:74"><expr pos:start="467:73" pos:end="467:74"><literal type="number" pos:start="467:73" pos:end="467:74">30</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<expr_stmt pos:start="468:33" pos:end="468:79"><expr pos:start="468:33" pos:end="468:78"><call pos:start="468:33" pos:end="468:78"><name pos:start="468:33" pos:end="468:59"><name pos:start="468:33" pos:end="468:45">leafletMarker</name><operator pos:start="468:46" pos:end="468:46">.</operator><name pos:start="468:47" pos:end="468:59">setIconAnchor</name></name><argument_list pos:start="468:60" pos:end="468:78">(<argument pos:start="468:61" pos:end="468:77"><expr pos:start="468:61" pos:end="468:77"><operator pos:start="468:61" pos:end="468:63">new</operator> <call pos:start="468:65" pos:end="468:77"><name pos:start="468:65" pos:end="468:69">Point</name><argument_list pos:start="468:70" pos:end="468:77">(<argument pos:start="468:71" pos:end="468:72"><expr pos:start="468:71" pos:end="468:72"><literal type="number" pos:start="468:71" pos:end="468:72">16</literal></expr></argument>, <argument pos:start="468:75" pos:end="468:76"><expr pos:start="468:75" pos:end="468:76"><literal type="number" pos:start="468:75" pos:end="468:76">10</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			</block_content>}</block></if>
			
			<comment type="line" pos:start="471:25" pos:end="471:110">// if upstream is true, make the first waypoints on both sides into the waterfall icon</comment>
			<if type="elseif" pos:start="472:25" pos:end="482:25">else if <condition pos:start="472:33" pos:end="477:45">(<expr pos:start="472:34" pos:end="477:44"><operator pos:start="472:34" pos:end="472:34">(</operator><operator pos:start="472:35" pos:end="472:35">(</operator><operator pos:start="472:36" pos:end="472:36">(</operator><name pos:start="472:37" pos:end="472:42">double</name><operator pos:start="472:43" pos:end="472:43">)</operator><call pos:start="472:44" pos:end="472:100"><name pos:start="472:44" pos:end="472:53"><name pos:start="472:44" pos:end="472:47">Math</name><operator pos:start="472:48" pos:end="472:48">.</operator><name pos:start="472:49" pos:end="472:53">round</name></name><argument_list pos:start="472:54" pos:end="472:100">(<argument pos:start="472:55" pos:end="472:99"><expr pos:start="472:55" pos:end="472:99"><call pos:start="472:55" pos:end="472:63"><name pos:start="472:55" pos:end="472:61">getPins</name><argument_list pos:start="472:62" pos:end="472:63">()</argument_list></call><operator pos:start="472:64" pos:end="472:64">.</operator><call pos:start="472:65" pos:end="472:70"><name pos:start="472:65" pos:end="472:67">get</name><argument_list pos:start="472:68" pos:end="472:70">(<argument pos:start="472:69" pos:end="472:69"><expr pos:start="472:69" pos:end="472:69"><name pos:start="472:69" pos:end="472:69">i</name></expr></argument>)</argument_list></call><operator pos:start="472:71" pos:end="472:71">.</operator><call pos:start="472:72" pos:end="472:81"><name pos:start="472:72" pos:end="472:79">getPoint</name><argument_list pos:start="472:80" pos:end="472:81">()</argument_list></call><operator pos:start="472:82" pos:end="472:82">.</operator><call pos:start="472:83" pos:end="472:90"><name pos:start="472:83" pos:end="472:88">getLat</name><argument_list pos:start="472:89" pos:end="472:90">()</argument_list></call> <operator pos:start="472:92" pos:end="472:92">*</operator> <literal type="number" pos:start="472:94" pos:end="472:99">10000d</literal></expr></argument>)</argument_list></call> <operator pos:start="472:102" pos:end="472:102">/</operator> <literal type="number" pos:start="472:104" pos:end="472:109">10000d</literal> <operator pos:start="472:111" pos:end="472:112">==</operator> <operator pos:start="472:114" pos:end="472:114">(</operator><name pos:start="472:115" pos:end="472:120">double</name><operator pos:start="472:121" pos:end="472:121">)</operator><call pos:start="472:122" pos:end="472:210"><name pos:start="472:122" pos:end="472:131"><name pos:start="472:122" pos:end="472:125">Math</name><operator pos:start="472:126" pos:end="472:126">.</operator><name pos:start="472:127" pos:end="472:131">round</name></name><argument_list pos:start="472:132" pos:end="472:210">(<argument pos:start="472:133" pos:end="472:209"><expr pos:start="472:133" pos:end="472:209"><call pos:start="472:133" pos:end="472:201"><name pos:start="472:133" pos:end="472:150"><name pos:start="472:133" pos:end="472:138">Double</name><operator pos:start="472:139" pos:end="472:139">.</operator><name pos:start="472:140" pos:end="472:150">parseDouble</name></name><argument_list pos:start="472:151" pos:end="472:201">(<argument pos:start="472:152" pos:end="472:200"><expr pos:start="472:152" pos:end="472:200"><call pos:start="472:152" pos:end="472:172"><name pos:start="472:152" pos:end="472:170">getOrderedWayPoints</name><argument_list pos:start="472:171" pos:end="472:172">()</argument_list></call><operator pos:start="472:173" pos:end="472:173">.</operator><call pos:start="472:174" pos:end="472:179"><name pos:start="472:174" pos:end="472:176">get</name><argument_list pos:start="472:177" pos:end="472:179">(<argument pos:start="472:178" pos:end="472:178"><expr pos:start="472:178" pos:end="472:178"><literal type="number" pos:start="472:178" pos:end="472:178">0</literal></expr></argument>)</argument_list></call><operator pos:start="472:180" pos:end="472:180">.</operator><call pos:start="472:181" pos:end="472:186"><name pos:start="472:181" pos:end="472:183">get</name><argument_list pos:start="472:184" pos:end="472:186">(<argument pos:start="472:185" pos:end="472:185"><expr pos:start="472:185" pos:end="472:185"><literal type="number" pos:start="472:185" pos:end="472:185">0</literal></expr></argument>)</argument_list></call><operator pos:start="472:187" pos:end="472:187">.</operator><call pos:start="472:188" pos:end="472:200"><name pos:start="472:188" pos:end="472:198">getLatitude</name><argument_list pos:start="472:199" pos:end="472:200">()</argument_list></call></expr></argument>)</argument_list></call><operator pos:start="472:202" pos:end="472:202">*</operator> <literal type="number" pos:start="472:204" pos:end="472:209">10000d</literal></expr></argument>)</argument_list></call> <operator pos:start="472:212" pos:end="472:212">/</operator> <literal type="number" pos:start="472:214" pos:end="472:219">10000d</literal><operator pos:start="472:220" pos:end="472:220">)</operator>
			<operator pos:start="473:25" pos:end="473:26">&amp;&amp;</operator> <operator pos:start="473:28" pos:end="473:28">(</operator><operator pos:start="473:29" pos:end="473:29">(</operator><name pos:start="473:30" pos:end="473:35">double</name><operator pos:start="473:36" pos:end="473:36">)</operator><call pos:start="473:37" pos:end="473:93"><name pos:start="473:37" pos:end="473:46"><name pos:start="473:37" pos:end="473:40">Math</name><operator pos:start="473:41" pos:end="473:41">.</operator><name pos:start="473:42" pos:end="473:46">round</name></name><argument_list pos:start="473:47" pos:end="473:93">(<argument pos:start="473:48" pos:end="473:92"><expr pos:start="473:48" pos:end="473:92"><call pos:start="473:48" pos:end="473:56"><name pos:start="473:48" pos:end="473:54">getPins</name><argument_list pos:start="473:55" pos:end="473:56">()</argument_list></call><operator pos:start="473:57" pos:end="473:57">.</operator><call pos:start="473:58" pos:end="473:63"><name pos:start="473:58" pos:end="473:60">get</name><argument_list pos:start="473:61" pos:end="473:63">(<argument pos:start="473:62" pos:end="473:62"><expr pos:start="473:62" pos:end="473:62"><name pos:start="473:62" pos:end="473:62">i</name></expr></argument>)</argument_list></call><operator pos:start="473:64" pos:end="473:64">.</operator><call pos:start="473:65" pos:end="473:74"><name pos:start="473:65" pos:end="473:72">getPoint</name><argument_list pos:start="473:73" pos:end="473:74">()</argument_list></call><operator pos:start="473:75" pos:end="473:75">.</operator><call pos:start="473:76" pos:end="473:83"><name pos:start="473:76" pos:end="473:81">getLon</name><argument_list pos:start="473:82" pos:end="473:83">()</argument_list></call> <operator pos:start="473:85" pos:end="473:85">*</operator> <literal type="number" pos:start="473:87" pos:end="473:92">10000d</literal></expr></argument>)</argument_list></call> <operator pos:start="473:95" pos:end="473:95">/</operator> <literal type="number" pos:start="473:97" pos:end="473:102">10000d</literal> <operator pos:start="473:104" pos:end="473:105">==</operator> <operator pos:start="473:107" pos:end="473:107">(</operator><name pos:start="473:108" pos:end="473:113">double</name><operator pos:start="473:114" pos:end="473:114">)</operator><call pos:start="473:115" pos:end="473:205"><name pos:start="473:115" pos:end="473:124"><name pos:start="473:115" pos:end="473:118">Math</name><operator pos:start="473:119" pos:end="473:119">.</operator><name pos:start="473:120" pos:end="473:124">round</name></name><argument_list pos:start="473:125" pos:end="473:205">(<argument pos:start="473:126" pos:end="473:204"><expr pos:start="473:126" pos:end="473:204"><call pos:start="473:126" pos:end="473:195"><name pos:start="473:126" pos:end="473:143"><name pos:start="473:126" pos:end="473:131">Double</name><operator pos:start="473:132" pos:end="473:132">.</operator><name pos:start="473:133" pos:end="473:143">parseDouble</name></name><argument_list pos:start="473:144" pos:end="473:195">(<argument pos:start="473:145" pos:end="473:194"><expr pos:start="473:145" pos:end="473:194"><call pos:start="473:145" pos:end="473:165"><name pos:start="473:145" pos:end="473:163">getOrderedWayPoints</name><argument_list pos:start="473:164" pos:end="473:165">()</argument_list></call><operator pos:start="473:166" pos:end="473:166">.</operator><call pos:start="473:167" pos:end="473:172"><name pos:start="473:167" pos:end="473:169">get</name><argument_list pos:start="473:170" pos:end="473:172">(<argument pos:start="473:171" pos:end="473:171"><expr pos:start="473:171" pos:end="473:171"><literal type="number" pos:start="473:171" pos:end="473:171">0</literal></expr></argument>)</argument_list></call><operator pos:start="473:173" pos:end="473:173">.</operator><call pos:start="473:174" pos:end="473:179"><name pos:start="473:174" pos:end="473:176">get</name><argument_list pos:start="473:177" pos:end="473:179">(<argument pos:start="473:178" pos:end="473:178"><expr pos:start="473:178" pos:end="473:178"><literal type="number" pos:start="473:178" pos:end="473:178">0</literal></expr></argument>)</argument_list></call><operator pos:start="473:180" pos:end="473:180">.</operator><call pos:start="473:181" pos:end="473:194"><name pos:start="473:181" pos:end="473:192">getLongitude</name><argument_list pos:start="473:193" pos:end="473:194">()</argument_list></call></expr></argument>)</argument_list></call> <operator pos:start="473:197" pos:end="473:197">*</operator> <literal type="number" pos:start="473:199" pos:end="473:204">10000d</literal></expr></argument>)</argument_list></call> <operator pos:start="473:207" pos:end="473:207">/</operator> <literal type="number" pos:start="473:209" pos:end="473:214">10000d</literal><operator pos:start="473:215" pos:end="473:215">)</operator>
			<operator pos:start="474:25" pos:end="474:26">&amp;&amp;</operator> <name pos:start="474:28" pos:end="474:35">upstream</name> <operator pos:start="474:37" pos:end="474:38">==</operator> <literal type="boolean" pos:start="474:40" pos:end="474:43">true</literal><operator pos:start="474:44" pos:end="474:44">)</operator>
			<operator pos:start="475:25" pos:end="475:26">||</operator> <operator pos:start="475:28" pos:end="475:28">(</operator><operator pos:start="475:29" pos:end="475:29">(</operator><operator pos:start="475:30" pos:end="475:30">(</operator><name pos:start="475:31" pos:end="475:36">double</name><operator pos:start="475:37" pos:end="475:37">)</operator><call pos:start="475:38" pos:end="475:94"><name pos:start="475:38" pos:end="475:47"><name pos:start="475:38" pos:end="475:41">Math</name><operator pos:start="475:42" pos:end="475:42">.</operator><name pos:start="475:43" pos:end="475:47">round</name></name><argument_list pos:start="475:48" pos:end="475:94">(<argument pos:start="475:49" pos:end="475:93"><expr pos:start="475:49" pos:end="475:93"><call pos:start="475:49" pos:end="475:57"><name pos:start="475:49" pos:end="475:55">getPins</name><argument_list pos:start="475:56" pos:end="475:57">()</argument_list></call><operator pos:start="475:58" pos:end="475:58">.</operator><call pos:start="475:59" pos:end="475:64"><name pos:start="475:59" pos:end="475:61">get</name><argument_list pos:start="475:62" pos:end="475:64">(<argument pos:start="475:63" pos:end="475:63"><expr pos:start="475:63" pos:end="475:63"><name pos:start="475:63" pos:end="475:63">i</name></expr></argument>)</argument_list></call><operator pos:start="475:65" pos:end="475:65">.</operator><call pos:start="475:66" pos:end="475:75"><name pos:start="475:66" pos:end="475:73">getPoint</name><argument_list pos:start="475:74" pos:end="475:75">()</argument_list></call><operator pos:start="475:76" pos:end="475:76">.</operator><call pos:start="475:77" pos:end="475:84"><name pos:start="475:77" pos:end="475:82">getLat</name><argument_list pos:start="475:83" pos:end="475:84">()</argument_list></call> <operator pos:start="475:86" pos:end="475:86">*</operator> <literal type="number" pos:start="475:88" pos:end="475:93">10000d</literal></expr></argument>)</argument_list></call> <operator pos:start="475:96" pos:end="475:96">/</operator> <literal type="number" pos:start="475:98" pos:end="475:103">10000d</literal> <operator pos:start="475:105" pos:end="475:106">==</operator> <operator pos:start="475:108" pos:end="475:108">(</operator><name pos:start="475:109" pos:end="475:114">double</name><operator pos:start="475:115" pos:end="475:115">)</operator><call pos:start="475:116" pos:end="475:204"><name pos:start="475:116" pos:end="475:125"><name pos:start="475:116" pos:end="475:119">Math</name><operator pos:start="475:120" pos:end="475:120">.</operator><name pos:start="475:121" pos:end="475:125">round</name></name><argument_list pos:start="475:126" pos:end="475:204">(<argument pos:start="475:127" pos:end="475:203"><expr pos:start="475:127" pos:end="475:203"><call pos:start="475:127" pos:end="475:195"><name pos:start="475:127" pos:end="475:144"><name pos:start="475:127" pos:end="475:132">Double</name><operator pos:start="475:133" pos:end="475:133">.</operator><name pos:start="475:134" pos:end="475:144">parseDouble</name></name><argument_list pos:start="475:145" pos:end="475:195">(<argument pos:start="475:146" pos:end="475:194"><expr pos:start="475:146" pos:end="475:194"><call pos:start="475:146" pos:end="475:166"><name pos:start="475:146" pos:end="475:164">getOrderedWayPoints</name><argument_list pos:start="475:165" pos:end="475:166">()</argument_list></call><operator pos:start="475:167" pos:end="475:167">.</operator><call pos:start="475:168" pos:end="475:173"><name pos:start="475:168" pos:end="475:170">get</name><argument_list pos:start="475:171" pos:end="475:173">(<argument pos:start="475:172" pos:end="475:172"><expr pos:start="475:172" pos:end="475:172"><literal type="number" pos:start="475:172" pos:end="475:172">1</literal></expr></argument>)</argument_list></call><operator pos:start="475:174" pos:end="475:174">.</operator><call pos:start="475:175" pos:end="475:180"><name pos:start="475:175" pos:end="475:177">get</name><argument_list pos:start="475:178" pos:end="475:180">(<argument pos:start="475:179" pos:end="475:179"><expr pos:start="475:179" pos:end="475:179"><literal type="number" pos:start="475:179" pos:end="475:179">0</literal></expr></argument>)</argument_list></call><operator pos:start="475:181" pos:end="475:181">.</operator><call pos:start="475:182" pos:end="475:194"><name pos:start="475:182" pos:end="475:192">getLatitude</name><argument_list pos:start="475:193" pos:end="475:194">()</argument_list></call></expr></argument>)</argument_list></call><operator pos:start="475:196" pos:end="475:196">*</operator> <literal type="number" pos:start="475:198" pos:end="475:203">10000d</literal></expr></argument>)</argument_list></call> <operator pos:start="475:206" pos:end="475:206">/</operator> <literal type="number" pos:start="475:208" pos:end="475:213">10000d</literal><operator pos:start="475:214" pos:end="475:214">)</operator>
			<operator pos:start="476:25" pos:end="476:26">&amp;&amp;</operator> <operator pos:start="476:28" pos:end="476:28">(</operator><operator pos:start="476:29" pos:end="476:29">(</operator><name pos:start="476:30" pos:end="476:35">double</name><operator pos:start="476:36" pos:end="476:36">)</operator><call pos:start="476:37" pos:end="476:93"><name pos:start="476:37" pos:end="476:46"><name pos:start="476:37" pos:end="476:40">Math</name><operator pos:start="476:41" pos:end="476:41">.</operator><name pos:start="476:42" pos:end="476:46">round</name></name><argument_list pos:start="476:47" pos:end="476:93">(<argument pos:start="476:48" pos:end="476:92"><expr pos:start="476:48" pos:end="476:92"><call pos:start="476:48" pos:end="476:56"><name pos:start="476:48" pos:end="476:54">getPins</name><argument_list pos:start="476:55" pos:end="476:56">()</argument_list></call><operator pos:start="476:57" pos:end="476:57">.</operator><call pos:start="476:58" pos:end="476:63"><name pos:start="476:58" pos:end="476:60">get</name><argument_list pos:start="476:61" pos:end="476:63">(<argument pos:start="476:62" pos:end="476:62"><expr pos:start="476:62" pos:end="476:62"><name pos:start="476:62" pos:end="476:62">i</name></expr></argument>)</argument_list></call><operator pos:start="476:64" pos:end="476:64">.</operator><call pos:start="476:65" pos:end="476:74"><name pos:start="476:65" pos:end="476:72">getPoint</name><argument_list pos:start="476:73" pos:end="476:74">()</argument_list></call><operator pos:start="476:75" pos:end="476:75">.</operator><call pos:start="476:76" pos:end="476:83"><name pos:start="476:76" pos:end="476:81">getLon</name><argument_list pos:start="476:82" pos:end="476:83">()</argument_list></call> <operator pos:start="476:85" pos:end="476:85">*</operator> <literal type="number" pos:start="476:87" pos:end="476:92">10000d</literal></expr></argument>)</argument_list></call> <operator pos:start="476:95" pos:end="476:95">/</operator> <literal type="number" pos:start="476:97" pos:end="476:102">10000d</literal> <operator pos:start="476:104" pos:end="476:105">==</operator> <operator pos:start="476:107" pos:end="476:107">(</operator><name pos:start="476:108" pos:end="476:113">double</name><operator pos:start="476:114" pos:end="476:114">)</operator><call pos:start="476:115" pos:end="476:205"><name pos:start="476:115" pos:end="476:124"><name pos:start="476:115" pos:end="476:118">Math</name><operator pos:start="476:119" pos:end="476:119">.</operator><name pos:start="476:120" pos:end="476:124">round</name></name><argument_list pos:start="476:125" pos:end="476:205">(<argument pos:start="476:126" pos:end="476:204"><expr pos:start="476:126" pos:end="476:204"><call pos:start="476:126" pos:end="476:195"><name pos:start="476:126" pos:end="476:143"><name pos:start="476:126" pos:end="476:131">Double</name><operator pos:start="476:132" pos:end="476:132">.</operator><name pos:start="476:133" pos:end="476:143">parseDouble</name></name><argument_list pos:start="476:144" pos:end="476:195">(<argument pos:start="476:145" pos:end="476:194"><expr pos:start="476:145" pos:end="476:194"><call pos:start="476:145" pos:end="476:165"><name pos:start="476:145" pos:end="476:163">getOrderedWayPoints</name><argument_list pos:start="476:164" pos:end="476:165">()</argument_list></call><operator pos:start="476:166" pos:end="476:166">.</operator><call pos:start="476:167" pos:end="476:172"><name pos:start="476:167" pos:end="476:169">get</name><argument_list pos:start="476:170" pos:end="476:172">(<argument pos:start="476:171" pos:end="476:171"><expr pos:start="476:171" pos:end="476:171"><literal type="number" pos:start="476:171" pos:end="476:171">1</literal></expr></argument>)</argument_list></call><operator pos:start="476:173" pos:end="476:173">.</operator><call pos:start="476:174" pos:end="476:179"><name pos:start="476:174" pos:end="476:176">get</name><argument_list pos:start="476:177" pos:end="476:179">(<argument pos:start="476:178" pos:end="476:178"><expr pos:start="476:178" pos:end="476:178"><literal type="number" pos:start="476:178" pos:end="476:178">0</literal></expr></argument>)</argument_list></call><operator pos:start="476:180" pos:end="476:180">.</operator><call pos:start="476:181" pos:end="476:194"><name pos:start="476:181" pos:end="476:192">getLongitude</name><argument_list pos:start="476:193" pos:end="476:194">()</argument_list></call></expr></argument>)</argument_list></call> <operator pos:start="476:197" pos:end="476:197">*</operator> <literal type="number" pos:start="476:199" pos:end="476:204">10000d</literal></expr></argument>)</argument_list></call> <operator pos:start="476:207" pos:end="476:207">/</operator> <literal type="number" pos:start="476:209" pos:end="476:214">10000d</literal><operator pos:start="476:215" pos:end="476:215">)</operator>
			<operator pos:start="477:25" pos:end="477:26">&amp;&amp;</operator> <name pos:start="477:28" pos:end="477:35">upstream</name> <operator pos:start="477:37" pos:end="477:38">==</operator> <literal type="boolean" pos:start="477:40" pos:end="477:43">true</literal><operator pos:start="477:44" pos:end="477:44">)</operator></expr>)</condition> <block pos:start="477:47" pos:end="482:25">{<block_content pos:start="478:33" pos:end="481:79">
				<decl_stmt pos:start="478:33" pos:end="478:78"><decl pos:start="478:33" pos:end="478:77"><type pos:start="478:33" pos:end="478:39"><name pos:start="478:33" pos:end="478:39">LMarker</name></type> <name pos:start="478:41" pos:end="478:53">leafletMarker</name> <init pos:start="478:55" pos:end="478:77">= <expr pos:start="478:57" pos:end="478:77"><call pos:start="478:57" pos:end="478:70"><name pos:start="478:57" pos:end="478:68"><name pos:start="478:57" pos:end="478:60">this</name><operator pos:start="478:61" pos:end="478:61">.</operator><name pos:start="478:62" pos:end="478:68">getPins</name></name><argument_list pos:start="478:69" pos:end="478:70">()</argument_list></call><operator pos:start="478:71" pos:end="478:71">.</operator><call pos:start="478:72" pos:end="478:77"><name pos:start="478:72" pos:end="478:74">get</name><argument_list pos:start="478:75" pos:end="478:77">(<argument pos:start="478:76" pos:end="478:76"><expr pos:start="478:76" pos:end="478:76"><name pos:start="478:76" pos:end="478:76">i</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
				<expr_stmt pos:start="479:33" pos:end="479:69"><expr pos:start="479:33" pos:end="479:68"><call pos:start="479:33" pos:end="479:68"><name pos:start="479:33" pos:end="479:53"><name pos:start="479:33" pos:end="479:45">leafletMarker</name><operator pos:start="479:46" pos:end="479:46">.</operator><name pos:start="479:47" pos:end="479:53">setIcon</name></name><argument_list pos:start="479:54" pos:end="479:68">(<argument pos:start="479:55" pos:end="479:67"><expr pos:start="479:55" pos:end="479:67"><name pos:start="479:55" pos:end="479:67">waterfallIcon</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<expr_stmt pos:start="480:33" pos:end="480:77"><expr pos:start="480:33" pos:end="480:76"><call pos:start="480:33" pos:end="480:76"><name pos:start="480:33" pos:end="480:57"><name pos:start="480:33" pos:end="480:45">leafletMarker</name><operator pos:start="480:46" pos:end="480:46">.</operator><name pos:start="480:47" pos:end="480:57">setIconSize</name></name><argument_list pos:start="480:58" pos:end="480:76">(<argument pos:start="480:59" pos:end="480:75"><expr pos:start="480:59" pos:end="480:75"><operator pos:start="480:59" pos:end="480:61">new</operator> <call pos:start="480:63" pos:end="480:75"><name pos:start="480:63" pos:end="480:67">Point</name><argument_list pos:start="480:68" pos:end="480:75">(<argument pos:start="480:69" pos:end="480:70"><expr pos:start="480:69" pos:end="480:70"><literal type="number" pos:start="480:69" pos:end="480:70">30</literal></expr></argument>, <argument pos:start="480:73" pos:end="480:74"><expr pos:start="480:73" pos:end="480:74"><literal type="number" pos:start="480:73" pos:end="480:74">30</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<expr_stmt pos:start="481:33" pos:end="481:79"><expr pos:start="481:33" pos:end="481:78"><call pos:start="481:33" pos:end="481:78"><name pos:start="481:33" pos:end="481:59"><name pos:start="481:33" pos:end="481:45">leafletMarker</name><operator pos:start="481:46" pos:end="481:46">.</operator><name pos:start="481:47" pos:end="481:59">setIconAnchor</name></name><argument_list pos:start="481:60" pos:end="481:78">(<argument pos:start="481:61" pos:end="481:77"><expr pos:start="481:61" pos:end="481:77"><operator pos:start="481:61" pos:end="481:63">new</operator> <call pos:start="481:65" pos:end="481:77"><name pos:start="481:65" pos:end="481:69">Point</name><argument_list pos:start="481:70" pos:end="481:77">(<argument pos:start="481:71" pos:end="481:72"><expr pos:start="481:71" pos:end="481:72"><literal type="number" pos:start="481:71" pos:end="481:72">16</literal></expr></argument>, <argument pos:start="481:75" pos:end="481:76"><expr pos:start="481:75" pos:end="481:76"><literal type="number" pos:start="481:75" pos:end="481:76">10</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			</block_content>}</block></if>
			<comment type="line" pos:start="483:25" pos:end="483:58">// color all other points normally</comment>
			<else pos:start="484:25" pos:end="495:25">else <block pos:start="484:30" pos:end="495:25">{<block_content pos:start="485:33" pos:end="494:33">
				<decl_stmt pos:start="485:33" pos:end="485:78"><decl pos:start="485:33" pos:end="485:77"><type pos:start="485:33" pos:end="485:39"><name pos:start="485:33" pos:end="485:39">LMarker</name></type> <name pos:start="485:41" pos:end="485:53">leafletMarker</name> <init pos:start="485:55" pos:end="485:77">= <expr pos:start="485:57" pos:end="485:77"><call pos:start="485:57" pos:end="485:70"><name pos:start="485:57" pos:end="485:68"><name pos:start="485:57" pos:end="485:60">this</name><operator pos:start="485:61" pos:end="485:61">.</operator><name pos:start="485:62" pos:end="485:68">getPins</name></name><argument_list pos:start="485:69" pos:end="485:70">()</argument_list></call><operator pos:start="485:71" pos:end="485:71">.</operator><call pos:start="485:72" pos:end="485:77"><name pos:start="485:72" pos:end="485:74">get</name><argument_list pos:start="485:75" pos:end="485:77">(<argument pos:start="485:76" pos:end="485:76"><expr pos:start="485:76" pos:end="485:76"><name pos:start="485:76" pos:end="485:76">i</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
				<expr_stmt pos:start="486:33" pos:end="486:64"><expr pos:start="486:33" pos:end="486:63"><call pos:start="486:33" pos:end="486:63"><name pos:start="486:33" pos:end="486:53"><name pos:start="486:33" pos:end="486:45">leafletMarker</name><operator pos:start="486:46" pos:end="486:46">.</operator><name pos:start="486:47" pos:end="486:53">setIcon</name></name><argument_list pos:start="486:54" pos:end="486:63">(<argument pos:start="486:55" pos:end="486:62"><expr pos:start="486:55" pos:end="486:62"><name pos:start="486:55" pos:end="486:62">blueIcon</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<expr_stmt pos:start="487:33" pos:end="487:77"><expr pos:start="487:33" pos:end="487:76"><call pos:start="487:33" pos:end="487:76"><name pos:start="487:33" pos:end="487:57"><name pos:start="487:33" pos:end="487:45">leafletMarker</name><operator pos:start="487:46" pos:end="487:46">.</operator><name pos:start="487:47" pos:end="487:57">setIconSize</name></name><argument_list pos:start="487:58" pos:end="487:76">(<argument pos:start="487:59" pos:end="487:75"><expr pos:start="487:59" pos:end="487:75"><operator pos:start="487:59" pos:end="487:61">new</operator> <call pos:start="487:63" pos:end="487:75"><name pos:start="487:63" pos:end="487:67">Point</name><argument_list pos:start="487:68" pos:end="487:75">(<argument pos:start="487:69" pos:end="487:70"><expr pos:start="487:69" pos:end="487:70"><literal type="number" pos:start="487:69" pos:end="487:70">15</literal></expr></argument>, <argument pos:start="487:73" pos:end="487:74"><expr pos:start="487:73" pos:end="487:74"><literal type="number" pos:start="487:73" pos:end="487:74">15</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<expr_stmt pos:start="488:33" pos:end="488:78"><expr pos:start="488:33" pos:end="488:77"><call pos:start="488:33" pos:end="488:77"><name pos:start="488:33" pos:end="488:59"><name pos:start="488:33" pos:end="488:45">leafletMarker</name><operator pos:start="488:46" pos:end="488:46">.</operator><name pos:start="488:47" pos:end="488:59">setIconAnchor</name></name><argument_list pos:start="488:60" pos:end="488:77">(<argument pos:start="488:61" pos:end="488:76"><expr pos:start="488:61" pos:end="488:76"><operator pos:start="488:61" pos:end="488:63">new</operator> <call pos:start="488:65" pos:end="488:76"><name pos:start="488:65" pos:end="488:69">Point</name><argument_list pos:start="488:70" pos:end="488:76">(<argument pos:start="488:71" pos:end="488:71"><expr pos:start="488:71" pos:end="488:71"><literal type="number" pos:start="488:71" pos:end="488:71">7</literal></expr></argument>, <argument pos:start="488:74" pos:end="488:75"><expr pos:start="488:74" pos:end="488:75"><literal type="number" pos:start="488:74" pos:end="488:75">10</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<for pos:start="489:33" pos:end="494:33">for <control pos:start="489:37" pos:end="489:86">(<init pos:start="489:38" pos:end="489:85"><decl pos:start="489:38" pos:end="489:85"><type pos:start="489:38" pos:end="489:48"><name pos:start="489:38" pos:end="489:48">UIEdgePoint</name></type> <name pos:start="489:50" pos:end="489:54">point</name> <range pos:start="489:56" pos:end="489:85">: <expr pos:start="489:58" pos:end="489:85"><call pos:start="489:58" pos:end="489:78"><name pos:start="489:58" pos:end="489:76">getOrderedWayPoints</name><argument_list pos:start="489:77" pos:end="489:78">()</argument_list></call><operator pos:start="489:79" pos:end="489:79">.</operator><call pos:start="489:80" pos:end="489:85"><name pos:start="489:80" pos:end="489:82">get</name><argument_list pos:start="489:83" pos:end="489:85">(<argument pos:start="489:84" pos:end="489:84"><expr pos:start="489:84" pos:end="489:84"><literal type="number" pos:start="489:84" pos:end="489:84">0</literal></expr></argument>)</argument_list></call></expr></range></decl></init>)</control> <block pos:start="489:88" pos:end="494:33">{<block_content pos:start="490:41" pos:end="493:41">
					<if_stmt pos:start="490:41" pos:end="493:41"><if pos:start="490:41" pos:end="493:41">if <condition pos:start="490:44" pos:end="491:204">(<expr pos:start="490:45" pos:end="491:203"><operator pos:start="490:45" pos:end="490:45">(</operator><name pos:start="490:46" pos:end="490:51">double</name><operator pos:start="490:52" pos:end="490:52">)</operator><call pos:start="490:53" pos:end="490:112"><name pos:start="490:53" pos:end="490:62"><name pos:start="490:53" pos:end="490:56">Math</name><operator pos:start="490:57" pos:end="490:57">.</operator><name pos:start="490:58" pos:end="490:62">round</name></name><argument_list pos:start="490:63" pos:end="490:112">(<argument pos:start="490:64" pos:end="490:111"><expr pos:start="490:64" pos:end="490:111"><call pos:start="490:64" pos:end="490:102"><name pos:start="490:64" pos:end="490:81"><name pos:start="490:64" pos:end="490:69">Double</name><operator pos:start="490:70" pos:end="490:70">.</operator><name pos:start="490:71" pos:end="490:81">parseDouble</name></name><argument_list pos:start="490:82" pos:end="490:102">(<argument pos:start="490:83" pos:end="490:101"><expr pos:start="490:83" pos:end="490:101"><call pos:start="490:83" pos:end="490:101"><name pos:start="490:83" pos:end="490:99"><name pos:start="490:83" pos:end="490:87">point</name><operator pos:start="490:88" pos:end="490:88">.</operator><name pos:start="490:89" pos:end="490:99">getLatitude</name></name><argument_list pos:start="490:100" pos:end="490:101">()</argument_list></call></expr></argument>)</argument_list></call> <operator pos:start="490:104" pos:end="490:104">*</operator> <literal type="number" pos:start="490:106" pos:end="490:111">10000d</literal></expr></argument>)</argument_list></call> <operator pos:start="490:114" pos:end="490:114">/</operator> <literal type="number" pos:start="490:116" pos:end="490:121">10000d</literal> <operator pos:start="490:123" pos:end="490:124">==</operator> <operator pos:start="490:126" pos:end="490:126">(</operator><name pos:start="490:127" pos:end="490:132">double</name><operator pos:start="490:133" pos:end="490:133">)</operator><call pos:start="490:134" pos:end="490:195"><name pos:start="490:134" pos:end="490:143"><name pos:start="490:134" pos:end="490:137">Math</name><operator pos:start="490:138" pos:end="490:138">.</operator><name pos:start="490:139" pos:end="490:143">round</name></name><argument_list pos:start="490:144" pos:end="490:195">(<argument pos:start="490:145" pos:end="490:194"><expr pos:start="490:145" pos:end="490:194"><call pos:start="490:145" pos:end="490:158"><name pos:start="490:145" pos:end="490:156"><name pos:start="490:145" pos:end="490:148">this</name><operator pos:start="490:149" pos:end="490:149">.</operator><name pos:start="490:150" pos:end="490:156">getPins</name></name><argument_list pos:start="490:157" pos:end="490:158">()</argument_list></call><operator pos:start="490:159" pos:end="490:159">.</operator><call pos:start="490:160" pos:end="490:165"><name pos:start="490:160" pos:end="490:162">get</name><argument_list pos:start="490:163" pos:end="490:165">(<argument pos:start="490:164" pos:end="490:164"><expr pos:start="490:164" pos:end="490:164"><name pos:start="490:164" pos:end="490:164">i</name></expr></argument>)</argument_list></call><operator pos:start="490:166" pos:end="490:166">.</operator><call pos:start="490:167" pos:end="490:176"><name pos:start="490:167" pos:end="490:174">getPoint</name><argument_list pos:start="490:175" pos:end="490:176">()</argument_list></call><operator pos:start="490:177" pos:end="490:177">.</operator><call pos:start="490:178" pos:end="490:185"><name pos:start="490:178" pos:end="490:183">getLat</name><argument_list pos:start="490:184" pos:end="490:185">()</argument_list></call> <operator pos:start="490:187" pos:end="490:187">*</operator> <literal type="number" pos:start="490:189" pos:end="490:194">10000d</literal></expr></argument>)</argument_list></call> <operator pos:start="490:197" pos:end="490:197">/</operator> <literal type="number" pos:start="490:199" pos:end="490:204">10000d</literal>
					<operator pos:start="491:41" pos:end="491:42">&amp;&amp;</operator> <operator pos:start="491:44" pos:end="491:44">(</operator><name pos:start="491:45" pos:end="491:50">double</name><operator pos:start="491:51" pos:end="491:51">)</operator><call pos:start="491:52" pos:end="491:112"><name pos:start="491:52" pos:end="491:61"><name pos:start="491:52" pos:end="491:55">Math</name><operator pos:start="491:56" pos:end="491:56">.</operator><name pos:start="491:57" pos:end="491:61">round</name></name><argument_list pos:start="491:62" pos:end="491:112">(<argument pos:start="491:63" pos:end="491:111"><expr pos:start="491:63" pos:end="491:111"><call pos:start="491:63" pos:end="491:102"><name pos:start="491:63" pos:end="491:80"><name pos:start="491:63" pos:end="491:68">Double</name><operator pos:start="491:69" pos:end="491:69">.</operator><name pos:start="491:70" pos:end="491:80">parseDouble</name></name><argument_list pos:start="491:81" pos:end="491:102">(<argument pos:start="491:82" pos:end="491:101"><expr pos:start="491:82" pos:end="491:101"><call pos:start="491:82" pos:end="491:101"><name pos:start="491:82" pos:end="491:99"><name pos:start="491:82" pos:end="491:86">point</name><operator pos:start="491:87" pos:end="491:87">.</operator><name pos:start="491:88" pos:end="491:99">getLongitude</name></name><argument_list pos:start="491:100" pos:end="491:101">()</argument_list></call></expr></argument>)</argument_list></call> <operator pos:start="491:104" pos:end="491:104">*</operator> <literal type="number" pos:start="491:106" pos:end="491:111">10000d</literal></expr></argument>)</argument_list></call> <operator pos:start="491:114" pos:end="491:114">/</operator> <literal type="number" pos:start="491:116" pos:end="491:121">10000d</literal> <operator pos:start="491:123" pos:end="491:124">==</operator> <operator pos:start="491:126" pos:end="491:126">(</operator><name pos:start="491:127" pos:end="491:132">double</name><operator pos:start="491:133" pos:end="491:133">)</operator><call pos:start="491:134" pos:end="491:194"><name pos:start="491:134" pos:end="491:143"><name pos:start="491:134" pos:end="491:137">Math</name><operator pos:start="491:138" pos:end="491:138">.</operator><name pos:start="491:139" pos:end="491:143">round</name></name><argument_list pos:start="491:144" pos:end="491:194">(<argument pos:start="491:145" pos:end="491:193"><expr pos:start="491:145" pos:end="491:193"><call pos:start="491:145" pos:end="491:158"><name pos:start="491:145" pos:end="491:156"><name pos:start="491:145" pos:end="491:148">this</name><operator pos:start="491:149" pos:end="491:149">.</operator><name pos:start="491:150" pos:end="491:156">getPins</name></name><argument_list pos:start="491:157" pos:end="491:158">()</argument_list></call><operator pos:start="491:159" pos:end="491:159">.</operator><call pos:start="491:160" pos:end="491:165"><name pos:start="491:160" pos:end="491:162">get</name><argument_list pos:start="491:163" pos:end="491:165">(<argument pos:start="491:164" pos:end="491:164"><expr pos:start="491:164" pos:end="491:164"><name pos:start="491:164" pos:end="491:164">i</name></expr></argument>)</argument_list></call><operator pos:start="491:166" pos:end="491:166">.</operator><call pos:start="491:167" pos:end="491:176"><name pos:start="491:167" pos:end="491:174">getPoint</name><argument_list pos:start="491:175" pos:end="491:176">()</argument_list></call><operator pos:start="491:177" pos:end="491:177">.</operator><call pos:start="491:178" pos:end="491:185"><name pos:start="491:178" pos:end="491:183">getLon</name><argument_list pos:start="491:184" pos:end="491:185">()</argument_list></call><operator pos:start="491:186" pos:end="491:186">*</operator> <literal type="number" pos:start="491:188" pos:end="491:193">10000d</literal></expr></argument>)</argument_list></call> <operator pos:start="491:196" pos:end="491:196">/</operator> <literal type="number" pos:start="491:198" pos:end="491:203">10000d</literal></expr>)</condition> <block pos:start="491:206" pos:end="493:41">{<block_content pos:start="492:49" pos:end="492:81">
						<expr_stmt pos:start="492:49" pos:end="492:81"><expr pos:start="492:49" pos:end="492:80"><call pos:start="492:49" pos:end="492:80"><name pos:start="492:49" pos:end="492:69"><name pos:start="492:49" pos:end="492:61">leafletMarker</name><operator pos:start="492:62" pos:end="492:62">.</operator><name pos:start="492:63" pos:end="492:69">setIcon</name></name><argument_list pos:start="492:70" pos:end="492:80">(<argument pos:start="492:71" pos:end="492:79"><expr pos:start="492:71" pos:end="492:79"><name pos:start="492:71" pos:end="492:79">greenIcon</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					</block_content>}</block></if></if_stmt>
				</block_content>}</block></for>
			</block_content>}</block></else></if_stmt>
		</block_content>}</block></for>
	</block_content>}</block></function>

	<comment type="line" pos:start="499:9" pos:end="499:72">// get ordered waypoints that belong to each side of the mapping</comment>
	<function pos:start="500:9" pos:end="520:9"><type pos:start="500:9" pos:end="500:40"><specifier pos:start="500:9" pos:end="500:14">public</specifier> <name pos:start="500:16" pos:end="500:40"><name pos:start="500:16" pos:end="500:21">Vector</name><argument_list type="generic" pos:start="500:22" pos:end="500:40">&lt;<argument pos:start="500:23" pos:end="500:39"><name pos:start="500:23" pos:end="500:39"><name pos:start="500:23" pos:end="500:26">List</name><argument_list type="generic" pos:start="500:27" pos:end="500:39">&lt;<argument pos:start="500:28" pos:end="500:38"><name pos:start="500:28" pos:end="500:38">UIEdgePoint</name></argument>&gt;</argument_list></name></argument>&gt;</argument_list></name></type> <name pos:start="500:42" pos:end="500:60">getOrderedWayPoints</name><parameter_list pos:start="500:61" pos:end="500:62">()</parameter_list> <block pos:start="500:64" pos:end="520:9">{<block_content pos:start="501:17" pos:end="519:33">
		<decl_stmt pos:start="501:17" pos:end="501:69"><decl pos:start="501:17" pos:end="501:68"><type pos:start="501:17" pos:end="501:41"><name pos:start="501:17" pos:end="501:41"><name pos:start="501:17" pos:end="501:22">Vector</name><argument_list type="generic" pos:start="501:23" pos:end="501:41">&lt;<argument pos:start="501:24" pos:end="501:40"><name pos:start="501:24" pos:end="501:40"><name pos:start="501:24" pos:end="501:27">List</name><argument_list type="generic" pos:start="501:28" pos:end="501:40">&lt;<argument pos:start="501:29" pos:end="501:39"><name pos:start="501:29" pos:end="501:39">UIEdgePoint</name></argument>&gt;</argument_list></name></argument>&gt;</argument_list></name></type> <name pos:start="501:43" pos:end="501:51">wayPoints</name> <init pos:start="501:53" pos:end="501:68">= <expr pos:start="501:55" pos:end="501:68"><operator pos:start="501:55" pos:end="501:57">new</operator> <call pos:start="501:59" pos:end="501:68"><name pos:start="501:59" pos:end="501:66"><name pos:start="501:59" pos:end="501:64">Vector</name><argument_list type="generic" pos:start="501:65" pos:end="501:66">&lt;&gt;</argument_list></name><argument_list pos:start="501:67" pos:end="501:68">()</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt pos:start="502:17" pos:end="502:64"><expr pos:start="502:17" pos:end="502:63"><call pos:start="502:17" pos:end="502:63"><name pos:start="502:17" pos:end="502:29"><name pos:start="502:17" pos:end="502:25">wayPoints</name><operator pos:start="502:26" pos:end="502:26">.</operator><name pos:start="502:27" pos:end="502:29">add</name></name><argument_list pos:start="502:30" pos:end="502:63">(<argument pos:start="502:31" pos:end="502:31"><expr pos:start="502:31" pos:end="502:31"><literal type="number" pos:start="502:31" pos:end="502:31">0</literal></expr></argument>, <argument pos:start="502:34" pos:end="502:62"><expr pos:start="502:34" pos:end="502:62"><operator pos:start="502:34" pos:end="502:36">new</operator> <call pos:start="502:38" pos:end="502:62"><name pos:start="502:38" pos:end="502:60"><name pos:start="502:38" pos:end="502:47">LinkedList</name><argument_list type="generic" pos:start="502:48" pos:end="502:60">&lt;<argument pos:start="502:49" pos:end="502:59"><name pos:start="502:49" pos:end="502:59">UIEdgePoint</name></argument>&gt;</argument_list></name><argument_list pos:start="502:61" pos:end="502:62">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt pos:start="503:17" pos:end="503:64"><expr pos:start="503:17" pos:end="503:63"><call pos:start="503:17" pos:end="503:63"><name pos:start="503:17" pos:end="503:29"><name pos:start="503:17" pos:end="503:25">wayPoints</name><operator pos:start="503:26" pos:end="503:26">.</operator><name pos:start="503:27" pos:end="503:29">add</name></name><argument_list pos:start="503:30" pos:end="503:63">(<argument pos:start="503:31" pos:end="503:31"><expr pos:start="503:31" pos:end="503:31"><literal type="number" pos:start="503:31" pos:end="503:31">1</literal></expr></argument>, <argument pos:start="503:34" pos:end="503:62"><expr pos:start="503:34" pos:end="503:62"><operator pos:start="503:34" pos:end="503:36">new</operator> <call pos:start="503:38" pos:end="503:62"><name pos:start="503:38" pos:end="503:60"><name pos:start="503:38" pos:end="503:47">LinkedList</name><argument_list type="generic" pos:start="503:48" pos:end="503:60">&lt;<argument pos:start="503:49" pos:end="503:59"><name pos:start="503:49" pos:end="503:59">UIEdgePoint</name></argument>&gt;</argument_list></name><argument_list pos:start="503:61" pos:end="503:62">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<for pos:start="504:17" pos:end="506:17">for <control pos:start="504:21" pos:end="504:43">(<init pos:start="504:22" pos:end="504:42"><decl pos:start="504:22" pos:end="504:42"><type pos:start="504:22" pos:end="504:28"><name pos:start="504:22" pos:end="504:28">LMarker</name></type> <name pos:start="504:30" pos:end="504:30">p</name> <range pos:start="504:32" pos:end="504:42">: <expr pos:start="504:34" pos:end="504:42"><call pos:start="504:34" pos:end="504:42"><name pos:start="504:34" pos:end="504:40">getPins</name><argument_list pos:start="504:41" pos:end="504:42">()</argument_list></call></expr></range></decl></init>)</control> <block pos:start="504:45" pos:end="506:17">{<block_content pos:start="505:25" pos:end="505:106">
			<expr_stmt pos:start="505:25" pos:end="505:106"><expr pos:start="505:25" pos:end="505:105"><call pos:start="505:25" pos:end="505:75"><name pos:start="505:25" pos:end="505:37"><name pos:start="505:25" pos:end="505:33">wayPoints</name><operator pos:start="505:34" pos:end="505:34">.</operator><name pos:start="505:35" pos:end="505:37">get</name></name><argument_list pos:start="505:38" pos:end="505:75">(<argument pos:start="505:39" pos:end="505:74"><expr pos:start="505:39" pos:end="505:74"><operator pos:start="505:39" pos:end="505:39">(</operator><operator pos:start="505:40" pos:end="505:40">(</operator><name pos:start="505:41" pos:end="505:51">UIEdgePoint</name><operator pos:start="505:52" pos:end="505:52">)</operator><call pos:start="505:53" pos:end="505:63"><name pos:start="505:53" pos:end="505:61"><name pos:start="505:53" pos:end="505:53">p</name><operator pos:start="505:54" pos:end="505:54">.</operator><name pos:start="505:55" pos:end="505:61">getData</name></name><argument_list pos:start="505:62" pos:end="505:63">()</argument_list></call><operator pos:start="505:64" pos:end="505:64">)</operator><operator pos:start="505:65" pos:end="505:65">.</operator><call pos:start="505:66" pos:end="505:74"><name pos:start="505:66" pos:end="505:72">getSide</name><argument_list pos:start="505:73" pos:end="505:74">()</argument_list></call></expr></argument>)</argument_list></call><operator pos:start="505:76" pos:end="505:76">.</operator><call pos:start="505:77" pos:end="505:105"><name pos:start="505:77" pos:end="505:79">add</name><argument_list pos:start="505:80" pos:end="505:105">(<argument pos:start="505:81" pos:end="505:104"><expr pos:start="505:81" pos:end="505:104"><operator pos:start="505:81" pos:end="505:81">(</operator><name pos:start="505:82" pos:end="505:92">UIEdgePoint</name><operator pos:start="505:93" pos:end="505:93">)</operator><call pos:start="505:94" pos:end="505:104"><name pos:start="505:94" pos:end="505:102"><name pos:start="505:94" pos:end="505:94">p</name><operator pos:start="505:95" pos:end="505:95">.</operator><name pos:start="505:96" pos:end="505:102">getData</name></name><argument_list pos:start="505:103" pos:end="505:104">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		</block_content>}</block></for>
		<expr_stmt pos:start="507:17" pos:end="512:15"><expr pos:start="507:17" pos:end="512:14"><call pos:start="507:17" pos:end="507:32"><name pos:start="507:17" pos:end="507:29"><name pos:start="507:17" pos:end="507:25">wayPoints</name><operator pos:start="507:26" pos:end="507:26">.</operator><name pos:start="507:27" pos:end="507:29">get</name></name><argument_list pos:start="507:30" pos:end="507:32">(<argument pos:start="507:31" pos:end="507:31"><expr pos:start="507:31" pos:end="507:31"><literal type="number" pos:start="507:31" pos:end="507:31">0</literal></expr></argument>)</argument_list></call><operator pos:start="507:33" pos:end="507:33">.</operator><call pos:start="507:34" pos:end="512:14"><name pos:start="507:34" pos:end="507:37">sort</name><argument_list pos:start="507:38" pos:end="512:14">(<argument pos:start="507:39" pos:end="512:13"><expr pos:start="507:39" pos:end="512:13"><operator pos:start="507:39" pos:end="507:41">new</operator> <class pos:start="507:43" pos:end="512:13"><super pos:start="507:43" pos:end="507:65"><name pos:start="507:43" pos:end="507:65"><name pos:start="507:43" pos:end="507:52">Comparator</name><argument_list type="generic" pos:start="507:53" pos:end="507:65">&lt;<argument pos:start="507:54" pos:end="507:64"><name pos:start="507:54" pos:end="507:64">UIEdgePoint</name></argument>&gt;</argument_list></name></super><argument_list pos:start="507:66" pos:end="507:67">()</argument_list> <block pos:start="507:69" pos:end="512:13">{
	        <function pos:start="508:17" pos:end="511:17"><annotation pos:start="508:17" pos:end="508:25">@<name pos:start="508:18" pos:end="508:25">Override</name></annotation>
	        <type pos:start="509:17" pos:end="509:26"><specifier pos:start="509:17" pos:end="509:22">public</specifier> <name pos:start="509:24" pos:end="509:26">int</name></type> <name pos:start="509:28" pos:end="509:34">compare</name><parameter_list pos:start="509:35" pos:end="509:66">(<parameter pos:start="509:36" pos:end="509:49"><decl pos:start="509:36" pos:end="509:49"><type pos:start="509:36" pos:end="509:49"><name pos:start="509:36" pos:end="509:46">UIEdgePoint</name></type> <name pos:start="509:48" pos:end="509:49">w1</name></decl></parameter>, <parameter pos:start="509:52" pos:end="509:65"><decl pos:start="509:52" pos:end="509:65"><type pos:start="509:52" pos:end="509:65"><name pos:start="509:52" pos:end="509:62">UIEdgePoint</name></type> <name pos:start="509:64" pos:end="509:65">w2</name></decl></parameter>)</parameter_list> <block pos:start="509:68" pos:end="511:17">{<block_content pos:start="510:33" pos:end="510:70">
	        		<return pos:start="510:33" pos:end="510:70">return  <expr pos:start="510:41" pos:end="510:69"><call pos:start="510:41" pos:end="510:53"><name pos:start="510:41" pos:end="510:51"><name pos:start="510:41" pos:end="510:42">w1</name><operator pos:start="510:43" pos:end="510:43">.</operator><name pos:start="510:44" pos:end="510:51">getOrder</name></name><argument_list pos:start="510:52" pos:end="510:53">()</argument_list></call> <operator pos:start="510:55" pos:end="510:55">-</operator> <call pos:start="510:57" pos:end="510:69"><name pos:start="510:57" pos:end="510:67"><name pos:start="510:57" pos:end="510:58">w2</name><operator pos:start="510:59" pos:end="510:59">.</operator><name pos:start="510:60" pos:end="510:67">getOrder</name></name><argument_list pos:start="510:68" pos:end="510:69">()</argument_list></call></expr>;</return>
	        </block_content>}</block></function>
	    }</block></class></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt pos:start="513:17" pos:end="518:15"><expr pos:start="513:17" pos:end="518:14"><call pos:start="513:17" pos:end="513:32"><name pos:start="513:17" pos:end="513:29"><name pos:start="513:17" pos:end="513:25">wayPoints</name><operator pos:start="513:26" pos:end="513:26">.</operator><name pos:start="513:27" pos:end="513:29">get</name></name><argument_list pos:start="513:30" pos:end="513:32">(<argument pos:start="513:31" pos:end="513:31"><expr pos:start="513:31" pos:end="513:31"><literal type="number" pos:start="513:31" pos:end="513:31">1</literal></expr></argument>)</argument_list></call><operator pos:start="513:33" pos:end="513:33">.</operator><call pos:start="513:34" pos:end="518:14"><name pos:start="513:34" pos:end="513:37">sort</name><argument_list pos:start="513:38" pos:end="518:14">(<argument pos:start="513:39" pos:end="518:13"><expr pos:start="513:39" pos:end="518:13"><operator pos:start="513:39" pos:end="513:41">new</operator> <class pos:start="513:43" pos:end="518:13"><super pos:start="513:43" pos:end="513:65"><name pos:start="513:43" pos:end="513:65"><name pos:start="513:43" pos:end="513:52">Comparator</name><argument_list type="generic" pos:start="513:53" pos:end="513:65">&lt;<argument pos:start="513:54" pos:end="513:64"><name pos:start="513:54" pos:end="513:64">UIEdgePoint</name></argument>&gt;</argument_list></name></super><argument_list pos:start="513:66" pos:end="513:67">()</argument_list> <block pos:start="513:69" pos:end="518:13">{
	        <function pos:start="514:17" pos:end="517:17"><annotation pos:start="514:17" pos:end="514:25">@<name pos:start="514:18" pos:end="514:25">Override</name></annotation>
	        <type pos:start="515:17" pos:end="515:26"><specifier pos:start="515:17" pos:end="515:22">public</specifier> <name pos:start="515:24" pos:end="515:26">int</name></type> <name pos:start="515:28" pos:end="515:34">compare</name><parameter_list pos:start="515:35" pos:end="515:66">(<parameter pos:start="515:36" pos:end="515:49"><decl pos:start="515:36" pos:end="515:49"><type pos:start="515:36" pos:end="515:49"><name pos:start="515:36" pos:end="515:46">UIEdgePoint</name></type> <name pos:start="515:48" pos:end="515:49">w1</name></decl></parameter>, <parameter pos:start="515:52" pos:end="515:65"><decl pos:start="515:52" pos:end="515:65"><type pos:start="515:52" pos:end="515:65"><name pos:start="515:52" pos:end="515:62">UIEdgePoint</name></type> <name pos:start="515:64" pos:end="515:65">w2</name></decl></parameter>)</parameter_list> <block pos:start="515:68" pos:end="517:17">{<block_content pos:start="516:33" pos:end="516:70">
	        		<return pos:start="516:33" pos:end="516:70">return  <expr pos:start="516:41" pos:end="516:69"><call pos:start="516:41" pos:end="516:53"><name pos:start="516:41" pos:end="516:51"><name pos:start="516:41" pos:end="516:42">w1</name><operator pos:start="516:43" pos:end="516:43">.</operator><name pos:start="516:44" pos:end="516:51">getOrder</name></name><argument_list pos:start="516:52" pos:end="516:53">()</argument_list></call> <operator pos:start="516:55" pos:end="516:55">-</operator> <call pos:start="516:57" pos:end="516:69"><name pos:start="516:57" pos:end="516:67"><name pos:start="516:57" pos:end="516:58">w2</name><operator pos:start="516:59" pos:end="516:59">.</operator><name pos:start="516:60" pos:end="516:67">getOrder</name></name><argument_list pos:start="516:68" pos:end="516:69">()</argument_list></call></expr>;</return>
	        </block_content>}</block></function>
	    }</block></class></expr></argument>)</argument_list></call></expr>;</expr_stmt> 
		<return pos:start="519:17" pos:end="519:33">return <expr pos:start="519:24" pos:end="519:32"><name pos:start="519:24" pos:end="519:32">wayPoints</name></expr>;</return>
	</block_content>}</block></function>
	
	<comment type="line" pos:start="522:9" pos:end="522:75">// Gets all of the pins that are on the map, excluding polygon pins</comment>
	<function pos:start="523:9" pos:end="534:9"><type pos:start="523:9" pos:end="523:28"><specifier pos:start="523:9" pos:end="523:14">public</specifier> <name pos:start="523:16" pos:end="523:28"><name pos:start="523:16" pos:end="523:19">List</name><argument_list type="generic" pos:start="523:20" pos:end="523:28">&lt;<argument pos:start="523:21" pos:end="523:27"><name pos:start="523:21" pos:end="523:27">LMarker</name></argument>&gt;</argument_list></name></type> <name pos:start="523:30" pos:end="523:36">getPins</name><parameter_list pos:start="523:37" pos:end="523:38">()</parameter_list> <block pos:start="523:40" pos:end="534:9">{<block_content pos:start="524:17" pos:end="533:28">
		<decl_stmt pos:start="524:17" pos:end="524:55"><decl pos:start="524:17" pos:end="524:54"><type pos:start="524:17" pos:end="524:29"><name pos:start="524:17" pos:end="524:29"><name pos:start="524:17" pos:end="524:20">List</name><argument_list type="generic" pos:start="524:21" pos:end="524:29">&lt;<argument pos:start="524:22" pos:end="524:28"><name pos:start="524:22" pos:end="524:28">LMarker</name></argument>&gt;</argument_list></name></type> <name pos:start="524:31" pos:end="524:34">pins</name> <init pos:start="524:36" pos:end="524:54">= <expr pos:start="524:38" pos:end="524:54"><operator pos:start="524:38" pos:end="524:40">new</operator> <call pos:start="524:42" pos:end="524:54"><name pos:start="524:42" pos:end="524:52"><name pos:start="524:42" pos:end="524:50">ArrayList</name><argument_list type="generic" pos:start="524:51" pos:end="524:52">&lt;&gt;</argument_list></name><argument_list pos:start="524:53" pos:end="524:54">()</argument_list></call></expr></init></decl>;</decl_stmt>
		<decl_stmt pos:start="525:17" pos:end="525:56"><decl pos:start="525:17" pos:end="525:55"><type pos:start="525:17" pos:end="525:35"><name pos:start="525:17" pos:end="525:35"><name pos:start="525:17" pos:end="525:24">Iterator</name><argument_list type="generic" pos:start="525:25" pos:end="525:35">&lt;<argument pos:start="525:26" pos:end="525:34"><name pos:start="525:26" pos:end="525:34">Component</name></argument>&gt;</argument_list></name></type> <name pos:start="525:37" pos:end="525:38">it</name> <init pos:start="525:40" pos:end="525:55">= <expr pos:start="525:42" pos:end="525:55"><call pos:start="525:42" pos:end="525:55"><name pos:start="525:42" pos:end="525:53"><name pos:start="525:42" pos:end="525:44">map</name><operator pos:start="525:45" pos:end="525:45">.</operator><name pos:start="525:46" pos:end="525:53">iterator</name></name><argument_list pos:start="525:54" pos:end="525:55">()</argument_list></call></expr></init></decl>;</decl_stmt>
		<while pos:start="526:17" pos:end="532:17">while<condition pos:start="526:22" pos:end="526:35">(<expr pos:start="526:23" pos:end="526:34"><call pos:start="526:23" pos:end="526:34"><name pos:start="526:23" pos:end="526:32"><name pos:start="526:23" pos:end="526:24">it</name><operator pos:start="526:25" pos:end="526:25">.</operator><name pos:start="526:26" pos:end="526:32">hasNext</name></name><argument_list pos:start="526:33" pos:end="526:34">()</argument_list></call></expr>)</condition> <block pos:start="526:37" pos:end="532:17">{<block_content pos:start="527:25" pos:end="531:25">
			<decl_stmt pos:start="527:25" pos:end="527:48"><decl pos:start="527:25" pos:end="527:47"><type pos:start="527:25" pos:end="527:33"><name pos:start="527:25" pos:end="527:33">Component</name></type> <name pos:start="527:35" pos:end="527:35">c</name> <init pos:start="527:37" pos:end="527:47">= <expr pos:start="527:39" pos:end="527:47"><call pos:start="527:39" pos:end="527:47"><name pos:start="527:39" pos:end="527:45"><name pos:start="527:39" pos:end="527:40">it</name><operator pos:start="527:41" pos:end="527:41">.</operator><name pos:start="527:42" pos:end="527:45">next</name></name><argument_list pos:start="527:46" pos:end="527:47">()</argument_list></call></expr></init></decl>;</decl_stmt>
			<if_stmt pos:start="528:25" pos:end="531:25"><if pos:start="528:25" pos:end="531:25">if <condition pos:start="528:28" pos:end="528:58">(<expr pos:start="528:29" pos:end="528:57"><call pos:start="528:29" pos:end="528:40"><name pos:start="528:29" pos:end="528:38"><name pos:start="528:29" pos:end="528:29">c</name><operator pos:start="528:30" pos:end="528:30">.</operator><name pos:start="528:31" pos:end="528:38">getClass</name></name><argument_list pos:start="528:39" pos:end="528:40">()</argument_list></call> <operator pos:start="528:42" pos:end="528:43">==</operator> <name pos:start="528:45" pos:end="528:57"><name pos:start="528:45" pos:end="528:51">LMarker</name><operator pos:start="528:52" pos:end="528:52">.</operator><name pos:start="528:53" pos:end="528:57">class</name></name></expr>)</condition> <block pos:start="528:60" pos:end="531:25">{<block_content pos:start="529:33" pos:end="530:61">
				<if_stmt pos:start="529:33" pos:end="530:61"><if pos:start="529:33" pos:end="530:61">if <condition pos:start="529:36" pos:end="529:57">(<expr pos:start="529:37" pos:end="529:56"><call pos:start="529:37" pos:end="529:49"><name pos:start="529:37" pos:end="529:47"><name pos:start="529:37" pos:end="529:37">c</name><operator pos:start="529:38" pos:end="529:38">.</operator><name pos:start="529:39" pos:end="529:47">getHeight</name></name><argument_list pos:start="529:48" pos:end="529:49">()</argument_list></call> <operator pos:start="529:51" pos:end="529:52">!=</operator> <literal type="number" pos:start="529:54" pos:end="529:56">2.0</literal></expr>)</condition><block type="pseudo" pos:start="530:41" pos:end="530:61"><block_content pos:start="530:41" pos:end="530:61"> <comment type="line" pos:start="529:59" pos:end="529:82">// height of polygon pin</comment>
					<expr_stmt pos:start="530:41" pos:end="530:61"><expr pos:start="530:41" pos:end="530:60"><call pos:start="530:41" pos:end="530:60"><name pos:start="530:41" pos:end="530:48"><name pos:start="530:41" pos:end="530:44">pins</name><operator pos:start="530:45" pos:end="530:45">.</operator><name pos:start="530:46" pos:end="530:48">add</name></name><argument_list pos:start="530:49" pos:end="530:60">(<argument pos:start="530:50" pos:end="530:59"><expr pos:start="530:50" pos:end="530:59"><operator pos:start="530:50" pos:end="530:50">(</operator><name pos:start="530:51" pos:end="530:57">LMarker</name><operator pos:start="530:58" pos:end="530:58">)</operator><name pos:start="530:59" pos:end="530:59">c</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
			</block_content>}</block></if></if_stmt>
		</block_content>}</block></while>
		<return pos:start="533:17" pos:end="533:28">return <expr pos:start="533:24" pos:end="533:27"><name pos:start="533:24" pos:end="533:27">pins</name></expr>;</return>
	</block_content>}</block></function>
	
	<comment type="line" pos:start="536:9" pos:end="536:29">// gets pin by its ID</comment>
	<function pos:start="537:9" pos:end="544:9"><type pos:start="537:9" pos:end="537:22"><specifier pos:start="537:9" pos:end="537:14">public</specifier> <name pos:start="537:16" pos:end="537:22">LMarker</name></type> <name pos:start="537:24" pos:end="537:33">getPinById</name><parameter_list pos:start="537:34" pos:end="537:44">(<parameter pos:start="537:35" pos:end="537:43"><decl pos:start="537:35" pos:end="537:43"><type pos:start="537:35" pos:end="537:40"><name pos:start="537:35" pos:end="537:40">String</name></type> <name pos:start="537:42" pos:end="537:43">id</name></decl></parameter>)</parameter_list> <block pos:start="537:46" pos:end="544:9">{<block_content pos:start="538:17" pos:end="543:28">
		<decl_stmt pos:start="538:17" pos:end="538:47"><decl pos:start="538:17" pos:end="538:46"><type pos:start="538:17" pos:end="538:29"><name pos:start="538:17" pos:end="538:29"><name pos:start="538:17" pos:end="538:20">List</name><argument_list type="generic" pos:start="538:21" pos:end="538:29">&lt;<argument pos:start="538:22" pos:end="538:28"><name pos:start="538:22" pos:end="538:28">LMarker</name></argument>&gt;</argument_list></name></type> <name pos:start="538:31" pos:end="538:34">pins</name> <init pos:start="538:36" pos:end="538:46">= <expr pos:start="538:38" pos:end="538:46"><call pos:start="538:38" pos:end="538:46"><name pos:start="538:38" pos:end="538:44">getPins</name><argument_list pos:start="538:45" pos:end="538:46">()</argument_list></call></expr></init></decl>;</decl_stmt>
		<for pos:start="539:17" pos:end="542:17">for <control pos:start="539:21" pos:end="539:40">(<init pos:start="539:22" pos:end="539:39"><decl pos:start="539:22" pos:end="539:39"><type pos:start="539:22" pos:end="539:28"><name pos:start="539:22" pos:end="539:28">LMarker</name></type> <name pos:start="539:30" pos:end="539:32">pin</name> <range pos:start="539:34" pos:end="539:39">: <expr pos:start="539:36" pos:end="539:39"><name pos:start="539:36" pos:end="539:39">pins</name></expr></range></decl></init>)</control> <block pos:start="539:42" pos:end="542:17">{<block_content pos:start="540:25" pos:end="541:43">
			<if_stmt pos:start="540:25" pos:end="541:43"><if pos:start="540:25" pos:end="541:43">if <condition pos:start="540:28" pos:end="540:51">(<expr pos:start="540:29" pos:end="540:50"><call pos:start="540:29" pos:end="540:39"><name pos:start="540:29" pos:end="540:37"><name pos:start="540:29" pos:end="540:31">pin</name><operator pos:start="540:32" pos:end="540:32">.</operator><name pos:start="540:33" pos:end="540:37">getId</name></name><argument_list pos:start="540:38" pos:end="540:39">()</argument_list></call><operator pos:start="540:40" pos:end="540:40">.</operator><call pos:start="540:41" pos:end="540:50"><name pos:start="540:41" pos:end="540:46">equals</name><argument_list pos:start="540:47" pos:end="540:50">(<argument pos:start="540:48" pos:end="540:49"><expr pos:start="540:48" pos:end="540:49"><name pos:start="540:48" pos:end="540:49">id</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="541:33" pos:end="541:43"><block_content pos:start="541:33" pos:end="541:43">
				<return pos:start="541:33" pos:end="541:43">return <expr pos:start="541:40" pos:end="541:42"><name pos:start="541:40" pos:end="541:42">pin</name></expr>;</return></block_content></block></if></if_stmt>
		</block_content>}</block></for>
		<return pos:start="543:17" pos:end="543:28">return <expr pos:start="543:24" pos:end="543:27"><literal type="null" pos:start="543:24" pos:end="543:27">null</literal></expr>;</return>
	</block_content>}</block></function>
	
	<comment type="line" pos:start="546:9" pos:end="546:76">// draw a polygon using the points that have been plotted on the map</comment>
	<function pos:start="547:9" pos:end="573:9"><type pos:start="547:9" pos:end="547:19"><specifier pos:start="547:9" pos:end="547:14">public</specifier> <name pos:start="547:16" pos:end="547:19">void</name></type> <name pos:start="547:21" pos:end="547:31">drawPolygon</name><parameter_list pos:start="547:32" pos:end="547:33">()</parameter_list> <block pos:start="547:35" pos:end="573:9">{<block_content pos:start="550:17" pos:end="572:40">
		
		<comment type="line" pos:start="549:17" pos:end="549:62">// convert each point to create an area to add</comment>
		<expr_stmt pos:start="550:17" pos:end="550:74"><expr pos:start="550:17" pos:end="550:73"><name pos:start="550:17" pos:end="550:25">areaToAdd</name><operator pos:start="550:26" pos:end="550:26">=</operator> <operator pos:start="550:28" pos:end="550:30">new</operator> <call pos:start="550:32" pos:end="550:73"><name pos:start="550:32" pos:end="550:43">PriorityArea</name><argument_list pos:start="550:44" pos:end="550:73">(<argument pos:start="550:45" pos:end="550:72"><expr pos:start="550:45" pos:end="550:72"><call pos:start="550:45" pos:end="550:61"><name pos:start="550:45" pos:end="550:59"><name pos:start="550:45" pos:end="550:48">UUID</name><operator pos:start="550:49" pos:end="550:49">.</operator><name pos:start="550:50" pos:end="550:59">randomUUID</name></name><argument_list pos:start="550:60" pos:end="550:61">()</argument_list></call><operator pos:start="550:62" pos:end="550:62">.</operator><call pos:start="550:63" pos:end="550:72"><name pos:start="550:63" pos:end="550:70">toString</name><argument_list pos:start="550:71" pos:end="550:72">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<for pos:start="551:17" pos:end="553:17">for <control pos:start="551:21" pos:end="551:64">(<init pos:start="551:22" pos:end="551:31"><decl pos:start="551:22" pos:end="551:30"><type pos:start="551:22" pos:end="551:24"><name pos:start="551:22" pos:end="551:24">int</name></type> <name pos:start="551:26" pos:end="551:26">i</name> <init pos:start="551:28" pos:end="551:30">= <expr pos:start="551:30" pos:end="551:30"><literal type="number" pos:start="551:30" pos:end="551:30">0</literal></expr></init></decl>;</init> <condition pos:start="551:33" pos:end="551:59"><expr pos:start="551:33" pos:end="551:58"><name pos:start="551:33" pos:end="551:33">i</name> <operator pos:start="551:35" pos:end="551:35">&lt;</operator> <call pos:start="551:37" pos:end="551:58"><name pos:start="551:37" pos:end="551:56"><name pos:start="551:37" pos:end="551:51">polygonVertices</name><operator pos:start="551:52" pos:end="551:52">.</operator><name pos:start="551:53" pos:end="551:56">size</name></name><argument_list pos:start="551:57" pos:end="551:58">()</argument_list></call></expr>;</condition> <incr pos:start="551:61" pos:end="551:63"><expr pos:start="551:61" pos:end="551:63"><name pos:start="551:61" pos:end="551:61">i</name><operator pos:start="551:62" pos:end="551:63">++</operator></expr></incr>)</control> <block pos:start="551:66" pos:end="553:17">{<block_content pos:start="552:25" pos:end="552:136">
			<expr_stmt pos:start="552:25" pos:end="552:136"><expr pos:start="552:25" pos:end="552:135"><call pos:start="552:25" pos:end="552:135"><name pos:start="552:25" pos:end="552:47"><name pos:start="552:25" pos:end="552:33">areaToAdd</name><operator pos:start="552:34" pos:end="552:34">.</operator><name pos:start="552:35" pos:end="552:47">addCoordinate</name></name><argument_list pos:start="552:48" pos:end="552:135">(<argument pos:start="552:49" pos:end="552:134"><expr pos:start="552:49" pos:end="552:134"><operator pos:start="552:49" pos:end="552:51">new</operator> <call pos:start="552:53" pos:end="552:134"><name pos:start="552:53" pos:end="552:65">LlaCoordinate</name><argument_list pos:start="552:66" pos:end="552:134">(<argument pos:start="552:67" pos:end="552:97"><expr pos:start="552:67" pos:end="552:97"><call pos:start="552:67" pos:end="552:88"><name pos:start="552:67" pos:end="552:85"><name pos:start="552:67" pos:end="552:81">polygonVertices</name><operator pos:start="552:82" pos:end="552:82">.</operator><name pos:start="552:83" pos:end="552:85">get</name></name><argument_list pos:start="552:86" pos:end="552:88">(<argument pos:start="552:87" pos:end="552:87"><expr pos:start="552:87" pos:end="552:87"><name pos:start="552:87" pos:end="552:87">i</name></expr></argument>)</argument_list></call><operator pos:start="552:89" pos:end="552:89">.</operator><call pos:start="552:90" pos:end="552:97"><name pos:start="552:90" pos:end="552:95">getLat</name><argument_list pos:start="552:96" pos:end="552:97">()</argument_list></call></expr></argument>, <argument pos:start="552:100" pos:end="552:130"><expr pos:start="552:100" pos:end="552:130"><call pos:start="552:100" pos:end="552:121"><name pos:start="552:100" pos:end="552:118"><name pos:start="552:100" pos:end="552:114">polygonVertices</name><operator pos:start="552:115" pos:end="552:115">.</operator><name pos:start="552:116" pos:end="552:118">get</name></name><argument_list pos:start="552:119" pos:end="552:121">(<argument pos:start="552:120" pos:end="552:120"><expr pos:start="552:120" pos:end="552:120"><name pos:start="552:120" pos:end="552:120">i</name></expr></argument>)</argument_list></call><operator pos:start="552:122" pos:end="552:122">.</operator><call pos:start="552:123" pos:end="552:130"><name pos:start="552:123" pos:end="552:128">getLon</name><argument_list pos:start="552:129" pos:end="552:130">()</argument_list></call></expr></argument>, <argument pos:start="552:133" pos:end="552:133"><expr pos:start="552:133" pos:end="552:133"><literal type="number" pos:start="552:133" pos:end="552:133">0</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		</block_content>}</block></for>
		
		<comment type="line" pos:start="555:17" pos:end="555:83">// if polygon already in list, remove it so that copies don't exist</comment>
		<for pos:start="556:17" pos:end="559:17">for <control pos:start="556:21" pos:end="556:66">(<init pos:start="556:22" pos:end="556:31"><decl pos:start="556:22" pos:end="556:30"><type pos:start="556:22" pos:end="556:24"><name pos:start="556:22" pos:end="556:24">int</name></type> <name pos:start="556:26" pos:end="556:26">i</name> <init pos:start="556:28" pos:end="556:30">= <expr pos:start="556:30" pos:end="556:30"><literal type="number" pos:start="556:30" pos:end="556:30">0</literal></expr></init></decl>;</init> <condition pos:start="556:33" pos:end="556:60"><expr pos:start="556:33" pos:end="556:59"><name pos:start="556:33" pos:end="556:33">i</name> <operator pos:start="556:35" pos:end="556:35">&lt;</operator> <call pos:start="556:37" pos:end="556:59"><name pos:start="556:37" pos:end="556:57"><name pos:start="556:37" pos:end="556:52">allPriorityAreas</name><operator pos:start="556:53" pos:end="556:53">.</operator><name pos:start="556:54" pos:end="556:57">size</name></name><argument_list pos:start="556:58" pos:end="556:59">()</argument_list></call></expr>;</condition> <incr pos:start="556:62" pos:end="556:65"><expr pos:start="556:62" pos:end="556:65"><name pos:start="556:62" pos:end="556:62">i</name> <operator pos:start="556:64" pos:end="556:65">++</operator></expr></incr>)</control> <block pos:start="556:68" pos:end="559:17">{<block_content pos:start="557:25" pos:end="558:59">
			<if_stmt pos:start="557:25" pos:end="558:59"><if pos:start="557:25" pos:end="558:59">if <condition pos:start="557:28" pos:end="557:104">(<expr pos:start="557:29" pos:end="557:103"><call pos:start="557:29" pos:end="557:54"><name pos:start="557:29" pos:end="557:52"><name pos:start="557:29" pos:end="557:37">areaToAdd</name><operator pos:start="557:38" pos:end="557:38">.</operator><name pos:start="557:39" pos:end="557:52">getCoordinates</name></name><argument_list pos:start="557:53" pos:end="557:54">()</argument_list></call><operator pos:start="557:55" pos:end="557:55">.</operator><call pos:start="557:56" pos:end="557:103"><name pos:start="557:56" pos:end="557:61">equals</name><argument_list pos:start="557:62" pos:end="557:103">(<argument pos:start="557:63" pos:end="557:102"><expr pos:start="557:63" pos:end="557:102"><call pos:start="557:63" pos:end="557:85"><name pos:start="557:63" pos:end="557:82"><name pos:start="557:63" pos:end="557:78">allPriorityAreas</name><operator pos:start="557:79" pos:end="557:79">.</operator><name pos:start="557:80" pos:end="557:82">get</name></name><argument_list pos:start="557:83" pos:end="557:85">(<argument pos:start="557:84" pos:end="557:84"><expr pos:start="557:84" pos:end="557:84"><name pos:start="557:84" pos:end="557:84">i</name></expr></argument>)</argument_list></call><operator pos:start="557:86" pos:end="557:86">.</operator><call pos:start="557:87" pos:end="557:102"><name pos:start="557:87" pos:end="557:100">getCoordinates</name><argument_list pos:start="557:101" pos:end="557:102">()</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="558:33" pos:end="558:59"><block_content pos:start="558:33" pos:end="558:59">
				<expr_stmt pos:start="558:33" pos:end="558:59"><expr pos:start="558:33" pos:end="558:58"><call pos:start="558:33" pos:end="558:58"><name pos:start="558:33" pos:end="558:55"><name pos:start="558:33" pos:end="558:48">allPriorityAreas</name><operator pos:start="558:49" pos:end="558:49">.</operator><name pos:start="558:50" pos:end="558:55">remove</name></name><argument_list pos:start="558:56" pos:end="558:58">(<argument pos:start="558:57" pos:end="558:57"><expr pos:start="558:57" pos:end="558:57"><name pos:start="558:57" pos:end="558:57">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
		</block_content>}</block></for>
		
		<comment type="line" pos:start="561:17" pos:end="561:63">// convert from list to array to create Polygon</comment>
		<decl_stmt pos:start="562:17" pos:end="562:53"><decl pos:start="562:17" pos:end="562:52"><type pos:start="562:17" pos:end="562:24"><name pos:start="562:17" pos:end="562:24">LPolygon</name></type> <name pos:start="562:26" pos:end="562:35">newPolygon</name> <init pos:start="562:37" pos:end="562:52">= <expr pos:start="562:39" pos:end="562:52"><operator pos:start="562:39" pos:end="562:41">new</operator> <call pos:start="562:43" pos:end="562:52"><name pos:start="562:43" pos:end="562:50">LPolygon</name><argument_list pos:start="562:51" pos:end="562:52">()</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt pos:start="563:17" pos:end="563:47"><expr pos:start="563:17" pos:end="563:46"><call pos:start="563:17" pos:end="563:46"><name pos:start="563:17" pos:end="563:35"><name pos:start="563:17" pos:end="563:26">newPolygon</name><operator pos:start="563:27" pos:end="563:27">.</operator><name pos:start="563:28" pos:end="563:35">setColor</name></name><argument_list pos:start="563:36" pos:end="563:46">(<argument pos:start="563:37" pos:end="563:45"><expr pos:start="563:37" pos:end="563:45"><literal type="string" pos:start="563:37" pos:end="563:45">"#ff5050"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<decl_stmt pos:start="564:17" pos:end="564:71"><decl pos:start="564:17" pos:end="564:70"><type pos:start="564:17" pos:end="564:21"><name pos:start="564:17" pos:end="564:21">Point</name></type> <name pos:start="564:23" pos:end="564:34"><name pos:start="564:23" pos:end="564:32">pointArray</name><index pos:start="564:33" pos:end="564:34">[]</index></name> <init pos:start="564:36" pos:end="564:70">= <expr pos:start="564:38" pos:end="564:70"><operator pos:start="564:38" pos:end="564:40">new</operator> <name pos:start="564:42" pos:end="564:70"><name pos:start="564:42" pos:end="564:46">Point</name><index pos:start="564:47" pos:end="564:70">[<expr pos:start="564:48" pos:end="564:69"><call pos:start="564:48" pos:end="564:69"><name pos:start="564:48" pos:end="564:67"><name pos:start="564:48" pos:end="564:62">polygonVertices</name><operator pos:start="564:63" pos:end="564:63">.</operator><name pos:start="564:64" pos:end="564:67">size</name></name><argument_list pos:start="564:68" pos:end="564:69">()</argument_list></call></expr>]</index></name></expr></init></decl>;</decl_stmt>
	    <expr_stmt pos:start="565:13" pos:end="565:61"><expr pos:start="565:13" pos:end="565:60"><name pos:start="565:13" pos:end="565:22">pointArray</name> <operator pos:start="565:24" pos:end="565:24">=</operator> <call pos:start="565:26" pos:end="565:60"><name pos:start="565:26" pos:end="565:48"><name pos:start="565:26" pos:end="565:40">polygonVertices</name><operator pos:start="565:41" pos:end="565:41">.</operator><name pos:start="565:42" pos:end="565:48">toArray</name></name><argument_list pos:start="565:49" pos:end="565:60">(<argument pos:start="565:50" pos:end="565:59"><expr pos:start="565:50" pos:end="565:59"><name pos:start="565:50" pos:end="565:59">pointArray</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt pos:start="566:17" pos:end="566:49"><expr pos:start="566:17" pos:end="566:48"><call pos:start="566:17" pos:end="566:48"><name pos:start="566:17" pos:end="566:36"><name pos:start="566:17" pos:end="566:26">newPolygon</name><operator pos:start="566:27" pos:end="566:27">.</operator><name pos:start="566:28" pos:end="566:36">setPoints</name></name><argument_list pos:start="566:37" pos:end="566:48">(<argument pos:start="566:38" pos:end="566:47"><expr pos:start="566:38" pos:end="566:47"><name pos:start="566:38" pos:end="566:47">pointArray</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt pos:start="567:17" pos:end="567:45"><expr pos:start="567:17" pos:end="567:44"><call pos:start="567:17" pos:end="567:44"><name pos:start="567:17" pos:end="567:32"><name pos:start="567:17" pos:end="567:19">map</name><operator pos:start="567:20" pos:end="567:20">.</operator><name pos:start="567:21" pos:end="567:32">addComponent</name></name><argument_list pos:start="567:33" pos:end="567:44">(<argument pos:start="567:34" pos:end="567:43"><expr pos:start="567:34" pos:end="567:43"><name pos:start="567:34" pos:end="567:43">newPolygon</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<decl_stmt pos:start="568:17" pos:end="568:137"><decl pos:start="568:17" pos:end="568:136"><type pos:start="568:17" pos:end="568:47"><name pos:start="568:17" pos:end="568:47">AMPriorityAreaMouseOverListener</name></type> <name pos:start="568:49" pos:end="568:65">mouseOverListener</name> <init pos:start="568:67" pos:end="568:136">= <expr pos:start="568:69" pos:end="568:136"><operator pos:start="568:69" pos:end="568:71">new</operator> <call pos:start="568:73" pos:end="568:136"><name pos:start="568:73" pos:end="568:103">AMPriorityAreaMouseOverListener</name><argument_list pos:start="568:104" pos:end="568:136">(<argument pos:start="568:105" pos:end="568:116"><expr pos:start="568:105" pos:end="568:116"><name pos:start="568:105" pos:end="568:116">mapComponent</name></expr></argument>, <argument pos:start="568:119" pos:end="568:135"><expr pos:start="568:119" pos:end="568:135"><call pos:start="568:119" pos:end="568:135"><name pos:start="568:119" pos:end="568:133"><name pos:start="568:119" pos:end="568:127">areaToAdd</name><operator pos:start="568:128" pos:end="568:128">.</operator><name pos:start="568:129" pos:end="568:133">getId</name></name><argument_list pos:start="568:134" pos:end="568:135">()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt pos:start="569:17" pos:end="569:67"><expr pos:start="569:17" pos:end="569:66"><call pos:start="569:17" pos:end="569:66"><name pos:start="569:17" pos:end="569:47"><name pos:start="569:17" pos:end="569:26">newPolygon</name><operator pos:start="569:27" pos:end="569:27">.</operator><name pos:start="569:28" pos:end="569:47">addMouseOverListener</name></name><argument_list pos:start="569:48" pos:end="569:66">(<argument pos:start="569:49" pos:end="569:65"><expr pos:start="569:49" pos:end="569:65"><name pos:start="569:49" pos:end="569:65">mouseOverListener</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt pos:start="570:17" pos:end="570:85"><expr pos:start="570:17" pos:end="570:84"><call pos:start="570:17" pos:end="570:84"><name pos:start="570:17" pos:end="570:46"><name pos:start="570:17" pos:end="570:26">newPolygon</name><operator pos:start="570:27" pos:end="570:27">.</operator><name pos:start="570:28" pos:end="570:46">addMouseOutListener</name></name><argument_list pos:start="570:47" pos:end="570:84">(<argument pos:start="570:48" pos:end="570:83"><expr pos:start="570:48" pos:end="570:83"><operator pos:start="570:48" pos:end="570:50">new</operator> <call pos:start="570:52" pos:end="570:83"><name pos:start="570:52" pos:end="570:77">AMPriorityMouseOutListener</name><argument_list pos:start="570:78" pos:end="570:83">(<argument pos:start="570:79" pos:end="570:82"><expr pos:start="570:79" pos:end="570:82"><name pos:start="570:79" pos:end="570:82">this</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:start="570:87" pos:end="570:133">// closes the window from the mouseOverListener</comment>
		<expr_stmt pos:start="571:17" pos:end="571:39"><expr pos:start="571:17" pos:end="571:38"><call pos:start="571:17" pos:end="571:38"><name pos:start="571:17" pos:end="571:36"><name pos:start="571:17" pos:end="571:30">newPolygonPins</name><operator pos:start="571:31" pos:end="571:31">.</operator><name pos:start="571:32" pos:end="571:36">clear</name></name><argument_list pos:start="571:37" pos:end="571:38">()</argument_list></call></expr>;</expr_stmt>
		<expr_stmt pos:start="572:17" pos:end="572:40"><expr pos:start="572:17" pos:end="572:39"><call pos:start="572:17" pos:end="572:39"><name pos:start="572:17" pos:end="572:37"><name pos:start="572:17" pos:end="572:31">newPolygonLines</name><operator pos:start="572:32" pos:end="572:32">.</operator><name pos:start="572:33" pos:end="572:37">clear</name></name><argument_list pos:start="572:38" pos:end="572:39">()</argument_list></call></expr>;</expr_stmt>
	</block_content>}</block></function>
	
	<comment type="line" pos:start="575:9" pos:end="575:76">// uses the polygonVertices to finish and create a new priority area</comment>
	<function pos:start="576:9" pos:end="582:9"><type pos:start="576:9" pos:end="576:19"><specifier pos:start="576:9" pos:end="576:14">public</specifier> <name pos:start="576:16" pos:end="576:19">void</name></type> <name pos:start="576:21" pos:end="576:35">addPriorityArea</name><parameter_list pos:start="576:36" pos:end="576:88">(<parameter pos:start="576:37" pos:end="576:47"><decl pos:start="576:37" pos:end="576:47"><type pos:start="576:37" pos:end="576:47"><name pos:start="576:37" pos:end="576:42">String</name></type> <name pos:start="576:44" pos:end="576:47">type</name></decl></parameter>, <parameter pos:start="576:50" pos:end="576:67"><decl pos:start="576:50" pos:end="576:67"><type pos:start="576:50" pos:end="576:67"><name pos:start="576:50" pos:end="576:55">String</name></type> <name pos:start="576:57" pos:end="576:67">description</name></decl></parameter>, <parameter pos:start="576:70" pos:end="576:87"><decl pos:start="576:70" pos:end="576:87"><type pos:start="576:70" pos:end="576:87"><name pos:start="576:70" pos:end="576:76">Integer</name></type> <name pos:start="576:78" pos:end="576:87">importance</name></decl></parameter>)</parameter_list> <block pos:start="576:90" pos:end="582:9">{<block_content pos:start="577:17" pos:end="581:40">
		<expr_stmt pos:start="577:17" pos:end="577:40"><expr pos:start="577:17" pos:end="577:39"><call pos:start="577:17" pos:end="577:39"><name pos:start="577:17" pos:end="577:33"><name pos:start="577:17" pos:end="577:25">areaToAdd</name><operator pos:start="577:26" pos:end="577:26">.</operator><name pos:start="577:27" pos:end="577:33">setType</name></name><argument_list pos:start="577:34" pos:end="577:39">(<argument pos:start="577:35" pos:end="577:38"><expr pos:start="577:35" pos:end="577:38"><name pos:start="577:35" pos:end="577:38">type</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt pos:start="578:17" pos:end="578:54"><expr pos:start="578:17" pos:end="578:53"><call pos:start="578:17" pos:end="578:53"><name pos:start="578:17" pos:end="578:40"><name pos:start="578:17" pos:end="578:25">areaToAdd</name><operator pos:start="578:26" pos:end="578:26">.</operator><name pos:start="578:27" pos:end="578:40">setDescription</name></name><argument_list pos:start="578:41" pos:end="578:53">(<argument pos:start="578:42" pos:end="578:52"><expr pos:start="578:42" pos:end="578:52"><name pos:start="578:42" pos:end="578:52">description</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt pos:start="579:17" pos:end="579:52"><expr pos:start="579:17" pos:end="579:51"><call pos:start="579:17" pos:end="579:51"><name pos:start="579:17" pos:end="579:39"><name pos:start="579:17" pos:end="579:25">areaToAdd</name><operator pos:start="579:26" pos:end="579:26">.</operator><name pos:start="579:27" pos:end="579:39">setImportance</name></name><argument_list pos:start="579:40" pos:end="579:51">(<argument pos:start="579:41" pos:end="579:50"><expr pos:start="579:41" pos:end="579:50"><name pos:start="579:41" pos:end="579:50">importance</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt pos:start="580:17" pos:end="580:48"><expr pos:start="580:17" pos:end="580:47"><call pos:start="580:17" pos:end="580:47"><name pos:start="580:17" pos:end="580:36"><name pos:start="580:17" pos:end="580:32">allPriorityAreas</name><operator pos:start="580:33" pos:end="580:33">.</operator><name pos:start="580:34" pos:end="580:36">add</name></name><argument_list pos:start="580:37" pos:end="580:47">(<argument pos:start="580:38" pos:end="580:46"><expr pos:start="580:38" pos:end="580:46"><name pos:start="580:38" pos:end="580:46">areaToAdd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt pos:start="581:17" pos:end="581:40"><expr pos:start="581:17" pos:end="581:39"><call pos:start="581:17" pos:end="581:39"><name pos:start="581:17" pos:end="581:37"><name pos:start="581:17" pos:end="581:31">polygonVertices</name><operator pos:start="581:32" pos:end="581:32">.</operator><name pos:start="581:33" pos:end="581:37">clear</name></name><argument_list pos:start="581:38" pos:end="581:39">()</argument_list></call></expr>;</expr_stmt>
	</block_content>}</block></function>
	
	<comment type="line" pos:start="584:9" pos:end="584:84">// iterate through map to find all polygons and polygon pins and delete them</comment>
	<function pos:start="585:9" pos:end="620:9"><type pos:start="585:9" pos:end="585:19"><specifier pos:start="585:9" pos:end="585:14">public</specifier> <name pos:start="585:16" pos:end="585:19">void</name></type> <name pos:start="585:21" pos:end="585:42">removeAllPriorityAreas</name><parameter_list pos:start="585:43" pos:end="585:44">()</parameter_list> <block pos:start="585:46" pos:end="620:9">{<block_content pos:start="586:17" pos:end="619:40">
		<decl_stmt pos:start="586:17" pos:end="586:60"><decl pos:start="586:17" pos:end="586:59"><type pos:start="586:17" pos:end="586:30"><name pos:start="586:17" pos:end="586:30"><name pos:start="586:17" pos:end="586:20">List</name><argument_list type="generic" pos:start="586:21" pos:end="586:30">&lt;<argument pos:start="586:22" pos:end="586:29"><name pos:start="586:22" pos:end="586:29">LPolygon</name></argument>&gt;</argument_list></name></type> <name pos:start="586:32" pos:end="586:39">polygons</name> <init pos:start="586:41" pos:end="586:59">= <expr pos:start="586:43" pos:end="586:59"><operator pos:start="586:43" pos:end="586:45">new</operator> <call pos:start="586:47" pos:end="586:59"><name pos:start="586:47" pos:end="586:57"><name pos:start="586:47" pos:end="586:55">ArrayList</name><argument_list type="generic" pos:start="586:56" pos:end="586:57">&lt;&gt;</argument_list></name><argument_list pos:start="586:58" pos:end="586:59">()</argument_list></call></expr></init></decl>;</decl_stmt>
		<decl_stmt pos:start="587:17" pos:end="587:55"><decl pos:start="587:17" pos:end="587:54"><type pos:start="587:17" pos:end="587:29"><name pos:start="587:17" pos:end="587:29"><name pos:start="587:17" pos:end="587:20">List</name><argument_list type="generic" pos:start="587:21" pos:end="587:29">&lt;<argument pos:start="587:22" pos:end="587:28"><name pos:start="587:22" pos:end="587:28">LMarker</name></argument>&gt;</argument_list></name></type> <name pos:start="587:31" pos:end="587:34">pins</name> <init pos:start="587:36" pos:end="587:54">= <expr pos:start="587:38" pos:end="587:54"><operator pos:start="587:38" pos:end="587:40">new</operator> <call pos:start="587:42" pos:end="587:54"><name pos:start="587:42" pos:end="587:52"><name pos:start="587:42" pos:end="587:50">ArrayList</name><argument_list type="generic" pos:start="587:51" pos:end="587:52">&lt;&gt;</argument_list></name><argument_list pos:start="587:53" pos:end="587:54">()</argument_list></call></expr></init></decl>;</decl_stmt>
		<decl_stmt pos:start="588:17" pos:end="588:58"><decl pos:start="588:17" pos:end="588:57"><type pos:start="588:17" pos:end="588:31"><name pos:start="588:17" pos:end="588:31"><name pos:start="588:17" pos:end="588:20">List</name><argument_list type="generic" pos:start="588:21" pos:end="588:31">&lt;<argument pos:start="588:22" pos:end="588:30"><name pos:start="588:22" pos:end="588:30">LPolyline</name></argument>&gt;</argument_list></name></type> <name pos:start="588:33" pos:end="588:37">lines</name> <init pos:start="588:39" pos:end="588:57">= <expr pos:start="588:41" pos:end="588:57"><operator pos:start="588:41" pos:end="588:43">new</operator> <call pos:start="588:45" pos:end="588:57"><name pos:start="588:45" pos:end="588:55"><name pos:start="588:45" pos:end="588:53">ArrayList</name><argument_list type="generic" pos:start="588:54" pos:end="588:55">&lt;&gt;</argument_list></name><argument_list pos:start="588:56" pos:end="588:57">()</argument_list></call></expr></init></decl>;</decl_stmt>
		<decl_stmt pos:start="589:17" pos:end="589:56"><decl pos:start="589:17" pos:end="589:55"><type pos:start="589:17" pos:end="589:35"><name pos:start="589:17" pos:end="589:35"><name pos:start="589:17" pos:end="589:24">Iterator</name><argument_list type="generic" pos:start="589:25" pos:end="589:35">&lt;<argument pos:start="589:26" pos:end="589:34"><name pos:start="589:26" pos:end="589:34">Component</name></argument>&gt;</argument_list></name></type> <name pos:start="589:37" pos:end="589:38">it</name> <init pos:start="589:40" pos:end="589:55">= <expr pos:start="589:42" pos:end="589:55"><call pos:start="589:42" pos:end="589:55"><name pos:start="589:42" pos:end="589:53"><name pos:start="589:42" pos:end="589:44">map</name><operator pos:start="589:45" pos:end="589:45">.</operator><name pos:start="589:46" pos:end="589:53">iterator</name></name><argument_list pos:start="589:54" pos:end="589:55">()</argument_list></call></expr></init></decl>;</decl_stmt>
		<while pos:start="590:17" pos:end="603:17">while<condition pos:start="590:22" pos:end="590:35">(<expr pos:start="590:23" pos:end="590:34"><call pos:start="590:23" pos:end="590:34"><name pos:start="590:23" pos:end="590:32"><name pos:start="590:23" pos:end="590:24">it</name><operator pos:start="590:25" pos:end="590:25">.</operator><name pos:start="590:26" pos:end="590:32">hasNext</name></name><argument_list pos:start="590:33" pos:end="590:34">()</argument_list></call></expr>)</condition> <block pos:start="590:37" pos:end="603:17">{<block_content pos:start="591:25" pos:end="602:25">
			<decl_stmt pos:start="591:25" pos:end="591:48"><decl pos:start="591:25" pos:end="591:47"><type pos:start="591:25" pos:end="591:33"><name pos:start="591:25" pos:end="591:33">Component</name></type> <name pos:start="591:35" pos:end="591:35">c</name> <init pos:start="591:37" pos:end="591:47">= <expr pos:start="591:39" pos:end="591:47"><call pos:start="591:39" pos:end="591:47"><name pos:start="591:39" pos:end="591:45"><name pos:start="591:39" pos:end="591:40">it</name><operator pos:start="591:41" pos:end="591:41">.</operator><name pos:start="591:42" pos:end="591:45">next</name></name><argument_list pos:start="591:46" pos:end="591:47">()</argument_list></call></expr></init></decl>;</decl_stmt>
			<if_stmt pos:start="592:25" pos:end="594:25"><if pos:start="592:25" pos:end="594:25">if <condition pos:start="592:28" pos:end="592:59">(<expr pos:start="592:29" pos:end="592:58"><call pos:start="592:29" pos:end="592:40"><name pos:start="592:29" pos:end="592:38"><name pos:start="592:29" pos:end="592:29">c</name><operator pos:start="592:30" pos:end="592:30">.</operator><name pos:start="592:31" pos:end="592:38">getClass</name></name><argument_list pos:start="592:39" pos:end="592:40">()</argument_list></call> <operator pos:start="592:42" pos:end="592:43">==</operator> <name pos:start="592:45" pos:end="592:58"><name pos:start="592:45" pos:end="592:52">LPolygon</name><operator pos:start="592:53" pos:end="592:53">.</operator><name pos:start="592:54" pos:end="592:58">class</name></name></expr>)</condition> <block pos:start="592:61" pos:end="594:25">{<block_content pos:start="593:41" pos:end="593:66">
					<expr_stmt pos:start="593:41" pos:end="593:66"><expr pos:start="593:41" pos:end="593:65"><call pos:start="593:41" pos:end="593:65"><name pos:start="593:41" pos:end="593:52"><name pos:start="593:41" pos:end="593:48">polygons</name><operator pos:start="593:49" pos:end="593:49">.</operator><name pos:start="593:50" pos:end="593:52">add</name></name><argument_list pos:start="593:53" pos:end="593:65">(<argument pos:start="593:54" pos:end="593:64"><expr pos:start="593:54" pos:end="593:64"><operator pos:start="593:54" pos:end="593:54">(</operator><name pos:start="593:55" pos:end="593:62">LPolygon</name><operator pos:start="593:63" pos:end="593:63">)</operator><name pos:start="593:64" pos:end="593:64">c</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			</block_content>}</block></if></if_stmt>
			<if_stmt pos:start="595:25" pos:end="598:25"><if pos:start="595:25" pos:end="598:25">if <condition pos:start="595:28" pos:end="595:58">(<expr pos:start="595:29" pos:end="595:57"><call pos:start="595:29" pos:end="595:40"><name pos:start="595:29" pos:end="595:38"><name pos:start="595:29" pos:end="595:29">c</name><operator pos:start="595:30" pos:end="595:30">.</operator><name pos:start="595:31" pos:end="595:38">getClass</name></name><argument_list pos:start="595:39" pos:end="595:40">()</argument_list></call> <operator pos:start="595:42" pos:end="595:43">==</operator> <name pos:start="595:45" pos:end="595:57"><name pos:start="595:45" pos:end="595:51">LMarker</name><operator pos:start="595:52" pos:end="595:52">.</operator><name pos:start="595:53" pos:end="595:57">class</name></name></expr>)</condition> <block pos:start="595:60" pos:end="598:25">{<block_content pos:start="596:33" pos:end="597:61">
				<if_stmt pos:start="596:33" pos:end="597:61"><if pos:start="596:33" pos:end="597:61">if <condition pos:start="596:36" pos:end="596:57">(<expr pos:start="596:37" pos:end="596:56"><call pos:start="596:37" pos:end="596:49"><name pos:start="596:37" pos:end="596:47"><name pos:start="596:37" pos:end="596:37">c</name><operator pos:start="596:38" pos:end="596:38">.</operator><name pos:start="596:39" pos:end="596:47">getHeight</name></name><argument_list pos:start="596:48" pos:end="596:49">()</argument_list></call> <operator pos:start="596:51" pos:end="596:52">==</operator> <literal type="number" pos:start="596:54" pos:end="596:56">2.0</literal></expr>)</condition><block type="pseudo" pos:start="597:41" pos:end="597:61"><block_content pos:start="597:41" pos:end="597:61"> <comment type="line" pos:start="596:59" pos:end="596:82">// height of polygon pin</comment>
					<expr_stmt pos:start="597:41" pos:end="597:61"><expr pos:start="597:41" pos:end="597:60"><call pos:start="597:41" pos:end="597:60"><name pos:start="597:41" pos:end="597:48"><name pos:start="597:41" pos:end="597:44">pins</name><operator pos:start="597:45" pos:end="597:45">.</operator><name pos:start="597:46" pos:end="597:48">add</name></name><argument_list pos:start="597:49" pos:end="597:60">(<argument pos:start="597:50" pos:end="597:59"><expr pos:start="597:50" pos:end="597:59"><operator pos:start="597:50" pos:end="597:50">(</operator><name pos:start="597:51" pos:end="597:57">LMarker</name><operator pos:start="597:58" pos:end="597:58">)</operator><name pos:start="597:59" pos:end="597:59">c</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
			</block_content>}</block></if></if_stmt>
			<if_stmt pos:start="599:25" pos:end="602:25"><if pos:start="599:25" pos:end="602:25">if <condition pos:start="599:28" pos:end="599:60">(<expr pos:start="599:29" pos:end="599:59"><call pos:start="599:29" pos:end="599:40"><name pos:start="599:29" pos:end="599:38"><name pos:start="599:29" pos:end="599:29">c</name><operator pos:start="599:30" pos:end="599:30">.</operator><name pos:start="599:31" pos:end="599:38">getClass</name></name><argument_list pos:start="599:39" pos:end="599:40">()</argument_list></call> <operator pos:start="599:42" pos:end="599:43">==</operator> <name pos:start="599:45" pos:end="599:59"><name pos:start="599:45" pos:end="599:53">LPolyline</name><operator pos:start="599:54" pos:end="599:54">.</operator><name pos:start="599:55" pos:end="599:59">class</name></name></expr>)</condition> <block pos:start="599:62" pos:end="602:25">{<block_content pos:start="600:33" pos:end="601:64">
				<if_stmt pos:start="600:33" pos:end="601:64"><if pos:start="600:33" pos:end="601:64">if <condition pos:start="600:36" pos:end="600:57">(<expr pos:start="600:37" pos:end="600:56"><call pos:start="600:37" pos:end="600:49"><name pos:start="600:37" pos:end="600:47"><name pos:start="600:37" pos:end="600:37">c</name><operator pos:start="600:38" pos:end="600:38">.</operator><name pos:start="600:39" pos:end="600:47">getHeight</name></name><argument_list pos:start="600:48" pos:end="600:49">()</argument_list></call> <operator pos:start="600:51" pos:end="600:52">==</operator> <literal type="number" pos:start="600:54" pos:end="600:56">2.0</literal></expr>)</condition><block type="pseudo" pos:start="601:41" pos:end="601:64"><block_content pos:start="601:41" pos:end="601:64"> <comment type="line" pos:start="600:59" pos:end="600:83">// height of polygon line</comment>
					<expr_stmt pos:start="601:41" pos:end="601:64"><expr pos:start="601:41" pos:end="601:63"><call pos:start="601:41" pos:end="601:63"><name pos:start="601:41" pos:end="601:49"><name pos:start="601:41" pos:end="601:45">lines</name><operator pos:start="601:46" pos:end="601:46">.</operator><name pos:start="601:47" pos:end="601:49">add</name></name><argument_list pos:start="601:50" pos:end="601:63">(<argument pos:start="601:51" pos:end="601:62"><expr pos:start="601:51" pos:end="601:62"><operator pos:start="601:51" pos:end="601:51">(</operator><name pos:start="601:52" pos:end="601:60">LPolyline</name><operator pos:start="601:61" pos:end="601:61">)</operator><name pos:start="601:62" pos:end="601:62">c</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
			</block_content>}</block></if></if_stmt>
		</block_content>}</block></while>

		<comment type="line" pos:start="605:17" pos:end="605:47">// delete all polygons and pins</comment>
		<for pos:start="606:17" pos:end="608:17">for <control pos:start="606:21" pos:end="606:62">(<init pos:start="606:22" pos:end="606:49"><decl pos:start="606:22" pos:end="606:48"><type pos:start="606:22" pos:end="606:24"><name pos:start="606:22" pos:end="606:24">int</name></type> <name pos:start="606:26" pos:end="606:26">i</name> <init pos:start="606:28" pos:end="606:48">= <expr pos:start="606:30" pos:end="606:48"><call pos:start="606:30" pos:end="606:44"><name pos:start="606:30" pos:end="606:42"><name pos:start="606:30" pos:end="606:37">polygons</name><operator pos:start="606:38" pos:end="606:38">.</operator><name pos:start="606:39" pos:end="606:42">size</name></name><argument_list pos:start="606:43" pos:end="606:44">()</argument_list></call> <operator pos:start="606:46" pos:end="606:46">-</operator> <literal type="number" pos:start="606:48" pos:end="606:48">1</literal></expr></init></decl>;</init> <condition pos:start="606:51" pos:end="606:57"><expr pos:start="606:51" pos:end="606:56"><name pos:start="606:51" pos:end="606:51">i</name> <operator pos:start="606:53" pos:end="606:54">&gt;=</operator> <literal type="number" pos:start="606:56" pos:end="606:56">0</literal></expr>;</condition> <incr pos:start="606:59" pos:end="606:61"><expr pos:start="606:59" pos:end="606:61"><name pos:start="606:59" pos:end="606:59">i</name><operator pos:start="606:60" pos:end="606:61">--</operator></expr></incr>)</control> <block pos:start="606:64" pos:end="608:17">{<block_content pos:start="607:25" pos:end="607:61">
			<expr_stmt pos:start="607:25" pos:end="607:61"><expr pos:start="607:25" pos:end="607:60"><call pos:start="607:25" pos:end="607:60"><name pos:start="607:25" pos:end="607:43"><name pos:start="607:25" pos:end="607:27">map</name><operator pos:start="607:28" pos:end="607:28">.</operator><name pos:start="607:29" pos:end="607:43">removeComponent</name></name><argument_list pos:start="607:44" pos:end="607:60">(<argument pos:start="607:45" pos:end="607:59"><expr pos:start="607:45" pos:end="607:59"><call pos:start="607:45" pos:end="607:59"><name pos:start="607:45" pos:end="607:56"><name pos:start="607:45" pos:end="607:52">polygons</name><operator pos:start="607:53" pos:end="607:53">.</operator><name pos:start="607:54" pos:end="607:56">get</name></name><argument_list pos:start="607:57" pos:end="607:59">(<argument pos:start="607:58" pos:end="607:58"><expr pos:start="607:58" pos:end="607:58"><name pos:start="607:58" pos:end="607:58">i</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		</block_content>}</block></for>
		<for pos:start="609:17" pos:end="611:17">for <control pos:start="609:21" pos:end="609:57">(<init pos:start="609:22" pos:end="609:44"><decl pos:start="609:22" pos:end="609:43"><type pos:start="609:22" pos:end="609:24"><name pos:start="609:22" pos:end="609:24">int</name></type> <name pos:start="609:26" pos:end="609:26">i</name> <init pos:start="609:28" pos:end="609:43">= <expr pos:start="609:30" pos:end="609:43"><call pos:start="609:30" pos:end="609:40"><name pos:start="609:30" pos:end="609:38"><name pos:start="609:30" pos:end="609:33">pins</name><operator pos:start="609:34" pos:end="609:34">.</operator><name pos:start="609:35" pos:end="609:38">size</name></name><argument_list pos:start="609:39" pos:end="609:40">()</argument_list></call> <operator pos:start="609:42" pos:end="609:42">-</operator><literal type="number" pos:start="609:43" pos:end="609:43">1</literal></expr></init></decl>;</init> <condition pos:start="609:46" pos:end="609:52"><expr pos:start="609:46" pos:end="609:51"><name pos:start="609:46" pos:end="609:46">i</name> <operator pos:start="609:48" pos:end="609:49">&gt;=</operator> <literal type="number" pos:start="609:51" pos:end="609:51">0</literal></expr>;</condition> <incr pos:start="609:54" pos:end="609:56"><expr pos:start="609:54" pos:end="609:56"><name pos:start="609:54" pos:end="609:54">i</name><operator pos:start="609:55" pos:end="609:56">--</operator></expr></incr>)</control> <block pos:start="609:59" pos:end="611:17">{<block_content pos:start="610:25" pos:end="610:57">
			<expr_stmt pos:start="610:25" pos:end="610:57"><expr pos:start="610:25" pos:end="610:56"><call pos:start="610:25" pos:end="610:56"><name pos:start="610:25" pos:end="610:43"><name pos:start="610:25" pos:end="610:27">map</name><operator pos:start="610:28" pos:end="610:28">.</operator><name pos:start="610:29" pos:end="610:43">removeComponent</name></name><argument_list pos:start="610:44" pos:end="610:56">(<argument pos:start="610:45" pos:end="610:55"><expr pos:start="610:45" pos:end="610:55"><call pos:start="610:45" pos:end="610:55"><name pos:start="610:45" pos:end="610:52"><name pos:start="610:45" pos:end="610:48">pins</name><operator pos:start="610:49" pos:end="610:49">.</operator><name pos:start="610:50" pos:end="610:52">get</name></name><argument_list pos:start="610:53" pos:end="610:55">(<argument pos:start="610:54" pos:end="610:54"><expr pos:start="610:54" pos:end="610:54"><name pos:start="610:54" pos:end="610:54">i</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		</block_content>}</block></for>
		<for pos:start="612:17" pos:end="614:17">for <control pos:start="612:21" pos:end="612:58">(<init pos:start="612:22" pos:end="612:45"><decl pos:start="612:22" pos:end="612:44"><type pos:start="612:22" pos:end="612:24"><name pos:start="612:22" pos:end="612:24">int</name></type> <name pos:start="612:26" pos:end="612:26">i</name> <init pos:start="612:28" pos:end="612:44">= <expr pos:start="612:30" pos:end="612:44"><call pos:start="612:30" pos:end="612:41"><name pos:start="612:30" pos:end="612:39"><name pos:start="612:30" pos:end="612:34">lines</name><operator pos:start="612:35" pos:end="612:35">.</operator><name pos:start="612:36" pos:end="612:39">size</name></name><argument_list pos:start="612:40" pos:end="612:41">()</argument_list></call> <operator pos:start="612:43" pos:end="612:43">-</operator><literal type="number" pos:start="612:44" pos:end="612:44">1</literal></expr></init></decl>;</init> <condition pos:start="612:47" pos:end="612:53"><expr pos:start="612:47" pos:end="612:52"><name pos:start="612:47" pos:end="612:47">i</name> <operator pos:start="612:49" pos:end="612:50">&gt;=</operator> <literal type="number" pos:start="612:52" pos:end="612:52">0</literal></expr>;</condition> <incr pos:start="612:55" pos:end="612:57"><expr pos:start="612:55" pos:end="612:57"><name pos:start="612:55" pos:end="612:55">i</name><operator pos:start="612:56" pos:end="612:57">--</operator></expr></incr>)</control> <block pos:start="612:60" pos:end="614:17">{<block_content pos:start="613:25" pos:end="613:58">
			<expr_stmt pos:start="613:25" pos:end="613:58"><expr pos:start="613:25" pos:end="613:57"><call pos:start="613:25" pos:end="613:57"><name pos:start="613:25" pos:end="613:43"><name pos:start="613:25" pos:end="613:27">map</name><operator pos:start="613:28" pos:end="613:28">.</operator><name pos:start="613:29" pos:end="613:43">removeComponent</name></name><argument_list pos:start="613:44" pos:end="613:57">(<argument pos:start="613:45" pos:end="613:56"><expr pos:start="613:45" pos:end="613:56"><call pos:start="613:45" pos:end="613:56"><name pos:start="613:45" pos:end="613:53"><name pos:start="613:45" pos:end="613:49">lines</name><operator pos:start="613:50" pos:end="613:50">.</operator><name pos:start="613:51" pos:end="613:53">get</name></name><argument_list pos:start="613:54" pos:end="613:56">(<argument pos:start="613:55" pos:end="613:55"><expr pos:start="613:55" pos:end="613:55"><name pos:start="613:55" pos:end="613:55">i</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		</block_content>}</block></for>
		
		<expr_stmt pos:start="616:17" pos:end="616:33"><expr pos:start="616:17" pos:end="616:32"><call pos:start="616:17" pos:end="616:32"><name pos:start="616:17" pos:end="616:30"><name pos:start="616:17" pos:end="616:24">polygons</name><operator pos:start="616:25" pos:end="616:25">.</operator><name pos:start="616:26" pos:end="616:30">clear</name></name><argument_list pos:start="616:31" pos:end="616:32">()</argument_list></call></expr>;</expr_stmt>
		<expr_stmt pos:start="617:17" pos:end="617:29"><expr pos:start="617:17" pos:end="617:28"><call pos:start="617:17" pos:end="617:28"><name pos:start="617:17" pos:end="617:26"><name pos:start="617:17" pos:end="617:20">pins</name><operator pos:start="617:21" pos:end="617:21">.</operator><name pos:start="617:22" pos:end="617:26">clear</name></name><argument_list pos:start="617:27" pos:end="617:28">()</argument_list></call></expr>;</expr_stmt>
		<expr_stmt pos:start="618:17" pos:end="618:41"><expr pos:start="618:17" pos:end="618:40"><call pos:start="618:17" pos:end="618:40"><name pos:start="618:17" pos:end="618:38"><name pos:start="618:17" pos:end="618:32">allPriorityAreas</name><operator pos:start="618:33" pos:end="618:33">.</operator><name pos:start="618:34" pos:end="618:38">clear</name></name><argument_list pos:start="618:39" pos:end="618:40">()</argument_list></call></expr>;</expr_stmt>
		<expr_stmt pos:start="619:17" pos:end="619:40"><expr pos:start="619:17" pos:end="619:39"><call pos:start="619:17" pos:end="619:39"><name pos:start="619:17" pos:end="619:37"><name pos:start="619:17" pos:end="619:31">polygonVertices</name><operator pos:start="619:32" pos:end="619:32">.</operator><name pos:start="619:33" pos:end="619:37">clear</name></name><argument_list pos:start="619:38" pos:end="619:39">()</argument_list></call></expr>;</expr_stmt>
	</block_content>}</block></function>
	
	<comment type="line" pos:start="622:9" pos:end="622:62">// updates allPolygonPins based on the pins on the map</comment>
	<function pos:start="623:9" pos:end="637:9"><type pos:start="623:9" pos:end="623:19"><specifier pos:start="623:9" pos:end="623:14">public</specifier> <name pos:start="623:16" pos:end="623:19">void</name></type> <name pos:start="623:21" pos:end="623:37">setAllPolygonPins</name><parameter_list pos:start="623:38" pos:end="623:39">()</parameter_list> <block pos:start="623:41" pos:end="637:9">{<block_content pos:start="624:17" pos:end="636:17">
		<expr_stmt pos:start="624:17" pos:end="624:39"><expr pos:start="624:17" pos:end="624:38"><call pos:start="624:17" pos:end="624:38"><name pos:start="624:17" pos:end="624:36"><name pos:start="624:17" pos:end="624:30">allPolygonPins</name><operator pos:start="624:31" pos:end="624:31">.</operator><name pos:start="624:32" pos:end="624:36">clear</name></name><argument_list pos:start="624:37" pos:end="624:38">()</argument_list></call></expr>;</expr_stmt>
		<decl_stmt pos:start="625:17" pos:end="625:56"><decl pos:start="625:17" pos:end="625:55"><type pos:start="625:17" pos:end="625:35"><name pos:start="625:17" pos:end="625:35"><name pos:start="625:17" pos:end="625:24">Iterator</name><argument_list type="generic" pos:start="625:25" pos:end="625:35">&lt;<argument pos:start="625:26" pos:end="625:34"><name pos:start="625:26" pos:end="625:34">Component</name></argument>&gt;</argument_list></name></type> <name pos:start="625:37" pos:end="625:38">it</name> <init pos:start="625:40" pos:end="625:55">= <expr pos:start="625:42" pos:end="625:55"><call pos:start="625:42" pos:end="625:55"><name pos:start="625:42" pos:end="625:53"><name pos:start="625:42" pos:end="625:44">map</name><operator pos:start="625:45" pos:end="625:45">.</operator><name pos:start="625:46" pos:end="625:53">iterator</name></name><argument_list pos:start="625:54" pos:end="625:55">()</argument_list></call></expr></init></decl>;</decl_stmt>
		<while pos:start="626:17" pos:end="632:17">while<condition pos:start="626:22" pos:end="626:35">(<expr pos:start="626:23" pos:end="626:34"><call pos:start="626:23" pos:end="626:34"><name pos:start="626:23" pos:end="626:32"><name pos:start="626:23" pos:end="626:24">it</name><operator pos:start="626:25" pos:end="626:25">.</operator><name pos:start="626:26" pos:end="626:32">hasNext</name></name><argument_list pos:start="626:33" pos:end="626:34">()</argument_list></call></expr>)</condition> <block pos:start="626:37" pos:end="632:17">{<block_content pos:start="627:25" pos:end="631:25">
			<decl_stmt pos:start="627:25" pos:end="627:48"><decl pos:start="627:25" pos:end="627:47"><type pos:start="627:25" pos:end="627:33"><name pos:start="627:25" pos:end="627:33">Component</name></type> <name pos:start="627:35" pos:end="627:35">c</name> <init pos:start="627:37" pos:end="627:47">= <expr pos:start="627:39" pos:end="627:47"><call pos:start="627:39" pos:end="627:47"><name pos:start="627:39" pos:end="627:45"><name pos:start="627:39" pos:end="627:40">it</name><operator pos:start="627:41" pos:end="627:41">.</operator><name pos:start="627:42" pos:end="627:45">next</name></name><argument_list pos:start="627:46" pos:end="627:47">()</argument_list></call></expr></init></decl>;</decl_stmt>
			<if_stmt pos:start="628:25" pos:end="631:25"><if pos:start="628:25" pos:end="631:25">if <condition pos:start="628:28" pos:end="628:58">(<expr pos:start="628:29" pos:end="628:57"><call pos:start="628:29" pos:end="628:40"><name pos:start="628:29" pos:end="628:38"><name pos:start="628:29" pos:end="628:29">c</name><operator pos:start="628:30" pos:end="628:30">.</operator><name pos:start="628:31" pos:end="628:38">getClass</name></name><argument_list pos:start="628:39" pos:end="628:40">()</argument_list></call> <operator pos:start="628:42" pos:end="628:43">==</operator> <name pos:start="628:45" pos:end="628:57"><name pos:start="628:45" pos:end="628:51">LMarker</name><operator pos:start="628:52" pos:end="628:52">.</operator><name pos:start="628:53" pos:end="628:57">class</name></name></expr>)</condition> <block pos:start="628:60" pos:end="631:25">{<block_content pos:start="629:33" pos:end="630:71">
				<if_stmt pos:start="629:33" pos:end="630:71"><if pos:start="629:33" pos:end="630:71">if <condition pos:start="629:36" pos:end="629:57">(<expr pos:start="629:37" pos:end="629:56"><call pos:start="629:37" pos:end="629:49"><name pos:start="629:37" pos:end="629:47"><name pos:start="629:37" pos:end="629:37">c</name><operator pos:start="629:38" pos:end="629:38">.</operator><name pos:start="629:39" pos:end="629:47">getHeight</name></name><argument_list pos:start="629:48" pos:end="629:49">()</argument_list></call> <operator pos:start="629:51" pos:end="629:52">==</operator> <literal type="number" pos:start="629:54" pos:end="629:56">2.0</literal></expr>)</condition><block type="pseudo" pos:start="630:41" pos:end="630:71"><block_content pos:start="630:41" pos:end="630:71"> <comment type="line" pos:start="629:59" pos:end="629:82">// height of polygon pin</comment>
					<expr_stmt pos:start="630:41" pos:end="630:71"><expr pos:start="630:41" pos:end="630:70"><call pos:start="630:41" pos:end="630:70"><name pos:start="630:41" pos:end="630:58"><name pos:start="630:41" pos:end="630:54">allPolygonPins</name><operator pos:start="630:55" pos:end="630:55">.</operator><name pos:start="630:56" pos:end="630:58">add</name></name><argument_list pos:start="630:59" pos:end="630:70">(<argument pos:start="630:60" pos:end="630:69"><expr pos:start="630:60" pos:end="630:69"><operator pos:start="630:60" pos:end="630:60">(</operator><name pos:start="630:61" pos:end="630:67">LMarker</name><operator pos:start="630:68" pos:end="630:68">)</operator><name pos:start="630:69" pos:end="630:69">c</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
			</block_content>}</block></if></if_stmt>
		</block_content>}</block></while>
		<expr_stmt pos:start="633:17" pos:end="633:43"><expr pos:start="633:17" pos:end="633:42"><call pos:start="633:17" pos:end="633:42"><name pos:start="633:17" pos:end="633:40"><name pos:start="633:17" pos:end="633:34">allPolygonPinsCopy</name><operator pos:start="633:35" pos:end="633:35">.</operator><name pos:start="633:36" pos:end="633:40">clear</name></name><argument_list pos:start="633:41" pos:end="633:42">()</argument_list></call></expr>;</expr_stmt>
		<for pos:start="634:17" pos:end="636:17">for <control pos:start="634:21" pos:end="634:53">(<init pos:start="634:22" pos:end="634:52"><decl pos:start="634:22" pos:end="634:52"><type pos:start="634:22" pos:end="634:28"><name pos:start="634:22" pos:end="634:28">LMarker</name></type> <name pos:start="634:30" pos:end="634:35">marker</name> <range pos:start="634:37" pos:end="634:52">: <expr pos:start="634:39" pos:end="634:52"><name pos:start="634:39" pos:end="634:52">allPolygonPins</name></expr></range></decl></init>)</control> <block pos:start="634:55" pos:end="636:17">{<block_content pos:start="635:25" pos:end="635:66">
			<expr_stmt pos:start="635:25" pos:end="635:66"><expr pos:start="635:25" pos:end="635:65"><call pos:start="635:25" pos:end="635:65"><name pos:start="635:25" pos:end="635:46"><name pos:start="635:25" pos:end="635:42">allPolygonPinsCopy</name><operator pos:start="635:43" pos:end="635:43">.</operator><name pos:start="635:44" pos:end="635:46">add</name></name><argument_list pos:start="635:47" pos:end="635:65">(<argument pos:start="635:48" pos:end="635:64"><expr pos:start="635:48" pos:end="635:64"><call pos:start="635:48" pos:end="635:64"><name pos:start="635:48" pos:end="635:62"><name pos:start="635:48" pos:end="635:53">marker</name><operator pos:start="635:54" pos:end="635:54">.</operator><name pos:start="635:55" pos:end="635:62">getPoint</name></name><argument_list pos:start="635:63" pos:end="635:64">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		</block_content>}</block></for>
	</block_content>}</block></function>
	
	<comment type="line" pos:start="639:9" pos:end="639:63">// draw the priorities using the mapping from dronology</comment>
	<function pos:start="640:9" pos:end="701:9"><type pos:start="640:9" pos:end="640:19"><specifier pos:start="640:9" pos:end="640:14">public</specifier> <name pos:start="640:16" pos:end="640:19">void</name></type> <name pos:start="640:21" pos:end="640:34">drawPriorities</name><parameter_list pos:start="640:35" pos:end="640:36">()</parameter_list> <block pos:start="640:38" pos:end="701:9">{<block_content pos:start="643:17" pos:end="700:17">
		
		<comment type="line" pos:start="642:17" pos:end="642:109">// if drawing a polygon, don't refresh all the others because this will interrupt the process</comment>
		<if_stmt pos:start="643:17" pos:end="644:31"><if pos:start="643:17" pos:end="644:31">if <condition pos:start="643:20" pos:end="643:154">(<expr pos:start="643:21" pos:end="643:153"><call pos:start="643:21" pos:end="643:42"><name pos:start="643:21" pos:end="643:40"><name pos:start="643:21" pos:end="643:24">this</name><operator pos:start="643:25" pos:end="643:25">.</operator><name pos:start="643:26" pos:end="643:40">getMapComponent</name></name><argument_list pos:start="643:41" pos:end="643:42">()</argument_list></call><operator pos:start="643:43" pos:end="643:43">.</operator><call pos:start="643:44" pos:end="643:60"><name pos:start="643:44" pos:end="643:58">getMapUtilities</name><argument_list pos:start="643:59" pos:end="643:60">()</argument_list></call><operator pos:start="643:61" pos:end="643:61">.</operator><call pos:start="643:62" pos:end="643:87"><name pos:start="643:62" pos:end="643:85">getPrioritiesAreEditable</name><argument_list pos:start="643:86" pos:end="643:87">()</argument_list></call> <operator pos:start="643:89" pos:end="643:90">||</operator> <call pos:start="643:92" pos:end="643:113"><name pos:start="643:92" pos:end="643:111"><name pos:start="643:92" pos:end="643:95">this</name><operator pos:start="643:96" pos:end="643:96">.</operator><name pos:start="643:97" pos:end="643:111">getMapComponent</name></name><argument_list pos:start="643:112" pos:end="643:113">()</argument_list></call><operator pos:start="643:114" pos:end="643:114">.</operator><call pos:start="643:115" pos:end="643:131"><name pos:start="643:115" pos:end="643:129">getMapUtilities</name><argument_list pos:start="643:130" pos:end="643:131">()</argument_list></call><operator pos:start="643:132" pos:end="643:132">.</operator><call pos:start="643:133" pos:end="643:153"><name pos:start="643:133" pos:end="643:151">getSidesAreEditable</name><argument_list pos:start="643:152" pos:end="643:153">()</argument_list></call></expr>)</condition><block type="pseudo" pos:start="644:25" pos:end="644:31"><block_content pos:start="644:25" pos:end="644:31">
			<return pos:start="644:25" pos:end="644:31">return;</return></block_content></block></if></if_stmt>

		<expr_stmt pos:start="646:17" pos:end="646:41"><expr pos:start="646:17" pos:end="646:40"><call pos:start="646:17" pos:end="646:40"><name pos:start="646:17" pos:end="646:38">removeAllPriorityAreas</name><argument_list pos:start="646:39" pos:end="646:40">()</argument_list></call></expr>;</expr_stmt>
		
		<comment type="line" pos:start="648:17" pos:end="648:50">// get area mapping from dronology</comment>
		<decl_stmt pos:start="649:17" pos:end="649:45"><decl pos:start="649:17" pos:end="649:44"><type pos:start="649:17" pos:end="649:28"><name pos:start="649:17" pos:end="649:28">IAreaMapping</name></type> <name pos:start="649:30" pos:end="649:37">amapping</name> <init pos:start="649:39" pos:end="649:44">= <expr pos:start="649:41" pos:end="649:44"><literal type="null" pos:start="649:41" pos:end="649:44">null</literal></expr></init></decl>;</decl_stmt>
		<decl_stmt pos:start="650:17" pos:end="650:66"><decl pos:start="650:17" pos:end="650:65"><type pos:start="650:17" pos:end="650:35"><name pos:start="650:17" pos:end="650:35">BaseServiceProvider</name></type> <name pos:start="650:37" pos:end="650:44">provider</name> <init pos:start="650:46" pos:end="650:65">= <expr pos:start="650:48" pos:end="650:65"><call pos:start="650:48" pos:end="650:65"><name pos:start="650:48" pos:end="650:63"><name pos:start="650:48" pos:end="650:51">MyUI</name><operator pos:start="650:52" pos:end="650:52">.</operator><name pos:start="650:53" pos:end="650:63">getProvider</name></name><argument_list pos:start="650:64" pos:end="650:65">()</argument_list></call></expr></init></decl>;</decl_stmt>
		<decl_stmt pos:start="651:17" pos:end="651:111"><decl pos:start="651:17" pos:end="651:110"><type pos:start="651:17" pos:end="651:46"><name pos:start="651:17" pos:end="651:46">AreaMappingPersistenceProvider</name></type> <name pos:start="651:48" pos:end="651:63">mappingPersistor</name> <init pos:start="651:65" pos:end="651:110">= <expr pos:start="651:67" pos:end="651:110"><call pos:start="651:67" pos:end="651:110"><name pos:start="651:67" pos:end="651:108"><name pos:start="651:67" pos:end="651:96">AreaMappingPersistenceProvider</name><operator pos:start="651:97" pos:end="651:97">.</operator><name pos:start="651:98" pos:end="651:108">getInstance</name></name><argument_list pos:start="651:109" pos:end="651:110">()</argument_list></call></expr></init></decl>;</decl_stmt>
		<try pos:start="652:17" pos:end="664:17">try <block pos:start="652:21" pos:end="659:17">{<block_content pos:start="653:25" pos:end="658:71">
			<decl_stmt pos:start="653:25" pos:end="653:160"><decl pos:start="653:25" pos:end="653:159"><type pos:start="653:25" pos:end="653:49"><name pos:start="653:25" pos:end="653:49">IAreaMappingRemoteService</name></type> <name pos:start="653:51" pos:end="653:57">service</name> <init pos:start="653:59" pos:end="653:159">= <expr pos:start="653:61" pos:end="653:159"><operator pos:start="653:61" pos:end="653:61">(</operator><name pos:start="653:62" pos:end="653:86">IAreaMappingRemoteService</name><operator pos:start="653:87" pos:end="653:87">)</operator> <call pos:start="653:89" pos:end="653:115"><name pos:start="653:89" pos:end="653:113"><name pos:start="653:89" pos:end="653:96">provider</name><operator pos:start="653:97" pos:end="653:97">.</operator><name pos:start="653:98" pos:end="653:113">getRemoteManager</name></name><argument_list pos:start="653:114" pos:end="653:115">()</argument_list></call><operator pos:start="653:116" pos:end="653:116">.</operator><call pos:start="653:117" pos:end="653:159"><name pos:start="653:117" pos:end="653:126">getService</name><argument_list pos:start="653:127" pos:end="653:159">(<argument pos:start="653:128" pos:end="653:158"><expr pos:start="653:128" pos:end="653:158"><name pos:start="653:128" pos:end="653:158"><name pos:start="653:128" pos:end="653:152">IAreaMappingRemoteService</name><operator pos:start="653:153" pos:end="653:153">.</operator><name pos:start="653:154" pos:end="653:158">class</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<decl_stmt pos:start="654:25" pos:end="654:54"><decl pos:start="654:25" pos:end="654:53"><type pos:start="654:25" pos:end="654:44"><name pos:start="654:25" pos:end="654:44">ByteArrayInputStream</name></type> <name pos:start="654:46" pos:end="654:53">inStream</name></decl>;</decl_stmt>
			<decl_stmt pos:start="655:25" pos:end="655:128"><decl pos:start="655:25" pos:end="655:127"><type pos:start="655:25" pos:end="655:30"><name pos:start="655:25" pos:end="655:30">String</name></type> <name pos:start="655:32" pos:end="655:33">id</name> <init pos:start="655:35" pos:end="655:127">= <expr pos:start="655:37" pos:end="655:127"><call pos:start="655:37" pos:end="655:64"><name pos:start="655:37" pos:end="655:62"><name pos:start="655:37" pos:end="655:48">mapComponent</name><operator pos:start="655:49" pos:end="655:49">.</operator><name pos:start="655:50" pos:end="655:62">getMainLayout</name></name><argument_list pos:start="655:63" pos:end="655:64">()</argument_list></call><operator pos:start="655:65" pos:end="655:65">.</operator><call pos:start="655:66" pos:end="655:78"><name pos:start="655:66" pos:end="655:76">getControls</name><argument_list pos:start="655:77" pos:end="655:78">()</argument_list></call><operator pos:start="655:79" pos:end="655:79">.</operator><call pos:start="655:80" pos:end="655:93"><name pos:start="655:80" pos:end="655:91">getInfoPanel</name><argument_list pos:start="655:92" pos:end="655:93">()</argument_list></call><operator pos:start="655:94" pos:end="655:94">.</operator><call pos:start="655:95" pos:end="655:119"><name pos:start="655:95" pos:end="655:117">getHighlightedAMInfoBox</name><argument_list pos:start="655:118" pos:end="655:119">()</argument_list></call><operator pos:start="655:120" pos:end="655:120">.</operator><call pos:start="655:121" pos:end="655:127"><name pos:start="655:121" pos:end="655:125">getId</name><argument_list pos:start="655:126" pos:end="655:127">()</argument_list></call></expr></init></decl>;</decl_stmt>
			<decl_stmt pos:start="656:25" pos:end="656:75"><decl pos:start="656:25" pos:end="656:74"><type pos:start="656:25" pos:end="656:30"><name pos:start="656:25" pos:end="656:30"><name pos:start="656:25" pos:end="656:28">byte</name><index pos:start="656:29" pos:end="656:30">[]</index></name></type> <name pos:start="656:32" pos:end="656:42">information</name> <init pos:start="656:44" pos:end="656:74">= <expr pos:start="656:46" pos:end="656:74"><call pos:start="656:46" pos:end="656:74"><name pos:start="656:46" pos:end="656:70"><name pos:start="656:46" pos:end="656:52">service</name><operator pos:start="656:53" pos:end="656:53">.</operator><name pos:start="656:54" pos:end="656:70">requestFromServer</name></name><argument_list pos:start="656:71" pos:end="656:74">(<argument pos:start="656:72" pos:end="656:73"><expr pos:start="656:72" pos:end="656:73"><name pos:start="656:72" pos:end="656:73">id</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<expr_stmt pos:start="657:25" pos:end="657:73"><expr pos:start="657:25" pos:end="657:72"><name pos:start="657:25" pos:end="657:32">inStream</name> <operator pos:start="657:34" pos:end="657:34">=</operator> <operator pos:start="657:36" pos:end="657:38">new</operator> <call pos:start="657:40" pos:end="657:72"><name pos:start="657:40" pos:end="657:59">ByteArrayInputStream</name><argument_list pos:start="657:60" pos:end="657:72">(<argument pos:start="657:61" pos:end="657:71"><expr pos:start="657:61" pos:end="657:71"><name pos:start="657:61" pos:end="657:71">information</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt pos:start="658:25" pos:end="658:71"><expr pos:start="658:25" pos:end="658:70"><name pos:start="658:25" pos:end="658:32">amapping</name> <operator pos:start="658:34" pos:end="658:34">=</operator> <call pos:start="658:36" pos:end="658:70"><name pos:start="658:36" pos:end="658:60"><name pos:start="658:36" pos:end="658:51">mappingPersistor</name><operator pos:start="658:52" pos:end="658:52">.</operator><name pos:start="658:53" pos:end="658:60">loadItem</name></name><argument_list pos:start="658:61" pos:end="658:70">(<argument pos:start="658:62" pos:end="658:69"><expr pos:start="658:62" pos:end="658:69"><name pos:start="658:62" pos:end="658:69">inStream</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		</block_content>}</block> <catch pos:start="659:19" pos:end="662:17">catch <parameter_list pos:start="659:25" pos:end="659:72">(<parameter pos:start="659:26" pos:end="659:71"><decl pos:start="659:26" pos:end="659:71"><type pos:start="659:26" pos:end="659:50"><name pos:start="659:26" pos:end="659:50">DronologyServiceException</name></type> | <type pos:start="659:54" pos:end="659:71"><name pos:start="659:54" pos:end="659:68">RemoteException</name></type> <name pos:start="659:70" pos:end="659:71">e1</name></decl></parameter>)</parameter_list> <block pos:start="659:74" pos:end="662:17">{<block_content pos:start="660:17" pos:end="661:41">
		<expr_stmt pos:start="660:17" pos:end="660:37"><expr pos:start="660:17" pos:end="660:36"><call pos:start="660:17" pos:end="660:36"><name pos:start="660:17" pos:end="660:34"><name pos:start="660:17" pos:end="660:18">e1</name><operator pos:start="660:19" pos:end="660:19">.</operator><name pos:start="660:20" pos:end="660:34">printStackTrace</name></name><argument_list pos:start="660:35" pos:end="660:36">()</argument_list></call></expr>;</expr_stmt>
		<expr_stmt pos:start="661:17" pos:end="661:41"><expr pos:start="661:17" pos:end="661:40"><call pos:start="661:17" pos:end="661:40"><name pos:start="661:17" pos:end="661:33"><name pos:start="661:17" pos:end="661:20">MyUI</name><operator pos:start="661:21" pos:end="661:21">.</operator><name pos:start="661:22" pos:end="661:33">setConnected</name></name><argument_list pos:start="661:34" pos:end="661:40">(<argument pos:start="661:35" pos:end="661:39"><expr pos:start="661:35" pos:end="661:39"><literal type="boolean" pos:start="661:35" pos:end="661:39">false</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		</block_content>}</block></catch> <catch pos:start="662:19" pos:end="664:17">catch <parameter_list pos:start="662:25" pos:end="662:49">(<parameter pos:start="662:26" pos:end="662:48"><decl pos:start="662:26" pos:end="662:48"><type pos:start="662:26" pos:end="662:48"><name pos:start="662:26" pos:end="662:45">PersistenceException</name></type> <name pos:start="662:47" pos:end="662:48">e1</name></decl></parameter>)</parameter_list> <block pos:start="662:51" pos:end="664:17">{<block_content pos:start="663:17" pos:end="663:37">
		<expr_stmt pos:start="663:17" pos:end="663:37"><expr pos:start="663:17" pos:end="663:36"><call pos:start="663:17" pos:end="663:36"><name pos:start="663:17" pos:end="663:34"><name pos:start="663:17" pos:end="663:18">e1</name><operator pos:start="663:19" pos:end="663:19">.</operator><name pos:start="663:20" pos:end="663:34">printStackTrace</name></name><argument_list pos:start="663:35" pos:end="663:36">()</argument_list></call></expr>;</expr_stmt>
		</block_content>}</block></catch></try>
		<comment type="line" pos:start="665:17" pos:end="665:70">// get and add priority areas/sides from area mapping </comment>
		<for pos:start="666:17" pos:end="695:17">for <control pos:start="666:21" pos:end="666:79">(<init pos:start="666:22" pos:end="666:31"><decl pos:start="666:22" pos:end="666:30"><type pos:start="666:22" pos:end="666:24"><name pos:start="666:22" pos:end="666:24">int</name></type> <name pos:start="666:26" pos:end="666:26">i</name> <init pos:start="666:28" pos:end="666:30">= <expr pos:start="666:30" pos:end="666:30"><literal type="number" pos:start="666:30" pos:end="666:30">0</literal></expr></init></decl>;</init> <condition pos:start="666:33" pos:end="666:74"><expr pos:start="666:33" pos:end="666:73"><name pos:start="666:33" pos:end="666:33">i</name> <operator pos:start="666:35" pos:end="666:35">&lt;</operator> <call pos:start="666:37" pos:end="666:66"><name pos:start="666:37" pos:end="666:64"><name pos:start="666:37" pos:end="666:44">amapping</name><operator pos:start="666:45" pos:end="666:45">.</operator><name pos:start="666:46" pos:end="666:64">getLocationMappings</name></name><argument_list pos:start="666:65" pos:end="666:66">()</argument_list></call><operator pos:start="666:67" pos:end="666:67">.</operator><call pos:start="666:68" pos:end="666:73"><name pos:start="666:68" pos:end="666:71">size</name><argument_list pos:start="666:72" pos:end="666:73">()</argument_list></call></expr>;</condition> <incr pos:start="666:76" pos:end="666:78"><expr pos:start="666:76" pos:end="666:78"><name pos:start="666:76" pos:end="666:76">i</name><operator pos:start="666:77" pos:end="666:78">++</operator></expr></incr>)</control> <block pos:start="666:81" pos:end="695:17">{<block_content pos:start="667:25" pos:end="694:25">
			<if_stmt pos:start="667:25" pos:end="694:25"><if pos:start="667:25" pos:end="673:25">if <condition pos:start="667:28" pos:end="667:99">(<expr pos:start="667:29" pos:end="667:98"><call pos:start="667:29" pos:end="667:58"><name pos:start="667:29" pos:end="667:56"><name pos:start="667:29" pos:end="667:36">amapping</name><operator pos:start="667:37" pos:end="667:37">.</operator><name pos:start="667:38" pos:end="667:56">getLocationMappings</name></name><argument_list pos:start="667:57" pos:end="667:58">()</argument_list></call><operator pos:start="667:59" pos:end="667:59">.</operator><call pos:start="667:60" pos:end="667:65"><name pos:start="667:60" pos:end="667:62">get</name><argument_list pos:start="667:63" pos:end="667:65">(<argument pos:start="667:64" pos:end="667:64"><expr pos:start="667:64" pos:end="667:64"><name pos:start="667:64" pos:end="667:64">i</name></expr></argument>)</argument_list></call><operator pos:start="667:66" pos:end="667:66">.</operator><call pos:start="667:67" pos:end="667:76"><name pos:start="667:67" pos:end="667:74">getClass</name><argument_list pos:start="667:75" pos:end="667:76">()</argument_list></call> <operator pos:start="667:78" pos:end="667:79">==</operator> <name pos:start="667:81" pos:end="667:98"><name pos:start="667:81" pos:end="667:92">PriorityArea</name><operator pos:start="667:93" pos:end="667:93">.</operator><name pos:start="667:94" pos:end="667:98">class</name></name></expr>)</condition> <block pos:start="667:101" pos:end="673:25">{<block_content pos:start="668:33" pos:end="672:208">
				<for pos:start="668:33" pos:end="670:33">for <control pos:start="668:37" pos:end="668:119">(<init pos:start="668:38" pos:end="668:47"><decl pos:start="668:38" pos:end="668:46"><type pos:start="668:38" pos:end="668:40"><name pos:start="668:38" pos:end="668:40">int</name></type> <name pos:start="668:42" pos:end="668:42">j</name> <init pos:start="668:44" pos:end="668:46">= <expr pos:start="668:46" pos:end="668:46"><literal type="number" pos:start="668:46" pos:end="668:46">0</literal></expr></init></decl>;</init> <condition pos:start="668:49" pos:end="668:114"><expr pos:start="668:49" pos:end="668:113"><name pos:start="668:49" pos:end="668:49">j</name> <operator pos:start="668:51" pos:end="668:51">&lt;</operator> <call pos:start="668:53" pos:end="668:82"><name pos:start="668:53" pos:end="668:80"><name pos:start="668:53" pos:end="668:60">amapping</name><operator pos:start="668:61" pos:end="668:61">.</operator><name pos:start="668:62" pos:end="668:80">getLocationMappings</name></name><argument_list pos:start="668:81" pos:end="668:82">()</argument_list></call><operator pos:start="668:83" pos:end="668:83">.</operator><call pos:start="668:84" pos:end="668:89"><name pos:start="668:84" pos:end="668:86">get</name><argument_list pos:start="668:87" pos:end="668:89">(<argument pos:start="668:88" pos:end="668:88"><expr pos:start="668:88" pos:end="668:88"><name pos:start="668:88" pos:end="668:88">i</name></expr></argument>)</argument_list></call><operator pos:start="668:90" pos:end="668:90">.</operator><call pos:start="668:91" pos:end="668:106"><name pos:start="668:91" pos:end="668:104">getCoordinates</name><argument_list pos:start="668:105" pos:end="668:106">()</argument_list></call><operator pos:start="668:107" pos:end="668:107">.</operator><call pos:start="668:108" pos:end="668:113"><name pos:start="668:108" pos:end="668:111">size</name><argument_list pos:start="668:112" pos:end="668:113">()</argument_list></call></expr>;</condition> <incr pos:start="668:116" pos:end="668:118"><expr pos:start="668:116" pos:end="668:118"><name pos:start="668:116" pos:end="668:116">j</name><operator pos:start="668:117" pos:end="668:118">++</operator></expr></incr>)</control> <block pos:start="668:121" pos:end="670:33">{<block_content pos:start="669:41" pos:end="669:223">
					<expr_stmt pos:start="669:41" pos:end="669:223"><expr pos:start="669:41" pos:end="669:222"><call pos:start="669:41" pos:end="669:222"><name pos:start="669:41" pos:end="669:56">addPolygonVertex</name><argument_list pos:start="669:57" pos:end="669:222">(<argument pos:start="669:58" pos:end="669:221"><expr pos:start="669:58" pos:end="669:221"><operator pos:start="669:58" pos:end="669:60">new</operator> <call pos:start="669:62" pos:end="669:221"><name pos:start="669:62" pos:end="669:66">Point</name><argument_list pos:start="669:67" pos:end="669:221">(<argument pos:start="669:68" pos:end="669:142"><expr pos:start="669:68" pos:end="669:142"><call pos:start="669:68" pos:end="669:97"><name pos:start="669:68" pos:end="669:95"><name pos:start="669:68" pos:end="669:75">amapping</name><operator pos:start="669:76" pos:end="669:76">.</operator><name pos:start="669:77" pos:end="669:95">getLocationMappings</name></name><argument_list pos:start="669:96" pos:end="669:97">()</argument_list></call><operator pos:start="669:98" pos:end="669:98">.</operator><call pos:start="669:99" pos:end="669:104"><name pos:start="669:99" pos:end="669:101">get</name><argument_list pos:start="669:102" pos:end="669:104">(<argument pos:start="669:103" pos:end="669:103"><expr pos:start="669:103" pos:end="669:103"><name pos:start="669:103" pos:end="669:103">i</name></expr></argument>)</argument_list></call><operator pos:start="669:105" pos:end="669:105">.</operator><call pos:start="669:106" pos:end="669:121"><name pos:start="669:106" pos:end="669:119">getCoordinates</name><argument_list pos:start="669:120" pos:end="669:121">()</argument_list></call><operator pos:start="669:122" pos:end="669:122">.</operator><call pos:start="669:123" pos:end="669:128"><name pos:start="669:123" pos:end="669:125">get</name><argument_list pos:start="669:126" pos:end="669:128">(<argument pos:start="669:127" pos:end="669:127"><expr pos:start="669:127" pos:end="669:127"><name pos:start="669:127" pos:end="669:127">j</name></expr></argument>)</argument_list></call><operator pos:start="669:129" pos:end="669:129">.</operator><call pos:start="669:130" pos:end="669:142"><name pos:start="669:130" pos:end="669:140">getLatitude</name><argument_list pos:start="669:141" pos:end="669:142">()</argument_list></call></expr></argument>, <argument pos:start="669:145" pos:end="669:220"><expr pos:start="669:145" pos:end="669:220"><call pos:start="669:145" pos:end="669:174"><name pos:start="669:145" pos:end="669:172"><name pos:start="669:145" pos:end="669:152">amapping</name><operator pos:start="669:153" pos:end="669:153">.</operator><name pos:start="669:154" pos:end="669:172">getLocationMappings</name></name><argument_list pos:start="669:173" pos:end="669:174">()</argument_list></call><operator pos:start="669:175" pos:end="669:175">.</operator><call pos:start="669:176" pos:end="669:181"><name pos:start="669:176" pos:end="669:178">get</name><argument_list pos:start="669:179" pos:end="669:181">(<argument pos:start="669:180" pos:end="669:180"><expr pos:start="669:180" pos:end="669:180"><name pos:start="669:180" pos:end="669:180">i</name></expr></argument>)</argument_list></call><operator pos:start="669:182" pos:end="669:182">.</operator><call pos:start="669:183" pos:end="669:198"><name pos:start="669:183" pos:end="669:196">getCoordinates</name><argument_list pos:start="669:197" pos:end="669:198">()</argument_list></call><operator pos:start="669:199" pos:end="669:199">.</operator><call pos:start="669:200" pos:end="669:205"><name pos:start="669:200" pos:end="669:202">get</name><argument_list pos:start="669:203" pos:end="669:205">(<argument pos:start="669:204" pos:end="669:204"><expr pos:start="669:204" pos:end="669:204"><name pos:start="669:204" pos:end="669:204">j</name></expr></argument>)</argument_list></call><operator pos:start="669:206" pos:end="669:206">.</operator><call pos:start="669:207" pos:end="669:220"><name pos:start="669:207" pos:end="669:218">getLongitude</name><argument_list pos:start="669:219" pos:end="669:220">()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				</block_content>}</block></for>
				<expr_stmt pos:start="671:33" pos:end="671:46"><expr pos:start="671:33" pos:end="671:45"><call pos:start="671:33" pos:end="671:45"><name pos:start="671:33" pos:end="671:43">drawPolygon</name><argument_list pos:start="671:44" pos:end="671:45">()</argument_list></call></expr>;</expr_stmt>	
				<expr_stmt pos:start="672:33" pos:end="672:208"><expr pos:start="672:33" pos:end="672:207"><call pos:start="672:33" pos:end="672:207"><name pos:start="672:33" pos:end="672:47">addPriorityArea</name><argument_list pos:start="672:48" pos:end="672:207">(<argument pos:start="672:49" pos:end="672:95"><expr pos:start="672:49" pos:end="672:95"><call pos:start="672:49" pos:end="672:78"><name pos:start="672:49" pos:end="672:76"><name pos:start="672:49" pos:end="672:56">amapping</name><operator pos:start="672:57" pos:end="672:57">.</operator><name pos:start="672:58" pos:end="672:76">getLocationMappings</name></name><argument_list pos:start="672:77" pos:end="672:78">()</argument_list></call><operator pos:start="672:79" pos:end="672:79">.</operator><call pos:start="672:80" pos:end="672:85"><name pos:start="672:80" pos:end="672:82">get</name><argument_list pos:start="672:83" pos:end="672:85">(<argument pos:start="672:84" pos:end="672:84"><expr pos:start="672:84" pos:end="672:84"><name pos:start="672:84" pos:end="672:84">i</name></expr></argument>)</argument_list></call><operator pos:start="672:86" pos:end="672:86">.</operator><call pos:start="672:87" pos:end="672:95"><name pos:start="672:87" pos:end="672:93">getType</name><argument_list pos:start="672:94" pos:end="672:95">()</argument_list></call></expr></argument>, <argument pos:start="672:98" pos:end="672:151"><expr pos:start="672:98" pos:end="672:151"><call pos:start="672:98" pos:end="672:127"><name pos:start="672:98" pos:end="672:125"><name pos:start="672:98" pos:end="672:105">amapping</name><operator pos:start="672:106" pos:end="672:106">.</operator><name pos:start="672:107" pos:end="672:125">getLocationMappings</name></name><argument_list pos:start="672:126" pos:end="672:127">()</argument_list></call><operator pos:start="672:128" pos:end="672:128">.</operator><call pos:start="672:129" pos:end="672:134"><name pos:start="672:129" pos:end="672:131">get</name><argument_list pos:start="672:132" pos:end="672:134">(<argument pos:start="672:133" pos:end="672:133"><expr pos:start="672:133" pos:end="672:133"><name pos:start="672:133" pos:end="672:133">i</name></expr></argument>)</argument_list></call><operator pos:start="672:135" pos:end="672:135">.</operator><call pos:start="672:136" pos:end="672:151"><name pos:start="672:136" pos:end="672:149">getDescription</name><argument_list pos:start="672:150" pos:end="672:151">()</argument_list></call></expr></argument>, <argument pos:start="672:154" pos:end="672:206"><expr pos:start="672:154" pos:end="672:206"><call pos:start="672:154" pos:end="672:183"><name pos:start="672:154" pos:end="672:181"><name pos:start="672:154" pos:end="672:161">amapping</name><operator pos:start="672:162" pos:end="672:162">.</operator><name pos:start="672:163" pos:end="672:181">getLocationMappings</name></name><argument_list pos:start="672:182" pos:end="672:183">()</argument_list></call><operator pos:start="672:184" pos:end="672:184">.</operator><call pos:start="672:185" pos:end="672:190"><name pos:start="672:185" pos:end="672:187">get</name><argument_list pos:start="672:188" pos:end="672:190">(<argument pos:start="672:189" pos:end="672:189"><expr pos:start="672:189" pos:end="672:189"><name pos:start="672:189" pos:end="672:189">i</name></expr></argument>)</argument_list></call><operator pos:start="672:191" pos:end="672:191">.</operator><call pos:start="672:192" pos:end="672:206"><name pos:start="672:192" pos:end="672:204">getImportance</name><argument_list pos:start="672:205" pos:end="672:206">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			</block_content>}</block></if>
			<else pos:start="674:25" pos:end="694:25">else <block pos:start="674:30" pos:end="694:25">{<block_content pos:start="676:33" pos:end="693:255"> <comment type="line" pos:start="674:32" pos:end="674:47">// priority side</comment>

				<for pos:start="676:33" pos:end="692:33">for <control pos:start="676:37" pos:end="676:123">(<init pos:start="676:38" pos:end="676:47"><decl pos:start="676:38" pos:end="676:46"><type pos:start="676:38" pos:end="676:40"><name pos:start="676:38" pos:end="676:40">int</name></type> <name pos:start="676:42" pos:end="676:42">j</name> <init pos:start="676:44" pos:end="676:46">= <expr pos:start="676:46" pos:end="676:46"><literal type="number" pos:start="676:46" pos:end="676:46">0</literal></expr></init></decl>;</init> <condition pos:start="676:49" pos:end="676:118"><expr pos:start="676:49" pos:end="676:117"><name pos:start="676:49" pos:end="676:49">j</name> <operator pos:start="676:51" pos:end="676:51">&lt;</operator> <call pos:start="676:53" pos:end="676:82"><name pos:start="676:53" pos:end="676:80"><name pos:start="676:53" pos:end="676:60">amapping</name><operator pos:start="676:61" pos:end="676:61">.</operator><name pos:start="676:62" pos:end="676:80">getLocationMappings</name></name><argument_list pos:start="676:81" pos:end="676:82">()</argument_list></call><operator pos:start="676:83" pos:end="676:83">.</operator><call pos:start="676:84" pos:end="676:89"><name pos:start="676:84" pos:end="676:86">get</name><argument_list pos:start="676:87" pos:end="676:89">(<argument pos:start="676:88" pos:end="676:88"><expr pos:start="676:88" pos:end="676:88"><name pos:start="676:88" pos:end="676:88">i</name></expr></argument>)</argument_list></call><operator pos:start="676:90" pos:end="676:90">.</operator><call pos:start="676:91" pos:end="676:106"><name pos:start="676:91" pos:end="676:104">getCoordinates</name><argument_list pos:start="676:105" pos:end="676:106">()</argument_list></call><operator pos:start="676:107" pos:end="676:107">.</operator><call pos:start="676:108" pos:end="676:113"><name pos:start="676:108" pos:end="676:111">size</name><argument_list pos:start="676:112" pos:end="676:113">()</argument_list></call> <operator pos:start="676:115" pos:end="676:115">-</operator> <literal type="number" pos:start="676:117" pos:end="676:117">1</literal></expr>;</condition> <incr pos:start="676:120" pos:end="676:122"><expr pos:start="676:120" pos:end="676:122"><name pos:start="676:120" pos:end="676:120">j</name><operator pos:start="676:121" pos:end="676:122">++</operator></expr></incr>)</control> <block pos:start="676:125" pos:end="692:33">{<block_content pos:start="678:41" pos:end="691:41">
					<comment type="line" pos:start="677:41" pos:end="677:82">// find line that connects two coordinates</comment>
					<for pos:start="678:41" pos:end="691:41">for <control pos:start="678:45" pos:end="678:82">(<init pos:start="678:46" pos:end="678:81"><decl pos:start="678:46" pos:end="678:81"><type pos:start="678:46" pos:end="678:54"><name pos:start="678:46" pos:end="678:54">LPolyline</name></type> <name pos:start="678:56" pos:end="678:59">line</name> <range pos:start="678:61" pos:end="678:81">: <expr pos:start="678:63" pos:end="678:81"><call pos:start="678:63" pos:end="678:81"><name pos:start="678:63" pos:end="678:79"><name pos:start="678:63" pos:end="678:66">this</name><operator pos:start="678:67" pos:end="678:67">.</operator><name pos:start="678:68" pos:end="678:79">getPolylines</name></name><argument_list pos:start="678:80" pos:end="678:81">()</argument_list></call></expr></range></decl></init>)</control> <block pos:start="678:84" pos:end="691:41">{<block_content pos:start="679:49" pos:end="690:49">
						<decl_stmt pos:start="679:49" pos:end="679:146"><decl pos:start="679:49" pos:end="679:145"><type pos:start="679:49" pos:end="679:54"><name pos:start="679:49" pos:end="679:54">double</name></type> <name pos:start="679:56" pos:end="679:72">latPolylinePoint1</name> <init pos:start="679:74" pos:end="679:145">= <expr pos:start="679:76" pos:end="679:145"><operator pos:start="679:76" pos:end="679:76">(</operator><name pos:start="679:77" pos:end="679:82">double</name><operator pos:start="679:83" pos:end="679:83">)</operator><call pos:start="679:84" pos:end="679:134"><name pos:start="679:84" pos:end="679:93"><name pos:start="679:84" pos:end="679:87">Math</name><operator pos:start="679:88" pos:end="679:88">.</operator><name pos:start="679:89" pos:end="679:93">round</name></name><argument_list pos:start="679:94" pos:end="679:134">(<argument pos:start="679:95" pos:end="679:133"><expr pos:start="679:95" pos:end="679:133"><call pos:start="679:95" pos:end="679:110"><name pos:start="679:95" pos:end="679:108"><name pos:start="679:95" pos:end="679:98">line</name><operator pos:start="679:99" pos:end="679:99">.</operator><name pos:start="679:100" pos:end="679:108">getPoints</name></name><argument_list pos:start="679:109" pos:end="679:110">()</argument_list></call><index pos:start="679:111" pos:end="679:113">[<expr pos:start="679:112" pos:end="679:112"><literal type="number" pos:start="679:112" pos:end="679:112">0</literal></expr>]</index><operator pos:start="679:114" pos:end="679:114">.</operator><call pos:start="679:115" pos:end="679:122"><name pos:start="679:115" pos:end="679:120">getLat</name><argument_list pos:start="679:121" pos:end="679:122">()</argument_list></call> <operator pos:start="679:124" pos:end="679:124">*</operator> <literal type="number" pos:start="679:126" pos:end="679:133">1000000d</literal></expr></argument>)</argument_list></call> <operator pos:start="679:136" pos:end="679:136">/</operator> <literal type="number" pos:start="679:138" pos:end="679:145">1000000d</literal></expr></init></decl>;</decl_stmt>
						<decl_stmt pos:start="680:49" pos:end="680:146"><decl pos:start="680:49" pos:end="680:145"><type pos:start="680:49" pos:end="680:54"><name pos:start="680:49" pos:end="680:54">double</name></type> <name pos:start="680:56" pos:end="680:72">lonPolylinePoint1</name> <init pos:start="680:74" pos:end="680:145">= <expr pos:start="680:76" pos:end="680:145"><operator pos:start="680:76" pos:end="680:76">(</operator><name pos:start="680:77" pos:end="680:82">double</name><operator pos:start="680:83" pos:end="680:83">)</operator><call pos:start="680:84" pos:end="680:134"><name pos:start="680:84" pos:end="680:93"><name pos:start="680:84" pos:end="680:87">Math</name><operator pos:start="680:88" pos:end="680:88">.</operator><name pos:start="680:89" pos:end="680:93">round</name></name><argument_list pos:start="680:94" pos:end="680:134">(<argument pos:start="680:95" pos:end="680:133"><expr pos:start="680:95" pos:end="680:133"><call pos:start="680:95" pos:end="680:110"><name pos:start="680:95" pos:end="680:108"><name pos:start="680:95" pos:end="680:98">line</name><operator pos:start="680:99" pos:end="680:99">.</operator><name pos:start="680:100" pos:end="680:108">getPoints</name></name><argument_list pos:start="680:109" pos:end="680:110">()</argument_list></call><index pos:start="680:111" pos:end="680:113">[<expr pos:start="680:112" pos:end="680:112"><literal type="number" pos:start="680:112" pos:end="680:112">0</literal></expr>]</index><operator pos:start="680:114" pos:end="680:114">.</operator><call pos:start="680:115" pos:end="680:122"><name pos:start="680:115" pos:end="680:120">getLon</name><argument_list pos:start="680:121" pos:end="680:122">()</argument_list></call> <operator pos:start="680:124" pos:end="680:124">*</operator> <literal type="number" pos:start="680:126" pos:end="680:133">1000000d</literal></expr></argument>)</argument_list></call> <operator pos:start="680:136" pos:end="680:136">/</operator> <literal type="number" pos:start="680:138" pos:end="680:145">1000000d</literal></expr></init></decl>;</decl_stmt>
						<decl_stmt pos:start="681:49" pos:end="681:146"><decl pos:start="681:49" pos:end="681:145"><type pos:start="681:49" pos:end="681:54"><name pos:start="681:49" pos:end="681:54">double</name></type> <name pos:start="681:56" pos:end="681:72">latPolylinePoint2</name> <init pos:start="681:74" pos:end="681:145">= <expr pos:start="681:76" pos:end="681:145"><operator pos:start="681:76" pos:end="681:76">(</operator><name pos:start="681:77" pos:end="681:82">double</name><operator pos:start="681:83" pos:end="681:83">)</operator><call pos:start="681:84" pos:end="681:134"><name pos:start="681:84" pos:end="681:93"><name pos:start="681:84" pos:end="681:87">Math</name><operator pos:start="681:88" pos:end="681:88">.</operator><name pos:start="681:89" pos:end="681:93">round</name></name><argument_list pos:start="681:94" pos:end="681:134">(<argument pos:start="681:95" pos:end="681:133"><expr pos:start="681:95" pos:end="681:133"><call pos:start="681:95" pos:end="681:110"><name pos:start="681:95" pos:end="681:108"><name pos:start="681:95" pos:end="681:98">line</name><operator pos:start="681:99" pos:end="681:99">.</operator><name pos:start="681:100" pos:end="681:108">getPoints</name></name><argument_list pos:start="681:109" pos:end="681:110">()</argument_list></call><index pos:start="681:111" pos:end="681:113">[<expr pos:start="681:112" pos:end="681:112"><literal type="number" pos:start="681:112" pos:end="681:112">1</literal></expr>]</index><operator pos:start="681:114" pos:end="681:114">.</operator><call pos:start="681:115" pos:end="681:122"><name pos:start="681:115" pos:end="681:120">getLat</name><argument_list pos:start="681:121" pos:end="681:122">()</argument_list></call> <operator pos:start="681:124" pos:end="681:124">*</operator> <literal type="number" pos:start="681:126" pos:end="681:133">1000000d</literal></expr></argument>)</argument_list></call> <operator pos:start="681:136" pos:end="681:136">/</operator> <literal type="number" pos:start="681:138" pos:end="681:145">1000000d</literal></expr></init></decl>;</decl_stmt>
						<decl_stmt pos:start="682:49" pos:end="682:146"><decl pos:start="682:49" pos:end="682:145"><type pos:start="682:49" pos:end="682:54"><name pos:start="682:49" pos:end="682:54">double</name></type> <name pos:start="682:56" pos:end="682:72">lonPolylinePoint2</name> <init pos:start="682:74" pos:end="682:145">= <expr pos:start="682:76" pos:end="682:145"><operator pos:start="682:76" pos:end="682:76">(</operator><name pos:start="682:77" pos:end="682:82">double</name><operator pos:start="682:83" pos:end="682:83">)</operator><call pos:start="682:84" pos:end="682:134"><name pos:start="682:84" pos:end="682:93"><name pos:start="682:84" pos:end="682:87">Math</name><operator pos:start="682:88" pos:end="682:88">.</operator><name pos:start="682:89" pos:end="682:93">round</name></name><argument_list pos:start="682:94" pos:end="682:134">(<argument pos:start="682:95" pos:end="682:133"><expr pos:start="682:95" pos:end="682:133"><call pos:start="682:95" pos:end="682:110"><name pos:start="682:95" pos:end="682:108"><name pos:start="682:95" pos:end="682:98">line</name><operator pos:start="682:99" pos:end="682:99">.</operator><name pos:start="682:100" pos:end="682:108">getPoints</name></name><argument_list pos:start="682:109" pos:end="682:110">()</argument_list></call><index pos:start="682:111" pos:end="682:113">[<expr pos:start="682:112" pos:end="682:112"><literal type="number" pos:start="682:112" pos:end="682:112">1</literal></expr>]</index><operator pos:start="682:114" pos:end="682:114">.</operator><call pos:start="682:115" pos:end="682:122"><name pos:start="682:115" pos:end="682:120">getLon</name><argument_list pos:start="682:121" pos:end="682:122">()</argument_list></call> <operator pos:start="682:124" pos:end="682:124">*</operator> <literal type="number" pos:start="682:126" pos:end="682:133">1000000d</literal></expr></argument>)</argument_list></call> <operator pos:start="682:136" pos:end="682:136">/</operator> <literal type="number" pos:start="682:138" pos:end="682:145">1000000d</literal></expr></init></decl>;</decl_stmt>
						<decl_stmt pos:start="683:49" pos:end="683:193"><decl pos:start="683:49" pos:end="683:192"><type pos:start="683:49" pos:end="683:54"><name pos:start="683:49" pos:end="683:54">double</name></type> <name pos:start="683:56" pos:end="683:72">latPriorityPoint1</name> <init pos:start="683:74" pos:end="683:192">= <expr pos:start="683:76" pos:end="683:192"><operator pos:start="683:76" pos:end="683:76">(</operator><name pos:start="683:77" pos:end="683:82">double</name><operator pos:start="683:83" pos:end="683:83">)</operator><call pos:start="683:84" pos:end="683:181"><name pos:start="683:84" pos:end="683:93"><name pos:start="683:84" pos:end="683:87">Math</name><operator pos:start="683:88" pos:end="683:88">.</operator><name pos:start="683:89" pos:end="683:93">round</name></name><argument_list pos:start="683:94" pos:end="683:181">(<argument pos:start="683:95" pos:end="683:180"><expr pos:start="683:95" pos:end="683:180"><call pos:start="683:95" pos:end="683:124"><name pos:start="683:95" pos:end="683:122"><name pos:start="683:95" pos:end="683:102">amapping</name><operator pos:start="683:103" pos:end="683:103">.</operator><name pos:start="683:104" pos:end="683:122">getLocationMappings</name></name><argument_list pos:start="683:123" pos:end="683:124">()</argument_list></call><operator pos:start="683:125" pos:end="683:125">.</operator><call pos:start="683:126" pos:end="683:131"><name pos:start="683:126" pos:end="683:128">get</name><argument_list pos:start="683:129" pos:end="683:131">(<argument pos:start="683:130" pos:end="683:130"><expr pos:start="683:130" pos:end="683:130"><name pos:start="683:130" pos:end="683:130">i</name></expr></argument>)</argument_list></call><operator pos:start="683:132" pos:end="683:132">.</operator><call pos:start="683:133" pos:end="683:148"><name pos:start="683:133" pos:end="683:146">getCoordinates</name><argument_list pos:start="683:147" pos:end="683:148">()</argument_list></call><operator pos:start="683:149" pos:end="683:149">.</operator><call pos:start="683:150" pos:end="683:155"><name pos:start="683:150" pos:end="683:152">get</name><argument_list pos:start="683:153" pos:end="683:155">(<argument pos:start="683:154" pos:end="683:154"><expr pos:start="683:154" pos:end="683:154"><name pos:start="683:154" pos:end="683:154">j</name></expr></argument>)</argument_list></call><operator pos:start="683:156" pos:end="683:156">.</operator><call pos:start="683:157" pos:end="683:169"><name pos:start="683:157" pos:end="683:167">getLatitude</name><argument_list pos:start="683:168" pos:end="683:169">()</argument_list></call> <operator pos:start="683:171" pos:end="683:171">*</operator> <literal type="number" pos:start="683:173" pos:end="683:180">1000000d</literal></expr></argument>)</argument_list></call> <operator pos:start="683:183" pos:end="683:183">/</operator> <literal type="number" pos:start="683:185" pos:end="683:192">1000000d</literal></expr></init></decl>;</decl_stmt>
						<decl_stmt pos:start="684:49" pos:end="684:194"><decl pos:start="684:49" pos:end="684:193"><type pos:start="684:49" pos:end="684:54"><name pos:start="684:49" pos:end="684:54">double</name></type> <name pos:start="684:56" pos:end="684:72">lonPriorityPoint1</name> <init pos:start="684:74" pos:end="684:193">= <expr pos:start="684:76" pos:end="684:193"><operator pos:start="684:76" pos:end="684:76">(</operator><name pos:start="684:77" pos:end="684:82">double</name><operator pos:start="684:83" pos:end="684:83">)</operator><call pos:start="684:84" pos:end="684:182"><name pos:start="684:84" pos:end="684:93"><name pos:start="684:84" pos:end="684:87">Math</name><operator pos:start="684:88" pos:end="684:88">.</operator><name pos:start="684:89" pos:end="684:93">round</name></name><argument_list pos:start="684:94" pos:end="684:182">(<argument pos:start="684:95" pos:end="684:181"><expr pos:start="684:95" pos:end="684:181"><call pos:start="684:95" pos:end="684:124"><name pos:start="684:95" pos:end="684:122"><name pos:start="684:95" pos:end="684:102">amapping</name><operator pos:start="684:103" pos:end="684:103">.</operator><name pos:start="684:104" pos:end="684:122">getLocationMappings</name></name><argument_list pos:start="684:123" pos:end="684:124">()</argument_list></call><operator pos:start="684:125" pos:end="684:125">.</operator><call pos:start="684:126" pos:end="684:131"><name pos:start="684:126" pos:end="684:128">get</name><argument_list pos:start="684:129" pos:end="684:131">(<argument pos:start="684:130" pos:end="684:130"><expr pos:start="684:130" pos:end="684:130"><name pos:start="684:130" pos:end="684:130">i</name></expr></argument>)</argument_list></call><operator pos:start="684:132" pos:end="684:132">.</operator><call pos:start="684:133" pos:end="684:148"><name pos:start="684:133" pos:end="684:146">getCoordinates</name><argument_list pos:start="684:147" pos:end="684:148">()</argument_list></call><operator pos:start="684:149" pos:end="684:149">.</operator><call pos:start="684:150" pos:end="684:155"><name pos:start="684:150" pos:end="684:152">get</name><argument_list pos:start="684:153" pos:end="684:155">(<argument pos:start="684:154" pos:end="684:154"><expr pos:start="684:154" pos:end="684:154"><name pos:start="684:154" pos:end="684:154">j</name></expr></argument>)</argument_list></call><operator pos:start="684:156" pos:end="684:156">.</operator><call pos:start="684:157" pos:end="684:170"><name pos:start="684:157" pos:end="684:168">getLongitude</name><argument_list pos:start="684:169" pos:end="684:170">()</argument_list></call> <operator pos:start="684:172" pos:end="684:172">*</operator> <literal type="number" pos:start="684:174" pos:end="684:181">1000000d</literal></expr></argument>)</argument_list></call> <operator pos:start="684:184" pos:end="684:184">/</operator> <literal type="number" pos:start="684:186" pos:end="684:193">1000000d</literal></expr></init></decl>;</decl_stmt>
						<decl_stmt pos:start="685:49" pos:end="685:195"><decl pos:start="685:49" pos:end="685:194"><type pos:start="685:49" pos:end="685:54"><name pos:start="685:49" pos:end="685:54">double</name></type> <name pos:start="685:56" pos:end="685:72">latPriorityPoint2</name> <init pos:start="685:74" pos:end="685:194">= <expr pos:start="685:76" pos:end="685:194"><operator pos:start="685:76" pos:end="685:76">(</operator><name pos:start="685:77" pos:end="685:82">double</name><operator pos:start="685:83" pos:end="685:83">)</operator><call pos:start="685:84" pos:end="685:183"><name pos:start="685:84" pos:end="685:93"><name pos:start="685:84" pos:end="685:87">Math</name><operator pos:start="685:88" pos:end="685:88">.</operator><name pos:start="685:89" pos:end="685:93">round</name></name><argument_list pos:start="685:94" pos:end="685:183">(<argument pos:start="685:95" pos:end="685:182"><expr pos:start="685:95" pos:end="685:182"><call pos:start="685:95" pos:end="685:124"><name pos:start="685:95" pos:end="685:122"><name pos:start="685:95" pos:end="685:102">amapping</name><operator pos:start="685:103" pos:end="685:103">.</operator><name pos:start="685:104" pos:end="685:122">getLocationMappings</name></name><argument_list pos:start="685:123" pos:end="685:124">()</argument_list></call><operator pos:start="685:125" pos:end="685:125">.</operator><call pos:start="685:126" pos:end="685:131"><name pos:start="685:126" pos:end="685:128">get</name><argument_list pos:start="685:129" pos:end="685:131">(<argument pos:start="685:130" pos:end="685:130"><expr pos:start="685:130" pos:end="685:130"><name pos:start="685:130" pos:end="685:130">i</name></expr></argument>)</argument_list></call><operator pos:start="685:132" pos:end="685:132">.</operator><call pos:start="685:133" pos:end="685:148"><name pos:start="685:133" pos:end="685:146">getCoordinates</name><argument_list pos:start="685:147" pos:end="685:148">()</argument_list></call><operator pos:start="685:149" pos:end="685:149">.</operator><call pos:start="685:150" pos:end="685:157"><name pos:start="685:150" pos:end="685:152">get</name><argument_list pos:start="685:153" pos:end="685:157">(<argument pos:start="685:154" pos:end="685:156"><expr pos:start="685:154" pos:end="685:156"><name pos:start="685:154" pos:end="685:154">j</name><operator pos:start="685:155" pos:end="685:155">+</operator><literal type="number" pos:start="685:156" pos:end="685:156">1</literal></expr></argument>)</argument_list></call><operator pos:start="685:158" pos:end="685:158">.</operator><call pos:start="685:159" pos:end="685:171"><name pos:start="685:159" pos:end="685:169">getLatitude</name><argument_list pos:start="685:170" pos:end="685:171">()</argument_list></call> <operator pos:start="685:173" pos:end="685:173">*</operator> <literal type="number" pos:start="685:175" pos:end="685:182">1000000d</literal></expr></argument>)</argument_list></call> <operator pos:start="685:185" pos:end="685:185">/</operator> <literal type="number" pos:start="685:187" pos:end="685:194">1000000d</literal></expr></init></decl>;</decl_stmt>
						<decl_stmt pos:start="686:49" pos:end="686:196"><decl pos:start="686:49" pos:end="686:195"><type pos:start="686:49" pos:end="686:54"><name pos:start="686:49" pos:end="686:54">double</name></type> <name pos:start="686:56" pos:end="686:72">lonPriorityPoint2</name> <init pos:start="686:74" pos:end="686:195">= <expr pos:start="686:76" pos:end="686:195"><operator pos:start="686:76" pos:end="686:76">(</operator><name pos:start="686:77" pos:end="686:82">double</name><operator pos:start="686:83" pos:end="686:83">)</operator><call pos:start="686:84" pos:end="686:184"><name pos:start="686:84" pos:end="686:93"><name pos:start="686:84" pos:end="686:87">Math</name><operator pos:start="686:88" pos:end="686:88">.</operator><name pos:start="686:89" pos:end="686:93">round</name></name><argument_list pos:start="686:94" pos:end="686:184">(<argument pos:start="686:95" pos:end="686:183"><expr pos:start="686:95" pos:end="686:183"><call pos:start="686:95" pos:end="686:124"><name pos:start="686:95" pos:end="686:122"><name pos:start="686:95" pos:end="686:102">amapping</name><operator pos:start="686:103" pos:end="686:103">.</operator><name pos:start="686:104" pos:end="686:122">getLocationMappings</name></name><argument_list pos:start="686:123" pos:end="686:124">()</argument_list></call><operator pos:start="686:125" pos:end="686:125">.</operator><call pos:start="686:126" pos:end="686:131"><name pos:start="686:126" pos:end="686:128">get</name><argument_list pos:start="686:129" pos:end="686:131">(<argument pos:start="686:130" pos:end="686:130"><expr pos:start="686:130" pos:end="686:130"><name pos:start="686:130" pos:end="686:130">i</name></expr></argument>)</argument_list></call><operator pos:start="686:132" pos:end="686:132">.</operator><call pos:start="686:133" pos:end="686:148"><name pos:start="686:133" pos:end="686:146">getCoordinates</name><argument_list pos:start="686:147" pos:end="686:148">()</argument_list></call><operator pos:start="686:149" pos:end="686:149">.</operator><call pos:start="686:150" pos:end="686:157"><name pos:start="686:150" pos:end="686:152">get</name><argument_list pos:start="686:153" pos:end="686:157">(<argument pos:start="686:154" pos:end="686:156"><expr pos:start="686:154" pos:end="686:156"><name pos:start="686:154" pos:end="686:154">j</name><operator pos:start="686:155" pos:end="686:155">+</operator><literal type="number" pos:start="686:156" pos:end="686:156">1</literal></expr></argument>)</argument_list></call><operator pos:start="686:158" pos:end="686:158">.</operator><call pos:start="686:159" pos:end="686:172"><name pos:start="686:159" pos:end="686:170">getLongitude</name><argument_list pos:start="686:171" pos:end="686:172">()</argument_list></call> <operator pos:start="686:174" pos:end="686:174">*</operator> <literal type="number" pos:start="686:176" pos:end="686:183">1000000d</literal></expr></argument>)</argument_list></call> <operator pos:start="686:186" pos:end="686:186">/</operator> <literal type="number" pos:start="686:188" pos:end="686:195">1000000d</literal></expr></init></decl>;</decl_stmt>
						<if_stmt pos:start="687:49" pos:end="690:49"><if pos:start="687:49" pos:end="690:49">if <condition pos:start="687:52" pos:end="688:226">(<expr pos:start="687:53" pos:end="688:225"><operator pos:start="687:53" pos:end="687:53">(</operator><name pos:start="687:54" pos:end="687:70">latPolylinePoint1</name> <operator pos:start="687:72" pos:end="687:73">==</operator> <name pos:start="687:75" pos:end="687:91">latPriorityPoint1</name> <operator pos:start="687:93" pos:end="687:94">&amp;&amp;</operator> <name pos:start="687:96" pos:end="687:112">lonPolylinePoint1</name> <operator pos:start="687:114" pos:end="687:115">==</operator> <name pos:start="687:117" pos:end="687:133">lonPriorityPoint1</name> <operator pos:start="687:135" pos:end="687:136">&amp;&amp;</operator> <name pos:start="687:138" pos:end="687:154">latPolylinePoint2</name> <operator pos:start="687:156" pos:end="687:157">==</operator> <name pos:start="687:159" pos:end="687:175">latPriorityPoint2</name> <operator pos:start="687:177" pos:end="687:178">&amp;&amp;</operator> <name pos:start="687:180" pos:end="687:196">lonPolylinePoint2</name> <operator pos:start="687:198" pos:end="687:199">==</operator> <name pos:start="687:201" pos:end="687:217">lonPriorityPoint2</name><operator pos:start="687:218" pos:end="687:218">)</operator>
							<operator pos:start="688:57" pos:end="688:58">||</operator> <operator pos:start="688:60" pos:end="688:60">(</operator><name pos:start="688:61" pos:end="688:77">latPolylinePoint2</name> <operator pos:start="688:79" pos:end="688:80">==</operator> <name pos:start="688:82" pos:end="688:98">latPriorityPoint1</name> <operator pos:start="688:100" pos:end="688:101">&amp;&amp;</operator> <name pos:start="688:103" pos:end="688:119">lonPolylinePoint2</name> <operator pos:start="688:121" pos:end="688:122">==</operator> <name pos:start="688:124" pos:end="688:140">lonPriorityPoint1</name> <operator pos:start="688:142" pos:end="688:143">&amp;&amp;</operator> <name pos:start="688:145" pos:end="688:161">latPolylinePoint1</name> <operator pos:start="688:163" pos:end="688:164">==</operator> <name pos:start="688:166" pos:end="688:182">latPriorityPoint2</name> <operator pos:start="688:184" pos:end="688:185">&amp;&amp;</operator> <name pos:start="688:187" pos:end="688:203">lonPolylinePoint1</name> <operator pos:start="688:205" pos:end="688:206">==</operator> <name pos:start="688:208" pos:end="688:224">lonPriorityPoint2</name><operator pos:start="688:225" pos:end="688:225">)</operator></expr>)</condition> <block pos:start="688:228" pos:end="690:49">{<block_content pos:start="689:57" pos:end="689:78">
							<expr_stmt pos:start="689:57" pos:end="689:78"><expr pos:start="689:57" pos:end="689:77"><call pos:start="689:57" pos:end="689:77"><name pos:start="689:57" pos:end="689:71">addPriorityLine</name><argument_list pos:start="689:72" pos:end="689:77">(<argument pos:start="689:73" pos:end="689:76"><expr pos:start="689:73" pos:end="689:76"><name pos:start="689:73" pos:end="689:76">line</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
						</block_content>}</block></if></if_stmt>
					</block_content>}</block></for>
				</block_content>}</block></for>
				<expr_stmt pos:start="693:33" pos:end="693:255"><expr pos:start="693:33" pos:end="693:254"><call pos:start="693:33" pos:end="693:254"><name pos:start="693:33" pos:end="693:47">addPrioritySide</name><argument_list pos:start="693:48" pos:end="693:254">(<argument pos:start="693:49" pos:end="693:93"><expr pos:start="693:49" pos:end="693:93"><call pos:start="693:49" pos:end="693:78"><name pos:start="693:49" pos:end="693:76"><name pos:start="693:49" pos:end="693:56">amapping</name><operator pos:start="693:57" pos:end="693:57">.</operator><name pos:start="693:58" pos:end="693:76">getLocationMappings</name></name><argument_list pos:start="693:77" pos:end="693:78">()</argument_list></call><operator pos:start="693:79" pos:end="693:79">.</operator><call pos:start="693:80" pos:end="693:85"><name pos:start="693:80" pos:end="693:82">get</name><argument_list pos:start="693:83" pos:end="693:85">(<argument pos:start="693:84" pos:end="693:84"><expr pos:start="693:84" pos:end="693:84"><name pos:start="693:84" pos:end="693:84">i</name></expr></argument>)</argument_list></call><operator pos:start="693:86" pos:end="693:86">.</operator><call pos:start="693:87" pos:end="693:93"><name pos:start="693:87" pos:end="693:91">getId</name><argument_list pos:start="693:92" pos:end="693:93">()</argument_list></call></expr></argument>, <argument pos:start="693:96" pos:end="693:142"><expr pos:start="693:96" pos:end="693:142"><call pos:start="693:96" pos:end="693:125"><name pos:start="693:96" pos:end="693:123"><name pos:start="693:96" pos:end="693:103">amapping</name><operator pos:start="693:104" pos:end="693:104">.</operator><name pos:start="693:105" pos:end="693:123">getLocationMappings</name></name><argument_list pos:start="693:124" pos:end="693:125">()</argument_list></call><operator pos:start="693:126" pos:end="693:126">.</operator><call pos:start="693:127" pos:end="693:132"><name pos:start="693:127" pos:end="693:129">get</name><argument_list pos:start="693:130" pos:end="693:132">(<argument pos:start="693:131" pos:end="693:131"><expr pos:start="693:131" pos:end="693:131"><name pos:start="693:131" pos:end="693:131">i</name></expr></argument>)</argument_list></call><operator pos:start="693:133" pos:end="693:133">.</operator><call pos:start="693:134" pos:end="693:142"><name pos:start="693:134" pos:end="693:140">getType</name><argument_list pos:start="693:141" pos:end="693:142">()</argument_list></call></expr></argument>, <argument pos:start="693:145" pos:end="693:198"><expr pos:start="693:145" pos:end="693:198"><call pos:start="693:145" pos:end="693:174"><name pos:start="693:145" pos:end="693:172"><name pos:start="693:145" pos:end="693:152">amapping</name><operator pos:start="693:153" pos:end="693:153">.</operator><name pos:start="693:154" pos:end="693:172">getLocationMappings</name></name><argument_list pos:start="693:173" pos:end="693:174">()</argument_list></call><operator pos:start="693:175" pos:end="693:175">.</operator><call pos:start="693:176" pos:end="693:181"><name pos:start="693:176" pos:end="693:178">get</name><argument_list pos:start="693:179" pos:end="693:181">(<argument pos:start="693:180" pos:end="693:180"><expr pos:start="693:180" pos:end="693:180"><name pos:start="693:180" pos:end="693:180">i</name></expr></argument>)</argument_list></call><operator pos:start="693:182" pos:end="693:182">.</operator><call pos:start="693:183" pos:end="693:198"><name pos:start="693:183" pos:end="693:196">getDescription</name><argument_list pos:start="693:197" pos:end="693:198">()</argument_list></call></expr></argument>, <argument pos:start="693:201" pos:end="693:253"><expr pos:start="693:201" pos:end="693:253"><call pos:start="693:201" pos:end="693:230"><name pos:start="693:201" pos:end="693:228"><name pos:start="693:201" pos:end="693:208">amapping</name><operator pos:start="693:209" pos:end="693:209">.</operator><name pos:start="693:210" pos:end="693:228">getLocationMappings</name></name><argument_list pos:start="693:229" pos:end="693:230">()</argument_list></call><operator pos:start="693:231" pos:end="693:231">.</operator><call pos:start="693:232" pos:end="693:237"><name pos:start="693:232" pos:end="693:234">get</name><argument_list pos:start="693:235" pos:end="693:237">(<argument pos:start="693:236" pos:end="693:236"><expr pos:start="693:236" pos:end="693:236"><name pos:start="693:236" pos:end="693:236">i</name></expr></argument>)</argument_list></call><operator pos:start="693:238" pos:end="693:238">.</operator><call pos:start="693:239" pos:end="693:253"><name pos:start="693:239" pos:end="693:251">getImportance</name><argument_list pos:start="693:252" pos:end="693:253">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			</block_content>}</block></else></if_stmt>
		</block_content>}</block></for>
		
		<comment type="line" pos:start="697:17" pos:end="697:84">// also, mark upstream so that the waterfall icon is correctly drawn</comment>
		<if_stmt pos:start="698:17" pos:end="700:17"><if pos:start="698:17" pos:end="700:17">if <condition pos:start="698:20" pos:end="698:37">(<expr pos:start="698:21" pos:end="698:36"><name pos:start="698:21" pos:end="698:28">amapping</name> <operator pos:start="698:30" pos:end="698:31">!=</operator> <literal type="null" pos:start="698:33" pos:end="698:36">null</literal></expr>)</condition> <block pos:start="698:39" pos:end="700:17">{<block_content pos:start="699:25" pos:end="699:58">
			<expr_stmt pos:start="699:25" pos:end="699:58"><expr pos:start="699:25" pos:end="699:57"><name pos:start="699:25" pos:end="699:32">upstream</name> <operator pos:start="699:34" pos:end="699:34">=</operator> <call pos:start="699:36" pos:end="699:57"><name pos:start="699:36" pos:end="699:55"><name pos:start="699:36" pos:end="699:43">amapping</name><operator pos:start="699:44" pos:end="699:44">.</operator><name pos:start="699:45" pos:end="699:55">getUpstream</name></name><argument_list pos:start="699:56" pos:end="699:57">()</argument_list></call></expr>;</expr_stmt>
		</block_content>}</block></if></if_stmt>
	</block_content>}</block></function>
	
	<comment type="line" pos:start="703:9" pos:end="703:83">// switch out one of the areas in allPriorityAreas with one that was edited</comment>
	<function pos:start="704:9" pos:end="710:9"><type pos:start="704:9" pos:end="704:19"><specifier pos:start="704:9" pos:end="704:14">public</specifier> <name pos:start="704:16" pos:end="704:19">void</name></type> <name pos:start="704:21" pos:end="704:36">editPriorityArea</name><parameter_list pos:start="704:37" pos:end="704:62">(<parameter pos:start="704:38" pos:end="704:61"><decl pos:start="704:38" pos:end="704:61"><type pos:start="704:38" pos:end="704:49"><name pos:start="704:38" pos:end="704:49">PriorityArea</name></type> <name pos:start="704:51" pos:end="704:61">changedArea</name></decl></parameter>)</parameter_list> <block pos:start="704:64" pos:end="710:9">{<block_content pos:start="705:17" pos:end="709:17">
		<for pos:start="705:17" pos:end="709:17">for <control pos:start="705:21" pos:end="705:65">(<init pos:start="705:22" pos:end="705:31"><decl pos:start="705:22" pos:end="705:30"><type pos:start="705:22" pos:end="705:24"><name pos:start="705:22" pos:end="705:24">int</name></type> <name pos:start="705:26" pos:end="705:26">i</name> <init pos:start="705:28" pos:end="705:30">= <expr pos:start="705:30" pos:end="705:30"><literal type="number" pos:start="705:30" pos:end="705:30">0</literal></expr></init></decl>;</init> <condition pos:start="705:33" pos:end="705:60"><expr pos:start="705:33" pos:end="705:59"><name pos:start="705:33" pos:end="705:33">i</name> <operator pos:start="705:35" pos:end="705:35">&lt;</operator> <call pos:start="705:37" pos:end="705:59"><name pos:start="705:37" pos:end="705:57"><name pos:start="705:37" pos:end="705:52">allPriorityAreas</name><operator pos:start="705:53" pos:end="705:53">.</operator><name pos:start="705:54" pos:end="705:57">size</name></name><argument_list pos:start="705:58" pos:end="705:59">()</argument_list></call></expr>;</condition> <incr pos:start="705:62" pos:end="705:64"><expr pos:start="705:62" pos:end="705:64"><name pos:start="705:62" pos:end="705:62">i</name><operator pos:start="705:63" pos:end="705:64">++</operator></expr></incr>)</control> <block pos:start="705:67" pos:end="709:17">{<block_content pos:start="706:25" pos:end="708:25">
			<if_stmt pos:start="706:25" pos:end="708:25"><if pos:start="706:25" pos:end="708:25">if <condition pos:start="706:28" pos:end="706:88">(<expr pos:start="706:29" pos:end="706:87"><call pos:start="706:29" pos:end="706:51"><name pos:start="706:29" pos:end="706:48"><name pos:start="706:29" pos:end="706:44">allPriorityAreas</name><operator pos:start="706:45" pos:end="706:45">.</operator><name pos:start="706:46" pos:end="706:48">get</name></name><argument_list pos:start="706:49" pos:end="706:51">(<argument pos:start="706:50" pos:end="706:50"><expr pos:start="706:50" pos:end="706:50"><name pos:start="706:50" pos:end="706:50">i</name></expr></argument>)</argument_list></call><operator pos:start="706:52" pos:end="706:52">.</operator><call pos:start="706:53" pos:end="706:59"><name pos:start="706:53" pos:end="706:57">getId</name><argument_list pos:start="706:58" pos:end="706:59">()</argument_list></call><operator pos:start="706:60" pos:end="706:60">.</operator><call pos:start="706:61" pos:end="706:87"><name pos:start="706:61" pos:end="706:66">equals</name><argument_list pos:start="706:67" pos:end="706:87">(<argument pos:start="706:68" pos:end="706:86"><expr pos:start="706:68" pos:end="706:86"><call pos:start="706:68" pos:end="706:86"><name pos:start="706:68" pos:end="706:84"><name pos:start="706:68" pos:end="706:78">changedArea</name><operator pos:start="706:79" pos:end="706:79">.</operator><name pos:start="706:80" pos:end="706:84">getId</name></name><argument_list pos:start="706:85" pos:end="706:86">()</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="706:90" pos:end="708:25">{<block_content pos:start="707:33" pos:end="707:69">
				<expr_stmt pos:start="707:33" pos:end="707:69"><expr pos:start="707:33" pos:end="707:68"><call pos:start="707:33" pos:end="707:68"><name pos:start="707:33" pos:end="707:52"><name pos:start="707:33" pos:end="707:48">allPriorityAreas</name><operator pos:start="707:49" pos:end="707:49">.</operator><name pos:start="707:50" pos:end="707:52">set</name></name><argument_list pos:start="707:53" pos:end="707:68">(<argument pos:start="707:54" pos:end="707:54"><expr pos:start="707:54" pos:end="707:54"><name pos:start="707:54" pos:end="707:54">i</name></expr></argument>, <argument pos:start="707:57" pos:end="707:67"><expr pos:start="707:57" pos:end="707:67"><name pos:start="707:57" pos:end="707:67">changedArea</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			</block_content>}</block></if></if_stmt>
		</block_content>}</block></for>
	</block_content>}</block></function>
	
	<comment type="line" pos:start="712:9" pos:end="712:83">// switch out one of the sides in allPrioritySides with one that was edited</comment>
	<function pos:start="713:9" pos:end="719:9"><type pos:start="713:9" pos:end="713:19"><specifier pos:start="713:9" pos:end="713:14">public</specifier> <name pos:start="713:16" pos:end="713:19">void</name></type> <name pos:start="713:21" pos:end="713:36">editPrioritySide</name><parameter_list pos:start="713:37" pos:end="713:62">(<parameter pos:start="713:38" pos:end="713:61"><decl pos:start="713:38" pos:end="713:61"><type pos:start="713:38" pos:end="713:49"><name pos:start="713:38" pos:end="713:49">PrioritySide</name></type> <name pos:start="713:51" pos:end="713:61">changedSide</name></decl></parameter>)</parameter_list> <block pos:start="713:64" pos:end="719:9">{<block_content pos:start="714:17" pos:end="718:17">
		<for pos:start="714:17" pos:end="718:17">for <control pos:start="714:21" pos:end="714:65">(<init pos:start="714:22" pos:end="714:31"><decl pos:start="714:22" pos:end="714:30"><type pos:start="714:22" pos:end="714:24"><name pos:start="714:22" pos:end="714:24">int</name></type> <name pos:start="714:26" pos:end="714:26">i</name> <init pos:start="714:28" pos:end="714:30">= <expr pos:start="714:30" pos:end="714:30"><literal type="number" pos:start="714:30" pos:end="714:30">0</literal></expr></init></decl>;</init> <condition pos:start="714:33" pos:end="714:60"><expr pos:start="714:33" pos:end="714:59"><name pos:start="714:33" pos:end="714:33">i</name> <operator pos:start="714:35" pos:end="714:35">&lt;</operator> <call pos:start="714:37" pos:end="714:59"><name pos:start="714:37" pos:end="714:57"><name pos:start="714:37" pos:end="714:52">allPrioritySides</name><operator pos:start="714:53" pos:end="714:53">.</operator><name pos:start="714:54" pos:end="714:57">size</name></name><argument_list pos:start="714:58" pos:end="714:59">()</argument_list></call></expr>;</condition> <incr pos:start="714:62" pos:end="714:64"><expr pos:start="714:62" pos:end="714:64"><name pos:start="714:62" pos:end="714:62">i</name><operator pos:start="714:63" pos:end="714:64">++</operator></expr></incr>)</control> <block pos:start="714:67" pos:end="718:17">{<block_content pos:start="715:25" pos:end="717:25">
			<if_stmt pos:start="715:25" pos:end="717:25"><if pos:start="715:25" pos:end="717:25">if <condition pos:start="715:28" pos:end="715:88">(<expr pos:start="715:29" pos:end="715:87"><call pos:start="715:29" pos:end="715:51"><name pos:start="715:29" pos:end="715:48"><name pos:start="715:29" pos:end="715:44">allPrioritySides</name><operator pos:start="715:45" pos:end="715:45">.</operator><name pos:start="715:46" pos:end="715:48">get</name></name><argument_list pos:start="715:49" pos:end="715:51">(<argument pos:start="715:50" pos:end="715:50"><expr pos:start="715:50" pos:end="715:50"><name pos:start="715:50" pos:end="715:50">i</name></expr></argument>)</argument_list></call><operator pos:start="715:52" pos:end="715:52">.</operator><call pos:start="715:53" pos:end="715:59"><name pos:start="715:53" pos:end="715:57">getId</name><argument_list pos:start="715:58" pos:end="715:59">()</argument_list></call><operator pos:start="715:60" pos:end="715:60">.</operator><call pos:start="715:61" pos:end="715:87"><name pos:start="715:61" pos:end="715:66">equals</name><argument_list pos:start="715:67" pos:end="715:87">(<argument pos:start="715:68" pos:end="715:86"><expr pos:start="715:68" pos:end="715:86"><call pos:start="715:68" pos:end="715:86"><name pos:start="715:68" pos:end="715:84"><name pos:start="715:68" pos:end="715:78">changedSide</name><operator pos:start="715:79" pos:end="715:79">.</operator><name pos:start="715:80" pos:end="715:84">getId</name></name><argument_list pos:start="715:85" pos:end="715:86">()</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="715:90" pos:end="717:25">{<block_content pos:start="716:33" pos:end="716:69">
				<expr_stmt pos:start="716:33" pos:end="716:69"><expr pos:start="716:33" pos:end="716:68"><call pos:start="716:33" pos:end="716:68"><name pos:start="716:33" pos:end="716:52"><name pos:start="716:33" pos:end="716:48">allPrioritySides</name><operator pos:start="716:49" pos:end="716:49">.</operator><name pos:start="716:50" pos:end="716:52">set</name></name><argument_list pos:start="716:53" pos:end="716:68">(<argument pos:start="716:54" pos:end="716:54"><expr pos:start="716:54" pos:end="716:54"><name pos:start="716:54" pos:end="716:54">i</name></expr></argument>, <argument pos:start="716:57" pos:end="716:67"><expr pos:start="716:57" pos:end="716:67"><name pos:start="716:57" pos:end="716:67">changedSide</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			</block_content>}</block></if></if_stmt>
		</block_content>}</block></for>
	</block_content>}</block></function>
	
	<comment type="line" pos:start="721:9" pos:end="721:35">// adds a new priority line</comment>
	<function pos:start="722:9" pos:end="751:9"><type pos:start="722:9" pos:end="722:19"><specifier pos:start="722:9" pos:end="722:14">public</specifier> <name pos:start="722:16" pos:end="722:19">void</name></type> <name pos:start="722:21" pos:end="722:35">addPriorityLine</name><parameter_list pos:start="722:36" pos:end="722:56">(<parameter pos:start="722:37" pos:end="722:55"><decl pos:start="722:37" pos:end="722:55"><type pos:start="722:37" pos:end="722:45"><name pos:start="722:37" pos:end="722:45">LPolyline</name></type> <name pos:start="722:47" pos:end="722:55">lineToAdd</name></decl></parameter>)</parameter_list> <block pos:start="722:58" pos:end="751:9">{<block_content pos:start="724:17" pos:end="750:74">

		<decl_stmt pos:start="724:17" pos:end="724:56"><decl pos:start="724:17" pos:end="724:55"><type pos:start="724:17" pos:end="724:23"><name pos:start="724:17" pos:end="724:23">Boolean</name></type> <name pos:start="724:25" pos:end="724:47">foundInAllPriorityLines</name> <init pos:start="724:49" pos:end="724:55">= <expr pos:start="724:51" pos:end="724:55"><literal type="boolean" pos:start="724:51" pos:end="724:55">false</literal></expr></init></decl>;</decl_stmt>
		
		<comment type="line" pos:start="726:17" pos:end="726:101">// iterate through existing priority lines to make sure that it doesn't already exist</comment>
		<for pos:start="727:17" pos:end="738:25">for <control pos:start="727:21" pos:end="727:59">(<init pos:start="727:22" pos:end="727:58"><decl pos:start="727:22" pos:end="727:58"><type pos:start="727:22" pos:end="727:30"><name pos:start="727:22" pos:end="727:30">LPolyline</name></type> <name pos:start="727:32" pos:end="727:39">polyline</name> <range pos:start="727:41" pos:end="727:58">: <expr pos:start="727:43" pos:end="727:58"><name pos:start="727:43" pos:end="727:58">allPriorityLines</name></expr></range></decl></init>)</control><block type="pseudo" pos:start="728:25" pos:end="738:25"><block_content pos:start="728:25" pos:end="738:25"> 
			<if_stmt pos:start="728:25" pos:end="738:25"><if pos:start="728:25" pos:end="738:25">if <condition pos:start="728:28" pos:end="735:184">(<expr pos:start="728:29" pos:end="735:183"><operator pos:start="728:29" pos:end="728:29">(</operator><operator pos:start="728:30" pos:end="728:30">(</operator><operator pos:start="728:31" pos:end="728:31">(</operator><name pos:start="728:32" pos:end="728:37">double</name><operator pos:start="728:38" pos:end="728:38">)</operator><call pos:start="728:39" pos:end="728:94"><name pos:start="728:39" pos:end="728:48"><name pos:start="728:39" pos:end="728:42">Math</name><operator pos:start="728:43" pos:end="728:43">.</operator><name pos:start="728:44" pos:end="728:48">round</name></name><argument_list pos:start="728:49" pos:end="728:94">(<argument pos:start="728:50" pos:end="728:93"><expr pos:start="728:50" pos:end="728:93"><call pos:start="728:50" pos:end="728:70"><name pos:start="728:50" pos:end="728:68"><name pos:start="728:50" pos:end="728:58">lineToAdd</name><operator pos:start="728:59" pos:end="728:59">.</operator><name pos:start="728:60" pos:end="728:68">getPoints</name></name><argument_list pos:start="728:69" pos:end="728:70">()</argument_list></call><index pos:start="728:71" pos:end="728:73">[<expr pos:start="728:72" pos:end="728:72"><literal type="number" pos:start="728:72" pos:end="728:72">0</literal></expr>]</index><operator pos:start="728:74" pos:end="728:74">.</operator><call pos:start="728:75" pos:end="728:82"><name pos:start="728:75" pos:end="728:80">getLat</name><argument_list pos:start="728:81" pos:end="728:82">()</argument_list></call> <operator pos:start="728:84" pos:end="728:84">*</operator> <literal type="number" pos:start="728:86" pos:end="728:93">1000000d</literal></expr></argument>)</argument_list></call> <operator pos:start="728:96" pos:end="728:96">/</operator> <literal type="number" pos:start="728:98" pos:end="728:105">1000000d</literal> <operator pos:start="728:107" pos:end="728:108">==</operator> <operator pos:start="728:110" pos:end="728:110">(</operator><name pos:start="728:111" pos:end="728:116">double</name><operator pos:start="728:117" pos:end="728:117">)</operator><call pos:start="728:118" pos:end="728:172"><name pos:start="728:118" pos:end="728:127"><name pos:start="728:118" pos:end="728:121">Math</name><operator pos:start="728:122" pos:end="728:122">.</operator><name pos:start="728:123" pos:end="728:127">round</name></name><argument_list pos:start="728:128" pos:end="728:172">(<argument pos:start="728:129" pos:end="728:171"><expr pos:start="728:129" pos:end="728:171"><call pos:start="728:129" pos:end="728:148"><name pos:start="728:129" pos:end="728:146"><name pos:start="728:129" pos:end="728:136">polyline</name><operator pos:start="728:137" pos:end="728:137">.</operator><name pos:start="728:138" pos:end="728:146">getPoints</name></name><argument_list pos:start="728:147" pos:end="728:148">()</argument_list></call><index pos:start="728:149" pos:end="728:151">[<expr pos:start="728:150" pos:end="728:150"><literal type="number" pos:start="728:150" pos:end="728:150">0</literal></expr>]</index><operator pos:start="728:152" pos:end="728:152">.</operator><call pos:start="728:153" pos:end="728:160"><name pos:start="728:153" pos:end="728:158">getLat</name><argument_list pos:start="728:159" pos:end="728:160">()</argument_list></call> <operator pos:start="728:162" pos:end="728:162">*</operator> <literal type="number" pos:start="728:164" pos:end="728:171">1000000d</literal></expr></argument>)</argument_list></call> <operator pos:start="728:174" pos:end="728:174">/</operator> <literal type="number" pos:start="728:176" pos:end="728:183">1000000d</literal><operator pos:start="728:184" pos:end="728:184">)</operator>
			<operator pos:start="729:25" pos:end="729:26">&amp;&amp;</operator> <operator pos:start="729:28" pos:end="729:28">(</operator><operator pos:start="729:29" pos:end="729:29">(</operator><name pos:start="729:30" pos:end="729:35">double</name><operator pos:start="729:36" pos:end="729:36">)</operator><call pos:start="729:37" pos:end="729:92"><name pos:start="729:37" pos:end="729:46"><name pos:start="729:37" pos:end="729:40">Math</name><operator pos:start="729:41" pos:end="729:41">.</operator><name pos:start="729:42" pos:end="729:46">round</name></name><argument_list pos:start="729:47" pos:end="729:92">(<argument pos:start="729:48" pos:end="729:91"><expr pos:start="729:48" pos:end="729:91"><call pos:start="729:48" pos:end="729:68"><name pos:start="729:48" pos:end="729:66"><name pos:start="729:48" pos:end="729:56">lineToAdd</name><operator pos:start="729:57" pos:end="729:57">.</operator><name pos:start="729:58" pos:end="729:66">getPoints</name></name><argument_list pos:start="729:67" pos:end="729:68">()</argument_list></call><index pos:start="729:69" pos:end="729:71">[<expr pos:start="729:70" pos:end="729:70"><literal type="number" pos:start="729:70" pos:end="729:70">0</literal></expr>]</index><operator pos:start="729:72" pos:end="729:72">.</operator><call pos:start="729:73" pos:end="729:80"><name pos:start="729:73" pos:end="729:78">getLon</name><argument_list pos:start="729:79" pos:end="729:80">()</argument_list></call> <operator pos:start="729:82" pos:end="729:82">*</operator> <literal type="number" pos:start="729:84" pos:end="729:91">1000000d</literal></expr></argument>)</argument_list></call> <operator pos:start="729:94" pos:end="729:94">/</operator> <literal type="number" pos:start="729:96" pos:end="729:103">1000000d</literal> <operator pos:start="729:105" pos:end="729:106">==</operator> <operator pos:start="729:108" pos:end="729:108">(</operator><name pos:start="729:109" pos:end="729:114">double</name><operator pos:start="729:115" pos:end="729:115">)</operator><call pos:start="729:116" pos:end="729:170"><name pos:start="729:116" pos:end="729:125"><name pos:start="729:116" pos:end="729:119">Math</name><operator pos:start="729:120" pos:end="729:120">.</operator><name pos:start="729:121" pos:end="729:125">round</name></name><argument_list pos:start="729:126" pos:end="729:170">(<argument pos:start="729:127" pos:end="729:169"><expr pos:start="729:127" pos:end="729:169"><call pos:start="729:127" pos:end="729:146"><name pos:start="729:127" pos:end="729:144"><name pos:start="729:127" pos:end="729:134">polyline</name><operator pos:start="729:135" pos:end="729:135">.</operator><name pos:start="729:136" pos:end="729:144">getPoints</name></name><argument_list pos:start="729:145" pos:end="729:146">()</argument_list></call><index pos:start="729:147" pos:end="729:149">[<expr pos:start="729:148" pos:end="729:148"><literal type="number" pos:start="729:148" pos:end="729:148">0</literal></expr>]</index><operator pos:start="729:150" pos:end="729:150">.</operator><call pos:start="729:151" pos:end="729:158"><name pos:start="729:151" pos:end="729:156">getLon</name><argument_list pos:start="729:157" pos:end="729:158">()</argument_list></call> <operator pos:start="729:160" pos:end="729:160">*</operator> <literal type="number" pos:start="729:162" pos:end="729:169">1000000d</literal></expr></argument>)</argument_list></call> <operator pos:start="729:172" pos:end="729:172">/</operator> <literal type="number" pos:start="729:174" pos:end="729:181">1000000d</literal><operator pos:start="729:182" pos:end="729:182">)</operator>
			<operator pos:start="730:25" pos:end="730:26">&amp;&amp;</operator> <operator pos:start="730:28" pos:end="730:28">(</operator><operator pos:start="730:29" pos:end="730:29">(</operator><name pos:start="730:30" pos:end="730:35">double</name><operator pos:start="730:36" pos:end="730:36">)</operator><call pos:start="730:37" pos:end="730:92"><name pos:start="730:37" pos:end="730:46"><name pos:start="730:37" pos:end="730:40">Math</name><operator pos:start="730:41" pos:end="730:41">.</operator><name pos:start="730:42" pos:end="730:46">round</name></name><argument_list pos:start="730:47" pos:end="730:92">(<argument pos:start="730:48" pos:end="730:91"><expr pos:start="730:48" pos:end="730:91"><call pos:start="730:48" pos:end="730:68"><name pos:start="730:48" pos:end="730:66"><name pos:start="730:48" pos:end="730:56">lineToAdd</name><operator pos:start="730:57" pos:end="730:57">.</operator><name pos:start="730:58" pos:end="730:66">getPoints</name></name><argument_list pos:start="730:67" pos:end="730:68">()</argument_list></call><index pos:start="730:69" pos:end="730:71">[<expr pos:start="730:70" pos:end="730:70"><literal type="number" pos:start="730:70" pos:end="730:70">1</literal></expr>]</index><operator pos:start="730:72" pos:end="730:72">.</operator><call pos:start="730:73" pos:end="730:80"><name pos:start="730:73" pos:end="730:78">getLat</name><argument_list pos:start="730:79" pos:end="730:80">()</argument_list></call> <operator pos:start="730:82" pos:end="730:82">*</operator> <literal type="number" pos:start="730:84" pos:end="730:91">1000000d</literal></expr></argument>)</argument_list></call> <operator pos:start="730:94" pos:end="730:94">/</operator> <literal type="number" pos:start="730:96" pos:end="730:103">1000000d</literal> <operator pos:start="730:105" pos:end="730:106">==</operator> <operator pos:start="730:108" pos:end="730:108">(</operator><name pos:start="730:109" pos:end="730:114">double</name><operator pos:start="730:115" pos:end="730:115">)</operator><call pos:start="730:116" pos:end="730:170"><name pos:start="730:116" pos:end="730:125"><name pos:start="730:116" pos:end="730:119">Math</name><operator pos:start="730:120" pos:end="730:120">.</operator><name pos:start="730:121" pos:end="730:125">round</name></name><argument_list pos:start="730:126" pos:end="730:170">(<argument pos:start="730:127" pos:end="730:169"><expr pos:start="730:127" pos:end="730:169"><call pos:start="730:127" pos:end="730:146"><name pos:start="730:127" pos:end="730:144"><name pos:start="730:127" pos:end="730:134">polyline</name><operator pos:start="730:135" pos:end="730:135">.</operator><name pos:start="730:136" pos:end="730:144">getPoints</name></name><argument_list pos:start="730:145" pos:end="730:146">()</argument_list></call><index pos:start="730:147" pos:end="730:149">[<expr pos:start="730:148" pos:end="730:148"><literal type="number" pos:start="730:148" pos:end="730:148">1</literal></expr>]</index><operator pos:start="730:150" pos:end="730:150">.</operator><call pos:start="730:151" pos:end="730:158"><name pos:start="730:151" pos:end="730:156">getLat</name><argument_list pos:start="730:157" pos:end="730:158">()</argument_list></call> <operator pos:start="730:160" pos:end="730:160">*</operator> <literal type="number" pos:start="730:162" pos:end="730:169">1000000d</literal></expr></argument>)</argument_list></call> <operator pos:start="730:172" pos:end="730:172">/</operator> <literal type="number" pos:start="730:174" pos:end="730:181">1000000d</literal><operator pos:start="730:182" pos:end="730:182">)</operator>
			<operator pos:start="731:25" pos:end="731:26">&amp;&amp;</operator> <operator pos:start="731:28" pos:end="731:28">(</operator><operator pos:start="731:29" pos:end="731:29">(</operator><name pos:start="731:30" pos:end="731:35">double</name><operator pos:start="731:36" pos:end="731:36">)</operator><call pos:start="731:37" pos:end="731:92"><name pos:start="731:37" pos:end="731:46"><name pos:start="731:37" pos:end="731:40">Math</name><operator pos:start="731:41" pos:end="731:41">.</operator><name pos:start="731:42" pos:end="731:46">round</name></name><argument_list pos:start="731:47" pos:end="731:92">(<argument pos:start="731:48" pos:end="731:91"><expr pos:start="731:48" pos:end="731:91"><call pos:start="731:48" pos:end="731:68"><name pos:start="731:48" pos:end="731:66"><name pos:start="731:48" pos:end="731:56">lineToAdd</name><operator pos:start="731:57" pos:end="731:57">.</operator><name pos:start="731:58" pos:end="731:66">getPoints</name></name><argument_list pos:start="731:67" pos:end="731:68">()</argument_list></call><index pos:start="731:69" pos:end="731:71">[<expr pos:start="731:70" pos:end="731:70"><literal type="number" pos:start="731:70" pos:end="731:70">1</literal></expr>]</index><operator pos:start="731:72" pos:end="731:72">.</operator><call pos:start="731:73" pos:end="731:80"><name pos:start="731:73" pos:end="731:78">getLon</name><argument_list pos:start="731:79" pos:end="731:80">()</argument_list></call> <operator pos:start="731:82" pos:end="731:82">*</operator> <literal type="number" pos:start="731:84" pos:end="731:91">1000000d</literal></expr></argument>)</argument_list></call> <operator pos:start="731:94" pos:end="731:94">/</operator> <literal type="number" pos:start="731:96" pos:end="731:103">1000000d</literal> <operator pos:start="731:105" pos:end="731:106">==</operator> <operator pos:start="731:108" pos:end="731:108">(</operator><name pos:start="731:109" pos:end="731:114">double</name><operator pos:start="731:115" pos:end="731:115">)</operator><call pos:start="731:116" pos:end="731:170"><name pos:start="731:116" pos:end="731:125"><name pos:start="731:116" pos:end="731:119">Math</name><operator pos:start="731:120" pos:end="731:120">.</operator><name pos:start="731:121" pos:end="731:125">round</name></name><argument_list pos:start="731:126" pos:end="731:170">(<argument pos:start="731:127" pos:end="731:169"><expr pos:start="731:127" pos:end="731:169"><call pos:start="731:127" pos:end="731:146"><name pos:start="731:127" pos:end="731:144"><name pos:start="731:127" pos:end="731:134">polyline</name><operator pos:start="731:135" pos:end="731:135">.</operator><name pos:start="731:136" pos:end="731:144">getPoints</name></name><argument_list pos:start="731:145" pos:end="731:146">()</argument_list></call><index pos:start="731:147" pos:end="731:149">[<expr pos:start="731:148" pos:end="731:148"><literal type="number" pos:start="731:148" pos:end="731:148">1</literal></expr>]</index><operator pos:start="731:150" pos:end="731:150">.</operator><call pos:start="731:151" pos:end="731:158"><name pos:start="731:151" pos:end="731:156">getLon</name><argument_list pos:start="731:157" pos:end="731:158">()</argument_list></call> <operator pos:start="731:160" pos:end="731:160">*</operator> <literal type="number" pos:start="731:162" pos:end="731:169">1000000d</literal></expr></argument>)</argument_list></call> <operator pos:start="731:172" pos:end="731:172">/</operator> <literal type="number" pos:start="731:174" pos:end="731:181">1000000d</literal><operator pos:start="731:182" pos:end="731:182">)</operator><operator pos:start="731:183" pos:end="731:183">)</operator> 
			<operator pos:start="732:25" pos:end="732:26">||</operator> <operator pos:start="732:28" pos:end="732:28">(</operator><operator pos:start="732:29" pos:end="732:29">(</operator><operator pos:start="732:30" pos:end="732:30">(</operator><name pos:start="732:31" pos:end="732:36">double</name><operator pos:start="732:37" pos:end="732:37">)</operator><call pos:start="732:38" pos:end="732:93"><name pos:start="732:38" pos:end="732:47"><name pos:start="732:38" pos:end="732:41">Math</name><operator pos:start="732:42" pos:end="732:42">.</operator><name pos:start="732:43" pos:end="732:47">round</name></name><argument_list pos:start="732:48" pos:end="732:93">(<argument pos:start="732:49" pos:end="732:92"><expr pos:start="732:49" pos:end="732:92"><call pos:start="732:49" pos:end="732:69"><name pos:start="732:49" pos:end="732:67"><name pos:start="732:49" pos:end="732:57">lineToAdd</name><operator pos:start="732:58" pos:end="732:58">.</operator><name pos:start="732:59" pos:end="732:67">getPoints</name></name><argument_list pos:start="732:68" pos:end="732:69">()</argument_list></call><index pos:start="732:70" pos:end="732:72">[<expr pos:start="732:71" pos:end="732:71"><literal type="number" pos:start="732:71" pos:end="732:71">0</literal></expr>]</index><operator pos:start="732:73" pos:end="732:73">.</operator><call pos:start="732:74" pos:end="732:81"><name pos:start="732:74" pos:end="732:79">getLat</name><argument_list pos:start="732:80" pos:end="732:81">()</argument_list></call> <operator pos:start="732:83" pos:end="732:83">*</operator> <literal type="number" pos:start="732:85" pos:end="732:92">1000000d</literal></expr></argument>)</argument_list></call> <operator pos:start="732:95" pos:end="732:95">/</operator> <literal type="number" pos:start="732:97" pos:end="732:104">1000000d</literal> <operator pos:start="732:106" pos:end="732:107">==</operator> <operator pos:start="732:109" pos:end="732:109">(</operator><name pos:start="732:110" pos:end="732:115">double</name><operator pos:start="732:116" pos:end="732:116">)</operator><call pos:start="732:117" pos:end="732:171"><name pos:start="732:117" pos:end="732:126"><name pos:start="732:117" pos:end="732:120">Math</name><operator pos:start="732:121" pos:end="732:121">.</operator><name pos:start="732:122" pos:end="732:126">round</name></name><argument_list pos:start="732:127" pos:end="732:171">(<argument pos:start="732:128" pos:end="732:170"><expr pos:start="732:128" pos:end="732:170"><call pos:start="732:128" pos:end="732:147"><name pos:start="732:128" pos:end="732:145"><name pos:start="732:128" pos:end="732:135">polyline</name><operator pos:start="732:136" pos:end="732:136">.</operator><name pos:start="732:137" pos:end="732:145">getPoints</name></name><argument_list pos:start="732:146" pos:end="732:147">()</argument_list></call><index pos:start="732:148" pos:end="732:150">[<expr pos:start="732:149" pos:end="732:149"><literal type="number" pos:start="732:149" pos:end="732:149">1</literal></expr>]</index><operator pos:start="732:151" pos:end="732:151">.</operator><call pos:start="732:152" pos:end="732:159"><name pos:start="732:152" pos:end="732:157">getLat</name><argument_list pos:start="732:158" pos:end="732:159">()</argument_list></call> <operator pos:start="732:161" pos:end="732:161">*</operator> <literal type="number" pos:start="732:163" pos:end="732:170">1000000d</literal></expr></argument>)</argument_list></call> <operator pos:start="732:173" pos:end="732:173">/</operator> <literal type="number" pos:start="732:175" pos:end="732:182">1000000d</literal><operator pos:start="732:183" pos:end="732:183">)</operator>
			<operator pos:start="733:25" pos:end="733:26">&amp;&amp;</operator> <operator pos:start="733:28" pos:end="733:28">(</operator><operator pos:start="733:29" pos:end="733:29">(</operator><name pos:start="733:30" pos:end="733:35">double</name><operator pos:start="733:36" pos:end="733:36">)</operator><call pos:start="733:37" pos:end="733:92"><name pos:start="733:37" pos:end="733:46"><name pos:start="733:37" pos:end="733:40">Math</name><operator pos:start="733:41" pos:end="733:41">.</operator><name pos:start="733:42" pos:end="733:46">round</name></name><argument_list pos:start="733:47" pos:end="733:92">(<argument pos:start="733:48" pos:end="733:91"><expr pos:start="733:48" pos:end="733:91"><call pos:start="733:48" pos:end="733:68"><name pos:start="733:48" pos:end="733:66"><name pos:start="733:48" pos:end="733:56">lineToAdd</name><operator pos:start="733:57" pos:end="733:57">.</operator><name pos:start="733:58" pos:end="733:66">getPoints</name></name><argument_list pos:start="733:67" pos:end="733:68">()</argument_list></call><index pos:start="733:69" pos:end="733:71">[<expr pos:start="733:70" pos:end="733:70"><literal type="number" pos:start="733:70" pos:end="733:70">0</literal></expr>]</index><operator pos:start="733:72" pos:end="733:72">.</operator><call pos:start="733:73" pos:end="733:80"><name pos:start="733:73" pos:end="733:78">getLon</name><argument_list pos:start="733:79" pos:end="733:80">()</argument_list></call> <operator pos:start="733:82" pos:end="733:82">*</operator> <literal type="number" pos:start="733:84" pos:end="733:91">1000000d</literal></expr></argument>)</argument_list></call> <operator pos:start="733:94" pos:end="733:94">/</operator> <literal type="number" pos:start="733:96" pos:end="733:103">1000000d</literal> <operator pos:start="733:105" pos:end="733:106">==</operator> <operator pos:start="733:108" pos:end="733:108">(</operator><name pos:start="733:109" pos:end="733:114">double</name><operator pos:start="733:115" pos:end="733:115">)</operator><call pos:start="733:116" pos:end="733:170"><name pos:start="733:116" pos:end="733:125"><name pos:start="733:116" pos:end="733:119">Math</name><operator pos:start="733:120" pos:end="733:120">.</operator><name pos:start="733:121" pos:end="733:125">round</name></name><argument_list pos:start="733:126" pos:end="733:170">(<argument pos:start="733:127" pos:end="733:169"><expr pos:start="733:127" pos:end="733:169"><call pos:start="733:127" pos:end="733:146"><name pos:start="733:127" pos:end="733:144"><name pos:start="733:127" pos:end="733:134">polyline</name><operator pos:start="733:135" pos:end="733:135">.</operator><name pos:start="733:136" pos:end="733:144">getPoints</name></name><argument_list pos:start="733:145" pos:end="733:146">()</argument_list></call><index pos:start="733:147" pos:end="733:149">[<expr pos:start="733:148" pos:end="733:148"><literal type="number" pos:start="733:148" pos:end="733:148">1</literal></expr>]</index><operator pos:start="733:150" pos:end="733:150">.</operator><call pos:start="733:151" pos:end="733:158"><name pos:start="733:151" pos:end="733:156">getLon</name><argument_list pos:start="733:157" pos:end="733:158">()</argument_list></call> <operator pos:start="733:160" pos:end="733:160">*</operator> <literal type="number" pos:start="733:162" pos:end="733:169">1000000d</literal></expr></argument>)</argument_list></call> <operator pos:start="733:172" pos:end="733:172">/</operator> <literal type="number" pos:start="733:174" pos:end="733:181">1000000d</literal><operator pos:start="733:182" pos:end="733:182">)</operator>
			<operator pos:start="734:25" pos:end="734:26">&amp;&amp;</operator> <operator pos:start="734:28" pos:end="734:28">(</operator><operator pos:start="734:29" pos:end="734:29">(</operator><name pos:start="734:30" pos:end="734:35">double</name><operator pos:start="734:36" pos:end="734:36">)</operator><call pos:start="734:37" pos:end="734:92"><name pos:start="734:37" pos:end="734:46"><name pos:start="734:37" pos:end="734:40">Math</name><operator pos:start="734:41" pos:end="734:41">.</operator><name pos:start="734:42" pos:end="734:46">round</name></name><argument_list pos:start="734:47" pos:end="734:92">(<argument pos:start="734:48" pos:end="734:91"><expr pos:start="734:48" pos:end="734:91"><call pos:start="734:48" pos:end="734:68"><name pos:start="734:48" pos:end="734:66"><name pos:start="734:48" pos:end="734:56">lineToAdd</name><operator pos:start="734:57" pos:end="734:57">.</operator><name pos:start="734:58" pos:end="734:66">getPoints</name></name><argument_list pos:start="734:67" pos:end="734:68">()</argument_list></call><index pos:start="734:69" pos:end="734:71">[<expr pos:start="734:70" pos:end="734:70"><literal type="number" pos:start="734:70" pos:end="734:70">1</literal></expr>]</index><operator pos:start="734:72" pos:end="734:72">.</operator><call pos:start="734:73" pos:end="734:80"><name pos:start="734:73" pos:end="734:78">getLat</name><argument_list pos:start="734:79" pos:end="734:80">()</argument_list></call> <operator pos:start="734:82" pos:end="734:82">*</operator> <literal type="number" pos:start="734:84" pos:end="734:91">1000000d</literal></expr></argument>)</argument_list></call> <operator pos:start="734:94" pos:end="734:94">/</operator> <literal type="number" pos:start="734:96" pos:end="734:103">1000000d</literal> <operator pos:start="734:105" pos:end="734:106">==</operator> <operator pos:start="734:108" pos:end="734:108">(</operator><name pos:start="734:109" pos:end="734:114">double</name><operator pos:start="734:115" pos:end="734:115">)</operator><call pos:start="734:116" pos:end="734:170"><name pos:start="734:116" pos:end="734:125"><name pos:start="734:116" pos:end="734:119">Math</name><operator pos:start="734:120" pos:end="734:120">.</operator><name pos:start="734:121" pos:end="734:125">round</name></name><argument_list pos:start="734:126" pos:end="734:170">(<argument pos:start="734:127" pos:end="734:169"><expr pos:start="734:127" pos:end="734:169"><call pos:start="734:127" pos:end="734:146"><name pos:start="734:127" pos:end="734:144"><name pos:start="734:127" pos:end="734:134">polyline</name><operator pos:start="734:135" pos:end="734:135">.</operator><name pos:start="734:136" pos:end="734:144">getPoints</name></name><argument_list pos:start="734:145" pos:end="734:146">()</argument_list></call><index pos:start="734:147" pos:end="734:149">[<expr pos:start="734:148" pos:end="734:148"><literal type="number" pos:start="734:148" pos:end="734:148">0</literal></expr>]</index><operator pos:start="734:150" pos:end="734:150">.</operator><call pos:start="734:151" pos:end="734:158"><name pos:start="734:151" pos:end="734:156">getLat</name><argument_list pos:start="734:157" pos:end="734:158">()</argument_list></call> <operator pos:start="734:160" pos:end="734:160">*</operator> <literal type="number" pos:start="734:162" pos:end="734:169">1000000d</literal></expr></argument>)</argument_list></call> <operator pos:start="734:172" pos:end="734:172">/</operator> <literal type="number" pos:start="734:174" pos:end="734:181">1000000d</literal><operator pos:start="734:182" pos:end="734:182">)</operator>
			<operator pos:start="735:25" pos:end="735:26">&amp;&amp;</operator> <operator pos:start="735:28" pos:end="735:28">(</operator><operator pos:start="735:29" pos:end="735:29">(</operator><name pos:start="735:30" pos:end="735:35">double</name><operator pos:start="735:36" pos:end="735:36">)</operator><call pos:start="735:37" pos:end="735:92"><name pos:start="735:37" pos:end="735:46"><name pos:start="735:37" pos:end="735:40">Math</name><operator pos:start="735:41" pos:end="735:41">.</operator><name pos:start="735:42" pos:end="735:46">round</name></name><argument_list pos:start="735:47" pos:end="735:92">(<argument pos:start="735:48" pos:end="735:91"><expr pos:start="735:48" pos:end="735:91"><call pos:start="735:48" pos:end="735:68"><name pos:start="735:48" pos:end="735:66"><name pos:start="735:48" pos:end="735:56">lineToAdd</name><operator pos:start="735:57" pos:end="735:57">.</operator><name pos:start="735:58" pos:end="735:66">getPoints</name></name><argument_list pos:start="735:67" pos:end="735:68">()</argument_list></call><index pos:start="735:69" pos:end="735:71">[<expr pos:start="735:70" pos:end="735:70"><literal type="number" pos:start="735:70" pos:end="735:70">1</literal></expr>]</index><operator pos:start="735:72" pos:end="735:72">.</operator><call pos:start="735:73" pos:end="735:80"><name pos:start="735:73" pos:end="735:78">getLon</name><argument_list pos:start="735:79" pos:end="735:80">()</argument_list></call> <operator pos:start="735:82" pos:end="735:82">*</operator> <literal type="number" pos:start="735:84" pos:end="735:91">1000000d</literal></expr></argument>)</argument_list></call> <operator pos:start="735:94" pos:end="735:94">/</operator> <literal type="number" pos:start="735:96" pos:end="735:103">1000000d</literal> <operator pos:start="735:105" pos:end="735:106">==</operator> <operator pos:start="735:108" pos:end="735:108">(</operator><name pos:start="735:109" pos:end="735:114">double</name><operator pos:start="735:115" pos:end="735:115">)</operator><call pos:start="735:116" pos:end="735:170"><name pos:start="735:116" pos:end="735:125"><name pos:start="735:116" pos:end="735:119">Math</name><operator pos:start="735:120" pos:end="735:120">.</operator><name pos:start="735:121" pos:end="735:125">round</name></name><argument_list pos:start="735:126" pos:end="735:170">(<argument pos:start="735:127" pos:end="735:169"><expr pos:start="735:127" pos:end="735:169"><call pos:start="735:127" pos:end="735:146"><name pos:start="735:127" pos:end="735:144"><name pos:start="735:127" pos:end="735:134">polyline</name><operator pos:start="735:135" pos:end="735:135">.</operator><name pos:start="735:136" pos:end="735:144">getPoints</name></name><argument_list pos:start="735:145" pos:end="735:146">()</argument_list></call><index pos:start="735:147" pos:end="735:149">[<expr pos:start="735:148" pos:end="735:148"><literal type="number" pos:start="735:148" pos:end="735:148">0</literal></expr>]</index><operator pos:start="735:150" pos:end="735:150">.</operator><call pos:start="735:151" pos:end="735:158"><name pos:start="735:151" pos:end="735:156">getLon</name><argument_list pos:start="735:157" pos:end="735:158">()</argument_list></call> <operator pos:start="735:160" pos:end="735:160">*</operator> <literal type="number" pos:start="735:162" pos:end="735:169">1000000d</literal></expr></argument>)</argument_list></call> <operator pos:start="735:172" pos:end="735:172">/</operator> <literal type="number" pos:start="735:174" pos:end="735:181">1000000d</literal><operator pos:start="735:182" pos:end="735:182">)</operator><operator pos:start="735:183" pos:end="735:183">)</operator></expr>)</condition> <block pos:start="735:186" pos:end="738:25">{<block_content pos:start="736:33" pos:end="737:38">
				<expr_stmt pos:start="736:33" pos:end="736:63"><expr pos:start="736:33" pos:end="736:62"><name pos:start="736:33" pos:end="736:55">foundInAllPriorityLines</name> <operator pos:start="736:57" pos:end="736:57">=</operator> <literal type="boolean" pos:start="736:59" pos:end="736:62">true</literal></expr>;</expr_stmt>
				<break pos:start="737:33" pos:end="737:38">break;</break>
			</block_content>}</block></if></if_stmt></block_content></block></for>

		<comment type="line" pos:start="740:17" pos:end="740:49">// if not found, add the new line</comment>
		<if_stmt pos:start="741:17" pos:end="749:17"><if pos:start="741:17" pos:end="749:17">if <condition pos:start="741:20" pos:end="741:45">(<expr pos:start="741:21" pos:end="741:44"><operator pos:start="741:21" pos:end="741:21">!</operator><name pos:start="741:22" pos:end="741:44">foundInAllPriorityLines</name></expr>)</condition> <block pos:start="741:47" pos:end="749:17">{<block_content pos:start="742:25" pos:end="748:92">
			<expr_stmt pos:start="742:25" pos:end="742:54"><expr pos:start="742:25" pos:end="742:53"><call pos:start="742:25" pos:end="742:53"><name pos:start="742:25" pos:end="742:42"><name pos:start="742:25" pos:end="742:33">lineToAdd</name><operator pos:start="742:34" pos:end="742:34">.</operator><name pos:start="742:35" pos:end="742:42">setColor</name></name><argument_list pos:start="742:43" pos:end="742:53">(<argument pos:start="742:44" pos:end="742:52"><expr pos:start="742:44" pos:end="742:52"><literal type="string" pos:start="742:44" pos:end="742:52">"#ff5050"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt pos:start="743:25" pos:end="743:50"><expr pos:start="743:25" pos:end="743:49"><call pos:start="743:25" pos:end="743:49"><name pos:start="743:25" pos:end="743:44"><name pos:start="743:25" pos:end="743:33">lineToAdd</name><operator pos:start="743:34" pos:end="743:34">.</operator><name pos:start="743:35" pos:end="743:44">setOpacity</name></name><argument_list pos:start="743:45" pos:end="743:49">(<argument pos:start="743:46" pos:end="743:48"><expr pos:start="743:46" pos:end="743:48"><literal type="number" pos:start="743:46" pos:end="743:48">0.7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt pos:start="744:25" pos:end="744:60"><expr pos:start="744:25" pos:end="744:59"><call pos:start="744:25" pos:end="744:59"><name pos:start="744:25" pos:end="744:48"><name pos:start="744:25" pos:end="744:44">newPrioritySideLines</name><operator pos:start="744:45" pos:end="744:45">.</operator><name pos:start="744:46" pos:end="744:48">add</name></name><argument_list pos:start="744:49" pos:end="744:59">(<argument pos:start="744:50" pos:end="744:58"><expr pos:start="744:50" pos:end="744:58"><name pos:start="744:50" pos:end="744:58">lineToAdd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt pos:start="745:25" pos:end="745:56"><expr pos:start="745:25" pos:end="745:55"><call pos:start="745:25" pos:end="745:55"><name pos:start="745:25" pos:end="745:44"><name pos:start="745:25" pos:end="745:40">allPriorityLines</name><operator pos:start="745:41" pos:end="745:41">.</operator><name pos:start="745:42" pos:end="745:44">add</name></name><argument_list pos:start="745:45" pos:end="745:55">(<argument pos:start="745:46" pos:end="745:54"><expr pos:start="745:46" pos:end="745:54"><name pos:start="745:46" pos:end="745:54">lineToAdd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt pos:start="746:25" pos:end="746:52"><expr pos:start="746:25" pos:end="746:51"><call pos:start="746:25" pos:end="746:51"><name pos:start="746:25" pos:end="746:40"><name pos:start="746:25" pos:end="746:27">map</name><operator pos:start="746:28" pos:end="746:28">.</operator><name pos:start="746:29" pos:end="746:40">addComponent</name></name><argument_list pos:start="746:41" pos:end="746:51">(<argument pos:start="746:42" pos:end="746:50"><expr pos:start="746:42" pos:end="746:50"><name pos:start="746:42" pos:end="746:50">lineToAdd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt pos:start="747:25" pos:end="747:117"><expr pos:start="747:25" pos:end="747:116"><call pos:start="747:25" pos:end="747:116"><name pos:start="747:25" pos:end="747:54"><name pos:start="747:25" pos:end="747:33">lineToAdd</name><operator pos:start="747:34" pos:end="747:34">.</operator><name pos:start="747:35" pos:end="747:54">addMouseOverListener</name></name><argument_list pos:start="747:55" pos:end="747:116">(<argument pos:start="747:56" pos:end="747:115"><expr pos:start="747:56" pos:end="747:115"><operator pos:start="747:56" pos:end="747:58">new</operator> <call pos:start="747:60" pos:end="747:115"><name pos:start="747:60" pos:end="747:90">AMPrioritySideMouseOverListener</name><argument_list pos:start="747:91" pos:end="747:115">(<argument pos:start="747:92" pos:end="747:103"><expr pos:start="747:92" pos:end="747:103"><name pos:start="747:92" pos:end="747:103">mapComponent</name></expr></argument>, <argument pos:start="747:106" pos:end="747:114"><expr pos:start="747:106" pos:end="747:114"><name pos:start="747:106" pos:end="747:114">lineToAdd</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt pos:start="748:25" pos:end="748:92"><expr pos:start="748:25" pos:end="748:91"><call pos:start="748:25" pos:end="748:91"><name pos:start="748:25" pos:end="748:53"><name pos:start="748:25" pos:end="748:33">lineToAdd</name><operator pos:start="748:34" pos:end="748:34">.</operator><name pos:start="748:35" pos:end="748:53">addMouseOutListener</name></name><argument_list pos:start="748:54" pos:end="748:91">(<argument pos:start="748:55" pos:end="748:90"><expr pos:start="748:55" pos:end="748:90"><operator pos:start="748:55" pos:end="748:57">new</operator> <call pos:start="748:59" pos:end="748:90"><name pos:start="748:59" pos:end="748:84">AMPriorityMouseOutListener</name><argument_list pos:start="748:85" pos:end="748:90">(<argument pos:start="748:86" pos:end="748:89"><expr pos:start="748:86" pos:end="748:89"><name pos:start="748:86" pos:end="748:89">this</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		</block_content>}</block></if></if_stmt>
		<expr_stmt pos:start="750:17" pos:end="750:74"><expr pos:start="750:17" pos:end="750:73"><call pos:start="750:17" pos:end="750:73"><name pos:start="750:17" pos:end="750:71"><name pos:start="750:17" pos:end="750:37">polylineClickListener</name><operator pos:start="750:38" pos:end="750:38">.</operator><name pos:start="750:39" pos:end="750:71">resetPolylineIsClickedInThisEvent</name></name><argument_list pos:start="750:72" pos:end="750:73">()</argument_list></call></expr>;</expr_stmt>
	</block_content>}</block></function>
	
	<comment type="line" pos:start="753:9" pos:end="753:61">// adds the current priority side to allPrioritySides</comment>
	<function pos:start="754:9" pos:end="779:9"><type pos:start="754:9" pos:end="754:19"><specifier pos:start="754:9" pos:end="754:14">public</specifier> <name pos:start="754:16" pos:end="754:19">void</name></type> <name pos:start="754:21" pos:end="754:35">addPrioritySide</name><parameter_list pos:start="754:36" pos:end="754:95">(<parameter pos:start="754:37" pos:end="754:45"><decl pos:start="754:37" pos:end="754:45"><type pos:start="754:37" pos:end="754:45"><name pos:start="754:37" pos:end="754:42">String</name></type> <name pos:start="754:44" pos:end="754:45">id</name></decl></parameter>, <parameter pos:start="754:48" pos:end="754:58"><decl pos:start="754:48" pos:end="754:58"><type pos:start="754:48" pos:end="754:58"><name pos:start="754:48" pos:end="754:53">String</name></type> <name pos:start="754:55" pos:end="754:58">type</name></decl></parameter>, <parameter pos:start="754:61" pos:end="754:78"><decl pos:start="754:61" pos:end="754:78"><type pos:start="754:61" pos:end="754:78"><name pos:start="754:61" pos:end="754:66">String</name></type> <name pos:start="754:68" pos:end="754:78">description</name></decl></parameter>, <parameter pos:start="754:81" pos:end="754:94"><decl pos:start="754:81" pos:end="754:94"><type pos:start="754:81" pos:end="754:94"><name pos:start="754:81" pos:end="754:83">int</name></type> <name pos:start="754:85" pos:end="754:94">importance</name></decl></parameter>)</parameter_list> <block pos:start="754:97" pos:end="779:9">{<block_content pos:start="756:17" pos:end="778:45">
		<comment type="line" pos:start="755:17" pos:end="755:102">// return if no newPrioritySideLines or if the side already exists in allPrioritySides</comment>
		<if_stmt pos:start="756:17" pos:end="758:17"><if pos:start="756:17" pos:end="758:17">if <condition pos:start="756:20" pos:end="756:53">(<expr pos:start="756:21" pos:end="756:52"><call pos:start="756:21" pos:end="756:47"><name pos:start="756:21" pos:end="756:45"><name pos:start="756:21" pos:end="756:40">newPrioritySideLines</name><operator pos:start="756:41" pos:end="756:41">.</operator><name pos:start="756:42" pos:end="756:45">size</name></name><argument_list pos:start="756:46" pos:end="756:47">()</argument_list></call> <operator pos:start="756:49" pos:end="756:50">==</operator> <literal type="number" pos:start="756:52" pos:end="756:52">0</literal></expr>)</condition> <block pos:start="756:55" pos:end="758:17">{<block_content pos:start="757:25" pos:end="757:31">
			<return pos:start="757:25" pos:end="757:31">return;</return>
		</block_content>}</block></if></if_stmt>
		<for pos:start="759:17" pos:end="763:17">for <control pos:start="759:21" pos:end="759:58">(<init pos:start="759:22" pos:end="759:57"><decl pos:start="759:22" pos:end="759:57"><type pos:start="759:22" pos:end="759:33"><name pos:start="759:22" pos:end="759:33">PrioritySide</name></type> <name pos:start="759:35" pos:end="759:38">side</name> <range pos:start="759:40" pos:end="759:57">: <expr pos:start="759:42" pos:end="759:57"><name pos:start="759:42" pos:end="759:57">allPrioritySides</name></expr></range></decl></init>)</control> <block pos:start="759:60" pos:end="763:17">{<block_content pos:start="760:25" pos:end="762:25">
			<if_stmt pos:start="760:25" pos:end="762:25"><if pos:start="760:25" pos:end="762:25">if <condition pos:start="760:28" pos:end="760:52">(<expr pos:start="760:29" pos:end="760:51"><call pos:start="760:29" pos:end="760:40"><name pos:start="760:29" pos:end="760:38"><name pos:start="760:29" pos:end="760:32">side</name><operator pos:start="760:33" pos:end="760:33">.</operator><name pos:start="760:34" pos:end="760:38">getId</name></name><argument_list pos:start="760:39" pos:end="760:40">()</argument_list></call><operator pos:start="760:41" pos:end="760:41">.</operator><call pos:start="760:42" pos:end="760:51"><name pos:start="760:42" pos:end="760:47">equals</name><argument_list pos:start="760:48" pos:end="760:51">(<argument pos:start="760:49" pos:end="760:50"><expr pos:start="760:49" pos:end="760:50"><name pos:start="760:49" pos:end="760:50">id</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="760:54" pos:end="762:25">{<block_content pos:start="761:33" pos:end="761:39">
				<return pos:start="761:33" pos:end="761:39">return;</return>
			</block_content>}</block></if></if_stmt>
		</block_content>}</block></for>

		<decl_stmt pos:start="765:17" pos:end="765:68"><decl pos:start="765:17" pos:end="765:67"><type pos:start="765:17" pos:end="765:28"><name pos:start="765:17" pos:end="765:28">PrioritySide</name></type> <name pos:start="765:30" pos:end="765:44">newPrioritySide</name> <init pos:start="765:46" pos:end="765:67">= <expr pos:start="765:48" pos:end="765:67"><operator pos:start="765:48" pos:end="765:50">new</operator> <call pos:start="765:52" pos:end="765:67"><name pos:start="765:52" pos:end="765:63">PrioritySide</name><argument_list pos:start="765:64" pos:end="765:67">(<argument pos:start="765:65" pos:end="765:66"><expr pos:start="765:65" pos:end="765:66"><name pos:start="765:65" pos:end="765:66">id</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt pos:start="766:17" pos:end="766:46"><expr pos:start="766:17" pos:end="766:45"><call pos:start="766:17" pos:end="766:45"><name pos:start="766:17" pos:end="766:39"><name pos:start="766:17" pos:end="766:31">newPrioritySide</name><operator pos:start="766:32" pos:end="766:32">.</operator><name pos:start="766:33" pos:end="766:39">setType</name></name><argument_list pos:start="766:40" pos:end="766:45">(<argument pos:start="766:41" pos:end="766:44"><expr pos:start="766:41" pos:end="766:44"><name pos:start="766:41" pos:end="766:44">type</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt pos:start="767:17" pos:end="767:60"><expr pos:start="767:17" pos:end="767:59"><call pos:start="767:17" pos:end="767:59"><name pos:start="767:17" pos:end="767:46"><name pos:start="767:17" pos:end="767:31">newPrioritySide</name><operator pos:start="767:32" pos:end="767:32">.</operator><name pos:start="767:33" pos:end="767:46">setDescription</name></name><argument_list pos:start="767:47" pos:end="767:59">(<argument pos:start="767:48" pos:end="767:58"><expr pos:start="767:48" pos:end="767:58"><name pos:start="767:48" pos:end="767:58">description</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt pos:start="768:17" pos:end="768:58"><expr pos:start="768:17" pos:end="768:57"><call pos:start="768:17" pos:end="768:57"><name pos:start="768:17" pos:end="768:45"><name pos:start="768:17" pos:end="768:31">newPrioritySide</name><operator pos:start="768:32" pos:end="768:32">.</operator><name pos:start="768:33" pos:end="768:45">setImportance</name></name><argument_list pos:start="768:46" pos:end="768:57">(<argument pos:start="768:47" pos:end="768:56"><expr pos:start="768:47" pos:end="768:56"><name pos:start="768:47" pos:end="768:56">importance</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<comment type="line" pos:start="769:17" pos:end="769:75">// add all coords belonging the lines to the list of coords</comment>
		<for pos:start="770:17" pos:end="775:17">for <control pos:start="770:21" pos:end="770:59">(<init pos:start="770:22" pos:end="770:58"><decl pos:start="770:22" pos:end="770:58"><type pos:start="770:22" pos:end="770:30"><name pos:start="770:22" pos:end="770:30">LPolyline</name></type> <name pos:start="770:32" pos:end="770:35">line</name> <range pos:start="770:37" pos:end="770:58">: <expr pos:start="770:39" pos:end="770:58"><name pos:start="770:39" pos:end="770:58">newPrioritySideLines</name></expr></range></decl></init>)</control> <block pos:start="770:61" pos:end="775:17">{<block_content pos:start="771:25" pos:end="774:25">
			<for pos:start="771:25" pos:end="774:25">for <control pos:start="771:29" pos:end="771:52">(<init pos:start="771:30" pos:end="771:39"><decl pos:start="771:30" pos:end="771:38"><type pos:start="771:30" pos:end="771:32"><name pos:start="771:30" pos:end="771:32">int</name></type> <name pos:start="771:34" pos:end="771:34">i</name> <init pos:start="771:36" pos:end="771:38">= <expr pos:start="771:38" pos:end="771:38"><literal type="number" pos:start="771:38" pos:end="771:38">0</literal></expr></init></decl>;</init> <condition pos:start="771:41" pos:end="771:47"><expr pos:start="771:41" pos:end="771:46"><name pos:start="771:41" pos:end="771:41">i</name> <operator pos:start="771:43" pos:end="771:44">&lt;=</operator> <literal type="number" pos:start="771:46" pos:end="771:46">1</literal></expr>;</condition> <incr pos:start="771:49" pos:end="771:51"><expr pos:start="771:49" pos:end="771:51"><name pos:start="771:49" pos:end="771:49">i</name><operator pos:start="771:50" pos:end="771:51">++</operator></expr></incr>)</control> <block pos:start="771:54" pos:end="774:25">{<block_content pos:start="772:33" pos:end="773:73">
				<decl_stmt pos:start="772:33" pos:end="772:139"><decl pos:start="772:33" pos:end="772:138"><type pos:start="772:33" pos:end="772:45"><name pos:start="772:33" pos:end="772:45">LlaCoordinate</name></type> <name pos:start="772:47" pos:end="772:55">currCoord</name> <init pos:start="772:57" pos:end="772:138">= <expr pos:start="772:59" pos:end="772:138"><operator pos:start="772:59" pos:end="772:61">new</operator> <call pos:start="772:63" pos:end="772:138"><name pos:start="772:63" pos:end="772:75">LlaCoordinate</name><argument_list pos:start="772:76" pos:end="772:138">(<argument pos:start="772:77" pos:end="772:104"><expr pos:start="772:77" pos:end="772:104"><call pos:start="772:77" pos:end="772:92"><name pos:start="772:77" pos:end="772:90"><name pos:start="772:77" pos:end="772:80">line</name><operator pos:start="772:81" pos:end="772:81">.</operator><name pos:start="772:82" pos:end="772:90">getPoints</name></name><argument_list pos:start="772:91" pos:end="772:92">()</argument_list></call><index pos:start="772:93" pos:end="772:95">[<expr pos:start="772:94" pos:end="772:94"><name pos:start="772:94" pos:end="772:94">i</name></expr>]</index><operator pos:start="772:96" pos:end="772:96">.</operator><call pos:start="772:97" pos:end="772:104"><name pos:start="772:97" pos:end="772:102">getLat</name><argument_list pos:start="772:103" pos:end="772:104">()</argument_list></call></expr></argument>, <argument pos:start="772:107" pos:end="772:134"><expr pos:start="772:107" pos:end="772:134"><call pos:start="772:107" pos:end="772:122"><name pos:start="772:107" pos:end="772:120"><name pos:start="772:107" pos:end="772:110">line</name><operator pos:start="772:111" pos:end="772:111">.</operator><name pos:start="772:112" pos:end="772:120">getPoints</name></name><argument_list pos:start="772:121" pos:end="772:122">()</argument_list></call><index pos:start="772:123" pos:end="772:125">[<expr pos:start="772:124" pos:end="772:124"><name pos:start="772:124" pos:end="772:124">i</name></expr>]</index><operator pos:start="772:126" pos:end="772:126">.</operator><call pos:start="772:127" pos:end="772:134"><name pos:start="772:127" pos:end="772:132">getLon</name><argument_list pos:start="772:133" pos:end="772:134">()</argument_list></call></expr></argument>, <argument pos:start="772:137" pos:end="772:137"><expr pos:start="772:137" pos:end="772:137"><literal type="number" pos:start="772:137" pos:end="772:137">0</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
				<expr_stmt pos:start="773:33" pos:end="773:73"><expr pos:start="773:33" pos:end="773:72"><call pos:start="773:33" pos:end="773:72"><name pos:start="773:33" pos:end="773:61"><name pos:start="773:33" pos:end="773:47">newPrioritySide</name><operator pos:start="773:48" pos:end="773:48">.</operator><name pos:start="773:49" pos:end="773:61">addCoordinate</name></name><argument_list pos:start="773:62" pos:end="773:72">(<argument pos:start="773:63" pos:end="773:71"><expr pos:start="773:63" pos:end="773:71"><name pos:start="773:63" pos:end="773:71">currCoord</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			</block_content>}</block></for>
		</block_content>}</block></for>

		<expr_stmt pos:start="777:17" pos:end="777:54"><expr pos:start="777:17" pos:end="777:53"><call pos:start="777:17" pos:end="777:53"><name pos:start="777:17" pos:end="777:36"><name pos:start="777:17" pos:end="777:32">allPrioritySides</name><operator pos:start="777:33" pos:end="777:33">.</operator><name pos:start="777:34" pos:end="777:36">add</name></name><argument_list pos:start="777:37" pos:end="777:53">(<argument pos:start="777:38" pos:end="777:52"><expr pos:start="777:38" pos:end="777:52"><name pos:start="777:38" pos:end="777:52">newPrioritySide</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt pos:start="778:17" pos:end="778:45"><expr pos:start="778:17" pos:end="778:44"><call pos:start="778:17" pos:end="778:44"><name pos:start="778:17" pos:end="778:42"><name pos:start="778:17" pos:end="778:36">newPrioritySideLines</name><operator pos:start="778:37" pos:end="778:37">.</operator><name pos:start="778:38" pos:end="778:42">clear</name></name><argument_list pos:start="778:43" pos:end="778:44">()</argument_list></call></expr>;</expr_stmt>
	</block_content>}</block></function>
	
	<comment type="line" pos:start="781:9" pos:end="781:58">// used to add a full side when creating a sub-map</comment>
	<function pos:start="782:9" pos:end="801:9"><type pos:start="782:9" pos:end="782:19"><specifier pos:start="782:9" pos:end="782:14">public</specifier> <name pos:start="782:16" pos:end="782:19">void</name></type> <name pos:start="782:21" pos:end="782:35">addPrioritySide</name><parameter_list pos:start="782:36" pos:end="782:54">(<parameter pos:start="782:37" pos:end="782:53"><decl pos:start="782:37" pos:end="782:53"><type pos:start="782:37" pos:end="782:48"><name pos:start="782:37" pos:end="782:48">PrioritySide</name></type> <name pos:start="782:50" pos:end="782:53">side</name></decl></parameter>)</parameter_list> <block pos:start="782:56" pos:end="801:9">{<block_content pos:start="783:17" pos:end="800:107">
		<for pos:start="783:17" pos:end="799:17">for <control pos:start="783:21" pos:end="783:74">(<init pos:start="783:22" pos:end="783:31"><decl pos:start="783:22" pos:end="783:30"><type pos:start="783:22" pos:end="783:24"><name pos:start="783:22" pos:end="783:24">int</name></type> <name pos:start="783:26" pos:end="783:26">j</name> <init pos:start="783:28" pos:end="783:30">= <expr pos:start="783:30" pos:end="783:30"><literal type="number" pos:start="783:30" pos:end="783:30">0</literal></expr></init></decl>;</init> <condition pos:start="783:33" pos:end="783:69"><expr pos:start="783:33" pos:end="783:68"><name pos:start="783:33" pos:end="783:33">j</name> <operator pos:start="783:35" pos:end="783:35">&lt;</operator> <call pos:start="783:37" pos:end="783:57"><name pos:start="783:37" pos:end="783:55"><name pos:start="783:37" pos:end="783:40">side</name><operator pos:start="783:41" pos:end="783:41">.</operator><name pos:start="783:42" pos:end="783:55">getCoordinates</name></name><argument_list pos:start="783:56" pos:end="783:57">()</argument_list></call><operator pos:start="783:58" pos:end="783:58">.</operator><call pos:start="783:59" pos:end="783:64"><name pos:start="783:59" pos:end="783:62">size</name><argument_list pos:start="783:63" pos:end="783:64">()</argument_list></call> <operator pos:start="783:66" pos:end="783:66">-</operator> <literal type="number" pos:start="783:68" pos:end="783:68">1</literal></expr>;</condition> <incr pos:start="783:71" pos:end="783:73"><expr pos:start="783:71" pos:end="783:73"><name pos:start="783:71" pos:end="783:71">j</name><operator pos:start="783:72" pos:end="783:73">++</operator></expr></incr>)</control> <block pos:start="783:76" pos:end="799:17">{<block_content pos:start="785:25" pos:end="798:25">
			<comment type="line" pos:start="784:25" pos:end="784:66">// find line that connects two coordinates</comment>
			<for pos:start="785:25" pos:end="798:25">for <control pos:start="785:29" pos:end="785:66">(<init pos:start="785:30" pos:end="785:65"><decl pos:start="785:30" pos:end="785:65"><type pos:start="785:30" pos:end="785:38"><name pos:start="785:30" pos:end="785:38">LPolyline</name></type> <name pos:start="785:40" pos:end="785:43">line</name> <range pos:start="785:45" pos:end="785:65">: <expr pos:start="785:47" pos:end="785:65"><call pos:start="785:47" pos:end="785:65"><name pos:start="785:47" pos:end="785:63"><name pos:start="785:47" pos:end="785:50">this</name><operator pos:start="785:51" pos:end="785:51">.</operator><name pos:start="785:52" pos:end="785:63">getPolylines</name></name><argument_list pos:start="785:64" pos:end="785:65">()</argument_list></call></expr></range></decl></init>)</control> <block pos:start="785:68" pos:end="798:25">{<block_content pos:start="786:33" pos:end="797:33">
				<decl_stmt pos:start="786:33" pos:end="786:130"><decl pos:start="786:33" pos:end="786:129"><type pos:start="786:33" pos:end="786:38"><name pos:start="786:33" pos:end="786:38">double</name></type> <name pos:start="786:40" pos:end="786:56">latPolylinePoint1</name> <init pos:start="786:58" pos:end="786:129">= <expr pos:start="786:60" pos:end="786:129"><operator pos:start="786:60" pos:end="786:60">(</operator><name pos:start="786:61" pos:end="786:66">double</name><operator pos:start="786:67" pos:end="786:67">)</operator><call pos:start="786:68" pos:end="786:118"><name pos:start="786:68" pos:end="786:77"><name pos:start="786:68" pos:end="786:71">Math</name><operator pos:start="786:72" pos:end="786:72">.</operator><name pos:start="786:73" pos:end="786:77">round</name></name><argument_list pos:start="786:78" pos:end="786:118">(<argument pos:start="786:79" pos:end="786:117"><expr pos:start="786:79" pos:end="786:117"><call pos:start="786:79" pos:end="786:94"><name pos:start="786:79" pos:end="786:92"><name pos:start="786:79" pos:end="786:82">line</name><operator pos:start="786:83" pos:end="786:83">.</operator><name pos:start="786:84" pos:end="786:92">getPoints</name></name><argument_list pos:start="786:93" pos:end="786:94">()</argument_list></call><index pos:start="786:95" pos:end="786:97">[<expr pos:start="786:96" pos:end="786:96"><literal type="number" pos:start="786:96" pos:end="786:96">0</literal></expr>]</index><operator pos:start="786:98" pos:end="786:98">.</operator><call pos:start="786:99" pos:end="786:106"><name pos:start="786:99" pos:end="786:104">getLat</name><argument_list pos:start="786:105" pos:end="786:106">()</argument_list></call> <operator pos:start="786:108" pos:end="786:108">*</operator> <literal type="number" pos:start="786:110" pos:end="786:117">1000000d</literal></expr></argument>)</argument_list></call> <operator pos:start="786:120" pos:end="786:120">/</operator> <literal type="number" pos:start="786:122" pos:end="786:129">1000000d</literal></expr></init></decl>;</decl_stmt>
				<decl_stmt pos:start="787:33" pos:end="787:130"><decl pos:start="787:33" pos:end="787:129"><type pos:start="787:33" pos:end="787:38"><name pos:start="787:33" pos:end="787:38">double</name></type> <name pos:start="787:40" pos:end="787:56">lonPolylinePoint1</name> <init pos:start="787:58" pos:end="787:129">= <expr pos:start="787:60" pos:end="787:129"><operator pos:start="787:60" pos:end="787:60">(</operator><name pos:start="787:61" pos:end="787:66">double</name><operator pos:start="787:67" pos:end="787:67">)</operator><call pos:start="787:68" pos:end="787:118"><name pos:start="787:68" pos:end="787:77"><name pos:start="787:68" pos:end="787:71">Math</name><operator pos:start="787:72" pos:end="787:72">.</operator><name pos:start="787:73" pos:end="787:77">round</name></name><argument_list pos:start="787:78" pos:end="787:118">(<argument pos:start="787:79" pos:end="787:117"><expr pos:start="787:79" pos:end="787:117"><call pos:start="787:79" pos:end="787:94"><name pos:start="787:79" pos:end="787:92"><name pos:start="787:79" pos:end="787:82">line</name><operator pos:start="787:83" pos:end="787:83">.</operator><name pos:start="787:84" pos:end="787:92">getPoints</name></name><argument_list pos:start="787:93" pos:end="787:94">()</argument_list></call><index pos:start="787:95" pos:end="787:97">[<expr pos:start="787:96" pos:end="787:96"><literal type="number" pos:start="787:96" pos:end="787:96">0</literal></expr>]</index><operator pos:start="787:98" pos:end="787:98">.</operator><call pos:start="787:99" pos:end="787:106"><name pos:start="787:99" pos:end="787:104">getLon</name><argument_list pos:start="787:105" pos:end="787:106">()</argument_list></call> <operator pos:start="787:108" pos:end="787:108">*</operator> <literal type="number" pos:start="787:110" pos:end="787:117">1000000d</literal></expr></argument>)</argument_list></call> <operator pos:start="787:120" pos:end="787:120">/</operator> <literal type="number" pos:start="787:122" pos:end="787:129">1000000d</literal></expr></init></decl>;</decl_stmt>
				<decl_stmt pos:start="788:33" pos:end="788:130"><decl pos:start="788:33" pos:end="788:129"><type pos:start="788:33" pos:end="788:38"><name pos:start="788:33" pos:end="788:38">double</name></type> <name pos:start="788:40" pos:end="788:56">latPolylinePoint2</name> <init pos:start="788:58" pos:end="788:129">= <expr pos:start="788:60" pos:end="788:129"><operator pos:start="788:60" pos:end="788:60">(</operator><name pos:start="788:61" pos:end="788:66">double</name><operator pos:start="788:67" pos:end="788:67">)</operator><call pos:start="788:68" pos:end="788:118"><name pos:start="788:68" pos:end="788:77"><name pos:start="788:68" pos:end="788:71">Math</name><operator pos:start="788:72" pos:end="788:72">.</operator><name pos:start="788:73" pos:end="788:77">round</name></name><argument_list pos:start="788:78" pos:end="788:118">(<argument pos:start="788:79" pos:end="788:117"><expr pos:start="788:79" pos:end="788:117"><call pos:start="788:79" pos:end="788:94"><name pos:start="788:79" pos:end="788:92"><name pos:start="788:79" pos:end="788:82">line</name><operator pos:start="788:83" pos:end="788:83">.</operator><name pos:start="788:84" pos:end="788:92">getPoints</name></name><argument_list pos:start="788:93" pos:end="788:94">()</argument_list></call><index pos:start="788:95" pos:end="788:97">[<expr pos:start="788:96" pos:end="788:96"><literal type="number" pos:start="788:96" pos:end="788:96">1</literal></expr>]</index><operator pos:start="788:98" pos:end="788:98">.</operator><call pos:start="788:99" pos:end="788:106"><name pos:start="788:99" pos:end="788:104">getLat</name><argument_list pos:start="788:105" pos:end="788:106">()</argument_list></call> <operator pos:start="788:108" pos:end="788:108">*</operator> <literal type="number" pos:start="788:110" pos:end="788:117">1000000d</literal></expr></argument>)</argument_list></call> <operator pos:start="788:120" pos:end="788:120">/</operator> <literal type="number" pos:start="788:122" pos:end="788:129">1000000d</literal></expr></init></decl>;</decl_stmt>
				<decl_stmt pos:start="789:33" pos:end="789:130"><decl pos:start="789:33" pos:end="789:129"><type pos:start="789:33" pos:end="789:38"><name pos:start="789:33" pos:end="789:38">double</name></type> <name pos:start="789:40" pos:end="789:56">lonPolylinePoint2</name> <init pos:start="789:58" pos:end="789:129">= <expr pos:start="789:60" pos:end="789:129"><operator pos:start="789:60" pos:end="789:60">(</operator><name pos:start="789:61" pos:end="789:66">double</name><operator pos:start="789:67" pos:end="789:67">)</operator><call pos:start="789:68" pos:end="789:118"><name pos:start="789:68" pos:end="789:77"><name pos:start="789:68" pos:end="789:71">Math</name><operator pos:start="789:72" pos:end="789:72">.</operator><name pos:start="789:73" pos:end="789:77">round</name></name><argument_list pos:start="789:78" pos:end="789:118">(<argument pos:start="789:79" pos:end="789:117"><expr pos:start="789:79" pos:end="789:117"><call pos:start="789:79" pos:end="789:94"><name pos:start="789:79" pos:end="789:92"><name pos:start="789:79" pos:end="789:82">line</name><operator pos:start="789:83" pos:end="789:83">.</operator><name pos:start="789:84" pos:end="789:92">getPoints</name></name><argument_list pos:start="789:93" pos:end="789:94">()</argument_list></call><index pos:start="789:95" pos:end="789:97">[<expr pos:start="789:96" pos:end="789:96"><literal type="number" pos:start="789:96" pos:end="789:96">1</literal></expr>]</index><operator pos:start="789:98" pos:end="789:98">.</operator><call pos:start="789:99" pos:end="789:106"><name pos:start="789:99" pos:end="789:104">getLon</name><argument_list pos:start="789:105" pos:end="789:106">()</argument_list></call> <operator pos:start="789:108" pos:end="789:108">*</operator> <literal type="number" pos:start="789:110" pos:end="789:117">1000000d</literal></expr></argument>)</argument_list></call> <operator pos:start="789:120" pos:end="789:120">/</operator> <literal type="number" pos:start="789:122" pos:end="789:129">1000000d</literal></expr></init></decl>;</decl_stmt>
				<decl_stmt pos:start="790:33" pos:end="790:144"><decl pos:start="790:33" pos:end="790:143"><type pos:start="790:33" pos:end="790:38"><name pos:start="790:33" pos:end="790:38">double</name></type> <name pos:start="790:40" pos:end="790:56">latPriorityPoint1</name> <init pos:start="790:58" pos:end="790:143">= <expr pos:start="790:60" pos:end="790:143"><operator pos:start="790:60" pos:end="790:60">(</operator><name pos:start="790:61" pos:end="790:66">double</name><operator pos:start="790:67" pos:end="790:67">)</operator><call pos:start="790:68" pos:end="790:132"><name pos:start="790:68" pos:end="790:77"><name pos:start="790:68" pos:end="790:71">Math</name><operator pos:start="790:72" pos:end="790:72">.</operator><name pos:start="790:73" pos:end="790:77">round</name></name><argument_list pos:start="790:78" pos:end="790:132">(<argument pos:start="790:79" pos:end="790:131"><expr pos:start="790:79" pos:end="790:131"><call pos:start="790:79" pos:end="790:99"><name pos:start="790:79" pos:end="790:97"><name pos:start="790:79" pos:end="790:82">side</name><operator pos:start="790:83" pos:end="790:83">.</operator><name pos:start="790:84" pos:end="790:97">getCoordinates</name></name><argument_list pos:start="790:98" pos:end="790:99">()</argument_list></call><operator pos:start="790:100" pos:end="790:100">.</operator><call pos:start="790:101" pos:end="790:106"><name pos:start="790:101" pos:end="790:103">get</name><argument_list pos:start="790:104" pos:end="790:106">(<argument pos:start="790:105" pos:end="790:105"><expr pos:start="790:105" pos:end="790:105"><name pos:start="790:105" pos:end="790:105">j</name></expr></argument>)</argument_list></call><operator pos:start="790:107" pos:end="790:107">.</operator><call pos:start="790:108" pos:end="790:120"><name pos:start="790:108" pos:end="790:118">getLatitude</name><argument_list pos:start="790:119" pos:end="790:120">()</argument_list></call> <operator pos:start="790:122" pos:end="790:122">*</operator> <literal type="number" pos:start="790:124" pos:end="790:131">1000000d</literal></expr></argument>)</argument_list></call> <operator pos:start="790:134" pos:end="790:134">/</operator> <literal type="number" pos:start="790:136" pos:end="790:143">1000000d</literal></expr></init></decl>;</decl_stmt>
				<decl_stmt pos:start="791:33" pos:end="791:145"><decl pos:start="791:33" pos:end="791:144"><type pos:start="791:33" pos:end="791:38"><name pos:start="791:33" pos:end="791:38">double</name></type> <name pos:start="791:40" pos:end="791:56">lonPriorityPoint1</name> <init pos:start="791:58" pos:end="791:144">= <expr pos:start="791:60" pos:end="791:144"><operator pos:start="791:60" pos:end="791:60">(</operator><name pos:start="791:61" pos:end="791:66">double</name><operator pos:start="791:67" pos:end="791:67">)</operator><call pos:start="791:68" pos:end="791:133"><name pos:start="791:68" pos:end="791:77"><name pos:start="791:68" pos:end="791:71">Math</name><operator pos:start="791:72" pos:end="791:72">.</operator><name pos:start="791:73" pos:end="791:77">round</name></name><argument_list pos:start="791:78" pos:end="791:133">(<argument pos:start="791:79" pos:end="791:132"><expr pos:start="791:79" pos:end="791:132"><call pos:start="791:79" pos:end="791:99"><name pos:start="791:79" pos:end="791:97"><name pos:start="791:79" pos:end="791:82">side</name><operator pos:start="791:83" pos:end="791:83">.</operator><name pos:start="791:84" pos:end="791:97">getCoordinates</name></name><argument_list pos:start="791:98" pos:end="791:99">()</argument_list></call><operator pos:start="791:100" pos:end="791:100">.</operator><call pos:start="791:101" pos:end="791:106"><name pos:start="791:101" pos:end="791:103">get</name><argument_list pos:start="791:104" pos:end="791:106">(<argument pos:start="791:105" pos:end="791:105"><expr pos:start="791:105" pos:end="791:105"><name pos:start="791:105" pos:end="791:105">j</name></expr></argument>)</argument_list></call><operator pos:start="791:107" pos:end="791:107">.</operator><call pos:start="791:108" pos:end="791:121"><name pos:start="791:108" pos:end="791:119">getLongitude</name><argument_list pos:start="791:120" pos:end="791:121">()</argument_list></call> <operator pos:start="791:123" pos:end="791:123">*</operator> <literal type="number" pos:start="791:125" pos:end="791:132">1000000d</literal></expr></argument>)</argument_list></call> <operator pos:start="791:135" pos:end="791:135">/</operator> <literal type="number" pos:start="791:137" pos:end="791:144">1000000d</literal></expr></init></decl>;</decl_stmt>
				<decl_stmt pos:start="792:33" pos:end="792:146"><decl pos:start="792:33" pos:end="792:145"><type pos:start="792:33" pos:end="792:38"><name pos:start="792:33" pos:end="792:38">double</name></type> <name pos:start="792:40" pos:end="792:56">latPriorityPoint2</name> <init pos:start="792:58" pos:end="792:145">= <expr pos:start="792:60" pos:end="792:145"><operator pos:start="792:60" pos:end="792:60">(</operator><name pos:start="792:61" pos:end="792:66">double</name><operator pos:start="792:67" pos:end="792:67">)</operator><call pos:start="792:68" pos:end="792:134"><name pos:start="792:68" pos:end="792:77"><name pos:start="792:68" pos:end="792:71">Math</name><operator pos:start="792:72" pos:end="792:72">.</operator><name pos:start="792:73" pos:end="792:77">round</name></name><argument_list pos:start="792:78" pos:end="792:134">(<argument pos:start="792:79" pos:end="792:133"><expr pos:start="792:79" pos:end="792:133"><call pos:start="792:79" pos:end="792:99"><name pos:start="792:79" pos:end="792:97"><name pos:start="792:79" pos:end="792:82">side</name><operator pos:start="792:83" pos:end="792:83">.</operator><name pos:start="792:84" pos:end="792:97">getCoordinates</name></name><argument_list pos:start="792:98" pos:end="792:99">()</argument_list></call><operator pos:start="792:100" pos:end="792:100">.</operator><call pos:start="792:101" pos:end="792:108"><name pos:start="792:101" pos:end="792:103">get</name><argument_list pos:start="792:104" pos:end="792:108">(<argument pos:start="792:105" pos:end="792:107"><expr pos:start="792:105" pos:end="792:107"><name pos:start="792:105" pos:end="792:105">j</name><operator pos:start="792:106" pos:end="792:106">+</operator><literal type="number" pos:start="792:107" pos:end="792:107">1</literal></expr></argument>)</argument_list></call><operator pos:start="792:109" pos:end="792:109">.</operator><call pos:start="792:110" pos:end="792:122"><name pos:start="792:110" pos:end="792:120">getLatitude</name><argument_list pos:start="792:121" pos:end="792:122">()</argument_list></call> <operator pos:start="792:124" pos:end="792:124">*</operator> <literal type="number" pos:start="792:126" pos:end="792:133">1000000d</literal></expr></argument>)</argument_list></call> <operator pos:start="792:136" pos:end="792:136">/</operator> <literal type="number" pos:start="792:138" pos:end="792:145">1000000d</literal></expr></init></decl>;</decl_stmt>
				<decl_stmt pos:start="793:33" pos:end="793:147"><decl pos:start="793:33" pos:end="793:146"><type pos:start="793:33" pos:end="793:38"><name pos:start="793:33" pos:end="793:38">double</name></type> <name pos:start="793:40" pos:end="793:56">lonPriorityPoint2</name> <init pos:start="793:58" pos:end="793:146">= <expr pos:start="793:60" pos:end="793:146"><operator pos:start="793:60" pos:end="793:60">(</operator><name pos:start="793:61" pos:end="793:66">double</name><operator pos:start="793:67" pos:end="793:67">)</operator><call pos:start="793:68" pos:end="793:135"><name pos:start="793:68" pos:end="793:77"><name pos:start="793:68" pos:end="793:71">Math</name><operator pos:start="793:72" pos:end="793:72">.</operator><name pos:start="793:73" pos:end="793:77">round</name></name><argument_list pos:start="793:78" pos:end="793:135">(<argument pos:start="793:79" pos:end="793:134"><expr pos:start="793:79" pos:end="793:134"><call pos:start="793:79" pos:end="793:99"><name pos:start="793:79" pos:end="793:97"><name pos:start="793:79" pos:end="793:82">side</name><operator pos:start="793:83" pos:end="793:83">.</operator><name pos:start="793:84" pos:end="793:97">getCoordinates</name></name><argument_list pos:start="793:98" pos:end="793:99">()</argument_list></call><operator pos:start="793:100" pos:end="793:100">.</operator><call pos:start="793:101" pos:end="793:108"><name pos:start="793:101" pos:end="793:103">get</name><argument_list pos:start="793:104" pos:end="793:108">(<argument pos:start="793:105" pos:end="793:107"><expr pos:start="793:105" pos:end="793:107"><name pos:start="793:105" pos:end="793:105">j</name><operator pos:start="793:106" pos:end="793:106">+</operator><literal type="number" pos:start="793:107" pos:end="793:107">1</literal></expr></argument>)</argument_list></call><operator pos:start="793:109" pos:end="793:109">.</operator><call pos:start="793:110" pos:end="793:123"><name pos:start="793:110" pos:end="793:121">getLongitude</name><argument_list pos:start="793:122" pos:end="793:123">()</argument_list></call> <operator pos:start="793:125" pos:end="793:125">*</operator> <literal type="number" pos:start="793:127" pos:end="793:134">1000000d</literal></expr></argument>)</argument_list></call> <operator pos:start="793:137" pos:end="793:137">/</operator> <literal type="number" pos:start="793:139" pos:end="793:146">1000000d</literal></expr></init></decl>;</decl_stmt>
				<if_stmt pos:start="794:33" pos:end="797:33"><if pos:start="794:33" pos:end="797:33">if <condition pos:start="794:36" pos:end="795:210">(<expr pos:start="794:37" pos:end="795:209"><operator pos:start="794:37" pos:end="794:37">(</operator><name pos:start="794:38" pos:end="794:54">latPolylinePoint1</name> <operator pos:start="794:56" pos:end="794:57">==</operator> <name pos:start="794:59" pos:end="794:75">latPriorityPoint1</name> <operator pos:start="794:77" pos:end="794:78">&amp;&amp;</operator> <name pos:start="794:80" pos:end="794:96">lonPolylinePoint1</name> <operator pos:start="794:98" pos:end="794:99">==</operator> <name pos:start="794:101" pos:end="794:117">lonPriorityPoint1</name> <operator pos:start="794:119" pos:end="794:120">&amp;&amp;</operator> <name pos:start="794:122" pos:end="794:138">latPolylinePoint2</name> <operator pos:start="794:140" pos:end="794:141">==</operator> <name pos:start="794:143" pos:end="794:159">latPriorityPoint2</name> <operator pos:start="794:161" pos:end="794:162">&amp;&amp;</operator> <name pos:start="794:164" pos:end="794:180">lonPolylinePoint2</name> <operator pos:start="794:182" pos:end="794:183">==</operator> <name pos:start="794:185" pos:end="794:201">lonPriorityPoint2</name><operator pos:start="794:202" pos:end="794:202">)</operator>
					<operator pos:start="795:41" pos:end="795:42">||</operator> <operator pos:start="795:44" pos:end="795:44">(</operator><name pos:start="795:45" pos:end="795:61">latPolylinePoint2</name> <operator pos:start="795:63" pos:end="795:64">==</operator> <name pos:start="795:66" pos:end="795:82">latPriorityPoint1</name> <operator pos:start="795:84" pos:end="795:85">&amp;&amp;</operator> <name pos:start="795:87" pos:end="795:103">lonPolylinePoint2</name> <operator pos:start="795:105" pos:end="795:106">==</operator> <name pos:start="795:108" pos:end="795:124">lonPriorityPoint1</name> <operator pos:start="795:126" pos:end="795:127">&amp;&amp;</operator> <name pos:start="795:129" pos:end="795:145">latPolylinePoint1</name> <operator pos:start="795:147" pos:end="795:148">==</operator> <name pos:start="795:150" pos:end="795:166">latPriorityPoint2</name> <operator pos:start="795:168" pos:end="795:169">&amp;&amp;</operator> <name pos:start="795:171" pos:end="795:187">lonPolylinePoint1</name> <operator pos:start="795:189" pos:end="795:190">==</operator> <name pos:start="795:192" pos:end="795:208">lonPriorityPoint2</name><operator pos:start="795:209" pos:end="795:209">)</operator></expr>)</condition> <block pos:start="795:212" pos:end="797:33">{<block_content pos:start="796:41" pos:end="796:62">
					<expr_stmt pos:start="796:41" pos:end="796:62"><expr pos:start="796:41" pos:end="796:61"><call pos:start="796:41" pos:end="796:61"><name pos:start="796:41" pos:end="796:55">addPriorityLine</name><argument_list pos:start="796:56" pos:end="796:61">(<argument pos:start="796:57" pos:end="796:60"><expr pos:start="796:57" pos:end="796:60"><name pos:start="796:57" pos:end="796:60">line</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				</block_content>}</block></if></if_stmt>
			</block_content>}</block></for>
		</block_content>}</block></for>
		<expr_stmt pos:start="800:17" pos:end="800:107"><expr pos:start="800:17" pos:end="800:106"><call pos:start="800:17" pos:end="800:106"><name pos:start="800:17" pos:end="800:31">addPrioritySide</name><argument_list pos:start="800:32" pos:end="800:106">(<argument pos:start="800:33" pos:end="800:44"><expr pos:start="800:33" pos:end="800:44"><call pos:start="800:33" pos:end="800:44"><name pos:start="800:33" pos:end="800:42"><name pos:start="800:33" pos:end="800:36">side</name><operator pos:start="800:37" pos:end="800:37">.</operator><name pos:start="800:38" pos:end="800:42">getId</name></name><argument_list pos:start="800:43" pos:end="800:44">()</argument_list></call></expr></argument>, <argument pos:start="800:47" pos:end="800:60"><expr pos:start="800:47" pos:end="800:60"><call pos:start="800:47" pos:end="800:60"><name pos:start="800:47" pos:end="800:58"><name pos:start="800:47" pos:end="800:50">side</name><operator pos:start="800:51" pos:end="800:51">.</operator><name pos:start="800:52" pos:end="800:58">getType</name></name><argument_list pos:start="800:59" pos:end="800:60">()</argument_list></call></expr></argument>, <argument pos:start="800:63" pos:end="800:83"><expr pos:start="800:63" pos:end="800:83"><call pos:start="800:63" pos:end="800:83"><name pos:start="800:63" pos:end="800:81"><name pos:start="800:63" pos:end="800:66">side</name><operator pos:start="800:67" pos:end="800:67">.</operator><name pos:start="800:68" pos:end="800:81">getDescription</name></name><argument_list pos:start="800:82" pos:end="800:83">()</argument_list></call></expr></argument>, <argument pos:start="800:86" pos:end="800:105"><expr pos:start="800:86" pos:end="800:105"><call pos:start="800:86" pos:end="800:105"><name pos:start="800:86" pos:end="800:103"><name pos:start="800:86" pos:end="800:89">side</name><operator pos:start="800:90" pos:end="800:90">.</operator><name pos:start="800:91" pos:end="800:103">getImportance</name></name><argument_list pos:start="800:104" pos:end="800:105">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	</block_content>}</block></function>
	
	<comment type="line" pos:start="803:9" pos:end="803:41">// Enables/disable sides editing.</comment>
	<function pos:start="804:9" pos:end="806:9"><type pos:start="804:9" pos:end="804:19"><specifier pos:start="804:9" pos:end="804:14">public</specifier> <name pos:start="804:16" pos:end="804:19">void</name></type> <name pos:start="804:21" pos:end="804:39">setSidesAreEditable</name> <parameter_list pos:start="804:41" pos:end="804:60">(<parameter pos:start="804:42" pos:end="804:59"><decl pos:start="804:42" pos:end="804:59"><type pos:start="804:42" pos:end="804:48"><name pos:start="804:42" pos:end="804:48">boolean</name></type> <name pos:start="804:50" pos:end="804:59">isEditable</name></decl></parameter>)</parameter_list> <block pos:start="804:62" pos:end="806:9">{<block_content pos:start="805:17" pos:end="805:46">
		<expr_stmt pos:start="805:17" pos:end="805:46"><expr pos:start="805:17" pos:end="805:45"><name pos:start="805:17" pos:end="805:32">sidesAreEditable</name> <operator pos:start="805:34" pos:end="805:34">=</operator> <name pos:start="805:36" pos:end="805:45">isEditable</name></expr>;</expr_stmt>
	</block_content>}</block></function>

	<comment type="line" pos:start="808:9" pos:end="808:61">// Returns whether or not edit mode has been enabled.</comment>
	<function pos:start="809:9" pos:end="811:9"><type pos:start="809:9" pos:end="809:22"><specifier pos:start="809:9" pos:end="809:14">public</specifier> <name pos:start="809:16" pos:end="809:22">boolean</name></type> <name pos:start="809:24" pos:end="809:42">getSidesAreEditable</name><parameter_list pos:start="809:43" pos:end="809:44">()</parameter_list> <block pos:start="809:46" pos:end="811:9">{<block_content pos:start="810:17" pos:end="810:40">
		<return pos:start="810:17" pos:end="810:40">return <expr pos:start="810:24" pos:end="810:39"><name pos:start="810:24" pos:end="810:39">sidesAreEditable</name></expr>;</return>
	</block_content>}</block></function>
	
	<function pos:start="813:9" pos:end="815:9"><type pos:start="813:9" pos:end="813:26"><specifier pos:start="813:9" pos:end="813:14">public</specifier> <name pos:start="813:16" pos:end="813:26"><name pos:start="813:16" pos:end="813:19">List</name><argument_list type="generic" pos:start="813:20" pos:end="813:26">&lt;<argument pos:start="813:21" pos:end="813:25"><name pos:start="813:21" pos:end="813:25">Point</name></argument>&gt;</argument_list></name></type> <name pos:start="813:28" pos:end="813:44">getAllPolygonPins</name><parameter_list pos:start="813:45" pos:end="813:46">()</parameter_list> <block pos:start="813:48" pos:end="815:9">{<block_content pos:start="814:17" pos:end="814:42">
		<return pos:start="814:17" pos:end="814:42">return <expr pos:start="814:24" pos:end="814:41"><name pos:start="814:24" pos:end="814:41">allPolygonPinsCopy</name></expr>;</return>
	</block_content>}</block></function>
	
	<comment type="line" pos:start="817:9" pos:end="817:41">// Enables/disable sides editing.</comment>
	<function pos:start="818:9" pos:end="820:9"><type pos:start="818:9" pos:end="818:19"><specifier pos:start="818:9" pos:end="818:14">public</specifier> <name pos:start="818:16" pos:end="818:19">void</name></type> <name pos:start="818:21" pos:end="818:44">setPrioritiesAreEditable</name> <parameter_list pos:start="818:46" pos:end="818:65">(<parameter pos:start="818:47" pos:end="818:64"><decl pos:start="818:47" pos:end="818:64"><type pos:start="818:47" pos:end="818:53"><name pos:start="818:47" pos:end="818:53">boolean</name></type> <name pos:start="818:55" pos:end="818:64">isEditable</name></decl></parameter>)</parameter_list> <block pos:start="818:67" pos:end="820:9">{<block_content pos:start="819:17" pos:end="819:51">
		<expr_stmt pos:start="819:17" pos:end="819:51"><expr pos:start="819:17" pos:end="819:50"><name pos:start="819:17" pos:end="819:37">prioritiesAreEditable</name> <operator pos:start="819:39" pos:end="819:39">=</operator> <name pos:start="819:41" pos:end="819:50">isEditable</name></expr>;</expr_stmt>
	</block_content>}</block></function>
	
	<comment type="line" pos:start="822:9" pos:end="822:61">// Returns whether or not edit mode has been enabled.</comment>
	<function pos:start="823:9" pos:end="825:9"><type pos:start="823:9" pos:end="823:22"><specifier pos:start="823:9" pos:end="823:14">public</specifier> <name pos:start="823:16" pos:end="823:22">boolean</name></type> <name pos:start="823:24" pos:end="823:47">getPrioritiesAreEditable</name><parameter_list pos:start="823:48" pos:end="823:49">()</parameter_list> <block pos:start="823:51" pos:end="825:9">{<block_content pos:start="824:17" pos:end="824:45">
		<return pos:start="824:17" pos:end="824:45">return <expr pos:start="824:24" pos:end="824:44"><name pos:start="824:24" pos:end="824:44">prioritiesAreEditable</name></expr>;</return>
	</block_content>}</block></function>
	
	<comment type="line" pos:start="827:9" pos:end="827:61">// Gets all of the side polylines that are on the map</comment>
	<function pos:start="828:9" pos:end="830:9"><type pos:start="828:9" pos:end="828:30"><specifier pos:start="828:9" pos:end="828:14">public</specifier> <name pos:start="828:16" pos:end="828:30"><name pos:start="828:16" pos:end="828:19">List</name><argument_list type="generic" pos:start="828:20" pos:end="828:30">&lt;<argument pos:start="828:21" pos:end="828:29"><name pos:start="828:21" pos:end="828:29">LPolyline</name></argument>&gt;</argument_list></name></type> <name pos:start="828:32" pos:end="828:43">getPolylines</name><parameter_list pos:start="828:44" pos:end="828:45">()</parameter_list> <block pos:start="828:47" pos:end="830:9">{<block_content pos:start="829:17" pos:end="829:36">
		<return pos:start="829:17" pos:end="829:36">return <expr pos:start="829:24" pos:end="829:35"><name pos:start="829:24" pos:end="829:35">allPolylines</name></expr>;</return>
	</block_content>}</block></function>
	
	<comment type="line" pos:start="832:9" pos:end="832:27">// Returns the map.</comment>
	<function pos:start="833:9" pos:end="835:9"><type pos:start="833:9" pos:end="833:19"><specifier pos:start="833:9" pos:end="833:14">public</specifier> <name pos:start="833:16" pos:end="833:19">LMap</name></type> <name pos:start="833:21" pos:end="833:26">getMap</name><parameter_list pos:start="833:27" pos:end="833:28">()</parameter_list> <block pos:start="833:30" pos:end="835:9">{<block_content pos:start="834:17" pos:end="834:27">
		<return pos:start="834:17" pos:end="834:27">return <expr pos:start="834:24" pos:end="834:26"><name pos:start="834:24" pos:end="834:26">map</name></expr>;</return>
	</block_content>}</block></function>
	
	<comment type="line" pos:start="837:9" pos:end="837:88">// Returns the mapComponent (use if the functions in AMMapComponent are needed).</comment>
	<function pos:start="838:9" pos:end="840:9"><type pos:start="838:9" pos:end="838:29"><specifier pos:start="838:9" pos:end="838:14">public</specifier> <name pos:start="838:16" pos:end="838:29">AMMapComponent</name></type> <name pos:start="838:31" pos:end="838:45">getMapComponent</name><parameter_list pos:start="838:46" pos:end="838:47">()</parameter_list> <block pos:start="838:49" pos:end="840:9">{<block_content pos:start="839:17" pos:end="839:36">
		<return pos:start="839:17" pos:end="839:36">return <expr pos:start="839:24" pos:end="839:35"><name pos:start="839:24" pos:end="839:35">mapComponent</name></expr>;</return>
	</block_content>}</block></function>
	
	<function pos:start="842:9" pos:end="844:9"><type pos:start="842:9" pos:end="842:37"><specifier pos:start="842:9" pos:end="842:14">public</specifier> <name pos:start="842:16" pos:end="842:37">AMMapAddMarkerListener</name></type> <name pos:start="842:39" pos:end="842:61">getMapAddMarkerListener</name><parameter_list pos:start="842:62" pos:end="842:63">()</parameter_list> <block pos:start="842:65" pos:end="844:9">{<block_content pos:start="843:17" pos:end="843:44">
		<return pos:start="843:17" pos:end="843:44">return <expr pos:start="843:24" pos:end="843:43"><name pos:start="843:24" pos:end="843:43">mapAddMarkerListener</name></expr>;</return>
	</block_content>}</block></function>
	<function pos:start="845:9" pos:end="847:9"><type pos:start="845:9" pos:end="845:40"><specifier pos:start="845:9" pos:end="845:14">public</specifier> <name pos:start="845:16" pos:end="845:40">AMMarkerMouseOverListener</name></type> <name pos:start="845:42" pos:end="845:67">getMarkerMouseOverListener</name><parameter_list pos:start="845:68" pos:end="845:69">()</parameter_list> <block pos:start="845:71" pos:end="847:9">{<block_content pos:start="846:17" pos:end="846:47">
		<return pos:start="846:17" pos:end="846:47">return <expr pos:start="846:24" pos:end="846:46"><name pos:start="846:24" pos:end="846:46">markerMouseOverListener</name></expr>;</return>
	</block_content>}</block></function>
	<function pos:start="848:9" pos:end="850:9"><type pos:start="848:9" pos:end="848:38"><specifier pos:start="848:9" pos:end="848:14">public</specifier> <name pos:start="848:16" pos:end="848:38">AMPolylineClickListener</name></type> <name pos:start="848:40" pos:end="848:63">getPolylineClickListener</name><parameter_list pos:start="848:64" pos:end="848:65">()</parameter_list> <block pos:start="848:67" pos:end="850:9">{<block_content pos:start="849:17" pos:end="849:45">
		<return pos:start="849:17" pos:end="849:45">return <expr pos:start="849:24" pos:end="849:44"><name pos:start="849:24" pos:end="849:44">polylineClickListener</name></expr>;</return>
	</block_content>}</block></function>
	
	<function pos:start="852:9" pos:end="854:9"><type pos:start="852:9" pos:end="852:32"><specifier pos:start="852:9" pos:end="852:14">public</specifier> <name pos:start="852:16" pos:end="852:32"><name pos:start="852:16" pos:end="852:25">LinkedList</name><argument_list type="generic" pos:start="852:26" pos:end="852:32">&lt;<argument pos:start="852:27" pos:end="852:31"><name pos:start="852:27" pos:end="852:31">Point</name></argument>&gt;</argument_list></name></type> <name pos:start="852:34" pos:end="852:51">getPolygonVertices</name><parameter_list pos:start="852:52" pos:end="852:53">()</parameter_list> <block pos:start="852:55" pos:end="854:9">{<block_content pos:start="853:17" pos:end="853:39">
		<return pos:start="853:17" pos:end="853:39">return <expr pos:start="853:24" pos:end="853:38"><name pos:start="853:24" pos:end="853:38">polygonVertices</name></expr>;</return>
	</block_content>}</block></function>
	
	<comment type="line" pos:start="856:9" pos:end="856:32">// returns the two sides</comment>
	<function pos:start="857:9" pos:end="859:9"><type pos:start="857:9" pos:end="857:40"><specifier pos:start="857:9" pos:end="857:14">public</specifier> <name pos:start="857:16" pos:end="857:40"><name pos:start="857:16" pos:end="857:21">Vector</name><argument_list type="generic" pos:start="857:22" pos:end="857:40">&lt;<argument pos:start="857:23" pos:end="857:39"><name pos:start="857:23" pos:end="857:39"><name pos:start="857:23" pos:end="857:26">List</name><argument_list type="generic" pos:start="857:27" pos:end="857:39">&lt;<argument pos:start="857:28" pos:end="857:38"><name pos:start="857:28" pos:end="857:38">UIEdgePoint</name></argument>&gt;</argument_list></name></argument>&gt;</argument_list></name></type> <name pos:start="857:42" pos:end="857:49">getSides</name><parameter_list pos:start="857:50" pos:end="857:51">()</parameter_list> <block pos:start="857:53" pos:end="859:9">{<block_content pos:start="858:17" pos:end="858:29">
		<return pos:start="858:17" pos:end="858:29">return <expr pos:start="858:24" pos:end="858:28"><name pos:start="858:24" pos:end="858:28">sides</name></expr>;</return>
	</block_content>}</block></function>
	
	<comment type="line" pos:start="861:9" pos:end="861:50">// returns the polyline that's moused over</comment>
	<function pos:start="862:9" pos:end="864:9"><type pos:start="862:9" pos:end="862:24"><specifier pos:start="862:9" pos:end="862:14">public</specifier> <name pos:start="862:16" pos:end="862:24">LPolyline</name></type> <name pos:start="862:26" pos:end="862:42">getMousedOverLine</name><parameter_list pos:start="862:43" pos:end="862:44">()</parameter_list> <block pos:start="862:46" pos:end="864:9">{<block_content pos:start="863:17" pos:end="863:38">
		<return pos:start="863:17" pos:end="863:38">return <expr pos:start="863:24" pos:end="863:37"><name pos:start="863:24" pos:end="863:37">mousedOverLine</name></expr>;</return>
	</block_content>}</block></function>
	
	<comment type="line" pos:start="866:9" pos:end="866:52">// sets the priority area that's moused over</comment>
	<function pos:start="867:9" pos:end="869:9"><type pos:start="867:9" pos:end="867:19"><specifier pos:start="867:9" pos:end="867:14">public</specifier> <name pos:start="867:16" pos:end="867:19">void</name></type> <name pos:start="867:21" pos:end="867:37">setMousedOverArea</name><parameter_list pos:start="867:38" pos:end="867:66">(<parameter pos:start="867:39" pos:end="867:65"><decl pos:start="867:39" pos:end="867:65"><type pos:start="867:39" pos:end="867:50"><name pos:start="867:39" pos:end="867:50">PriorityArea</name></type> <name pos:start="867:52" pos:end="867:65">mousedOverArea</name></decl></parameter>)</parameter_list> <block pos:start="867:68" pos:end="869:9">{<block_content pos:start="868:17" pos:end="868:53">
		<expr_stmt pos:start="868:17" pos:end="868:53"><expr pos:start="868:17" pos:end="868:52"><name pos:start="868:17" pos:end="868:35"><name pos:start="868:17" pos:end="868:20">this</name><operator pos:start="868:21" pos:end="868:21">.</operator><name pos:start="868:22" pos:end="868:35">mousedOverArea</name></name> <operator pos:start="868:37" pos:end="868:37">=</operator> <name pos:start="868:39" pos:end="868:52">mousedOverArea</name></expr>;</expr_stmt>
	</block_content>}</block></function>
	
	<comment type="line" pos:start="871:9" pos:end="871:52">// sets the priority side that's moused over</comment>
	<function pos:start="872:9" pos:end="874:9"><type pos:start="872:9" pos:end="872:19"><specifier pos:start="872:9" pos:end="872:14">public</specifier> <name pos:start="872:16" pos:end="872:19">void</name></type> <name pos:start="872:21" pos:end="872:37">setMousedOverSide</name><parameter_list pos:start="872:38" pos:end="872:66">(<parameter pos:start="872:39" pos:end="872:65"><decl pos:start="872:39" pos:end="872:65"><type pos:start="872:39" pos:end="872:50"><name pos:start="872:39" pos:end="872:50">PrioritySide</name></type> <name pos:start="872:52" pos:end="872:65">mousedOverSide</name></decl></parameter>)</parameter_list> <block pos:start="872:68" pos:end="874:9">{<block_content pos:start="873:17" pos:end="873:53">
		<expr_stmt pos:start="873:17" pos:end="873:53"><expr pos:start="873:17" pos:end="873:52"><name pos:start="873:17" pos:end="873:35"><name pos:start="873:17" pos:end="873:20">this</name><operator pos:start="873:21" pos:end="873:21">.</operator><name pos:start="873:22" pos:end="873:35">mousedOverSide</name></name> <operator pos:start="873:37" pos:end="873:37">=</operator> <name pos:start="873:39" pos:end="873:52">mousedOverSide</name></expr>;</expr_stmt>
	</block_content>}</block></function>
	
	<comment type="line" pos:start="876:9" pos:end="876:52">// gets the priority area that's moused over</comment>
	<function pos:start="877:9" pos:end="879:9"><type pos:start="877:9" pos:end="877:27"><specifier pos:start="877:9" pos:end="877:14">public</specifier> <name pos:start="877:16" pos:end="877:27">PriorityArea</name></type> <name pos:start="877:29" pos:end="877:45">getMousedOverArea</name><parameter_list pos:start="877:46" pos:end="877:47">()</parameter_list> <block pos:start="877:49" pos:end="879:9">{<block_content pos:start="878:17" pos:end="878:38">
		<return pos:start="878:17" pos:end="878:38">return <expr pos:start="878:24" pos:end="878:37"><name pos:start="878:24" pos:end="878:37">mousedOverArea</name></expr>;</return>
	</block_content>}</block></function>
	
	<comment type="line" pos:start="881:9" pos:end="881:52">// gets the priority side that's moused over</comment>
	<function pos:start="882:9" pos:end="884:9"><type pos:start="882:9" pos:end="882:27"><specifier pos:start="882:9" pos:end="882:14">public</specifier> <name pos:start="882:16" pos:end="882:27">PrioritySide</name></type> <name pos:start="882:29" pos:end="882:45">getMousedOverSide</name><parameter_list pos:start="882:46" pos:end="882:47">()</parameter_list> <block pos:start="882:49" pos:end="884:9">{<block_content pos:start="883:17" pos:end="883:38">
		<return pos:start="883:17" pos:end="883:38">return <expr pos:start="883:24" pos:end="883:37"><name pos:start="883:24" pos:end="883:37">mousedOverSide</name></expr>;</return>
	</block_content>}</block></function>
	
	<comment type="line" pos:start="886:9" pos:end="886:82">// returns vector that contains a separate list of points for each polygon</comment>
	<function pos:start="887:9" pos:end="889:9"><type pos:start="887:9" pos:end="887:35"><specifier pos:start="887:9" pos:end="887:14">public</specifier> <name pos:start="887:16" pos:end="887:35"><name pos:start="887:16" pos:end="887:21">Vector</name><argument_list type="generic" pos:start="887:22" pos:end="887:35">&lt;<argument pos:start="887:23" pos:end="887:34"><name pos:start="887:23" pos:end="887:34">PriorityArea</name></argument>&gt;</argument_list></name></type> <name pos:start="887:37" pos:end="887:55">getAllPriorityAreas</name><parameter_list pos:start="887:56" pos:end="887:57">()</parameter_list> <block pos:start="887:59" pos:end="889:9">{<block_content pos:start="888:17" pos:end="888:40">
		<return pos:start="888:17" pos:end="888:40">return <expr pos:start="888:24" pos:end="888:39"><name pos:start="888:24" pos:end="888:39">allPriorityAreas</name></expr>;</return>
	</block_content>}</block></function>
	
	<function pos:start="891:9" pos:end="893:9"><type pos:start="891:9" pos:end="891:19"><specifier pos:start="891:9" pos:end="891:14">public</specifier> <name pos:start="891:16" pos:end="891:19">void</name></type> <name pos:start="891:21" pos:end="891:39">setAllPriorityAreas</name><parameter_list pos:start="891:40" pos:end="891:78">(<parameter pos:start="891:41" pos:end="891:77"><decl pos:start="891:41" pos:end="891:77"><type pos:start="891:41" pos:end="891:60"><name pos:start="891:41" pos:end="891:60"><name pos:start="891:41" pos:end="891:46">Vector</name><argument_list type="generic" pos:start="891:47" pos:end="891:60">&lt;<argument pos:start="891:48" pos:end="891:59"><name pos:start="891:48" pos:end="891:59">PriorityArea</name></argument>&gt;</argument_list></name></type> <name pos:start="891:62" pos:end="891:77">allPriorityAreas</name></decl></parameter>)</parameter_list> <block pos:start="891:80" pos:end="893:9">{<block_content pos:start="892:17" pos:end="892:57">
		<expr_stmt pos:start="892:17" pos:end="892:57"><expr pos:start="892:17" pos:end="892:56"><name pos:start="892:17" pos:end="892:37"><name pos:start="892:17" pos:end="892:20">this</name><operator pos:start="892:21" pos:end="892:21">.</operator><name pos:start="892:22" pos:end="892:37">allPriorityAreas</name></name> <operator pos:start="892:39" pos:end="892:39">=</operator> <name pos:start="892:41" pos:end="892:56">allPriorityAreas</name></expr>;</expr_stmt>
	</block_content>}</block></function>
	
	<function pos:start="895:9" pos:end="899:9"><type pos:start="895:9" pos:end="895:19"><specifier pos:start="895:9" pos:end="895:14">public</specifier> <name pos:start="895:16" pos:end="895:19">void</name></type> <name pos:start="895:21" pos:end="895:40">clearPolygonVertices</name><parameter_list pos:start="895:41" pos:end="895:42">()</parameter_list> <block pos:start="895:44" pos:end="899:9">{<block_content pos:start="896:17" pos:end="898:40">
		<expr_stmt pos:start="896:17" pos:end="896:40"><expr pos:start="896:17" pos:end="896:39"><call pos:start="896:17" pos:end="896:39"><name pos:start="896:17" pos:end="896:37"><name pos:start="896:17" pos:end="896:31">polygonVertices</name><operator pos:start="896:32" pos:end="896:32">.</operator><name pos:start="896:33" pos:end="896:37">clear</name></name><argument_list pos:start="896:38" pos:end="896:39">()</argument_list></call></expr>;</expr_stmt>
		<expr_stmt pos:start="897:17" pos:end="897:39"><expr pos:start="897:17" pos:end="897:38"><call pos:start="897:17" pos:end="897:38"><name pos:start="897:17" pos:end="897:36"><name pos:start="897:17" pos:end="897:30">newPolygonPins</name><operator pos:start="897:31" pos:end="897:31">.</operator><name pos:start="897:32" pos:end="897:36">clear</name></name><argument_list pos:start="897:37" pos:end="897:38">()</argument_list></call></expr>;</expr_stmt>
		<expr_stmt pos:start="898:17" pos:end="898:40"><expr pos:start="898:17" pos:end="898:39"><call pos:start="898:17" pos:end="898:39"><name pos:start="898:17" pos:end="898:37"><name pos:start="898:17" pos:end="898:31">newPolygonLines</name><operator pos:start="898:32" pos:end="898:32">.</operator><name pos:start="898:33" pos:end="898:37">clear</name></name><argument_list pos:start="898:38" pos:end="898:39">()</argument_list></call></expr>;</expr_stmt>
	</block_content>}</block></function>
	
	<function pos:start="901:9" pos:end="903:9"><type pos:start="901:9" pos:end="901:19"><specifier pos:start="901:9" pos:end="901:14">public</specifier> <name pos:start="901:16" pos:end="901:19">void</name></type> <name pos:start="901:21" pos:end="901:41">setPriorityInfoWindow</name><parameter_list pos:start="901:42" pos:end="901:82">(<parameter pos:start="901:43" pos:end="901:81"><decl pos:start="901:43" pos:end="901:81"><type pos:start="901:43" pos:end="901:62"><name pos:start="901:43" pos:end="901:62">AMPriorityInfoWindow</name></type> <name pos:start="901:64" pos:end="901:81">priorityInfoWindow</name></decl></parameter>)</parameter_list> <block pos:start="901:84" pos:end="903:9">{<block_content pos:start="902:17" pos:end="902:61">
		<expr_stmt pos:start="902:17" pos:end="902:61"><expr pos:start="902:17" pos:end="902:60"><name pos:start="902:17" pos:end="902:39"><name pos:start="902:17" pos:end="902:20">this</name><operator pos:start="902:21" pos:end="902:21">.</operator><name pos:start="902:22" pos:end="902:39">priorityInfoWindow</name></name> <operator pos:start="902:41" pos:end="902:41">=</operator> <name pos:start="902:43" pos:end="902:60">priorityInfoWindow</name></expr>;</expr_stmt>
	</block_content>}</block></function>
	<function pos:start="904:9" pos:end="906:9"><type pos:start="904:9" pos:end="904:35"><specifier pos:start="904:9" pos:end="904:14">public</specifier> <name pos:start="904:16" pos:end="904:35">AMPriorityInfoWindow</name></type> <name pos:start="904:37" pos:end="904:57">getPriorityInfoWindow</name><parameter_list pos:start="904:58" pos:end="904:59">()</parameter_list> <block pos:start="904:61" pos:end="906:9">{<block_content pos:start="905:17" pos:end="905:42">
		<return pos:start="905:17" pos:end="905:42">return <expr pos:start="905:24" pos:end="905:41"><name pos:start="905:24" pos:end="905:41">priorityInfoWindow</name></expr>;</return>
	</block_content>}</block></function>
	
	<function pos:start="908:9" pos:end="910:9"><type pos:start="908:9" pos:end="908:28"><specifier pos:start="908:9" pos:end="908:14">public</specifier> <name pos:start="908:16" pos:end="908:28"><name pos:start="908:16" pos:end="908:19">List</name><argument_list type="generic" pos:start="908:20" pos:end="908:28">&lt;<argument pos:start="908:21" pos:end="908:27"><name pos:start="908:21" pos:end="908:27">LMarker</name></argument>&gt;</argument_list></name></type> <name pos:start="908:30" pos:end="908:46">getNewPolygonPins</name><parameter_list pos:start="908:47" pos:end="908:48">()</parameter_list> <block pos:start="908:50" pos:end="910:9">{<block_content pos:start="909:17" pos:end="909:38">
		<return pos:start="909:17" pos:end="909:38">return <expr pos:start="909:24" pos:end="909:37"><name pos:start="909:24" pos:end="909:37">newPolygonPins</name></expr>;</return>
	</block_content>}</block></function>
	
	<function pos:start="912:9" pos:end="914:9"><type pos:start="912:9" pos:end="912:30"><specifier pos:start="912:9" pos:end="912:14">public</specifier> <name pos:start="912:16" pos:end="912:30"><name pos:start="912:16" pos:end="912:19">List</name><argument_list type="generic" pos:start="912:20" pos:end="912:30">&lt;<argument pos:start="912:21" pos:end="912:29"><name pos:start="912:21" pos:end="912:29">LPolyline</name></argument>&gt;</argument_list></name></type> <name pos:start="912:32" pos:end="912:54">getNewPrioritySideLines</name><parameter_list pos:start="912:55" pos:end="912:56">()</parameter_list> <block pos:start="912:58" pos:end="914:9">{<block_content pos:start="913:17" pos:end="913:44">
		<return pos:start="913:17" pos:end="913:44">return <expr pos:start="913:24" pos:end="913:43"><name pos:start="913:24" pos:end="913:43">newPrioritySideLines</name></expr>;</return>
	</block_content>}</block></function>
	
	<function pos:start="916:9" pos:end="918:9"><type pos:start="916:9" pos:end="916:33"><specifier pos:start="916:9" pos:end="916:14">public</specifier> <name pos:start="916:16" pos:end="916:33"><name pos:start="916:16" pos:end="916:19">List</name><argument_list type="generic" pos:start="916:20" pos:end="916:33">&lt;<argument pos:start="916:21" pos:end="916:32"><name pos:start="916:21" pos:end="916:32">PrioritySide</name></argument>&gt;</argument_list></name></type> <name pos:start="916:35" pos:end="916:53">getAllPrioritySides</name><parameter_list pos:start="916:54" pos:end="916:55">()</parameter_list> <block pos:start="916:57" pos:end="918:9">{<block_content pos:start="917:17" pos:end="917:40">
		<return pos:start="917:17" pos:end="917:40">return <expr pos:start="917:24" pos:end="917:39"><name pos:start="917:24" pos:end="917:39">allPrioritySides</name></expr>;</return>
	</block_content>}</block></function>
	
	<function pos:start="920:9" pos:end="922:9"><type pos:start="920:9" pos:end="920:30"><specifier pos:start="920:9" pos:end="920:14">public</specifier> <name pos:start="920:16" pos:end="920:30"><name pos:start="920:16" pos:end="920:19">List</name><argument_list type="generic" pos:start="920:20" pos:end="920:30">&lt;<argument pos:start="920:21" pos:end="920:29"><name pos:start="920:21" pos:end="920:29">LPolyline</name></argument>&gt;</argument_list></name></type> <name pos:start="920:32" pos:end="920:50">getAllPriorityLines</name><parameter_list pos:start="920:51" pos:end="920:52">()</parameter_list> <block pos:start="920:54" pos:end="922:9">{<block_content pos:start="921:17" pos:end="921:40">
		<return pos:start="921:17" pos:end="921:40">return <expr pos:start="921:24" pos:end="921:39"><name pos:start="921:24" pos:end="921:39">allPriorityLines</name></expr>;</return>
	</block_content>}</block></function>
	
	<function pos:start="924:9" pos:end="926:9"><type pos:start="924:9" pos:end="924:32"><specifier pos:start="924:9" pos:end="924:14">public</specifier> <name pos:start="924:16" pos:end="924:32"><name pos:start="924:16" pos:end="924:19">List</name><argument_list type="generic" pos:start="924:20" pos:end="924:32">&lt;<argument pos:start="924:21" pos:end="924:31"><name pos:start="924:21" pos:end="924:31">UIEdgePoint</name></argument>&gt;</argument_list></name></type> <name pos:start="924:34" pos:end="924:52">getAllSideWaypoints</name><parameter_list pos:start="924:53" pos:end="924:54">()</parameter_list> <block pos:start="924:56" pos:end="926:9">{<block_content pos:start="925:17" pos:end="925:58">
		<return pos:start="925:17" pos:end="925:58">return <expr pos:start="925:24" pos:end="925:57"><operator pos:start="925:24" pos:end="925:26">new</operator> <call pos:start="925:28" pos:end="925:57"><name pos:start="925:28" pos:end="925:39"><name pos:start="925:28" pos:end="925:37">LinkedList</name><argument_list type="generic" pos:start="925:38" pos:end="925:39">&lt;&gt;</argument_list></name><argument_list pos:start="925:40" pos:end="925:57">(<argument pos:start="925:41" pos:end="925:56"><expr pos:start="925:41" pos:end="925:56"><name pos:start="925:41" pos:end="925:56">allSideWaypoints</name></expr></argument>)</argument_list></call></expr>;</return>
	</block_content>}</block></function>
	
	<function pos:start="928:9" pos:end="930:9"><type pos:start="928:9" pos:end="928:22"><specifier pos:start="928:9" pos:end="928:14">public</specifier> <name pos:start="928:16" pos:end="928:22">Boolean</name></type> <name pos:start="928:24" pos:end="928:34">getUpstream</name><parameter_list pos:start="928:35" pos:end="928:36">()</parameter_list> <block pos:start="928:38" pos:end="930:9">{<block_content pos:start="929:17" pos:end="929:32">
		<return pos:start="929:17" pos:end="929:32">return <expr pos:start="929:24" pos:end="929:31"><name pos:start="929:24" pos:end="929:31">upstream</name></expr>;</return>
	</block_content>}</block></function>
	
	<function pos:start="932:9" pos:end="934:9"><type pos:start="932:9" pos:end="932:19"><specifier pos:start="932:9" pos:end="932:14">public</specifier> <name pos:start="932:16" pos:end="932:19">void</name></type> <name pos:start="932:21" pos:end="932:31">setUpstream</name><parameter_list pos:start="932:32" pos:end="932:49">(<parameter pos:start="932:33" pos:end="932:48"><decl pos:start="932:33" pos:end="932:48"><type pos:start="932:33" pos:end="932:39"><name pos:start="932:33" pos:end="932:39">Boolean</name></type> <name pos:start="932:41" pos:end="932:48">upstream</name></decl></parameter>)</parameter_list> <block pos:start="932:51" pos:end="934:9">{<block_content pos:start="933:17" pos:end="933:41">
		<expr_stmt pos:start="933:17" pos:end="933:41"><expr pos:start="933:17" pos:end="933:40"><name pos:start="933:17" pos:end="933:29"><name pos:start="933:17" pos:end="933:20">this</name><operator pos:start="933:21" pos:end="933:21">.</operator><name pos:start="933:22" pos:end="933:29">upstream</name></name> <operator pos:start="933:31" pos:end="933:31">=</operator> <name pos:start="933:33" pos:end="933:40">upstream</name></expr>;</expr_stmt>
	</block_content>}</block></function>
}</block></class> </unit>
