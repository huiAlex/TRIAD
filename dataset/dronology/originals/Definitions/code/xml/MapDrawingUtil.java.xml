<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="Java" filename="flatCode/MapDrawingUtil.java" pos:tabs="8"><package pos:start="1:1" pos:end="1:49">package <name pos:start="1:9" pos:end="1:48"><name pos:start="1:9" pos:end="1:11">edu</name><operator pos:start="1:12" pos:end="1:12">.</operator><name pos:start="1:13" pos:end="1:14">nd</name><operator pos:start="1:15" pos:end="1:15">.</operator><name pos:start="1:16" pos:end="1:24">dronology</name><operator pos:start="1:25" pos:end="1:25">.</operator><name pos:start="1:26" pos:end="1:27">ui</name><operator pos:start="1:28" pos:end="1:28">.</operator><name pos:start="1:29" pos:end="1:34">vaadin</name><operator pos:start="1:35" pos:end="1:35">.</operator><name pos:start="1:36" pos:end="1:48">activeflights</name></name>;</package>

<import pos:start="3:1" pos:end="3:32">import <name pos:start="3:8" pos:end="3:31"><name pos:start="3:8" pos:end="3:11">java</name><operator pos:start="3:12" pos:end="3:12">.</operator><name pos:start="3:13" pos:end="3:15">rmi</name><operator pos:start="3:16" pos:end="3:16">.</operator><name pos:start="3:17" pos:end="3:31">RemoteException</name></name>;</import>
<import pos:start="4:1" pos:end="4:27">import <name pos:start="4:8" pos:end="4:26"><name pos:start="4:8" pos:end="4:11">java</name><operator pos:start="4:12" pos:end="4:12">.</operator><name pos:start="4:13" pos:end="4:16">util</name><operator pos:start="4:17" pos:end="4:17">.</operator><name pos:start="4:18" pos:end="4:26">ArrayList</name></name>;</import>
<import pos:start="5:1" pos:end="5:28">import <name pos:start="5:8" pos:end="5:27"><name pos:start="5:8" pos:end="5:11">java</name><operator pos:start="5:12" pos:end="5:12">.</operator><name pos:start="5:13" pos:end="5:16">util</name><operator pos:start="5:17" pos:end="5:17">.</operator><name pos:start="5:18" pos:end="5:27">Collection</name></name>;</import>
<import pos:start="6:1" pos:end="6:29">import <name pos:start="6:8" pos:end="6:28"><name pos:start="6:8" pos:end="6:11">java</name><operator pos:start="6:12" pos:end="6:12">.</operator><name pos:start="6:13" pos:end="6:16">util</name><operator pos:start="6:17" pos:end="6:17">.</operator><name pos:start="6:18" pos:end="6:28">Collections</name></name>;</import>
<import pos:start="7:1" pos:end="7:22">import <name pos:start="7:8" pos:end="7:21"><name pos:start="7:8" pos:end="7:11">java</name><operator pos:start="7:12" pos:end="7:12">.</operator><name pos:start="7:13" pos:end="7:16">util</name><operator pos:start="7:17" pos:end="7:17">.</operator><name pos:start="7:18" pos:end="7:21">List</name></name>;</import>

<import pos:start="9:1" pos:end="9:37">import <name pos:start="9:8" pos:end="9:36"><name pos:start="9:8" pos:end="9:10">org</name><operator pos:start="9:11" pos:end="9:11">.</operator><name pos:start="9:12" pos:end="9:17">vaadin</name><operator pos:start="9:18" pos:end="9:18">.</operator><name pos:start="9:19" pos:end="9:23">addon</name><operator pos:start="9:24" pos:end="9:24">.</operator><name pos:start="9:25" pos:end="9:31">leaflet</name><operator pos:start="9:32" pos:end="9:32">.</operator><name pos:start="9:33" pos:end="9:36">LMap</name></name>;</import>
<import pos:start="10:1" pos:end="10:40">import <name pos:start="10:8" pos:end="10:39"><name pos:start="10:8" pos:end="10:10">org</name><operator pos:start="10:11" pos:end="10:11">.</operator><name pos:start="10:12" pos:end="10:17">vaadin</name><operator pos:start="10:18" pos:end="10:18">.</operator><name pos:start="10:19" pos:end="10:23">addon</name><operator pos:start="10:24" pos:end="10:24">.</operator><name pos:start="10:25" pos:end="10:31">leaflet</name><operator pos:start="10:32" pos:end="10:32">.</operator><name pos:start="10:33" pos:end="10:39">LMarker</name></name>;</import>
<import pos:start="11:1" pos:end="11:42">import <name pos:start="11:8" pos:end="11:41"><name pos:start="11:8" pos:end="11:10">org</name><operator pos:start="11:11" pos:end="11:11">.</operator><name pos:start="11:12" pos:end="11:17">vaadin</name><operator pos:start="11:18" pos:end="11:18">.</operator><name pos:start="11:19" pos:end="11:23">addon</name><operator pos:start="11:24" pos:end="11:24">.</operator><name pos:start="11:25" pos:end="11:31">leaflet</name><operator pos:start="11:32" pos:end="11:32">.</operator><name pos:start="11:33" pos:end="11:41">LPolyline</name></name>;</import>
<import pos:start="12:1" pos:end="12:45">import <name pos:start="12:8" pos:end="12:44"><name pos:start="12:8" pos:end="12:10">org</name><operator pos:start="12:11" pos:end="12:11">.</operator><name pos:start="12:12" pos:end="12:17">vaadin</name><operator pos:start="12:18" pos:end="12:18">.</operator><name pos:start="12:19" pos:end="12:23">addon</name><operator pos:start="12:24" pos:end="12:24">.</operator><name pos:start="12:25" pos:end="12:31">leaflet</name><operator pos:start="12:32" pos:end="12:32">.</operator><name pos:start="12:33" pos:end="12:38">shared</name><operator pos:start="12:39" pos:end="12:39">.</operator><name pos:start="12:40" pos:end="12:44">Point</name></name>;</import>

<import pos:start="14:1" pos:end="14:34">import <name pos:start="14:8" pos:end="14:33"><name pos:start="14:8" pos:end="14:10">com</name><operator pos:start="14:11" pos:end="14:11">.</operator><name pos:start="14:12" pos:end="14:17">vaadin</name><operator pos:start="14:18" pos:end="14:18">.</operator><name pos:start="14:19" pos:end="14:24">server</name><operator pos:start="14:25" pos:end="14:25">.</operator><name pos:start="14:26" pos:end="14:33">Resource</name></name>;</import>
<import pos:start="15:1" pos:end="15:34">import <name pos:start="15:8" pos:end="15:33"><name pos:start="15:8" pos:end="15:10">com</name><operator pos:start="15:11" pos:end="15:11">.</operator><name pos:start="15:12" pos:end="15:17">vaadin</name><operator pos:start="15:18" pos:end="15:18">.</operator><name pos:start="15:19" pos:end="15:20">ui</name><operator pos:start="15:21" pos:end="15:21">.</operator><name pos:start="15:22" pos:end="15:33">Notification</name></name>;</import>

<import pos:start="17:1" pos:end="17:43">import <name pos:start="17:8" pos:end="17:42"><name pos:start="17:8" pos:end="17:10">edu</name><operator pos:start="17:11" pos:end="17:11">.</operator><name pos:start="17:12" pos:end="17:13">nd</name><operator pos:start="17:14" pos:end="17:14">.</operator><name pos:start="17:15" pos:end="17:23">dronology</name><operator pos:start="17:24" pos:end="17:24">.</operator><name pos:start="17:25" pos:end="17:28">core</name><operator pos:start="17:29" pos:end="17:29">.</operator><name pos:start="17:30" pos:end="17:33">util</name><operator pos:start="17:34" pos:end="17:34">.</operator><name pos:start="17:35" pos:end="17:42">Waypoint</name></name>;</import>
<import pos:start="18:1" pos:end="18:47">import <name pos:start="18:8" pos:end="18:46"><name pos:start="18:8" pos:end="18:10">edu</name><operator pos:start="18:11" pos:end="18:11">.</operator><name pos:start="18:12" pos:end="18:13">nd</name><operator pos:start="18:14" pos:end="18:14">.</operator><name pos:start="18:15" pos:end="18:23">dronology</name><operator pos:start="18:24" pos:end="18:24">.</operator><name pos:start="18:25" pos:end="18:28">core</name><operator pos:start="18:29" pos:end="18:29">.</operator><name pos:start="18:30" pos:end="18:36">vehicle</name><operator pos:start="18:37" pos:end="18:37">.</operator><name pos:start="18:38" pos:end="18:46">IUAVProxy</name></name>;</import>
<import pos:start="19:1" pos:end="19:58">import <name pos:start="19:8" pos:end="19:57"><name pos:start="19:8" pos:end="19:10">edu</name><operator pos:start="19:11" pos:end="19:11">.</operator><name pos:start="19:12" pos:end="19:13">nd</name><operator pos:start="19:14" pos:end="19:14">.</operator><name pos:start="19:15" pos:end="19:23">dronology</name><operator pos:start="19:24" pos:end="19:24">.</operator><name pos:start="19:25" pos:end="19:32">services</name><operator pos:start="19:33" pos:end="19:33">.</operator><name pos:start="19:34" pos:end="19:37">core</name><operator pos:start="19:38" pos:end="19:38">.</operator><name pos:start="19:39" pos:end="19:42">info</name><operator pos:start="19:43" pos:end="19:43">.</operator><name pos:start="19:44" pos:end="19:57">FlightPlanInfo</name></name>;</import>
<import pos:start="20:1" pos:end="20:70">import <name pos:start="20:8" pos:end="20:69"><name pos:start="20:8" pos:end="20:10">edu</name><operator pos:start="20:11" pos:end="20:11">.</operator><name pos:start="20:12" pos:end="20:13">nd</name><operator pos:start="20:14" pos:end="20:14">.</operator><name pos:start="20:15" pos:end="20:23">dronology</name><operator pos:start="20:24" pos:end="20:24">.</operator><name pos:start="20:25" pos:end="20:32">services</name><operator pos:start="20:33" pos:end="20:33">.</operator><name pos:start="20:34" pos:end="20:37">core</name><operator pos:start="20:38" pos:end="20:38">.</operator><name pos:start="20:39" pos:end="20:44">remote</name><operator pos:start="20:45" pos:end="20:45">.</operator><name pos:start="20:46" pos:end="20:69">IDroneSetupRemoteService</name></name>;</import>
<import pos:start="21:1" pos:end="21:73">import <name pos:start="21:8" pos:end="21:72"><name pos:start="21:8" pos:end="21:10">edu</name><operator pos:start="21:11" pos:end="21:11">.</operator><name pos:start="21:12" pos:end="21:13">nd</name><operator pos:start="21:14" pos:end="21:14">.</operator><name pos:start="21:15" pos:end="21:23">dronology</name><operator pos:start="21:24" pos:end="21:24">.</operator><name pos:start="21:25" pos:end="21:32">services</name><operator pos:start="21:33" pos:end="21:33">.</operator><name pos:start="21:34" pos:end="21:37">core</name><operator pos:start="21:38" pos:end="21:38">.</operator><name pos:start="21:39" pos:end="21:44">remote</name><operator pos:start="21:45" pos:end="21:45">.</operator><name pos:start="21:46" pos:end="21:72">IFlightManagerRemoteService</name></name>;</import>
<import pos:start="22:1" pos:end="22:69">import <name pos:start="22:8" pos:end="22:68"><name pos:start="22:8" pos:end="22:10">edu</name><operator pos:start="22:11" pos:end="22:11">.</operator><name pos:start="22:12" pos:end="22:13">nd</name><operator pos:start="22:14" pos:end="22:14">.</operator><name pos:start="22:15" pos:end="22:23">dronology</name><operator pos:start="22:24" pos:end="22:24">.</operator><name pos:start="22:25" pos:end="22:32">services</name><operator pos:start="22:33" pos:end="22:33">.</operator><name pos:start="22:34" pos:end="22:37">core</name><operator pos:start="22:38" pos:end="22:38">.</operator><name pos:start="22:39" pos:end="22:42">util</name><operator pos:start="22:43" pos:end="22:43">.</operator><name pos:start="22:44" pos:end="22:68">DronologyServiceException</name></name>;</import>
<import pos:start="23:1" pos:end="23:64">import <name pos:start="23:8" pos:end="23:63"><name pos:start="23:8" pos:end="23:10">edu</name><operator pos:start="23:11" pos:end="23:11">.</operator><name pos:start="23:12" pos:end="23:13">nd</name><operator pos:start="23:14" pos:end="23:14">.</operator><name pos:start="23:15" pos:end="23:23">dronology</name><operator pos:start="23:24" pos:end="23:24">.</operator><name pos:start="23:25" pos:end="23:26">ui</name><operator pos:start="23:27" pos:end="23:27">.</operator><name pos:start="23:28" pos:end="23:33">vaadin</name><operator pos:start="23:34" pos:end="23:34">.</operator><name pos:start="23:35" pos:end="23:43">connector</name><operator pos:start="23:44" pos:end="23:44">.</operator><name pos:start="23:45" pos:end="23:63">BaseServiceProvider</name></name>;</import>
<import pos:start="24:1" pos:end="24:45">import <name pos:start="24:8" pos:end="24:44"><name pos:start="24:8" pos:end="24:10">edu</name><operator pos:start="24:11" pos:end="24:11">.</operator><name pos:start="24:12" pos:end="24:13">nd</name><operator pos:start="24:14" pos:end="24:14">.</operator><name pos:start="24:15" pos:end="24:23">dronology</name><operator pos:start="24:24" pos:end="24:24">.</operator><name pos:start="24:25" pos:end="24:26">ui</name><operator pos:start="24:27" pos:end="24:27">.</operator><name pos:start="24:28" pos:end="24:33">vaadin</name><operator pos:start="24:34" pos:end="24:34">.</operator><name pos:start="24:35" pos:end="24:39">start</name><operator pos:start="24:40" pos:end="24:40">.</operator><name pos:start="24:41" pos:end="24:44">MyUI</name></name>;</import>
<import pos:start="25:1" pos:end="25:54">import <name pos:start="25:8" pos:end="25:53"><name pos:start="25:8" pos:end="25:10">edu</name><operator pos:start="25:11" pos:end="25:11">.</operator><name pos:start="25:12" pos:end="25:13">nd</name><operator pos:start="25:14" pos:end="25:14">.</operator><name pos:start="25:15" pos:end="25:23">dronology</name><operator pos:start="25:24" pos:end="25:24">.</operator><name pos:start="25:25" pos:end="25:26">ui</name><operator pos:start="25:27" pos:end="25:27">.</operator><name pos:start="25:28" pos:end="25:33">vaadin</name><operator pos:start="25:34" pos:end="25:34">.</operator><name pos:start="25:35" pos:end="25:39">utils</name><operator pos:start="25:40" pos:end="25:40">.</operator><name pos:start="25:41" pos:end="25:53">ImageProvider</name></name>;</import>
<import pos:start="26:1" pos:end="26:59">import <name pos:start="26:8" pos:end="26:58"><name pos:start="26:8" pos:end="26:10">edu</name><operator pos:start="26:11" pos:end="26:11">.</operator><name pos:start="26:12" pos:end="26:13">nd</name><operator pos:start="26:14" pos:end="26:14">.</operator><name pos:start="26:15" pos:end="26:23">dronology</name><operator pos:start="26:24" pos:end="26:24">.</operator><name pos:start="26:25" pos:end="26:26">ui</name><operator pos:start="26:27" pos:end="26:27">.</operator><name pos:start="26:28" pos:end="26:33">vaadin</name><operator pos:start="26:34" pos:end="26:34">.</operator><name pos:start="26:35" pos:end="26:39">utils</name><operator pos:start="26:40" pos:end="26:40">.</operator><name pos:start="26:41" pos:end="26:58">MapMarkerUtilities</name></name>;</import>
<import pos:start="27:1" pos:end="27:51">import <name pos:start="27:8" pos:end="27:50"><name pos:start="27:8" pos:end="27:10">edu</name><operator pos:start="27:11" pos:end="27:11">.</operator><name pos:start="27:12" pos:end="27:13">nd</name><operator pos:start="27:14" pos:end="27:14">.</operator><name pos:start="27:15" pos:end="27:23">dronology</name><operator pos:start="27:24" pos:end="27:24">.</operator><name pos:start="27:25" pos:end="27:26">ui</name><operator pos:start="27:27" pos:end="27:27">.</operator><name pos:start="27:28" pos:end="27:33">vaadin</name><operator pos:start="27:34" pos:end="27:34">.</operator><name pos:start="27:35" pos:end="27:39">utils</name><operator pos:start="27:40" pos:end="27:40">.</operator><name pos:start="27:41" pos:end="27:50">UIWayPoint</name></name>;</import>
<import pos:start="28:1" pos:end="28:30">import <name pos:start="28:8" pos:end="28:29"><name pos:start="28:8" pos:end="28:10">net</name><operator pos:start="28:11" pos:end="28:11">.</operator><name pos:start="28:12" pos:end="28:13">mv</name><operator pos:start="28:14" pos:end="28:14">.</operator><name pos:start="28:15" pos:end="28:21">logging</name><operator pos:start="28:22" pos:end="28:22">.</operator><name pos:start="28:23" pos:end="28:29">ILogger</name></name>;</import>
<import pos:start="29:1" pos:end="29:37">import <name pos:start="29:8" pos:end="29:36"><name pos:start="29:8" pos:end="29:10">net</name><operator pos:start="29:11" pos:end="29:11">.</operator><name pos:start="29:12" pos:end="29:13">mv</name><operator pos:start="29:14" pos:end="29:14">.</operator><name pos:start="29:15" pos:end="29:21">logging</name><operator pos:start="29:22" pos:end="29:22">.</operator><name pos:start="29:23" pos:end="29:36">LoggerProvider</name></name>;</import>

<comment type="block" format="javadoc" pos:start="31:1" pos:end="37:3">/**
 * Utility class for drawing marker and UAV icons on the map &lt;br&gt;
 * &lt;b&gt;NEEDS ADDITIONAL CLEANUP &amp; REFACTORING!&lt;b&gt;
 * 
 * @author Michael Vierhauser
 *
 */</comment>
<class pos:start="38:1" pos:end="390:1"><specifier pos:start="38:1" pos:end="38:6">public</specifier> class <name pos:start="38:14" pos:end="38:27">MapDrawingUtil</name> <block pos:start="38:29" pos:end="390:1">{

	<decl_stmt pos:start="40:9" pos:end="40:93"><decl pos:start="40:9" pos:end="40:92"><type pos:start="40:9" pos:end="40:36"><specifier pos:start="40:9" pos:end="40:15">private</specifier> <specifier pos:start="40:17" pos:end="40:22">static</specifier> <specifier pos:start="40:24" pos:end="40:28">final</specifier> <name pos:start="40:30" pos:end="40:36">ILogger</name></type> <name pos:start="40:38" pos:end="40:43">LOGGER</name> <init pos:start="40:45" pos:end="40:92">= <expr pos:start="40:47" pos:end="40:92"><call pos:start="40:47" pos:end="40:92"><name pos:start="40:47" pos:end="40:70"><name pos:start="40:47" pos:end="40:60">LoggerProvider</name><operator pos:start="40:61" pos:end="40:61">.</operator><name pos:start="40:62" pos:end="40:70">getLogger</name></name><argument_list pos:start="40:71" pos:end="40:92">(<argument pos:start="40:72" pos:end="40:91"><expr pos:start="40:72" pos:end="40:91"><name pos:start="40:72" pos:end="40:91"><name pos:start="40:72" pos:end="40:85">MapDrawingUtil</name><operator pos:start="40:86" pos:end="40:86">.</operator><name pos:start="40:87" pos:end="40:91">class</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

	<decl_stmt pos:start="42:9" pos:end="42:32"><decl pos:start="42:9" pos:end="42:31"><type pos:start="42:9" pos:end="42:20"><specifier pos:start="42:9" pos:end="42:15">private</specifier> <name pos:start="42:17" pos:end="42:20">LMap</name></type> <name pos:start="42:22" pos:end="42:31">leafletMap</name></decl>;</decl_stmt>
	<decl_stmt pos:start="43:9" pos:end="43:45"><decl pos:start="43:9" pos:end="43:44"><type pos:start="43:9" pos:end="43:34"><specifier pos:start="43:9" pos:end="43:15">private</specifier> <name pos:start="43:17" pos:end="43:34">MapMarkerUtilities</name></type> <name pos:start="43:36" pos:end="43:44">utilities</name></decl>;</decl_stmt>

	<decl_stmt pos:start="45:9" pos:end="45:72"><decl pos:start="45:9" pos:end="45:71"><type pos:start="45:9" pos:end="45:35"><specifier pos:start="45:9" pos:end="45:15">private</specifier> <name pos:start="45:17" pos:end="45:35"><name pos:start="45:17" pos:end="45:20">List</name><argument_list type="generic" pos:start="45:21" pos:end="45:35">&lt;<argument pos:start="45:22" pos:end="45:34"><name pos:start="45:22" pos:end="45:34"><name pos:start="45:22" pos:end="45:25">List</name><argument_list type="generic" pos:start="45:26" pos:end="45:34">&lt;<argument pos:start="45:27" pos:end="45:33"><name pos:start="45:27" pos:end="45:33">LMarker</name></argument>&gt;</argument_list></name></argument>&gt;</argument_list></name></type> <name pos:start="45:37" pos:end="45:51">wayPointMarkers</name> <init pos:start="45:53" pos:end="45:71">= <expr pos:start="45:55" pos:end="45:71"><operator pos:start="45:55" pos:end="45:57">new</operator> <call pos:start="45:59" pos:end="45:71"><name pos:start="45:59" pos:end="45:69"><name pos:start="45:59" pos:end="45:67">ArrayList</name><argument_list type="generic" pos:start="45:68" pos:end="45:69">&lt;&gt;</argument_list></name><argument_list pos:start="45:70" pos:end="45:71">()</argument_list></call></expr></init></decl>;</decl_stmt>
	<decl_stmt pos:start="46:9" pos:end="46:71"><decl pos:start="46:9" pos:end="46:70"><type pos:start="46:9" pos:end="46:37"><specifier pos:start="46:9" pos:end="46:15">private</specifier> <name pos:start="46:17" pos:end="46:37"><name pos:start="46:17" pos:end="46:20">List</name><argument_list type="generic" pos:start="46:21" pos:end="46:37">&lt;<argument pos:start="46:22" pos:end="46:36"><name pos:start="46:22" pos:end="46:36"><name pos:start="46:22" pos:end="46:25">List</name><argument_list type="generic" pos:start="46:26" pos:end="46:36">&lt;<argument pos:start="46:27" pos:end="46:35"><name pos:start="46:27" pos:end="46:35">LPolyline</name></argument>&gt;</argument_list></name></argument>&gt;</argument_list></name></type> <name pos:start="46:39" pos:end="46:50">flightRoutes</name> <init pos:start="46:52" pos:end="46:70">= <expr pos:start="46:54" pos:end="46:70"><operator pos:start="46:54" pos:end="46:56">new</operator> <call pos:start="46:58" pos:end="46:70"><name pos:start="46:58" pos:end="46:68"><name pos:start="46:58" pos:end="46:66">ArrayList</name><argument_list type="generic" pos:start="46:67" pos:end="46:68">&lt;&gt;</argument_list></name><argument_list pos:start="46:69" pos:end="46:70">()</argument_list></call></expr></init></decl>;</decl_stmt>
	<decl_stmt pos:start="47:9" pos:end="47:63"><decl pos:start="47:9" pos:end="47:62"><type pos:start="47:9" pos:end="47:34"><specifier pos:start="47:9" pos:end="47:15">private</specifier> <name pos:start="47:17" pos:end="47:34"><name pos:start="47:17" pos:end="47:25">ArrayList</name><argument_list type="generic" pos:start="47:26" pos:end="47:34">&lt;<argument pos:start="47:27" pos:end="47:33"><name pos:start="47:27" pos:end="47:33">LMarker</name></argument>&gt;</argument_list></name></type> <name pos:start="47:36" pos:end="47:42">markers</name> <init pos:start="47:44" pos:end="47:62">= <expr pos:start="47:46" pos:end="47:62"><operator pos:start="47:46" pos:end="47:48">new</operator> <call pos:start="47:50" pos:end="47:62"><name pos:start="47:50" pos:end="47:60"><name pos:start="47:50" pos:end="47:58">ArrayList</name><argument_list type="generic" pos:start="47:59" pos:end="47:60">&lt;&gt;</argument_list></name><argument_list pos:start="47:61" pos:end="47:62">()</argument_list></call></expr></init></decl>;</decl_stmt>

	<decl_stmt pos:start="49:9" pos:end="49:80"><decl pos:start="49:9" pos:end="49:79"><type pos:start="49:9" pos:end="49:24"><specifier pos:start="49:9" pos:end="49:15">private</specifier> <name pos:start="49:17" pos:end="49:24">Resource</name></type> <name pos:start="49:26" pos:end="49:41">droneIconFocused</name> <init pos:start="49:43" pos:end="49:79">= <expr pos:start="49:45" pos:end="49:79"><call pos:start="49:45" pos:end="49:79"><name pos:start="49:45" pos:end="49:77"><name pos:start="49:45" pos:end="49:57">ImageProvider</name><operator pos:start="49:58" pos:end="49:58">.</operator><name pos:start="49:59" pos:end="49:77">getFocusUAVResource</name></name><argument_list pos:start="49:78" pos:end="49:79">()</argument_list></call></expr></init></decl>;</decl_stmt>
	<decl_stmt pos:start="50:9" pos:end="50:75"><decl pos:start="50:9" pos:end="50:74"><type pos:start="50:9" pos:end="50:24"><specifier pos:start="50:9" pos:end="50:15">private</specifier> <name pos:start="50:17" pos:end="50:24">Resource</name></type> <name pos:start="50:26" pos:end="50:34">droneIcon</name> <init pos:start="50:36" pos:end="50:74">= <expr pos:start="50:38" pos:end="50:74"><call pos:start="50:38" pos:end="50:74"><name pos:start="50:38" pos:end="50:72"><name pos:start="50:38" pos:end="50:50">ImageProvider</name><operator pos:start="50:51" pos:end="50:51">.</operator><name pos:start="50:52" pos:end="50:72">getDefaultUAVResource</name></name><argument_list pos:start="50:73" pos:end="50:74">()</argument_list></call></expr></init></decl>;</decl_stmt> 
	<decl_stmt pos:start="51:9" pos:end="51:84"><decl pos:start="51:9" pos:end="51:83"><type pos:start="51:9" pos:end="51:24"><specifier pos:start="51:9" pos:end="51:15">private</specifier> <name pos:start="51:17" pos:end="51:24">Resource</name></type> <name pos:start="51:26" pos:end="51:42">droneIconSelected</name> <init pos:start="51:44" pos:end="51:83">= <expr pos:start="51:46" pos:end="51:83"><call pos:start="51:46" pos:end="51:83"><name pos:start="51:46" pos:end="51:81"><name pos:start="51:46" pos:end="51:58">ImageProvider</name><operator pos:start="51:59" pos:end="51:59">.</operator><name pos:start="51:60" pos:end="51:81">getSelectedUAVResource</name></name><argument_list pos:start="51:82" pos:end="51:83">()</argument_list></call></expr></init></decl>;</decl_stmt>

	<decl_stmt pos:start="53:9" pos:end="53:70"><decl pos:start="53:9" pos:end="53:69"><type pos:start="53:9" pos:end="53:24"><specifier pos:start="53:9" pos:end="53:15">private</specifier> <name pos:start="53:17" pos:end="53:24">Resource</name></type> <name pos:start="53:26" pos:end="53:32">dotIcon</name> <init pos:start="53:34" pos:end="53:69">= <expr pos:start="53:36" pos:end="53:69"><call pos:start="53:36" pos:end="53:69"><name pos:start="53:36" pos:end="53:67"><name pos:start="53:36" pos:end="53:48">ImageProvider</name><operator pos:start="53:49" pos:end="53:49">.</operator><name pos:start="53:50" pos:end="53:67">getDotIconResource</name></name><argument_list pos:start="53:68" pos:end="53:69">()</argument_list></call></expr></init></decl>;</decl_stmt>

	<decl_stmt pos:start="55:9" pos:end="55:44"><decl pos:start="55:9" pos:end="55:43"><type pos:start="55:9" pos:end="55:30"><specifier pos:start="55:9" pos:end="55:15">private</specifier> <name pos:start="55:17" pos:end="55:30">AFMapComponent</name></type> <name pos:start="55:32" pos:end="55:43">mapComponent</name></decl>;</decl_stmt>

	<decl_stmt pos:start="57:9" pos:end="57:37"><decl pos:start="57:9" pos:end="57:36"><type pos:start="57:9" pos:end="57:27"><name pos:start="57:9" pos:end="57:27">BaseServiceProvider</name></type> <name pos:start="57:29" pos:end="57:36">provider</name></decl>;</decl_stmt>
	<decl_stmt pos:start="58:9" pos:end="58:65"><decl pos:start="58:9" pos:end="58:64"><type pos:start="58:9" pos:end="58:43"><specifier pos:start="58:9" pos:end="58:15">private</specifier> <name pos:start="58:17" pos:end="58:43">IFlightManagerRemoteService</name></type> <name pos:start="58:45" pos:end="58:64">flightManagerService</name></decl>;</decl_stmt>
	<decl_stmt pos:start="59:9" pos:end="59:59"><decl pos:start="59:9" pos:end="59:58"><type pos:start="59:9" pos:end="59:40"><specifier pos:start="59:9" pos:end="59:15">private</specifier> <name pos:start="59:17" pos:end="59:40">IDroneSetupRemoteService</name></type> <name pos:start="59:42" pos:end="59:58">droneSetupService</name></decl>;</decl_stmt>

	<decl_stmt pos:start="61:9" pos:end="61:35"><decl pos:start="61:9" pos:end="61:34"><type pos:start="61:9" pos:end="61:22"><specifier pos:start="61:9" pos:end="61:15">private</specifier> <name pos:start="61:17" pos:end="61:22">double</name></type> <name pos:start="61:24" pos:end="61:29">ACHN_X</name> <init pos:start="61:31" pos:end="61:34">= <expr pos:start="61:33" pos:end="61:34"><literal type="number" pos:start="61:33" pos:end="61:34">11</literal></expr></init></decl>;</decl_stmt>

	<decl_stmt pos:start="63:9" pos:end="63:35"><decl pos:start="63:9" pos:end="63:34"><type pos:start="63:9" pos:end="63:22"><specifier pos:start="63:9" pos:end="63:15">private</specifier> <name pos:start="63:17" pos:end="63:22">double</name></type> <name pos:start="63:24" pos:end="63:29">ANCH_Y</name> <init pos:start="63:31" pos:end="63:34">= <expr pos:start="63:33" pos:end="63:34"><literal type="number" pos:start="63:33" pos:end="63:34">23</literal></expr></init></decl>;</decl_stmt>

	<constructor pos:start="65:9" pos:end="71:9"><specifier pos:start="65:9" pos:end="65:14">public</specifier> <name pos:start="65:16" pos:end="65:29">MapDrawingUtil</name><parameter_list pos:start="65:30" pos:end="65:75">(<parameter pos:start="65:31" pos:end="65:45"><decl pos:start="65:31" pos:end="65:45"><type pos:start="65:31" pos:end="65:45"><name pos:start="65:31" pos:end="65:34">LMap</name></type> <name pos:start="65:36" pos:end="65:45">leafletMap</name></decl></parameter>, <parameter pos:start="65:48" pos:end="65:74"><decl pos:start="65:48" pos:end="65:74"><type pos:start="65:48" pos:end="65:74"><name pos:start="65:48" pos:end="65:61">AFMapComponent</name></type> <name pos:start="65:63" pos:end="65:74">mapComponent</name></decl></parameter>)</parameter_list> <block pos:start="65:77" pos:end="71:9">{<block_content pos:start="66:17" pos:end="69:33">
		<expr_stmt pos:start="66:17" pos:end="66:45"><expr pos:start="66:17" pos:end="66:44"><name pos:start="66:17" pos:end="66:31"><name pos:start="66:17" pos:end="66:20">this</name><operator pos:start="66:21" pos:end="66:21">.</operator><name pos:start="66:22" pos:end="66:31">leafletMap</name></name> <operator pos:start="66:33" pos:end="66:33">=</operator> <name pos:start="66:35" pos:end="66:44">leafletMap</name></expr>;</expr_stmt>
		<expr_stmt pos:start="67:17" pos:end="67:49"><expr pos:start="67:17" pos:end="67:48"><name pos:start="67:17" pos:end="67:33"><name pos:start="67:17" pos:end="67:20">this</name><operator pos:start="67:21" pos:end="67:21">.</operator><name pos:start="67:22" pos:end="67:33">mapComponent</name></name> <operator pos:start="67:35" pos:end="67:35">=</operator> <name pos:start="67:37" pos:end="67:48">mapComponent</name></expr>;</expr_stmt>
		<expr_stmt pos:start="68:17" pos:end="68:63"><expr pos:start="68:17" pos:end="68:62"><name pos:start="68:17" pos:end="68:25">utilities</name> <operator pos:start="68:27" pos:end="68:27">=</operator> <operator pos:start="68:29" pos:end="68:31">new</operator> <call pos:start="68:33" pos:end="68:62"><name pos:start="68:33" pos:end="68:50">MapMarkerUtilities</name><argument_list pos:start="68:51" pos:end="68:62">(<argument pos:start="68:52" pos:end="68:61"><expr pos:start="68:52" pos:end="68:61"><name pos:start="68:52" pos:end="68:61">leafletMap</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt pos:start="69:17" pos:end="69:33"><expr pos:start="69:17" pos:end="69:32"><call pos:start="69:17" pos:end="69:32"><name pos:start="69:17" pos:end="69:30">initConnection</name><argument_list pos:start="69:31" pos:end="69:32">()</argument_list></call></expr>;</expr_stmt>

	</block_content>}</block></constructor>

	<function pos:start="73:9" pos:end="95:9"><type pos:start="73:9" pos:end="73:20"><specifier pos:start="73:9" pos:end="73:15">private</specifier> <name pos:start="73:17" pos:end="73:20">void</name></type> <name pos:start="73:22" pos:end="73:35">initConnection</name><parameter_list pos:start="73:36" pos:end="73:37">()</parameter_list> <block pos:start="73:39" pos:end="95:9">{<block_content pos:start="74:17" pos:end="93:17">
		<try pos:start="74:17" pos:end="93:17">try <block pos:start="74:21" pos:end="80:17">{<block_content pos:start="75:25" pos:end="79:84">
			<expr_stmt pos:start="75:25" pos:end="75:54"><expr pos:start="75:25" pos:end="75:53"><name pos:start="75:25" pos:end="75:32">provider</name> <operator pos:start="75:34" pos:end="75:34">=</operator> <call pos:start="75:36" pos:end="75:53"><name pos:start="75:36" pos:end="75:51"><name pos:start="75:36" pos:end="75:39">MyUI</name><operator pos:start="75:40" pos:end="75:40">.</operator><name pos:start="75:41" pos:end="75:51">getProvider</name></name><argument_list pos:start="75:52" pos:end="75:53">()</argument_list></call></expr>;</expr_stmt>
			<expr_stmt pos:start="76:25" pos:end="77:87"><expr pos:start="76:25" pos:end="77:86"><name pos:start="76:25" pos:end="76:44">flightManagerService</name> <operator pos:start="76:46" pos:end="76:46">=</operator> <operator pos:start="76:48" pos:end="76:48">(</operator><name pos:start="76:49" pos:end="76:75">IFlightManagerRemoteService</name><operator pos:start="76:76" pos:end="76:76">)</operator> <call pos:start="76:78" pos:end="76:104"><name pos:start="76:78" pos:end="76:102"><name pos:start="76:78" pos:end="76:85">provider</name><operator pos:start="76:86" pos:end="76:86">.</operator><name pos:start="76:87" pos:end="76:102">getRemoteManager</name></name><argument_list pos:start="76:103" pos:end="76:104">()</argument_list></call>
					<operator pos:start="77:41" pos:end="77:41">.</operator><call pos:start="77:42" pos:end="77:86"><name pos:start="77:42" pos:end="77:51">getService</name><argument_list pos:start="77:52" pos:end="77:86">(<argument pos:start="77:53" pos:end="77:85"><expr pos:start="77:53" pos:end="77:85"><name pos:start="77:53" pos:end="77:85"><name pos:start="77:53" pos:end="77:79">IFlightManagerRemoteService</name><operator pos:start="77:80" pos:end="77:80">.</operator><name pos:start="77:81" pos:end="77:85">class</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt pos:start="78:25" pos:end="79:84"><expr pos:start="78:25" pos:end="79:83"><name pos:start="78:25" pos:end="78:41">droneSetupService</name> <operator pos:start="78:43" pos:end="78:43">=</operator> <operator pos:start="78:45" pos:end="78:45">(</operator><name pos:start="78:46" pos:end="78:69">IDroneSetupRemoteService</name><operator pos:start="78:70" pos:end="78:70">)</operator> <call pos:start="78:72" pos:end="78:98"><name pos:start="78:72" pos:end="78:96"><name pos:start="78:72" pos:end="78:79">provider</name><operator pos:start="78:80" pos:end="78:80">.</operator><name pos:start="78:81" pos:end="78:96">getRemoteManager</name></name><argument_list pos:start="78:97" pos:end="78:98">()</argument_list></call>
					<operator pos:start="79:41" pos:end="79:41">.</operator><call pos:start="79:42" pos:end="79:83"><name pos:start="79:42" pos:end="79:51">getService</name><argument_list pos:start="79:52" pos:end="79:83">(<argument pos:start="79:53" pos:end="79:82"><expr pos:start="79:53" pos:end="79:82"><name pos:start="79:53" pos:end="79:82"><name pos:start="79:53" pos:end="79:76">IDroneSetupRemoteService</name><operator pos:start="79:77" pos:end="79:77">.</operator><name pos:start="79:78" pos:end="79:82">class</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		</block_content>}</block> <catch pos:start="80:19" pos:end="93:17">catch <parameter_list pos:start="80:25" pos:end="80:71">(<parameter pos:start="80:26" pos:end="80:70"><decl pos:start="80:26" pos:end="80:70"><type pos:start="80:26" pos:end="80:40"><name pos:start="80:26" pos:end="80:40">RemoteException</name></type> | <type pos:start="80:44" pos:end="80:70"><name pos:start="80:44" pos:end="80:68">DronologyServiceException</name></type> <name pos:start="80:70" pos:end="80:70">e</name></decl></parameter>)</parameter_list> <block pos:start="80:73" pos:end="93:17">{<block_content pos:start="81:25" pos:end="91:61">
			<expr_stmt pos:start="81:25" pos:end="81:49"><expr pos:start="81:25" pos:end="81:48"><call pos:start="81:25" pos:end="81:48"><name pos:start="81:25" pos:end="81:41"><name pos:start="81:25" pos:end="81:28">MyUI</name><operator pos:start="81:29" pos:end="81:29">.</operator><name pos:start="81:30" pos:end="81:41">setConnected</name></name><argument_list pos:start="81:42" pos:end="81:48">(<argument pos:start="81:43" pos:end="81:47"><expr pos:start="81:43" pos:end="81:47"><literal type="boolean" pos:start="81:43" pos:end="81:47">false</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt><comment type="line" pos:start="81:50" pos:end="81:96">// reconnect to dronology if connection is lost</comment>
			<try pos:start="82:25" pos:end="90:25">try <block pos:start="82:29" pos:end="88:25">{<block_content pos:start="83:33" pos:end="87:95">
				<expr_stmt pos:start="83:33" pos:end="83:69"><expr pos:start="83:33" pos:end="83:68"><call pos:start="83:33" pos:end="83:68"><name pos:start="83:33" pos:end="83:49"><name pos:start="83:33" pos:end="83:44">Notification</name><operator pos:start="83:45" pos:end="83:45">.</operator><name pos:start="83:46" pos:end="83:49">show</name></name><argument_list pos:start="83:50" pos:end="83:68">(<argument pos:start="83:51" pos:end="83:67"><expr pos:start="83:51" pos:end="83:67"><literal type="string" pos:start="83:51" pos:end="83:67">"Reconnecting..."</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<expr_stmt pos:start="84:33" pos:end="85:92"><expr pos:start="84:33" pos:end="85:91"><name pos:start="84:33" pos:end="84:49">droneSetupService</name> <operator pos:start="84:51" pos:end="84:51">=</operator> <operator pos:start="84:53" pos:end="84:53">(</operator><name pos:start="84:54" pos:end="84:77">IDroneSetupRemoteService</name><operator pos:start="84:78" pos:end="84:78">)</operator> <call pos:start="84:80" pos:end="84:106"><name pos:start="84:80" pos:end="84:104"><name pos:start="84:80" pos:end="84:87">provider</name><operator pos:start="84:88" pos:end="84:88">.</operator><name pos:start="84:89" pos:end="84:104">getRemoteManager</name></name><argument_list pos:start="84:105" pos:end="84:106">()</argument_list></call>
						<operator pos:start="85:49" pos:end="85:49">.</operator><call pos:start="85:50" pos:end="85:91"><name pos:start="85:50" pos:end="85:59">getService</name><argument_list pos:start="85:60" pos:end="85:91">(<argument pos:start="85:61" pos:end="85:90"><expr pos:start="85:61" pos:end="85:90"><name pos:start="85:61" pos:end="85:90"><name pos:start="85:61" pos:end="85:84">IDroneSetupRemoteService</name><operator pos:start="85:85" pos:end="85:85">.</operator><name pos:start="85:86" pos:end="85:90">class</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<expr_stmt pos:start="86:33" pos:end="87:95"><expr pos:start="86:33" pos:end="87:94"><name pos:start="86:33" pos:end="86:52">flightManagerService</name> <operator pos:start="86:54" pos:end="86:54">=</operator> <operator pos:start="86:56" pos:end="86:56">(</operator><name pos:start="86:57" pos:end="86:83">IFlightManagerRemoteService</name><operator pos:start="86:84" pos:end="86:84">)</operator> <call pos:start="86:86" pos:end="86:112"><name pos:start="86:86" pos:end="86:110"><name pos:start="86:86" pos:end="86:93">provider</name><operator pos:start="86:94" pos:end="86:94">.</operator><name pos:start="86:95" pos:end="86:110">getRemoteManager</name></name><argument_list pos:start="86:111" pos:end="86:112">()</argument_list></call>
						<operator pos:start="87:49" pos:end="87:49">.</operator><call pos:start="87:50" pos:end="87:94"><name pos:start="87:50" pos:end="87:59">getService</name><argument_list pos:start="87:60" pos:end="87:94">(<argument pos:start="87:61" pos:end="87:93"><expr pos:start="87:61" pos:end="87:93"><name pos:start="87:61" pos:end="87:93"><name pos:start="87:61" pos:end="87:87">IFlightManagerRemoteService</name><operator pos:start="87:88" pos:end="87:88">.</operator><name pos:start="87:89" pos:end="87:93">class</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			</block_content>}</block> <catch pos:start="88:27" pos:end="90:25">catch <parameter_list pos:start="88:33" pos:end="88:80">(<parameter pos:start="88:34" pos:end="88:79"><decl pos:start="88:34" pos:end="88:79"><type pos:start="88:34" pos:end="88:48"><name pos:start="88:34" pos:end="88:48">RemoteException</name></type> | <type pos:start="88:52" pos:end="88:79"><name pos:start="88:52" pos:end="88:76">DronologyServiceException</name></type> <name pos:start="88:78" pos:end="88:79">e1</name></decl></parameter>)</parameter_list> <block pos:start="88:82" pos:end="90:25">{<block_content pos:start="89:33" pos:end="89:69">
				<expr_stmt pos:start="89:33" pos:end="89:69"><expr pos:start="89:33" pos:end="89:68"><call pos:start="89:33" pos:end="89:68"><name pos:start="89:33" pos:end="89:49"><name pos:start="89:33" pos:end="89:44">Notification</name><operator pos:start="89:45" pos:end="89:45">.</operator><name pos:start="89:46" pos:end="89:49">show</name></name><argument_list pos:start="89:50" pos:end="89:68">(<argument pos:start="89:51" pos:end="89:67"><expr pos:start="89:51" pos:end="89:67"><literal type="string" pos:start="89:51" pos:end="89:67">"Reconnecting..."</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			</block_content>}</block></catch></try>
			<expr_stmt pos:start="91:25" pos:end="91:61"><expr pos:start="91:25" pos:end="91:60"><call pos:start="91:25" pos:end="91:60"><name pos:start="91:25" pos:end="91:41"><name pos:start="91:25" pos:end="91:36">Notification</name><operator pos:start="91:37" pos:end="91:37">.</operator><name pos:start="91:38" pos:end="91:41">show</name></name><argument_list pos:start="91:42" pos:end="91:60">(<argument pos:start="91:43" pos:end="91:59"><expr pos:start="91:43" pos:end="91:59"><literal type="string" pos:start="91:43" pos:end="91:59">"Reconnecting..."</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		</block_content>}</block></catch></try>

	</block_content>}</block></function>

	<comment type="block" format="javadoc" pos:start="97:9" pos:end="104:11">/**
	 * This function gets the flight routes from dronology core and draws them on the map.
	 * 
	 * @param focused
	 *          this is the drone that is focused in the AFInfoPanel. It's flight route will be orange
	 * @param checked
	 *          this is a list of drones that have their checkbox checked in the AFInfoPanel. Their routes will be black.
	 */</comment>
	<function pos:start="105:9" pos:end="152:9"><type pos:start="105:9" pos:end="105:19"><specifier pos:start="105:9" pos:end="105:14">public</specifier> <name pos:start="105:16" pos:end="105:19">void</name></type> <name pos:start="105:21" pos:end="105:41">addActiveFlightRoutes</name><parameter_list pos:start="105:42" pos:end="105:79">(<parameter pos:start="105:43" pos:end="105:56"><decl pos:start="105:43" pos:end="105:56"><type pos:start="105:43" pos:end="105:56"><name pos:start="105:43" pos:end="105:48">String</name></type> <name pos:start="105:50" pos:end="105:56">focused</name></decl></parameter>, <parameter pos:start="105:59" pos:end="105:78"><decl pos:start="105:59" pos:end="105:78"><type pos:start="105:59" pos:end="105:78"><name pos:start="105:59" pos:end="105:70"><name pos:start="105:59" pos:end="105:62">List</name><argument_list type="generic" pos:start="105:63" pos:end="105:70">&lt;<argument pos:start="105:64" pos:end="105:69"><name pos:start="105:64" pos:end="105:69">String</name></argument>&gt;</argument_list></name></type> <name pos:start="105:72" pos:end="105:78">checked</name></decl></parameter>)</parameter_list> <block pos:start="105:81" pos:end="152:9">{<block_content pos:start="106:17" pos:end="151:17">
		<try pos:start="106:17" pos:end="151:17">try <block pos:start="106:21" pos:end="149:17">{<block_content pos:start="107:25" pos:end="148:25">
			<decl_stmt pos:start="107:25" pos:end="107:109"><decl pos:start="107:25" pos:end="107:108"><type pos:start="107:25" pos:end="107:50"><name pos:start="107:25" pos:end="107:50"><name pos:start="107:25" pos:end="107:34">Collection</name><argument_list type="generic" pos:start="107:35" pos:end="107:50">&lt;<argument pos:start="107:36" pos:end="107:49"><name pos:start="107:36" pos:end="107:49">FlightPlanInfo</name></argument>&gt;</argument_list></name></type> <name pos:start="107:52" pos:end="107:65">currentFlights</name> <init pos:start="107:67" pos:end="107:108">= <expr pos:start="107:69" pos:end="107:108"><call pos:start="107:69" pos:end="107:108"><name pos:start="107:69" pos:end="107:106"><name pos:start="107:69" pos:end="107:88">flightManagerService</name><operator pos:start="107:89" pos:end="107:89">.</operator><name pos:start="107:90" pos:end="107:106">getCurrentFlights</name></name><argument_list pos:start="107:107" pos:end="107:108">()</argument_list></call></expr></init></decl>;</decl_stmt>
			<for pos:start="108:25" pos:end="148:25">for <control pos:start="108:29" pos:end="108:63">(<init pos:start="108:30" pos:end="108:62"><decl pos:start="108:30" pos:end="108:62"><type pos:start="108:30" pos:end="108:43"><name pos:start="108:30" pos:end="108:43">FlightPlanInfo</name></type> <name pos:start="108:45" pos:end="108:45">e</name> <range pos:start="108:47" pos:end="108:62">: <expr pos:start="108:49" pos:end="108:62"><name pos:start="108:49" pos:end="108:62">currentFlights</name></expr></range></decl></init>)</control> <block pos:start="108:65" pos:end="148:25">{<block_content pos:start="109:33" pos:end="147:76"> <comment type="line" pos:start="108:67" pos:end="108:92">// goes through each route</comment>
				<decl_stmt pos:start="109:33" pos:end="109:78"><decl pos:start="109:33" pos:end="109:77"><type pos:start="109:33" pos:end="109:46"><name pos:start="109:33" pos:end="109:46"><name pos:start="109:33" pos:end="109:36">List</name><argument_list type="generic" pos:start="109:37" pos:end="109:46">&lt;<argument pos:start="109:38" pos:end="109:45"><name pos:start="109:38" pos:end="109:45">Waypoint</name></argument>&gt;</argument_list></name></type> <name pos:start="109:48" pos:end="109:58">coordinates</name> <init pos:start="109:60" pos:end="109:77">= <expr pos:start="109:62" pos:end="109:77"><call pos:start="109:62" pos:end="109:77"><name pos:start="109:62" pos:end="109:75"><name pos:start="109:62" pos:end="109:62">e</name><operator pos:start="109:63" pos:end="109:63">.</operator><name pos:start="109:64" pos:end="109:75">getWaypoints</name></name><argument_list pos:start="109:76" pos:end="109:77">()</argument_list></call></expr></init></decl>;</decl_stmt>
				<decl_stmt pos:start="110:33" pos:end="110:79"><decl pos:start="110:33" pos:end="110:78"><type pos:start="110:33" pos:end="110:48"><name pos:start="110:33" pos:end="110:48"><name pos:start="110:33" pos:end="110:36">List</name><argument_list type="generic" pos:start="110:37" pos:end="110:48">&lt;<argument pos:start="110:38" pos:end="110:47"><name pos:start="110:38" pos:end="110:47">UIWayPoint</name></argument>&gt;</argument_list></name></type> <name pos:start="110:50" pos:end="110:58">wayPoints</name> <init pos:start="110:60" pos:end="110:78">= <expr pos:start="110:62" pos:end="110:78"><operator pos:start="110:62" pos:end="110:64">new</operator> <call pos:start="110:66" pos:end="110:78"><name pos:start="110:66" pos:end="110:76"><name pos:start="110:66" pos:end="110:74">ArrayList</name><argument_list type="generic" pos:start="110:75" pos:end="110:76">&lt;&gt;</argument_list></name><argument_list pos:start="110:77" pos:end="110:78">()</argument_list></call></expr></init></decl>;</decl_stmt>
				<decl_stmt pos:start="111:33" pos:end="111:81"><decl pos:start="111:33" pos:end="111:80"><type pos:start="111:33" pos:end="111:45"><name pos:start="111:33" pos:end="111:45"><name pos:start="111:33" pos:end="111:36">List</name><argument_list type="generic" pos:start="111:37" pos:end="111:45">&lt;<argument pos:start="111:38" pos:end="111:44"><name pos:start="111:38" pos:end="111:44">LMarker</name></argument>&gt;</argument_list></name></type> <name pos:start="111:47" pos:end="111:60">wayPointMarker</name> <init pos:start="111:62" pos:end="111:80">= <expr pos:start="111:64" pos:end="111:80"><operator pos:start="111:64" pos:end="111:66">new</operator> <call pos:start="111:68" pos:end="111:80"><name pos:start="111:68" pos:end="111:78"><name pos:start="111:68" pos:end="111:76">ArrayList</name><argument_list type="generic" pos:start="111:77" pos:end="111:78">&lt;&gt;</argument_list></name><argument_list pos:start="111:79" pos:end="111:80">()</argument_list></call></expr></init></decl>;</decl_stmt>
				<decl_stmt pos:start="112:33" pos:end="112:42"><decl pos:start="112:33" pos:end="112:41"><type pos:start="112:33" pos:end="112:35"><name pos:start="112:33" pos:end="112:35">int</name></type> <name pos:start="112:37" pos:end="112:37">i</name> <init pos:start="112:39" pos:end="112:41">= <expr pos:start="112:41" pos:end="112:41"><literal type="number" pos:start="112:41" pos:end="112:41">0</literal></expr></init></decl>;</decl_stmt>
				<for pos:start="113:33" pos:end="126:33">for <control pos:start="113:37" pos:end="113:66">(<init pos:start="113:38" pos:end="113:65"><decl pos:start="113:38" pos:end="113:65"><type pos:start="113:38" pos:end="113:45"><name pos:start="113:38" pos:end="113:45">Waypoint</name></type> <name pos:start="113:47" pos:end="113:51">coord</name> <range pos:start="113:53" pos:end="113:65">: <expr pos:start="113:55" pos:end="113:65"><name pos:start="113:55" pos:end="113:65">coordinates</name></expr></range></decl></init>)</control> <block pos:start="113:68" pos:end="126:33">{<block_content pos:start="114:41" pos:end="125:44"> <comment type="line" pos:start="113:70" pos:end="113:118">// goes through all the coordinates in each route</comment>
					<decl_stmt pos:start="114:41" pos:end="114:139"><decl pos:start="114:41" pos:end="114:138"><type pos:start="114:41" pos:end="114:45"><name pos:start="114:41" pos:end="114:45">Point</name></type> <name pos:start="114:47" pos:end="114:51">point</name> <init pos:start="114:53" pos:end="114:138">= <expr pos:start="114:55" pos:end="114:138"><operator pos:start="114:55" pos:end="114:57">new</operator> <call pos:start="114:59" pos:end="114:138"><name pos:start="114:59" pos:end="114:63">Point</name><argument_list pos:start="114:64" pos:end="114:138">(<argument pos:start="114:65" pos:end="114:99"><expr pos:start="114:65" pos:end="114:99"><call pos:start="114:65" pos:end="114:85"><name pos:start="114:65" pos:end="114:83"><name pos:start="114:65" pos:end="114:69">coord</name><operator pos:start="114:70" pos:end="114:70">.</operator><name pos:start="114:71" pos:end="114:83">getCoordinate</name></name><argument_list pos:start="114:84" pos:end="114:85">()</argument_list></call><operator pos:start="114:86" pos:end="114:86">.</operator><call pos:start="114:87" pos:end="114:99"><name pos:start="114:87" pos:end="114:97">getLatitude</name><argument_list pos:start="114:98" pos:end="114:99">()</argument_list></call></expr></argument>, <argument pos:start="114:102" pos:end="114:137"><expr pos:start="114:102" pos:end="114:137"><call pos:start="114:102" pos:end="114:122"><name pos:start="114:102" pos:end="114:120"><name pos:start="114:102" pos:end="114:106">coord</name><operator pos:start="114:107" pos:end="114:107">.</operator><name pos:start="114:108" pos:end="114:120">getCoordinate</name></name><argument_list pos:start="114:121" pos:end="114:122">()</argument_list></call><operator pos:start="114:123" pos:end="114:123">.</operator><call pos:start="114:124" pos:end="114:137"><name pos:start="114:124" pos:end="114:135">getLongitude</name><argument_list pos:start="114:136" pos:end="114:137">()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
					<decl_stmt pos:start="115:41" pos:end="115:117"><decl pos:start="115:41" pos:end="115:116"><type pos:start="115:41" pos:end="115:50"><name pos:start="115:41" pos:end="115:50">UIWayPoint</name></type> <name pos:start="115:52" pos:end="115:59">wayPoint</name> <init pos:start="115:61" pos:end="115:116">= <expr pos:start="115:63" pos:end="115:116"><operator pos:start="115:63" pos:end="115:65">new</operator> <call pos:start="115:67" pos:end="115:116"><name pos:start="115:67" pos:end="115:76">UIWayPoint</name><argument_list pos:start="115:77" pos:end="115:116">(<argument pos:start="115:78" pos:end="115:82"><expr pos:start="115:78" pos:end="115:82"><name pos:start="115:78" pos:end="115:82">point</name></expr></argument>, <argument pos:start="115:85" pos:end="115:115"><expr pos:start="115:85" pos:end="115:115"><call pos:start="115:85" pos:end="115:115"><name pos:start="115:85" pos:end="115:95">nextReached</name><argument_list pos:start="115:96" pos:end="115:115">(<argument pos:start="115:97" pos:end="115:107"><expr pos:start="115:97" pos:end="115:107"><name pos:start="115:97" pos:end="115:107">coordinates</name></expr></argument>, <argument pos:start="115:110" pos:end="115:114"><expr pos:start="115:110" pos:end="115:114"><name pos:start="115:110" pos:end="115:110">i</name> <operator pos:start="115:112" pos:end="115:112">+</operator> <literal type="number" pos:start="115:114" pos:end="115:114">1</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
					<expr_stmt pos:start="116:41" pos:end="116:64"><expr pos:start="116:41" pos:end="116:63"><call pos:start="116:41" pos:end="116:63"><name pos:start="116:41" pos:end="116:53"><name pos:start="116:41" pos:end="116:49">wayPoints</name><operator pos:start="116:50" pos:end="116:50">.</operator><name pos:start="116:51" pos:end="116:53">add</name></name><argument_list pos:start="116:54" pos:end="116:63">(<argument pos:start="116:55" pos:end="116:62"><expr pos:start="116:55" pos:end="116:62"><name pos:start="116:55" pos:end="116:62">wayPoint</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<if_stmt pos:start="117:41" pos:end="124:41"><if pos:start="117:41" pos:end="124:41">if <condition pos:start="117:44" pos:end="117:92">(<expr pos:start="117:45" pos:end="117:91"><call pos:start="117:45" pos:end="117:66"><name pos:start="117:45" pos:end="117:64"><name pos:start="117:45" pos:end="117:59">wayPointMarkers</name><operator pos:start="117:60" pos:end="117:60">.</operator><name pos:start="117:61" pos:end="117:64">size</name></name><argument_list pos:start="117:65" pos:end="117:66">()</argument_list></call> <operator pos:start="117:68" pos:end="117:69">!=</operator> <call pos:start="117:71" pos:end="117:91"><name pos:start="117:71" pos:end="117:89"><name pos:start="117:71" pos:end="117:84">currentFlights</name><operator pos:start="117:85" pos:end="117:85">.</operator><name pos:start="117:86" pos:end="117:89">size</name></name><argument_list pos:start="117:90" pos:end="117:91">()</argument_list></call></expr>)</condition> <block pos:start="117:94" pos:end="124:41">{<block_content pos:start="118:49" pos:end="123:80"> <comment type="line" pos:start="117:96" pos:end="117:133">// adds the waypoints to the map first</comment>
						<decl_stmt pos:start="118:49" pos:end="118:84"><decl pos:start="118:49" pos:end="118:83"><type pos:start="118:49" pos:end="118:55"><name pos:start="118:49" pos:end="118:55">LMarker</name></type> <name pos:start="118:57" pos:end="118:62">marker</name> <init pos:start="118:64" pos:end="118:83">= <expr pos:start="118:66" pos:end="118:83"><operator pos:start="118:66" pos:end="118:68">new</operator> <call pos:start="118:70" pos:end="118:83"><name pos:start="118:70" pos:end="118:76">LMarker</name><argument_list pos:start="118:77" pos:end="118:83">(<argument pos:start="118:78" pos:end="118:82"><expr pos:start="118:78" pos:end="118:82"><name pos:start="118:78" pos:end="118:82">point</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
						<expr_stmt pos:start="119:49" pos:end="119:72"><expr pos:start="119:49" pos:end="119:71"><call pos:start="119:49" pos:end="119:71"><name pos:start="119:49" pos:end="119:62"><name pos:start="119:49" pos:end="119:54">marker</name><operator pos:start="119:55" pos:end="119:55">.</operator><name pos:start="119:56" pos:end="119:62">setIcon</name></name><argument_list pos:start="119:63" pos:end="119:71">(<argument pos:start="119:64" pos:end="119:70"><expr pos:start="119:64" pos:end="119:70"><name pos:start="119:64" pos:end="119:70">dotIcon</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
						<expr_stmt pos:start="120:49" pos:end="120:86"><expr pos:start="120:49" pos:end="120:85"><call pos:start="120:49" pos:end="120:85"><name pos:start="120:49" pos:end="120:66"><name pos:start="120:49" pos:end="120:54">marker</name><operator pos:start="120:55" pos:end="120:55">.</operator><name pos:start="120:56" pos:end="120:66">setIconSize</name></name><argument_list pos:start="120:67" pos:end="120:85">(<argument pos:start="120:68" pos:end="120:84"><expr pos:start="120:68" pos:end="120:84"><operator pos:start="120:68" pos:end="120:70">new</operator> <call pos:start="120:72" pos:end="120:84"><name pos:start="120:72" pos:end="120:76">Point</name><argument_list pos:start="120:77" pos:end="120:84">(<argument pos:start="120:78" pos:end="120:79"><expr pos:start="120:78" pos:end="120:79"><literal type="number" pos:start="120:78" pos:end="120:79">10</literal></expr></argument>, <argument pos:start="120:82" pos:end="120:83"><expr pos:start="120:82" pos:end="120:83"><literal type="number" pos:start="120:82" pos:end="120:83">10</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
						<expr_stmt pos:start="121:49" pos:end="121:112"><expr pos:start="121:49" pos:end="121:111"><call pos:start="121:49" pos:end="121:111"><name pos:start="121:49" pos:end="121:75"><name pos:start="121:49" pos:end="121:54">marker</name><operator pos:start="121:55" pos:end="121:55">.</operator><name pos:start="121:56" pos:end="121:75">addMouseOverListener</name></name><argument_list pos:start="121:76" pos:end="121:111">(<argument pos:start="121:77" pos:end="121:110"><expr pos:start="121:77" pos:end="121:110"><call pos:start="121:77" pos:end="121:110"><name pos:start="121:77" pos:end="121:108"><name pos:start="121:77" pos:end="121:88">mapComponent</name><operator pos:start="121:89" pos:end="121:89">.</operator><name pos:start="121:90" pos:end="121:108">getWaypointListener</name></name><argument_list pos:start="121:109" pos:end="121:110">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
						<expr_stmt pos:start="122:49" pos:end="122:75"><expr pos:start="122:49" pos:end="122:74"><call pos:start="122:49" pos:end="122:74"><name pos:start="122:49" pos:end="122:66"><name pos:start="122:49" pos:end="122:62">wayPointMarker</name><operator pos:start="122:63" pos:end="122:63">.</operator><name pos:start="122:64" pos:end="122:66">add</name></name><argument_list pos:start="122:67" pos:end="122:74">(<argument pos:start="122:68" pos:end="122:73"><expr pos:start="122:68" pos:end="122:73"><name pos:start="122:68" pos:end="122:73">marker</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
						<expr_stmt pos:start="123:49" pos:end="123:80"><expr pos:start="123:49" pos:end="123:79"><call pos:start="123:49" pos:end="123:79"><name pos:start="123:49" pos:end="123:71"><name pos:start="123:49" pos:end="123:58">leafletMap</name><operator pos:start="123:59" pos:end="123:59">.</operator><name pos:start="123:60" pos:end="123:71">addComponent</name></name><argument_list pos:start="123:72" pos:end="123:79">(<argument pos:start="123:73" pos:end="123:78"><expr pos:start="123:73" pos:end="123:78"><name pos:start="123:73" pos:end="123:78">marker</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					</block_content>}</block></if></if_stmt>
					<expr_stmt pos:start="125:41" pos:end="125:44"><expr pos:start="125:41" pos:end="125:43"><name pos:start="125:41" pos:end="125:41">i</name><operator pos:start="125:42" pos:end="125:43">++</operator></expr>;</expr_stmt>
				</block_content>}</block></for>
				<decl_stmt pos:start="127:33" pos:end="127:78"><decl pos:start="127:33" pos:end="127:77"><type pos:start="127:33" pos:end="127:47"><name pos:start="127:33" pos:end="127:47"><name pos:start="127:33" pos:end="127:36">List</name><argument_list type="generic" pos:start="127:37" pos:end="127:47">&lt;<argument pos:start="127:38" pos:end="127:46"><name pos:start="127:38" pos:end="127:46">LPolyline</name></argument>&gt;</argument_list></name></type> <name pos:start="127:49" pos:end="127:57">polyLines</name> <init pos:start="127:59" pos:end="127:77">= <expr pos:start="127:61" pos:end="127:77"><operator pos:start="127:61" pos:end="127:63">new</operator> <call pos:start="127:65" pos:end="127:77"><name pos:start="127:65" pos:end="127:75"><name pos:start="127:65" pos:end="127:73">ArrayList</name><argument_list type="generic" pos:start="127:74" pos:end="127:75">&lt;&gt;</argument_list></name><argument_list pos:start="127:76" pos:end="127:77">()</argument_list></call></expr></init></decl>;</decl_stmt> <comment type="line" pos:start="127:80" pos:end="127:124">// draws the lines and loads them into a list</comment>
				<if_stmt pos:start="128:33" pos:end="144:33"><if pos:start="128:33" pos:end="131:33">if <condition pos:start="128:36" pos:end="128:67">(<expr pos:start="128:37" pos:end="128:66"><call pos:start="128:37" pos:end="128:50"><name pos:start="128:37" pos:end="128:48"><name pos:start="128:37" pos:end="128:37">e</name><operator pos:start="128:38" pos:end="128:38">.</operator><name pos:start="128:39" pos:end="128:48">getDroneId</name></name><argument_list pos:start="128:49" pos:end="128:50">()</argument_list></call><operator pos:start="128:51" pos:end="128:51">.</operator><call pos:start="128:52" pos:end="128:66"><name pos:start="128:52" pos:end="128:57">equals</name><argument_list pos:start="128:58" pos:end="128:66">(<argument pos:start="128:59" pos:end="128:65"><expr pos:start="128:59" pos:end="128:65"><name pos:start="128:59" pos:end="128:65">focused</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="128:69" pos:end="131:33">{<block_content pos:start="129:41" pos:end="130:104">
					<expr_stmt pos:start="129:41" pos:end="129:67"><expr pos:start="129:41" pos:end="129:66"><call pos:start="129:41" pos:end="129:66"><name pos:start="129:41" pos:end="129:64"><name pos:start="129:41" pos:end="129:49">utilities</name><operator pos:start="129:50" pos:end="129:50">.</operator><name pos:start="129:51" pos:end="129:64">removeAllLines</name></name><argument_list pos:start="129:65" pos:end="129:66">()</argument_list></call></expr>;</expr_stmt>
					<expr_stmt pos:start="130:41" pos:end="130:104"><expr pos:start="130:41" pos:end="130:103"><name pos:start="130:41" pos:end="130:49">polyLines</name> <operator pos:start="130:51" pos:end="130:51">=</operator> <call pos:start="130:53" pos:end="130:103"><name pos:start="130:53" pos:end="130:83"><name pos:start="130:53" pos:end="130:61">utilities</name><operator pos:start="130:62" pos:end="130:62">.</operator><name pos:start="130:63" pos:end="130:83">drawLinesForWayPoints</name></name><argument_list pos:start="130:84" pos:end="130:103">(<argument pos:start="130:85" pos:end="130:93"><expr pos:start="130:85" pos:end="130:93"><name pos:start="130:85" pos:end="130:93">wayPoints</name></expr></argument>, <argument pos:start="130:96" pos:end="130:96"><expr pos:start="130:96" pos:end="130:96"><literal type="number" pos:start="130:96" pos:end="130:96">2</literal></expr></argument>, <argument pos:start="130:99" pos:end="130:102"><expr pos:start="130:99" pos:end="130:102"><literal type="boolean" pos:start="130:99" pos:end="130:102">true</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				</block_content>}</block></if> <else pos:start="131:35" pos:end="144:33">else <block pos:start="131:40" pos:end="144:33">{<block_content pos:start="132:41" pos:end="143:41">
					<decl_stmt pos:start="132:41" pos:end="132:62"><decl pos:start="132:41" pos:end="132:61"><type pos:start="132:41" pos:end="132:47"><name pos:start="132:41" pos:end="132:47">boolean</name></type> <name pos:start="132:49" pos:end="132:53">drawn</name> <init pos:start="132:55" pos:end="132:61">= <expr pos:start="132:57" pos:end="132:61"><literal type="boolean" pos:start="132:57" pos:end="132:61">false</literal></expr></init></decl>;</decl_stmt>
					<for pos:start="133:41" pos:end="139:41">for <control pos:start="133:45" pos:end="133:67">(<init pos:start="133:46" pos:end="133:66"><decl pos:start="133:46" pos:end="133:66"><type pos:start="133:46" pos:end="133:51"><name pos:start="133:46" pos:end="133:51">String</name></type> <name pos:start="133:53" pos:end="133:56">name</name> <range pos:start="133:58" pos:end="133:66">: <expr pos:start="133:60" pos:end="133:66"><name pos:start="133:60" pos:end="133:66">checked</name></expr></range></decl></init>)</control> <block pos:start="133:69" pos:end="139:41">{<block_content pos:start="134:49" pos:end="138:49">
						<if_stmt pos:start="134:49" pos:end="138:49"><if pos:start="134:49" pos:end="138:49">if <condition pos:start="134:52" pos:end="134:80">(<expr pos:start="134:53" pos:end="134:79"><call pos:start="134:53" pos:end="134:66"><name pos:start="134:53" pos:end="134:64"><name pos:start="134:53" pos:end="134:53">e</name><operator pos:start="134:54" pos:end="134:54">.</operator><name pos:start="134:55" pos:end="134:64">getDroneId</name></name><argument_list pos:start="134:65" pos:end="134:66">()</argument_list></call><operator pos:start="134:67" pos:end="134:67">.</operator><call pos:start="134:68" pos:end="134:79"><name pos:start="134:68" pos:end="134:73">equals</name><argument_list pos:start="134:74" pos:end="134:79">(<argument pos:start="134:75" pos:end="134:78"><expr pos:start="134:75" pos:end="134:78"><name pos:start="134:75" pos:end="134:78">name</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="134:82" pos:end="138:49">{<block_content pos:start="135:57" pos:end="137:69"> 
							<expr_stmt pos:start="135:57" pos:end="135:83"><expr pos:start="135:57" pos:end="135:82"><call pos:start="135:57" pos:end="135:82"><name pos:start="135:57" pos:end="135:80"><name pos:start="135:57" pos:end="135:65">utilities</name><operator pos:start="135:66" pos:end="135:66">.</operator><name pos:start="135:67" pos:end="135:80">removeAllLines</name></name><argument_list pos:start="135:81" pos:end="135:82">()</argument_list></call></expr>;</expr_stmt>
							<expr_stmt pos:start="136:57" pos:end="136:120"><expr pos:start="136:57" pos:end="136:119"><name pos:start="136:57" pos:end="136:65">polyLines</name> <operator pos:start="136:67" pos:end="136:67">=</operator> <call pos:start="136:69" pos:end="136:119"><name pos:start="136:69" pos:end="136:99"><name pos:start="136:69" pos:end="136:77">utilities</name><operator pos:start="136:78" pos:end="136:78">.</operator><name pos:start="136:79" pos:end="136:99">drawLinesForWayPoints</name></name><argument_list pos:start="136:100" pos:end="136:119">(<argument pos:start="136:101" pos:end="136:109"><expr pos:start="136:101" pos:end="136:109"><name pos:start="136:101" pos:end="136:109">wayPoints</name></expr></argument>, <argument pos:start="136:112" pos:end="136:112"><expr pos:start="136:112" pos:end="136:112"><literal type="number" pos:start="136:112" pos:end="136:112">1</literal></expr></argument>, <argument pos:start="136:115" pos:end="136:118"><expr pos:start="136:115" pos:end="136:118"><literal type="boolean" pos:start="136:115" pos:end="136:118">true</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
							<expr_stmt pos:start="137:57" pos:end="137:69"><expr pos:start="137:57" pos:end="137:68"><name pos:start="137:57" pos:end="137:61">drawn</name> <operator pos:start="137:63" pos:end="137:63">=</operator> <literal type="boolean" pos:start="137:65" pos:end="137:68">true</literal></expr>;</expr_stmt>
						</block_content>}</block></if></if_stmt>
					</block_content>}</block></for>
					<if_stmt pos:start="140:41" pos:end="143:41"><if pos:start="140:41" pos:end="143:41">if <condition pos:start="140:44" pos:end="140:51">(<expr pos:start="140:45" pos:end="140:50"><operator pos:start="140:45" pos:end="140:45">!</operator><name pos:start="140:46" pos:end="140:50">drawn</name></expr>)</condition> <block pos:start="140:53" pos:end="143:41">{<block_content pos:start="142:49" pos:end="142:112">
						<comment type="line" pos:start="141:49" pos:end="141:78">// utilities.removeAllLines();</comment>
						<expr_stmt pos:start="142:49" pos:end="142:112"><expr pos:start="142:49" pos:end="142:111"><name pos:start="142:49" pos:end="142:57">polyLines</name> <operator pos:start="142:59" pos:end="142:59">=</operator> <call pos:start="142:61" pos:end="142:111"><name pos:start="142:61" pos:end="142:91"><name pos:start="142:61" pos:end="142:69">utilities</name><operator pos:start="142:70" pos:end="142:70">.</operator><name pos:start="142:71" pos:end="142:91">drawLinesForWayPoints</name></name><argument_list pos:start="142:92" pos:end="142:111">(<argument pos:start="142:93" pos:end="142:101"><expr pos:start="142:93" pos:end="142:101"><name pos:start="142:93" pos:end="142:101">wayPoints</name></expr></argument>, <argument pos:start="142:104" pos:end="142:104"><expr pos:start="142:104" pos:end="142:104"><literal type="number" pos:start="142:104" pos:end="142:104">0</literal></expr></argument>, <argument pos:start="142:107" pos:end="142:110"><expr pos:start="142:107" pos:end="142:110"><literal type="boolean" pos:start="142:107" pos:end="142:110">true</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					</block_content>}</block></if></if_stmt>
				</block_content>}</block></else></if_stmt>
				<expr_stmt pos:start="145:33" pos:end="145:60"><expr pos:start="145:33" pos:end="145:59"><call pos:start="145:33" pos:end="145:59"><name pos:start="145:33" pos:end="145:48"><name pos:start="145:33" pos:end="145:44">flightRoutes</name><operator pos:start="145:45" pos:end="145:45">.</operator><name pos:start="145:46" pos:end="145:48">add</name></name><argument_list pos:start="145:49" pos:end="145:59">(<argument pos:start="145:50" pos:end="145:58"><expr pos:start="145:50" pos:end="145:58"><name pos:start="145:50" pos:end="145:58">polyLines</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:start="145:62" pos:end="145:100">// keep a list of all lines and markers</comment>
				<if_stmt pos:start="146:33" pos:end="147:76"><if pos:start="146:33" pos:end="147:76">if <condition pos:start="146:36" pos:end="146:84">(<expr pos:start="146:37" pos:end="146:83"><call pos:start="146:37" pos:end="146:58"><name pos:start="146:37" pos:end="146:56"><name pos:start="146:37" pos:end="146:51">wayPointMarkers</name><operator pos:start="146:52" pos:end="146:52">.</operator><name pos:start="146:53" pos:end="146:56">size</name></name><argument_list pos:start="146:57" pos:end="146:58">()</argument_list></call> <operator pos:start="146:60" pos:end="146:61">!=</operator> <call pos:start="146:63" pos:end="146:83"><name pos:start="146:63" pos:end="146:81"><name pos:start="146:63" pos:end="146:76">currentFlights</name><operator pos:start="146:77" pos:end="146:77">.</operator><name pos:start="146:78" pos:end="146:81">size</name></name><argument_list pos:start="146:82" pos:end="146:83">()</argument_list></call></expr>)</condition><block type="pseudo" pos:start="147:41" pos:end="147:76"><block_content pos:start="147:41" pos:end="147:76">
					<expr_stmt pos:start="147:41" pos:end="147:76"><expr pos:start="147:41" pos:end="147:75"><call pos:start="147:41" pos:end="147:75"><name pos:start="147:41" pos:end="147:59"><name pos:start="147:41" pos:end="147:55">wayPointMarkers</name><operator pos:start="147:56" pos:end="147:56">.</operator><name pos:start="147:57" pos:end="147:59">add</name></name><argument_list pos:start="147:60" pos:end="147:75">(<argument pos:start="147:61" pos:end="147:74"><expr pos:start="147:61" pos:end="147:74"><name pos:start="147:61" pos:end="147:74">wayPointMarker</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
			</block_content>}</block></for>
		</block_content>}</block> <catch pos:start="149:19" pos:end="151:17">catch <parameter_list pos:start="149:25" pos:end="149:43">(<parameter pos:start="149:26" pos:end="149:42"><decl pos:start="149:26" pos:end="149:42"><type pos:start="149:26" pos:end="149:42"><name pos:start="149:26" pos:end="149:40">RemoteException</name></type> <name pos:start="149:42" pos:end="149:42">e</name></decl></parameter>)</parameter_list> <block pos:start="149:45" pos:end="151:17">{<block_content pos:start="150:25" pos:end="150:41"> <comment type="line" pos:start="149:47" pos:end="149:93">// reconnect to dronology if connection is lost</comment>
			<expr_stmt pos:start="150:25" pos:end="150:41"><expr pos:start="150:25" pos:end="150:40"><call pos:start="150:25" pos:end="150:40"><name pos:start="150:25" pos:end="150:38">initConnection</name><argument_list pos:start="150:39" pos:end="150:40">()</argument_list></call></expr>;</expr_stmt>
		</block_content>}</block></catch></try>
	</block_content>}</block></function>

	<comment type="block" format="javadoc" pos:start="154:9" pos:end="161:11">/**
	 * updates the flight routes. Deletes old ones, adds new ones, and redraws the lines to different colors as each waypoint is reached
	 * 
	 * @param focused
	 *          this is the drone that is focused in the AFInfoPanel. It's flight route will be orange
	 * @param checked
	 *          this is a list of drones that have their checkbox checked in the AFInfoPanel. Their routes will be black.
	 */</comment>
	<function pos:start="162:9" pos:end="200:9"><type pos:start="162:9" pos:end="162:19"><specifier pos:start="162:9" pos:end="162:14">public</specifier> <name pos:start="162:16" pos:end="162:19">void</name></type> <name pos:start="162:21" pos:end="162:44">updateActiveFlightRoutes</name><parameter_list pos:start="162:45" pos:end="162:82">(<parameter pos:start="162:46" pos:end="162:59"><decl pos:start="162:46" pos:end="162:59"><type pos:start="162:46" pos:end="162:59"><name pos:start="162:46" pos:end="162:51">String</name></type> <name pos:start="162:53" pos:end="162:59">focused</name></decl></parameter>, <parameter pos:start="162:62" pos:end="162:81"><decl pos:start="162:62" pos:end="162:81"><type pos:start="162:62" pos:end="162:81"><name pos:start="162:62" pos:end="162:73"><name pos:start="162:62" pos:end="162:65">List</name><argument_list type="generic" pos:start="162:66" pos:end="162:73">&lt;<argument pos:start="162:67" pos:end="162:72"><name pos:start="162:67" pos:end="162:72">String</name></argument>&gt;</argument_list></name></type> <name pos:start="162:75" pos:end="162:81">checked</name></decl></parameter>)</parameter_list> <block pos:start="162:84" pos:end="200:9">{<block_content pos:start="163:17" pos:end="199:17">
		<try pos:start="163:17" pos:end="199:17">try <block pos:start="163:21" pos:end="197:17">{<block_content pos:start="164:25" pos:end="194:69">
			<decl_stmt pos:start="164:25" pos:end="164:109"><decl pos:start="164:25" pos:end="164:108"><type pos:start="164:25" pos:end="164:50"><name pos:start="164:25" pos:end="164:50"><name pos:start="164:25" pos:end="164:34">Collection</name><argument_list type="generic" pos:start="164:35" pos:end="164:50">&lt;<argument pos:start="164:36" pos:end="164:49"><name pos:start="164:36" pos:end="164:49">FlightPlanInfo</name></argument>&gt;</argument_list></name></type> <name pos:start="164:52" pos:end="164:65">currentFlights</name> <init pos:start="164:67" pos:end="164:108">= <expr pos:start="164:69" pos:end="164:108"><call pos:start="164:69" pos:end="164:108"><name pos:start="164:69" pos:end="164:106"><name pos:start="164:69" pos:end="164:88">flightManagerService</name><operator pos:start="164:89" pos:end="164:89">.</operator><name pos:start="164:90" pos:end="164:106">getCurrentFlights</name></name><argument_list pos:start="164:107" pos:end="164:108">()</argument_list></call></expr></init></decl>;</decl_stmt>
			<if_stmt pos:start="165:25" pos:end="189:25"><if pos:start="165:25" pos:end="189:25">if <condition pos:start="165:28" pos:end="165:81">(<expr pos:start="165:29" pos:end="165:80"><call pos:start="165:29" pos:end="165:49"><name pos:start="165:29" pos:end="165:47"><name pos:start="165:29" pos:end="165:42">currentFlights</name><operator pos:start="165:43" pos:end="165:43">.</operator><name pos:start="165:44" pos:end="165:47">size</name></name><argument_list pos:start="165:48" pos:end="165:49">()</argument_list></call> <operator pos:start="165:51" pos:end="165:52">!=</operator> <call pos:start="165:54" pos:end="165:72"><name pos:start="165:54" pos:end="165:70"><name pos:start="165:54" pos:end="165:65">flightRoutes</name><operator pos:start="165:66" pos:end="165:66">.</operator><name pos:start="165:67" pos:end="165:70">size</name></name><argument_list pos:start="165:71" pos:end="165:72">()</argument_list></call> <operator pos:start="165:74" pos:end="165:75">||</operator> <literal type="boolean" pos:start="165:77" pos:end="165:80">true</literal></expr>)</condition> <block pos:start="165:83" pos:end="189:25">{<block_content pos:start="166:33" pos:end="188:33">
				<expr_stmt pos:start="166:33" pos:end="166:59"><expr pos:start="166:33" pos:end="166:58"><call pos:start="166:33" pos:end="166:58"><name pos:start="166:33" pos:end="166:56"><name pos:start="166:33" pos:end="166:41">utilities</name><operator pos:start="166:42" pos:end="166:42">.</operator><name pos:start="166:43" pos:end="166:56">removeAllLines</name></name><argument_list pos:start="166:57" pos:end="166:58">()</argument_list></call></expr>;</expr_stmt>
				<decl_stmt pos:start="167:33" pos:end="167:54"><decl pos:start="167:33" pos:end="167:53"><type pos:start="167:33" pos:end="167:39"><name pos:start="167:33" pos:end="167:39">boolean</name></type> <name pos:start="167:41" pos:end="167:46">exists</name> <init pos:start="167:48" pos:end="167:53">= <expr pos:start="167:50" pos:end="167:53"><literal type="boolean" pos:start="167:50" pos:end="167:53">true</literal></expr></init></decl>;</decl_stmt> <comment type="line" pos:start="167:56" pos:end="167:100">// determines if flight route is still active</comment>
				<for pos:start="168:33" pos:end="178:33">for <control pos:start="168:37" pos:end="168:71">(<init pos:start="168:38" pos:end="168:70"><decl pos:start="168:38" pos:end="168:70"><type pos:start="168:38" pos:end="168:50"><name pos:start="168:38" pos:end="168:50"><name pos:start="168:38" pos:end="168:41">List</name><argument_list type="generic" pos:start="168:42" pos:end="168:50">&lt;<argument pos:start="168:43" pos:end="168:49"><name pos:start="168:43" pos:end="168:49">LMarker</name></argument>&gt;</argument_list></name></type> <name pos:start="168:52" pos:end="168:52">e</name> <range pos:start="168:54" pos:end="168:70">: <expr pos:start="168:56" pos:end="168:70"><name pos:start="168:56" pos:end="168:70">wayPointMarkers</name></expr></range></decl></init>)</control> <block pos:start="168:73" pos:end="178:33">{<block_content pos:start="169:41" pos:end="177:63">
					<decl_stmt pos:start="169:41" pos:end="169:72"><decl pos:start="169:41" pos:end="169:71"><type pos:start="169:41" pos:end="169:47"><name pos:start="169:41" pos:end="169:47">boolean</name></type> <name pos:start="169:49" pos:end="169:63">individualExist</name> <init pos:start="169:65" pos:end="169:71">= <expr pos:start="169:67" pos:end="169:71"><literal type="boolean" pos:start="169:67" pos:end="169:71">false</literal></expr></init></decl>;</decl_stmt> <comment type="line" pos:start="169:74" pos:end="169:141">// helper variable to determine if each flight route is still active</comment>
					<for pos:start="170:41" pos:end="175:41">for <control pos:start="170:45" pos:end="170:79">(<init pos:start="170:46" pos:end="170:78"><decl pos:start="170:46" pos:end="170:78"><type pos:start="170:46" pos:end="170:59"><name pos:start="170:46" pos:end="170:59">FlightPlanInfo</name></type> <name pos:start="170:61" pos:end="170:61">q</name> <range pos:start="170:63" pos:end="170:78">: <expr pos:start="170:65" pos:end="170:78"><name pos:start="170:65" pos:end="170:78">currentFlights</name></expr></range></decl></init>)</control> <block pos:start="170:81" pos:end="175:41">{<block_content pos:start="171:49" pos:end="174:49">
						<if_stmt pos:start="171:49" pos:end="174:49"><if pos:start="171:49" pos:end="174:49">if <condition pos:start="171:52" pos:end="172:154">(<expr pos:start="171:53" pos:end="172:153"><call pos:start="171:53" pos:end="171:60"><name pos:start="171:53" pos:end="171:57"><name pos:start="171:53" pos:end="171:53">e</name><operator pos:start="171:54" pos:end="171:54">.</operator><name pos:start="171:55" pos:end="171:57">get</name></name><argument_list pos:start="171:58" pos:end="171:60">(<argument pos:start="171:59" pos:end="171:59"><expr pos:start="171:59" pos:end="171:59"><literal type="number" pos:start="171:59" pos:end="171:59">0</literal></expr></argument>)</argument_list></call><operator pos:start="171:61" pos:end="171:61">.</operator><call pos:start="171:62" pos:end="171:71"><name pos:start="171:62" pos:end="171:69">getPoint</name><argument_list pos:start="171:70" pos:end="171:71">()</argument_list></call><operator pos:start="171:72" pos:end="171:72">.</operator><call pos:start="171:73" pos:end="171:80"><name pos:start="171:73" pos:end="171:78">getLat</name><argument_list pos:start="171:79" pos:end="171:80">()</argument_list></call> <operator pos:start="171:82" pos:end="171:83">==</operator> <call pos:start="171:85" pos:end="171:100"><name pos:start="171:85" pos:end="171:98"><name pos:start="171:85" pos:end="171:85">q</name><operator pos:start="171:86" pos:end="171:86">.</operator><name pos:start="171:87" pos:end="171:98">getWaypoints</name></name><argument_list pos:start="171:99" pos:end="171:100">()</argument_list></call><operator pos:start="171:101" pos:end="171:101">.</operator><call pos:start="171:102" pos:end="171:107"><name pos:start="171:102" pos:end="171:104">get</name><argument_list pos:start="171:105" pos:end="171:107">(<argument pos:start="171:106" pos:end="171:106"><expr pos:start="171:106" pos:end="171:106"><literal type="number" pos:start="171:106" pos:end="171:106">0</literal></expr></argument>)</argument_list></call><operator pos:start="171:108" pos:end="171:108">.</operator><call pos:start="171:109" pos:end="171:123"><name pos:start="171:109" pos:end="171:121">getCoordinate</name><argument_list pos:start="171:122" pos:end="171:123">()</argument_list></call><operator pos:start="171:124" pos:end="171:124">.</operator><call pos:start="171:125" pos:end="171:137"><name pos:start="171:125" pos:end="171:135">getLatitude</name><argument_list pos:start="171:136" pos:end="171:137">()</argument_list></call>
								<operator pos:start="172:65" pos:end="172:66">&amp;&amp;</operator> <call pos:start="172:68" pos:end="172:75"><name pos:start="172:68" pos:end="172:72"><name pos:start="172:68" pos:end="172:68">e</name><operator pos:start="172:69" pos:end="172:69">.</operator><name pos:start="172:70" pos:end="172:72">get</name></name><argument_list pos:start="172:73" pos:end="172:75">(<argument pos:start="172:74" pos:end="172:74"><expr pos:start="172:74" pos:end="172:74"><literal type="number" pos:start="172:74" pos:end="172:74">0</literal></expr></argument>)</argument_list></call><operator pos:start="172:76" pos:end="172:76">.</operator><call pos:start="172:77" pos:end="172:86"><name pos:start="172:77" pos:end="172:84">getPoint</name><argument_list pos:start="172:85" pos:end="172:86">()</argument_list></call><operator pos:start="172:87" pos:end="172:87">.</operator><call pos:start="172:88" pos:end="172:95"><name pos:start="172:88" pos:end="172:93">getLon</name><argument_list pos:start="172:94" pos:end="172:95">()</argument_list></call> <operator pos:start="172:97" pos:end="172:98">==</operator> <call pos:start="172:100" pos:end="172:115"><name pos:start="172:100" pos:end="172:113"><name pos:start="172:100" pos:end="172:100">q</name><operator pos:start="172:101" pos:end="172:101">.</operator><name pos:start="172:102" pos:end="172:113">getWaypoints</name></name><argument_list pos:start="172:114" pos:end="172:115">()</argument_list></call><operator pos:start="172:116" pos:end="172:116">.</operator><call pos:start="172:117" pos:end="172:122"><name pos:start="172:117" pos:end="172:119">get</name><argument_list pos:start="172:120" pos:end="172:122">(<argument pos:start="172:121" pos:end="172:121"><expr pos:start="172:121" pos:end="172:121"><literal type="number" pos:start="172:121" pos:end="172:121">0</literal></expr></argument>)</argument_list></call><operator pos:start="172:123" pos:end="172:123">.</operator><call pos:start="172:124" pos:end="172:138"><name pos:start="172:124" pos:end="172:136">getCoordinate</name><argument_list pos:start="172:137" pos:end="172:138">()</argument_list></call><operator pos:start="172:139" pos:end="172:139">.</operator><call pos:start="172:140" pos:end="172:153"><name pos:start="172:140" pos:end="172:151">getLongitude</name><argument_list pos:start="172:152" pos:end="172:153">()</argument_list></call></expr>)</condition> <block pos:start="172:156" pos:end="174:49">{<block_content pos:start="173:57" pos:end="173:79">
							<expr_stmt pos:start="173:57" pos:end="173:79"><expr pos:start="173:57" pos:end="173:78"><name pos:start="173:57" pos:end="173:71">individualExist</name> <operator pos:start="173:73" pos:end="173:73">=</operator> <literal type="boolean" pos:start="173:75" pos:end="173:78">true</literal></expr>;</expr_stmt>
						</block_content>}</block></if></if_stmt>
					</block_content>}</block></for>
					<if_stmt pos:start="176:41" pos:end="177:63"><if pos:start="176:41" pos:end="177:63">if <condition pos:start="176:44" pos:end="176:69">(<expr pos:start="176:45" pos:end="176:68"><name pos:start="176:45" pos:end="176:59">individualExist</name> <operator pos:start="176:61" pos:end="176:62">==</operator> <literal type="boolean" pos:start="176:64" pos:end="176:68">false</literal></expr>)</condition><block type="pseudo" pos:start="177:49" pos:end="177:63"><block_content pos:start="177:49" pos:end="177:63">
						<expr_stmt pos:start="177:49" pos:end="177:63"><expr pos:start="177:49" pos:end="177:62"><name pos:start="177:49" pos:end="177:54">exists</name> <operator pos:start="177:56" pos:end="177:56">=</operator> <literal type="boolean" pos:start="177:58" pos:end="177:62">false</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>
				</block_content>}</block></for>
				<if_stmt pos:start="179:33" pos:end="188:33"><if pos:start="179:33" pos:end="188:33">if <condition pos:start="179:36" pos:end="179:95">(<expr pos:start="179:37" pos:end="179:94"><operator pos:start="179:37" pos:end="179:37">!</operator><name pos:start="179:38" pos:end="179:43">exists</name> <operator pos:start="179:45" pos:end="179:46">||</operator> <call pos:start="179:48" pos:end="179:69"><name pos:start="179:48" pos:end="179:67"><name pos:start="179:48" pos:end="179:62">wayPointMarkers</name><operator pos:start="179:63" pos:end="179:63">.</operator><name pos:start="179:64" pos:end="179:67">size</name></name><argument_list pos:start="179:68" pos:end="179:69">()</argument_list></call> <operator pos:start="179:71" pos:end="179:72">!=</operator> <call pos:start="179:74" pos:end="179:94"><name pos:start="179:74" pos:end="179:92"><name pos:start="179:74" pos:end="179:87">currentFlights</name><operator pos:start="179:88" pos:end="179:88">.</operator><name pos:start="179:89" pos:end="179:92">size</name></name><argument_list pos:start="179:93" pos:end="179:94">()</argument_list></call></expr>)</condition> <block pos:start="179:97" pos:end="188:33">{<block_content pos:start="180:41" pos:end="187:80"> <comment type="line" pos:start="179:99" pos:end="179:154">// if flight doesn't exist, remove it's waypoint markers</comment>
					<for pos:start="180:41" pos:end="184:41">for <control pos:start="180:45" pos:end="180:86">(<init pos:start="180:46" pos:end="180:85"><decl pos:start="180:46" pos:end="180:85"><type pos:start="180:46" pos:end="180:58"><name pos:start="180:46" pos:end="180:58"><name pos:start="180:46" pos:end="180:49">List</name><argument_list type="generic" pos:start="180:50" pos:end="180:58">&lt;<argument pos:start="180:51" pos:end="180:57"><name pos:start="180:51" pos:end="180:57">LMarker</name></argument>&gt;</argument_list></name></type> <name pos:start="180:60" pos:end="180:67">lmarkers</name> <range pos:start="180:69" pos:end="180:85">: <expr pos:start="180:71" pos:end="180:85"><name pos:start="180:71" pos:end="180:85">wayPointMarkers</name></expr></range></decl></init>)</control> <block pos:start="180:88" pos:end="184:41">{<block_content pos:start="181:49" pos:end="183:49">
						<for pos:start="181:49" pos:end="183:49">for <control pos:start="181:53" pos:end="181:74">(<init pos:start="181:54" pos:end="181:73"><decl pos:start="181:54" pos:end="181:73"><type pos:start="181:54" pos:end="181:60"><name pos:start="181:54" pos:end="181:60">LMarker</name></type> <name pos:start="181:62" pos:end="181:62">m</name> <range pos:start="181:64" pos:end="181:73">: <expr pos:start="181:66" pos:end="181:73"><name pos:start="181:66" pos:end="181:73">lmarkers</name></expr></range></decl></init>)</control> <block pos:start="181:76" pos:end="183:49">{<block_content pos:start="182:57" pos:end="182:94">
							<expr_stmt pos:start="182:57" pos:end="182:94"><expr pos:start="182:57" pos:end="182:93"><call pos:start="182:57" pos:end="182:74"><name pos:start="182:57" pos:end="182:72"><name pos:start="182:57" pos:end="182:65">utilities</name><operator pos:start="182:66" pos:end="182:66">.</operator><name pos:start="182:67" pos:end="182:72">getMap</name></name><argument_list pos:start="182:73" pos:end="182:74">()</argument_list></call><operator pos:start="182:75" pos:end="182:75">.</operator><call pos:start="182:76" pos:end="182:93"><name pos:start="182:76" pos:end="182:90">removeComponent</name><argument_list pos:start="182:91" pos:end="182:93">(<argument pos:start="182:92" pos:end="182:92"><expr pos:start="182:92" pos:end="182:92"><name pos:start="182:92" pos:end="182:92">m</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
						</block_content>}</block></for>
					</block_content>}</block></for>
					<expr_stmt pos:start="185:41" pos:end="185:64"><expr pos:start="185:41" pos:end="185:63"><call pos:start="185:41" pos:end="185:63"><name pos:start="185:41" pos:end="185:61"><name pos:start="185:41" pos:end="185:55">wayPointMarkers</name><operator pos:start="185:56" pos:end="185:56">.</operator><name pos:start="185:57" pos:end="185:61">clear</name></name><argument_list pos:start="185:62" pos:end="185:63">()</argument_list></call></expr>;</expr_stmt>
					<if_stmt pos:start="186:41" pos:end="187:80"><if pos:start="186:41" pos:end="187:80">if <condition pos:start="186:44" pos:end="186:117">(<expr pos:start="186:45" pos:end="186:116"><operator pos:start="186:45" pos:end="186:45">!</operator><call pos:start="186:46" pos:end="186:69"><name pos:start="186:46" pos:end="186:67"><name pos:start="186:46" pos:end="186:57">mapComponent</name><operator pos:start="186:58" pos:end="186:58">.</operator><name pos:start="186:59" pos:end="186:67">getFollow</name></name><argument_list pos:start="186:68" pos:end="186:69">()</argument_list></call> <operator pos:start="186:71" pos:end="186:72">&amp;&amp;</operator> <call pos:start="186:74" pos:end="186:92"><name pos:start="186:74" pos:end="186:90"><name pos:start="186:74" pos:end="186:85">flightRoutes</name><operator pos:start="186:86" pos:end="186:86">.</operator><name pos:start="186:87" pos:end="186:90">size</name></name><argument_list pos:start="186:91" pos:end="186:92">()</argument_list></call> <operator pos:start="186:94" pos:end="186:94">&lt;</operator> <call pos:start="186:96" pos:end="186:116"><name pos:start="186:96" pos:end="186:114"><name pos:start="186:96" pos:end="186:109">currentFlights</name><operator pos:start="186:110" pos:end="186:110">.</operator><name pos:start="186:111" pos:end="186:114">size</name></name><argument_list pos:start="186:115" pos:end="186:116">()</argument_list></call></expr>)</condition><block type="pseudo" pos:start="187:49" pos:end="187:80"><block_content pos:start="187:49" pos:end="187:80"> <comment type="line" pos:start="186:119" pos:end="186:171">// only reset the center when a flight route is added</comment>
						<expr_stmt pos:start="187:49" pos:end="187:80"><expr pos:start="187:49" pos:end="187:79"><call pos:start="187:49" pos:end="187:79"><name pos:start="187:49" pos:end="187:77"><name pos:start="187:49" pos:end="187:60">mapComponent</name><operator pos:start="187:61" pos:end="187:61">.</operator><name pos:start="187:62" pos:end="187:77">setAverageCenter</name></name><argument_list pos:start="187:78" pos:end="187:79">()</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
				</block_content>}</block></if></if_stmt>
			</block_content>}</block></if></if_stmt>
			<expr_stmt pos:start="190:25" pos:end="190:45"><expr pos:start="190:25" pos:end="190:44"><call pos:start="190:25" pos:end="190:44"><name pos:start="190:25" pos:end="190:42"><name pos:start="190:25" pos:end="190:36">flightRoutes</name><operator pos:start="190:37" pos:end="190:37">.</operator><name pos:start="190:38" pos:end="190:42">clear</name></name><argument_list pos:start="190:43" pos:end="190:44">()</argument_list></call></expr>;</expr_stmt>
			<comment type="block" pos:start="191:25" pos:end="193:27">/*
			 * if (wayPointMarkers.size() != flightRoutes.size()){ for (ArrayList&lt;LMarker&gt; e:wayPointMarkers){ utilities.removeAllMarkers(e); } wayPointMarkers.clear(); } flightRoutes.clear();
			 */</comment>
			<expr_stmt pos:start="194:25" pos:end="194:69"><expr pos:start="194:25" pos:end="194:68"><call pos:start="194:25" pos:end="194:68"><name pos:start="194:25" pos:end="194:50"><name pos:start="194:25" pos:end="194:28">this</name><operator pos:start="194:29" pos:end="194:29">.</operator><name pos:start="194:30" pos:end="194:50">addActiveFlightRoutes</name></name><argument_list pos:start="194:51" pos:end="194:68">(<argument pos:start="194:52" pos:end="194:58"><expr pos:start="194:52" pos:end="194:58"><name pos:start="194:52" pos:end="194:58">focused</name></expr></argument>, <argument pos:start="194:61" pos:end="194:67"><expr pos:start="194:61" pos:end="194:67"><name pos:start="194:61" pos:end="194:67">checked</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:start="194:71" pos:end="194:97">// redraw the flight routes</comment>
			<comment type="line" pos:start="195:25" pos:end="195:28">// }</comment>

		</block_content>}</block> <catch pos:start="197:19" pos:end="199:17">catch <parameter_list pos:start="197:25" pos:end="197:43">(<parameter pos:start="197:26" pos:end="197:42"><decl pos:start="197:26" pos:end="197:42"><type pos:start="197:26" pos:end="197:42"><name pos:start="197:26" pos:end="197:40">RemoteException</name></type> <name pos:start="197:42" pos:end="197:42">e</name></decl></parameter>)</parameter_list> <block pos:start="197:45" pos:end="199:17">{<block_content pos:start="198:25" pos:end="198:41"> <comment type="line" pos:start="197:47" pos:end="197:71">// reconnect to dronology</comment>
			<expr_stmt pos:start="198:25" pos:end="198:41"><expr pos:start="198:25" pos:end="198:40"><call pos:start="198:25" pos:end="198:40"><name pos:start="198:25" pos:end="198:38">initConnection</name><argument_list pos:start="198:39" pos:end="198:40">()</argument_list></call></expr>;</expr_stmt>
		</block_content>}</block></catch></try>
	</block_content>}</block></function>

	<comment type="block" format="javadoc" pos:start="202:9" pos:end="209:11">/**
	 * This function updates the position of the drone icons on the map
	 * 
	 * @param focused
	 *          this is the drone that is focused in the AFInfoPanel. It's flight route will be orange
	 * @param checked
	 *          this is a list of drones that have their checkbox checked in the AFInfoPanel. Their routes will be black.
	 */</comment>
	<function pos:start="210:9" pos:end="330:9"><type pos:start="210:9" pos:end="210:19"><specifier pos:start="210:9" pos:end="210:14">public</specifier> <name pos:start="210:16" pos:end="210:19">void</name></type> <name pos:start="210:21" pos:end="210:38">updateDroneMarkers</name><parameter_list pos:start="210:39" pos:end="210:76">(<parameter pos:start="210:40" pos:end="210:53"><decl pos:start="210:40" pos:end="210:53"><type pos:start="210:40" pos:end="210:53"><name pos:start="210:40" pos:end="210:45">String</name></type> <name pos:start="210:47" pos:end="210:53">focused</name></decl></parameter>, <parameter pos:start="210:56" pos:end="210:75"><decl pos:start="210:56" pos:end="210:75"><type pos:start="210:56" pos:end="210:75"><name pos:start="210:56" pos:end="210:67"><name pos:start="210:56" pos:end="210:59">List</name><argument_list type="generic" pos:start="210:60" pos:end="210:67">&lt;<argument pos:start="210:61" pos:end="210:66"><name pos:start="210:61" pos:end="210:66">String</name></argument>&gt;</argument_list></name></type> <name pos:start="210:69" pos:end="210:75">checked</name></decl></parameter>)</parameter_list> <block pos:start="210:78" pos:end="330:9">{<block_content pos:start="211:17" pos:end="329:17">
		<try pos:start="211:17" pos:end="329:17">try <block pos:start="211:21" pos:end="327:17">{<block_content pos:start="212:25" pos:end="326:25">
			<decl_stmt pos:start="212:25" pos:end="212:89"><decl pos:start="212:25" pos:end="212:88"><type pos:start="212:25" pos:end="212:45"><name pos:start="212:25" pos:end="212:45"><name pos:start="212:25" pos:end="212:34">Collection</name><argument_list type="generic" pos:start="212:35" pos:end="212:45">&lt;<argument pos:start="212:36" pos:end="212:44"><name pos:start="212:36" pos:end="212:44">IUAVProxy</name></argument>&gt;</argument_list></name></type> <name pos:start="212:47" pos:end="212:52">drones</name> <init pos:start="212:54" pos:end="212:88">= <expr pos:start="212:56" pos:end="212:88"><call pos:start="212:56" pos:end="212:88"><name pos:start="212:56" pos:end="212:86"><name pos:start="212:56" pos:end="212:72">droneSetupService</name><operator pos:start="212:73" pos:end="212:73">.</operator><name pos:start="212:74" pos:end="212:86">getActiveUAVs</name></name><argument_list pos:start="212:87" pos:end="212:88">()</argument_list></call></expr></init></decl>;</decl_stmt>
			<decl_stmt pos:start="213:25" pos:end="213:70"><decl pos:start="213:25" pos:end="213:69"><type pos:start="213:25" pos:end="213:42"><name pos:start="213:25" pos:end="213:42"><name pos:start="213:25" pos:end="213:33">ArrayList</name><argument_list type="generic" pos:start="213:34" pos:end="213:42">&lt;<argument pos:start="213:35" pos:end="213:41"><name pos:start="213:35" pos:end="213:41">LMarker</name></argument>&gt;</argument_list></name></type> <name pos:start="213:44" pos:end="213:49">remove</name> <init pos:start="213:51" pos:end="213:69">= <expr pos:start="213:53" pos:end="213:69"><operator pos:start="213:53" pos:end="213:55">new</operator> <call pos:start="213:57" pos:end="213:69"><name pos:start="213:57" pos:end="213:67"><name pos:start="213:57" pos:end="213:65">ArrayList</name><argument_list type="generic" pos:start="213:66" pos:end="213:67">&lt;&gt;</argument_list></name><argument_list pos:start="213:68" pos:end="213:69">()</argument_list></call></expr></init></decl>;</decl_stmt>
			<if_stmt pos:start="214:25" pos:end="317:25"><if pos:start="214:25" pos:end="274:25">if <condition pos:start="214:28" pos:end="214:60">(<expr pos:start="214:29" pos:end="214:59"><call pos:start="214:29" pos:end="214:42"><name pos:start="214:29" pos:end="214:40"><name pos:start="214:29" pos:end="214:35">markers</name><operator pos:start="214:36" pos:end="214:36">.</operator><name pos:start="214:37" pos:end="214:40">size</name></name><argument_list pos:start="214:41" pos:end="214:42">()</argument_list></call> <operator pos:start="214:44" pos:end="214:45">==</operator> <call pos:start="214:47" pos:end="214:59"><name pos:start="214:47" pos:end="214:57"><name pos:start="214:47" pos:end="214:52">drones</name><operator pos:start="214:53" pos:end="214:53">.</operator><name pos:start="214:54" pos:end="214:57">size</name></name><argument_list pos:start="214:58" pos:end="214:59">()</argument_list></call></expr>)</condition> <block pos:start="214:62" pos:end="274:25">{<block_content pos:start="215:33" pos:end="273:33">
				<for pos:start="215:33" pos:end="273:33">for <control pos:start="215:37" pos:end="215:62">(<init pos:start="215:38" pos:end="215:61"><decl pos:start="215:38" pos:end="215:61"><type pos:start="215:38" pos:end="215:44"><name pos:start="215:38" pos:end="215:44">LMarker</name></type> <name pos:start="215:46" pos:end="215:51">marker</name> <range pos:start="215:53" pos:end="215:61">: <expr pos:start="215:55" pos:end="215:61"><name pos:start="215:55" pos:end="215:61">markers</name></expr></range></decl></init>)</control> <block pos:start="215:64" pos:end="273:33">{<block_content pos:start="216:41" pos:end="272:41">
					<decl_stmt pos:start="216:41" pos:end="216:63"><decl pos:start="216:41" pos:end="216:62"><type pos:start="216:41" pos:end="216:47"><name pos:start="216:41" pos:end="216:47">boolean</name></type> <name pos:start="216:49" pos:end="216:54">exists</name> <init pos:start="216:56" pos:end="216:62">= <expr pos:start="216:58" pos:end="216:62"><literal type="boolean" pos:start="216:58" pos:end="216:62">false</literal></expr></init></decl>;</decl_stmt>
					<for pos:start="217:41" pos:end="238:41">for <control pos:start="217:45" pos:end="217:66">(<init pos:start="217:46" pos:end="217:65"><decl pos:start="217:46" pos:end="217:65"><type pos:start="217:46" pos:end="217:54"><name pos:start="217:46" pos:end="217:54">IUAVProxy</name></type> <name pos:start="217:56" pos:end="217:56">e</name> <range pos:start="217:58" pos:end="217:65">: <expr pos:start="217:60" pos:end="217:65"><name pos:start="217:60" pos:end="217:65">drones</name></expr></range></decl></init>)</control> <block pos:start="217:68" pos:end="238:41">{<block_content pos:start="218:49" pos:end="237:49">
						<if_stmt pos:start="218:49" pos:end="237:49"><if pos:start="218:49" pos:end="237:49">if <condition pos:start="218:52" pos:end="218:85">(<expr pos:start="218:53" pos:end="218:84"><call pos:start="218:53" pos:end="218:66"><name pos:start="218:53" pos:end="218:64"><name pos:start="218:53" pos:end="218:58">marker</name><operator pos:start="218:59" pos:end="218:59">.</operator><name pos:start="218:60" pos:end="218:64">getId</name></name><argument_list pos:start="218:65" pos:end="218:66">()</argument_list></call><operator pos:start="218:67" pos:end="218:67">.</operator><call pos:start="218:68" pos:end="218:84"><name pos:start="218:68" pos:end="218:73">equals</name><argument_list pos:start="218:74" pos:end="218:84">(<argument pos:start="218:75" pos:end="218:83"><expr pos:start="218:75" pos:end="218:83"><call pos:start="218:75" pos:end="218:83"><name pos:start="218:75" pos:end="218:81"><name pos:start="218:75" pos:end="218:75">e</name><operator pos:start="218:76" pos:end="218:76">.</operator><name pos:start="218:77" pos:end="218:81">getID</name></name><argument_list pos:start="218:82" pos:end="218:83">()</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="218:87" pos:end="237:49">{<block_content pos:start="219:57" pos:end="236:70"> <comment type="line" pos:start="218:89" pos:end="218:128">// if the marker correlates to the drone</comment>
							<decl_stmt pos:start="219:57" pos:end="219:81"><decl pos:start="219:57" pos:end="219:80"><type pos:start="219:57" pos:end="219:61"><name pos:start="219:57" pos:end="219:61">Point</name></type> <name pos:start="219:63" pos:end="219:66">temp</name> <init pos:start="219:68" pos:end="219:80">= <expr pos:start="219:70" pos:end="219:80"><operator pos:start="219:70" pos:end="219:72">new</operator> <call pos:start="219:74" pos:end="219:80"><name pos:start="219:74" pos:end="219:78">Point</name><argument_list pos:start="219:79" pos:end="219:80">()</argument_list></call></expr></init></decl>;</decl_stmt>
							<expr_stmt pos:start="220:57" pos:end="220:85"><expr pos:start="220:57" pos:end="220:84"><call pos:start="220:57" pos:end="220:84"><name pos:start="220:57" pos:end="220:67"><name pos:start="220:57" pos:end="220:60">temp</name><operator pos:start="220:61" pos:end="220:61">.</operator><name pos:start="220:62" pos:end="220:67">setLat</name></name><argument_list pos:start="220:68" pos:end="220:84">(<argument pos:start="220:69" pos:end="220:83"><expr pos:start="220:69" pos:end="220:83"><call pos:start="220:69" pos:end="220:83"><name pos:start="220:69" pos:end="220:81"><name pos:start="220:69" pos:end="220:69">e</name><operator pos:start="220:70" pos:end="220:70">.</operator><name pos:start="220:71" pos:end="220:81">getLatitude</name></name><argument_list pos:start="220:82" pos:end="220:83">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:start="220:87" pos:end="220:104">// update location</comment>
							<expr_stmt pos:start="221:57" pos:end="221:86"><expr pos:start="221:57" pos:end="221:85"><call pos:start="221:57" pos:end="221:85"><name pos:start="221:57" pos:end="221:67"><name pos:start="221:57" pos:end="221:60">temp</name><operator pos:start="221:61" pos:end="221:61">.</operator><name pos:start="221:62" pos:end="221:67">setLon</name></name><argument_list pos:start="221:68" pos:end="221:85">(<argument pos:start="221:69" pos:end="221:84"><expr pos:start="221:69" pos:end="221:84"><call pos:start="221:69" pos:end="221:84"><name pos:start="221:69" pos:end="221:82"><name pos:start="221:69" pos:end="221:69">e</name><operator pos:start="221:70" pos:end="221:70">.</operator><name pos:start="221:71" pos:end="221:82">getLongitude</name></name><argument_list pos:start="221:83" pos:end="221:84">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
							<expr_stmt pos:start="222:57" pos:end="222:78"><expr pos:start="222:57" pos:end="222:77"><call pos:start="222:57" pos:end="222:77"><name pos:start="222:57" pos:end="222:71"><name pos:start="222:57" pos:end="222:62">marker</name><operator pos:start="222:63" pos:end="222:63">.</operator><name pos:start="222:64" pos:end="222:71">setPoint</name></name><argument_list pos:start="222:72" pos:end="222:77">(<argument pos:start="222:73" pos:end="222:76"><expr pos:start="222:73" pos:end="222:76"><name pos:start="222:73" pos:end="222:76">temp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
							<if_stmt pos:start="223:57" pos:end="235:57"><if pos:start="223:57" pos:end="224:97">if <condition pos:start="223:60" pos:end="223:91">(<expr pos:start="223:61" pos:end="223:90"><call pos:start="223:61" pos:end="223:74"><name pos:start="223:61" pos:end="223:72"><name pos:start="223:61" pos:end="223:66">marker</name><operator pos:start="223:67" pos:end="223:67">.</operator><name pos:start="223:68" pos:end="223:72">getId</name></name><argument_list pos:start="223:73" pos:end="223:74">()</argument_list></call><operator pos:start="223:75" pos:end="223:75">.</operator><call pos:start="223:76" pos:end="223:90"><name pos:start="223:76" pos:end="223:81">equals</name><argument_list pos:start="223:82" pos:end="223:90">(<argument pos:start="223:83" pos:end="223:89"><expr pos:start="223:83" pos:end="223:89"><name pos:start="223:83" pos:end="223:89">focused</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="224:65" pos:end="224:97"><block_content pos:start="224:65" pos:end="224:97">
								<expr_stmt pos:start="224:65" pos:end="224:97"><expr pos:start="224:65" pos:end="224:96"><call pos:start="224:65" pos:end="224:96"><name pos:start="224:65" pos:end="224:78"><name pos:start="224:65" pos:end="224:70">marker</name><operator pos:start="224:71" pos:end="224:71">.</operator><name pos:start="224:72" pos:end="224:78">setIcon</name></name><argument_list pos:start="224:79" pos:end="224:96">(<argument pos:start="224:80" pos:end="224:95"><expr pos:start="224:80" pos:end="224:95"><name pos:start="224:80" pos:end="224:95">droneIconFocused</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>
							<else pos:start="225:57" pos:end="235:57">else <block pos:start="225:62" pos:end="235:57">{<block_content pos:start="226:65" pos:end="234:98">
								<decl_stmt pos:start="226:65" pos:end="226:87"><decl pos:start="226:65" pos:end="226:86"><type pos:start="226:65" pos:end="226:71"><name pos:start="226:65" pos:end="226:71">boolean</name></type> <name pos:start="226:73" pos:end="226:78">chosen</name> <init pos:start="226:80" pos:end="226:86">= <expr pos:start="226:82" pos:end="226:86"><literal type="boolean" pos:start="226:82" pos:end="226:86">false</literal></expr></init></decl>;</decl_stmt>
								<for pos:start="227:65" pos:end="232:65">for <control pos:start="227:69" pos:end="227:91">(<init pos:start="227:70" pos:end="227:90"><decl pos:start="227:70" pos:end="227:90"><type pos:start="227:70" pos:end="227:75"><name pos:start="227:70" pos:end="227:75">String</name></type> <name pos:start="227:77" pos:end="227:80">name</name> <range pos:start="227:82" pos:end="227:90">: <expr pos:start="227:84" pos:end="227:90"><name pos:start="227:84" pos:end="227:90">checked</name></expr></range></decl></init>)</control> <block pos:start="227:93" pos:end="232:65">{<block_content pos:start="228:73" pos:end="231:73">
									<if_stmt pos:start="228:73" pos:end="231:73"><if pos:start="228:73" pos:end="231:73">if <condition pos:start="228:76" pos:end="228:104">(<expr pos:start="228:77" pos:end="228:103"><call pos:start="228:77" pos:end="228:90"><name pos:start="228:77" pos:end="228:88"><name pos:start="228:77" pos:end="228:82">marker</name><operator pos:start="228:83" pos:end="228:83">.</operator><name pos:start="228:84" pos:end="228:88">getId</name></name><argument_list pos:start="228:89" pos:end="228:90">()</argument_list></call><operator pos:start="228:91" pos:end="228:91">.</operator><call pos:start="228:92" pos:end="228:103"><name pos:start="228:92" pos:end="228:97">equals</name><argument_list pos:start="228:98" pos:end="228:103">(<argument pos:start="228:99" pos:end="228:102"><expr pos:start="228:99" pos:end="228:102"><name pos:start="228:99" pos:end="228:102">name</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="228:106" pos:end="231:73">{<block_content pos:start="229:81" pos:end="230:94">
										<expr_stmt pos:start="229:81" pos:end="229:114"><expr pos:start="229:81" pos:end="229:113"><call pos:start="229:81" pos:end="229:113"><name pos:start="229:81" pos:end="229:94"><name pos:start="229:81" pos:end="229:86">marker</name><operator pos:start="229:87" pos:end="229:87">.</operator><name pos:start="229:88" pos:end="229:94">setIcon</name></name><argument_list pos:start="229:95" pos:end="229:113">(<argument pos:start="229:96" pos:end="229:112"><expr pos:start="229:96" pos:end="229:112"><name pos:start="229:96" pos:end="229:112">droneIconSelected</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
										<expr_stmt pos:start="230:81" pos:end="230:94"><expr pos:start="230:81" pos:end="230:93"><name pos:start="230:81" pos:end="230:86">chosen</name> <operator pos:start="230:88" pos:end="230:88">=</operator> <literal type="boolean" pos:start="230:90" pos:end="230:93">true</literal></expr>;</expr_stmt>
									</block_content>}</block></if></if_stmt>
								</block_content>}</block></for>
								<if_stmt pos:start="233:65" pos:end="234:98"><if pos:start="233:65" pos:end="234:98">if <condition pos:start="233:68" pos:end="233:76">(<expr pos:start="233:69" pos:end="233:75"><operator pos:start="233:69" pos:end="233:69">!</operator><name pos:start="233:70" pos:end="233:75">chosen</name></expr>)</condition><block type="pseudo" pos:start="234:73" pos:end="234:98"><block_content pos:start="234:73" pos:end="234:98">
									<expr_stmt pos:start="234:73" pos:end="234:98"><expr pos:start="234:73" pos:end="234:97"><call pos:start="234:73" pos:end="234:97"><name pos:start="234:73" pos:end="234:86"><name pos:start="234:73" pos:end="234:78">marker</name><operator pos:start="234:79" pos:end="234:79">.</operator><name pos:start="234:80" pos:end="234:86">setIcon</name></name><argument_list pos:start="234:87" pos:end="234:97">(<argument pos:start="234:88" pos:end="234:96"><expr pos:start="234:88" pos:end="234:96"><name pos:start="234:88" pos:end="234:96">droneIcon</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
							</block_content>}</block></else></if_stmt>
							<expr_stmt pos:start="236:57" pos:end="236:70"><expr pos:start="236:57" pos:end="236:69"><name pos:start="236:57" pos:end="236:62">exists</name> <operator pos:start="236:64" pos:end="236:64">=</operator> <literal type="boolean" pos:start="236:66" pos:end="236:69">true</literal></expr>;</expr_stmt>
						</block_content>}</block></if></if_stmt>
					</block_content>}</block></for>
					<if_stmt pos:start="239:41" pos:end="272:41"><if pos:start="239:41" pos:end="272:41">if <condition pos:start="239:44" pos:end="239:52">(<expr pos:start="239:45" pos:end="239:51"><operator pos:start="239:45" pos:end="239:45">!</operator><name pos:start="239:46" pos:end="239:51">exists</name></expr>)</condition> <block pos:start="239:54" pos:end="272:41">{<block_content pos:start="240:49" pos:end="271:49"> <comment type="line" pos:start="239:56" pos:end="239:147">// if the drone that is represented by the marker is no longer active or if the drone is new</comment>
						<expr_stmt pos:start="240:49" pos:end="240:67"><expr pos:start="240:49" pos:end="240:66"><call pos:start="240:49" pos:end="240:66"><name pos:start="240:49" pos:end="240:58"><name pos:start="240:49" pos:end="240:54">remove</name><operator pos:start="240:55" pos:end="240:55">.</operator><name pos:start="240:56" pos:end="240:58">add</name></name><argument_list pos:start="240:59" pos:end="240:66">(<argument pos:start="240:60" pos:end="240:65"><expr pos:start="240:60" pos:end="240:65"><name pos:start="240:60" pos:end="240:65">marker</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
						<for pos:start="241:49" pos:end="271:49">for <control pos:start="241:53" pos:end="241:75">(<init pos:start="241:54" pos:end="241:74"><decl pos:start="241:54" pos:end="241:74"><type pos:start="241:54" pos:end="241:62"><name pos:start="241:54" pos:end="241:62">IUAVProxy</name></type> <name pos:start="241:64" pos:end="241:65">e1</name> <range pos:start="241:67" pos:end="241:74">: <expr pos:start="241:69" pos:end="241:74"><name pos:start="241:69" pos:end="241:74">drones</name></expr></range></decl></init>)</control> <block pos:start="241:77" pos:end="271:49">{<block_content pos:start="242:57" pos:end="270:57">
							<decl_stmt pos:start="242:57" pos:end="242:76"><decl pos:start="242:57" pos:end="242:75"><type pos:start="242:57" pos:end="242:63"><name pos:start="242:57" pos:end="242:63">boolean</name></type> <name pos:start="242:65" pos:end="242:67">old</name> <init pos:start="242:69" pos:end="242:75">= <expr pos:start="242:71" pos:end="242:75"><literal type="boolean" pos:start="242:71" pos:end="242:75">false</literal></expr></init></decl>;</decl_stmt>
							<for pos:start="243:57" pos:end="246:57">for <control pos:start="243:61" pos:end="243:87">(<init pos:start="243:62" pos:end="243:86"><decl pos:start="243:62" pos:end="243:86"><type pos:start="243:62" pos:end="243:68"><name pos:start="243:62" pos:end="243:68">LMarker</name></type> <name pos:start="243:70" pos:end="243:76">marker1</name> <range pos:start="243:78" pos:end="243:86">: <expr pos:start="243:80" pos:end="243:86"><name pos:start="243:80" pos:end="243:86">markers</name></expr></range></decl></init>)</control> <block pos:start="243:89" pos:end="246:57">{<block_content pos:start="244:65" pos:end="245:83">
								<if_stmt pos:start="244:65" pos:end="245:83"><if pos:start="244:65" pos:end="245:83">if <condition pos:start="244:68" pos:end="244:103">(<expr pos:start="244:69" pos:end="244:102"><call pos:start="244:69" pos:end="244:78"><name pos:start="244:69" pos:end="244:76"><name pos:start="244:69" pos:end="244:70">e1</name><operator pos:start="244:71" pos:end="244:71">.</operator><name pos:start="244:72" pos:end="244:76">getID</name></name><argument_list pos:start="244:77" pos:end="244:78">()</argument_list></call><operator pos:start="244:79" pos:end="244:79">.</operator><call pos:start="244:80" pos:end="244:102"><name pos:start="244:80" pos:end="244:85">equals</name><argument_list pos:start="244:86" pos:end="244:102">(<argument pos:start="244:87" pos:end="244:101"><expr pos:start="244:87" pos:end="244:101"><call pos:start="244:87" pos:end="244:101"><name pos:start="244:87" pos:end="244:99"><name pos:start="244:87" pos:end="244:93">marker1</name><operator pos:start="244:94" pos:end="244:94">.</operator><name pos:start="244:95" pos:end="244:99">getId</name></name><argument_list pos:start="244:100" pos:end="244:101">()</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="245:73" pos:end="245:83"><block_content pos:start="245:73" pos:end="245:83">
									<expr_stmt pos:start="245:73" pos:end="245:83"><expr pos:start="245:73" pos:end="245:82"><name pos:start="245:73" pos:end="245:75">old</name> <operator pos:start="245:77" pos:end="245:77">=</operator> <literal type="boolean" pos:start="245:79" pos:end="245:82">true</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>
							</block_content>}</block></for>
							<if_stmt pos:start="247:57" pos:end="270:57"><if pos:start="247:57" pos:end="270:57">if <condition pos:start="247:60" pos:end="247:65">(<expr pos:start="247:61" pos:end="247:64"><operator pos:start="247:61" pos:end="247:61">!</operator><name pos:start="247:62" pos:end="247:64">old</name></expr>)</condition> <block pos:start="247:67" pos:end="270:57">{<block_content pos:start="248:65" pos:end="269:104"> <comment type="line" pos:start="247:69" pos:end="247:121">// the drone does not have a marker represented by it</comment>
								<decl_stmt pos:start="248:65" pos:end="248:133"><decl pos:start="248:65" pos:end="248:132"><type pos:start="248:65" pos:end="248:71"><name pos:start="248:65" pos:end="248:71">LMarker</name></type> <name pos:start="248:73" pos:end="248:81">newMarker</name> <init pos:start="248:83" pos:end="248:132">= <expr pos:start="248:85" pos:end="248:132"><operator pos:start="248:85" pos:end="248:87">new</operator> <call pos:start="248:89" pos:end="248:132"><name pos:start="248:89" pos:end="248:95">LMarker</name><argument_list pos:start="248:96" pos:end="248:132">(<argument pos:start="248:97" pos:end="248:112"><expr pos:start="248:97" pos:end="248:112"><call pos:start="248:97" pos:end="248:112"><name pos:start="248:97" pos:end="248:110"><name pos:start="248:97" pos:end="248:98">e1</name><operator pos:start="248:99" pos:end="248:99">.</operator><name pos:start="248:100" pos:end="248:110">getLatitude</name></name><argument_list pos:start="248:111" pos:end="248:112">()</argument_list></call></expr></argument>, <argument pos:start="248:115" pos:end="248:131"><expr pos:start="248:115" pos:end="248:131"><call pos:start="248:115" pos:end="248:131"><name pos:start="248:115" pos:end="248:129"><name pos:start="248:115" pos:end="248:116">e1</name><operator pos:start="248:117" pos:end="248:117">.</operator><name pos:start="248:118" pos:end="248:129">getLongitude</name></name><argument_list pos:start="248:130" pos:end="248:131">()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
								<expr_stmt pos:start="249:65" pos:end="249:92"><expr pos:start="249:65" pos:end="249:91"><call pos:start="249:65" pos:end="249:91"><name pos:start="249:65" pos:end="249:79"><name pos:start="249:65" pos:end="249:73">newMarker</name><operator pos:start="249:74" pos:end="249:74">.</operator><name pos:start="249:75" pos:end="249:79">setId</name></name><argument_list pos:start="249:80" pos:end="249:91">(<argument pos:start="249:81" pos:end="249:90"><expr pos:start="249:81" pos:end="249:90"><call pos:start="249:81" pos:end="249:90"><name pos:start="249:81" pos:end="249:88"><name pos:start="249:81" pos:end="249:82">e1</name><operator pos:start="249:83" pos:end="249:83">.</operator><name pos:start="249:84" pos:end="249:88">getID</name></name><argument_list pos:start="249:89" pos:end="249:90">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
								<if_stmt pos:start="250:65" pos:end="262:65"><if pos:start="250:65" pos:end="251:105">if <condition pos:start="250:68" pos:end="250:99">(<expr pos:start="250:69" pos:end="250:98"><call pos:start="250:69" pos:end="250:82"><name pos:start="250:69" pos:end="250:80"><name pos:start="250:69" pos:end="250:74">marker</name><operator pos:start="250:75" pos:end="250:75">.</operator><name pos:start="250:76" pos:end="250:80">getId</name></name><argument_list pos:start="250:81" pos:end="250:82">()</argument_list></call><operator pos:start="250:83" pos:end="250:83">.</operator><call pos:start="250:84" pos:end="250:98"><name pos:start="250:84" pos:end="250:89">equals</name><argument_list pos:start="250:90" pos:end="250:98">(<argument pos:start="250:91" pos:end="250:97"><expr pos:start="250:91" pos:end="250:97"><name pos:start="250:91" pos:end="250:97">focused</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="251:73" pos:end="251:105"><block_content pos:start="251:73" pos:end="251:105">
									<expr_stmt pos:start="251:73" pos:end="251:105"><expr pos:start="251:73" pos:end="251:104"><call pos:start="251:73" pos:end="251:104"><name pos:start="251:73" pos:end="251:86"><name pos:start="251:73" pos:end="251:78">marker</name><operator pos:start="251:79" pos:end="251:79">.</operator><name pos:start="251:80" pos:end="251:86">setIcon</name></name><argument_list pos:start="251:87" pos:end="251:104">(<argument pos:start="251:88" pos:end="251:103"><expr pos:start="251:88" pos:end="251:103"><name pos:start="251:88" pos:end="251:103">droneIconFocused</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>
								<else pos:start="252:65" pos:end="262:65">else <block pos:start="252:70" pos:end="262:65">{<block_content pos:start="253:73" pos:end="261:106">
									<decl_stmt pos:start="253:73" pos:end="253:95"><decl pos:start="253:73" pos:end="253:94"><type pos:start="253:73" pos:end="253:79"><name pos:start="253:73" pos:end="253:79">boolean</name></type> <name pos:start="253:81" pos:end="253:86">chosen</name> <init pos:start="253:88" pos:end="253:94">= <expr pos:start="253:90" pos:end="253:94"><literal type="boolean" pos:start="253:90" pos:end="253:94">false</literal></expr></init></decl>;</decl_stmt>
									<for pos:start="254:73" pos:end="259:73">for <control pos:start="254:77" pos:end="254:99">(<init pos:start="254:78" pos:end="254:98"><decl pos:start="254:78" pos:end="254:98"><type pos:start="254:78" pos:end="254:83"><name pos:start="254:78" pos:end="254:83">String</name></type> <name pos:start="254:85" pos:end="254:88">name</name> <range pos:start="254:90" pos:end="254:98">: <expr pos:start="254:92" pos:end="254:98"><name pos:start="254:92" pos:end="254:98">checked</name></expr></range></decl></init>)</control> <block pos:start="254:101" pos:end="259:73">{<block_content pos:start="255:81" pos:end="258:81">
										<if_stmt pos:start="255:81" pos:end="258:81"><if pos:start="255:81" pos:end="258:81">if <condition pos:start="255:84" pos:end="255:112">(<expr pos:start="255:85" pos:end="255:111"><call pos:start="255:85" pos:end="255:98"><name pos:start="255:85" pos:end="255:96"><name pos:start="255:85" pos:end="255:90">marker</name><operator pos:start="255:91" pos:end="255:91">.</operator><name pos:start="255:92" pos:end="255:96">getId</name></name><argument_list pos:start="255:97" pos:end="255:98">()</argument_list></call><operator pos:start="255:99" pos:end="255:99">.</operator><call pos:start="255:100" pos:end="255:111"><name pos:start="255:100" pos:end="255:105">equals</name><argument_list pos:start="255:106" pos:end="255:111">(<argument pos:start="255:107" pos:end="255:110"><expr pos:start="255:107" pos:end="255:110"><name pos:start="255:107" pos:end="255:110">name</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="255:114" pos:end="258:81">{<block_content pos:start="256:89" pos:end="257:102">
											<expr_stmt pos:start="256:89" pos:end="256:122"><expr pos:start="256:89" pos:end="256:121"><call pos:start="256:89" pos:end="256:121"><name pos:start="256:89" pos:end="256:102"><name pos:start="256:89" pos:end="256:94">marker</name><operator pos:start="256:95" pos:end="256:95">.</operator><name pos:start="256:96" pos:end="256:102">setIcon</name></name><argument_list pos:start="256:103" pos:end="256:121">(<argument pos:start="256:104" pos:end="256:120"><expr pos:start="256:104" pos:end="256:120"><name pos:start="256:104" pos:end="256:120">droneIconSelected</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
											<expr_stmt pos:start="257:89" pos:end="257:102"><expr pos:start="257:89" pos:end="257:101"><name pos:start="257:89" pos:end="257:94">chosen</name> <operator pos:start="257:96" pos:end="257:96">=</operator> <literal type="boolean" pos:start="257:98" pos:end="257:101">true</literal></expr>;</expr_stmt>
										</block_content>}</block></if></if_stmt>
									</block_content>}</block></for>
									<if_stmt pos:start="260:73" pos:end="261:106"><if pos:start="260:73" pos:end="261:106">if <condition pos:start="260:76" pos:end="260:84">(<expr pos:start="260:77" pos:end="260:83"><operator pos:start="260:77" pos:end="260:77">!</operator><name pos:start="260:78" pos:end="260:83">chosen</name></expr>)</condition><block type="pseudo" pos:start="261:81" pos:end="261:106"><block_content pos:start="261:81" pos:end="261:106">
										<expr_stmt pos:start="261:81" pos:end="261:106"><expr pos:start="261:81" pos:end="261:105"><call pos:start="261:81" pos:end="261:105"><name pos:start="261:81" pos:end="261:94"><name pos:start="261:81" pos:end="261:86">marker</name><operator pos:start="261:87" pos:end="261:87">.</operator><name pos:start="261:88" pos:end="261:94">setIcon</name></name><argument_list pos:start="261:95" pos:end="261:105">(<argument pos:start="261:96" pos:end="261:104"><expr pos:start="261:96" pos:end="261:104"><name pos:start="261:96" pos:end="261:104">droneIcon</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
								</block_content>}</block></else></if_stmt>
								<expr_stmt pos:start="263:65" pos:end="263:105"><expr pos:start="263:65" pos:end="263:104"><call pos:start="263:65" pos:end="263:104"><name pos:start="263:65" pos:end="263:85"><name pos:start="263:65" pos:end="263:73">newMarker</name><operator pos:start="263:74" pos:end="263:74">.</operator><name pos:start="263:75" pos:end="263:85">setIconSize</name></name><argument_list pos:start="263:86" pos:end="263:104">(<argument pos:start="263:87" pos:end="263:103"><expr pos:start="263:87" pos:end="263:103"><operator pos:start="263:87" pos:end="263:89">new</operator> <call pos:start="263:91" pos:end="263:103"><name pos:start="263:91" pos:end="263:95">Point</name><argument_list pos:start="263:96" pos:end="263:103">(<argument pos:start="263:97" pos:end="263:98"><expr pos:start="263:97" pos:end="263:98"><literal type="number" pos:start="263:97" pos:end="263:98">33</literal></expr></argument>, <argument pos:start="263:101" pos:end="263:102"><expr pos:start="263:101" pos:end="263:102"><literal type="number" pos:start="263:101" pos:end="263:102">33</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
								<expr_stmt pos:start="264:65" pos:end="264:115"><expr pos:start="264:65" pos:end="264:114"><call pos:start="264:65" pos:end="264:114"><name pos:start="264:65" pos:end="264:87"><name pos:start="264:65" pos:end="264:73">newMarker</name><operator pos:start="264:74" pos:end="264:74">.</operator><name pos:start="264:75" pos:end="264:87">setIconAnchor</name></name><argument_list pos:start="264:88" pos:end="264:114">(<argument pos:start="264:89" pos:end="264:113"><expr pos:start="264:89" pos:end="264:113"><operator pos:start="264:89" pos:end="264:91">new</operator> <call pos:start="264:93" pos:end="264:113"><name pos:start="264:93" pos:end="264:97">Point</name><argument_list pos:start="264:98" pos:end="264:113">(<argument pos:start="264:99" pos:end="264:104"><expr pos:start="264:99" pos:end="264:104"><name pos:start="264:99" pos:end="264:104">ACHN_X</name></expr></argument>, <argument pos:start="264:107" pos:end="264:112"><expr pos:start="264:107" pos:end="264:112"><name pos:start="264:107" pos:end="264:112">ANCH_Y</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
								<expr_stmt pos:start="265:65" pos:end="265:128"><expr pos:start="265:65" pos:end="265:127"><call pos:start="265:65" pos:end="265:127"><name pos:start="265:65" pos:end="265:94"><name pos:start="265:65" pos:end="265:73">newMarker</name><operator pos:start="265:74" pos:end="265:74">.</operator><name pos:start="265:75" pos:end="265:94">addMouseOverListener</name></name><argument_list pos:start="265:95" pos:end="265:127">(<argument pos:start="265:96" pos:end="265:126"><expr pos:start="265:96" pos:end="265:126"><call pos:start="265:96" pos:end="265:126"><name pos:start="265:96" pos:end="265:124"><name pos:start="265:96" pos:end="265:107">mapComponent</name><operator pos:start="265:108" pos:end="265:108">.</operator><name pos:start="265:109" pos:end="265:124">getDroneListener</name></name><argument_list pos:start="265:125" pos:end="265:126">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
								<expr_stmt pos:start="266:65" pos:end="266:87"><expr pos:start="266:65" pos:end="266:86"><call pos:start="266:65" pos:end="266:86"><name pos:start="266:65" pos:end="266:75"><name pos:start="266:65" pos:end="266:71">markers</name><operator pos:start="266:72" pos:end="266:72">.</operator><name pos:start="266:73" pos:end="266:75">add</name></name><argument_list pos:start="266:76" pos:end="266:86">(<argument pos:start="266:77" pos:end="266:85"><expr pos:start="266:77" pos:end="266:85"><name pos:start="266:77" pos:end="266:85">newMarker</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
								<expr_stmt pos:start="267:65" pos:end="267:99"><expr pos:start="267:65" pos:end="267:98"><call pos:start="267:65" pos:end="267:98"><name pos:start="267:65" pos:end="267:87"><name pos:start="267:65" pos:end="267:74">leafletMap</name><operator pos:start="267:75" pos:end="267:75">.</operator><name pos:start="267:76" pos:end="267:87">addComponent</name></name><argument_list pos:start="267:88" pos:end="267:98">(<argument pos:start="267:89" pos:end="267:97"><expr pos:start="267:89" pos:end="267:97"><name pos:start="267:89" pos:end="267:97">newMarker</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
								<if_stmt pos:start="268:65" pos:end="269:104"><if pos:start="268:65" pos:end="269:104">if <condition pos:start="268:68" pos:end="268:94">(<expr pos:start="268:69" pos:end="268:93"><operator pos:start="268:69" pos:end="268:69">!</operator><call pos:start="268:70" pos:end="268:93"><name pos:start="268:70" pos:end="268:91"><name pos:start="268:70" pos:end="268:81">mapComponent</name><operator pos:start="268:82" pos:end="268:82">.</operator><name pos:start="268:83" pos:end="268:91">getFollow</name></name><argument_list pos:start="268:92" pos:end="268:93">()</argument_list></call></expr>)</condition><block type="pseudo" pos:start="269:73" pos:end="269:104"><block_content pos:start="269:73" pos:end="269:104">
									<expr_stmt pos:start="269:73" pos:end="269:104"><expr pos:start="269:73" pos:end="269:103"><call pos:start="269:73" pos:end="269:103"><name pos:start="269:73" pos:end="269:101"><name pos:start="269:73" pos:end="269:84">mapComponent</name><operator pos:start="269:85" pos:end="269:85">.</operator><name pos:start="269:86" pos:end="269:101">setAverageCenter</name></name><argument_list pos:start="269:102" pos:end="269:103">()</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
							</block_content>}</block></if></if_stmt>
						</block_content>}</block></for>
					</block_content>}</block></if></if_stmt>
				</block_content>}</block></for>
			</block_content>}</block></if> <if type="elseif" pos:start="274:27" pos:end="307:25">else if <condition pos:start="274:35" pos:end="274:66">(<expr pos:start="274:36" pos:end="274:65"><call pos:start="274:36" pos:end="274:49"><name pos:start="274:36" pos:end="274:47"><name pos:start="274:36" pos:end="274:42">markers</name><operator pos:start="274:43" pos:end="274:43">.</operator><name pos:start="274:44" pos:end="274:47">size</name></name><argument_list pos:start="274:48" pos:end="274:49">()</argument_list></call> <operator pos:start="274:51" pos:end="274:51">&lt;</operator> <call pos:start="274:53" pos:end="274:65"><name pos:start="274:53" pos:end="274:63"><name pos:start="274:53" pos:end="274:58">drones</name><operator pos:start="274:59" pos:end="274:59">.</operator><name pos:start="274:60" pos:end="274:63">size</name></name><argument_list pos:start="274:64" pos:end="274:65">()</argument_list></call></expr>)</condition> <block pos:start="274:68" pos:end="307:25">{<block_content pos:start="275:33" pos:end="306:33">
				<for pos:start="275:33" pos:end="306:33">for <control pos:start="275:37" pos:end="275:58">(<init pos:start="275:38" pos:end="275:57"><decl pos:start="275:38" pos:end="275:57"><type pos:start="275:38" pos:end="275:46"><name pos:start="275:38" pos:end="275:46">IUAVProxy</name></type> <name pos:start="275:48" pos:end="275:48">e</name> <range pos:start="275:50" pos:end="275:57">: <expr pos:start="275:52" pos:end="275:57"><name pos:start="275:52" pos:end="275:57">drones</name></expr></range></decl></init>)</control> <block pos:start="275:60" pos:end="306:33">{<block_content pos:start="276:41" pos:end="305:41">
					<decl_stmt pos:start="276:41" pos:end="276:63"><decl pos:start="276:41" pos:end="276:62"><type pos:start="276:41" pos:end="276:47"><name pos:start="276:41" pos:end="276:47">boolean</name></type> <name pos:start="276:49" pos:end="276:54">exists</name> <init pos:start="276:56" pos:end="276:62">= <expr pos:start="276:58" pos:end="276:62"><literal type="boolean" pos:start="276:58" pos:end="276:62">false</literal></expr></init></decl>;</decl_stmt>
					<for pos:start="277:41" pos:end="280:41">for <control pos:start="277:45" pos:end="277:70">(<init pos:start="277:46" pos:end="277:69"><decl pos:start="277:46" pos:end="277:69"><type pos:start="277:46" pos:end="277:52"><name pos:start="277:46" pos:end="277:52">LMarker</name></type> <name pos:start="277:54" pos:end="277:59">marker</name> <range pos:start="277:61" pos:end="277:69">: <expr pos:start="277:63" pos:end="277:69"><name pos:start="277:63" pos:end="277:69">markers</name></expr></range></decl></init>)</control> <block pos:start="277:72" pos:end="280:41">{<block_content pos:start="278:49" pos:end="279:70">
						<if_stmt pos:start="278:49" pos:end="279:70"><if pos:start="278:49" pos:end="279:70">if <condition pos:start="278:52" pos:end="278:85">(<expr pos:start="278:53" pos:end="278:84"><call pos:start="278:53" pos:end="278:61"><name pos:start="278:53" pos:end="278:59"><name pos:start="278:53" pos:end="278:53">e</name><operator pos:start="278:54" pos:end="278:54">.</operator><name pos:start="278:55" pos:end="278:59">getID</name></name><argument_list pos:start="278:60" pos:end="278:61">()</argument_list></call><operator pos:start="278:62" pos:end="278:62">.</operator><call pos:start="278:63" pos:end="278:84"><name pos:start="278:63" pos:end="278:68">equals</name><argument_list pos:start="278:69" pos:end="278:84">(<argument pos:start="278:70" pos:end="278:83"><expr pos:start="278:70" pos:end="278:83"><call pos:start="278:70" pos:end="278:83"><name pos:start="278:70" pos:end="278:81"><name pos:start="278:70" pos:end="278:75">marker</name><operator pos:start="278:76" pos:end="278:76">.</operator><name pos:start="278:77" pos:end="278:81">getId</name></name><argument_list pos:start="278:82" pos:end="278:83">()</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="279:57" pos:end="279:70"><block_content pos:start="279:57" pos:end="279:70">
							<expr_stmt pos:start="279:57" pos:end="279:70"><expr pos:start="279:57" pos:end="279:69"><name pos:start="279:57" pos:end="279:62">exists</name> <operator pos:start="279:64" pos:end="279:64">=</operator> <literal type="boolean" pos:start="279:66" pos:end="279:69">true</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>
					</block_content>}</block></for>
					<if_stmt pos:start="281:41" pos:end="305:41"><if pos:start="281:41" pos:end="305:41">if <condition pos:start="281:44" pos:end="281:52">(<expr pos:start="281:45" pos:end="281:51"><operator pos:start="281:45" pos:end="281:45">!</operator><name pos:start="281:46" pos:end="281:51">exists</name></expr>)</condition> <block pos:start="281:54" pos:end="305:41">{<block_content pos:start="282:49" pos:end="303:88">
						<decl_stmt pos:start="282:49" pos:end="282:112"><decl pos:start="282:49" pos:end="282:111"><type pos:start="282:49" pos:end="282:55"><name pos:start="282:49" pos:end="282:55">LMarker</name></type> <name pos:start="282:57" pos:end="282:62">marker</name> <init pos:start="282:64" pos:end="282:111">= <expr pos:start="282:66" pos:end="282:111"><operator pos:start="282:66" pos:end="282:68">new</operator> <call pos:start="282:70" pos:end="282:111"><name pos:start="282:70" pos:end="282:76">LMarker</name><argument_list pos:start="282:77" pos:end="282:111">(<argument pos:start="282:78" pos:end="282:92"><expr pos:start="282:78" pos:end="282:92"><call pos:start="282:78" pos:end="282:92"><name pos:start="282:78" pos:end="282:90"><name pos:start="282:78" pos:end="282:78">e</name><operator pos:start="282:79" pos:end="282:79">.</operator><name pos:start="282:80" pos:end="282:90">getLatitude</name></name><argument_list pos:start="282:91" pos:end="282:92">()</argument_list></call></expr></argument>, <argument pos:start="282:95" pos:end="282:110"><expr pos:start="282:95" pos:end="282:110"><call pos:start="282:95" pos:end="282:110"><name pos:start="282:95" pos:end="282:108"><name pos:start="282:95" pos:end="282:95">e</name><operator pos:start="282:96" pos:end="282:96">.</operator><name pos:start="282:97" pos:end="282:108">getLongitude</name></name><argument_list pos:start="282:109" pos:end="282:110">()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt> <comment type="line" pos:start="282:114" pos:end="282:147">// create new marker for the drone</comment>
						<expr_stmt pos:start="283:49" pos:end="283:72"><expr pos:start="283:49" pos:end="283:71"><call pos:start="283:49" pos:end="283:71"><name pos:start="283:49" pos:end="283:60"><name pos:start="283:49" pos:end="283:54">marker</name><operator pos:start="283:55" pos:end="283:55">.</operator><name pos:start="283:56" pos:end="283:60">setId</name></name><argument_list pos:start="283:61" pos:end="283:71">(<argument pos:start="283:62" pos:end="283:70"><expr pos:start="283:62" pos:end="283:70"><call pos:start="283:62" pos:end="283:70"><name pos:start="283:62" pos:end="283:68"><name pos:start="283:62" pos:end="283:62">e</name><operator pos:start="283:63" pos:end="283:63">.</operator><name pos:start="283:64" pos:end="283:68">getID</name></name><argument_list pos:start="283:69" pos:end="283:70">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
						<if_stmt pos:start="284:49" pos:end="296:49"><if pos:start="284:49" pos:end="285:89">if <condition pos:start="284:52" pos:end="284:83">(<expr pos:start="284:53" pos:end="284:82"><call pos:start="284:53" pos:end="284:66"><name pos:start="284:53" pos:end="284:64"><name pos:start="284:53" pos:end="284:58">marker</name><operator pos:start="284:59" pos:end="284:59">.</operator><name pos:start="284:60" pos:end="284:64">getId</name></name><argument_list pos:start="284:65" pos:end="284:66">()</argument_list></call><operator pos:start="284:67" pos:end="284:67">.</operator><call pos:start="284:68" pos:end="284:82"><name pos:start="284:68" pos:end="284:73">equals</name><argument_list pos:start="284:74" pos:end="284:82">(<argument pos:start="284:75" pos:end="284:81"><expr pos:start="284:75" pos:end="284:81"><name pos:start="284:75" pos:end="284:81">focused</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="285:57" pos:end="285:89"><block_content pos:start="285:57" pos:end="285:89">
							<expr_stmt pos:start="285:57" pos:end="285:89"><expr pos:start="285:57" pos:end="285:88"><call pos:start="285:57" pos:end="285:88"><name pos:start="285:57" pos:end="285:70"><name pos:start="285:57" pos:end="285:62">marker</name><operator pos:start="285:63" pos:end="285:63">.</operator><name pos:start="285:64" pos:end="285:70">setIcon</name></name><argument_list pos:start="285:71" pos:end="285:88">(<argument pos:start="285:72" pos:end="285:87"><expr pos:start="285:72" pos:end="285:87"><name pos:start="285:72" pos:end="285:87">droneIconFocused</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>
						<else pos:start="286:49" pos:end="296:49">else <block pos:start="286:54" pos:end="296:49">{<block_content pos:start="287:57" pos:end="295:90">
							<decl_stmt pos:start="287:57" pos:end="287:79"><decl pos:start="287:57" pos:end="287:78"><type pos:start="287:57" pos:end="287:63"><name pos:start="287:57" pos:end="287:63">boolean</name></type> <name pos:start="287:65" pos:end="287:70">chosen</name> <init pos:start="287:72" pos:end="287:78">= <expr pos:start="287:74" pos:end="287:78"><literal type="boolean" pos:start="287:74" pos:end="287:78">false</literal></expr></init></decl>;</decl_stmt>
							<for pos:start="288:57" pos:end="293:57">for <control pos:start="288:61" pos:end="288:83">(<init pos:start="288:62" pos:end="288:82"><decl pos:start="288:62" pos:end="288:82"><type pos:start="288:62" pos:end="288:67"><name pos:start="288:62" pos:end="288:67">String</name></type> <name pos:start="288:69" pos:end="288:72">name</name> <range pos:start="288:74" pos:end="288:82">: <expr pos:start="288:76" pos:end="288:82"><name pos:start="288:76" pos:end="288:82">checked</name></expr></range></decl></init>)</control> <block pos:start="288:85" pos:end="293:57">{<block_content pos:start="289:65" pos:end="292:65">
								<if_stmt pos:start="289:65" pos:end="292:65"><if pos:start="289:65" pos:end="292:65">if <condition pos:start="289:68" pos:end="289:96">(<expr pos:start="289:69" pos:end="289:95"><call pos:start="289:69" pos:end="289:82"><name pos:start="289:69" pos:end="289:80"><name pos:start="289:69" pos:end="289:74">marker</name><operator pos:start="289:75" pos:end="289:75">.</operator><name pos:start="289:76" pos:end="289:80">getId</name></name><argument_list pos:start="289:81" pos:end="289:82">()</argument_list></call><operator pos:start="289:83" pos:end="289:83">.</operator><call pos:start="289:84" pos:end="289:95"><name pos:start="289:84" pos:end="289:89">equals</name><argument_list pos:start="289:90" pos:end="289:95">(<argument pos:start="289:91" pos:end="289:94"><expr pos:start="289:91" pos:end="289:94"><name pos:start="289:91" pos:end="289:94">name</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="289:98" pos:end="292:65">{<block_content pos:start="290:73" pos:end="291:86">
									<expr_stmt pos:start="290:73" pos:end="290:106"><expr pos:start="290:73" pos:end="290:105"><call pos:start="290:73" pos:end="290:105"><name pos:start="290:73" pos:end="290:86"><name pos:start="290:73" pos:end="290:78">marker</name><operator pos:start="290:79" pos:end="290:79">.</operator><name pos:start="290:80" pos:end="290:86">setIcon</name></name><argument_list pos:start="290:87" pos:end="290:105">(<argument pos:start="290:88" pos:end="290:104"><expr pos:start="290:88" pos:end="290:104"><name pos:start="290:88" pos:end="290:104">droneIconSelected</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
									<expr_stmt pos:start="291:73" pos:end="291:86"><expr pos:start="291:73" pos:end="291:85"><name pos:start="291:73" pos:end="291:78">chosen</name> <operator pos:start="291:80" pos:end="291:80">=</operator> <literal type="boolean" pos:start="291:82" pos:end="291:85">true</literal></expr>;</expr_stmt>
								</block_content>}</block></if></if_stmt>
							</block_content>}</block></for>
							<if_stmt pos:start="294:57" pos:end="295:90"><if pos:start="294:57" pos:end="295:90">if <condition pos:start="294:60" pos:end="294:68">(<expr pos:start="294:61" pos:end="294:67"><operator pos:start="294:61" pos:end="294:61">!</operator><name pos:start="294:62" pos:end="294:67">chosen</name></expr>)</condition><block type="pseudo" pos:start="295:65" pos:end="295:90"><block_content pos:start="295:65" pos:end="295:90">
								<expr_stmt pos:start="295:65" pos:end="295:90"><expr pos:start="295:65" pos:end="295:89"><call pos:start="295:65" pos:end="295:89"><name pos:start="295:65" pos:end="295:78"><name pos:start="295:65" pos:end="295:70">marker</name><operator pos:start="295:71" pos:end="295:71">.</operator><name pos:start="295:72" pos:end="295:78">setIcon</name></name><argument_list pos:start="295:79" pos:end="295:89">(<argument pos:start="295:80" pos:end="295:88"><expr pos:start="295:80" pos:end="295:88"><name pos:start="295:80" pos:end="295:88">droneIcon</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
						</block_content>}</block></else></if_stmt>
						<expr_stmt pos:start="297:49" pos:end="297:86"><expr pos:start="297:49" pos:end="297:85"><call pos:start="297:49" pos:end="297:85"><name pos:start="297:49" pos:end="297:66"><name pos:start="297:49" pos:end="297:54">marker</name><operator pos:start="297:55" pos:end="297:55">.</operator><name pos:start="297:56" pos:end="297:66">setIconSize</name></name><argument_list pos:start="297:67" pos:end="297:85">(<argument pos:start="297:68" pos:end="297:84"><expr pos:start="297:68" pos:end="297:84"><operator pos:start="297:68" pos:end="297:70">new</operator> <call pos:start="297:72" pos:end="297:84"><name pos:start="297:72" pos:end="297:76">Point</name><argument_list pos:start="297:77" pos:end="297:84">(<argument pos:start="297:78" pos:end="297:79"><expr pos:start="297:78" pos:end="297:79"><literal type="number" pos:start="297:78" pos:end="297:79">33</literal></expr></argument>, <argument pos:start="297:82" pos:end="297:83"><expr pos:start="297:82" pos:end="297:83"><literal type="number" pos:start="297:82" pos:end="297:83">33</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
						<expr_stmt pos:start="298:49" pos:end="298:109"><expr pos:start="298:49" pos:end="298:108"><call pos:start="298:49" pos:end="298:108"><name pos:start="298:49" pos:end="298:75"><name pos:start="298:49" pos:end="298:54">marker</name><operator pos:start="298:55" pos:end="298:55">.</operator><name pos:start="298:56" pos:end="298:75">addMouseOverListener</name></name><argument_list pos:start="298:76" pos:end="298:108">(<argument pos:start="298:77" pos:end="298:107"><expr pos:start="298:77" pos:end="298:107"><call pos:start="298:77" pos:end="298:107"><name pos:start="298:77" pos:end="298:105"><name pos:start="298:77" pos:end="298:88">mapComponent</name><operator pos:start="298:89" pos:end="298:89">.</operator><name pos:start="298:90" pos:end="298:105">getDroneListener</name></name><argument_list pos:start="298:106" pos:end="298:107">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
						<expr_stmt pos:start="299:49" pos:end="299:96"><expr pos:start="299:49" pos:end="299:95"><call pos:start="299:49" pos:end="299:95"><name pos:start="299:49" pos:end="299:68"><name pos:start="299:49" pos:end="299:54">marker</name><operator pos:start="299:55" pos:end="299:55">.</operator><name pos:start="299:56" pos:end="299:68">setIconAnchor</name></name><argument_list pos:start="299:69" pos:end="299:95">(<argument pos:start="299:70" pos:end="299:94"><expr pos:start="299:70" pos:end="299:94"><operator pos:start="299:70" pos:end="299:72">new</operator> <call pos:start="299:74" pos:end="299:94"><name pos:start="299:74" pos:end="299:78">Point</name><argument_list pos:start="299:79" pos:end="299:94">(<argument pos:start="299:80" pos:end="299:85"><expr pos:start="299:80" pos:end="299:85"><name pos:start="299:80" pos:end="299:85">ACHN_X</name></expr></argument>, <argument pos:start="299:88" pos:end="299:93"><expr pos:start="299:88" pos:end="299:93"><name pos:start="299:88" pos:end="299:93">ANCH_Y</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
						<expr_stmt pos:start="300:49" pos:end="300:68"><expr pos:start="300:49" pos:end="300:67"><call pos:start="300:49" pos:end="300:67"><name pos:start="300:49" pos:end="300:59"><name pos:start="300:49" pos:end="300:55">markers</name><operator pos:start="300:56" pos:end="300:56">.</operator><name pos:start="300:57" pos:end="300:59">add</name></name><argument_list pos:start="300:60" pos:end="300:67">(<argument pos:start="300:61" pos:end="300:66"><expr pos:start="300:61" pos:end="300:66"><name pos:start="300:61" pos:end="300:66">marker</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
						<expr_stmt pos:start="301:49" pos:end="301:80"><expr pos:start="301:49" pos:end="301:79"><call pos:start="301:49" pos:end="301:79"><name pos:start="301:49" pos:end="301:71"><name pos:start="301:49" pos:end="301:58">leafletMap</name><operator pos:start="301:59" pos:end="301:59">.</operator><name pos:start="301:60" pos:end="301:71">addComponent</name></name><argument_list pos:start="301:72" pos:end="301:79">(<argument pos:start="301:73" pos:end="301:78"><expr pos:start="301:73" pos:end="301:78"><name pos:start="301:73" pos:end="301:78">marker</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
						<if_stmt pos:start="302:49" pos:end="303:88"><if pos:start="302:49" pos:end="303:88">if <condition pos:start="302:52" pos:end="302:78">(<expr pos:start="302:53" pos:end="302:77"><operator pos:start="302:53" pos:end="302:53">!</operator><call pos:start="302:54" pos:end="302:77"><name pos:start="302:54" pos:end="302:75"><name pos:start="302:54" pos:end="302:65">mapComponent</name><operator pos:start="302:66" pos:end="302:66">.</operator><name pos:start="302:67" pos:end="302:75">getFollow</name></name><argument_list pos:start="302:76" pos:end="302:77">()</argument_list></call></expr>)</condition><block type="pseudo" pos:start="303:57" pos:end="303:88"><block_content pos:start="303:57" pos:end="303:88">
							<expr_stmt pos:start="303:57" pos:end="303:88"><expr pos:start="303:57" pos:end="303:87"><call pos:start="303:57" pos:end="303:87"><name pos:start="303:57" pos:end="303:85"><name pos:start="303:57" pos:end="303:68">mapComponent</name><operator pos:start="303:69" pos:end="303:69">.</operator><name pos:start="303:70" pos:end="303:85">setAverageCenter</name></name><argument_list pos:start="303:86" pos:end="303:87">()</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

					</block_content>}</block></if></if_stmt>
				</block_content>}</block></for>
			</block_content>}</block></if> <if type="elseif" pos:start="307:27" pos:end="317:25">else if <condition pos:start="307:35" pos:end="307:66">(<expr pos:start="307:36" pos:end="307:65"><call pos:start="307:36" pos:end="307:49"><name pos:start="307:36" pos:end="307:47"><name pos:start="307:36" pos:end="307:42">markers</name><operator pos:start="307:43" pos:end="307:43">.</operator><name pos:start="307:44" pos:end="307:47">size</name></name><argument_list pos:start="307:48" pos:end="307:49">()</argument_list></call> <operator pos:start="307:51" pos:end="307:51">&gt;</operator> <call pos:start="307:53" pos:end="307:65"><name pos:start="307:53" pos:end="307:63"><name pos:start="307:53" pos:end="307:58">drones</name><operator pos:start="307:59" pos:end="307:59">.</operator><name pos:start="307:60" pos:end="307:63">size</name></name><argument_list pos:start="307:64" pos:end="307:65">()</argument_list></call></expr>)</condition> <block pos:start="307:68" pos:end="317:25">{<block_content pos:start="308:33" pos:end="316:33">
				<for pos:start="308:33" pos:end="316:33">for <control pos:start="308:37" pos:end="308:62">(<init pos:start="308:38" pos:end="308:61"><decl pos:start="308:38" pos:end="308:61"><type pos:start="308:38" pos:end="308:44"><name pos:start="308:38" pos:end="308:44">LMarker</name></type> <name pos:start="308:46" pos:end="308:51">marker</name> <range pos:start="308:53" pos:end="308:61">: <expr pos:start="308:55" pos:end="308:61"><name pos:start="308:55" pos:end="308:61">markers</name></expr></range></decl></init>)</control> <block pos:start="308:64" pos:end="316:33">{<block_content pos:start="309:41" pos:end="315:67">
					<decl_stmt pos:start="309:41" pos:end="309:63"><decl pos:start="309:41" pos:end="309:62"><type pos:start="309:41" pos:end="309:47"><name pos:start="309:41" pos:end="309:47">boolean</name></type> <name pos:start="309:49" pos:end="309:54">exists</name> <init pos:start="309:56" pos:end="309:62">= <expr pos:start="309:58" pos:end="309:62"><literal type="boolean" pos:start="309:58" pos:end="309:62">false</literal></expr></init></decl>;</decl_stmt>
					<for pos:start="310:41" pos:end="313:41">for <control pos:start="310:45" pos:end="310:66">(<init pos:start="310:46" pos:end="310:65"><decl pos:start="310:46" pos:end="310:65"><type pos:start="310:46" pos:end="310:54"><name pos:start="310:46" pos:end="310:54">IUAVProxy</name></type> <name pos:start="310:56" pos:end="310:56">e</name> <range pos:start="310:58" pos:end="310:65">: <expr pos:start="310:60" pos:end="310:65"><name pos:start="310:60" pos:end="310:65">drones</name></expr></range></decl></init>)</control> <block pos:start="310:68" pos:end="313:41">{<block_content pos:start="311:49" pos:end="312:70">
						<if_stmt pos:start="311:49" pos:end="312:70"><if pos:start="311:49" pos:end="312:70">if <condition pos:start="311:52" pos:end="311:85">(<expr pos:start="311:53" pos:end="311:84"><call pos:start="311:53" pos:end="311:61"><name pos:start="311:53" pos:end="311:59"><name pos:start="311:53" pos:end="311:53">e</name><operator pos:start="311:54" pos:end="311:54">.</operator><name pos:start="311:55" pos:end="311:59">getID</name></name><argument_list pos:start="311:60" pos:end="311:61">()</argument_list></call><operator pos:start="311:62" pos:end="311:62">.</operator><call pos:start="311:63" pos:end="311:84"><name pos:start="311:63" pos:end="311:68">equals</name><argument_list pos:start="311:69" pos:end="311:84">(<argument pos:start="311:70" pos:end="311:83"><expr pos:start="311:70" pos:end="311:83"><call pos:start="311:70" pos:end="311:83"><name pos:start="311:70" pos:end="311:81"><name pos:start="311:70" pos:end="311:75">marker</name><operator pos:start="311:76" pos:end="311:76">.</operator><name pos:start="311:77" pos:end="311:81">getId</name></name><argument_list pos:start="311:82" pos:end="311:83">()</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="312:57" pos:end="312:70"><block_content pos:start="312:57" pos:end="312:70">
							<expr_stmt pos:start="312:57" pos:end="312:70"><expr pos:start="312:57" pos:end="312:69"><name pos:start="312:57" pos:end="312:62">exists</name> <operator pos:start="312:64" pos:end="312:64">=</operator> <literal type="boolean" pos:start="312:66" pos:end="312:69">true</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>
					</block_content>}</block></for>
					<if_stmt pos:start="314:41" pos:end="315:67"><if pos:start="314:41" pos:end="315:67">if <condition pos:start="314:44" pos:end="314:52">(<expr pos:start="314:45" pos:end="314:51"><operator pos:start="314:45" pos:end="314:45">!</operator><name pos:start="314:46" pos:end="314:51">exists</name></expr>)</condition><block type="pseudo" pos:start="315:49" pos:end="315:67"><block_content pos:start="315:49" pos:end="315:67"> <comment type="line" pos:start="314:54" pos:end="314:105">// remove marker that represents a deactivated drone</comment>
						<expr_stmt pos:start="315:49" pos:end="315:67"><expr pos:start="315:49" pos:end="315:66"><call pos:start="315:49" pos:end="315:66"><name pos:start="315:49" pos:end="315:58"><name pos:start="315:49" pos:end="315:54">remove</name><operator pos:start="315:55" pos:end="315:55">.</operator><name pos:start="315:56" pos:end="315:58">add</name></name><argument_list pos:start="315:59" pos:end="315:66">(<argument pos:start="315:60" pos:end="315:65"><expr pos:start="315:60" pos:end="315:65"><name pos:start="315:60" pos:end="315:65">marker</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
				</block_content>}</block></for>
			</block_content>}</block></if></if_stmt>
			<if_stmt pos:start="318:25" pos:end="326:25"><if pos:start="318:25" pos:end="326:25">if <condition pos:start="318:28" pos:end="318:46">(<expr pos:start="318:29" pos:end="318:45"><call pos:start="318:29" pos:end="318:41"><name pos:start="318:29" pos:end="318:39"><name pos:start="318:29" pos:end="318:34">remove</name><operator pos:start="318:35" pos:end="318:35">.</operator><name pos:start="318:36" pos:end="318:39">size</name></name><argument_list pos:start="318:40" pos:end="318:41">()</argument_list></call> <operator pos:start="318:43" pos:end="318:43">&gt;</operator> <literal type="number" pos:start="318:45" pos:end="318:45">0</literal></expr>)</condition> <block pos:start="318:48" pos:end="326:25">{<block_content pos:start="319:33" pos:end="325:47">
				<for pos:start="319:33" pos:end="324:33">for <control pos:start="319:37" pos:end="319:56">(<init pos:start="319:38" pos:end="319:55"><decl pos:start="319:38" pos:end="319:55"><type pos:start="319:38" pos:end="319:44"><name pos:start="319:38" pos:end="319:44">LMarker</name></type> <name pos:start="319:46" pos:end="319:46">e</name> <range pos:start="319:48" pos:end="319:55">: <expr pos:start="319:50" pos:end="319:55"><name pos:start="319:50" pos:end="319:55">remove</name></expr></range></decl></init>)</control> <block pos:start="319:58" pos:end="324:33">{<block_content pos:start="320:41" pos:end="323:80">
					<expr_stmt pos:start="320:41" pos:end="320:58"><expr pos:start="320:41" pos:end="320:57"><call pos:start="320:41" pos:end="320:57"><name pos:start="320:41" pos:end="320:54"><name pos:start="320:41" pos:end="320:47">markers</name><operator pos:start="320:48" pos:end="320:48">.</operator><name pos:start="320:49" pos:end="320:54">remove</name></name><argument_list pos:start="320:55" pos:end="320:57">(<argument pos:start="320:56" pos:end="320:56"><expr pos:start="320:56" pos:end="320:56"><name pos:start="320:56" pos:end="320:56">e</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<expr_stmt pos:start="321:41" pos:end="321:70"><expr pos:start="321:41" pos:end="321:69"><call pos:start="321:41" pos:end="321:69"><name pos:start="321:41" pos:end="321:66"><name pos:start="321:41" pos:end="321:50">leafletMap</name><operator pos:start="321:51" pos:end="321:51">.</operator><name pos:start="321:52" pos:end="321:66">removeComponent</name></name><argument_list pos:start="321:67" pos:end="321:69">(<argument pos:start="321:68" pos:end="321:68"><expr pos:start="321:68" pos:end="321:68"><name pos:start="321:68" pos:end="321:68">e</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<if_stmt pos:start="322:41" pos:end="323:80"><if pos:start="322:41" pos:end="323:80">if <condition pos:start="322:44" pos:end="322:70">(<expr pos:start="322:45" pos:end="322:69"><operator pos:start="322:45" pos:end="322:45">!</operator><call pos:start="322:46" pos:end="322:69"><name pos:start="322:46" pos:end="322:67"><name pos:start="322:46" pos:end="322:57">mapComponent</name><operator pos:start="322:58" pos:end="322:58">.</operator><name pos:start="322:59" pos:end="322:67">getFollow</name></name><argument_list pos:start="322:68" pos:end="322:69">()</argument_list></call></expr>)</condition><block type="pseudo" pos:start="323:49" pos:end="323:80"><block_content pos:start="323:49" pos:end="323:80">
						<expr_stmt pos:start="323:49" pos:end="323:80"><expr pos:start="323:49" pos:end="323:79"><call pos:start="323:49" pos:end="323:79"><name pos:start="323:49" pos:end="323:77"><name pos:start="323:49" pos:end="323:60">mapComponent</name><operator pos:start="323:61" pos:end="323:61">.</operator><name pos:start="323:62" pos:end="323:77">setAverageCenter</name></name><argument_list pos:start="323:78" pos:end="323:79">()</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
				</block_content>}</block></for>
				<expr_stmt pos:start="325:33" pos:end="325:47"><expr pos:start="325:33" pos:end="325:46"><call pos:start="325:33" pos:end="325:46"><name pos:start="325:33" pos:end="325:44"><name pos:start="325:33" pos:end="325:38">remove</name><operator pos:start="325:39" pos:end="325:39">.</operator><name pos:start="325:40" pos:end="325:44">clear</name></name><argument_list pos:start="325:45" pos:end="325:46">()</argument_list></call></expr>;</expr_stmt>
			</block_content>}</block></if></if_stmt>
		</block_content>}</block> <catch pos:start="327:19" pos:end="329:17">catch <parameter_list pos:start="327:25" pos:end="327:43">(<parameter pos:start="327:26" pos:end="327:42"><decl pos:start="327:26" pos:end="327:42"><type pos:start="327:26" pos:end="327:42"><name pos:start="327:26" pos:end="327:40">RemoteException</name></type> <name pos:start="327:42" pos:end="327:42">e</name></decl></parameter>)</parameter_list> <block pos:start="327:45" pos:end="329:17">{<block_content pos:start="328:25" pos:end="328:41"> <comment type="line" pos:start="327:47" pos:end="327:71">// reconnect to dronology</comment>
			<expr_stmt pos:start="328:25" pos:end="328:41"><expr pos:start="328:25" pos:end="328:40"><call pos:start="328:25" pos:end="328:40"><name pos:start="328:25" pos:end="328:38">initConnection</name><argument_list pos:start="328:39" pos:end="328:40">()</argument_list></call></expr>;</expr_stmt>
		</block_content>}</block></catch></try>
	</block_content>}</block></function>

	<comment type="block" format="javadoc" pos:start="332:9" pos:end="339:11">/**
	 * This function adds icons on the map that represent each drone's position.
	 * 
	 * @param focused
	 *          this is the drone that is focused in the AFInfoPanel. It's flight route will be orange
	 * @param checked
	 *          this is a list of drones that have their checkbox checked in the AFInfoPanel. Their routes will be black.
	 */</comment>
	<function pos:start="340:9" pos:end="373:9"><type pos:start="340:9" pos:end="340:19"><specifier pos:start="340:9" pos:end="340:14">public</specifier> <name pos:start="340:16" pos:end="340:19">void</name></type> <name pos:start="340:21" pos:end="340:35">addDroneMarkers</name><parameter_list pos:start="340:36" pos:end="340:73">(<parameter pos:start="340:37" pos:end="340:50"><decl pos:start="340:37" pos:end="340:50"><type pos:start="340:37" pos:end="340:50"><name pos:start="340:37" pos:end="340:42">String</name></type> <name pos:start="340:44" pos:end="340:50">focused</name></decl></parameter>, <parameter pos:start="340:53" pos:end="340:72"><decl pos:start="340:53" pos:end="340:72"><type pos:start="340:53" pos:end="340:72"><name pos:start="340:53" pos:end="340:64"><name pos:start="340:53" pos:end="340:56">List</name><argument_list type="generic" pos:start="340:57" pos:end="340:64">&lt;<argument pos:start="340:58" pos:end="340:63"><name pos:start="340:58" pos:end="340:63">String</name></argument>&gt;</argument_list></name></type> <name pos:start="340:66" pos:end="340:72">checked</name></decl></parameter>)</parameter_list> <block pos:start="340:75" pos:end="373:9">{<block_content pos:start="341:17" pos:end="372:17">
		<decl_stmt pos:start="341:17" pos:end="341:71"><decl pos:start="341:17" pos:end="341:70"><type pos:start="341:17" pos:end="341:37"><name pos:start="341:17" pos:end="341:37"><name pos:start="341:17" pos:end="341:26">Collection</name><argument_list type="generic" pos:start="341:27" pos:end="341:37">&lt;<argument pos:start="341:28" pos:end="341:36"><name pos:start="341:28" pos:end="341:36">IUAVProxy</name></argument>&gt;</argument_list></name></type> <name pos:start="341:39" pos:end="341:44">drones</name> <init pos:start="341:46" pos:end="341:70">= <expr pos:start="341:48" pos:end="341:70"><call pos:start="341:48" pos:end="341:70"><name pos:start="341:48" pos:end="341:68"><name pos:start="341:48" pos:end="341:58">Collections</name><operator pos:start="341:59" pos:end="341:59">.</operator><name pos:start="341:60" pos:end="341:68">emptyList</name></name><argument_list pos:start="341:69" pos:end="341:70">()</argument_list></call></expr></init></decl>;</decl_stmt>
		<try pos:start="342:17" pos:end="346:17">try <block pos:start="342:21" pos:end="344:17">{<block_content pos:start="343:25" pos:end="343:67">
			<expr_stmt pos:start="343:25" pos:end="343:67"><expr pos:start="343:25" pos:end="343:66"><name pos:start="343:25" pos:end="343:30">drones</name> <operator pos:start="343:32" pos:end="343:32">=</operator> <call pos:start="343:34" pos:end="343:66"><name pos:start="343:34" pos:end="343:64"><name pos:start="343:34" pos:end="343:50">droneSetupService</name><operator pos:start="343:51" pos:end="343:51">.</operator><name pos:start="343:52" pos:end="343:64">getActiveUAVs</name></name><argument_list pos:start="343:65" pos:end="343:66">()</argument_list></call></expr>;</expr_stmt>
		</block_content>}</block> <catch pos:start="344:19" pos:end="346:17">catch <parameter_list pos:start="344:25" pos:end="344:44">(<parameter pos:start="344:26" pos:end="344:43"><decl pos:start="344:26" pos:end="344:43"><type pos:start="344:26" pos:end="344:43"><name pos:start="344:26" pos:end="344:40">RemoteException</name></type> <name pos:start="344:42" pos:end="344:43">e1</name></decl></parameter>)</parameter_list> <block pos:start="344:46" pos:end="346:17">{<block_content pos:start="345:25" pos:end="345:41">
			<expr_stmt pos:start="345:25" pos:end="345:41"><expr pos:start="345:25" pos:end="345:40"><call pos:start="345:25" pos:end="345:40"><name pos:start="345:25" pos:end="345:38">initConnection</name><argument_list pos:start="345:39" pos:end="345:40">()</argument_list></call></expr>;</expr_stmt>
		</block_content>}</block></catch></try>
		<for pos:start="347:17" pos:end="372:17">for <control pos:start="347:21" pos:end="349:37">(

		<init pos:start="349:17" pos:end="349:36"><decl pos:start="349:17" pos:end="349:36"><type pos:start="349:17" pos:end="349:25"><name pos:start="349:17" pos:end="349:25">IUAVProxy</name></type> <name pos:start="349:27" pos:end="349:27">e</name> <range pos:start="349:29" pos:end="349:36">: <expr pos:start="349:31" pos:end="349:36"><name pos:start="349:31" pos:end="349:36">drones</name></expr></range></decl></init>)</control> <block pos:start="349:39" pos:end="372:17">{<block_content pos:start="350:25" pos:end="371:64">
			<decl_stmt pos:start="350:25" pos:end="350:88"><decl pos:start="350:25" pos:end="350:87"><type pos:start="350:25" pos:end="350:31"><name pos:start="350:25" pos:end="350:31">LMarker</name></type> <name pos:start="350:33" pos:end="350:38">marker</name> <init pos:start="350:40" pos:end="350:87">= <expr pos:start="350:42" pos:end="350:87"><operator pos:start="350:42" pos:end="350:44">new</operator> <call pos:start="350:46" pos:end="350:87"><name pos:start="350:46" pos:end="350:52">LMarker</name><argument_list pos:start="350:53" pos:end="350:87">(<argument pos:start="350:54" pos:end="350:68"><expr pos:start="350:54" pos:end="350:68"><call pos:start="350:54" pos:end="350:68"><name pos:start="350:54" pos:end="350:66"><name pos:start="350:54" pos:end="350:54">e</name><operator pos:start="350:55" pos:end="350:55">.</operator><name pos:start="350:56" pos:end="350:66">getLatitude</name></name><argument_list pos:start="350:67" pos:end="350:68">()</argument_list></call></expr></argument>, <argument pos:start="350:71" pos:end="350:86"><expr pos:start="350:71" pos:end="350:86"><call pos:start="350:71" pos:end="350:86"><name pos:start="350:71" pos:end="350:84"><name pos:start="350:71" pos:end="350:71">e</name><operator pos:start="350:72" pos:end="350:72">.</operator><name pos:start="350:73" pos:end="350:84">getLongitude</name></name><argument_list pos:start="350:85" pos:end="350:86">()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<expr_stmt pos:start="351:25" pos:end="351:48"><expr pos:start="351:25" pos:end="351:47"><call pos:start="351:25" pos:end="351:47"><name pos:start="351:25" pos:end="351:36"><name pos:start="351:25" pos:end="351:30">marker</name><operator pos:start="351:31" pos:end="351:31">.</operator><name pos:start="351:32" pos:end="351:36">setId</name></name><argument_list pos:start="351:37" pos:end="351:47">(<argument pos:start="351:38" pos:end="351:46"><expr pos:start="351:38" pos:end="351:46"><call pos:start="351:38" pos:end="351:46"><name pos:start="351:38" pos:end="351:44"><name pos:start="351:38" pos:end="351:38">e</name><operator pos:start="351:39" pos:end="351:39">.</operator><name pos:start="351:40" pos:end="351:44">getID</name></name><argument_list pos:start="351:45" pos:end="351:46">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<if_stmt pos:start="352:25" pos:end="364:25"><if pos:start="352:25" pos:end="353:65">if <condition pos:start="352:28" pos:end="352:59">(<expr pos:start="352:29" pos:end="352:58"><call pos:start="352:29" pos:end="352:42"><name pos:start="352:29" pos:end="352:40"><name pos:start="352:29" pos:end="352:34">marker</name><operator pos:start="352:35" pos:end="352:35">.</operator><name pos:start="352:36" pos:end="352:40">getId</name></name><argument_list pos:start="352:41" pos:end="352:42">()</argument_list></call><operator pos:start="352:43" pos:end="352:43">.</operator><call pos:start="352:44" pos:end="352:58"><name pos:start="352:44" pos:end="352:49">equals</name><argument_list pos:start="352:50" pos:end="352:58">(<argument pos:start="352:51" pos:end="352:57"><expr pos:start="352:51" pos:end="352:57"><name pos:start="352:51" pos:end="352:57">focused</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="353:33" pos:end="353:65"><block_content pos:start="353:33" pos:end="353:65">
				<expr_stmt pos:start="353:33" pos:end="353:65"><expr pos:start="353:33" pos:end="353:64"><call pos:start="353:33" pos:end="353:64"><name pos:start="353:33" pos:end="353:46"><name pos:start="353:33" pos:end="353:38">marker</name><operator pos:start="353:39" pos:end="353:39">.</operator><name pos:start="353:40" pos:end="353:46">setIcon</name></name><argument_list pos:start="353:47" pos:end="353:64">(<argument pos:start="353:48" pos:end="353:63"><expr pos:start="353:48" pos:end="353:63"><name pos:start="353:48" pos:end="353:63">droneIconFocused</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>
			<else pos:start="354:25" pos:end="364:25">else <block pos:start="354:30" pos:end="364:25">{<block_content pos:start="355:33" pos:end="363:66">
				<decl_stmt pos:start="355:33" pos:end="355:55"><decl pos:start="355:33" pos:end="355:54"><type pos:start="355:33" pos:end="355:39"><name pos:start="355:33" pos:end="355:39">boolean</name></type> <name pos:start="355:41" pos:end="355:46">chosen</name> <init pos:start="355:48" pos:end="355:54">= <expr pos:start="355:50" pos:end="355:54"><literal type="boolean" pos:start="355:50" pos:end="355:54">false</literal></expr></init></decl>;</decl_stmt>
				<for pos:start="356:33" pos:end="361:33">for <control pos:start="356:37" pos:end="356:59">(<init pos:start="356:38" pos:end="356:58"><decl pos:start="356:38" pos:end="356:58"><type pos:start="356:38" pos:end="356:43"><name pos:start="356:38" pos:end="356:43">String</name></type> <name pos:start="356:45" pos:end="356:48">name</name> <range pos:start="356:50" pos:end="356:58">: <expr pos:start="356:52" pos:end="356:58"><name pos:start="356:52" pos:end="356:58">checked</name></expr></range></decl></init>)</control> <block pos:start="356:61" pos:end="361:33">{<block_content pos:start="357:41" pos:end="360:41">
					<if_stmt pos:start="357:41" pos:end="360:41"><if pos:start="357:41" pos:end="360:41">if <condition pos:start="357:44" pos:end="357:72">(<expr pos:start="357:45" pos:end="357:71"><call pos:start="357:45" pos:end="357:58"><name pos:start="357:45" pos:end="357:56"><name pos:start="357:45" pos:end="357:50">marker</name><operator pos:start="357:51" pos:end="357:51">.</operator><name pos:start="357:52" pos:end="357:56">getId</name></name><argument_list pos:start="357:57" pos:end="357:58">()</argument_list></call><operator pos:start="357:59" pos:end="357:59">.</operator><call pos:start="357:60" pos:end="357:71"><name pos:start="357:60" pos:end="357:65">equals</name><argument_list pos:start="357:66" pos:end="357:71">(<argument pos:start="357:67" pos:end="357:70"><expr pos:start="357:67" pos:end="357:70"><name pos:start="357:67" pos:end="357:70">name</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="357:74" pos:end="360:41">{<block_content pos:start="358:49" pos:end="359:62">
						<expr_stmt pos:start="358:49" pos:end="358:82"><expr pos:start="358:49" pos:end="358:81"><call pos:start="358:49" pos:end="358:81"><name pos:start="358:49" pos:end="358:62"><name pos:start="358:49" pos:end="358:54">marker</name><operator pos:start="358:55" pos:end="358:55">.</operator><name pos:start="358:56" pos:end="358:62">setIcon</name></name><argument_list pos:start="358:63" pos:end="358:81">(<argument pos:start="358:64" pos:end="358:80"><expr pos:start="358:64" pos:end="358:80"><name pos:start="358:64" pos:end="358:80">droneIconSelected</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
						<expr_stmt pos:start="359:49" pos:end="359:62"><expr pos:start="359:49" pos:end="359:61"><name pos:start="359:49" pos:end="359:54">chosen</name> <operator pos:start="359:56" pos:end="359:56">=</operator> <literal type="boolean" pos:start="359:58" pos:end="359:61">true</literal></expr>;</expr_stmt>
					</block_content>}</block></if></if_stmt>
				</block_content>}</block></for>
				<if_stmt pos:start="362:33" pos:end="363:66"><if pos:start="362:33" pos:end="363:66">if <condition pos:start="362:36" pos:end="362:44">(<expr pos:start="362:37" pos:end="362:43"><operator pos:start="362:37" pos:end="362:37">!</operator><name pos:start="362:38" pos:end="362:43">chosen</name></expr>)</condition><block type="pseudo" pos:start="363:41" pos:end="363:66"><block_content pos:start="363:41" pos:end="363:66">
					<expr_stmt pos:start="363:41" pos:end="363:66"><expr pos:start="363:41" pos:end="363:65"><call pos:start="363:41" pos:end="363:65"><name pos:start="363:41" pos:end="363:54"><name pos:start="363:41" pos:end="363:46">marker</name><operator pos:start="363:47" pos:end="363:47">.</operator><name pos:start="363:48" pos:end="363:54">setIcon</name></name><argument_list pos:start="363:55" pos:end="363:65">(<argument pos:start="363:56" pos:end="363:64"><expr pos:start="363:56" pos:end="363:64"><name pos:start="363:56" pos:end="363:64">droneIcon</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
			</block_content>}</block></else></if_stmt>
			<expr_stmt pos:start="365:25" pos:end="365:62"><expr pos:start="365:25" pos:end="365:61"><call pos:start="365:25" pos:end="365:61"><name pos:start="365:25" pos:end="365:42"><name pos:start="365:25" pos:end="365:30">marker</name><operator pos:start="365:31" pos:end="365:31">.</operator><name pos:start="365:32" pos:end="365:42">setIconSize</name></name><argument_list pos:start="365:43" pos:end="365:61">(<argument pos:start="365:44" pos:end="365:60"><expr pos:start="365:44" pos:end="365:60"><operator pos:start="365:44" pos:end="365:46">new</operator> <call pos:start="365:48" pos:end="365:60"><name pos:start="365:48" pos:end="365:52">Point</name><argument_list pos:start="365:53" pos:end="365:60">(<argument pos:start="365:54" pos:end="365:55"><expr pos:start="365:54" pos:end="365:55"><literal type="number" pos:start="365:54" pos:end="365:55">30</literal></expr></argument>, <argument pos:start="365:58" pos:end="365:59"><expr pos:start="365:58" pos:end="365:59"><literal type="number" pos:start="365:58" pos:end="365:59">30</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt pos:start="366:25" pos:end="366:72"><expr pos:start="366:25" pos:end="366:71"><call pos:start="366:25" pos:end="366:71"><name pos:start="366:25" pos:end="366:44"><name pos:start="366:25" pos:end="366:30">marker</name><operator pos:start="366:31" pos:end="366:31">.</operator><name pos:start="366:32" pos:end="366:44">setIconAnchor</name></name><argument_list pos:start="366:45" pos:end="366:71">(<argument pos:start="366:46" pos:end="366:70"><expr pos:start="366:46" pos:end="366:70"><operator pos:start="366:46" pos:end="366:48">new</operator> <call pos:start="366:50" pos:end="366:70"><name pos:start="366:50" pos:end="366:54">Point</name><argument_list pos:start="366:55" pos:end="366:70">(<argument pos:start="366:56" pos:end="366:61"><expr pos:start="366:56" pos:end="366:61"><name pos:start="366:56" pos:end="366:61">ACHN_X</name></expr></argument>, <argument pos:start="366:64" pos:end="366:69"><expr pos:start="366:64" pos:end="366:69"><name pos:start="366:64" pos:end="366:69">ANCH_Y</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt pos:start="367:25" pos:end="367:85"><expr pos:start="367:25" pos:end="367:84"><call pos:start="367:25" pos:end="367:84"><name pos:start="367:25" pos:end="367:51"><name pos:start="367:25" pos:end="367:30">marker</name><operator pos:start="367:31" pos:end="367:31">.</operator><name pos:start="367:32" pos:end="367:51">addMouseOverListener</name></name><argument_list pos:start="367:52" pos:end="367:84">(<argument pos:start="367:53" pos:end="367:83"><expr pos:start="367:53" pos:end="367:83"><call pos:start="367:53" pos:end="367:83"><name pos:start="367:53" pos:end="367:81"><name pos:start="367:53" pos:end="367:64">mapComponent</name><operator pos:start="367:65" pos:end="367:65">.</operator><name pos:start="367:66" pos:end="367:81">getDroneListener</name></name><argument_list pos:start="367:82" pos:end="367:83">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt pos:start="368:25" pos:end="368:44"><expr pos:start="368:25" pos:end="368:43"><call pos:start="368:25" pos:end="368:43"><name pos:start="368:25" pos:end="368:35"><name pos:start="368:25" pos:end="368:31">markers</name><operator pos:start="368:32" pos:end="368:32">.</operator><name pos:start="368:33" pos:end="368:35">add</name></name><argument_list pos:start="368:36" pos:end="368:43">(<argument pos:start="368:37" pos:end="368:42"><expr pos:start="368:37" pos:end="368:42"><name pos:start="368:37" pos:end="368:42">marker</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt pos:start="369:25" pos:end="369:56"><expr pos:start="369:25" pos:end="369:55"><call pos:start="369:25" pos:end="369:55"><name pos:start="369:25" pos:end="369:47"><name pos:start="369:25" pos:end="369:34">leafletMap</name><operator pos:start="369:35" pos:end="369:35">.</operator><name pos:start="369:36" pos:end="369:47">addComponent</name></name><argument_list pos:start="369:48" pos:end="369:55">(<argument pos:start="369:49" pos:end="369:54"><expr pos:start="369:49" pos:end="369:54"><name pos:start="369:49" pos:end="369:54">marker</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<if_stmt pos:start="370:25" pos:end="371:64"><if pos:start="370:25" pos:end="371:64">if <condition pos:start="370:28" pos:end="370:54">(<expr pos:start="370:29" pos:end="370:53"><operator pos:start="370:29" pos:end="370:29">!</operator><call pos:start="370:30" pos:end="370:53"><name pos:start="370:30" pos:end="370:51"><name pos:start="370:30" pos:end="370:41">mapComponent</name><operator pos:start="370:42" pos:end="370:42">.</operator><name pos:start="370:43" pos:end="370:51">getFollow</name></name><argument_list pos:start="370:52" pos:end="370:53">()</argument_list></call></expr>)</condition><block type="pseudo" pos:start="371:33" pos:end="371:64"><block_content pos:start="371:33" pos:end="371:64">
				<expr_stmt pos:start="371:33" pos:end="371:64"><expr pos:start="371:33" pos:end="371:63"><call pos:start="371:33" pos:end="371:63"><name pos:start="371:33" pos:end="371:61"><name pos:start="371:33" pos:end="371:44">mapComponent</name><operator pos:start="371:45" pos:end="371:45">.</operator><name pos:start="371:46" pos:end="371:61">setAverageCenter</name></name><argument_list pos:start="371:62" pos:end="371:63">()</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
		</block_content>}</block></for>
	</block_content>}</block></function>

	<comment type="block" format="javadoc" pos:start="375:9" pos:end="381:11">/**
	 * assists in the logic of updating flight routes
	 * 
	 * @param coordinates
	 * @param i
	 * @return
	 */</comment>
	<function pos:start="382:9" pos:end="388:9"><type pos:start="382:9" pos:end="382:23"><specifier pos:start="382:9" pos:end="382:15">private</specifier> <name pos:start="382:17" pos:end="382:23">boolean</name></type> <name pos:start="382:25" pos:end="382:35">nextReached</name><parameter_list pos:start="382:36" pos:end="382:70">(<parameter pos:start="382:37" pos:end="382:62"><decl pos:start="382:37" pos:end="382:62"><type pos:start="382:37" pos:end="382:62"><name pos:start="382:37" pos:end="382:50"><name pos:start="382:37" pos:end="382:40">List</name><argument_list type="generic" pos:start="382:41" pos:end="382:50">&lt;<argument pos:start="382:42" pos:end="382:49"><name pos:start="382:42" pos:end="382:49">Waypoint</name></argument>&gt;</argument_list></name></type> <name pos:start="382:52" pos:end="382:62">coordinates</name></decl></parameter>, <parameter pos:start="382:65" pos:end="382:69"><decl pos:start="382:65" pos:end="382:69"><type pos:start="382:65" pos:end="382:69"><name pos:start="382:65" pos:end="382:67">int</name></type> <name pos:start="382:69" pos:end="382:69">i</name></decl></parameter>)</parameter_list> <block pos:start="382:72" pos:end="388:9">{<block_content pos:start="383:17" pos:end="387:40">
		<if_stmt pos:start="383:17" pos:end="385:17"><if pos:start="383:17" pos:end="385:17">if <condition pos:start="383:20" pos:end="383:44">(<expr pos:start="383:21" pos:end="383:43"><call pos:start="383:21" pos:end="383:38"><name pos:start="383:21" pos:end="383:36"><name pos:start="383:21" pos:end="383:31">coordinates</name><operator pos:start="383:32" pos:end="383:32">.</operator><name pos:start="383:33" pos:end="383:36">size</name></name><argument_list pos:start="383:37" pos:end="383:38">()</argument_list></call> <operator pos:start="383:40" pos:end="383:41">&lt;=</operator> <name pos:start="383:43" pos:end="383:43">i</name></expr>)</condition> <block pos:start="383:46" pos:end="385:17">{<block_content pos:start="384:25" pos:end="384:37">
			<return pos:start="384:25" pos:end="384:37">return <expr pos:start="384:32" pos:end="384:36"><literal type="boolean" pos:start="384:32" pos:end="384:36">false</literal></expr>;</return>
		</block_content>}</block></if></if_stmt>
		<decl_stmt pos:start="386:17" pos:end="386:51"><decl pos:start="386:17" pos:end="386:50"><type pos:start="386:17" pos:end="386:24"><name pos:start="386:17" pos:end="386:24">Waypoint</name></type> <name pos:start="386:26" pos:end="386:29">next</name> <init pos:start="386:31" pos:end="386:50">= <expr pos:start="386:33" pos:end="386:50"><call pos:start="386:33" pos:end="386:50"><name pos:start="386:33" pos:end="386:47"><name pos:start="386:33" pos:end="386:43">coordinates</name><operator pos:start="386:44" pos:end="386:44">.</operator><name pos:start="386:45" pos:end="386:47">get</name></name><argument_list pos:start="386:48" pos:end="386:50">(<argument pos:start="386:49" pos:end="386:49"><expr pos:start="386:49" pos:end="386:49"><name pos:start="386:49" pos:end="386:49">i</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<return pos:start="387:17" pos:end="387:40">return <expr pos:start="387:24" pos:end="387:39"><call pos:start="387:24" pos:end="387:39"><name pos:start="387:24" pos:end="387:37"><name pos:start="387:24" pos:end="387:27">next</name><operator pos:start="387:28" pos:end="387:28">.</operator><name pos:start="387:29" pos:end="387:37">isReached</name></name><argument_list pos:start="387:38" pos:end="387:39">()</argument_list></call></expr>;</return>
	</block_content>}</block></function>

}</block></class>
</unit>
