<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="Java" filename="flatCode/AFMapComponent.java" pos:tabs="8"><package pos:start="1:1" pos:end="1:49">package <name pos:start="1:9" pos:end="1:48"><name pos:start="1:9" pos:end="1:11">edu</name><operator pos:start="1:12" pos:end="1:12">.</operator><name pos:start="1:13" pos:end="1:14">nd</name><operator pos:start="1:15" pos:end="1:15">.</operator><name pos:start="1:16" pos:end="1:24">dronology</name><operator pos:start="1:25" pos:end="1:25">.</operator><name pos:start="1:26" pos:end="1:27">ui</name><operator pos:start="1:28" pos:end="1:28">.</operator><name pos:start="1:29" pos:end="1:34">vaadin</name><operator pos:start="1:35" pos:end="1:35">.</operator><name pos:start="1:36" pos:end="1:48">activeflights</name></name>;</package>

<import pos:start="3:1" pos:end="3:26">import <name pos:start="3:8" pos:end="3:25"><name pos:start="3:8" pos:end="3:11">java</name><operator pos:start="3:12" pos:end="3:12">.</operator><name pos:start="3:13" pos:end="3:15">awt</name><operator pos:start="3:16" pos:end="3:16">.</operator><name pos:start="3:17" pos:end="3:25">MouseInfo</name></name>;</import>
<import pos:start="4:1" pos:end="4:32">import <name pos:start="4:8" pos:end="4:31"><name pos:start="4:8" pos:end="4:11">java</name><operator pos:start="4:12" pos:end="4:12">.</operator><name pos:start="4:13" pos:end="4:15">rmi</name><operator pos:start="4:16" pos:end="4:16">.</operator><name pos:start="4:17" pos:end="4:31">RemoteException</name></name>;</import>
<import pos:start="5:1" pos:end="5:27">import <name pos:start="5:8" pos:end="5:26"><name pos:start="5:8" pos:end="5:11">java</name><operator pos:start="5:12" pos:end="5:12">.</operator><name pos:start="5:13" pos:end="5:16">util</name><operator pos:start="5:17" pos:end="5:17">.</operator><name pos:start="5:18" pos:end="5:26">ArrayList</name></name>;</import>
<import pos:start="6:1" pos:end="6:28">import <name pos:start="6:8" pos:end="6:27"><name pos:start="6:8" pos:end="6:11">java</name><operator pos:start="6:12" pos:end="6:12">.</operator><name pos:start="6:13" pos:end="6:16">util</name><operator pos:start="6:17" pos:end="6:17">.</operator><name pos:start="6:18" pos:end="6:27">Collection</name></name>;</import>
<import pos:start="7:1" pos:end="7:26">import <name pos:start="7:8" pos:end="7:25"><name pos:start="7:8" pos:end="7:11">java</name><operator pos:start="7:12" pos:end="7:12">.</operator><name pos:start="7:13" pos:end="7:16">util</name><operator pos:start="7:17" pos:end="7:17">.</operator><name pos:start="7:18" pos:end="7:25">Iterator</name></name>;</import>
<import pos:start="8:1" pos:end="8:22">import <name pos:start="8:8" pos:end="8:21"><name pos:start="8:8" pos:end="8:11">java</name><operator pos:start="8:12" pos:end="8:12">.</operator><name pos:start="8:13" pos:end="8:16">util</name><operator pos:start="8:17" pos:end="8:17">.</operator><name pos:start="8:18" pos:end="8:21">List</name></name>;</import>

<import pos:start="10:1" pos:end="10:37">import <name pos:start="10:8" pos:end="10:36"><name pos:start="10:8" pos:end="10:10">org</name><operator pos:start="10:11" pos:end="10:11">.</operator><name pos:start="10:12" pos:end="10:17">vaadin</name><operator pos:start="10:18" pos:end="10:18">.</operator><name pos:start="10:19" pos:end="10:23">addon</name><operator pos:start="10:24" pos:end="10:24">.</operator><name pos:start="10:25" pos:end="10:31">leaflet</name><operator pos:start="10:32" pos:end="10:32">.</operator><name pos:start="10:33" pos:end="10:36">LMap</name></name>;</import>
<import pos:start="11:1" pos:end="11:40">import <name pos:start="11:8" pos:end="11:39"><name pos:start="11:8" pos:end="11:10">org</name><operator pos:start="11:11" pos:end="11:11">.</operator><name pos:start="11:12" pos:end="11:17">vaadin</name><operator pos:start="11:18" pos:end="11:18">.</operator><name pos:start="11:19" pos:end="11:23">addon</name><operator pos:start="11:24" pos:end="11:24">.</operator><name pos:start="11:25" pos:end="11:31">leaflet</name><operator pos:start="11:32" pos:end="11:32">.</operator><name pos:start="11:33" pos:end="11:39">LMarker</name></name>;</import>
<import pos:start="12:1" pos:end="12:54">import <name pos:start="12:8" pos:end="12:53"><name pos:start="12:8" pos:end="12:10">org</name><operator pos:start="12:11" pos:end="12:11">.</operator><name pos:start="12:12" pos:end="12:17">vaadin</name><operator pos:start="12:18" pos:end="12:18">.</operator><name pos:start="12:19" pos:end="12:23">addon</name><operator pos:start="12:24" pos:end="12:24">.</operator><name pos:start="12:25" pos:end="12:31">leaflet</name><operator pos:start="12:32" pos:end="12:32">.</operator><name pos:start="12:33" pos:end="12:53">LeafletMouseOverEvent</name></name>;</import>
<import pos:start="13:1" pos:end="13:57">import <name pos:start="13:8" pos:end="13:56"><name pos:start="13:8" pos:end="13:10">org</name><operator pos:start="13:11" pos:end="13:11">.</operator><name pos:start="13:12" pos:end="13:17">vaadin</name><operator pos:start="13:18" pos:end="13:18">.</operator><name pos:start="13:19" pos:end="13:23">addon</name><operator pos:start="13:24" pos:end="13:24">.</operator><name pos:start="13:25" pos:end="13:31">leaflet</name><operator pos:start="13:32" pos:end="13:32">.</operator><name pos:start="13:33" pos:end="13:56">LeafletMouseOverListener</name></name>;</import>
<import pos:start="14:1" pos:end="14:45">import <name pos:start="14:8" pos:end="14:44"><name pos:start="14:8" pos:end="14:10">org</name><operator pos:start="14:11" pos:end="14:11">.</operator><name pos:start="14:12" pos:end="14:17">vaadin</name><operator pos:start="14:18" pos:end="14:18">.</operator><name pos:start="14:19" pos:end="14:23">addon</name><operator pos:start="14:24" pos:end="14:24">.</operator><name pos:start="14:25" pos:end="14:31">leaflet</name><operator pos:start="14:32" pos:end="14:32">.</operator><name pos:start="14:33" pos:end="14:38">shared</name><operator pos:start="14:39" pos:end="14:39">.</operator><name pos:start="14:40" pos:end="14:44">Point</name></name>;</import>

<import pos:start="16:1" pos:end="16:36">import <name pos:start="16:8" pos:end="16:35"><name pos:start="16:8" pos:end="16:10">com</name><operator pos:start="16:11" pos:end="16:11">.</operator><name pos:start="16:12" pos:end="16:17">vaadin</name><operator pos:start="16:18" pos:end="16:18">.</operator><name pos:start="16:19" pos:end="16:20">ui</name><operator pos:start="16:21" pos:end="16:21">.</operator><name pos:start="16:22" pos:end="16:35">AbsoluteLayout</name></name>;</import>
<import pos:start="17:1" pos:end="17:31">import <name pos:start="17:8" pos:end="17:30"><name pos:start="17:8" pos:end="17:10">com</name><operator pos:start="17:11" pos:end="17:11">.</operator><name pos:start="17:12" pos:end="17:17">vaadin</name><operator pos:start="17:18" pos:end="17:18">.</operator><name pos:start="17:19" pos:end="17:20">ui</name><operator pos:start="17:21" pos:end="17:21">.</operator><name pos:start="17:22" pos:end="17:30">Component</name></name>;</import>
<import pos:start="18:1" pos:end="18:37">import <name pos:start="18:8" pos:end="18:36"><name pos:start="18:8" pos:end="18:10">com</name><operator pos:start="18:11" pos:end="18:11">.</operator><name pos:start="18:12" pos:end="18:17">vaadin</name><operator pos:start="18:18" pos:end="18:18">.</operator><name pos:start="18:19" pos:end="18:20">ui</name><operator pos:start="18:21" pos:end="18:21">.</operator><name pos:start="18:22" pos:end="18:36">CustomComponent</name></name>;</import>
<import pos:start="19:1" pos:end="19:27">import <name pos:start="19:8" pos:end="19:26"><name pos:start="19:8" pos:end="19:10">com</name><operator pos:start="19:11" pos:end="19:11">.</operator><name pos:start="19:12" pos:end="19:17">vaadin</name><operator pos:start="19:18" pos:end="19:18">.</operator><name pos:start="19:19" pos:end="19:20">ui</name><operator pos:start="19:21" pos:end="19:21">.</operator><name pos:start="19:22" pos:end="19:26">Label</name></name>;</import>
<import pos:start="20:1" pos:end="20:34">import <name pos:start="20:8" pos:end="20:33"><name pos:start="20:8" pos:end="20:10">com</name><operator pos:start="20:11" pos:end="20:11">.</operator><name pos:start="20:12" pos:end="20:17">vaadin</name><operator pos:start="20:18" pos:end="20:18">.</operator><name pos:start="20:19" pos:end="20:20">ui</name><operator pos:start="20:21" pos:end="20:21">.</operator><name pos:start="20:22" pos:end="20:33">Notification</name></name>;</import>
<import pos:start="21:1" pos:end="21:31">import <name pos:start="21:8" pos:end="21:30"><name pos:start="21:8" pos:end="21:10">com</name><operator pos:start="21:11" pos:end="21:11">.</operator><name pos:start="21:12" pos:end="21:17">vaadin</name><operator pos:start="21:18" pos:end="21:18">.</operator><name pos:start="21:19" pos:end="21:20">ui</name><operator pos:start="21:21" pos:end="21:21">.</operator><name pos:start="21:22" pos:end="21:30">PopupView</name></name>;</import>
<import pos:start="22:1" pos:end="22:24">import <name pos:start="22:8" pos:end="22:23"><name pos:start="22:8" pos:end="22:10">com</name><operator pos:start="22:11" pos:end="22:11">.</operator><name pos:start="22:12" pos:end="22:17">vaadin</name><operator pos:start="22:18" pos:end="22:18">.</operator><name pos:start="22:19" pos:end="22:20">ui</name><operator pos:start="22:21" pos:end="22:21">.</operator><name pos:start="22:22" pos:end="22:23">UI</name></name>;</import>
<import pos:start="23:1" pos:end="23:36">import <name pos:start="23:8" pos:end="23:35"><name pos:start="23:8" pos:end="23:10">com</name><operator pos:start="23:11" pos:end="23:11">.</operator><name pos:start="23:12" pos:end="23:17">vaadin</name><operator pos:start="23:18" pos:end="23:18">.</operator><name pos:start="23:19" pos:end="23:20">ui</name><operator pos:start="23:21" pos:end="23:21">.</operator><name pos:start="23:22" pos:end="23:35">VerticalLayout</name></name>;</import>

<import pos:start="25:1" pos:end="25:43">import <name pos:start="25:8" pos:end="25:42"><name pos:start="25:8" pos:end="25:10">edu</name><operator pos:start="25:11" pos:end="25:11">.</operator><name pos:start="25:12" pos:end="25:13">nd</name><operator pos:start="25:14" pos:end="25:14">.</operator><name pos:start="25:15" pos:end="25:23">dronology</name><operator pos:start="25:24" pos:end="25:24">.</operator><name pos:start="25:25" pos:end="25:28">core</name><operator pos:start="25:29" pos:end="25:29">.</operator><name pos:start="25:30" pos:end="25:33">util</name><operator pos:start="25:34" pos:end="25:34">.</operator><name pos:start="25:35" pos:end="25:42">Waypoint</name></name>;</import>
<import pos:start="26:1" pos:end="26:47">import <name pos:start="26:8" pos:end="26:46"><name pos:start="26:8" pos:end="26:10">edu</name><operator pos:start="26:11" pos:end="26:11">.</operator><name pos:start="26:12" pos:end="26:13">nd</name><operator pos:start="26:14" pos:end="26:14">.</operator><name pos:start="26:15" pos:end="26:23">dronology</name><operator pos:start="26:24" pos:end="26:24">.</operator><name pos:start="26:25" pos:end="26:28">core</name><operator pos:start="26:29" pos:end="26:29">.</operator><name pos:start="26:30" pos:end="26:36">vehicle</name><operator pos:start="26:37" pos:end="26:37">.</operator><name pos:start="26:38" pos:end="26:46">IUAVProxy</name></name>;</import>
<import pos:start="27:1" pos:end="27:58">import <name pos:start="27:8" pos:end="27:57"><name pos:start="27:8" pos:end="27:10">edu</name><operator pos:start="27:11" pos:end="27:11">.</operator><name pos:start="27:12" pos:end="27:13">nd</name><operator pos:start="27:14" pos:end="27:14">.</operator><name pos:start="27:15" pos:end="27:23">dronology</name><operator pos:start="27:24" pos:end="27:24">.</operator><name pos:start="27:25" pos:end="27:32">services</name><operator pos:start="27:33" pos:end="27:33">.</operator><name pos:start="27:34" pos:end="27:37">core</name><operator pos:start="27:38" pos:end="27:38">.</operator><name pos:start="27:39" pos:end="27:42">info</name><operator pos:start="27:43" pos:end="27:43">.</operator><name pos:start="27:44" pos:end="27:57">FlightPlanInfo</name></name>;</import>
<import pos:start="28:1" pos:end="28:70">import <name pos:start="28:8" pos:end="28:69"><name pos:start="28:8" pos:end="28:10">edu</name><operator pos:start="28:11" pos:end="28:11">.</operator><name pos:start="28:12" pos:end="28:13">nd</name><operator pos:start="28:14" pos:end="28:14">.</operator><name pos:start="28:15" pos:end="28:23">dronology</name><operator pos:start="28:24" pos:end="28:24">.</operator><name pos:start="28:25" pos:end="28:32">services</name><operator pos:start="28:33" pos:end="28:33">.</operator><name pos:start="28:34" pos:end="28:37">core</name><operator pos:start="28:38" pos:end="28:38">.</operator><name pos:start="28:39" pos:end="28:44">remote</name><operator pos:start="28:45" pos:end="28:45">.</operator><name pos:start="28:46" pos:end="28:69">IDroneSetupRemoteService</name></name>;</import>
<import pos:start="29:1" pos:end="29:73">import <name pos:start="29:8" pos:end="29:72"><name pos:start="29:8" pos:end="29:10">edu</name><operator pos:start="29:11" pos:end="29:11">.</operator><name pos:start="29:12" pos:end="29:13">nd</name><operator pos:start="29:14" pos:end="29:14">.</operator><name pos:start="29:15" pos:end="29:23">dronology</name><operator pos:start="29:24" pos:end="29:24">.</operator><name pos:start="29:25" pos:end="29:32">services</name><operator pos:start="29:33" pos:end="29:33">.</operator><name pos:start="29:34" pos:end="29:37">core</name><operator pos:start="29:38" pos:end="29:38">.</operator><name pos:start="29:39" pos:end="29:44">remote</name><operator pos:start="29:45" pos:end="29:45">.</operator><name pos:start="29:46" pos:end="29:72">IFlightManagerRemoteService</name></name>;</import>
<import pos:start="30:1" pos:end="30:69">import <name pos:start="30:8" pos:end="30:68"><name pos:start="30:8" pos:end="30:10">edu</name><operator pos:start="30:11" pos:end="30:11">.</operator><name pos:start="30:12" pos:end="30:13">nd</name><operator pos:start="30:14" pos:end="30:14">.</operator><name pos:start="30:15" pos:end="30:23">dronology</name><operator pos:start="30:24" pos:end="30:24">.</operator><name pos:start="30:25" pos:end="30:32">services</name><operator pos:start="30:33" pos:end="30:33">.</operator><name pos:start="30:34" pos:end="30:37">core</name><operator pos:start="30:38" pos:end="30:38">.</operator><name pos:start="30:39" pos:end="30:42">util</name><operator pos:start="30:43" pos:end="30:43">.</operator><name pos:start="30:44" pos:end="30:68">DronologyServiceException</name></name>;</import>
<import pos:start="31:1" pos:end="31:64">import <name pos:start="31:8" pos:end="31:63"><name pos:start="31:8" pos:end="31:10">edu</name><operator pos:start="31:11" pos:end="31:11">.</operator><name pos:start="31:12" pos:end="31:13">nd</name><operator pos:start="31:14" pos:end="31:14">.</operator><name pos:start="31:15" pos:end="31:23">dronology</name><operator pos:start="31:24" pos:end="31:24">.</operator><name pos:start="31:25" pos:end="31:26">ui</name><operator pos:start="31:27" pos:end="31:27">.</operator><name pos:start="31:28" pos:end="31:33">vaadin</name><operator pos:start="31:34" pos:end="31:34">.</operator><name pos:start="31:35" pos:end="31:43">connector</name><operator pos:start="31:44" pos:end="31:44">.</operator><name pos:start="31:45" pos:end="31:63">BaseServiceProvider</name></name>;</import>
<import pos:start="32:1" pos:end="32:56">import <name pos:start="32:8" pos:end="32:55"><name pos:start="32:8" pos:end="32:10">edu</name><operator pos:start="32:11" pos:end="32:11">.</operator><name pos:start="32:12" pos:end="32:13">nd</name><operator pos:start="32:14" pos:end="32:14">.</operator><name pos:start="32:15" pos:end="32:23">dronology</name><operator pos:start="32:24" pos:end="32:24">.</operator><name pos:start="32:25" pos:end="32:26">ui</name><operator pos:start="32:27" pos:end="32:27">.</operator><name pos:start="32:28" pos:end="32:33">vaadin</name><operator pos:start="32:34" pos:end="32:34">.</operator><name pos:start="32:35" pos:end="32:37">map</name><operator pos:start="32:38" pos:end="32:38">.</operator><name pos:start="32:39" pos:end="32:55">LeafletmapFactory</name></name>;</import>
<import pos:start="33:1" pos:end="33:45">import <name pos:start="33:8" pos:end="33:44"><name pos:start="33:8" pos:end="33:10">edu</name><operator pos:start="33:11" pos:end="33:11">.</operator><name pos:start="33:12" pos:end="33:13">nd</name><operator pos:start="33:14" pos:end="33:14">.</operator><name pos:start="33:15" pos:end="33:23">dronology</name><operator pos:start="33:24" pos:end="33:24">.</operator><name pos:start="33:25" pos:end="33:26">ui</name><operator pos:start="33:27" pos:end="33:27">.</operator><name pos:start="33:28" pos:end="33:33">vaadin</name><operator pos:start="33:34" pos:end="33:34">.</operator><name pos:start="33:35" pos:end="33:39">start</name><operator pos:start="33:40" pos:end="33:40">.</operator><name pos:start="33:41" pos:end="33:44">MyUI</name></name>;</import>
<import pos:start="34:1" pos:end="34:54">import <name pos:start="34:8" pos:end="34:53"><name pos:start="34:8" pos:end="34:10">edu</name><operator pos:start="34:11" pos:end="34:11">.</operator><name pos:start="34:12" pos:end="34:13">nd</name><operator pos:start="34:14" pos:end="34:14">.</operator><name pos:start="34:15" pos:end="34:23">dronology</name><operator pos:start="34:24" pos:end="34:24">.</operator><name pos:start="34:25" pos:end="34:26">ui</name><operator pos:start="34:27" pos:end="34:27">.</operator><name pos:start="34:28" pos:end="34:33">vaadin</name><operator pos:start="34:34" pos:end="34:34">.</operator><name pos:start="34:35" pos:end="34:39">utils</name><operator pos:start="34:40" pos:end="34:40">.</operator><name pos:start="34:41" pos:end="34:53">Configuration</name></name>;</import>

<comment type="block" format="javadoc" pos:start="36:1" pos:end="41:3">/**
 * This is the map component for the Active Flights UI
 * 
 * @author Jinghui Cheng
 * 
 */</comment>
<class pos:start="42:1" pos:end="574:1"><specifier pos:start="42:1" pos:end="42:6">public</specifier> class <name pos:start="42:14" pos:end="42:27">AFMapComponent</name> <super_list pos:start="42:29" pos:end="42:51"><extends pos:start="42:29" pos:end="42:51">extends <super pos:start="42:37" pos:end="42:51"><name pos:start="42:37" pos:end="42:51">CustomComponent</name></super></extends></super_list> <block pos:start="42:53" pos:end="574:1">{ 
	<decl_stmt pos:start="43:9" pos:end="43:56"><decl pos:start="43:9" pos:end="43:55"><type pos:start="43:9" pos:end="43:33"><specifier pos:start="43:9" pos:end="43:15">private</specifier> <specifier pos:start="43:17" pos:end="43:22">static</specifier> <specifier pos:start="43:24" pos:end="43:28">final</specifier> <name pos:start="43:30" pos:end="43:33">long</name></type> <name pos:start="43:35" pos:end="43:50">serialVersionUID</name> <init pos:start="43:52" pos:end="43:55">= <expr pos:start="43:54" pos:end="43:55"><literal type="number" pos:start="43:54" pos:end="43:55">1L</literal></expr></init></decl>;</decl_stmt>

	<decl_stmt pos:start="45:9" pos:end="45:32"><decl pos:start="45:9" pos:end="45:31"><type pos:start="45:9" pos:end="45:20"><specifier pos:start="45:9" pos:end="45:15">private</specifier> <name pos:start="45:17" pos:end="45:20">LMap</name></type> <name pos:start="45:22" pos:end="45:31">leafletMap</name></decl>;</decl_stmt>
	<comment type="line" pos:start="46:9" pos:end="46:66">// private ArrayList&lt;LMarker&gt; markers = new ArrayList&lt;&gt;();</comment>
	<decl_stmt pos:start="47:9" pos:end="47:45"><decl pos:start="47:9" pos:end="47:44"><type pos:start="47:9" pos:end="47:37"><specifier pos:start="47:9" pos:end="47:15">private</specifier> <name pos:start="47:17" pos:end="47:37"><name pos:start="47:17" pos:end="47:26">Collection</name><argument_list type="generic" pos:start="47:27" pos:end="47:37">&lt;<argument pos:start="47:28" pos:end="47:36"><name pos:start="47:28" pos:end="47:36">IUAVProxy</name></argument>&gt;</argument_list></name></type> <name pos:start="47:39" pos:end="47:44">drones</name></decl>;</decl_stmt>
	<decl_stmt pos:start="48:9" pos:end="48:58"><decl pos:start="48:9" pos:end="48:57"><type pos:start="48:9" pos:end="48:42"><specifier pos:start="48:9" pos:end="48:15">private</specifier> <name pos:start="48:17" pos:end="48:42"><name pos:start="48:17" pos:end="48:26">Collection</name><argument_list type="generic" pos:start="48:27" pos:end="48:42">&lt;<argument pos:start="48:28" pos:end="48:41"><name pos:start="48:28" pos:end="48:41">FlightPlanInfo</name></argument>&gt;</argument_list></name></type> <name pos:start="48:44" pos:end="48:57">currentFlights</name></decl>;</decl_stmt>
	<decl_stmt pos:start="49:9" pos:end="49:49"><decl pos:start="49:9" pos:end="49:48"><type pos:start="49:9" pos:end="49:40"><specifier pos:start="49:9" pos:end="49:15">private</specifier> <name pos:start="49:17" pos:end="49:40">IDroneSetupRemoteService</name></type> <name pos:start="49:42" pos:end="49:48">service</name></decl>;</decl_stmt>
	<decl_stmt pos:start="50:9" pos:end="50:65"><decl pos:start="50:9" pos:end="50:64"><type pos:start="50:9" pos:end="50:43"><specifier pos:start="50:9" pos:end="50:15">private</specifier> <name pos:start="50:17" pos:end="50:43">IFlightManagerRemoteService</name></type> <name pos:start="50:45" pos:end="50:64">flightManagerService</name></decl>;</decl_stmt>
	<decl_stmt pos:start="51:9" pos:end="51:66"><decl pos:start="51:9" pos:end="51:65"><type pos:start="51:9" pos:end="51:35"><specifier pos:start="51:9" pos:end="51:15">private</specifier> <name pos:start="51:17" pos:end="51:35">BaseServiceProvider</name></type> <name pos:start="51:37" pos:end="51:44">provider</name> <init pos:start="51:46" pos:end="51:65">= <expr pos:start="51:48" pos:end="51:65"><call pos:start="51:48" pos:end="51:65"><name pos:start="51:48" pos:end="51:63"><name pos:start="51:48" pos:end="51:51">MyUI</name><operator pos:start="51:52" pos:end="51:52">.</operator><name pos:start="51:53" pos:end="51:63">getProvider</name></name><argument_list pos:start="51:64" pos:end="51:65">()</argument_list></call></expr></init></decl>;</decl_stmt>

	<decl_stmt pos:start="53:9" pos:end="53:39"><decl pos:start="53:9" pos:end="53:38"><type pos:start="53:9" pos:end="53:23"><specifier pos:start="53:9" pos:end="53:15">private</specifier> <name pos:start="53:17" pos:end="53:23">boolean</name></type> <name pos:start="53:25" pos:end="53:30">follow</name> <init pos:start="53:32" pos:end="53:38">= <expr pos:start="53:34" pos:end="53:38"><literal type="boolean" pos:start="53:34" pos:end="53:38">false</literal></expr></init></decl>;</decl_stmt>
	<decl_stmt pos:start="54:9" pos:end="54:43"><decl pos:start="54:9" pos:end="54:42"><type pos:start="54:9" pos:end="54:23"><specifier pos:start="54:9" pos:end="54:15">private</specifier> <name pos:start="54:17" pos:end="54:23">boolean</name></type> <name pos:start="54:25" pos:end="54:34">followZoom</name> <init pos:start="54:36" pos:end="54:42">= <expr pos:start="54:38" pos:end="54:42"><literal type="boolean" pos:start="54:38" pos:end="54:42">false</literal></expr></init></decl>;</decl_stmt>
	<decl_stmt pos:start="55:9" pos:end="55:62"><decl pos:start="55:9" pos:end="55:61"><type pos:start="55:9" pos:end="55:30"><specifier pos:start="55:9" pos:end="55:15">private</specifier> <name pos:start="55:17" pos:end="55:30">VerticalLayout</name></type> <name pos:start="55:32" pos:end="55:38">content</name> <init pos:start="55:40" pos:end="55:61">= <expr pos:start="55:42" pos:end="55:61"><operator pos:start="55:42" pos:end="55:44">new</operator> <call pos:start="55:46" pos:end="55:61"><name pos:start="55:46" pos:end="55:59">VerticalLayout</name><argument_list pos:start="55:60" pos:end="55:61">()</argument_list></call></expr></init></decl>;</decl_stmt>
	<decl_stmt pos:start="56:9" pos:end="56:67"><decl pos:start="56:9" pos:end="56:66"><type pos:start="56:9" pos:end="56:30"><specifier pos:start="56:9" pos:end="56:15">private</specifier> <name pos:start="56:17" pos:end="56:30">AbsoluteLayout</name></type> <name pos:start="56:32" pos:end="56:43">followLayout</name> <init pos:start="56:45" pos:end="56:66">= <expr pos:start="56:47" pos:end="56:66"><operator pos:start="56:47" pos:end="56:49">new</operator> <call pos:start="56:51" pos:end="56:66"><name pos:start="56:51" pos:end="56:64">AbsoluteLayout</name><argument_list pos:start="56:65" pos:end="56:66">()</argument_list></call></expr></init></decl>;</decl_stmt>
	<decl_stmt pos:start="57:9" pos:end="57:38"><decl pos:start="57:9" pos:end="57:37"><type pos:start="57:9" pos:end="57:27"><specifier pos:start="57:9" pos:end="57:15">private</specifier> <name pos:start="57:17" pos:end="57:27">AFFollowBar</name></type> <name pos:start="57:29" pos:end="57:37">followBar</name></decl>;</decl_stmt>
	<decl_stmt pos:start="58:9" pos:end="58:61"><decl pos:start="58:9" pos:end="58:60"><type pos:start="58:9" pos:end="58:30"><specifier pos:start="58:9" pos:end="58:15">private</specifier> <name pos:start="58:17" pos:end="58:30">AbsoluteLayout</name></type> <name pos:start="58:32" pos:end="58:37">layout</name> <init pos:start="58:39" pos:end="58:60">= <expr pos:start="58:41" pos:end="58:60"><operator pos:start="58:41" pos:end="58:43">new</operator> <call pos:start="58:45" pos:end="58:60"><name pos:start="58:45" pos:end="58:58">AbsoluteLayout</name><argument_list pos:start="58:59" pos:end="58:60">()</argument_list></call></expr></init></decl>;</decl_stmt>
	<decl_stmt pos:start="59:9" pos:end="59:32"><decl pos:start="59:9" pos:end="59:31"><type pos:start="59:9" pos:end="59:25"><specifier pos:start="59:9" pos:end="59:15">private</specifier> <name pos:start="59:17" pos:end="59:25">PopupView</name></type> <name pos:start="59:27" pos:end="59:31">popup</name></decl>;</decl_stmt>
	<decl_stmt pos:start="60:9" pos:end="60:37"><decl pos:start="60:9" pos:end="60:36"><type pos:start="60:9" pos:end="60:25"><specifier pos:start="60:9" pos:end="60:15">private</specifier> <name pos:start="60:17" pos:end="60:25">PopupView</name></type> <name pos:start="60:27" pos:end="60:36">dronePopup</name></decl>;</decl_stmt>

	<decl_stmt pos:start="62:9" pos:end="62:34"><decl pos:start="62:9" pos:end="62:33"><type pos:start="62:9" pos:end="62:27"><specifier pos:start="62:9" pos:end="62:15">private</specifier> <name pos:start="62:17" pos:end="62:27">AFInfoPanel</name></type> <name pos:start="62:29" pos:end="62:33">panel</name></decl>;</decl_stmt>
 
	<decl_stmt pos:start="64:9" pos:end="64:43"><decl pos:start="64:9" pos:end="64:42"><type pos:start="64:9" pos:end="64:30"><specifier pos:start="64:9" pos:end="64:15">private</specifier> <name pos:start="64:17" pos:end="64:30">MapDrawingUtil</name></type> <name pos:start="64:32" pos:end="64:42">drawingutil</name></decl>;</decl_stmt>

	<constructor pos:start="66:9" pos:end="98:9"><specifier pos:start="66:9" pos:end="66:14">public</specifier> <name pos:start="66:16" pos:end="66:29">AFMapComponent</name><parameter_list pos:start="66:30" pos:end="66:48">(<parameter pos:start="66:31" pos:end="66:47"><decl pos:start="66:31" pos:end="66:47"><type pos:start="66:31" pos:end="66:41"><name pos:start="66:31" pos:end="66:41">AFInfoPanel</name></type> <name pos:start="66:43" pos:end="66:47">panel</name></decl></parameter>)</parameter_list> <block pos:start="66:50" pos:end="98:9">{<block_content pos:start="67:17" pos:end="97:44">
		<expr_stmt pos:start="67:17" pos:end="67:35"><expr pos:start="67:17" pos:end="67:34"><name pos:start="67:17" pos:end="67:26"><name pos:start="67:17" pos:end="67:20">this</name><operator pos:start="67:21" pos:end="67:21">.</operator><name pos:start="67:22" pos:end="67:26">panel</name></name> <operator pos:start="67:28" pos:end="67:28">=</operator> <name pos:start="67:30" pos:end="67:34">panel</name></expr>;</expr_stmt>

		<expr_stmt pos:start="69:17" pos:end="69:38"><expr pos:start="69:17" pos:end="69:37"><call pos:start="69:17" pos:end="69:37"><name pos:start="69:17" pos:end="69:29"><name pos:start="69:17" pos:end="69:20">this</name><operator pos:start="69:21" pos:end="69:21">.</operator><name pos:start="69:22" pos:end="69:29">setWidth</name></name><argument_list pos:start="69:30" pos:end="69:37">(<argument pos:start="69:31" pos:end="69:36"><expr pos:start="69:31" pos:end="69:36"><literal type="string" pos:start="69:31" pos:end="69:36">"100%"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt pos:start="70:17" pos:end="70:46"><expr pos:start="70:17" pos:end="70:45"><call pos:start="70:17" pos:end="70:45"><name pos:start="70:17" pos:end="70:28">addStyleName</name><argument_list pos:start="70:29" pos:end="70:45">(<argument pos:start="70:30" pos:end="70:44"><expr pos:start="70:30" pos:end="70:44"><literal type="string" pos:start="70:30" pos:end="70:44">"map_component"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt pos:start="71:17" pos:end="71:49"><expr pos:start="71:17" pos:end="71:48"><call pos:start="71:17" pos:end="71:48"><name pos:start="71:17" pos:end="71:28">addStyleName</name><argument_list pos:start="71:29" pos:end="71:48">(<argument pos:start="71:30" pos:end="71:47"><expr pos:start="71:30" pos:end="71:47"><literal type="string" pos:start="71:30" pos:end="71:47">"af_map_component"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		<expr_stmt pos:start="73:17" pos:end="73:61"><expr pos:start="73:17" pos:end="73:60"><name pos:start="73:17" pos:end="73:26">leafletMap</name> <operator pos:start="73:28" pos:end="73:28">=</operator> <call pos:start="73:30" pos:end="73:60"><name pos:start="73:30" pos:end="73:58"><name pos:start="73:30" pos:end="73:46">LeafletmapFactory</name><operator pos:start="73:47" pos:end="73:47">.</operator><name pos:start="73:48" pos:end="73:58">generateMap</name></name><argument_list pos:start="73:59" pos:end="73:60">()</argument_list></call></expr>;</expr_stmt>
		<expr_stmt pos:start="74:17" pos:end="74:67"><expr pos:start="74:17" pos:end="74:66"><name pos:start="74:17" pos:end="74:27">drawingutil</name> <operator pos:start="74:29" pos:end="74:29">=</operator> <operator pos:start="74:31" pos:end="74:33">new</operator> <call pos:start="74:35" pos:end="74:66"><name pos:start="74:35" pos:end="74:48">MapDrawingUtil</name><argument_list pos:start="74:49" pos:end="74:66">(<argument pos:start="74:50" pos:end="74:59"><expr pos:start="74:50" pos:end="74:59"><name pos:start="74:50" pos:end="74:59">leafletMap</name></expr></argument>, <argument pos:start="74:62" pos:end="74:65"><expr pos:start="74:62" pos:end="74:65"><name pos:start="74:62" pos:end="74:65">this</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		<try pos:start="76:17" pos:end="84:17">try <block pos:start="76:21" pos:end="81:17">{<block_content pos:start="77:25" pos:end="79:87">
			<expr_stmt pos:start="77:25" pos:end="77:132"><expr pos:start="77:25" pos:end="77:131"><name pos:start="77:25" pos:end="77:31">service</name> <operator pos:start="77:33" pos:end="77:33">=</operator> <operator pos:start="77:35" pos:end="77:35">(</operator><name pos:start="77:36" pos:end="77:59">IDroneSetupRemoteService</name><operator pos:start="77:60" pos:end="77:60">)</operator> <call pos:start="77:62" pos:end="77:88"><name pos:start="77:62" pos:end="77:86"><name pos:start="77:62" pos:end="77:69">provider</name><operator pos:start="77:70" pos:end="77:70">.</operator><name pos:start="77:71" pos:end="77:86">getRemoteManager</name></name><argument_list pos:start="77:87" pos:end="77:88">()</argument_list></call><operator pos:start="77:89" pos:end="77:89">.</operator><call pos:start="77:90" pos:end="77:131"><name pos:start="77:90" pos:end="77:99">getService</name><argument_list pos:start="77:100" pos:end="77:131">(<argument pos:start="77:101" pos:end="77:130"><expr pos:start="77:101" pos:end="77:130"><name pos:start="77:101" pos:end="77:130"><name pos:start="77:101" pos:end="77:124">IDroneSetupRemoteService</name><operator pos:start="77:125" pos:end="77:125">.</operator><name pos:start="77:126" pos:end="77:130">class</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt pos:start="78:25" pos:end="79:87"><expr pos:start="78:25" pos:end="79:86"><name pos:start="78:25" pos:end="78:44">flightManagerService</name> <operator pos:start="78:46" pos:end="78:46">=</operator> <operator pos:start="78:48" pos:end="78:48">(</operator><name pos:start="78:49" pos:end="78:75">IFlightManagerRemoteService</name><operator pos:start="78:76" pos:end="78:76">)</operator> <call pos:start="78:78" pos:end="78:104"><name pos:start="78:78" pos:end="78:102"><name pos:start="78:78" pos:end="78:85">provider</name><operator pos:start="78:86" pos:end="78:86">.</operator><name pos:start="78:87" pos:end="78:102">getRemoteManager</name></name><argument_list pos:start="78:103" pos:end="78:104">()</argument_list></call>
					<operator pos:start="79:41" pos:end="79:41">.</operator><call pos:start="79:42" pos:end="79:86"><name pos:start="79:42" pos:end="79:51">getService</name><argument_list pos:start="79:52" pos:end="79:86">(<argument pos:start="79:53" pos:end="79:85"><expr pos:start="79:53" pos:end="79:85"><name pos:start="79:53" pos:end="79:85"><name pos:start="79:53" pos:end="79:79">IFlightManagerRemoteService</name><operator pos:start="79:80" pos:end="79:80">.</operator><name pos:start="79:81" pos:end="79:85">class</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<comment type="line" pos:start="80:25" pos:end="80:102">// currentFlights = flightRouteService.getFlightDetails().getCurrentFlights();</comment>
		</block_content>}</block> <catch pos:start="81:19" pos:end="84:17">catch <parameter_list pos:start="81:25" pos:end="81:71">(<parameter pos:start="81:26" pos:end="81:70"><decl pos:start="81:26" pos:end="81:70"><type pos:start="81:26" pos:end="81:40"><name pos:start="81:26" pos:end="81:40">RemoteException</name></type> | <type pos:start="81:44" pos:end="81:70"><name pos:start="81:44" pos:end="81:68">DronologyServiceException</name></type> <name pos:start="81:70" pos:end="81:70">e</name></decl></parameter>)</parameter_list> <block pos:start="81:73" pos:end="84:17">{<block_content pos:start="82:25" pos:end="83:49">
			<expr_stmt pos:start="82:25" pos:end="82:44"><expr pos:start="82:25" pos:end="82:43"><call pos:start="82:25" pos:end="82:43"><name pos:start="82:25" pos:end="82:41"><name pos:start="82:25" pos:end="82:25">e</name><operator pos:start="82:26" pos:end="82:26">.</operator><name pos:start="82:27" pos:end="82:41">printStackTrace</name></name><argument_list pos:start="82:42" pos:end="82:43">()</argument_list></call></expr>;</expr_stmt>
			<expr_stmt pos:start="83:25" pos:end="83:49"><expr pos:start="83:25" pos:end="83:48"><call pos:start="83:25" pos:end="83:48"><name pos:start="83:25" pos:end="83:41"><name pos:start="83:25" pos:end="83:28">MyUI</name><operator pos:start="83:29" pos:end="83:29">.</operator><name pos:start="83:30" pos:end="83:41">setConnected</name></name><argument_list pos:start="83:42" pos:end="83:48">(<argument pos:start="83:43" pos:end="83:47"><expr pos:start="83:43" pos:end="83:47"><literal type="boolean" pos:start="83:43" pos:end="83:47">false</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		</block_content>}</block></catch></try>
		<decl_stmt pos:start="85:17" pos:end="85:54"><decl pos:start="85:17" pos:end="85:53"><type pos:start="85:17" pos:end="85:28"><name pos:start="85:17" pos:end="85:28"><name pos:start="85:17" pos:end="85:20">List</name><argument_list type="generic" pos:start="85:21" pos:end="85:28">&lt;<argument pos:start="85:22" pos:end="85:27"><name pos:start="85:22" pos:end="85:27">String</name></argument>&gt;</argument_list></name></type> <name pos:start="85:30" pos:end="85:33">temp</name> <init pos:start="85:35" pos:end="85:53">= <expr pos:start="85:37" pos:end="85:53"><operator pos:start="85:37" pos:end="85:39">new</operator> <call pos:start="85:41" pos:end="85:53"><name pos:start="85:41" pos:end="85:51"><name pos:start="85:41" pos:end="85:49">ArrayList</name><argument_list type="generic" pos:start="85:50" pos:end="85:51">&lt;&gt;</argument_list></name><argument_list pos:start="85:52" pos:end="85:53">()</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt pos:start="86:17" pos:end="86:54"><expr pos:start="86:17" pos:end="86:53"><call pos:start="86:17" pos:end="86:53"><name pos:start="86:17" pos:end="86:43"><name pos:start="86:17" pos:end="86:27">drawingutil</name><operator pos:start="86:28" pos:end="86:28">.</operator><name pos:start="86:29" pos:end="86:43">addDroneMarkers</name></name><argument_list pos:start="86:44" pos:end="86:53">(<argument pos:start="86:45" pos:end="86:46"><expr pos:start="86:45" pos:end="86:46"><literal type="string" pos:start="86:45" pos:end="86:46">""</literal></expr></argument>, <argument pos:start="86:49" pos:end="86:52"><expr pos:start="86:49" pos:end="86:52"><name pos:start="86:49" pos:end="86:52">temp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt pos:start="87:17" pos:end="87:60"><expr pos:start="87:17" pos:end="87:59"><call pos:start="87:17" pos:end="87:59"><name pos:start="87:17" pos:end="87:49"><name pos:start="87:17" pos:end="87:27">drawingutil</name><operator pos:start="87:28" pos:end="87:28">.</operator><name pos:start="87:29" pos:end="87:49">addActiveFlightRoutes</name></name><argument_list pos:start="87:50" pos:end="87:59">(<argument pos:start="87:51" pos:end="87:52"><expr pos:start="87:51" pos:end="87:52"><literal type="string" pos:start="87:51" pos:end="87:52">""</literal></expr></argument>, <argument pos:start="87:55" pos:end="87:58"><expr pos:start="87:55" pos:end="87:58"><name pos:start="87:55" pos:end="87:58">temp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt pos:start="88:17" pos:end="88:40"><expr pos:start="88:17" pos:end="88:39"><call pos:start="88:17" pos:end="88:39"><name pos:start="88:17" pos:end="88:37"><name pos:start="88:17" pos:end="88:20">this</name><operator pos:start="88:21" pos:end="88:21">.</operator><name pos:start="88:22" pos:end="88:37">setAverageCenter</name></name><argument_list pos:start="88:38" pos:end="88:39">()</argument_list></call></expr>;</expr_stmt>
		<decl_stmt pos:start="89:17" pos:end="89:89"><decl pos:start="89:17" pos:end="89:88"><type pos:start="89:17" pos:end="89:22"><name pos:start="89:17" pos:end="89:22">double</name></type> <name pos:start="89:24" pos:end="89:35">screenHeight</name> <init pos:start="89:37" pos:end="89:88">= <expr pos:start="89:39" pos:end="89:88"><call pos:start="89:39" pos:end="89:53"><name pos:start="89:39" pos:end="89:51"><name pos:start="89:39" pos:end="89:40">UI</name><operator pos:start="89:41" pos:end="89:41">.</operator><name pos:start="89:42" pos:end="89:51">getCurrent</name></name><argument_list pos:start="89:52" pos:end="89:53">()</argument_list></call><operator pos:start="89:54" pos:end="89:54">.</operator><call pos:start="89:55" pos:end="89:63"><name pos:start="89:55" pos:end="89:61">getPage</name><argument_list pos:start="89:62" pos:end="89:63">()</argument_list></call><operator pos:start="89:64" pos:end="89:64">.</operator><call pos:start="89:65" pos:end="89:88"><name pos:start="89:65" pos:end="89:86">getBrowserWindowHeight</name><argument_list pos:start="89:87" pos:end="89:88">()</argument_list></call></expr></init></decl>;</decl_stmt>
		<decl_stmt pos:start="90:17" pos:end="90:71"><decl pos:start="90:17" pos:end="90:70"><type pos:start="90:17" pos:end="90:19"><name pos:start="90:17" pos:end="90:19">int</name></type> <name pos:start="90:21" pos:end="90:32">layoutHeight</name> <init pos:start="90:34" pos:end="90:70">= <expr pos:start="90:36" pos:end="90:70"><operator pos:start="90:36" pos:end="90:36">(</operator><name pos:start="90:37" pos:end="90:39">int</name><operator pos:start="90:40" pos:end="90:40">)</operator> <call pos:start="90:42" pos:end="90:70"><name pos:start="90:42" pos:end="90:50"><name pos:start="90:42" pos:end="90:45">Math</name><operator pos:start="90:46" pos:end="90:46">.</operator><name pos:start="90:47" pos:end="90:50">rint</name></name><argument_list pos:start="90:51" pos:end="90:70">(<argument pos:start="90:52" pos:end="90:69"><expr pos:start="90:52" pos:end="90:69"><name pos:start="90:52" pos:end="90:63">screenHeight</name> <operator pos:start="90:65" pos:end="90:65">*</operator> <literal type="number" pos:start="90:67" pos:end="90:69">0.9</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt pos:start="91:17" pos:end="91:72"><expr pos:start="91:17" pos:end="91:71"><call pos:start="91:17" pos:end="91:71"><name pos:start="91:17" pos:end="91:32"><name pos:start="91:17" pos:end="91:22">layout</name><operator pos:start="91:23" pos:end="91:23">.</operator><name pos:start="91:24" pos:end="91:32">setHeight</name></name><argument_list pos:start="91:33" pos:end="91:71">(<argument pos:start="91:34" pos:end="91:70"><expr pos:start="91:34" pos:end="91:70"><call pos:start="91:34" pos:end="91:63"><name pos:start="91:34" pos:end="91:49"><name pos:start="91:34" pos:end="91:40">Integer</name><operator pos:start="91:41" pos:end="91:41">.</operator><name pos:start="91:42" pos:end="91:49">toString</name></name><argument_list pos:start="91:50" pos:end="91:63">(<argument pos:start="91:51" pos:end="91:62"><expr pos:start="91:51" pos:end="91:62"><name pos:start="91:51" pos:end="91:62">layoutHeight</name></expr></argument>)</argument_list></call> <operator pos:start="91:65" pos:end="91:65">+</operator> <literal type="string" pos:start="91:67" pos:end="91:70">"px"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt pos:start="92:17" pos:end="92:48"><expr pos:start="92:17" pos:end="92:47"><call pos:start="92:17" pos:end="92:47"><name pos:start="92:17" pos:end="92:35"><name pos:start="92:17" pos:end="92:22">layout</name><operator pos:start="92:23" pos:end="92:23">.</operator><name pos:start="92:24" pos:end="92:35">addComponent</name></name><argument_list pos:start="92:36" pos:end="92:47">(<argument pos:start="92:37" pos:end="92:46"><expr pos:start="92:37" pos:end="92:46"><name pos:start="92:37" pos:end="92:46">leafletMap</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt pos:start="93:17" pos:end="93:50"><expr pos:start="93:17" pos:end="93:49"><name pos:start="93:17" pos:end="93:21">popup</name> <operator pos:start="93:23" pos:end="93:23">=</operator> <call pos:start="93:25" pos:end="93:49"><name pos:start="93:25" pos:end="93:47">createWayPointPopupView</name><argument_list pos:start="93:48" pos:end="93:49">()</argument_list></call></expr>;</expr_stmt>
		<expr_stmt pos:start="94:17" pos:end="94:52"><expr pos:start="94:17" pos:end="94:51"><name pos:start="94:17" pos:end="94:26">dronePopup</name> <operator pos:start="94:28" pos:end="94:28">=</operator> <call pos:start="94:30" pos:end="94:51"><name pos:start="94:30" pos:end="94:49">createDronePopupView</name><argument_list pos:start="94:50" pos:end="94:51">()</argument_list></call></expr>;</expr_stmt>
		<expr_stmt pos:start="95:17" pos:end="95:56"><expr pos:start="95:17" pos:end="95:55"><call pos:start="95:17" pos:end="95:55"><name pos:start="95:17" pos:end="95:36"><name pos:start="95:17" pos:end="95:22">layout</name><operator pos:start="95:23" pos:end="95:23">.</operator><name pos:start="95:24" pos:end="95:36">addComponents</name></name><argument_list pos:start="95:37" pos:end="95:55">(<argument pos:start="95:38" pos:end="95:42"><expr pos:start="95:38" pos:end="95:42"><name pos:start="95:38" pos:end="95:42">popup</name></expr></argument>, <argument pos:start="95:45" pos:end="95:54"><expr pos:start="95:45" pos:end="95:54"><name pos:start="95:45" pos:end="95:54">dronePopup</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt pos:start="96:17" pos:end="96:45"><expr pos:start="96:17" pos:end="96:44"><call pos:start="96:17" pos:end="96:44"><name pos:start="96:17" pos:end="96:36"><name pos:start="96:17" pos:end="96:23">content</name><operator pos:start="96:24" pos:end="96:24">.</operator><name pos:start="96:25" pos:end="96:36">addComponent</name></name><argument_list pos:start="96:37" pos:end="96:44">(<argument pos:start="96:38" pos:end="96:43"><expr pos:start="96:38" pos:end="96:43"><name pos:start="96:38" pos:end="96:43">layout</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt pos:start="97:17" pos:end="97:44"><expr pos:start="97:17" pos:end="97:43"><call pos:start="97:17" pos:end="97:43"><name pos:start="97:17" pos:end="97:34">setCompositionRoot</name><argument_list pos:start="97:35" pos:end="97:43">(<argument pos:start="97:36" pos:end="97:42"><expr pos:start="97:36" pos:end="97:42"><name pos:start="97:36" pos:end="97:42">content</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	</block_content>}</block></constructor>

	<function pos:start="100:9" pos:end="102:9"><type pos:start="100:9" pos:end="100:19"><specifier pos:start="100:9" pos:end="100:14">public</specifier> <name pos:start="100:16" pos:end="100:19">void</name></type> <name pos:start="100:21" pos:end="100:29">setCenter</name><parameter_list pos:start="100:30" pos:end="100:65">(<parameter pos:start="100:31" pos:end="100:46"><decl pos:start="100:31" pos:end="100:46"><type pos:start="100:31" pos:end="100:46"><name pos:start="100:31" pos:end="100:36">double</name></type> <name pos:start="100:38" pos:end="100:46">centerLat</name></decl></parameter>, <parameter pos:start="100:49" pos:end="100:64"><decl pos:start="100:49" pos:end="100:64"><type pos:start="100:49" pos:end="100:64"><name pos:start="100:49" pos:end="100:54">double</name></type> <name pos:start="100:56" pos:end="100:64">centerLon</name></decl></parameter>)</parameter_list> <block pos:start="100:67" pos:end="102:9">{<block_content pos:start="101:17" pos:end="101:59">
		<expr_stmt pos:start="101:17" pos:end="101:59"><expr pos:start="101:17" pos:end="101:58"><call pos:start="101:17" pos:end="101:58"><name pos:start="101:17" pos:end="101:36"><name pos:start="101:17" pos:end="101:26">leafletMap</name><operator pos:start="101:27" pos:end="101:27">.</operator><name pos:start="101:28" pos:end="101:36">setCenter</name></name><argument_list pos:start="101:37" pos:end="101:58">(<argument pos:start="101:38" pos:end="101:46"><expr pos:start="101:38" pos:end="101:46"><name pos:start="101:38" pos:end="101:46">centerLat</name></expr></argument>, <argument pos:start="101:49" pos:end="101:57"><expr pos:start="101:49" pos:end="101:57"><name pos:start="101:49" pos:end="101:57">centerLon</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	</block_content>}</block></function>

	<function pos:start="104:9" pos:end="106:9"><type pos:start="104:9" pos:end="104:19"><specifier pos:start="104:9" pos:end="104:14">public</specifier> <name pos:start="104:16" pos:end="104:19">void</name></type> <name pos:start="104:21" pos:end="104:32">setZoomLevel</name><parameter_list pos:start="104:33" pos:end="104:50">(<parameter pos:start="104:34" pos:end="104:49"><decl pos:start="104:34" pos:end="104:49"><type pos:start="104:34" pos:end="104:39"><name pos:start="104:34" pos:end="104:39">double</name></type> <name pos:start="104:41" pos:end="104:49">zoomLevel</name></decl></parameter>)</parameter_list> <block pos:start="104:52" pos:end="106:9">{<block_content pos:start="105:17" pos:end="105:51">
		<expr_stmt pos:start="105:17" pos:end="105:51"><expr pos:start="105:17" pos:end="105:50"><call pos:start="105:17" pos:end="105:50"><name pos:start="105:17" pos:end="105:39"><name pos:start="105:17" pos:end="105:26">leafletMap</name><operator pos:start="105:27" pos:end="105:27">.</operator><name pos:start="105:28" pos:end="105:39">setZoomLevel</name></name><argument_list pos:start="105:40" pos:end="105:50">(<argument pos:start="105:41" pos:end="105:49"><expr pos:start="105:41" pos:end="105:49"><name pos:start="105:41" pos:end="105:49">zoomLevel</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	</block_content>}</block></function>

	<function pos:start="108:9" pos:end="110:9"><type pos:start="108:9" pos:end="108:21"><specifier pos:start="108:9" pos:end="108:14">public</specifier> <name pos:start="108:16" pos:end="108:21">double</name></type> <name pos:start="108:23" pos:end="108:34">getCenterLat</name><parameter_list pos:start="108:35" pos:end="108:36">()</parameter_list> <block pos:start="108:38" pos:end="110:9">{<block_content pos:start="109:17" pos:end="109:55">
		<return pos:start="109:17" pos:end="109:55">return <expr pos:start="109:24" pos:end="109:54"><call pos:start="109:24" pos:end="109:45"><name pos:start="109:24" pos:end="109:43"><name pos:start="109:24" pos:end="109:33">leafletMap</name><operator pos:start="109:34" pos:end="109:34">.</operator><name pos:start="109:35" pos:end="109:43">getCenter</name></name><argument_list pos:start="109:44" pos:end="109:45">()</argument_list></call><operator pos:start="109:46" pos:end="109:46">.</operator><call pos:start="109:47" pos:end="109:54"><name pos:start="109:47" pos:end="109:52">getLat</name><argument_list pos:start="109:53" pos:end="109:54">()</argument_list></call></expr>;</return>
	</block_content>}</block></function>

	<function pos:start="112:9" pos:end="114:9"><type pos:start="112:9" pos:end="112:21"><specifier pos:start="112:9" pos:end="112:14">public</specifier> <name pos:start="112:16" pos:end="112:21">double</name></type> <name pos:start="112:23" pos:end="112:34">getCenterLon</name><parameter_list pos:start="112:35" pos:end="112:36">()</parameter_list> <block pos:start="112:38" pos:end="114:9">{<block_content pos:start="113:17" pos:end="113:55">
		<return pos:start="113:17" pos:end="113:55">return <expr pos:start="113:24" pos:end="113:54"><call pos:start="113:24" pos:end="113:45"><name pos:start="113:24" pos:end="113:43"><name pos:start="113:24" pos:end="113:33">leafletMap</name><operator pos:start="113:34" pos:end="113:34">.</operator><name pos:start="113:35" pos:end="113:43">getCenter</name></name><argument_list pos:start="113:44" pos:end="113:45">()</argument_list></call><operator pos:start="113:46" pos:end="113:46">.</operator><call pos:start="113:47" pos:end="113:54"><name pos:start="113:47" pos:end="113:52">getLon</name><argument_list pos:start="113:53" pos:end="113:54">()</argument_list></call></expr>;</return>
	</block_content>}</block></function>

	<function pos:start="116:9" pos:end="118:9"><type pos:start="116:9" pos:end="116:21"><specifier pos:start="116:9" pos:end="116:14">public</specifier> <name pos:start="116:16" pos:end="116:21">double</name></type> <name pos:start="116:23" pos:end="116:34">getZoomLevel</name><parameter_list pos:start="116:35" pos:end="116:36">()</parameter_list> <block pos:start="116:38" pos:end="118:9">{<block_content pos:start="117:17" pos:end="117:49">
		<return pos:start="117:17" pos:end="117:49">return <expr pos:start="117:24" pos:end="117:48"><call pos:start="117:24" pos:end="117:48"><name pos:start="117:24" pos:end="117:46"><name pos:start="117:24" pos:end="117:33">leafletMap</name><operator pos:start="117:34" pos:end="117:34">.</operator><name pos:start="117:35" pos:end="117:46">getZoomLevel</name></name><argument_list pos:start="117:47" pos:end="117:48">()</argument_list></call></expr>;</return>
	</block_content>}</block></function>
 
	<function pos:start="120:9" pos:end="122:9"><type pos:start="120:9" pos:end="120:19"><specifier pos:start="120:9" pos:end="120:14">public</specifier> <name pos:start="120:16" pos:end="120:19">LMap</name></type> <name pos:start="120:21" pos:end="120:34">getMapInstance</name><parameter_list pos:start="120:35" pos:end="120:36">()</parameter_list> <block pos:start="120:38" pos:end="122:9">{<block_content pos:start="121:17" pos:end="121:34">
		<return pos:start="121:17" pos:end="121:34">return <expr pos:start="121:24" pos:end="121:33"><name pos:start="121:24" pos:end="121:33">leafletMap</name></expr>;</return>
	</block_content>}</block></function>

	<comment type="block" format="javadoc" pos:start="124:9" pos:end="127:11">/**
	 * This function sets the center and zoom of the map to include all drones and their flight routes. It finds the average latitude and longitude first. It then finds the point farthest from the
	 * center and bases the zoom level off of that point.
	 */</comment>
	<function pos:start="128:9" pos:end="196:9"><type pos:start="128:9" pos:end="128:19"><specifier pos:start="128:9" pos:end="128:14">public</specifier> <name pos:start="128:16" pos:end="128:19">void</name></type> <name pos:start="128:21" pos:end="128:36">setAverageCenter</name><parameter_list pos:start="128:37" pos:end="128:38">()</parameter_list> <block pos:start="128:40" pos:end="196:9">{<block_content pos:start="129:17" pos:end="194:17">
		<if_stmt pos:start="129:17" pos:end="133:17"><if pos:start="129:17" pos:end="133:17">if <condition pos:start="129:20" pos:end="129:60">(<expr pos:start="129:21" pos:end="129:59"><call pos:start="129:21" pos:end="129:53"><name pos:start="129:21" pos:end="129:45"><name pos:start="129:21" pos:end="129:27">content</name><operator pos:start="129:28" pos:end="129:28">.</operator><name pos:start="129:29" pos:end="129:45">getComponentIndex</name></name><argument_list pos:start="129:46" pos:end="129:53">(<argument pos:start="129:47" pos:end="129:52"><expr pos:start="129:47" pos:end="129:52"><name pos:start="129:47" pos:end="129:52">layout</name></expr></argument>)</argument_list></call> <operator pos:start="129:55" pos:end="129:56">==</operator> <operator pos:start="129:58" pos:end="129:58">-</operator><literal type="number" pos:start="129:59" pos:end="129:59">1</literal></expr>)</condition> <block pos:start="129:62" pos:end="133:17">{<block_content pos:start="130:25" pos:end="132:53"> <comment type="line" pos:start="129:64" pos:end="129:94">// if coming out of follow mode</comment>
			<expr_stmt pos:start="130:25" pos:end="130:54"><expr pos:start="130:25" pos:end="130:53"><call pos:start="130:25" pos:end="130:53"><name pos:start="130:25" pos:end="130:51"><name pos:start="130:25" pos:end="130:31">content</name><operator pos:start="130:32" pos:end="130:32">.</operator><name pos:start="130:33" pos:end="130:51">removeAllComponents</name></name><argument_list pos:start="130:52" pos:end="130:53">()</argument_list></call></expr>;</expr_stmt>
			<expr_stmt pos:start="131:25" pos:end="131:79"><expr pos:start="131:25" pos:end="131:78"><call pos:start="131:25" pos:end="131:78"><name pos:start="131:25" pos:end="131:50"><name pos:start="131:25" pos:end="131:34">leafletMap</name><operator pos:start="131:35" pos:end="131:35">.</operator><name pos:start="131:36" pos:end="131:50">removeStyleName</name></name><argument_list pos:start="131:51" pos:end="131:78">(<argument pos:start="131:52" pos:end="131:77"><expr pos:start="131:52" pos:end="131:77"><literal type="string" pos:start="131:52" pos:end="131:77">"af_leaflet_map_edit_mode"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt pos:start="132:25" pos:end="132:53"><expr pos:start="132:25" pos:end="132:52"><call pos:start="132:25" pos:end="132:52"><name pos:start="132:25" pos:end="132:44"><name pos:start="132:25" pos:end="132:31">content</name><operator pos:start="132:32" pos:end="132:32">.</operator><name pos:start="132:33" pos:end="132:44">addComponent</name></name><argument_list pos:start="132:45" pos:end="132:52">(<argument pos:start="132:46" pos:end="132:51"><expr pos:start="132:46" pos:end="132:51"><name pos:start="132:46" pos:end="132:51">layout</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		</block_content>}</block></if></if_stmt>
		<decl_stmt pos:start="134:17" pos:end="134:74"><decl pos:start="134:17" pos:end="134:73"><type pos:start="134:17" pos:end="134:29"><name pos:start="134:17" pos:end="134:29">Configuration</name></type> <name pos:start="134:31" pos:end="134:43">configuration</name> <init pos:start="134:45" pos:end="134:73">= <expr pos:start="134:47" pos:end="134:73"><call pos:start="134:47" pos:end="134:73"><name pos:start="134:47" pos:end="134:71"><name pos:start="134:47" pos:end="134:59">Configuration</name><operator pos:start="134:60" pos:end="134:60">.</operator><name pos:start="134:61" pos:end="134:71">getInstance</name></name><argument_list pos:start="134:72" pos:end="134:73">()</argument_list></call></expr></init></decl>;</decl_stmt>
		<try pos:start="135:17" pos:end="189:17">try <block pos:start="135:21" pos:end="186:17">{<block_content pos:start="136:25" pos:end="185:58">
			<expr_stmt pos:start="136:25" pos:end="136:132"><expr pos:start="136:25" pos:end="136:131"><name pos:start="136:25" pos:end="136:31">service</name> <operator pos:start="136:33" pos:end="136:33">=</operator> <operator pos:start="136:35" pos:end="136:35">(</operator><name pos:start="136:36" pos:end="136:59">IDroneSetupRemoteService</name><operator pos:start="136:60" pos:end="136:60">)</operator> <call pos:start="136:62" pos:end="136:88"><name pos:start="136:62" pos:end="136:86"><name pos:start="136:62" pos:end="136:69">provider</name><operator pos:start="136:70" pos:end="136:70">.</operator><name pos:start="136:71" pos:end="136:86">getRemoteManager</name></name><argument_list pos:start="136:87" pos:end="136:88">()</argument_list></call><operator pos:start="136:89" pos:end="136:89">.</operator><call pos:start="136:90" pos:end="136:131"><name pos:start="136:90" pos:end="136:99">getService</name><argument_list pos:start="136:100" pos:end="136:131">(<argument pos:start="136:101" pos:end="136:130"><expr pos:start="136:101" pos:end="136:130"><name pos:start="136:101" pos:end="136:130"><name pos:start="136:101" pos:end="136:124">IDroneSetupRemoteService</name><operator pos:start="136:125" pos:end="136:125">.</operator><name pos:start="136:126" pos:end="136:130">class</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt pos:start="137:25" pos:end="137:57"><expr pos:start="137:25" pos:end="137:56"><name pos:start="137:25" pos:end="137:30">drones</name> <operator pos:start="137:32" pos:end="137:32">=</operator> <call pos:start="137:34" pos:end="137:56"><name pos:start="137:34" pos:end="137:54"><name pos:start="137:34" pos:end="137:40">service</name><operator pos:start="137:41" pos:end="137:41">.</operator><name pos:start="137:42" pos:end="137:54">getActiveUAVs</name></name><argument_list pos:start="137:55" pos:end="137:56">()</argument_list></call></expr>;</expr_stmt>
			<decl_stmt pos:start="138:25" pos:end="138:42"><decl pos:start="138:25" pos:end="138:41"><type pos:start="138:25" pos:end="138:30"><name pos:start="138:25" pos:end="138:30">double</name></type> <name pos:start="138:32" pos:end="138:37">avgLat</name> <init pos:start="138:39" pos:end="138:41">= <expr pos:start="138:41" pos:end="138:41"><literal type="number" pos:start="138:41" pos:end="138:41">0</literal></expr></init></decl>;</decl_stmt>
			<decl_stmt pos:start="139:25" pos:end="139:42"><decl pos:start="139:25" pos:end="139:41"><type pos:start="139:25" pos:end="139:30"><name pos:start="139:25" pos:end="139:30">double</name></type> <name pos:start="139:32" pos:end="139:37">avgLon</name> <init pos:start="139:39" pos:end="139:41">= <expr pos:start="139:41" pos:end="139:41"><literal type="number" pos:start="139:41" pos:end="139:41">0</literal></expr></init></decl>;</decl_stmt>
			<decl_stmt pos:start="140:25" pos:end="140:42"><decl pos:start="140:25" pos:end="140:41"><type pos:start="140:25" pos:end="140:27"><name pos:start="140:25" pos:end="140:27">int</name></type> <name pos:start="140:29" pos:end="140:37">numPoints</name> <init pos:start="140:39" pos:end="140:41">= <expr pos:start="140:41" pos:end="140:41"><literal type="number" pos:start="140:41" pos:end="140:41">0</literal></expr></init></decl>;</decl_stmt>
			<for pos:start="141:25" pos:end="145:25">for <control pos:start="141:29" pos:end="141:50">(<init pos:start="141:30" pos:end="141:49"><decl pos:start="141:30" pos:end="141:49"><type pos:start="141:30" pos:end="141:38"><name pos:start="141:30" pos:end="141:38">IUAVProxy</name></type> <name pos:start="141:40" pos:end="141:40">e</name> <range pos:start="141:42" pos:end="141:49">: <expr pos:start="141:44" pos:end="141:49"><name pos:start="141:44" pos:end="141:49">drones</name></expr></range></decl></init>)</control> <block pos:start="141:52" pos:end="145:25">{<block_content pos:start="142:33" pos:end="144:44"> <comment type="line" pos:start="141:54" pos:end="141:130">// finding the average latitude and longitude of the drones and flight routes</comment>
				<expr_stmt pos:start="142:33" pos:end="142:58"><expr pos:start="142:33" pos:end="142:57"><name pos:start="142:33" pos:end="142:38">avgLat</name> <operator pos:start="142:40" pos:end="142:41">+=</operator> <call pos:start="142:43" pos:end="142:57"><name pos:start="142:43" pos:end="142:55"><name pos:start="142:43" pos:end="142:43">e</name><operator pos:start="142:44" pos:end="142:44">.</operator><name pos:start="142:45" pos:end="142:55">getLatitude</name></name><argument_list pos:start="142:56" pos:end="142:57">()</argument_list></call></expr>;</expr_stmt>
				<expr_stmt pos:start="143:33" pos:end="143:59"><expr pos:start="143:33" pos:end="143:58"><name pos:start="143:33" pos:end="143:38">avgLon</name> <operator pos:start="143:40" pos:end="143:41">+=</operator> <call pos:start="143:43" pos:end="143:58"><name pos:start="143:43" pos:end="143:56"><name pos:start="143:43" pos:end="143:43">e</name><operator pos:start="143:44" pos:end="143:44">.</operator><name pos:start="143:45" pos:end="143:56">getLongitude</name></name><argument_list pos:start="143:57" pos:end="143:58">()</argument_list></call></expr>;</expr_stmt>
				<expr_stmt pos:start="144:33" pos:end="144:44"><expr pos:start="144:33" pos:end="144:43"><name pos:start="144:33" pos:end="144:41">numPoints</name><operator pos:start="144:42" pos:end="144:43">++</operator></expr>;</expr_stmt>
			</block_content>}</block></for>
			<expr_stmt pos:start="146:25" pos:end="146:82"><expr pos:start="146:25" pos:end="146:81"><name pos:start="146:25" pos:end="146:38">currentFlights</name> <operator pos:start="146:40" pos:end="146:40">=</operator> <call pos:start="146:42" pos:end="146:81"><name pos:start="146:42" pos:end="146:79"><name pos:start="146:42" pos:end="146:61">flightManagerService</name><operator pos:start="146:62" pos:end="146:62">.</operator><name pos:start="146:63" pos:end="146:79">getCurrentFlights</name></name><argument_list pos:start="146:80" pos:end="146:81">()</argument_list></call></expr>;</expr_stmt>
			<for pos:start="147:25" pos:end="154:25">for <control pos:start="147:29" pos:end="147:63">(<init pos:start="147:30" pos:end="147:62"><decl pos:start="147:30" pos:end="147:62"><type pos:start="147:30" pos:end="147:43"><name pos:start="147:30" pos:end="147:43">FlightPlanInfo</name></type> <name pos:start="147:45" pos:end="147:45">e</name> <range pos:start="147:47" pos:end="147:62">: <expr pos:start="147:49" pos:end="147:62"><name pos:start="147:49" pos:end="147:62">currentFlights</name></expr></range></decl></init>)</control> <block pos:start="147:65" pos:end="154:25">{<block_content pos:start="148:33" pos:end="153:33">
				<decl_stmt pos:start="148:33" pos:end="148:78"><decl pos:start="148:33" pos:end="148:77"><type pos:start="148:33" pos:end="148:46"><name pos:start="148:33" pos:end="148:46"><name pos:start="148:33" pos:end="148:36">List</name><argument_list type="generic" pos:start="148:37" pos:end="148:46">&lt;<argument pos:start="148:38" pos:end="148:45"><name pos:start="148:38" pos:end="148:45">Waypoint</name></argument>&gt;</argument_list></name></type> <name pos:start="148:48" pos:end="148:58">coordinates</name> <init pos:start="148:60" pos:end="148:77">= <expr pos:start="148:62" pos:end="148:77"><call pos:start="148:62" pos:end="148:77"><name pos:start="148:62" pos:end="148:75"><name pos:start="148:62" pos:end="148:62">e</name><operator pos:start="148:63" pos:end="148:63">.</operator><name pos:start="148:64" pos:end="148:75">getWaypoints</name></name><argument_list pos:start="148:76" pos:end="148:77">()</argument_list></call></expr></init></decl>;</decl_stmt>
				<for pos:start="149:33" pos:end="153:33">for <control pos:start="149:37" pos:end="149:66">(<init pos:start="149:38" pos:end="149:65"><decl pos:start="149:38" pos:end="149:65"><type pos:start="149:38" pos:end="149:45"><name pos:start="149:38" pos:end="149:45">Waypoint</name></type> <name pos:start="149:47" pos:end="149:51">coord</name> <range pos:start="149:53" pos:end="149:65">: <expr pos:start="149:55" pos:end="149:65"><name pos:start="149:55" pos:end="149:65">coordinates</name></expr></range></decl></init>)</control> <block pos:start="149:68" pos:end="153:33">{<block_content pos:start="150:41" pos:end="152:52">
					<expr_stmt pos:start="150:41" pos:end="150:86"><expr pos:start="150:41" pos:end="150:85"><name pos:start="150:41" pos:end="150:46">avgLat</name> <operator pos:start="150:48" pos:end="150:49">+=</operator> <call pos:start="150:51" pos:end="150:71"><name pos:start="150:51" pos:end="150:69"><name pos:start="150:51" pos:end="150:55">coord</name><operator pos:start="150:56" pos:end="150:56">.</operator><name pos:start="150:57" pos:end="150:69">getCoordinate</name></name><argument_list pos:start="150:70" pos:end="150:71">()</argument_list></call><operator pos:start="150:72" pos:end="150:72">.</operator><call pos:start="150:73" pos:end="150:85"><name pos:start="150:73" pos:end="150:83">getLatitude</name><argument_list pos:start="150:84" pos:end="150:85">()</argument_list></call></expr>;</expr_stmt>
					<expr_stmt pos:start="151:41" pos:end="151:87"><expr pos:start="151:41" pos:end="151:86"><name pos:start="151:41" pos:end="151:46">avgLon</name> <operator pos:start="151:48" pos:end="151:49">+=</operator> <call pos:start="151:51" pos:end="151:71"><name pos:start="151:51" pos:end="151:69"><name pos:start="151:51" pos:end="151:55">coord</name><operator pos:start="151:56" pos:end="151:56">.</operator><name pos:start="151:57" pos:end="151:69">getCoordinate</name></name><argument_list pos:start="151:70" pos:end="151:71">()</argument_list></call><operator pos:start="151:72" pos:end="151:72">.</operator><call pos:start="151:73" pos:end="151:86"><name pos:start="151:73" pos:end="151:84">getLongitude</name><argument_list pos:start="151:85" pos:end="151:86">()</argument_list></call></expr>;</expr_stmt>
					<expr_stmt pos:start="152:41" pos:end="152:52"><expr pos:start="152:41" pos:end="152:51"><name pos:start="152:41" pos:end="152:49">numPoints</name><operator pos:start="152:50" pos:end="152:51">++</operator></expr>;</expr_stmt>
				</block_content>}</block></for>
			</block_content>}</block></for>
			<expr_stmt pos:start="155:25" pos:end="155:52"><expr pos:start="155:25" pos:end="155:51"><name pos:start="155:25" pos:end="155:30">avgLat</name> <operator pos:start="155:32" pos:end="155:33">/=</operator> <operator pos:start="155:35" pos:end="155:35">(</operator><name pos:start="155:36" pos:end="155:44">numPoints</name> <operator pos:start="155:46" pos:end="155:46">*</operator> <literal type="number" pos:start="155:48" pos:end="155:50">1.0</literal><operator pos:start="155:51" pos:end="155:51">)</operator></expr>;</expr_stmt>
			<expr_stmt pos:start="156:25" pos:end="156:52"><expr pos:start="156:25" pos:end="156:51"><name pos:start="156:25" pos:end="156:30">avgLon</name> <operator pos:start="156:32" pos:end="156:33">/=</operator> <operator pos:start="156:35" pos:end="156:35">(</operator><name pos:start="156:36" pos:end="156:44">numPoints</name> <operator pos:start="156:46" pos:end="156:46">*</operator> <literal type="number" pos:start="156:48" pos:end="156:50">1.0</literal><operator pos:start="156:51" pos:end="156:51">)</operator></expr>;</expr_stmt>
			<decl_stmt pos:start="157:25" pos:end="157:47"><decl pos:start="157:25" pos:end="157:46"><type pos:start="157:25" pos:end="157:30"><name pos:start="157:25" pos:end="157:30">double</name></type> <name pos:start="157:32" pos:end="157:42">farthestLat</name> <init pos:start="157:44" pos:end="157:46">= <expr pos:start="157:46" pos:end="157:46"><literal type="number" pos:start="157:46" pos:end="157:46">0</literal></expr></init></decl>;</decl_stmt>
			<decl_stmt pos:start="158:25" pos:end="158:47"><decl pos:start="158:25" pos:end="158:46"><type pos:start="158:25" pos:end="158:30"><name pos:start="158:25" pos:end="158:30">double</name></type> <name pos:start="158:32" pos:end="158:42">farthestLon</name> <init pos:start="158:44" pos:end="158:46">= <expr pos:start="158:46" pos:end="158:46"><literal type="number" pos:start="158:46" pos:end="158:46">0</literal></expr></init></decl>;</decl_stmt> <comment type="line" pos:start="158:49" pos:end="158:93">// finding the farthest point from the center</comment>
			<for pos:start="159:25" pos:end="166:25">for <control pos:start="159:29" pos:end="159:50">(<init pos:start="159:30" pos:end="159:49"><decl pos:start="159:30" pos:end="159:49"><type pos:start="159:30" pos:end="159:38"><name pos:start="159:30" pos:end="159:38">IUAVProxy</name></type> <name pos:start="159:40" pos:end="159:40">e</name> <range pos:start="159:42" pos:end="159:49">: <expr pos:start="159:44" pos:end="159:49"><name pos:start="159:44" pos:end="159:49">drones</name></expr></range></decl></init>)</control> <block pos:start="159:52" pos:end="166:25">{<block_content pos:start="160:33" pos:end="165:33">
				<if_stmt pos:start="160:33" pos:end="162:33"><if pos:start="160:33" pos:end="162:33">if <condition pos:start="160:36" pos:end="160:85">(<expr pos:start="160:37" pos:end="160:84"><call pos:start="160:37" pos:end="160:70"><name pos:start="160:37" pos:end="160:44"><name pos:start="160:37" pos:end="160:40">Math</name><operator pos:start="160:41" pos:end="160:41">.</operator><name pos:start="160:42" pos:end="160:44">abs</name></name><argument_list pos:start="160:45" pos:end="160:70">(<argument pos:start="160:46" pos:end="160:69"><expr pos:start="160:46" pos:end="160:69"><call pos:start="160:46" pos:end="160:60"><name pos:start="160:46" pos:end="160:58"><name pos:start="160:46" pos:end="160:46">e</name><operator pos:start="160:47" pos:end="160:47">.</operator><name pos:start="160:48" pos:end="160:58">getLatitude</name></name><argument_list pos:start="160:59" pos:end="160:60">()</argument_list></call> <operator pos:start="160:62" pos:end="160:62">-</operator> <name pos:start="160:64" pos:end="160:69">avgLat</name></expr></argument>)</argument_list></call> <operator pos:start="160:72" pos:end="160:72">&gt;</operator> <name pos:start="160:74" pos:end="160:84">farthestLat</name></expr>)</condition> <block pos:start="160:87" pos:end="162:33">{<block_content pos:start="161:41" pos:end="161:89">
					<expr_stmt pos:start="161:41" pos:end="161:89"><expr pos:start="161:41" pos:end="161:88"><name pos:start="161:41" pos:end="161:51">farthestLat</name> <operator pos:start="161:53" pos:end="161:53">=</operator> <call pos:start="161:55" pos:end="161:88"><name pos:start="161:55" pos:end="161:62"><name pos:start="161:55" pos:end="161:58">Math</name><operator pos:start="161:59" pos:end="161:59">.</operator><name pos:start="161:60" pos:end="161:62">abs</name></name><argument_list pos:start="161:63" pos:end="161:88">(<argument pos:start="161:64" pos:end="161:87"><expr pos:start="161:64" pos:end="161:87"><call pos:start="161:64" pos:end="161:78"><name pos:start="161:64" pos:end="161:76"><name pos:start="161:64" pos:end="161:64">e</name><operator pos:start="161:65" pos:end="161:65">.</operator><name pos:start="161:66" pos:end="161:76">getLatitude</name></name><argument_list pos:start="161:77" pos:end="161:78">()</argument_list></call> <operator pos:start="161:80" pos:end="161:80">-</operator> <name pos:start="161:82" pos:end="161:87">avgLat</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				</block_content>}</block></if></if_stmt>
				<if_stmt pos:start="163:33" pos:end="165:33"><if pos:start="163:33" pos:end="165:33">if <condition pos:start="163:36" pos:end="163:86">(<expr pos:start="163:37" pos:end="163:85"><call pos:start="163:37" pos:end="163:71"><name pos:start="163:37" pos:end="163:44"><name pos:start="163:37" pos:end="163:40">Math</name><operator pos:start="163:41" pos:end="163:41">.</operator><name pos:start="163:42" pos:end="163:44">abs</name></name><argument_list pos:start="163:45" pos:end="163:71">(<argument pos:start="163:46" pos:end="163:70"><expr pos:start="163:46" pos:end="163:70"><call pos:start="163:46" pos:end="163:61"><name pos:start="163:46" pos:end="163:59"><name pos:start="163:46" pos:end="163:46">e</name><operator pos:start="163:47" pos:end="163:47">.</operator><name pos:start="163:48" pos:end="163:59">getLongitude</name></name><argument_list pos:start="163:60" pos:end="163:61">()</argument_list></call> <operator pos:start="163:63" pos:end="163:63">-</operator> <name pos:start="163:65" pos:end="163:70">avgLon</name></expr></argument>)</argument_list></call> <operator pos:start="163:73" pos:end="163:73">&gt;</operator> <name pos:start="163:75" pos:end="163:85">farthestLon</name></expr>)</condition> <block pos:start="163:88" pos:end="165:33">{<block_content pos:start="164:41" pos:end="164:90">
					<expr_stmt pos:start="164:41" pos:end="164:90"><expr pos:start="164:41" pos:end="164:89"><name pos:start="164:41" pos:end="164:51">farthestLon</name> <operator pos:start="164:53" pos:end="164:53">=</operator> <call pos:start="164:55" pos:end="164:89"><name pos:start="164:55" pos:end="164:62"><name pos:start="164:55" pos:end="164:58">Math</name><operator pos:start="164:59" pos:end="164:59">.</operator><name pos:start="164:60" pos:end="164:62">abs</name></name><argument_list pos:start="164:63" pos:end="164:89">(<argument pos:start="164:64" pos:end="164:88"><expr pos:start="164:64" pos:end="164:88"><call pos:start="164:64" pos:end="164:79"><name pos:start="164:64" pos:end="164:77"><name pos:start="164:64" pos:end="164:64">e</name><operator pos:start="164:65" pos:end="164:65">.</operator><name pos:start="164:66" pos:end="164:77">getLongitude</name></name><argument_list pos:start="164:78" pos:end="164:79">()</argument_list></call> <operator pos:start="164:81" pos:end="164:81">-</operator> <name pos:start="164:83" pos:end="164:88">avgLon</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				</block_content>}</block></if></if_stmt>
			</block_content>}</block></for>
			<for pos:start="167:25" pos:end="177:25">for <control pos:start="167:29" pos:end="167:63">(<init pos:start="167:30" pos:end="167:62"><decl pos:start="167:30" pos:end="167:62"><type pos:start="167:30" pos:end="167:43"><name pos:start="167:30" pos:end="167:43">FlightPlanInfo</name></type> <name pos:start="167:45" pos:end="167:45">e</name> <range pos:start="167:47" pos:end="167:62">: <expr pos:start="167:49" pos:end="167:62"><name pos:start="167:49" pos:end="167:62">currentFlights</name></expr></range></decl></init>)</control> <block pos:start="167:65" pos:end="177:25">{<block_content pos:start="168:33" pos:end="176:33">
				<decl_stmt pos:start="168:33" pos:end="168:78"><decl pos:start="168:33" pos:end="168:77"><type pos:start="168:33" pos:end="168:46"><name pos:start="168:33" pos:end="168:46"><name pos:start="168:33" pos:end="168:36">List</name><argument_list type="generic" pos:start="168:37" pos:end="168:46">&lt;<argument pos:start="168:38" pos:end="168:45"><name pos:start="168:38" pos:end="168:45">Waypoint</name></argument>&gt;</argument_list></name></type> <name pos:start="168:48" pos:end="168:58">coordinates</name> <init pos:start="168:60" pos:end="168:77">= <expr pos:start="168:62" pos:end="168:77"><call pos:start="168:62" pos:end="168:77"><name pos:start="168:62" pos:end="168:75"><name pos:start="168:62" pos:end="168:62">e</name><operator pos:start="168:63" pos:end="168:63">.</operator><name pos:start="168:64" pos:end="168:75">getWaypoints</name></name><argument_list pos:start="168:76" pos:end="168:77">()</argument_list></call></expr></init></decl>;</decl_stmt>
				<for pos:start="169:33" pos:end="176:33">for <control pos:start="169:37" pos:end="169:66">(<init pos:start="169:38" pos:end="169:65"><decl pos:start="169:38" pos:end="169:65"><type pos:start="169:38" pos:end="169:45"><name pos:start="169:38" pos:end="169:45">Waypoint</name></type> <name pos:start="169:47" pos:end="169:51">coord</name> <range pos:start="169:53" pos:end="169:65">: <expr pos:start="169:55" pos:end="169:65"><name pos:start="169:55" pos:end="169:65">coordinates</name></expr></range></decl></init>)</control> <block pos:start="169:68" pos:end="176:33">{<block_content pos:start="170:41" pos:end="175:41">
					<if_stmt pos:start="170:41" pos:end="172:41"><if pos:start="170:41" pos:end="172:41">if <condition pos:start="170:44" pos:end="170:113">(<expr pos:start="170:45" pos:end="170:112"><call pos:start="170:45" pos:end="170:98"><name pos:start="170:45" pos:end="170:52"><name pos:start="170:45" pos:end="170:48">Math</name><operator pos:start="170:49" pos:end="170:49">.</operator><name pos:start="170:50" pos:end="170:52">abs</name></name><argument_list pos:start="170:53" pos:end="170:98">(<argument pos:start="170:54" pos:end="170:97"><expr pos:start="170:54" pos:end="170:97"><call pos:start="170:54" pos:end="170:74"><name pos:start="170:54" pos:end="170:72"><name pos:start="170:54" pos:end="170:58">coord</name><operator pos:start="170:59" pos:end="170:59">.</operator><name pos:start="170:60" pos:end="170:72">getCoordinate</name></name><argument_list pos:start="170:73" pos:end="170:74">()</argument_list></call><operator pos:start="170:75" pos:end="170:75">.</operator><call pos:start="170:76" pos:end="170:88"><name pos:start="170:76" pos:end="170:86">getLatitude</name><argument_list pos:start="170:87" pos:end="170:88">()</argument_list></call> <operator pos:start="170:90" pos:end="170:90">-</operator> <name pos:start="170:92" pos:end="170:97">avgLat</name></expr></argument>)</argument_list></call> <operator pos:start="170:100" pos:end="170:100">&gt;</operator> <name pos:start="170:102" pos:end="170:112">farthestLat</name></expr>)</condition> <block pos:start="170:115" pos:end="172:41">{<block_content pos:start="171:49" pos:end="171:117">
						<expr_stmt pos:start="171:49" pos:end="171:117"><expr pos:start="171:49" pos:end="171:116"><name pos:start="171:49" pos:end="171:59">farthestLat</name> <operator pos:start="171:61" pos:end="171:61">=</operator> <call pos:start="171:63" pos:end="171:116"><name pos:start="171:63" pos:end="171:70"><name pos:start="171:63" pos:end="171:66">Math</name><operator pos:start="171:67" pos:end="171:67">.</operator><name pos:start="171:68" pos:end="171:70">abs</name></name><argument_list pos:start="171:71" pos:end="171:116">(<argument pos:start="171:72" pos:end="171:115"><expr pos:start="171:72" pos:end="171:115"><call pos:start="171:72" pos:end="171:92"><name pos:start="171:72" pos:end="171:90"><name pos:start="171:72" pos:end="171:76">coord</name><operator pos:start="171:77" pos:end="171:77">.</operator><name pos:start="171:78" pos:end="171:90">getCoordinate</name></name><argument_list pos:start="171:91" pos:end="171:92">()</argument_list></call><operator pos:start="171:93" pos:end="171:93">.</operator><call pos:start="171:94" pos:end="171:106"><name pos:start="171:94" pos:end="171:104">getLatitude</name><argument_list pos:start="171:105" pos:end="171:106">()</argument_list></call> <operator pos:start="171:108" pos:end="171:108">-</operator> <name pos:start="171:110" pos:end="171:115">avgLat</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					</block_content>}</block></if></if_stmt>
					<if_stmt pos:start="173:41" pos:end="175:41"><if pos:start="173:41" pos:end="175:41">if <condition pos:start="173:44" pos:end="173:114">(<expr pos:start="173:45" pos:end="173:113"><call pos:start="173:45" pos:end="173:99"><name pos:start="173:45" pos:end="173:52"><name pos:start="173:45" pos:end="173:48">Math</name><operator pos:start="173:49" pos:end="173:49">.</operator><name pos:start="173:50" pos:end="173:52">abs</name></name><argument_list pos:start="173:53" pos:end="173:99">(<argument pos:start="173:54" pos:end="173:98"><expr pos:start="173:54" pos:end="173:98"><call pos:start="173:54" pos:end="173:74"><name pos:start="173:54" pos:end="173:72"><name pos:start="173:54" pos:end="173:58">coord</name><operator pos:start="173:59" pos:end="173:59">.</operator><name pos:start="173:60" pos:end="173:72">getCoordinate</name></name><argument_list pos:start="173:73" pos:end="173:74">()</argument_list></call><operator pos:start="173:75" pos:end="173:75">.</operator><call pos:start="173:76" pos:end="173:89"><name pos:start="173:76" pos:end="173:87">getLongitude</name><argument_list pos:start="173:88" pos:end="173:89">()</argument_list></call> <operator pos:start="173:91" pos:end="173:91">-</operator> <name pos:start="173:93" pos:end="173:98">avgLon</name></expr></argument>)</argument_list></call> <operator pos:start="173:101" pos:end="173:101">&gt;</operator> <name pos:start="173:103" pos:end="173:113">farthestLon</name></expr>)</condition> <block pos:start="173:116" pos:end="175:41">{<block_content pos:start="174:49" pos:end="174:118">
						<expr_stmt pos:start="174:49" pos:end="174:118"><expr pos:start="174:49" pos:end="174:117"><name pos:start="174:49" pos:end="174:59">farthestLon</name> <operator pos:start="174:61" pos:end="174:61">=</operator> <call pos:start="174:63" pos:end="174:117"><name pos:start="174:63" pos:end="174:70"><name pos:start="174:63" pos:end="174:66">Math</name><operator pos:start="174:67" pos:end="174:67">.</operator><name pos:start="174:68" pos:end="174:70">abs</name></name><argument_list pos:start="174:71" pos:end="174:117">(<argument pos:start="174:72" pos:end="174:116"><expr pos:start="174:72" pos:end="174:116"><call pos:start="174:72" pos:end="174:92"><name pos:start="174:72" pos:end="174:90"><name pos:start="174:72" pos:end="174:76">coord</name><operator pos:start="174:77" pos:end="174:77">.</operator><name pos:start="174:78" pos:end="174:90">getCoordinate</name></name><argument_list pos:start="174:91" pos:end="174:92">()</argument_list></call><operator pos:start="174:93" pos:end="174:93">.</operator><call pos:start="174:94" pos:end="174:107"><name pos:start="174:94" pos:end="174:105">getLongitude</name><argument_list pos:start="174:106" pos:end="174:107">()</argument_list></call> <operator pos:start="174:109" pos:end="174:109">-</operator> <name pos:start="174:111" pos:end="174:116">avgLon</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					</block_content>}</block></if></if_stmt>
				</block_content>}</block></for>
			</block_content>}</block></for>
			<decl_stmt pos:start="178:25" pos:end="178:64"><decl pos:start="178:25" pos:end="178:63"><type pos:start="178:25" pos:end="178:29"><name pos:start="178:25" pos:end="178:29">Point</name></type> <name pos:start="178:31" pos:end="178:35">point</name> <init pos:start="178:37" pos:end="178:63">= <expr pos:start="178:39" pos:end="178:63"><operator pos:start="178:39" pos:end="178:41">new</operator> <call pos:start="178:43" pos:end="178:63"><name pos:start="178:43" pos:end="178:47">Point</name><argument_list pos:start="178:48" pos:end="178:63">(<argument pos:start="178:49" pos:end="178:54"><expr pos:start="178:49" pos:end="178:54"><name pos:start="178:49" pos:end="178:54">avgLat</name></expr></argument>, <argument pos:start="178:57" pos:end="178:62"><expr pos:start="178:57" pos:end="178:62"><name pos:start="178:57" pos:end="178:62">avgLon</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<decl_stmt pos:start="179:25" pos:end="179:36"><decl pos:start="179:25" pos:end="179:35"><type pos:start="179:25" pos:end="179:30"><name pos:start="179:25" pos:end="179:30">double</name></type> <name pos:start="179:32" pos:end="179:35">zoom</name></decl>;</decl_stmt>
			<if_stmt pos:start="180:25" pos:end="184:25"><if pos:start="180:25" pos:end="182:25">if <condition pos:start="180:28" pos:end="180:65">(<expr pos:start="180:29" pos:end="180:64"><name pos:start="180:29" pos:end="180:39">farthestLat</name> <operator pos:start="180:41" pos:end="180:42">==</operator> <literal type="number" pos:start="180:44" pos:end="180:44">0</literal> <operator pos:start="180:46" pos:end="180:47">&amp;&amp;</operator> <name pos:start="180:49" pos:end="180:59">farthestLon</name> <operator pos:start="180:61" pos:end="180:62">==</operator> <literal type="number" pos:start="180:64" pos:end="180:64">0</literal></expr>)</condition> <block pos:start="180:67" pos:end="182:25">{<block_content pos:start="181:33" pos:end="181:42">
				<expr_stmt pos:start="181:33" pos:end="181:42"><expr pos:start="181:33" pos:end="181:41"><name pos:start="181:33" pos:end="181:36">zoom</name> <operator pos:start="181:38" pos:end="181:38">=</operator> <literal type="number" pos:start="181:40" pos:end="181:41">14</literal></expr>;</expr_stmt>
			</block_content>}</block></if> <else pos:start="182:27" pos:end="184:25">else <block pos:start="182:32" pos:end="184:25">{<block_content pos:start="183:33" pos:end="183:122"> <comment type="line" pos:start="182:34" pos:end="182:111">// sets the zoom based on the calculation of degrees on the map per zoom level</comment>
				<expr_stmt pos:start="183:33" pos:end="183:122"><expr pos:start="183:33" pos:end="183:121"><name pos:start="183:33" pos:end="183:36">zoom</name> <operator pos:start="183:38" pos:end="183:38">=</operator> <call pos:start="183:40" pos:end="183:121"><name pos:start="183:40" pos:end="183:49"><name pos:start="183:40" pos:end="183:43">Math</name><operator pos:start="183:44" pos:end="183:44">.</operator><name pos:start="183:45" pos:end="183:49">floor</name></name><argument_list pos:start="183:50" pos:end="183:121">(<argument pos:start="183:51" pos:end="183:120"><expr pos:start="183:51" pos:end="183:120"><call pos:start="183:51" pos:end="183:104"><name pos:start="183:51" pos:end="183:60"><name pos:start="183:51" pos:end="183:54">Math</name><operator pos:start="183:55" pos:end="183:55">.</operator><name pos:start="183:56" pos:end="183:60">log10</name></name><argument_list pos:start="183:61" pos:end="183:104">(<argument pos:start="183:62" pos:end="183:103"><expr pos:start="183:62" pos:end="183:103"><literal type="number" pos:start="183:62" pos:end="183:66">180.0</literal> <operator pos:start="183:68" pos:end="183:68">/</operator> <call pos:start="183:70" pos:end="183:103"><name pos:start="183:70" pos:end="183:77"><name pos:start="183:70" pos:end="183:73">Math</name><operator pos:start="183:74" pos:end="183:74">.</operator><name pos:start="183:75" pos:end="183:77">max</name></name><argument_list pos:start="183:78" pos:end="183:103">(<argument pos:start="183:79" pos:end="183:89"><expr pos:start="183:79" pos:end="183:89"><name pos:start="183:79" pos:end="183:89">farthestLat</name></expr></argument>, <argument pos:start="183:92" pos:end="183:102"><expr pos:start="183:92" pos:end="183:102"><name pos:start="183:92" pos:end="183:102">farthestLon</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call> <operator pos:start="183:106" pos:end="183:106">/</operator> <call pos:start="183:108" pos:end="183:120"><name pos:start="183:108" pos:end="183:117"><name pos:start="183:108" pos:end="183:111">Math</name><operator pos:start="183:112" pos:end="183:112">.</operator><name pos:start="183:113" pos:end="183:117">log10</name></name><argument_list pos:start="183:118" pos:end="183:120">(<argument pos:start="183:119" pos:end="183:119"><expr pos:start="183:119" pos:end="183:119"><literal type="number" pos:start="183:119" pos:end="183:119">2</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			</block_content>}</block></else></if_stmt>
			<expr_stmt pos:start="185:25" pos:end="185:58"><expr pos:start="185:25" pos:end="185:57"><call pos:start="185:25" pos:end="185:57"><name pos:start="185:25" pos:end="185:44"><name pos:start="185:25" pos:end="185:34">leafletMap</name><operator pos:start="185:35" pos:end="185:35">.</operator><name pos:start="185:36" pos:end="185:44">setCenter</name></name><argument_list pos:start="185:45" pos:end="185:57">(<argument pos:start="185:46" pos:end="185:50"><expr pos:start="185:46" pos:end="185:50"><name pos:start="185:46" pos:end="185:50">point</name></expr></argument>, <argument pos:start="185:53" pos:end="185:56"><expr pos:start="185:53" pos:end="185:56"><name pos:start="185:53" pos:end="185:56">zoom</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		</block_content>}</block> <catch pos:start="186:19" pos:end="189:17">catch <parameter_list pos:start="186:25" pos:end="186:72">(<parameter pos:start="186:26" pos:end="186:71"><decl pos:start="186:26" pos:end="186:71"><type pos:start="186:26" pos:end="186:40"><name pos:start="186:26" pos:end="186:40">RemoteException</name></type> | <type pos:start="186:44" pos:end="186:71"><name pos:start="186:44" pos:end="186:68">DronologyServiceException</name></type> <name pos:start="186:70" pos:end="186:71">e1</name></decl></parameter>)</parameter_list> <block pos:start="186:74" pos:end="189:17">{<block_content pos:start="187:25" pos:end="188:45">
			<expr_stmt pos:start="187:25" pos:end="187:49"><expr pos:start="187:25" pos:end="187:48"><call pos:start="187:25" pos:end="187:48"><name pos:start="187:25" pos:end="187:41"><name pos:start="187:25" pos:end="187:28">MyUI</name><operator pos:start="187:29" pos:end="187:29">.</operator><name pos:start="187:30" pos:end="187:41">setConnected</name></name><argument_list pos:start="187:42" pos:end="187:48">(<argument pos:start="187:43" pos:end="187:47"><expr pos:start="187:43" pos:end="187:47"><literal type="boolean" pos:start="187:43" pos:end="187:47">false</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt pos:start="188:25" pos:end="188:45"><expr pos:start="188:25" pos:end="188:44"><call pos:start="188:25" pos:end="188:44"><name pos:start="188:25" pos:end="188:42"><name pos:start="188:25" pos:end="188:26">e1</name><operator pos:start="188:27" pos:end="188:27">.</operator><name pos:start="188:28" pos:end="188:42">printStackTrace</name></name><argument_list pos:start="188:43" pos:end="188:44">()</argument_list></call></expr>;</expr_stmt>
		</block_content>}</block></catch></try> 
		<if_stmt pos:start="190:17" pos:end="194:17"><if pos:start="190:17" pos:end="194:17">if <condition pos:start="190:20" pos:end="190:38">(<expr pos:start="190:21" pos:end="190:37"><call pos:start="190:21" pos:end="190:33"><name pos:start="190:21" pos:end="190:31"><name pos:start="190:21" pos:end="190:26">drones</name><operator pos:start="190:27" pos:end="190:27">.</operator><name pos:start="190:28" pos:end="190:31">size</name></name><argument_list pos:start="190:32" pos:end="190:33">()</argument_list></call> <operator pos:start="190:35" pos:end="190:35">&lt;</operator> <literal type="number" pos:start="190:37" pos:end="190:37">1</literal></expr>)</condition> <block pos:start="190:40" pos:end="194:17">{<block_content pos:start="191:25" pos:end="193:58">
			<decl_stmt pos:start="191:25" pos:end="191:114"><decl pos:start="191:25" pos:end="191:113"><type pos:start="191:25" pos:end="191:29"><name pos:start="191:25" pos:end="191:29">Point</name></type> <name pos:start="191:31" pos:end="191:35">point</name> <init pos:start="191:37" pos:end="191:113">= <expr pos:start="191:39" pos:end="191:113"><operator pos:start="191:39" pos:end="191:41">new</operator> <call pos:start="191:43" pos:end="191:113"><name pos:start="191:43" pos:end="191:47">Point</name><argument_list pos:start="191:48" pos:end="191:113">(<argument pos:start="191:49" pos:end="191:79"><expr pos:start="191:49" pos:end="191:79"><call pos:start="191:49" pos:end="191:79"><name pos:start="191:49" pos:end="191:77"><name pos:start="191:49" pos:end="191:61">configuration</name><operator pos:start="191:62" pos:end="191:62">.</operator><name pos:start="191:63" pos:end="191:77">getMapCenterLat</name></name><argument_list pos:start="191:78" pos:end="191:79">()</argument_list></call></expr></argument>, <argument pos:start="191:82" pos:end="191:112"><expr pos:start="191:82" pos:end="191:112"><call pos:start="191:82" pos:end="191:112"><name pos:start="191:82" pos:end="191:110"><name pos:start="191:82" pos:end="191:94">configuration</name><operator pos:start="191:95" pos:end="191:95">.</operator><name pos:start="191:96" pos:end="191:110">getMapCenterLon</name></name><argument_list pos:start="191:111" pos:end="191:112">()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<decl_stmt pos:start="192:25" pos:end="192:72"><decl pos:start="192:25" pos:end="192:71"><type pos:start="192:25" pos:end="192:30"><name pos:start="192:25" pos:end="192:30">double</name></type> <name pos:start="192:32" pos:end="192:35">zoom</name> <init pos:start="192:37" pos:end="192:71">= <expr pos:start="192:39" pos:end="192:71"><call pos:start="192:39" pos:end="192:71"><name pos:start="192:39" pos:end="192:69"><name pos:start="192:39" pos:end="192:51">configuration</name><operator pos:start="192:52" pos:end="192:52">.</operator><name pos:start="192:53" pos:end="192:69">getMapDefaultZoom</name></name><argument_list pos:start="192:70" pos:end="192:71">()</argument_list></call></expr></init></decl>;</decl_stmt>
			<expr_stmt pos:start="193:25" pos:end="193:58"><expr pos:start="193:25" pos:end="193:57"><call pos:start="193:25" pos:end="193:57"><name pos:start="193:25" pos:end="193:44"><name pos:start="193:25" pos:end="193:34">leafletMap</name><operator pos:start="193:35" pos:end="193:35">.</operator><name pos:start="193:36" pos:end="193:44">setCenter</name></name><argument_list pos:start="193:45" pos:end="193:57">(<argument pos:start="193:46" pos:end="193:50"><expr pos:start="193:46" pos:end="193:50"><name pos:start="193:46" pos:end="193:50">point</name></expr></argument>, <argument pos:start="193:53" pos:end="193:56"><expr pos:start="193:53" pos:end="193:56"><name pos:start="193:53" pos:end="193:56">zoom</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		</block_content>}</block></if></if_stmt>

	</block_content>}</block></function>

	<comment type="block" format="javadoc" pos:start="198:9" pos:end="200:11">/**
	 * @return follow is a boolean variable that is true when the map is following drones
	 */</comment>
	<function pos:start="201:9" pos:end="203:9"><type pos:start="201:9" pos:end="201:22"><specifier pos:start="201:9" pos:end="201:14">public</specifier> <name pos:start="201:16" pos:end="201:22">boolean</name></type> <name pos:start="201:24" pos:end="201:32">getFollow</name><parameter_list pos:start="201:33" pos:end="201:34">()</parameter_list> <block pos:start="201:36" pos:end="203:9">{<block_content pos:start="202:17" pos:end="202:35">
		<return pos:start="202:17" pos:end="202:35">return <expr pos:start="202:24" pos:end="202:34"><name pos:start="202:24" pos:end="202:34"><name pos:start="202:24" pos:end="202:27">this</name><operator pos:start="202:28" pos:end="202:28">.</operator><name pos:start="202:29" pos:end="202:34">follow</name></name></expr>;</return>
	</block_content>}</block></function>

	<function pos:start="205:9" pos:end="207:9"><type pos:start="205:9" pos:end="205:19"><specifier pos:start="205:9" pos:end="205:14">public</specifier> <name pos:start="205:16" pos:end="205:19">void</name></type> <name pos:start="205:21" pos:end="205:29">setFollow</name><parameter_list pos:start="205:30" pos:end="205:45">(<parameter pos:start="205:31" pos:end="205:44"><decl pos:start="205:31" pos:end="205:44"><type pos:start="205:31" pos:end="205:37"><name pos:start="205:31" pos:end="205:37">boolean</name></type> <name pos:start="205:39" pos:end="205:44">follow</name></decl></parameter>)</parameter_list> <block pos:start="205:47" pos:end="207:9">{<block_content pos:start="206:17" pos:end="206:37">
		<expr_stmt pos:start="206:17" pos:end="206:37"><expr pos:start="206:17" pos:end="206:36"><name pos:start="206:17" pos:end="206:27"><name pos:start="206:17" pos:end="206:20">this</name><operator pos:start="206:21" pos:end="206:21">.</operator><name pos:start="206:22" pos:end="206:27">follow</name></name> <operator pos:start="206:29" pos:end="206:29">=</operator> <name pos:start="206:31" pos:end="206:36">follow</name></expr>;</expr_stmt>
	</block_content>}</block></function>

	<comment type="block" format="javadoc" pos:start="209:9" pos:end="211:11">/**
	 * @return followZoom determines whether the map should zoom in on the drones in follow mode. Only happens once initially when the user clicks the button to follow the drones on the map.
	 */</comment>
	<function pos:start="212:9" pos:end="214:9"><type pos:start="212:9" pos:end="212:22"><specifier pos:start="212:9" pos:end="212:14">public</specifier> <name pos:start="212:16" pos:end="212:22">boolean</name></type> <name pos:start="212:24" pos:end="212:36">getFollowZoom</name><parameter_list pos:start="212:37" pos:end="212:38">()</parameter_list> <block pos:start="212:40" pos:end="214:9">{<block_content pos:start="213:17" pos:end="213:39">
		<return pos:start="213:17" pos:end="213:39">return <expr pos:start="213:24" pos:end="213:38"><name pos:start="213:24" pos:end="213:38"><name pos:start="213:24" pos:end="213:27">this</name><operator pos:start="213:28" pos:end="213:28">.</operator><name pos:start="213:29" pos:end="213:38">followZoom</name></name></expr>;</return>
	</block_content>}</block></function>

	<function pos:start="216:9" pos:end="218:9"><type pos:start="216:9" pos:end="216:19"><specifier pos:start="216:9" pos:end="216:14">public</specifier> <name pos:start="216:16" pos:end="216:19">void</name></type> <name pos:start="216:21" pos:end="216:33">setFollowZoom</name><parameter_list pos:start="216:34" pos:end="216:53">(<parameter pos:start="216:35" pos:end="216:52"><decl pos:start="216:35" pos:end="216:52"><type pos:start="216:35" pos:end="216:41"><name pos:start="216:35" pos:end="216:41">boolean</name></type> <name pos:start="216:43" pos:end="216:52">followZoom</name></decl></parameter>)</parameter_list> <block pos:start="216:55" pos:end="218:9">{<block_content pos:start="217:17" pos:end="217:45">
		<expr_stmt pos:start="217:17" pos:end="217:45"><expr pos:start="217:17" pos:end="217:44"><name pos:start="217:17" pos:end="217:31"><name pos:start="217:17" pos:end="217:20">this</name><operator pos:start="217:21" pos:end="217:21">.</operator><name pos:start="217:22" pos:end="217:31">followZoom</name></name> <operator pos:start="217:33" pos:end="217:33">=</operator> <name pos:start="217:35" pos:end="217:44">followZoom</name></expr>;</expr_stmt>
	</block_content>}</block></function>

	<comment type="block" format="javadoc" pos:start="220:9" pos:end="225:11">/**
	 * This function sets the center of the map as an average of the drones that it is following. This will constantly change as each drone flies.
	 * 
	 * @param names
	 *          The list of drone names that the map should be following
	 */</comment>
	<function pos:start="226:9" pos:end="307:9"><type pos:start="226:9" pos:end="226:19"><specifier pos:start="226:9" pos:end="226:14">public</specifier> <name pos:start="226:16" pos:end="226:19">void</name></type> <name pos:start="226:21" pos:end="226:32">followDrones</name><parameter_list pos:start="226:33" pos:end="226:52">(<parameter pos:start="226:34" pos:end="226:51"><decl pos:start="226:34" pos:end="226:51"><type pos:start="226:34" pos:end="226:45"><name pos:start="226:34" pos:end="226:45"><name pos:start="226:34" pos:end="226:37">List</name><argument_list type="generic" pos:start="226:38" pos:end="226:45">&lt;<argument pos:start="226:39" pos:end="226:44"><name pos:start="226:39" pos:end="226:44">String</name></argument>&gt;</argument_list></name></type> <name pos:start="226:47" pos:end="226:51">names</name></decl></parameter>)</parameter_list> <block pos:start="226:54" pos:end="307:9">{<block_content pos:start="227:17" pos:end="306:17">
		<if_stmt pos:start="227:17" pos:end="235:17"><if pos:start="227:17" pos:end="235:17">if <condition pos:start="227:20" pos:end="227:37">(<expr pos:start="227:21" pos:end="227:36"><call pos:start="227:21" pos:end="227:32"><name pos:start="227:21" pos:end="227:30"><name pos:start="227:21" pos:end="227:25">names</name><operator pos:start="227:26" pos:end="227:26">.</operator><name pos:start="227:27" pos:end="227:30">size</name></name><argument_list pos:start="227:31" pos:end="227:32">()</argument_list></call> <operator pos:start="227:34" pos:end="227:34">&lt;</operator> <literal type="number" pos:start="227:36" pos:end="227:36">1</literal></expr>)</condition> <block pos:start="227:39" pos:end="235:17">{<block_content pos:start="228:25" pos:end="234:31">
			<expr_stmt pos:start="228:25" pos:end="228:44"><expr pos:start="228:25" pos:end="228:43"><name pos:start="228:25" pos:end="228:35"><name pos:start="228:25" pos:end="228:28">this</name><operator pos:start="228:29" pos:end="228:29">.</operator><name pos:start="228:30" pos:end="228:35">follow</name></name> <operator pos:start="228:37" pos:end="228:37">=</operator> <literal type="boolean" pos:start="228:39" pos:end="228:43">false</literal></expr>;</expr_stmt>
			<if_stmt pos:start="229:25" pos:end="233:25"><if pos:start="229:25" pos:end="233:25">if <condition pos:start="229:28" pos:end="229:68">(<expr pos:start="229:29" pos:end="229:67"><call pos:start="229:29" pos:end="229:61"><name pos:start="229:29" pos:end="229:53"><name pos:start="229:29" pos:end="229:35">content</name><operator pos:start="229:36" pos:end="229:36">.</operator><name pos:start="229:37" pos:end="229:53">getComponentIndex</name></name><argument_list pos:start="229:54" pos:end="229:61">(<argument pos:start="229:55" pos:end="229:60"><expr pos:start="229:55" pos:end="229:60"><name pos:start="229:55" pos:end="229:60">layout</name></expr></argument>)</argument_list></call> <operator pos:start="229:63" pos:end="229:64">==</operator> <operator pos:start="229:66" pos:end="229:66">-</operator><literal type="number" pos:start="229:67" pos:end="229:67">1</literal></expr>)</condition> <block pos:start="229:70" pos:end="233:25">{<block_content pos:start="230:33" pos:end="232:61"> <comment type="line" pos:start="229:72" pos:end="229:95">// if not in follow mode</comment>
				<expr_stmt pos:start="230:33" pos:end="230:62"><expr pos:start="230:33" pos:end="230:61"><call pos:start="230:33" pos:end="230:61"><name pos:start="230:33" pos:end="230:59"><name pos:start="230:33" pos:end="230:39">content</name><operator pos:start="230:40" pos:end="230:40">.</operator><name pos:start="230:41" pos:end="230:59">removeAllComponents</name></name><argument_list pos:start="230:60" pos:end="230:61">()</argument_list></call></expr>;</expr_stmt>
				<expr_stmt pos:start="231:33" pos:end="231:87"><expr pos:start="231:33" pos:end="231:86"><call pos:start="231:33" pos:end="231:86"><name pos:start="231:33" pos:end="231:58"><name pos:start="231:33" pos:end="231:42">leafletMap</name><operator pos:start="231:43" pos:end="231:43">.</operator><name pos:start="231:44" pos:end="231:58">removeStyleName</name></name><argument_list pos:start="231:59" pos:end="231:86">(<argument pos:start="231:60" pos:end="231:85"><expr pos:start="231:60" pos:end="231:85"><literal type="string" pos:start="231:60" pos:end="231:85">"af_leaflet_map_edit_mode"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<expr_stmt pos:start="232:33" pos:end="232:61"><expr pos:start="232:33" pos:end="232:60"><call pos:start="232:33" pos:end="232:60"><name pos:start="232:33" pos:end="232:52"><name pos:start="232:33" pos:end="232:39">content</name><operator pos:start="232:40" pos:end="232:40">.</operator><name pos:start="232:41" pos:end="232:52">addComponent</name></name><argument_list pos:start="232:53" pos:end="232:60">(<argument pos:start="232:54" pos:end="232:59"><expr pos:start="232:54" pos:end="232:59"><name pos:start="232:54" pos:end="232:59">layout</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			</block_content>}</block></if></if_stmt>
			<return pos:start="234:25" pos:end="234:31">return;</return>
		</block_content>}</block></if></if_stmt>
		<if_stmt pos:start="236:17" pos:end="243:17"><if pos:start="236:17" pos:end="243:17">if <condition pos:start="236:20" pos:end="236:41">(<expr pos:start="236:21" pos:end="236:40"><name pos:start="236:21" pos:end="236:31"><name pos:start="236:21" pos:end="236:24">this</name><operator pos:start="236:25" pos:end="236:25">.</operator><name pos:start="236:26" pos:end="236:31">follow</name></name> <operator pos:start="236:33" pos:end="236:34">==</operator> <literal type="boolean" pos:start="236:36" pos:end="236:40">false</literal></expr>)</condition> <block pos:start="236:43" pos:end="243:17">{<block_content pos:start="237:25" pos:end="242:31">
			<if_stmt pos:start="237:25" pos:end="241:25"><if pos:start="237:25" pos:end="241:25">if <condition pos:start="237:28" pos:end="237:68">(<expr pos:start="237:29" pos:end="237:67"><call pos:start="237:29" pos:end="237:61"><name pos:start="237:29" pos:end="237:53"><name pos:start="237:29" pos:end="237:35">content</name><operator pos:start="237:36" pos:end="237:36">.</operator><name pos:start="237:37" pos:end="237:53">getComponentIndex</name></name><argument_list pos:start="237:54" pos:end="237:61">(<argument pos:start="237:55" pos:end="237:60"><expr pos:start="237:55" pos:end="237:60"><name pos:start="237:55" pos:end="237:60">layout</name></expr></argument>)</argument_list></call> <operator pos:start="237:63" pos:end="237:64">==</operator> <operator pos:start="237:66" pos:end="237:66">-</operator><literal type="number" pos:start="237:67" pos:end="237:67">1</literal></expr>)</condition> <block pos:start="237:70" pos:end="241:25">{<block_content pos:start="238:33" pos:end="240:61"> <comment type="line" pos:start="237:72" pos:end="237:95">// if not in follow mode</comment>
				<expr_stmt pos:start="238:33" pos:end="238:62"><expr pos:start="238:33" pos:end="238:61"><call pos:start="238:33" pos:end="238:61"><name pos:start="238:33" pos:end="238:59"><name pos:start="238:33" pos:end="238:39">content</name><operator pos:start="238:40" pos:end="238:40">.</operator><name pos:start="238:41" pos:end="238:59">removeAllComponents</name></name><argument_list pos:start="238:60" pos:end="238:61">()</argument_list></call></expr>;</expr_stmt>
				<expr_stmt pos:start="239:33" pos:end="239:87"><expr pos:start="239:33" pos:end="239:86"><call pos:start="239:33" pos:end="239:86"><name pos:start="239:33" pos:end="239:58"><name pos:start="239:33" pos:end="239:42">leafletMap</name><operator pos:start="239:43" pos:end="239:43">.</operator><name pos:start="239:44" pos:end="239:58">removeStyleName</name></name><argument_list pos:start="239:59" pos:end="239:86">(<argument pos:start="239:60" pos:end="239:85"><expr pos:start="239:60" pos:end="239:85"><literal type="string" pos:start="239:60" pos:end="239:85">"af_leaflet_map_edit_mode"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<expr_stmt pos:start="240:33" pos:end="240:61"><expr pos:start="240:33" pos:end="240:60"><call pos:start="240:33" pos:end="240:60"><name pos:start="240:33" pos:end="240:52"><name pos:start="240:33" pos:end="240:39">content</name><operator pos:start="240:40" pos:end="240:40">.</operator><name pos:start="240:41" pos:end="240:52">addComponent</name></name><argument_list pos:start="240:53" pos:end="240:60">(<argument pos:start="240:54" pos:end="240:59"><expr pos:start="240:54" pos:end="240:59"><name pos:start="240:54" pos:end="240:59">layout</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			</block_content>}</block></if></if_stmt>
			<return pos:start="242:25" pos:end="242:31">return;</return>
		</block_content>}</block></if></if_stmt>
		<try pos:start="244:17" pos:end="306:17">try <block pos:start="244:21" pos:end="303:17">{<block_content pos:start="245:25" pos:end="302:25">
			<expr_stmt pos:start="245:25" pos:end="245:132"><expr pos:start="245:25" pos:end="245:131"><name pos:start="245:25" pos:end="245:31">service</name> <operator pos:start="245:33" pos:end="245:33">=</operator> <operator pos:start="245:35" pos:end="245:35">(</operator><name pos:start="245:36" pos:end="245:59">IDroneSetupRemoteService</name><operator pos:start="245:60" pos:end="245:60">)</operator> <call pos:start="245:62" pos:end="245:88"><name pos:start="245:62" pos:end="245:86"><name pos:start="245:62" pos:end="245:69">provider</name><operator pos:start="245:70" pos:end="245:70">.</operator><name pos:start="245:71" pos:end="245:86">getRemoteManager</name></name><argument_list pos:start="245:87" pos:end="245:88">()</argument_list></call><operator pos:start="245:89" pos:end="245:89">.</operator><call pos:start="245:90" pos:end="245:131"><name pos:start="245:90" pos:end="245:99">getService</name><argument_list pos:start="245:100" pos:end="245:131">(<argument pos:start="245:101" pos:end="245:130"><expr pos:start="245:101" pos:end="245:130"><name pos:start="245:101" pos:end="245:130"><name pos:start="245:101" pos:end="245:124">IDroneSetupRemoteService</name><operator pos:start="245:125" pos:end="245:125">.</operator><name pos:start="245:126" pos:end="245:130">class</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt pos:start="246:25" pos:end="246:57"><expr pos:start="246:25" pos:end="246:56"><name pos:start="246:25" pos:end="246:30">drones</name> <operator pos:start="246:32" pos:end="246:32">=</operator> <call pos:start="246:34" pos:end="246:56"><name pos:start="246:34" pos:end="246:54"><name pos:start="246:34" pos:end="246:40">service</name><operator pos:start="246:41" pos:end="246:41">.</operator><name pos:start="246:42" pos:end="246:54">getActiveUAVs</name></name><argument_list pos:start="246:55" pos:end="246:56">()</argument_list></call></expr>;</expr_stmt>
			<decl_stmt pos:start="247:25" pos:end="247:42"><decl pos:start="247:25" pos:end="247:41"><type pos:start="247:25" pos:end="247:30"><name pos:start="247:25" pos:end="247:30">double</name></type> <name pos:start="247:32" pos:end="247:37">avgLat</name> <init pos:start="247:39" pos:end="247:41">= <expr pos:start="247:41" pos:end="247:41"><literal type="number" pos:start="247:41" pos:end="247:41">0</literal></expr></init></decl>;</decl_stmt> <comment type="line" pos:start="247:44" pos:end="247:86">// finds the average latitude and longitude</comment>
			<decl_stmt pos:start="248:25" pos:end="248:42"><decl pos:start="248:25" pos:end="248:41"><type pos:start="248:25" pos:end="248:30"><name pos:start="248:25" pos:end="248:30">double</name></type> <name pos:start="248:32" pos:end="248:37">avgLon</name> <init pos:start="248:39" pos:end="248:41">= <expr pos:start="248:41" pos:end="248:41"><literal type="number" pos:start="248:41" pos:end="248:41">0</literal></expr></init></decl>;</decl_stmt>
			<decl_stmt pos:start="249:25" pos:end="249:42"><decl pos:start="249:25" pos:end="249:41"><type pos:start="249:25" pos:end="249:27"><name pos:start="249:25" pos:end="249:27">int</name></type> <name pos:start="249:29" pos:end="249:37">numPoints</name> <init pos:start="249:39" pos:end="249:41">= <expr pos:start="249:41" pos:end="249:41"><literal type="number" pos:start="249:41" pos:end="249:41">0</literal></expr></init></decl>;</decl_stmt>
			<for pos:start="250:25" pos:end="258:25">for <control pos:start="250:29" pos:end="250:50">(<init pos:start="250:30" pos:end="250:49"><decl pos:start="250:30" pos:end="250:49"><type pos:start="250:30" pos:end="250:38"><name pos:start="250:30" pos:end="250:38">IUAVProxy</name></type> <name pos:start="250:40" pos:end="250:40">e</name> <range pos:start="250:42" pos:end="250:49">: <expr pos:start="250:44" pos:end="250:49"><name pos:start="250:44" pos:end="250:49">drones</name></expr></range></decl></init>)</control> <block pos:start="250:52" pos:end="258:25">{<block_content pos:start="251:33" pos:end="257:33">
				<for pos:start="251:33" pos:end="257:33">for <control pos:start="251:37" pos:end="251:57">(<init pos:start="251:38" pos:end="251:56"><decl pos:start="251:38" pos:end="251:56"><type pos:start="251:38" pos:end="251:43"><name pos:start="251:38" pos:end="251:43">String</name></type> <name pos:start="251:45" pos:end="251:48">name</name> <range pos:start="251:50" pos:end="251:56">: <expr pos:start="251:52" pos:end="251:56"><name pos:start="251:52" pos:end="251:56">names</name></expr></range></decl></init>)</control> <block pos:start="251:59" pos:end="257:33">{<block_content pos:start="252:41" pos:end="256:41">
					<if_stmt pos:start="252:41" pos:end="256:41"><if pos:start="252:41" pos:end="256:41">if <condition pos:start="252:44" pos:end="252:67">(<expr pos:start="252:45" pos:end="252:66"><call pos:start="252:45" pos:end="252:53"><name pos:start="252:45" pos:end="252:51"><name pos:start="252:45" pos:end="252:45">e</name><operator pos:start="252:46" pos:end="252:46">.</operator><name pos:start="252:47" pos:end="252:51">getID</name></name><argument_list pos:start="252:52" pos:end="252:53">()</argument_list></call><operator pos:start="252:54" pos:end="252:54">.</operator><call pos:start="252:55" pos:end="252:66"><name pos:start="252:55" pos:end="252:60">equals</name><argument_list pos:start="252:61" pos:end="252:66">(<argument pos:start="252:62" pos:end="252:65"><expr pos:start="252:62" pos:end="252:65"><name pos:start="252:62" pos:end="252:65">name</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="252:69" pos:end="256:41">{<block_content pos:start="253:49" pos:end="255:60">
						<expr_stmt pos:start="253:49" pos:end="253:74"><expr pos:start="253:49" pos:end="253:73"><name pos:start="253:49" pos:end="253:54">avgLat</name> <operator pos:start="253:56" pos:end="253:57">+=</operator> <call pos:start="253:59" pos:end="253:73"><name pos:start="253:59" pos:end="253:71"><name pos:start="253:59" pos:end="253:59">e</name><operator pos:start="253:60" pos:end="253:60">.</operator><name pos:start="253:61" pos:end="253:71">getLatitude</name></name><argument_list pos:start="253:72" pos:end="253:73">()</argument_list></call></expr>;</expr_stmt>
						<expr_stmt pos:start="254:49" pos:end="254:75"><expr pos:start="254:49" pos:end="254:74"><name pos:start="254:49" pos:end="254:54">avgLon</name> <operator pos:start="254:56" pos:end="254:57">+=</operator> <call pos:start="254:59" pos:end="254:74"><name pos:start="254:59" pos:end="254:72"><name pos:start="254:59" pos:end="254:59">e</name><operator pos:start="254:60" pos:end="254:60">.</operator><name pos:start="254:61" pos:end="254:72">getLongitude</name></name><argument_list pos:start="254:73" pos:end="254:74">()</argument_list></call></expr>;</expr_stmt>
						<expr_stmt pos:start="255:49" pos:end="255:60"><expr pos:start="255:49" pos:end="255:59"><name pos:start="255:49" pos:end="255:57">numPoints</name><operator pos:start="255:58" pos:end="255:59">++</operator></expr>;</expr_stmt>
					</block_content>}</block></if></if_stmt>
				</block_content>}</block></for>
			</block_content>}</block></for>
			<expr_stmt pos:start="259:25" pos:end="259:52"><expr pos:start="259:25" pos:end="259:51"><name pos:start="259:25" pos:end="259:30">avgLat</name> <operator pos:start="259:32" pos:end="259:33">/=</operator> <operator pos:start="259:35" pos:end="259:35">(</operator><name pos:start="259:36" pos:end="259:44">numPoints</name> <operator pos:start="259:46" pos:end="259:46">*</operator> <literal type="number" pos:start="259:48" pos:end="259:50">1.0</literal><operator pos:start="259:51" pos:end="259:51">)</operator></expr>;</expr_stmt>
			<expr_stmt pos:start="260:25" pos:end="260:52"><expr pos:start="260:25" pos:end="260:51"><name pos:start="260:25" pos:end="260:30">avgLon</name> <operator pos:start="260:32" pos:end="260:33">/=</operator> <operator pos:start="260:35" pos:end="260:35">(</operator><name pos:start="260:36" pos:end="260:44">numPoints</name> <operator pos:start="260:46" pos:end="260:46">*</operator> <literal type="number" pos:start="260:48" pos:end="260:50">1.0</literal><operator pos:start="260:51" pos:end="260:51">)</operator></expr>;</expr_stmt>
			<decl_stmt pos:start="261:25" pos:end="261:47"><decl pos:start="261:25" pos:end="261:46"><type pos:start="261:25" pos:end="261:30"><name pos:start="261:25" pos:end="261:30">double</name></type> <name pos:start="261:32" pos:end="261:42">farthestLat</name> <init pos:start="261:44" pos:end="261:46">= <expr pos:start="261:46" pos:end="261:46"><literal type="number" pos:start="261:46" pos:end="261:46">0</literal></expr></init></decl>;</decl_stmt> <comment type="line" pos:start="261:49" pos:end="261:91">// finds the farthest point from the center</comment>
			<decl_stmt pos:start="262:25" pos:end="262:47"><decl pos:start="262:25" pos:end="262:46"><type pos:start="262:25" pos:end="262:30"><name pos:start="262:25" pos:end="262:30">double</name></type> <name pos:start="262:32" pos:end="262:42">farthestLon</name> <init pos:start="262:44" pos:end="262:46">= <expr pos:start="262:46" pos:end="262:46"><literal type="number" pos:start="262:46" pos:end="262:46">0</literal></expr></init></decl>;</decl_stmt>
			<for pos:start="263:25" pos:end="274:25">for <control pos:start="263:29" pos:end="263:50">(<init pos:start="263:30" pos:end="263:49"><decl pos:start="263:30" pos:end="263:49"><type pos:start="263:30" pos:end="263:38"><name pos:start="263:30" pos:end="263:38">IUAVProxy</name></type> <name pos:start="263:40" pos:end="263:40">e</name> <range pos:start="263:42" pos:end="263:49">: <expr pos:start="263:44" pos:end="263:49"><name pos:start="263:44" pos:end="263:49">drones</name></expr></range></decl></init>)</control> <block pos:start="263:52" pos:end="274:25">{<block_content pos:start="264:33" pos:end="273:33">
				<for pos:start="264:33" pos:end="273:33">for <control pos:start="264:37" pos:end="264:57">(<init pos:start="264:38" pos:end="264:56"><decl pos:start="264:38" pos:end="264:56"><type pos:start="264:38" pos:end="264:43"><name pos:start="264:38" pos:end="264:43">String</name></type> <name pos:start="264:45" pos:end="264:48">name</name> <range pos:start="264:50" pos:end="264:56">: <expr pos:start="264:52" pos:end="264:56"><name pos:start="264:52" pos:end="264:56">names</name></expr></range></decl></init>)</control> <block pos:start="264:59" pos:end="273:33">{<block_content pos:start="265:41" pos:end="272:41">
					<if_stmt pos:start="265:41" pos:end="272:41"><if pos:start="265:41" pos:end="272:41">if <condition pos:start="265:44" pos:end="265:67">(<expr pos:start="265:45" pos:end="265:66"><call pos:start="265:45" pos:end="265:53"><name pos:start="265:45" pos:end="265:51"><name pos:start="265:45" pos:end="265:45">e</name><operator pos:start="265:46" pos:end="265:46">.</operator><name pos:start="265:47" pos:end="265:51">getID</name></name><argument_list pos:start="265:52" pos:end="265:53">()</argument_list></call><operator pos:start="265:54" pos:end="265:54">.</operator><call pos:start="265:55" pos:end="265:66"><name pos:start="265:55" pos:end="265:60">equals</name><argument_list pos:start="265:61" pos:end="265:66">(<argument pos:start="265:62" pos:end="265:65"><expr pos:start="265:62" pos:end="265:65"><name pos:start="265:62" pos:end="265:65">name</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="265:69" pos:end="272:41">{<block_content pos:start="266:49" pos:end="271:49">
						<if_stmt pos:start="266:49" pos:end="268:49"><if pos:start="266:49" pos:end="268:49">if <condition pos:start="266:52" pos:end="266:101">(<expr pos:start="266:53" pos:end="266:100"><call pos:start="266:53" pos:end="266:86"><name pos:start="266:53" pos:end="266:60"><name pos:start="266:53" pos:end="266:56">Math</name><operator pos:start="266:57" pos:end="266:57">.</operator><name pos:start="266:58" pos:end="266:60">abs</name></name><argument_list pos:start="266:61" pos:end="266:86">(<argument pos:start="266:62" pos:end="266:85"><expr pos:start="266:62" pos:end="266:85"><call pos:start="266:62" pos:end="266:76"><name pos:start="266:62" pos:end="266:74"><name pos:start="266:62" pos:end="266:62">e</name><operator pos:start="266:63" pos:end="266:63">.</operator><name pos:start="266:64" pos:end="266:74">getLatitude</name></name><argument_list pos:start="266:75" pos:end="266:76">()</argument_list></call> <operator pos:start="266:78" pos:end="266:78">-</operator> <name pos:start="266:80" pos:end="266:85">avgLat</name></expr></argument>)</argument_list></call> <operator pos:start="266:88" pos:end="266:88">&gt;</operator> <name pos:start="266:90" pos:end="266:100">farthestLat</name></expr>)</condition> <block pos:start="266:103" pos:end="268:49">{<block_content pos:start="267:57" pos:end="267:105">
							<expr_stmt pos:start="267:57" pos:end="267:105"><expr pos:start="267:57" pos:end="267:104"><name pos:start="267:57" pos:end="267:67">farthestLat</name> <operator pos:start="267:69" pos:end="267:69">=</operator> <call pos:start="267:71" pos:end="267:104"><name pos:start="267:71" pos:end="267:78"><name pos:start="267:71" pos:end="267:74">Math</name><operator pos:start="267:75" pos:end="267:75">.</operator><name pos:start="267:76" pos:end="267:78">abs</name></name><argument_list pos:start="267:79" pos:end="267:104">(<argument pos:start="267:80" pos:end="267:103"><expr pos:start="267:80" pos:end="267:103"><call pos:start="267:80" pos:end="267:94"><name pos:start="267:80" pos:end="267:92"><name pos:start="267:80" pos:end="267:80">e</name><operator pos:start="267:81" pos:end="267:81">.</operator><name pos:start="267:82" pos:end="267:92">getLatitude</name></name><argument_list pos:start="267:93" pos:end="267:94">()</argument_list></call> <operator pos:start="267:96" pos:end="267:96">-</operator> <name pos:start="267:98" pos:end="267:103">avgLat</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
						</block_content>}</block></if></if_stmt>
						<if_stmt pos:start="269:49" pos:end="271:49"><if pos:start="269:49" pos:end="271:49">if <condition pos:start="269:52" pos:end="269:102">(<expr pos:start="269:53" pos:end="269:101"><call pos:start="269:53" pos:end="269:87"><name pos:start="269:53" pos:end="269:60"><name pos:start="269:53" pos:end="269:56">Math</name><operator pos:start="269:57" pos:end="269:57">.</operator><name pos:start="269:58" pos:end="269:60">abs</name></name><argument_list pos:start="269:61" pos:end="269:87">(<argument pos:start="269:62" pos:end="269:86"><expr pos:start="269:62" pos:end="269:86"><call pos:start="269:62" pos:end="269:77"><name pos:start="269:62" pos:end="269:75"><name pos:start="269:62" pos:end="269:62">e</name><operator pos:start="269:63" pos:end="269:63">.</operator><name pos:start="269:64" pos:end="269:75">getLongitude</name></name><argument_list pos:start="269:76" pos:end="269:77">()</argument_list></call> <operator pos:start="269:79" pos:end="269:79">-</operator> <name pos:start="269:81" pos:end="269:86">avgLon</name></expr></argument>)</argument_list></call> <operator pos:start="269:89" pos:end="269:89">&gt;</operator> <name pos:start="269:91" pos:end="269:101">farthestLon</name></expr>)</condition> <block pos:start="269:104" pos:end="271:49">{<block_content pos:start="270:57" pos:end="270:106">
							<expr_stmt pos:start="270:57" pos:end="270:106"><expr pos:start="270:57" pos:end="270:105"><name pos:start="270:57" pos:end="270:67">farthestLon</name> <operator pos:start="270:69" pos:end="270:69">=</operator> <call pos:start="270:71" pos:end="270:105"><name pos:start="270:71" pos:end="270:78"><name pos:start="270:71" pos:end="270:74">Math</name><operator pos:start="270:75" pos:end="270:75">.</operator><name pos:start="270:76" pos:end="270:78">abs</name></name><argument_list pos:start="270:79" pos:end="270:105">(<argument pos:start="270:80" pos:end="270:104"><expr pos:start="270:80" pos:end="270:104"><call pos:start="270:80" pos:end="270:95"><name pos:start="270:80" pos:end="270:93"><name pos:start="270:80" pos:end="270:80">e</name><operator pos:start="270:81" pos:end="270:81">.</operator><name pos:start="270:82" pos:end="270:93">getLongitude</name></name><argument_list pos:start="270:94" pos:end="270:95">()</argument_list></call> <operator pos:start="270:97" pos:end="270:97">-</operator> <name pos:start="270:99" pos:end="270:104">avgLon</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
						</block_content>}</block></if></if_stmt>
					</block_content>}</block></if></if_stmt>
				</block_content>}</block></for>
			</block_content>}</block></for>
			<decl_stmt pos:start="275:25" pos:end="275:64"><decl pos:start="275:25" pos:end="275:63"><type pos:start="275:25" pos:end="275:29"><name pos:start="275:25" pos:end="275:29">Point</name></type> <name pos:start="275:31" pos:end="275:35">point</name> <init pos:start="275:37" pos:end="275:63">= <expr pos:start="275:39" pos:end="275:63"><operator pos:start="275:39" pos:end="275:41">new</operator> <call pos:start="275:43" pos:end="275:63"><name pos:start="275:43" pos:end="275:47">Point</name><argument_list pos:start="275:48" pos:end="275:63">(<argument pos:start="275:49" pos:end="275:54"><expr pos:start="275:49" pos:end="275:54"><name pos:start="275:49" pos:end="275:54">avgLat</name></expr></argument>, <argument pos:start="275:57" pos:end="275:62"><expr pos:start="275:57" pos:end="275:62"><name pos:start="275:57" pos:end="275:62">avgLon</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt> 
			<if_stmt pos:start="276:25" pos:end="287:25"><if pos:start="276:25" pos:end="285:25">if <condition pos:start="276:28" pos:end="276:44">(<expr pos:start="276:29" pos:end="276:43"><name pos:start="276:29" pos:end="276:43"><name pos:start="276:29" pos:end="276:32">this</name><operator pos:start="276:33" pos:end="276:33">.</operator><name pos:start="276:34" pos:end="276:43">followZoom</name></name></expr>)</condition> <block pos:start="276:46" pos:end="285:25">{<block_content pos:start="277:33" pos:end="284:56"> <comment type="line" pos:start="276:48" pos:end="276:128">// if the first time after the button click, set the zoom level to fit all drones</comment>
				<decl_stmt pos:start="277:33" pos:end="277:44"><decl pos:start="277:33" pos:end="277:43"><type pos:start="277:33" pos:end="277:38"><name pos:start="277:33" pos:end="277:38">double</name></type> <name pos:start="277:40" pos:end="277:43">zoom</name></decl>;</decl_stmt>
				<if_stmt pos:start="278:33" pos:end="282:33"><if pos:start="278:33" pos:end="280:33">if <condition pos:start="278:36" pos:end="278:73">(<expr pos:start="278:37" pos:end="278:72"><name pos:start="278:37" pos:end="278:47">farthestLat</name> <operator pos:start="278:49" pos:end="278:50">==</operator> <literal type="number" pos:start="278:52" pos:end="278:52">0</literal> <operator pos:start="278:54" pos:end="278:55">&amp;&amp;</operator> <name pos:start="278:57" pos:end="278:67">farthestLon</name> <operator pos:start="278:69" pos:end="278:70">==</operator> <literal type="number" pos:start="278:72" pos:end="278:72">0</literal></expr>)</condition> <block pos:start="278:75" pos:end="280:33">{<block_content pos:start="279:41" pos:end="279:50">
					<expr_stmt pos:start="279:41" pos:end="279:50"><expr pos:start="279:41" pos:end="279:49"><name pos:start="279:41" pos:end="279:44">zoom</name> <operator pos:start="279:46" pos:end="279:46">=</operator> <literal type="number" pos:start="279:48" pos:end="279:49">17</literal></expr>;</expr_stmt>
				</block_content>}</block></if> <else pos:start="280:35" pos:end="282:33">else <block pos:start="280:40" pos:end="282:33">{<block_content pos:start="281:41" pos:end="281:130">
					<expr_stmt pos:start="281:41" pos:end="281:130"><expr pos:start="281:41" pos:end="281:129"><name pos:start="281:41" pos:end="281:44">zoom</name> <operator pos:start="281:46" pos:end="281:46">=</operator> <call pos:start="281:48" pos:end="281:129"><name pos:start="281:48" pos:end="281:57"><name pos:start="281:48" pos:end="281:51">Math</name><operator pos:start="281:52" pos:end="281:52">.</operator><name pos:start="281:53" pos:end="281:57">floor</name></name><argument_list pos:start="281:58" pos:end="281:129">(<argument pos:start="281:59" pos:end="281:128"><expr pos:start="281:59" pos:end="281:128"><call pos:start="281:59" pos:end="281:112"><name pos:start="281:59" pos:end="281:68"><name pos:start="281:59" pos:end="281:62">Math</name><operator pos:start="281:63" pos:end="281:63">.</operator><name pos:start="281:64" pos:end="281:68">log10</name></name><argument_list pos:start="281:69" pos:end="281:112">(<argument pos:start="281:70" pos:end="281:111"><expr pos:start="281:70" pos:end="281:111"><literal type="number" pos:start="281:70" pos:end="281:74">180.0</literal> <operator pos:start="281:76" pos:end="281:76">/</operator> <call pos:start="281:78" pos:end="281:111"><name pos:start="281:78" pos:end="281:85"><name pos:start="281:78" pos:end="281:81">Math</name><operator pos:start="281:82" pos:end="281:82">.</operator><name pos:start="281:83" pos:end="281:85">max</name></name><argument_list pos:start="281:86" pos:end="281:111">(<argument pos:start="281:87" pos:end="281:97"><expr pos:start="281:87" pos:end="281:97"><name pos:start="281:87" pos:end="281:97">farthestLat</name></expr></argument>, <argument pos:start="281:100" pos:end="281:110"><expr pos:start="281:100" pos:end="281:110"><name pos:start="281:100" pos:end="281:110">farthestLon</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call> <operator pos:start="281:114" pos:end="281:114">/</operator> <call pos:start="281:116" pos:end="281:128"><name pos:start="281:116" pos:end="281:125"><name pos:start="281:116" pos:end="281:119">Math</name><operator pos:start="281:120" pos:end="281:120">.</operator><name pos:start="281:121" pos:end="281:125">log10</name></name><argument_list pos:start="281:126" pos:end="281:128">(<argument pos:start="281:127" pos:end="281:127"><expr pos:start="281:127" pos:end="281:127"><literal type="number" pos:start="281:127" pos:end="281:127">2</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				</block_content>}</block></else></if_stmt>
				<expr_stmt pos:start="283:33" pos:end="283:66"><expr pos:start="283:33" pos:end="283:65"><call pos:start="283:33" pos:end="283:65"><name pos:start="283:33" pos:end="283:52"><name pos:start="283:33" pos:end="283:42">leafletMap</name><operator pos:start="283:43" pos:end="283:43">.</operator><name pos:start="283:44" pos:end="283:52">setCenter</name></name><argument_list pos:start="283:53" pos:end="283:65">(<argument pos:start="283:54" pos:end="283:58"><expr pos:start="283:54" pos:end="283:58"><name pos:start="283:54" pos:end="283:58">point</name></expr></argument>, <argument pos:start="283:61" pos:end="283:64"><expr pos:start="283:61" pos:end="283:64"><name pos:start="283:61" pos:end="283:64">zoom</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<expr_stmt pos:start="284:33" pos:end="284:56"><expr pos:start="284:33" pos:end="284:55"><name pos:start="284:33" pos:end="284:47"><name pos:start="284:33" pos:end="284:36">this</name><operator pos:start="284:37" pos:end="284:37">.</operator><name pos:start="284:38" pos:end="284:47">followZoom</name></name> <operator pos:start="284:49" pos:end="284:49">=</operator> <literal type="boolean" pos:start="284:51" pos:end="284:55">false</literal></expr>;</expr_stmt>
			</block_content>}</block></if> <else pos:start="285:27" pos:end="287:25">else <block pos:start="285:32" pos:end="287:25">{<block_content pos:start="286:33" pos:end="286:60">
				<expr_stmt pos:start="286:33" pos:end="286:60"><expr pos:start="286:33" pos:end="286:59"><call pos:start="286:33" pos:end="286:59"><name pos:start="286:33" pos:end="286:52"><name pos:start="286:33" pos:end="286:42">leafletMap</name><operator pos:start="286:43" pos:end="286:43">.</operator><name pos:start="286:44" pos:end="286:52">setCenter</name></name><argument_list pos:start="286:53" pos:end="286:59">(<argument pos:start="286:54" pos:end="286:58"><expr pos:start="286:54" pos:end="286:58"><name pos:start="286:54" pos:end="286:58">point</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			</block_content>}</block></else></if_stmt>
			<if_stmt pos:start="288:25" pos:end="302:25"><if pos:start="288:25" pos:end="300:25">if <condition pos:start="288:28" pos:end="288:68">(<expr pos:start="288:29" pos:end="288:67"><call pos:start="288:29" pos:end="288:61"><name pos:start="288:29" pos:end="288:53"><name pos:start="288:29" pos:end="288:35">content</name><operator pos:start="288:36" pos:end="288:36">.</operator><name pos:start="288:37" pos:end="288:53">getComponentIndex</name></name><argument_list pos:start="288:54" pos:end="288:61">(<argument pos:start="288:55" pos:end="288:60"><expr pos:start="288:55" pos:end="288:60"><name pos:start="288:55" pos:end="288:60">layout</name></expr></argument>)</argument_list></call> <operator pos:start="288:63" pos:end="288:64">!=</operator> <operator pos:start="288:66" pos:end="288:66">-</operator><literal type="number" pos:start="288:67" pos:end="288:67">1</literal></expr>)</condition> <block pos:start="288:70" pos:end="300:25">{<block_content pos:start="289:33" pos:end="299:67"> <comment type="line" pos:start="288:72" pos:end="288:122">// change the map layout to display the follow bar.</comment>
				<expr_stmt pos:start="289:33" pos:end="289:84"><expr pos:start="289:33" pos:end="289:83"><call pos:start="289:33" pos:end="289:83"><name pos:start="289:33" pos:end="289:55"><name pos:start="289:33" pos:end="289:42">leafletMap</name><operator pos:start="289:43" pos:end="289:43">.</operator><name pos:start="289:44" pos:end="289:55">addStyleName</name></name><argument_list pos:start="289:56" pos:end="289:83">(<argument pos:start="289:57" pos:end="289:82"><expr pos:start="289:57" pos:end="289:82"><literal type="string" pos:start="289:57" pos:end="289:82">"af_leaflet_map_edit_mode"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<expr_stmt pos:start="290:33" pos:end="290:73"><expr pos:start="290:33" pos:end="290:72"><name pos:start="290:33" pos:end="290:41">followBar</name> <operator pos:start="290:43" pos:end="290:43">=</operator> <operator pos:start="290:45" pos:end="290:47">new</operator> <call pos:start="290:49" pos:end="290:72"><name pos:start="290:49" pos:end="290:59">AFFollowBar</name><argument_list pos:start="290:60" pos:end="290:72">(<argument pos:start="290:61" pos:end="290:64"><expr pos:start="290:61" pos:end="290:64"><name pos:start="290:61" pos:end="290:64">this</name></expr></argument>, <argument pos:start="290:67" pos:end="290:71"><expr pos:start="290:67" pos:end="290:71"><name pos:start="290:67" pos:end="290:71">names</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<expr_stmt pos:start="291:33" pos:end="291:83"><expr pos:start="291:33" pos:end="291:82"><call pos:start="291:33" pos:end="291:82"><name pos:start="291:33" pos:end="291:57"><name pos:start="291:33" pos:end="291:44">followLayout</name><operator pos:start="291:45" pos:end="291:45">.</operator><name pos:start="291:46" pos:end="291:57">addStyleName</name></name><argument_list pos:start="291:58" pos:end="291:82">(<argument pos:start="291:59" pos:end="291:81"><expr pos:start="291:59" pos:end="291:81"><literal type="string" pos:start="291:59" pos:end="291:81">"af_mapabsolute_layout"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<expr_stmt pos:start="292:33" pos:end="292:70"><expr pos:start="292:33" pos:end="292:69"><call pos:start="292:33" pos:end="292:69"><name pos:start="292:33" pos:end="292:54"><name pos:start="292:33" pos:end="292:41">followBar</name><operator pos:start="292:42" pos:end="292:42">.</operator><name pos:start="292:43" pos:end="292:54">addStyleName</name></name><argument_list pos:start="292:55" pos:end="292:69">(<argument pos:start="292:56" pos:end="292:68"><expr pos:start="292:56" pos:end="292:68"><literal type="string" pos:start="292:56" pos:end="292:68">"bring_front"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<decl_stmt pos:start="293:33" pos:end="293:105"><decl pos:start="293:33" pos:end="293:104"><type pos:start="293:33" pos:end="293:38"><name pos:start="293:33" pos:end="293:38">double</name></type> <name pos:start="293:40" pos:end="293:51">screenHeight</name> <init pos:start="293:53" pos:end="293:104">= <expr pos:start="293:55" pos:end="293:104"><call pos:start="293:55" pos:end="293:69"><name pos:start="293:55" pos:end="293:67"><name pos:start="293:55" pos:end="293:56">UI</name><operator pos:start="293:57" pos:end="293:57">.</operator><name pos:start="293:58" pos:end="293:67">getCurrent</name></name><argument_list pos:start="293:68" pos:end="293:69">()</argument_list></call><operator pos:start="293:70" pos:end="293:70">.</operator><call pos:start="293:71" pos:end="293:79"><name pos:start="293:71" pos:end="293:77">getPage</name><argument_list pos:start="293:78" pos:end="293:79">()</argument_list></call><operator pos:start="293:80" pos:end="293:80">.</operator><call pos:start="293:81" pos:end="293:104"><name pos:start="293:81" pos:end="293:102">getBrowserWindowHeight</name><argument_list pos:start="293:103" pos:end="293:104">()</argument_list></call></expr></init></decl>;</decl_stmt>
				<decl_stmt pos:start="294:33" pos:end="294:87"><decl pos:start="294:33" pos:end="294:86"><type pos:start="294:33" pos:end="294:35"><name pos:start="294:33" pos:end="294:35">int</name></type> <name pos:start="294:37" pos:end="294:48">layoutHeight</name> <init pos:start="294:50" pos:end="294:86">= <expr pos:start="294:52" pos:end="294:86"><operator pos:start="294:52" pos:end="294:52">(</operator><name pos:start="294:53" pos:end="294:55">int</name><operator pos:start="294:56" pos:end="294:56">)</operator> <call pos:start="294:58" pos:end="294:86"><name pos:start="294:58" pos:end="294:66"><name pos:start="294:58" pos:end="294:61">Math</name><operator pos:start="294:62" pos:end="294:62">.</operator><name pos:start="294:63" pos:end="294:66">rint</name></name><argument_list pos:start="294:67" pos:end="294:86">(<argument pos:start="294:68" pos:end="294:85"><expr pos:start="294:68" pos:end="294:85"><name pos:start="294:68" pos:end="294:79">screenHeight</name> <operator pos:start="294:81" pos:end="294:81">*</operator> <literal type="number" pos:start="294:83" pos:end="294:85">0.9</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
				<expr_stmt pos:start="295:33" pos:end="295:94"><expr pos:start="295:33" pos:end="295:93"><call pos:start="295:33" pos:end="295:93"><name pos:start="295:33" pos:end="295:54"><name pos:start="295:33" pos:end="295:44">followLayout</name><operator pos:start="295:45" pos:end="295:45">.</operator><name pos:start="295:46" pos:end="295:54">setHeight</name></name><argument_list pos:start="295:55" pos:end="295:93">(<argument pos:start="295:56" pos:end="295:92"><expr pos:start="295:56" pos:end="295:92"><call pos:start="295:56" pos:end="295:85"><name pos:start="295:56" pos:end="295:71"><name pos:start="295:56" pos:end="295:62">Integer</name><operator pos:start="295:63" pos:end="295:63">.</operator><name pos:start="295:64" pos:end="295:71">toString</name></name><argument_list pos:start="295:72" pos:end="295:85">(<argument pos:start="295:73" pos:end="295:84"><expr pos:start="295:73" pos:end="295:84"><name pos:start="295:73" pos:end="295:84">layoutHeight</name></expr></argument>)</argument_list></call> <operator pos:start="295:87" pos:end="295:87">+</operator> <literal type="string" pos:start="295:89" pos:end="295:92">"px"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<expr_stmt pos:start="296:33" pos:end="296:66"><expr pos:start="296:33" pos:end="296:65"><call pos:start="296:33" pos:end="296:65"><name pos:start="296:33" pos:end="296:57"><name pos:start="296:33" pos:end="296:44">followLayout</name><operator pos:start="296:45" pos:end="296:45">.</operator><name pos:start="296:46" pos:end="296:57">addComponent</name></name><argument_list pos:start="296:58" pos:end="296:65">(<argument pos:start="296:59" pos:end="296:64"><expr pos:start="296:59" pos:end="296:64"><name pos:start="296:59" pos:end="296:64">layout</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<expr_stmt pos:start="297:33" pos:end="297:69"><expr pos:start="297:33" pos:end="297:68"><call pos:start="297:33" pos:end="297:68"><name pos:start="297:33" pos:end="297:57"><name pos:start="297:33" pos:end="297:44">followLayout</name><operator pos:start="297:45" pos:end="297:45">.</operator><name pos:start="297:46" pos:end="297:57">addComponent</name></name><argument_list pos:start="297:58" pos:end="297:68">(<argument pos:start="297:59" pos:end="297:67"><expr pos:start="297:59" pos:end="297:67"><name pos:start="297:59" pos:end="297:67">followBar</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<expr_stmt pos:start="298:33" pos:end="298:62"><expr pos:start="298:33" pos:end="298:61"><call pos:start="298:33" pos:end="298:61"><name pos:start="298:33" pos:end="298:59"><name pos:start="298:33" pos:end="298:39">content</name><operator pos:start="298:40" pos:end="298:40">.</operator><name pos:start="298:41" pos:end="298:59">removeAllComponents</name></name><argument_list pos:start="298:60" pos:end="298:61">()</argument_list></call></expr>;</expr_stmt>
				<expr_stmt pos:start="299:33" pos:end="299:67"><expr pos:start="299:33" pos:end="299:66"><call pos:start="299:33" pos:end="299:66"><name pos:start="299:33" pos:end="299:52"><name pos:start="299:33" pos:end="299:39">content</name><operator pos:start="299:40" pos:end="299:40">.</operator><name pos:start="299:41" pos:end="299:52">addComponent</name></name><argument_list pos:start="299:53" pos:end="299:66">(<argument pos:start="299:54" pos:end="299:65"><expr pos:start="299:54" pos:end="299:65"><name pos:start="299:54" pos:end="299:65">followLayout</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> 
			</block_content>}</block></if> <else pos:start="300:27" pos:end="302:25">else <block pos:start="300:32" pos:end="302:25">{<block_content pos:start="301:33" pos:end="301:63">
				<expr_stmt pos:start="301:33" pos:end="301:63"><expr pos:start="301:33" pos:end="301:62"><call pos:start="301:33" pos:end="301:62"><name pos:start="301:33" pos:end="301:55"><name pos:start="301:33" pos:end="301:41">followBar</name><operator pos:start="301:42" pos:end="301:42">.</operator><name pos:start="301:43" pos:end="301:55">updateUAVList</name></name><argument_list pos:start="301:56" pos:end="301:62">(<argument pos:start="301:57" pos:end="301:61"><expr pos:start="301:57" pos:end="301:61"><name pos:start="301:57" pos:end="301:61">names</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			</block_content>}</block></else></if_stmt>
		</block_content>}</block> <catch pos:start="303:19" pos:end="306:17">catch <parameter_list pos:start="303:25" pos:end="303:72">(<parameter pos:start="303:26" pos:end="303:71"><decl pos:start="303:26" pos:end="303:71"><type pos:start="303:26" pos:end="303:40"><name pos:start="303:26" pos:end="303:40">RemoteException</name></type> | <type pos:start="303:44" pos:end="303:71"><name pos:start="303:44" pos:end="303:68">DronologyServiceException</name></type> <name pos:start="303:70" pos:end="303:71">e1</name></decl></parameter>)</parameter_list> <block pos:start="303:74" pos:end="306:17">{<block_content pos:start="304:25" pos:end="305:45">
			<expr_stmt pos:start="304:25" pos:end="304:49"><expr pos:start="304:25" pos:end="304:48"><call pos:start="304:25" pos:end="304:48"><name pos:start="304:25" pos:end="304:41"><name pos:start="304:25" pos:end="304:28">MyUI</name><operator pos:start="304:29" pos:end="304:29">.</operator><name pos:start="304:30" pos:end="304:41">setConnected</name></name><argument_list pos:start="304:42" pos:end="304:48">(<argument pos:start="304:43" pos:end="304:47"><expr pos:start="304:43" pos:end="304:47"><literal type="boolean" pos:start="304:43" pos:end="304:47">false</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt pos:start="305:25" pos:end="305:45"><expr pos:start="305:25" pos:end="305:44"><call pos:start="305:25" pos:end="305:44"><name pos:start="305:25" pos:end="305:42"><name pos:start="305:25" pos:end="305:26">e1</name><operator pos:start="305:27" pos:end="305:27">.</operator><name pos:start="305:28" pos:end="305:42">printStackTrace</name></name><argument_list pos:start="305:43" pos:end="305:44">()</argument_list></call></expr>;</expr_stmt>
		</block_content>}</block></catch></try>
	</block_content>}</block></function>

	<comment type="block" format="javadoc" pos:start="309:9" pos:end="314:11">/**
	 * this is a listener that displays an AFInfoBox in a popup over the drone that was just hovered over
	 * 
	 * @author Patrick Falvey
	 *
	 */</comment>
	<class pos:start="315:9" pos:end="415:9"><specifier pos:start="315:9" pos:end="315:15">private</specifier> class <name pos:start="315:23" pos:end="315:40">DroneMouseListener</name> <super_list pos:start="315:42" pos:end="315:76"><implements pos:start="315:42" pos:end="315:76">implements <super pos:start="315:53" pos:end="315:76"><name pos:start="315:53" pos:end="315:76">LeafletMouseOverListener</name></super></implements></super_list> <block pos:start="315:78" pos:end="415:9">{

		<function pos:start="317:17" pos:end="414:17"><annotation pos:start="317:17" pos:end="317:25">@<name pos:start="317:18" pos:end="317:25">Override</name></annotation>
		<type pos:start="318:17" pos:end="318:27"><specifier pos:start="318:17" pos:end="318:22">public</specifier> <name pos:start="318:24" pos:end="318:27">void</name></type> <name pos:start="318:29" pos:end="318:39">onMouseOver</name><parameter_list pos:start="318:40" pos:end="318:68">(<parameter pos:start="318:41" pos:end="318:67"><decl pos:start="318:41" pos:end="318:67"><type pos:start="318:41" pos:end="318:61"><name pos:start="318:41" pos:end="318:61">LeafletMouseOverEvent</name></type> <name pos:start="318:63" pos:end="318:67">event</name></decl></parameter>)</parameter_list> <block pos:start="318:70" pos:end="414:17">{<block_content pos:start="319:25" pos:end="412:57">
			<try pos:start="319:25" pos:end="323:25">try <block pos:start="319:29" pos:end="321:25">{<block_content pos:start="320:33" pos:end="320:65">
				<expr_stmt pos:start="320:33" pos:end="320:65"><expr pos:start="320:33" pos:end="320:64"><name pos:start="320:33" pos:end="320:38">drones</name> <operator pos:start="320:40" pos:end="320:40">=</operator> <call pos:start="320:42" pos:end="320:64"><name pos:start="320:42" pos:end="320:62"><name pos:start="320:42" pos:end="320:48">service</name><operator pos:start="320:49" pos:end="320:49">.</operator><name pos:start="320:50" pos:end="320:62">getActiveUAVs</name></name><argument_list pos:start="320:63" pos:end="320:64">()</argument_list></call></expr>;</expr_stmt>
			</block_content>}</block> <catch pos:start="321:27" pos:end="323:25">catch <parameter_list pos:start="321:33" pos:end="321:51">(<parameter pos:start="321:34" pos:end="321:50"><decl pos:start="321:34" pos:end="321:50"><type pos:start="321:34" pos:end="321:50"><name pos:start="321:34" pos:end="321:48">RemoteException</name></type> <name pos:start="321:50" pos:end="321:50">e</name></decl></parameter>)</parameter_list> <block pos:start="321:53" pos:end="323:25">{<block_content pos:start="322:33" pos:end="322:52">
				<expr_stmt pos:start="322:33" pos:end="322:52"><expr pos:start="322:33" pos:end="322:51"><call pos:start="322:33" pos:end="322:51"><name pos:start="322:33" pos:end="322:49"><name pos:start="322:33" pos:end="322:33">e</name><operator pos:start="322:34" pos:end="322:34">.</operator><name pos:start="322:35" pos:end="322:49">printStackTrace</name></name><argument_list pos:start="322:50" pos:end="322:51">()</argument_list></call></expr>;</expr_stmt>
			</block_content>}</block></catch></try>

			<expr_stmt pos:start="325:25" pos:end="325:53"><expr pos:start="325:25" pos:end="325:52"><call pos:start="325:25" pos:end="325:52"><name pos:start="325:25" pos:end="325:45"><name pos:start="325:25" pos:end="325:34">dronePopup</name><operator pos:start="325:35" pos:end="325:35">.</operator><name pos:start="325:36" pos:end="325:45">setVisible</name></name><argument_list pos:start="325:46" pos:end="325:52">(<argument pos:start="325:47" pos:end="325:51"><expr pos:start="325:47" pos:end="325:51"><literal type="boolean" pos:start="325:47" pos:end="325:51">false</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt pos:start="326:25" pos:end="326:58"><expr pos:start="326:25" pos:end="326:57"><call pos:start="326:25" pos:end="326:57"><name pos:start="326:25" pos:end="326:50"><name pos:start="326:25" pos:end="326:34">dronePopup</name><operator pos:start="326:35" pos:end="326:35">.</operator><name pos:start="326:36" pos:end="326:50">setPopupVisible</name></name><argument_list pos:start="326:51" pos:end="326:57">(<argument pos:start="326:52" pos:end="326:56"><expr pos:start="326:52" pos:end="326:56"><literal type="boolean" pos:start="326:52" pos:end="326:56">false</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<decl_stmt pos:start="327:25" pos:end="327:76"><decl pos:start="327:25" pos:end="327:75"><type pos:start="327:25" pos:end="327:31"><name pos:start="327:25" pos:end="327:31">LMarker</name></type> <name pos:start="327:33" pos:end="327:45">leafletMarker</name> <init pos:start="327:47" pos:end="327:75">= <expr pos:start="327:49" pos:end="327:75"><operator pos:start="327:49" pos:end="327:49">(</operator><name pos:start="327:50" pos:end="327:56">LMarker</name><operator pos:start="327:57" pos:end="327:57">)</operator> <call pos:start="327:59" pos:end="327:75"><name pos:start="327:59" pos:end="327:73"><name pos:start="327:59" pos:end="327:63">event</name><operator pos:start="327:64" pos:end="327:64">.</operator><name pos:start="327:65" pos:end="327:73">getSource</name></name><argument_list pos:start="327:74" pos:end="327:75">()</argument_list></call></expr></init></decl>;</decl_stmt>

			<decl_stmt pos:start="329:25" pos:end="329:115"><decl pos:start="329:25" pos:end="329:114"><type pos:start="329:25" pos:end="329:38"><name pos:start="329:25" pos:end="329:38">VerticalLayout</name></type> <name pos:start="329:40" pos:end="329:51">popupContent</name> <init pos:start="329:53" pos:end="329:114">= <expr pos:start="329:55" pos:end="329:114"><operator pos:start="329:55" pos:end="329:55">(</operator><name pos:start="329:56" pos:end="329:69">VerticalLayout</name><operator pos:start="329:70" pos:end="329:70">)</operator> <call pos:start="329:72" pos:end="329:94"><name pos:start="329:72" pos:end="329:92"><name pos:start="329:72" pos:end="329:81">dronePopup</name><operator pos:start="329:82" pos:end="329:82">.</operator><name pos:start="329:83" pos:end="329:92">getContent</name></name><argument_list pos:start="329:93" pos:end="329:94">()</argument_list></call><operator pos:start="329:95" pos:end="329:95">.</operator><call pos:start="329:96" pos:end="329:114"><name pos:start="329:96" pos:end="329:112">getPopupComponent</name><argument_list pos:start="329:113" pos:end="329:114">()</argument_list></call></expr></init></decl>;</decl_stmt>
			<expr_stmt pos:start="330:25" pos:end="330:59"><expr pos:start="330:25" pos:end="330:58"><call pos:start="330:25" pos:end="330:58"><name pos:start="330:25" pos:end="330:56"><name pos:start="330:25" pos:end="330:36">popupContent</name><operator pos:start="330:37" pos:end="330:37">.</operator><name pos:start="330:38" pos:end="330:56">removeAllComponents</name></name><argument_list pos:start="330:57" pos:end="330:58">()</argument_list></call></expr>;</expr_stmt>
			<for pos:start="331:25" pos:end="381:25">for <control pos:start="331:29" pos:end="331:50">(<init pos:start="331:30" pos:end="331:49"><decl pos:start="331:30" pos:end="331:49"><type pos:start="331:30" pos:end="331:38"><name pos:start="331:30" pos:end="331:38">IUAVProxy</name></type> <name pos:start="331:40" pos:end="331:40">e</name> <range pos:start="331:42" pos:end="331:49">: <expr pos:start="331:44" pos:end="331:49"><name pos:start="331:44" pos:end="331:49">drones</name></expr></range></decl></init>)</control> <block pos:start="331:52" pos:end="381:25">{<block_content pos:start="332:33" pos:end="380:33"> <comment type="line" pos:start="331:54" pos:end="331:111">// change the popup content to display the right AFInfoBox</comment>
				<if_stmt pos:start="332:33" pos:end="380:33"><if pos:start="332:33" pos:end="380:33">if <condition pos:start="332:36" pos:end="332:76">(<expr pos:start="332:37" pos:end="332:75"><call pos:start="332:37" pos:end="332:45"><name pos:start="332:37" pos:end="332:43"><name pos:start="332:37" pos:end="332:37">e</name><operator pos:start="332:38" pos:end="332:38">.</operator><name pos:start="332:39" pos:end="332:43">getID</name></name><argument_list pos:start="332:44" pos:end="332:45">()</argument_list></call><operator pos:start="332:46" pos:end="332:46">.</operator><call pos:start="332:47" pos:end="332:75"><name pos:start="332:47" pos:end="332:52">equals</name><argument_list pos:start="332:53" pos:end="332:75">(<argument pos:start="332:54" pos:end="332:74"><expr pos:start="332:54" pos:end="332:74"><call pos:start="332:54" pos:end="332:74"><name pos:start="332:54" pos:end="332:72"><name pos:start="332:54" pos:end="332:66">leafletMarker</name><operator pos:start="332:67" pos:end="332:67">.</operator><name pos:start="332:68" pos:end="332:72">getId</name></name><argument_list pos:start="332:73" pos:end="332:74">()</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="332:78" pos:end="380:33">{<block_content pos:start="333:41" pos:end="379:71">
					<decl_stmt pos:start="333:41" pos:end="333:90"><decl pos:start="333:41" pos:end="333:89"><type pos:start="333:41" pos:end="333:56"><name pos:start="333:41" pos:end="333:56">UAVStatusWrapper</name></type> <name pos:start="333:58" pos:end="333:63">status</name> <init pos:start="333:65" pos:end="333:89">= <expr pos:start="333:67" pos:end="333:89"><operator pos:start="333:67" pos:end="333:69">new</operator> <call pos:start="333:71" pos:end="333:89"><name pos:start="333:71" pos:end="333:86">UAVStatusWrapper</name><argument_list pos:start="333:87" pos:end="333:89">(<argument pos:start="333:88" pos:end="333:88"><expr pos:start="333:88" pos:end="333:88"><name pos:start="333:88" pos:end="333:88">e</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
					<decl_stmt pos:start="334:41" pos:end="334:92"><decl pos:start="334:41" pos:end="334:91"><type pos:start="334:41" pos:end="334:49"><name pos:start="334:41" pos:end="334:49">AFInfoBox</name></type> <name pos:start="334:51" pos:end="334:53">box</name> <init pos:start="334:55" pos:end="334:91">= <expr pos:start="334:57" pos:end="334:91"><operator pos:start="334:57" pos:end="334:59">new</operator> <call pos:start="334:61" pos:end="334:91"><name pos:start="334:61" pos:end="334:69">AFInfoBox</name><argument_list pos:start="334:70" pos:end="334:91">(<argument pos:start="334:71" pos:end="334:75"><expr pos:start="334:71" pos:end="334:75"><literal type="boolean" pos:start="334:71" pos:end="334:75">false</literal></expr></argument>, <argument pos:start="334:78" pos:end="334:83"><expr pos:start="334:78" pos:end="334:83"><name pos:start="334:78" pos:end="334:83">status</name></expr></argument>, <argument pos:start="334:86" pos:end="334:90"><expr pos:start="334:86" pos:end="334:90"><literal type="boolean" pos:start="334:86" pos:end="334:90">false</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
					<expr_stmt pos:start="335:41" pos:end="335:61"><expr pos:start="335:41" pos:end="335:60"><call pos:start="335:41" pos:end="335:60"><name pos:start="335:41" pos:end="335:58"><name pos:start="335:41" pos:end="335:43">box</name><operator pos:start="335:44" pos:end="335:44">.</operator><name pos:start="335:45" pos:end="335:58">createContents</name></name><argument_list pos:start="335:59" pos:end="335:60">()</argument_list></call></expr>;</expr_stmt>
					<expr_stmt pos:start="336:41" pos:end="336:65"><expr pos:start="336:41" pos:end="336:64"><call pos:start="336:41" pos:end="336:64"><name pos:start="336:41" pos:end="336:57"><name pos:start="336:41" pos:end="336:43">box</name><operator pos:start="336:44" pos:end="336:44">.</operator><name pos:start="336:45" pos:end="336:57">setBoxVisible</name></name><argument_list pos:start="336:58" pos:end="336:64">(<argument pos:start="336:59" pos:end="336:63"><expr pos:start="336:59" pos:end="336:63"><literal type="boolean" pos:start="336:59" pos:end="336:63">false</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<decl_stmt pos:start="337:41" pos:end="337:80"><decl pos:start="337:41" pos:end="337:79"><type pos:start="337:41" pos:end="337:54"><name pos:start="337:41" pos:end="337:54">VerticalLayout</name></type> <name pos:start="337:56" pos:end="337:60">boxes</name> <init pos:start="337:62" pos:end="337:79">= <expr pos:start="337:64" pos:end="337:79"><call pos:start="337:64" pos:end="337:79"><name pos:start="337:64" pos:end="337:77"><name pos:start="337:64" pos:end="337:68">panel</name><operator pos:start="337:69" pos:end="337:69">.</operator><name pos:start="337:70" pos:end="337:77">getBoxes</name></name><argument_list pos:start="337:78" pos:end="337:79">()</argument_list></call></expr></init></decl>;</decl_stmt>
					<decl_stmt pos:start="338:41" pos:end="338:73"><decl pos:start="338:41" pos:end="338:72"><type pos:start="338:41" pos:end="338:43"><name pos:start="338:41" pos:end="338:43">int</name></type> <name pos:start="338:45" pos:end="338:51">numUAVs</name> <init pos:start="338:53" pos:end="338:72">= <expr pos:start="338:55" pos:end="338:72"><call pos:start="338:55" pos:end="338:72"><name pos:start="338:55" pos:end="338:70"><name pos:start="338:55" pos:end="338:59">panel</name><operator pos:start="338:60" pos:end="338:60">.</operator><name pos:start="338:61" pos:end="338:70">getNumUAVS</name></name><argument_list pos:start="338:71" pos:end="338:72">()</argument_list></call></expr></init></decl>;</decl_stmt>
					<for pos:start="339:41" pos:end="347:41">for <control pos:start="339:45" pos:end="339:77">(<init pos:start="339:46" pos:end="339:55"><decl pos:start="339:46" pos:end="339:54"><type pos:start="339:46" pos:end="339:48"><name pos:start="339:46" pos:end="339:48">int</name></type> <name pos:start="339:50" pos:end="339:50">i</name> <init pos:start="339:52" pos:end="339:54">= <expr pos:start="339:54" pos:end="339:54"><literal type="number" pos:start="339:54" pos:end="339:54">1</literal></expr></init></decl>;</init> <condition pos:start="339:57" pos:end="339:72"><expr pos:start="339:57" pos:end="339:71"><name pos:start="339:57" pos:end="339:57">i</name> <operator pos:start="339:59" pos:end="339:59">&lt;</operator> <name pos:start="339:61" pos:end="339:67">numUAVs</name> <operator pos:start="339:69" pos:end="339:69">+</operator> <literal type="number" pos:start="339:71" pos:end="339:71">1</literal></expr>;</condition> <incr pos:start="339:74" pos:end="339:76"><expr pos:start="339:74" pos:end="339:76"><name pos:start="339:74" pos:end="339:74">i</name><operator pos:start="339:75" pos:end="339:76">++</operator></expr></incr>)</control> <block pos:start="339:79" pos:end="347:41">{<block_content pos:start="340:49" pos:end="346:49">
						<decl_stmt pos:start="340:49" pos:end="340:103"><decl pos:start="340:49" pos:end="340:102"><type pos:start="340:49" pos:end="340:57"><name pos:start="340:49" pos:end="340:57">AFInfoBox</name></type> <name pos:start="340:59" pos:end="340:66">panelBox</name> <init pos:start="340:68" pos:end="340:102">= <expr pos:start="340:70" pos:end="340:102"><operator pos:start="340:70" pos:end="340:70">(</operator><name pos:start="340:71" pos:end="340:79">AFInfoBox</name><operator pos:start="340:80" pos:end="340:80">)</operator> <call pos:start="340:82" pos:end="340:102"><name pos:start="340:82" pos:end="340:99"><name pos:start="340:82" pos:end="340:86">boxes</name><operator pos:start="340:87" pos:end="340:87">.</operator><name pos:start="340:88" pos:end="340:99">getComponent</name></name><argument_list pos:start="340:100" pos:end="340:102">(<argument pos:start="340:101" pos:end="340:101"><expr pos:start="340:101" pos:end="340:101"><name pos:start="340:101" pos:end="340:101">i</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
						<if_stmt pos:start="341:49" pos:end="346:49"><if pos:start="341:49" pos:end="346:49">if <condition pos:start="341:52" pos:end="341:93">(<expr pos:start="341:53" pos:end="341:92"><call pos:start="341:53" pos:end="341:70"><name pos:start="341:53" pos:end="341:68"><name pos:start="341:53" pos:end="341:60">panelBox</name><operator pos:start="341:61" pos:end="341:61">.</operator><name pos:start="341:62" pos:end="341:68">getName</name></name><argument_list pos:start="341:69" pos:end="341:70">()</argument_list></call><operator pos:start="341:71" pos:end="341:71">.</operator><call pos:start="341:72" pos:end="341:92"><name pos:start="341:72" pos:end="341:77">equals</name><argument_list pos:start="341:78" pos:end="341:92">(<argument pos:start="341:79" pos:end="341:91"><expr pos:start="341:79" pos:end="341:91"><call pos:start="341:79" pos:end="341:91"><name pos:start="341:79" pos:end="341:89"><name pos:start="341:79" pos:end="341:81">box</name><operator pos:start="341:82" pos:end="341:82">.</operator><name pos:start="341:83" pos:end="341:89">getName</name></name><argument_list pos:start="341:90" pos:end="341:91">()</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="341:95" pos:end="346:49">{<block_content pos:start="342:57" pos:end="344:75"> <comment type="line" pos:start="341:97" pos:end="341:147">// get the updated information from the AFInfoPanel</comment>
							<expr_stmt pos:start="342:57" pos:end="342:98"><expr pos:start="342:57" pos:end="342:97"><call pos:start="342:57" pos:end="342:97"><name pos:start="342:57" pos:end="342:72"><name pos:start="342:57" pos:end="342:59">box</name><operator pos:start="342:60" pos:end="342:60">.</operator><name pos:start="342:61" pos:end="342:72">setIsChecked</name></name><argument_list pos:start="342:73" pos:end="342:97">(<argument pos:start="342:74" pos:end="342:96"><expr pos:start="342:74" pos:end="342:96"><call pos:start="342:74" pos:end="342:96"><name pos:start="342:74" pos:end="342:94"><name pos:start="342:74" pos:end="342:81">panelBox</name><operator pos:start="342:82" pos:end="342:82">.</operator><name pos:start="342:83" pos:end="342:94">getIsChecked</name></name><argument_list pos:start="342:95" pos:end="342:96">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
							<expr_stmt pos:start="343:57" pos:end="343:104"><expr pos:start="343:57" pos:end="343:103"><call pos:start="343:57" pos:end="343:103"><name pos:start="343:57" pos:end="343:75"><name pos:start="343:57" pos:end="343:59">box</name><operator pos:start="343:60" pos:end="343:60">.</operator><name pos:start="343:61" pos:end="343:75">setHoverInPlace</name></name><argument_list pos:start="343:76" pos:end="343:103">(<argument pos:start="343:77" pos:end="343:102"><expr pos:start="343:77" pos:end="343:102"><call pos:start="343:77" pos:end="343:102"><name pos:start="343:77" pos:end="343:100"><name pos:start="343:77" pos:end="343:84">panelBox</name><operator pos:start="343:85" pos:end="343:85">.</operator><name pos:start="343:86" pos:end="343:100">getHoverInPlace</name></name><argument_list pos:start="343:101" pos:end="343:102">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
							<expr_stmt pos:start="344:57" pos:end="344:75"><expr pos:start="344:57" pos:end="344:74"><call pos:start="344:57" pos:end="344:74"><name pos:start="344:57" pos:end="344:66"><name pos:start="344:57" pos:end="344:59">box</name><operator pos:start="344:60" pos:end="344:60">.</operator><name pos:start="344:61" pos:end="344:66">update</name></name><argument_list pos:start="344:67" pos:end="344:74">(<argument pos:start="344:68" pos:end="344:73"><expr pos:start="344:68" pos:end="344:73"><name pos:start="344:68" pos:end="344:73">status</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

						</block_content>}</block></if></if_stmt>
					</block_content>}</block></for>
					<expr_stmt pos:start="348:41" pos:end="350:43"><expr pos:start="348:41" pos:end="350:42"><call pos:start="348:41" pos:end="348:60"><name pos:start="348:41" pos:end="348:58"><name pos:start="348:41" pos:end="348:43">box</name><operator pos:start="348:44" pos:end="348:44">.</operator><name pos:start="348:45" pos:end="348:58">getRouteButton</name></name><argument_list pos:start="348:59" pos:end="348:60">()</argument_list></call><operator pos:start="348:61" pos:end="348:61">.</operator><call pos:start="348:62" pos:end="350:42"><name pos:start="348:62" pos:end="348:77">addClickListener</name><argument_list pos:start="348:78" pos:end="350:42">(<argument pos:start="348:79" pos:end="350:41"><expr pos:start="348:79" pos:end="350:41"><lambda pos:start="348:79" pos:end="350:41"><parameter_list type="pseudo" pos:start="348:79" pos:end="348:83"><parameter pos:start="348:79" pos:end="348:83"><decl pos:start="348:79" pos:end="348:83"><name pos:start="348:79" pos:end="348:83">click</name></decl></parameter></parameter_list> -&gt; <block pos:start="348:88" pos:end="350:41">{<block_content pos:start="349:49" pos:end="349:82">
						<expr_stmt pos:start="349:49" pos:end="349:82"><expr pos:start="349:49" pos:end="349:81"><call pos:start="349:49" pos:end="349:81"><name pos:start="349:49" pos:end="349:74"><name pos:start="349:49" pos:end="349:58">dronePopup</name><operator pos:start="349:59" pos:end="349:59">.</operator><name pos:start="349:60" pos:end="349:74">setPopupVisible</name></name><argument_list pos:start="349:75" pos:end="349:81">(<argument pos:start="349:76" pos:end="349:80"><expr pos:start="349:76" pos:end="349:80"><literal type="boolean" pos:start="349:76" pos:end="349:80">false</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					</block_content>}</block></lambda></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<expr_stmt pos:start="351:41" pos:end="353:43"><expr pos:start="351:41" pos:end="353:42"><call pos:start="351:41" pos:end="351:59"><name pos:start="351:41" pos:end="351:57"><name pos:start="351:41" pos:end="351:43">box</name><operator pos:start="351:44" pos:end="351:44">.</operator><name pos:start="351:45" pos:end="351:57">getHomeButton</name></name><argument_list pos:start="351:58" pos:end="351:59">()</argument_list></call><operator pos:start="351:60" pos:end="351:60">.</operator><call pos:start="351:61" pos:end="353:42"><name pos:start="351:61" pos:end="351:76">addClickListener</name><argument_list pos:start="351:77" pos:end="353:42">(<argument pos:start="351:78" pos:end="353:41"><expr pos:start="351:78" pos:end="353:41"><lambda pos:start="351:78" pos:end="353:41"><parameter_list type="pseudo" pos:start="351:78" pos:end="351:82"><parameter pos:start="351:78" pos:end="351:82"><decl pos:start="351:78" pos:end="351:82"><name pos:start="351:78" pos:end="351:82">click</name></decl></parameter></parameter_list> -&gt; <block pos:start="351:87" pos:end="353:41">{<block_content pos:start="352:49" pos:end="352:82">
						<expr_stmt pos:start="352:49" pos:end="352:82"><expr pos:start="352:49" pos:end="352:81"><call pos:start="352:49" pos:end="352:81"><name pos:start="352:49" pos:end="352:74"><name pos:start="352:49" pos:end="352:58">dronePopup</name><operator pos:start="352:59" pos:end="352:59">.</operator><name pos:start="352:60" pos:end="352:74">setPopupVisible</name></name><argument_list pos:start="352:75" pos:end="352:81">(<argument pos:start="352:76" pos:end="352:80"><expr pos:start="352:76" pos:end="352:80"><literal type="boolean" pos:start="352:76" pos:end="352:80">false</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					</block_content>}</block></lambda></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<expr_stmt pos:start="354:41" pos:end="361:43"><expr pos:start="354:41" pos:end="361:42"><call pos:start="354:41" pos:end="354:60"><name pos:start="354:41" pos:end="354:58"><name pos:start="354:41" pos:end="354:43">box</name><operator pos:start="354:44" pos:end="354:44">.</operator><name pos:start="354:45" pos:end="354:58">getHoverSwitch</name></name><argument_list pos:start="354:59" pos:end="354:60">()</argument_list></call><operator pos:start="354:61" pos:end="354:61">.</operator><call pos:start="354:62" pos:end="361:42"><name pos:start="354:62" pos:end="354:83">addValueChangeListener</name><argument_list pos:start="354:84" pos:end="361:42">(<argument pos:start="354:85" pos:end="361:41"><expr pos:start="354:85" pos:end="361:41"><lambda pos:start="354:85" pos:end="361:41"><parameter_list type="pseudo" pos:start="354:85" pos:end="354:89"><parameter pos:start="354:85" pos:end="354:89"><decl pos:start="354:85" pos:end="354:89"><name pos:start="354:85" pos:end="354:89">click</name></decl></parameter></parameter_list> -&gt; <block pos:start="354:94" pos:end="361:41">{<block_content pos:start="355:49" pos:end="360:49">
						<for pos:start="355:49" pos:end="360:49">for <control pos:start="355:53" pos:end="355:85">(<init pos:start="355:54" pos:end="355:63"><decl pos:start="355:54" pos:end="355:62"><type pos:start="355:54" pos:end="355:56"><name pos:start="355:54" pos:end="355:56">int</name></type> <name pos:start="355:58" pos:end="355:58">i</name> <init pos:start="355:60" pos:end="355:62">= <expr pos:start="355:62" pos:end="355:62"><literal type="number" pos:start="355:62" pos:end="355:62">1</literal></expr></init></decl>;</init> <condition pos:start="355:65" pos:end="355:80"><expr pos:start="355:65" pos:end="355:79"><name pos:start="355:65" pos:end="355:65">i</name> <operator pos:start="355:67" pos:end="355:67">&lt;</operator> <name pos:start="355:69" pos:end="355:75">numUAVs</name> <operator pos:start="355:77" pos:end="355:77">+</operator> <literal type="number" pos:start="355:79" pos:end="355:79">1</literal></expr>;</condition> <incr pos:start="355:82" pos:end="355:84"><expr pos:start="355:82" pos:end="355:84"><name pos:start="355:82" pos:end="355:82">i</name><operator pos:start="355:83" pos:end="355:84">++</operator></expr></incr>)</control> <block pos:start="355:87" pos:end="360:49">{<block_content pos:start="356:57" pos:end="359:57">
							<decl_stmt pos:start="356:57" pos:end="356:111"><decl pos:start="356:57" pos:end="356:110"><type pos:start="356:57" pos:end="356:65"><name pos:start="356:57" pos:end="356:65">AFInfoBox</name></type> <name pos:start="356:67" pos:end="356:74">panelBox</name> <init pos:start="356:76" pos:end="356:110">= <expr pos:start="356:78" pos:end="356:110"><operator pos:start="356:78" pos:end="356:78">(</operator><name pos:start="356:79" pos:end="356:87">AFInfoBox</name><operator pos:start="356:88" pos:end="356:88">)</operator> <call pos:start="356:90" pos:end="356:110"><name pos:start="356:90" pos:end="356:107"><name pos:start="356:90" pos:end="356:94">boxes</name><operator pos:start="356:95" pos:end="356:95">.</operator><name pos:start="356:96" pos:end="356:107">getComponent</name></name><argument_list pos:start="356:108" pos:end="356:110">(<argument pos:start="356:109" pos:end="356:109"><expr pos:start="356:109" pos:end="356:109"><name pos:start="356:109" pos:end="356:109">i</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
							<if_stmt pos:start="357:57" pos:end="359:57"><if pos:start="357:57" pos:end="359:57">if <condition pos:start="357:60" pos:end="357:101">(<expr pos:start="357:61" pos:end="357:100"><call pos:start="357:61" pos:end="357:78"><name pos:start="357:61" pos:end="357:76"><name pos:start="357:61" pos:end="357:68">panelBox</name><operator pos:start="357:69" pos:end="357:69">.</operator><name pos:start="357:70" pos:end="357:76">getName</name></name><argument_list pos:start="357:77" pos:end="357:78">()</argument_list></call><operator pos:start="357:79" pos:end="357:79">.</operator><call pos:start="357:80" pos:end="357:100"><name pos:start="357:80" pos:end="357:85">equals</name><argument_list pos:start="357:86" pos:end="357:100">(<argument pos:start="357:87" pos:end="357:99"><expr pos:start="357:87" pos:end="357:99"><call pos:start="357:87" pos:end="357:99"><name pos:start="357:87" pos:end="357:97"><name pos:start="357:87" pos:end="357:89">box</name><operator pos:start="357:90" pos:end="357:90">.</operator><name pos:start="357:91" pos:end="357:97">getName</name></name><argument_list pos:start="357:98" pos:end="357:99">()</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="357:103" pos:end="359:57">{<block_content pos:start="358:65" pos:end="358:112">
								<expr_stmt pos:start="358:65" pos:end="358:112"><expr pos:start="358:65" pos:end="358:111"><call pos:start="358:65" pos:end="358:111"><name pos:start="358:65" pos:end="358:88"><name pos:start="358:65" pos:end="358:72">panelBox</name><operator pos:start="358:73" pos:end="358:73">.</operator><name pos:start="358:74" pos:end="358:88">setHoverInPlace</name></name><argument_list pos:start="358:89" pos:end="358:111">(<argument pos:start="358:90" pos:end="358:110"><expr pos:start="358:90" pos:end="358:110"><call pos:start="358:90" pos:end="358:110"><name pos:start="358:90" pos:end="358:108"><name pos:start="358:90" pos:end="358:92">box</name><operator pos:start="358:93" pos:end="358:93">.</operator><name pos:start="358:94" pos:end="358:108">getHoverInPlace</name></name><argument_list pos:start="358:109" pos:end="358:110">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
							</block_content>}</block></if></if_stmt>
						</block_content>}</block></for>
					</block_content>}</block></lambda></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<expr_stmt pos:start="362:41" pos:end="378:43"><expr pos:start="362:41" pos:end="378:42"><call pos:start="362:41" pos:end="362:57"><name pos:start="362:41" pos:end="362:55"><name pos:start="362:41" pos:end="362:43">box</name><operator pos:start="362:44" pos:end="362:44">.</operator><name pos:start="362:45" pos:end="362:55">getCheckBox</name></name><argument_list pos:start="362:56" pos:end="362:57">()</argument_list></call><operator pos:start="362:58" pos:end="362:58">.</operator><call pos:start="362:59" pos:end="378:42"><name pos:start="362:59" pos:end="362:80">addValueChangeListener</name><argument_list pos:start="362:81" pos:end="378:42">(<argument pos:start="362:82" pos:end="378:41"><expr pos:start="362:82" pos:end="378:41"><lambda pos:start="362:82" pos:end="378:41"><parameter_list type="pseudo" pos:start="362:82" pos:end="362:86"><parameter pos:start="362:82" pos:end="362:86"><decl pos:start="362:82" pos:end="362:86"><name pos:start="362:82" pos:end="362:86">click</name></decl></parameter></parameter_list> -&gt; <block pos:start="362:91" pos:end="378:41">{<block_content pos:start="363:49" pos:end="377:49"> <comment type="line" pos:start="362:93" pos:end="362:154">// if checkbox clicked in popup, it will change in AFInfoPanel</comment>
						<if_stmt pos:start="363:49" pos:end="377:49"><if pos:start="363:49" pos:end="370:49">if <condition pos:start="363:52" pos:end="363:81">(<expr pos:start="363:53" pos:end="363:80"><call pos:start="363:53" pos:end="363:69"><name pos:start="363:53" pos:end="363:67"><name pos:start="363:53" pos:end="363:55">box</name><operator pos:start="363:56" pos:end="363:56">.</operator><name pos:start="363:57" pos:end="363:67">getCheckBox</name></name><argument_list pos:start="363:68" pos:end="363:69">()</argument_list></call><operator pos:start="363:70" pos:end="363:70">.</operator><call pos:start="363:71" pos:end="363:80"><name pos:start="363:71" pos:end="363:78">getValue</name><argument_list pos:start="363:79" pos:end="363:80">()</argument_list></call></expr>)</condition> <block pos:start="363:83" pos:end="370:49">{<block_content pos:start="364:57" pos:end="369:57">
							<for pos:start="364:57" pos:end="369:57">for <control pos:start="364:61" pos:end="364:93">(<init pos:start="364:62" pos:end="364:71"><decl pos:start="364:62" pos:end="364:70"><type pos:start="364:62" pos:end="364:64"><name pos:start="364:62" pos:end="364:64">int</name></type> <name pos:start="364:66" pos:end="364:66">i</name> <init pos:start="364:68" pos:end="364:70">= <expr pos:start="364:70" pos:end="364:70"><literal type="number" pos:start="364:70" pos:end="364:70">1</literal></expr></init></decl>;</init> <condition pos:start="364:73" pos:end="364:88"><expr pos:start="364:73" pos:end="364:87"><name pos:start="364:73" pos:end="364:73">i</name> <operator pos:start="364:75" pos:end="364:75">&lt;</operator> <name pos:start="364:77" pos:end="364:83">numUAVs</name> <operator pos:start="364:85" pos:end="364:85">+</operator> <literal type="number" pos:start="364:87" pos:end="364:87">1</literal></expr>;</condition> <incr pos:start="364:90" pos:end="364:92"><expr pos:start="364:90" pos:end="364:92"><name pos:start="364:90" pos:end="364:90">i</name><operator pos:start="364:91" pos:end="364:92">++</operator></expr></incr>)</control> <block pos:start="364:95" pos:end="369:57">{<block_content pos:start="365:65" pos:end="368:65">
								<decl_stmt pos:start="365:65" pos:end="365:119"><decl pos:start="365:65" pos:end="365:118"><type pos:start="365:65" pos:end="365:73"><name pos:start="365:65" pos:end="365:73">AFInfoBox</name></type> <name pos:start="365:75" pos:end="365:82">panelBox</name> <init pos:start="365:84" pos:end="365:118">= <expr pos:start="365:86" pos:end="365:118"><operator pos:start="365:86" pos:end="365:86">(</operator><name pos:start="365:87" pos:end="365:95">AFInfoBox</name><operator pos:start="365:96" pos:end="365:96">)</operator> <call pos:start="365:98" pos:end="365:118"><name pos:start="365:98" pos:end="365:115"><name pos:start="365:98" pos:end="365:102">boxes</name><operator pos:start="365:103" pos:end="365:103">.</operator><name pos:start="365:104" pos:end="365:115">getComponent</name></name><argument_list pos:start="365:116" pos:end="365:118">(<argument pos:start="365:117" pos:end="365:117"><expr pos:start="365:117" pos:end="365:117"><name pos:start="365:117" pos:end="365:117">i</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
								<if_stmt pos:start="366:65" pos:end="368:65"><if pos:start="366:65" pos:end="368:65">if <condition pos:start="366:68" pos:end="366:109">(<expr pos:start="366:69" pos:end="366:108"><call pos:start="366:69" pos:end="366:86"><name pos:start="366:69" pos:end="366:84"><name pos:start="366:69" pos:end="366:76">panelBox</name><operator pos:start="366:77" pos:end="366:77">.</operator><name pos:start="366:78" pos:end="366:84">getName</name></name><argument_list pos:start="366:85" pos:end="366:86">()</argument_list></call><operator pos:start="366:87" pos:end="366:87">.</operator><call pos:start="366:88" pos:end="366:108"><name pos:start="366:88" pos:end="366:93">equals</name><argument_list pos:start="366:94" pos:end="366:108">(<argument pos:start="366:95" pos:end="366:107"><expr pos:start="366:95" pos:end="366:107"><call pos:start="366:95" pos:end="366:107"><name pos:start="366:95" pos:end="366:105"><name pos:start="366:95" pos:end="366:97">box</name><operator pos:start="366:98" pos:end="366:98">.</operator><name pos:start="366:99" pos:end="366:105">getName</name></name><argument_list pos:start="366:106" pos:end="366:107">()</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="366:111" pos:end="368:65">{<block_content pos:start="367:73" pos:end="367:100">
									<expr_stmt pos:start="367:73" pos:end="367:100"><expr pos:start="367:73" pos:end="367:99"><call pos:start="367:73" pos:end="367:99"><name pos:start="367:73" pos:end="367:93"><name pos:start="367:73" pos:end="367:80">panelBox</name><operator pos:start="367:81" pos:end="367:81">.</operator><name pos:start="367:82" pos:end="367:93">setIsChecked</name></name><argument_list pos:start="367:94" pos:end="367:99">(<argument pos:start="367:95" pos:end="367:98"><expr pos:start="367:95" pos:end="367:98"><literal type="boolean" pos:start="367:95" pos:end="367:98">true</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
								</block_content>}</block></if></if_stmt>
							</block_content>}</block></for>
						</block_content>}</block></if> <else pos:start="370:51" pos:end="377:49">else <block pos:start="370:56" pos:end="377:49">{<block_content pos:start="371:57" pos:end="376:57">
							<for pos:start="371:57" pos:end="376:57">for <control pos:start="371:61" pos:end="371:93">(<init pos:start="371:62" pos:end="371:71"><decl pos:start="371:62" pos:end="371:70"><type pos:start="371:62" pos:end="371:64"><name pos:start="371:62" pos:end="371:64">int</name></type> <name pos:start="371:66" pos:end="371:66">i</name> <init pos:start="371:68" pos:end="371:70">= <expr pos:start="371:70" pos:end="371:70"><literal type="number" pos:start="371:70" pos:end="371:70">1</literal></expr></init></decl>;</init> <condition pos:start="371:73" pos:end="371:88"><expr pos:start="371:73" pos:end="371:87"><name pos:start="371:73" pos:end="371:73">i</name> <operator pos:start="371:75" pos:end="371:75">&lt;</operator> <name pos:start="371:77" pos:end="371:83">numUAVs</name> <operator pos:start="371:85" pos:end="371:85">+</operator> <literal type="number" pos:start="371:87" pos:end="371:87">1</literal></expr>;</condition> <incr pos:start="371:90" pos:end="371:92"><expr pos:start="371:90" pos:end="371:92"><name pos:start="371:90" pos:end="371:90">i</name><operator pos:start="371:91" pos:end="371:92">++</operator></expr></incr>)</control> <block pos:start="371:95" pos:end="376:57">{<block_content pos:start="372:65" pos:end="375:65">
								<decl_stmt pos:start="372:65" pos:end="372:119"><decl pos:start="372:65" pos:end="372:118"><type pos:start="372:65" pos:end="372:73"><name pos:start="372:65" pos:end="372:73">AFInfoBox</name></type> <name pos:start="372:75" pos:end="372:82">panelBox</name> <init pos:start="372:84" pos:end="372:118">= <expr pos:start="372:86" pos:end="372:118"><operator pos:start="372:86" pos:end="372:86">(</operator><name pos:start="372:87" pos:end="372:95">AFInfoBox</name><operator pos:start="372:96" pos:end="372:96">)</operator> <call pos:start="372:98" pos:end="372:118"><name pos:start="372:98" pos:end="372:115"><name pos:start="372:98" pos:end="372:102">boxes</name><operator pos:start="372:103" pos:end="372:103">.</operator><name pos:start="372:104" pos:end="372:115">getComponent</name></name><argument_list pos:start="372:116" pos:end="372:118">(<argument pos:start="372:117" pos:end="372:117"><expr pos:start="372:117" pos:end="372:117"><name pos:start="372:117" pos:end="372:117">i</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
								<if_stmt pos:start="373:65" pos:end="375:65"><if pos:start="373:65" pos:end="375:65">if <condition pos:start="373:68" pos:end="373:109">(<expr pos:start="373:69" pos:end="373:108"><call pos:start="373:69" pos:end="373:86"><name pos:start="373:69" pos:end="373:84"><name pos:start="373:69" pos:end="373:76">panelBox</name><operator pos:start="373:77" pos:end="373:77">.</operator><name pos:start="373:78" pos:end="373:84">getName</name></name><argument_list pos:start="373:85" pos:end="373:86">()</argument_list></call><operator pos:start="373:87" pos:end="373:87">.</operator><call pos:start="373:88" pos:end="373:108"><name pos:start="373:88" pos:end="373:93">equals</name><argument_list pos:start="373:94" pos:end="373:108">(<argument pos:start="373:95" pos:end="373:107"><expr pos:start="373:95" pos:end="373:107"><call pos:start="373:95" pos:end="373:107"><name pos:start="373:95" pos:end="373:105"><name pos:start="373:95" pos:end="373:97">box</name><operator pos:start="373:98" pos:end="373:98">.</operator><name pos:start="373:99" pos:end="373:105">getName</name></name><argument_list pos:start="373:106" pos:end="373:107">()</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="373:111" pos:end="375:65">{<block_content pos:start="374:73" pos:end="374:101">
									<expr_stmt pos:start="374:73" pos:end="374:101"><expr pos:start="374:73" pos:end="374:100"><call pos:start="374:73" pos:end="374:100"><name pos:start="374:73" pos:end="374:93"><name pos:start="374:73" pos:end="374:80">panelBox</name><operator pos:start="374:81" pos:end="374:81">.</operator><name pos:start="374:82" pos:end="374:93">setIsChecked</name></name><argument_list pos:start="374:94" pos:end="374:100">(<argument pos:start="374:95" pos:end="374:99"><expr pos:start="374:95" pos:end="374:99"><literal type="boolean" pos:start="374:95" pos:end="374:99">false</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
								</block_content>}</block></if></if_stmt>
							</block_content>}</block></for>
						</block_content>}</block></else></if_stmt>
					</block_content>}</block></lambda></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<expr_stmt pos:start="379:41" pos:end="379:71"><expr pos:start="379:41" pos:end="379:70"><call pos:start="379:41" pos:end="379:70"><name pos:start="379:41" pos:end="379:65"><name pos:start="379:41" pos:end="379:52">popupContent</name><operator pos:start="379:53" pos:end="379:53">.</operator><name pos:start="379:54" pos:end="379:65">addComponent</name></name><argument_list pos:start="379:66" pos:end="379:70">(<argument pos:start="379:67" pos:end="379:69"><expr pos:start="379:67" pos:end="379:69"><name pos:start="379:67" pos:end="379:69">box</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				</block_content>}</block></if></if_stmt>
			</block_content>}</block></for>
			<comment type="block" pos:start="382:25" pos:end="385:27">/*
			 * find the location on the screen to display the popup. Takes the absolute position of the mouse and converts that to the relative position of the mouse on the map. Uses the map dimensions and
			 * the map position within the layout
			 */</comment>
			<decl_stmt pos:start="386:25" pos:end="386:100"><decl pos:start="386:25" pos:end="386:99"><type pos:start="386:25" pos:end="386:30"><name pos:start="386:25" pos:end="386:30">double</name></type> <name pos:start="386:32" pos:end="386:39">mapWidth</name> <init pos:start="386:41" pos:end="386:99">= <expr pos:start="386:43" pos:end="386:99"><call pos:start="386:43" pos:end="386:57"><name pos:start="386:43" pos:end="386:55"><name pos:start="386:43" pos:end="386:44">UI</name><operator pos:start="386:45" pos:end="386:45">.</operator><name pos:start="386:46" pos:end="386:55">getCurrent</name></name><argument_list pos:start="386:56" pos:end="386:57">()</argument_list></call><operator pos:start="386:58" pos:end="386:58">.</operator><call pos:start="386:59" pos:end="386:67"><name pos:start="386:59" pos:end="386:65">getPage</name><argument_list pos:start="386:66" pos:end="386:67">()</argument_list></call><operator pos:start="386:68" pos:end="386:68">.</operator><call pos:start="386:69" pos:end="386:91"><name pos:start="386:69" pos:end="386:89">getBrowserWindowWidth</name><argument_list pos:start="386:90" pos:end="386:91">()</argument_list></call> <operator pos:start="386:93" pos:end="386:93">-</operator> <literal type="number" pos:start="386:95" pos:end="386:99">366.0</literal></expr></init></decl>;</decl_stmt>
			<decl_stmt pos:start="387:25" pos:end="387:100"><decl pos:start="387:25" pos:end="387:99"><type pos:start="387:25" pos:end="387:30"><name pos:start="387:25" pos:end="387:30">double</name></type> <name pos:start="387:32" pos:end="387:40">mapHeight</name> <init pos:start="387:42" pos:end="387:99">= <expr pos:start="387:44" pos:end="387:99"><call pos:start="387:44" pos:end="387:58"><name pos:start="387:44" pos:end="387:56"><name pos:start="387:44" pos:end="387:45">UI</name><operator pos:start="387:46" pos:end="387:46">.</operator><name pos:start="387:47" pos:end="387:56">getCurrent</name></name><argument_list pos:start="387:57" pos:end="387:58">()</argument_list></call><operator pos:start="387:59" pos:end="387:59">.</operator><call pos:start="387:60" pos:end="387:68"><name pos:start="387:60" pos:end="387:66">getPage</name><argument_list pos:start="387:67" pos:end="387:68">()</argument_list></call><operator pos:start="387:69" pos:end="387:69">.</operator><call pos:start="387:70" pos:end="387:93"><name pos:start="387:70" pos:end="387:91">getBrowserWindowHeight</name><argument_list pos:start="387:92" pos:end="387:93">()</argument_list></call> <operator pos:start="387:95" pos:end="387:95">*</operator> <literal type="number" pos:start="387:97" pos:end="387:99">0.9</literal></expr></init></decl>;</decl_stmt>

			<decl_stmt pos:start="389:25" pos:end="389:122"><decl pos:start="389:25" pos:end="389:121"><type pos:start="389:25" pos:end="389:30"><name pos:start="389:25" pos:end="389:30">double</name></type> <name pos:start="389:32" pos:end="389:48">xDegreeDifference</name> <init pos:start="389:50" pos:end="389:121">= <expr pos:start="389:52" pos:end="389:121"><operator pos:start="389:52" pos:end="389:52">-</operator><operator pos:start="389:53" pos:end="389:53">(</operator><call pos:start="389:54" pos:end="389:75"><name pos:start="389:54" pos:end="389:73"><name pos:start="389:54" pos:end="389:63">leafletMap</name><operator pos:start="389:64" pos:end="389:64">.</operator><name pos:start="389:65" pos:end="389:73">getCenter</name></name><argument_list pos:start="389:74" pos:end="389:75">()</argument_list></call><operator pos:start="389:76" pos:end="389:76">.</operator><call pos:start="389:77" pos:end="389:84"><name pos:start="389:77" pos:end="389:82">getLon</name><argument_list pos:start="389:83" pos:end="389:84">()</argument_list></call> <operator pos:start="389:86" pos:end="389:86">-</operator> <call pos:start="389:88" pos:end="389:111"><name pos:start="389:88" pos:end="389:109"><name pos:start="389:88" pos:end="389:100">leafletMarker</name><operator pos:start="389:101" pos:end="389:101">.</operator><name pos:start="389:102" pos:end="389:109">getPoint</name></name><argument_list pos:start="389:110" pos:end="389:111">()</argument_list></call><operator pos:start="389:112" pos:end="389:112">.</operator><call pos:start="389:113" pos:end="389:120"><name pos:start="389:113" pos:end="389:118">getLon</name><argument_list pos:start="389:119" pos:end="389:120">()</argument_list></call><operator pos:start="389:121" pos:end="389:121">)</operator></expr></init></decl>;</decl_stmt>
			<decl_stmt pos:start="390:25" pos:end="390:119"><decl pos:start="390:25" pos:end="390:118"><type pos:start="390:25" pos:end="390:30"><name pos:start="390:25" pos:end="390:30">double</name></type> <name pos:start="390:32" pos:end="390:48">yDegreeDifference</name> <init pos:start="390:50" pos:end="390:118">= <expr pos:start="390:52" pos:end="390:118"><call pos:start="390:52" pos:end="390:73"><name pos:start="390:52" pos:end="390:71"><name pos:start="390:52" pos:end="390:61">leafletMap</name><operator pos:start="390:62" pos:end="390:62">.</operator><name pos:start="390:63" pos:end="390:71">getCenter</name></name><argument_list pos:start="390:72" pos:end="390:73">()</argument_list></call><operator pos:start="390:74" pos:end="390:74">.</operator><call pos:start="390:75" pos:end="390:82"><name pos:start="390:75" pos:end="390:80">getLat</name><argument_list pos:start="390:81" pos:end="390:82">()</argument_list></call> <operator pos:start="390:84" pos:end="390:84">-</operator> <call pos:start="390:86" pos:end="390:109"><name pos:start="390:86" pos:end="390:107"><name pos:start="390:86" pos:end="390:98">leafletMarker</name><operator pos:start="390:99" pos:end="390:99">.</operator><name pos:start="390:100" pos:end="390:107">getPoint</name></name><argument_list pos:start="390:108" pos:end="390:109">()</argument_list></call><operator pos:start="390:110" pos:end="390:110">.</operator><call pos:start="390:111" pos:end="390:118"><name pos:start="390:111" pos:end="390:116">getLat</name><argument_list pos:start="390:117" pos:end="390:118">()</argument_list></call></expr></init></decl>;</decl_stmt>
			<decl_stmt pos:start="391:25" pos:end="391:98"><decl pos:start="391:25" pos:end="391:97"><type pos:start="391:25" pos:end="391:30"><name pos:start="391:25" pos:end="391:30">double</name></type> <name pos:start="391:32" pos:end="391:44">degreePerZoom</name> <init pos:start="391:46" pos:end="391:97">= <expr pos:start="391:48" pos:end="391:97"><operator pos:start="391:48" pos:end="391:48">(</operator><literal type="number" pos:start="391:49" pos:end="391:53">360.0</literal> <operator pos:start="391:55" pos:end="391:55">/</operator> <operator pos:start="391:57" pos:end="391:57">(</operator><call pos:start="391:58" pos:end="391:95"><name pos:start="391:58" pos:end="391:65"><name pos:start="391:58" pos:end="391:61">Math</name><operator pos:start="391:62" pos:end="391:62">.</operator><name pos:start="391:63" pos:end="391:65">pow</name></name><argument_list pos:start="391:66" pos:end="391:95">(<argument pos:start="391:67" pos:end="391:67"><expr pos:start="391:67" pos:end="391:67"><literal type="number" pos:start="391:67" pos:end="391:67">2</literal></expr></argument>, <argument pos:start="391:70" pos:end="391:94"><expr pos:start="391:70" pos:end="391:94"><call pos:start="391:70" pos:end="391:94"><name pos:start="391:70" pos:end="391:92"><name pos:start="391:70" pos:end="391:79">leafletMap</name><operator pos:start="391:80" pos:end="391:80">.</operator><name pos:start="391:81" pos:end="391:92">getZoomLevel</name></name><argument_list pos:start="391:93" pos:end="391:94">()</argument_list></call></expr></argument>)</argument_list></call><operator pos:start="391:96" pos:end="391:96">)</operator><operator pos:start="391:97" pos:end="391:97">)</operator></expr></init></decl>;</decl_stmt>
			<decl_stmt pos:start="392:25" pos:end="392:73"><decl pos:start="392:25" pos:end="392:72"><type pos:start="392:25" pos:end="392:30"><name pos:start="392:25" pos:end="392:30">double</name></type> <name pos:start="392:32" pos:end="392:45">degreePerPixel</name> <init pos:start="392:47" pos:end="392:72">= <expr pos:start="392:49" pos:end="392:72"><name pos:start="392:49" pos:end="392:61">degreePerZoom</name> <operator pos:start="392:63" pos:end="392:63">/</operator> <name pos:start="392:65" pos:end="392:72">mapWidth</name></expr></init></decl>;</decl_stmt>
			<decl_stmt pos:start="393:25" pos:end="393:93"><decl pos:start="393:25" pos:end="393:92"><type pos:start="393:25" pos:end="393:30"><name pos:start="393:25" pos:end="393:30">double</name></type> <name pos:start="393:32" pos:end="393:47">xPixelDifference</name> <init pos:start="393:49" pos:end="393:92">= <expr pos:start="393:51" pos:end="393:92"><operator pos:start="393:51" pos:end="393:51">(</operator><name pos:start="393:52" pos:end="393:68">xDegreeDifference</name> <operator pos:start="393:70" pos:end="393:70">/</operator> <name pos:start="393:72" pos:end="393:85">degreePerPixel</name><operator pos:start="393:86" pos:end="393:86">)</operator> <operator pos:start="393:88" pos:end="393:88">/</operator> <literal type="number" pos:start="393:90" pos:end="393:92">3.0</literal></expr></init></decl>;</decl_stmt>
			<decl_stmt pos:start="394:25" pos:end="394:93"><decl pos:start="394:25" pos:end="394:92"><type pos:start="394:25" pos:end="394:30"><name pos:start="394:25" pos:end="394:30">double</name></type> <name pos:start="394:32" pos:end="394:47">yPixelDifference</name> <init pos:start="394:49" pos:end="394:92">= <expr pos:start="394:51" pos:end="394:92"><operator pos:start="394:51" pos:end="394:51">(</operator><name pos:start="394:52" pos:end="394:68">yDegreeDifference</name> <operator pos:start="394:70" pos:end="394:70">/</operator> <name pos:start="394:72" pos:end="394:85">degreePerPixel</name><operator pos:start="394:86" pos:end="394:86">)</operator> <operator pos:start="394:88" pos:end="394:88">/</operator> <literal type="number" pos:start="394:90" pos:end="394:92">3.0</literal></expr></init></decl>;</decl_stmt>

			<expr_stmt pos:start="396:25" pos:end="396:67"><expr pos:start="396:25" pos:end="396:66"><name pos:start="396:25" pos:end="396:40">xPixelDifference</name> <operator pos:start="396:42" pos:end="396:42">=</operator> <name pos:start="396:44" pos:end="396:59">xPixelDifference</name> <operator pos:start="396:61" pos:end="396:61">*</operator> <literal type="number" pos:start="396:63" pos:end="396:66">0.55</literal></expr>;</expr_stmt>

			<decl_stmt pos:start="398:25" pos:end="398:88"><decl pos:start="398:25" pos:end="398:87"><type pos:start="398:25" pos:end="398:30"><name pos:start="398:25" pos:end="398:30">double</name></type> <name pos:start="398:32" pos:end="398:49">pixelsToLeftBorder</name> <init pos:start="398:51" pos:end="398:87">= <expr pos:start="398:53" pos:end="398:87"><operator pos:start="398:53" pos:end="398:53">(</operator><name pos:start="398:54" pos:end="398:61">mapWidth</name> <operator pos:start="398:63" pos:end="398:63">/</operator> <literal type="number" pos:start="398:65" pos:end="398:67">2.0</literal><operator pos:start="398:68" pos:end="398:68">)</operator> <operator pos:start="398:70" pos:end="398:70">+</operator> <name pos:start="398:72" pos:end="398:87">xPixelDifference</name></expr></init></decl>;</decl_stmt>
			<decl_stmt pos:start="399:25" pos:end="399:88"><decl pos:start="399:25" pos:end="399:87"><type pos:start="399:25" pos:end="399:30"><name pos:start="399:25" pos:end="399:30">double</name></type> <name pos:start="399:32" pos:end="399:48">pixelsToTopBorder</name> <init pos:start="399:50" pos:end="399:87">= <expr pos:start="399:52" pos:end="399:87"><operator pos:start="399:52" pos:end="399:52">(</operator><name pos:start="399:53" pos:end="399:61">mapHeight</name> <operator pos:start="399:63" pos:end="399:63">/</operator> <literal type="number" pos:start="399:65" pos:end="399:67">2.0</literal><operator pos:start="399:68" pos:end="399:68">)</operator> <operator pos:start="399:70" pos:end="399:70">+</operator> <name pos:start="399:72" pos:end="399:87">yPixelDifference</name></expr></init></decl>;</decl_stmt>
			<decl_stmt pos:start="400:25" pos:end="400:88"><decl pos:start="400:25" pos:end="400:87"><type pos:start="400:25" pos:end="400:30"><name pos:start="400:25" pos:end="400:30">double</name></type> <name pos:start="400:32" pos:end="400:37">mouseX</name> <init pos:start="400:39" pos:end="400:87">= <expr pos:start="400:41" pos:end="400:87"><call pos:start="400:41" pos:end="400:66"><name pos:start="400:41" pos:end="400:64"><name pos:start="400:41" pos:end="400:49">MouseInfo</name><operator pos:start="400:50" pos:end="400:50">.</operator><name pos:start="400:51" pos:end="400:64">getPointerInfo</name></name><argument_list pos:start="400:65" pos:end="400:66">()</argument_list></call><operator pos:start="400:67" pos:end="400:67">.</operator><call pos:start="400:68" pos:end="400:80"><name pos:start="400:68" pos:end="400:78">getLocation</name><argument_list pos:start="400:79" pos:end="400:80">()</argument_list></call><operator pos:start="400:81" pos:end="400:81">.</operator><call pos:start="400:82" pos:end="400:87"><name pos:start="400:82" pos:end="400:85">getX</name><argument_list pos:start="400:86" pos:end="400:87">()</argument_list></call></expr></init></decl>;</decl_stmt>
			<decl_stmt pos:start="401:25" pos:end="401:88"><decl pos:start="401:25" pos:end="401:87"><type pos:start="401:25" pos:end="401:30"><name pos:start="401:25" pos:end="401:30">double</name></type> <name pos:start="401:32" pos:end="401:37">mouseY</name> <init pos:start="401:39" pos:end="401:87">= <expr pos:start="401:41" pos:end="401:87"><call pos:start="401:41" pos:end="401:66"><name pos:start="401:41" pos:end="401:64"><name pos:start="401:41" pos:end="401:49">MouseInfo</name><operator pos:start="401:50" pos:end="401:50">.</operator><name pos:start="401:51" pos:end="401:64">getPointerInfo</name></name><argument_list pos:start="401:65" pos:end="401:66">()</argument_list></call><operator pos:start="401:67" pos:end="401:67">.</operator><call pos:start="401:68" pos:end="401:80"><name pos:start="401:68" pos:end="401:78">getLocation</name><argument_list pos:start="401:79" pos:end="401:80">()</argument_list></call><operator pos:start="401:81" pos:end="401:81">.</operator><call pos:start="401:82" pos:end="401:87"><name pos:start="401:82" pos:end="401:85">getY</name><argument_list pos:start="401:86" pos:end="401:87">()</argument_list></call></expr></init></decl>;</decl_stmt>
			<decl_stmt pos:start="402:25" pos:end="402:73"><decl pos:start="402:25" pos:end="402:72"><type pos:start="402:25" pos:end="402:30"><name pos:start="402:25" pos:end="402:30">double</name></type> <name pos:start="402:32" pos:end="402:42">mapTopLeftX</name> <init pos:start="402:44" pos:end="402:72">= <expr pos:start="402:46" pos:end="402:72"><name pos:start="402:46" pos:end="402:51">mouseX</name> <operator pos:start="402:53" pos:end="402:53">-</operator> <name pos:start="402:55" pos:end="402:72">pixelsToLeftBorder</name></expr></init></decl>;</decl_stmt>
			<decl_stmt pos:start="403:25" pos:end="403:72"><decl pos:start="403:25" pos:end="403:71"><type pos:start="403:25" pos:end="403:30"><name pos:start="403:25" pos:end="403:30">double</name></type> <name pos:start="403:32" pos:end="403:42">mapTopLeftY</name> <init pos:start="403:44" pos:end="403:71">= <expr pos:start="403:46" pos:end="403:71"><name pos:start="403:46" pos:end="403:51">mouseY</name> <operator pos:start="403:53" pos:end="403:53">-</operator> <name pos:start="403:55" pos:end="403:71">pixelsToTopBorder</name></expr></init></decl>;</decl_stmt>

			<decl_stmt pos:start="405:25" pos:end="405:72"><decl pos:start="405:25" pos:end="405:71"><type pos:start="405:25" pos:end="405:30"><name pos:start="405:25" pos:end="405:30">double</name></type> <name pos:start="405:32" pos:end="405:48">adjustedXLocation</name> <init pos:start="405:50" pos:end="405:71">= <expr pos:start="405:52" pos:end="405:71"><name pos:start="405:52" pos:end="405:57">mouseX</name> <operator pos:start="405:59" pos:end="405:59">-</operator> <name pos:start="405:61" pos:end="405:71">mapTopLeftX</name></expr></init></decl>;</decl_stmt>
			<decl_stmt pos:start="406:25" pos:end="406:72"><decl pos:start="406:25" pos:end="406:71"><type pos:start="406:25" pos:end="406:30"><name pos:start="406:25" pos:end="406:30">double</name></type> <name pos:start="406:32" pos:end="406:48">adjustedYLocation</name> <init pos:start="406:50" pos:end="406:71">= <expr pos:start="406:52" pos:end="406:71"><name pos:start="406:52" pos:end="406:57">mouseY</name> <operator pos:start="406:59" pos:end="406:59">-</operator> <name pos:start="406:61" pos:end="406:71">mapTopLeftY</name></expr></init></decl>;</decl_stmt>

			<expr_stmt pos:start="408:25" pos:end="409:90"><expr pos:start="408:25" pos:end="409:89"><call pos:start="408:25" pos:end="409:89"><name pos:start="408:25" pos:end="408:43"><name pos:start="408:25" pos:end="408:30">layout</name><operator pos:start="408:31" pos:end="408:31">.</operator><name pos:start="408:32" pos:end="408:43">addComponent</name></name><argument_list pos:start="408:44" pos:end="409:89">(<argument pos:start="408:45" pos:end="408:54"><expr pos:start="408:45" pos:end="408:54"><name pos:start="408:45" pos:end="408:54">dronePopup</name></expr></argument>, <argument pos:start="408:57" pos:end="409:88"><expr pos:start="408:57" pos:end="409:88"><literal type="string" pos:start="408:57" pos:end="408:62">"top:"</literal> <operator pos:start="408:64" pos:end="408:64">+</operator> <call pos:start="408:66" pos:end="408:104"><name pos:start="408:66" pos:end="408:79"><name pos:start="408:66" pos:end="408:71">String</name><operator pos:start="408:72" pos:end="408:72">.</operator><name pos:start="408:73" pos:end="408:79">valueOf</name></name><argument_list pos:start="408:80" pos:end="408:104">(<argument pos:start="408:81" pos:end="408:103"><expr pos:start="408:81" pos:end="408:103"><operator pos:start="408:81" pos:end="408:81">(</operator><name pos:start="408:82" pos:end="408:84">int</name><operator pos:start="408:85" pos:end="408:85">)</operator> <name pos:start="408:87" pos:end="408:103">adjustedYLocation</name></expr></argument>)</argument_list></call> <operator pos:start="408:106" pos:end="408:106">+</operator> <literal type="string" pos:start="408:108" pos:end="408:117">"px;left:"</literal>
					<operator pos:start="409:41" pos:end="409:41">+</operator> <call pos:start="409:43" pos:end="409:81"><name pos:start="409:43" pos:end="409:56"><name pos:start="409:43" pos:end="409:48">String</name><operator pos:start="409:49" pos:end="409:49">.</operator><name pos:start="409:50" pos:end="409:56">valueOf</name></name><argument_list pos:start="409:57" pos:end="409:81">(<argument pos:start="409:58" pos:end="409:80"><expr pos:start="409:58" pos:end="409:80"><operator pos:start="409:58" pos:end="409:58">(</operator><name pos:start="409:59" pos:end="409:61">int</name><operator pos:start="409:62" pos:end="409:62">)</operator> <name pos:start="409:64" pos:end="409:80">adjustedXLocation</name></expr></argument>)</argument_list></call> <operator pos:start="409:83" pos:end="409:83">+</operator> <literal type="string" pos:start="409:85" pos:end="409:88">"px"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

			<expr_stmt pos:start="411:25" pos:end="411:52"><expr pos:start="411:25" pos:end="411:51"><call pos:start="411:25" pos:end="411:51"><name pos:start="411:25" pos:end="411:45"><name pos:start="411:25" pos:end="411:34">dronePopup</name><operator pos:start="411:35" pos:end="411:35">.</operator><name pos:start="411:36" pos:end="411:45">setVisible</name></name><argument_list pos:start="411:46" pos:end="411:51">(<argument pos:start="411:47" pos:end="411:50"><expr pos:start="411:47" pos:end="411:50"><literal type="boolean" pos:start="411:47" pos:end="411:50">true</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt pos:start="412:25" pos:end="412:57"><expr pos:start="412:25" pos:end="412:56"><call pos:start="412:25" pos:end="412:56"><name pos:start="412:25" pos:end="412:50"><name pos:start="412:25" pos:end="412:34">dronePopup</name><operator pos:start="412:35" pos:end="412:35">.</operator><name pos:start="412:36" pos:end="412:50">setPopupVisible</name></name><argument_list pos:start="412:51" pos:end="412:56">(<argument pos:start="412:52" pos:end="412:55"><expr pos:start="412:52" pos:end="412:55"><literal type="boolean" pos:start="412:52" pos:end="412:55">true</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		</block_content>}</block></function>
	}</block></class>

	<comment type="block" format="javadoc" pos:start="417:9" pos:end="420:11">/**
	 * 
	 * @return returns the waypoint popup
	 */</comment>
	<function pos:start="421:9" pos:end="449:9"><type pos:start="421:9" pos:end="421:24"><specifier pos:start="421:9" pos:end="421:14">public</specifier> <name pos:start="421:16" pos:end="421:24">PopupView</name></type> <name pos:start="421:26" pos:end="421:48">createWayPointPopupView</name><parameter_list pos:start="421:49" pos:end="421:50">()</parameter_list> <block pos:start="421:52" pos:end="449:9">{<block_content pos:start="422:17" pos:end="448:29">
		<decl_stmt pos:start="422:17" pos:end="422:67"><decl pos:start="422:17" pos:end="422:66"><type pos:start="422:17" pos:end="422:30"><name pos:start="422:17" pos:end="422:30">VerticalLayout</name></type> <name pos:start="422:32" pos:end="422:43">popupContent</name> <init pos:start="422:45" pos:end="422:66">= <expr pos:start="422:47" pos:end="422:66"><operator pos:start="422:47" pos:end="422:49">new</operator> <call pos:start="422:51" pos:end="422:66"><name pos:start="422:51" pos:end="422:64">VerticalLayout</name><argument_list pos:start="422:65" pos:end="422:66">()</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt pos:start="423:17" pos:end="423:51"><expr pos:start="423:17" pos:end="423:50"><call pos:start="423:17" pos:end="423:50"><name pos:start="423:17" pos:end="423:48"><name pos:start="423:17" pos:end="423:28">popupContent</name><operator pos:start="423:29" pos:end="423:29">.</operator><name pos:start="423:30" pos:end="423:48">removeAllComponents</name></name><argument_list pos:start="423:49" pos:end="423:50">()</argument_list></call></expr>;</expr_stmt>

		<decl_stmt pos:start="425:17" pos:end="425:50"><decl pos:start="425:17" pos:end="425:49"><type pos:start="425:17" pos:end="425:21"><name pos:start="425:17" pos:end="425:21">Label</name></type> <name pos:start="425:23" pos:end="425:35">latitudeLabel</name> <init pos:start="425:37" pos:end="425:49">= <expr pos:start="425:39" pos:end="425:49"><operator pos:start="425:39" pos:end="425:41">new</operator> <call pos:start="425:43" pos:end="425:49"><name pos:start="425:43" pos:end="425:47">Label</name><argument_list pos:start="425:48" pos:end="425:49">()</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt pos:start="426:17" pos:end="426:48"><expr pos:start="426:17" pos:end="426:47"><call pos:start="426:17" pos:end="426:47"><name pos:start="426:17" pos:end="426:35"><name pos:start="426:17" pos:end="426:29">latitudeLabel</name><operator pos:start="426:30" pos:end="426:30">.</operator><name pos:start="426:31" pos:end="426:35">setId</name></name><argument_list pos:start="426:36" pos:end="426:47">(<argument pos:start="426:37" pos:end="426:46"><expr pos:start="426:37" pos:end="426:46"><literal type="string" pos:start="426:37" pos:end="426:46">"latitude"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		<decl_stmt pos:start="428:17" pos:end="428:51"><decl pos:start="428:17" pos:end="428:50"><type pos:start="428:17" pos:end="428:21"><name pos:start="428:17" pos:end="428:21">Label</name></type> <name pos:start="428:23" pos:end="428:36">longitudeLabel</name> <init pos:start="428:38" pos:end="428:50">= <expr pos:start="428:40" pos:end="428:50"><operator pos:start="428:40" pos:end="428:42">new</operator> <call pos:start="428:44" pos:end="428:50"><name pos:start="428:44" pos:end="428:48">Label</name><argument_list pos:start="428:49" pos:end="428:50">()</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt pos:start="429:17" pos:end="429:50"><expr pos:start="429:17" pos:end="429:49"><call pos:start="429:17" pos:end="429:49"><name pos:start="429:17" pos:end="429:36"><name pos:start="429:17" pos:end="429:30">longitudeLabel</name><operator pos:start="429:31" pos:end="429:31">.</operator><name pos:start="429:32" pos:end="429:36">setId</name></name><argument_list pos:start="429:37" pos:end="429:49">(<argument pos:start="429:38" pos:end="429:48"><expr pos:start="429:38" pos:end="429:48"><literal type="string" pos:start="429:38" pos:end="429:48">"longitude"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		<decl_stmt pos:start="431:17" pos:end="431:50"><decl pos:start="431:17" pos:end="431:49"><type pos:start="431:17" pos:end="431:21"><name pos:start="431:17" pos:end="431:21">Label</name></type> <name pos:start="431:23" pos:end="431:35">altitudeLabel</name> <init pos:start="431:37" pos:end="431:49">= <expr pos:start="431:39" pos:end="431:49"><operator pos:start="431:39" pos:end="431:41">new</operator> <call pos:start="431:43" pos:end="431:49"><name pos:start="431:43" pos:end="431:47">Label</name><argument_list pos:start="431:48" pos:end="431:49">()</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt pos:start="432:17" pos:end="432:48"><expr pos:start="432:17" pos:end="432:47"><call pos:start="432:17" pos:end="432:47"><name pos:start="432:17" pos:end="432:35"><name pos:start="432:17" pos:end="432:29">altitudeLabel</name><operator pos:start="432:30" pos:end="432:30">.</operator><name pos:start="432:31" pos:end="432:35">setId</name></name><argument_list pos:start="432:36" pos:end="432:47">(<argument pos:start="432:37" pos:end="432:46"><expr pos:start="432:37" pos:end="432:46"><literal type="string" pos:start="432:37" pos:end="432:46">"altitude"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		<decl_stmt pos:start="434:17" pos:end="434:54"><decl pos:start="434:17" pos:end="434:53"><type pos:start="434:17" pos:end="434:21"><name pos:start="434:17" pos:end="434:21">Label</name></type> <name pos:start="434:23" pos:end="434:39">transitSpeedLabel</name> <init pos:start="434:41" pos:end="434:53">= <expr pos:start="434:43" pos:end="434:53"><operator pos:start="434:43" pos:end="434:45">new</operator> <call pos:start="434:47" pos:end="434:53"><name pos:start="434:47" pos:end="434:51">Label</name><argument_list pos:start="434:52" pos:end="434:53">()</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt pos:start="435:17" pos:end="435:56"><expr pos:start="435:17" pos:end="435:55"><call pos:start="435:17" pos:end="435:55"><name pos:start="435:17" pos:end="435:39"><name pos:start="435:17" pos:end="435:33">transitSpeedLabel</name><operator pos:start="435:34" pos:end="435:34">.</operator><name pos:start="435:35" pos:end="435:39">setId</name></name><argument_list pos:start="435:40" pos:end="435:55">(<argument pos:start="435:41" pos:end="435:54"><expr pos:start="435:41" pos:end="435:54"><literal type="string" pos:start="435:41" pos:end="435:54">"transitSpeed"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		<expr_stmt pos:start="437:17" pos:end="437:57"><expr pos:start="437:17" pos:end="437:56"><call pos:start="437:17" pos:end="437:56"><name pos:start="437:17" pos:end="437:41"><name pos:start="437:17" pos:end="437:28">popupContent</name><operator pos:start="437:29" pos:end="437:29">.</operator><name pos:start="437:30" pos:end="437:41">addComponent</name></name><argument_list pos:start="437:42" pos:end="437:56">(<argument pos:start="437:43" pos:end="437:55"><expr pos:start="437:43" pos:end="437:55"><name pos:start="437:43" pos:end="437:55">latitudeLabel</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt pos:start="438:17" pos:end="438:58"><expr pos:start="438:17" pos:end="438:57"><call pos:start="438:17" pos:end="438:57"><name pos:start="438:17" pos:end="438:41"><name pos:start="438:17" pos:end="438:28">popupContent</name><operator pos:start="438:29" pos:end="438:29">.</operator><name pos:start="438:30" pos:end="438:41">addComponent</name></name><argument_list pos:start="438:42" pos:end="438:57">(<argument pos:start="438:43" pos:end="438:56"><expr pos:start="438:43" pos:end="438:56"><name pos:start="438:43" pos:end="438:56">longitudeLabel</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt pos:start="439:17" pos:end="439:57"><expr pos:start="439:17" pos:end="439:56"><call pos:start="439:17" pos:end="439:56"><name pos:start="439:17" pos:end="439:41"><name pos:start="439:17" pos:end="439:28">popupContent</name><operator pos:start="439:29" pos:end="439:29">.</operator><name pos:start="439:30" pos:end="439:41">addComponent</name></name><argument_list pos:start="439:42" pos:end="439:56">(<argument pos:start="439:43" pos:end="439:55"><expr pos:start="439:43" pos:end="439:55"><name pos:start="439:43" pos:end="439:55">altitudeLabel</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt pos:start="440:17" pos:end="440:61"><expr pos:start="440:17" pos:end="440:60"><call pos:start="440:17" pos:end="440:60"><name pos:start="440:17" pos:end="440:41"><name pos:start="440:17" pos:end="440:28">popupContent</name><operator pos:start="440:29" pos:end="440:29">.</operator><name pos:start="440:30" pos:end="440:41">addComponent</name></name><argument_list pos:start="440:42" pos:end="440:60">(<argument pos:start="440:43" pos:end="440:59"><expr pos:start="440:43" pos:end="440:59"><name pos:start="440:43" pos:end="440:59">transitSpeedLabel</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		<decl_stmt pos:start="442:17" pos:end="442:68"><decl pos:start="442:17" pos:end="442:67"><type pos:start="442:17" pos:end="442:25"><name pos:start="442:17" pos:end="442:25">PopupView</name></type> <name pos:start="442:27" pos:end="442:31">popup</name> <init pos:start="442:33" pos:end="442:67">= <expr pos:start="442:35" pos:end="442:67"><operator pos:start="442:35" pos:end="442:37">new</operator> <call pos:start="442:39" pos:end="442:67"><name pos:start="442:39" pos:end="442:47">PopupView</name><argument_list pos:start="442:48" pos:end="442:67">(<argument pos:start="442:49" pos:end="442:52"><expr pos:start="442:49" pos:end="442:52"><literal type="null" pos:start="442:49" pos:end="442:52">null</literal></expr></argument>, <argument pos:start="442:55" pos:end="442:66"><expr pos:start="442:55" pos:end="442:66"><name pos:start="442:55" pos:end="442:66">popupContent</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

		<expr_stmt pos:start="444:17" pos:end="444:50"><expr pos:start="444:17" pos:end="444:49"><call pos:start="444:17" pos:end="444:49"><name pos:start="444:17" pos:end="444:34"><name pos:start="444:17" pos:end="444:21">popup</name><operator pos:start="444:22" pos:end="444:22">.</operator><name pos:start="444:23" pos:end="444:34">addStyleName</name></name><argument_list pos:start="444:35" pos:end="444:49">(<argument pos:start="444:36" pos:end="444:48"><expr pos:start="444:36" pos:end="444:48"><literal type="string" pos:start="444:36" pos:end="444:48">"bring_front"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt pos:start="445:17" pos:end="445:40"><expr pos:start="445:17" pos:end="445:39"><call pos:start="445:17" pos:end="445:39"><name pos:start="445:17" pos:end="445:32"><name pos:start="445:17" pos:end="445:21">popup</name><operator pos:start="445:22" pos:end="445:22">.</operator><name pos:start="445:23" pos:end="445:32">setVisible</name></name><argument_list pos:start="445:33" pos:end="445:39">(<argument pos:start="445:34" pos:end="445:38"><expr pos:start="445:34" pos:end="445:38"><literal type="boolean" pos:start="445:34" pos:end="445:38">false</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt pos:start="446:17" pos:end="446:45"><expr pos:start="446:17" pos:end="446:44"><call pos:start="446:17" pos:end="446:44"><name pos:start="446:17" pos:end="446:37"><name pos:start="446:17" pos:end="446:21">popup</name><operator pos:start="446:22" pos:end="446:22">.</operator><name pos:start="446:23" pos:end="446:37">setPopupVisible</name></name><argument_list pos:start="446:38" pos:end="446:44">(<argument pos:start="446:39" pos:end="446:43"><expr pos:start="446:39" pos:end="446:43"><literal type="boolean" pos:start="446:39" pos:end="446:43">false</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		<return pos:start="448:17" pos:end="448:29">return <expr pos:start="448:24" pos:end="448:28"><name pos:start="448:24" pos:end="448:28">popup</name></expr>;</return>
	</block_content>}</block></function>

	<comment type="block" format="javadoc" pos:start="451:9" pos:end="454:11">/**
	 * 
	 * @return returns the drone popup
	 */</comment>
	<function pos:start="455:9" pos:end="466:9"><type pos:start="455:9" pos:end="455:24"><specifier pos:start="455:9" pos:end="455:14">public</specifier> <name pos:start="455:16" pos:end="455:24">PopupView</name></type> <name pos:start="455:26" pos:end="455:45">createDronePopupView</name><parameter_list pos:start="455:46" pos:end="455:47">()</parameter_list> <block pos:start="455:49" pos:end="466:9">{<block_content pos:start="456:17" pos:end="465:29">
		<decl_stmt pos:start="456:17" pos:end="456:67"><decl pos:start="456:17" pos:end="456:66"><type pos:start="456:17" pos:end="456:30"><name pos:start="456:17" pos:end="456:30">VerticalLayout</name></type> <name pos:start="456:32" pos:end="456:43">popupContent</name> <init pos:start="456:45" pos:end="456:66">= <expr pos:start="456:47" pos:end="456:66"><operator pos:start="456:47" pos:end="456:49">new</operator> <call pos:start="456:51" pos:end="456:66"><name pos:start="456:51" pos:end="456:64">VerticalLayout</name><argument_list pos:start="456:65" pos:end="456:66">()</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt pos:start="457:17" pos:end="457:51"><expr pos:start="457:17" pos:end="457:50"><call pos:start="457:17" pos:end="457:50"><name pos:start="457:17" pos:end="457:48"><name pos:start="457:17" pos:end="457:28">popupContent</name><operator pos:start="457:29" pos:end="457:29">.</operator><name pos:start="457:30" pos:end="457:48">removeAllComponents</name></name><argument_list pos:start="457:49" pos:end="457:50">()</argument_list></call></expr>;</expr_stmt>

		<expr_stmt pos:start="459:17" pos:end="459:74"><expr pos:start="459:17" pos:end="459:73"><call pos:start="459:17" pos:end="459:73"><name pos:start="459:17" pos:end="459:41"><name pos:start="459:17" pos:end="459:28">popupContent</name><operator pos:start="459:29" pos:end="459:29">.</operator><name pos:start="459:30" pos:end="459:41">addComponent</name></name><argument_list pos:start="459:42" pos:end="459:73">(<argument pos:start="459:43" pos:end="459:72"><expr pos:start="459:43" pos:end="459:72"><operator pos:start="459:43" pos:end="459:45">new</operator> <call pos:start="459:47" pos:end="459:72"><name pos:start="459:47" pos:end="459:51">Label</name><argument_list pos:start="459:52" pos:end="459:72">(<argument pos:start="459:53" pos:end="459:71"><expr pos:start="459:53" pos:end="459:71"><literal type="string" pos:start="459:53" pos:end="459:71">"Drone Information"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<decl_stmt pos:start="460:17" pos:end="460:68"><decl pos:start="460:17" pos:end="460:67"><type pos:start="460:17" pos:end="460:25"><name pos:start="460:17" pos:end="460:25">PopupView</name></type> <name pos:start="460:27" pos:end="460:31">popup</name> <init pos:start="460:33" pos:end="460:67">= <expr pos:start="460:35" pos:end="460:67"><operator pos:start="460:35" pos:end="460:37">new</operator> <call pos:start="460:39" pos:end="460:67"><name pos:start="460:39" pos:end="460:47">PopupView</name><argument_list pos:start="460:48" pos:end="460:67">(<argument pos:start="460:49" pos:end="460:52"><expr pos:start="460:49" pos:end="460:52"><literal type="null" pos:start="460:49" pos:end="460:52">null</literal></expr></argument>, <argument pos:start="460:55" pos:end="460:66"><expr pos:start="460:55" pos:end="460:66"><name pos:start="460:55" pos:end="460:66">popupContent</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

		<expr_stmt pos:start="462:17" pos:end="462:50"><expr pos:start="462:17" pos:end="462:49"><call pos:start="462:17" pos:end="462:49"><name pos:start="462:17" pos:end="462:34"><name pos:start="462:17" pos:end="462:21">popup</name><operator pos:start="462:22" pos:end="462:22">.</operator><name pos:start="462:23" pos:end="462:34">addStyleName</name></name><argument_list pos:start="462:35" pos:end="462:49">(<argument pos:start="462:36" pos:end="462:48"><expr pos:start="462:36" pos:end="462:48"><literal type="string" pos:start="462:36" pos:end="462:48">"bring_front"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt pos:start="463:17" pos:end="463:40"><expr pos:start="463:17" pos:end="463:39"><call pos:start="463:17" pos:end="463:39"><name pos:start="463:17" pos:end="463:32"><name pos:start="463:17" pos:end="463:21">popup</name><operator pos:start="463:22" pos:end="463:22">.</operator><name pos:start="463:23" pos:end="463:32">setVisible</name></name><argument_list pos:start="463:33" pos:end="463:39">(<argument pos:start="463:34" pos:end="463:38"><expr pos:start="463:34" pos:end="463:38"><literal type="boolean" pos:start="463:34" pos:end="463:38">false</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt pos:start="464:17" pos:end="464:45"><expr pos:start="464:17" pos:end="464:44"><call pos:start="464:17" pos:end="464:44"><name pos:start="464:17" pos:end="464:37"><name pos:start="464:17" pos:end="464:21">popup</name><operator pos:start="464:22" pos:end="464:22">.</operator><name pos:start="464:23" pos:end="464:37">setPopupVisible</name></name><argument_list pos:start="464:38" pos:end="464:44">(<argument pos:start="464:39" pos:end="464:43"><expr pos:start="464:39" pos:end="464:43"><literal type="boolean" pos:start="464:39" pos:end="464:43">false</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<return pos:start="465:17" pos:end="465:29">return <expr pos:start="465:24" pos:end="465:28"><name pos:start="465:24" pos:end="465:28">popup</name></expr>;</return>
	</block_content>}</block></function>

	<comment type="block" format="javadoc" pos:start="468:9" pos:end="473:11">/**
	 * This listener displays a popup of information about a certain waypoint. Virtually the same listener used in the flight routes UI.
	 * 
	 * @author Patrick Falvey
	 *
	 */</comment>
	<class pos:start="474:9" pos:end="559:9"><specifier pos:start="474:9" pos:end="474:14">public</specifier> class <name pos:start="474:22" pos:end="474:42">WaypointMouseListener</name> <super_list pos:start="474:44" pos:end="474:78"><implements pos:start="474:44" pos:end="474:78">implements <super pos:start="474:55" pos:end="474:78"><name pos:start="474:55" pos:end="474:78">LeafletMouseOverListener</name></super></implements></super_list> <block pos:start="474:80" pos:end="559:9">{

		<function pos:start="476:17" pos:end="558:17"><annotation pos:start="476:17" pos:end="476:25">@<name pos:start="476:18" pos:end="476:25">Override</name></annotation>
		<type pos:start="477:17" pos:end="477:27"><specifier pos:start="477:17" pos:end="477:22">public</specifier> <name pos:start="477:24" pos:end="477:27">void</name></type> <name pos:start="477:29" pos:end="477:39">onMouseOver</name><parameter_list pos:start="477:40" pos:end="477:68">(<parameter pos:start="477:41" pos:end="477:67"><decl pos:start="477:41" pos:end="477:67"><type pos:start="477:41" pos:end="477:61"><name pos:start="477:41" pos:end="477:61">LeafletMouseOverEvent</name></type> <name pos:start="477:63" pos:end="477:67">event</name></decl></parameter>)</parameter_list> <block pos:start="477:70" pos:end="558:17">{<block_content pos:start="479:25" pos:end="557:52">

			<expr_stmt pos:start="479:25" pos:end="479:48"><expr pos:start="479:25" pos:end="479:47"><call pos:start="479:25" pos:end="479:47"><name pos:start="479:25" pos:end="479:40"><name pos:start="479:25" pos:end="479:29">popup</name><operator pos:start="479:30" pos:end="479:30">.</operator><name pos:start="479:31" pos:end="479:40">setVisible</name></name><argument_list pos:start="479:41" pos:end="479:47">(<argument pos:start="479:42" pos:end="479:46"><expr pos:start="479:42" pos:end="479:46"><literal type="boolean" pos:start="479:42" pos:end="479:46">false</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt pos:start="480:25" pos:end="480:53"><expr pos:start="480:25" pos:end="480:52"><call pos:start="480:25" pos:end="480:52"><name pos:start="480:25" pos:end="480:45"><name pos:start="480:25" pos:end="480:29">popup</name><operator pos:start="480:30" pos:end="480:30">.</operator><name pos:start="480:31" pos:end="480:45">setPopupVisible</name></name><argument_list pos:start="480:46" pos:end="480:52">(<argument pos:start="480:47" pos:end="480:51"><expr pos:start="480:47" pos:end="480:51"><literal type="boolean" pos:start="480:47" pos:end="480:51">false</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<decl_stmt pos:start="481:25" pos:end="481:76"><decl pos:start="481:25" pos:end="481:75"><type pos:start="481:25" pos:end="481:31"><name pos:start="481:25" pos:end="481:31">LMarker</name></type> <name pos:start="481:33" pos:end="481:45">leafletMarker</name> <init pos:start="481:47" pos:end="481:75">= <expr pos:start="481:49" pos:end="481:75"><operator pos:start="481:49" pos:end="481:49">(</operator><name pos:start="481:50" pos:end="481:56">LMarker</name><operator pos:start="481:57" pos:end="481:57">)</operator> <call pos:start="481:59" pos:end="481:75"><name pos:start="481:59" pos:end="481:73"><name pos:start="481:59" pos:end="481:63">event</name><operator pos:start="481:64" pos:end="481:64">.</operator><name pos:start="481:65" pos:end="481:73">getSource</name></name><argument_list pos:start="481:74" pos:end="481:75">()</argument_list></call></expr></init></decl>;</decl_stmt>

			<decl_stmt pos:start="483:25" pos:end="483:110"><decl pos:start="483:25" pos:end="483:109"><type pos:start="483:25" pos:end="483:38"><name pos:start="483:25" pos:end="483:38">VerticalLayout</name></type> <name pos:start="483:40" pos:end="483:51">popupContent</name> <init pos:start="483:53" pos:end="483:109">= <expr pos:start="483:55" pos:end="483:109"><operator pos:start="483:55" pos:end="483:55">(</operator><name pos:start="483:56" pos:end="483:69">VerticalLayout</name><operator pos:start="483:70" pos:end="483:70">)</operator> <call pos:start="483:72" pos:end="483:89"><name pos:start="483:72" pos:end="483:87"><name pos:start="483:72" pos:end="483:76">popup</name><operator pos:start="483:77" pos:end="483:77">.</operator><name pos:start="483:78" pos:end="483:87">getContent</name></name><argument_list pos:start="483:88" pos:end="483:89">()</argument_list></call><operator pos:start="483:90" pos:end="483:90">.</operator><call pos:start="483:91" pos:end="483:109"><name pos:start="483:91" pos:end="483:107">getPopupComponent</name><argument_list pos:start="483:108" pos:end="483:109">()</argument_list></call></expr></init></decl>;</decl_stmt>
			<decl_stmt pos:start="484:25" pos:end="484:73"><decl pos:start="484:25" pos:end="484:72"><type pos:start="484:25" pos:end="484:43"><name pos:start="484:25" pos:end="484:43"><name pos:start="484:25" pos:end="484:32">Iterator</name><argument_list type="generic" pos:start="484:33" pos:end="484:43">&lt;<argument pos:start="484:34" pos:end="484:42"><name pos:start="484:34" pos:end="484:42">Component</name></argument>&gt;</argument_list></name></type> <name pos:start="484:45" pos:end="484:46">it</name> <init pos:start="484:48" pos:end="484:72">= <expr pos:start="484:50" pos:end="484:72"><call pos:start="484:50" pos:end="484:72"><name pos:start="484:50" pos:end="484:70"><name pos:start="484:50" pos:end="484:61">popupContent</name><operator pos:start="484:62" pos:end="484:62">.</operator><name pos:start="484:63" pos:end="484:70">iterator</name></name><argument_list pos:start="484:71" pos:end="484:72">()</argument_list></call></expr></init></decl>;</decl_stmt> <comment type="line" pos:start="484:75" pos:end="484:148">// iterates through the popup content and updates the waypoint information</comment>
			<while pos:start="485:25" pos:end="525:25">while <condition pos:start="485:31" pos:end="485:44">(<expr pos:start="485:32" pos:end="485:43"><call pos:start="485:32" pos:end="485:43"><name pos:start="485:32" pos:end="485:41"><name pos:start="485:32" pos:end="485:33">it</name><operator pos:start="485:34" pos:end="485:34">.</operator><name pos:start="485:35" pos:end="485:41">hasNext</name></name><argument_list pos:start="485:42" pos:end="485:43">()</argument_list></call></expr>)</condition> <block pos:start="485:46" pos:end="525:25">{<block_content pos:start="486:33" pos:end="524:33">
				<decl_stmt pos:start="486:33" pos:end="486:56"><decl pos:start="486:33" pos:end="486:55"><type pos:start="486:33" pos:end="486:41"><name pos:start="486:33" pos:end="486:41">Component</name></type> <name pos:start="486:43" pos:end="486:43">c</name> <init pos:start="486:45" pos:end="486:55">= <expr pos:start="486:47" pos:end="486:55"><call pos:start="486:47" pos:end="486:55"><name pos:start="486:47" pos:end="486:53"><name pos:start="486:47" pos:end="486:48">it</name><operator pos:start="486:49" pos:end="486:49">.</operator><name pos:start="486:50" pos:end="486:53">next</name></name><argument_list pos:start="486:54" pos:end="486:55">()</argument_list></call></expr></init></decl>;</decl_stmt>
				<try pos:start="487:33" pos:end="524:33">try <block pos:start="487:37" pos:end="513:33">{<block_content pos:start="488:41" pos:end="512:41">
					<expr_stmt pos:start="488:41" pos:end="488:98"><expr pos:start="488:41" pos:end="488:97"><name pos:start="488:41" pos:end="488:54">currentFlights</name> <operator pos:start="488:56" pos:end="488:56">=</operator> <call pos:start="488:58" pos:end="488:97"><name pos:start="488:58" pos:end="488:95"><name pos:start="488:58" pos:end="488:77">flightManagerService</name><operator pos:start="488:78" pos:end="488:78">.</operator><name pos:start="488:79" pos:end="488:95">getCurrentFlights</name></name><argument_list pos:start="488:96" pos:end="488:97">()</argument_list></call></expr>;</expr_stmt>
					<for pos:start="489:41" pos:end="512:41">for <control pos:start="489:45" pos:end="489:79">(<init pos:start="489:46" pos:end="489:78"><decl pos:start="489:46" pos:end="489:78"><type pos:start="489:46" pos:end="489:59"><name pos:start="489:46" pos:end="489:59">FlightPlanInfo</name></type> <name pos:start="489:61" pos:end="489:61">e</name> <range pos:start="489:63" pos:end="489:78">: <expr pos:start="489:65" pos:end="489:78"><name pos:start="489:65" pos:end="489:78">currentFlights</name></expr></range></decl></init>)</control> <block pos:start="489:81" pos:end="512:41">{<block_content pos:start="490:49" pos:end="511:49">
						<decl_stmt pos:start="490:49" pos:end="490:94"><decl pos:start="490:49" pos:end="490:93"><type pos:start="490:49" pos:end="490:62"><name pos:start="490:49" pos:end="490:62"><name pos:start="490:49" pos:end="490:52">List</name><argument_list type="generic" pos:start="490:53" pos:end="490:62">&lt;<argument pos:start="490:54" pos:end="490:61"><name pos:start="490:54" pos:end="490:61">Waypoint</name></argument>&gt;</argument_list></name></type> <name pos:start="490:64" pos:end="490:74">coordinates</name> <init pos:start="490:76" pos:end="490:93">= <expr pos:start="490:78" pos:end="490:93"><call pos:start="490:78" pos:end="490:93"><name pos:start="490:78" pos:end="490:91"><name pos:start="490:78" pos:end="490:78">e</name><operator pos:start="490:79" pos:end="490:79">.</operator><name pos:start="490:80" pos:end="490:91">getWaypoints</name></name><argument_list pos:start="490:92" pos:end="490:93">()</argument_list></call></expr></init></decl>;</decl_stmt>
						<for pos:start="491:49" pos:end="511:49">for <control pos:start="491:53" pos:end="491:82">(<init pos:start="491:54" pos:end="491:81"><decl pos:start="491:54" pos:end="491:81"><type pos:start="491:54" pos:end="491:61"><name pos:start="491:54" pos:end="491:61">Waypoint</name></type> <name pos:start="491:63" pos:end="491:67">coord</name> <range pos:start="491:69" pos:end="491:81">: <expr pos:start="491:71" pos:end="491:81"><name pos:start="491:71" pos:end="491:81">coordinates</name></expr></range></decl></init>)</control> <block pos:start="491:84" pos:end="511:49">{<block_content pos:start="492:57" pos:end="510:57">
							<if_stmt pos:start="492:57" pos:end="510:57"><if pos:start="492:57" pos:end="510:57">if <condition pos:start="492:60" pos:end="493:149">(<expr pos:start="492:61" pos:end="493:148"><call pos:start="492:61" pos:end="492:81"><name pos:start="492:61" pos:end="492:79"><name pos:start="492:61" pos:end="492:65">coord</name><operator pos:start="492:66" pos:end="492:66">.</operator><name pos:start="492:67" pos:end="492:79">getCoordinate</name></name><argument_list pos:start="492:80" pos:end="492:81">()</argument_list></call><operator pos:start="492:82" pos:end="492:82">.</operator><call pos:start="492:83" pos:end="492:95"><name pos:start="492:83" pos:end="492:93">getLatitude</name><argument_list pos:start="492:94" pos:end="492:95">()</argument_list></call> <operator pos:start="492:97" pos:end="492:98">==</operator> <call pos:start="492:100" pos:end="492:123"><name pos:start="492:100" pos:end="492:121"><name pos:start="492:100" pos:end="492:112">leafletMarker</name><operator pos:start="492:113" pos:end="492:113">.</operator><name pos:start="492:114" pos:end="492:121">getPoint</name></name><argument_list pos:start="492:122" pos:end="492:123">()</argument_list></call><operator pos:start="492:124" pos:end="492:124">.</operator><call pos:start="492:125" pos:end="492:132"><name pos:start="492:125" pos:end="492:130">getLat</name><argument_list pos:start="492:131" pos:end="492:132">()</argument_list></call>
									<operator pos:start="493:73" pos:end="493:74">&amp;&amp;</operator> <call pos:start="493:76" pos:end="493:96"><name pos:start="493:76" pos:end="493:94"><name pos:start="493:76" pos:end="493:80">coord</name><operator pos:start="493:81" pos:end="493:81">.</operator><name pos:start="493:82" pos:end="493:94">getCoordinate</name></name><argument_list pos:start="493:95" pos:end="493:96">()</argument_list></call><operator pos:start="493:97" pos:end="493:97">.</operator><call pos:start="493:98" pos:end="493:111"><name pos:start="493:98" pos:end="493:109">getLongitude</name><argument_list pos:start="493:110" pos:end="493:111">()</argument_list></call> <operator pos:start="493:113" pos:end="493:114">==</operator> <call pos:start="493:116" pos:end="493:139"><name pos:start="493:116" pos:end="493:137"><name pos:start="493:116" pos:end="493:128">leafletMarker</name><operator pos:start="493:129" pos:end="493:129">.</operator><name pos:start="493:130" pos:end="493:137">getPoint</name></name><argument_list pos:start="493:138" pos:end="493:139">()</argument_list></call><operator pos:start="493:140" pos:end="493:140">.</operator><call pos:start="493:141" pos:end="493:148"><name pos:start="493:141" pos:end="493:146">getLon</name><argument_list pos:start="493:147" pos:end="493:148">()</argument_list></call></expr>)</condition> <block pos:start="493:151" pos:end="510:57">{<block_content pos:start="494:65" pos:end="509:65">
								<if_stmt pos:start="494:65" pos:end="497:65"><if pos:start="494:65" pos:end="497:65">if <condition pos:start="494:68" pos:end="494:118">(<expr pos:start="494:69" pos:end="494:117"><call pos:start="494:69" pos:end="494:77"><name pos:start="494:69" pos:end="494:75"><name pos:start="494:69" pos:end="494:69">c</name><operator pos:start="494:70" pos:end="494:70">.</operator><name pos:start="494:71" pos:end="494:75">getId</name></name><argument_list pos:start="494:76" pos:end="494:77">()</argument_list></call> <operator pos:start="494:79" pos:end="494:80">!=</operator> <literal type="null" pos:start="494:82" pos:end="494:85">null</literal> <operator pos:start="494:87" pos:end="494:88">&amp;&amp;</operator> <call pos:start="494:90" pos:end="494:98"><name pos:start="494:90" pos:end="494:96"><name pos:start="494:90" pos:end="494:90">c</name><operator pos:start="494:91" pos:end="494:91">.</operator><name pos:start="494:92" pos:end="494:96">getId</name></name><argument_list pos:start="494:97" pos:end="494:98">()</argument_list></call><operator pos:start="494:99" pos:end="494:99">.</operator><call pos:start="494:100" pos:end="494:117"><name pos:start="494:100" pos:end="494:105">equals</name><argument_list pos:start="494:106" pos:end="494:117">(<argument pos:start="494:107" pos:end="494:116"><expr pos:start="494:107" pos:end="494:116"><literal type="string" pos:start="494:107" pos:end="494:116">"latitude"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="494:120" pos:end="497:65">{<block_content pos:start="495:73" pos:end="496:135">
									<decl_stmt pos:start="495:73" pos:end="495:92"><decl pos:start="495:73" pos:end="495:91"><type pos:start="495:73" pos:end="495:77"><name pos:start="495:73" pos:end="495:77">Label</name></type> <name pos:start="495:79" pos:end="495:79">l</name> <init pos:start="495:81" pos:end="495:91">= <expr pos:start="495:83" pos:end="495:91"><operator pos:start="495:83" pos:end="495:83">(</operator><name pos:start="495:84" pos:end="495:88">Label</name><operator pos:start="495:89" pos:end="495:89">)</operator> <name pos:start="495:91" pos:end="495:91">c</name></expr></init></decl>;</decl_stmt>
									<expr_stmt pos:start="496:73" pos:end="496:135"><expr pos:start="496:73" pos:end="496:134"><call pos:start="496:73" pos:end="496:134"><name pos:start="496:73" pos:end="496:82"><name pos:start="496:73" pos:end="496:73">l</name><operator pos:start="496:74" pos:end="496:74">.</operator><name pos:start="496:75" pos:end="496:82">setValue</name></name><argument_list pos:start="496:83" pos:end="496:134">(<argument pos:start="496:84" pos:end="496:133"><expr pos:start="496:84" pos:end="496:133"><literal type="string" pos:start="496:84" pos:end="496:95">"Latitude: "</literal> <operator pos:start="496:97" pos:end="496:97">+</operator> <call pos:start="496:99" pos:end="496:119"><name pos:start="496:99" pos:end="496:117"><name pos:start="496:99" pos:end="496:103">coord</name><operator pos:start="496:104" pos:end="496:104">.</operator><name pos:start="496:105" pos:end="496:117">getCoordinate</name></name><argument_list pos:start="496:118" pos:end="496:119">()</argument_list></call><operator pos:start="496:120" pos:end="496:120">.</operator><call pos:start="496:121" pos:end="496:133"><name pos:start="496:121" pos:end="496:131">getLatitude</name><argument_list pos:start="496:132" pos:end="496:133">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
								</block_content>}</block></if></if_stmt>
								<if_stmt pos:start="498:65" pos:end="501:65"><if pos:start="498:65" pos:end="501:65">if <condition pos:start="498:68" pos:end="498:119">(<expr pos:start="498:69" pos:end="498:118"><call pos:start="498:69" pos:end="498:77"><name pos:start="498:69" pos:end="498:75"><name pos:start="498:69" pos:end="498:69">c</name><operator pos:start="498:70" pos:end="498:70">.</operator><name pos:start="498:71" pos:end="498:75">getId</name></name><argument_list pos:start="498:76" pos:end="498:77">()</argument_list></call> <operator pos:start="498:79" pos:end="498:80">!=</operator> <literal type="null" pos:start="498:82" pos:end="498:85">null</literal> <operator pos:start="498:87" pos:end="498:88">&amp;&amp;</operator> <call pos:start="498:90" pos:end="498:98"><name pos:start="498:90" pos:end="498:96"><name pos:start="498:90" pos:end="498:90">c</name><operator pos:start="498:91" pos:end="498:91">.</operator><name pos:start="498:92" pos:end="498:96">getId</name></name><argument_list pos:start="498:97" pos:end="498:98">()</argument_list></call><operator pos:start="498:99" pos:end="498:99">.</operator><call pos:start="498:100" pos:end="498:118"><name pos:start="498:100" pos:end="498:105">equals</name><argument_list pos:start="498:106" pos:end="498:118">(<argument pos:start="498:107" pos:end="498:117"><expr pos:start="498:107" pos:end="498:117"><literal type="string" pos:start="498:107" pos:end="498:117">"longitude"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="498:121" pos:end="501:65">{<block_content pos:start="499:73" pos:end="500:137">
									<decl_stmt pos:start="499:73" pos:end="499:92"><decl pos:start="499:73" pos:end="499:91"><type pos:start="499:73" pos:end="499:77"><name pos:start="499:73" pos:end="499:77">Label</name></type> <name pos:start="499:79" pos:end="499:79">l</name> <init pos:start="499:81" pos:end="499:91">= <expr pos:start="499:83" pos:end="499:91"><operator pos:start="499:83" pos:end="499:83">(</operator><name pos:start="499:84" pos:end="499:88">Label</name><operator pos:start="499:89" pos:end="499:89">)</operator> <name pos:start="499:91" pos:end="499:91">c</name></expr></init></decl>;</decl_stmt>
									<expr_stmt pos:start="500:73" pos:end="500:137"><expr pos:start="500:73" pos:end="500:136"><call pos:start="500:73" pos:end="500:136"><name pos:start="500:73" pos:end="500:82"><name pos:start="500:73" pos:end="500:73">l</name><operator pos:start="500:74" pos:end="500:74">.</operator><name pos:start="500:75" pos:end="500:82">setValue</name></name><argument_list pos:start="500:83" pos:end="500:136">(<argument pos:start="500:84" pos:end="500:135"><expr pos:start="500:84" pos:end="500:135"><literal type="string" pos:start="500:84" pos:end="500:96">"Longitude: "</literal> <operator pos:start="500:98" pos:end="500:98">+</operator> <call pos:start="500:100" pos:end="500:120"><name pos:start="500:100" pos:end="500:118"><name pos:start="500:100" pos:end="500:104">coord</name><operator pos:start="500:105" pos:end="500:105">.</operator><name pos:start="500:106" pos:end="500:118">getCoordinate</name></name><argument_list pos:start="500:119" pos:end="500:120">()</argument_list></call><operator pos:start="500:121" pos:end="500:121">.</operator><call pos:start="500:122" pos:end="500:135"><name pos:start="500:122" pos:end="500:133">getLongitude</name><argument_list pos:start="500:134" pos:end="500:135">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
								</block_content>}</block></if></if_stmt>
								<if_stmt pos:start="502:65" pos:end="505:65"><if pos:start="502:65" pos:end="505:65">if <condition pos:start="502:68" pos:end="502:118">(<expr pos:start="502:69" pos:end="502:117"><call pos:start="502:69" pos:end="502:77"><name pos:start="502:69" pos:end="502:75"><name pos:start="502:69" pos:end="502:69">c</name><operator pos:start="502:70" pos:end="502:70">.</operator><name pos:start="502:71" pos:end="502:75">getId</name></name><argument_list pos:start="502:76" pos:end="502:77">()</argument_list></call> <operator pos:start="502:79" pos:end="502:80">!=</operator> <literal type="null" pos:start="502:82" pos:end="502:85">null</literal> <operator pos:start="502:87" pos:end="502:88">&amp;&amp;</operator> <call pos:start="502:90" pos:end="502:98"><name pos:start="502:90" pos:end="502:96"><name pos:start="502:90" pos:end="502:90">c</name><operator pos:start="502:91" pos:end="502:91">.</operator><name pos:start="502:92" pos:end="502:96">getId</name></name><argument_list pos:start="502:97" pos:end="502:98">()</argument_list></call><operator pos:start="502:99" pos:end="502:99">.</operator><call pos:start="502:100" pos:end="502:117"><name pos:start="502:100" pos:end="502:105">equals</name><argument_list pos:start="502:106" pos:end="502:117">(<argument pos:start="502:107" pos:end="502:116"><expr pos:start="502:107" pos:end="502:116"><literal type="string" pos:start="502:107" pos:end="502:116">"altitude"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="502:120" pos:end="505:65">{<block_content pos:start="503:73" pos:end="504:135">
									<decl_stmt pos:start="503:73" pos:end="503:92"><decl pos:start="503:73" pos:end="503:91"><type pos:start="503:73" pos:end="503:77"><name pos:start="503:73" pos:end="503:77">Label</name></type> <name pos:start="503:79" pos:end="503:79">l</name> <init pos:start="503:81" pos:end="503:91">= <expr pos:start="503:83" pos:end="503:91"><operator pos:start="503:83" pos:end="503:83">(</operator><name pos:start="503:84" pos:end="503:88">Label</name><operator pos:start="503:89" pos:end="503:89">)</operator> <name pos:start="503:91" pos:end="503:91">c</name></expr></init></decl>;</decl_stmt>
									<expr_stmt pos:start="504:73" pos:end="504:135"><expr pos:start="504:73" pos:end="504:134"><call pos:start="504:73" pos:end="504:134"><name pos:start="504:73" pos:end="504:82"><name pos:start="504:73" pos:end="504:73">l</name><operator pos:start="504:74" pos:end="504:74">.</operator><name pos:start="504:75" pos:end="504:82">setValue</name></name><argument_list pos:start="504:83" pos:end="504:134">(<argument pos:start="504:84" pos:end="504:133"><expr pos:start="504:84" pos:end="504:133"><literal type="string" pos:start="504:84" pos:end="504:95">"Altitude: "</literal> <operator pos:start="504:97" pos:end="504:97">+</operator> <call pos:start="504:99" pos:end="504:119"><name pos:start="504:99" pos:end="504:117"><name pos:start="504:99" pos:end="504:103">coord</name><operator pos:start="504:104" pos:end="504:104">.</operator><name pos:start="504:105" pos:end="504:117">getCoordinate</name></name><argument_list pos:start="504:118" pos:end="504:119">()</argument_list></call><operator pos:start="504:120" pos:end="504:120">.</operator><call pos:start="504:121" pos:end="504:133"><name pos:start="504:121" pos:end="504:131">getAltitude</name><argument_list pos:start="504:132" pos:end="504:133">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
								</block_content>}</block></if></if_stmt>
								<if_stmt pos:start="506:65" pos:end="509:65"><if pos:start="506:65" pos:end="509:65">if <condition pos:start="506:68" pos:end="506:122">(<expr pos:start="506:69" pos:end="506:121"><call pos:start="506:69" pos:end="506:77"><name pos:start="506:69" pos:end="506:75"><name pos:start="506:69" pos:end="506:69">c</name><operator pos:start="506:70" pos:end="506:70">.</operator><name pos:start="506:71" pos:end="506:75">getId</name></name><argument_list pos:start="506:76" pos:end="506:77">()</argument_list></call> <operator pos:start="506:79" pos:end="506:80">!=</operator> <literal type="null" pos:start="506:82" pos:end="506:85">null</literal> <operator pos:start="506:87" pos:end="506:88">&amp;&amp;</operator> <call pos:start="506:90" pos:end="506:98"><name pos:start="506:90" pos:end="506:96"><name pos:start="506:90" pos:end="506:90">c</name><operator pos:start="506:91" pos:end="506:91">.</operator><name pos:start="506:92" pos:end="506:96">getId</name></name><argument_list pos:start="506:97" pos:end="506:98">()</argument_list></call><operator pos:start="506:99" pos:end="506:99">.</operator><call pos:start="506:100" pos:end="506:121"><name pos:start="506:100" pos:end="506:105">equals</name><argument_list pos:start="506:106" pos:end="506:121">(<argument pos:start="506:107" pos:end="506:120"><expr pos:start="506:107" pos:end="506:120"><literal type="string" pos:start="506:107" pos:end="506:120">"transitSpeed"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="506:124" pos:end="509:65">{<block_content pos:start="507:73" pos:end="508:132">
									<decl_stmt pos:start="507:73" pos:end="507:92"><decl pos:start="507:73" pos:end="507:91"><type pos:start="507:73" pos:end="507:77"><name pos:start="507:73" pos:end="507:77">Label</name></type> <name pos:start="507:79" pos:end="507:79">l</name> <init pos:start="507:81" pos:end="507:91">= <expr pos:start="507:83" pos:end="507:91"><operator pos:start="507:83" pos:end="507:83">(</operator><name pos:start="507:84" pos:end="507:88">Label</name><operator pos:start="507:89" pos:end="507:89">)</operator> <name pos:start="507:91" pos:end="507:91">c</name></expr></init></decl>;</decl_stmt>
									<expr_stmt pos:start="508:73" pos:end="508:132"><expr pos:start="508:73" pos:end="508:131"><call pos:start="508:73" pos:end="508:131"><name pos:start="508:73" pos:end="508:82"><name pos:start="508:73" pos:end="508:73">l</name><operator pos:start="508:74" pos:end="508:74">.</operator><name pos:start="508:75" pos:end="508:82">setValue</name></name><argument_list pos:start="508:83" pos:end="508:131">(<argument pos:start="508:84" pos:end="508:130"><expr pos:start="508:84" pos:end="508:130"><literal type="string" pos:start="508:84" pos:end="508:100">"Transit Speed: "</literal> <operator pos:start="508:102" pos:end="508:102">+</operator> <call pos:start="508:104" pos:end="508:130"><name pos:start="508:104" pos:end="508:128"><name pos:start="508:104" pos:end="508:108">coord</name><operator pos:start="508:109" pos:end="508:109">.</operator><name pos:start="508:110" pos:end="508:128">getApproachingspeed</name></name><argument_list pos:start="508:129" pos:end="508:130">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
								</block_content>}</block></if></if_stmt>
							</block_content>}</block></if></if_stmt>
						</block_content>}</block></for>
					</block_content>}</block></for>
				</block_content>}</block> <catch pos:start="513:35" pos:end="524:33">catch <parameter_list pos:start="513:41" pos:end="513:59">(<parameter pos:start="513:42" pos:end="513:58"><decl pos:start="513:42" pos:end="513:58"><type pos:start="513:42" pos:end="513:58"><name pos:start="513:42" pos:end="513:56">RemoteException</name></type> <name pos:start="513:58" pos:end="513:58">e</name></decl></parameter>)</parameter_list> <block pos:start="513:61" pos:end="524:33">{<block_content pos:start="514:41" pos:end="523:77">
					<try pos:start="514:41" pos:end="522:41">try <block pos:start="514:45" pos:end="519:41">{<block_content pos:start="515:49" pos:end="518:111">
						<expr_stmt pos:start="515:49" pos:end="515:85"><expr pos:start="515:49" pos:end="515:84"><call pos:start="515:49" pos:end="515:84"><name pos:start="515:49" pos:end="515:65"><name pos:start="515:49" pos:end="515:60">Notification</name><operator pos:start="515:61" pos:end="515:61">.</operator><name pos:start="515:62" pos:end="515:65">show</name></name><argument_list pos:start="515:66" pos:end="515:84">(<argument pos:start="515:67" pos:end="515:83"><expr pos:start="515:67" pos:end="515:83"><literal type="string" pos:start="515:67" pos:end="515:83">"Reconnecting..."</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
						<expr_stmt pos:start="516:49" pos:end="516:156"><expr pos:start="516:49" pos:end="516:155"><name pos:start="516:49" pos:end="516:55">service</name> <operator pos:start="516:57" pos:end="516:57">=</operator> <operator pos:start="516:59" pos:end="516:59">(</operator><name pos:start="516:60" pos:end="516:83">IDroneSetupRemoteService</name><operator pos:start="516:84" pos:end="516:84">)</operator> <call pos:start="516:86" pos:end="516:112"><name pos:start="516:86" pos:end="516:110"><name pos:start="516:86" pos:end="516:93">provider</name><operator pos:start="516:94" pos:end="516:94">.</operator><name pos:start="516:95" pos:end="516:110">getRemoteManager</name></name><argument_list pos:start="516:111" pos:end="516:112">()</argument_list></call><operator pos:start="516:113" pos:end="516:113">.</operator><call pos:start="516:114" pos:end="516:155"><name pos:start="516:114" pos:end="516:123">getService</name><argument_list pos:start="516:124" pos:end="516:155">(<argument pos:start="516:125" pos:end="516:154"><expr pos:start="516:125" pos:end="516:154"><name pos:start="516:125" pos:end="516:154"><name pos:start="516:125" pos:end="516:148">IDroneSetupRemoteService</name><operator pos:start="516:149" pos:end="516:149">.</operator><name pos:start="516:150" pos:end="516:154">class</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
						<expr_stmt pos:start="517:49" pos:end="518:111"><expr pos:start="517:49" pos:end="518:110"><name pos:start="517:49" pos:end="517:68">flightManagerService</name> <operator pos:start="517:70" pos:end="517:70">=</operator> <operator pos:start="517:72" pos:end="517:72">(</operator><name pos:start="517:73" pos:end="517:99">IFlightManagerRemoteService</name><operator pos:start="517:100" pos:end="517:100">)</operator> <call pos:start="517:102" pos:end="517:128"><name pos:start="517:102" pos:end="517:126"><name pos:start="517:102" pos:end="517:109">provider</name><operator pos:start="517:110" pos:end="517:110">.</operator><name pos:start="517:111" pos:end="517:126">getRemoteManager</name></name><argument_list pos:start="517:127" pos:end="517:128">()</argument_list></call>
								<operator pos:start="518:65" pos:end="518:65">.</operator><call pos:start="518:66" pos:end="518:110"><name pos:start="518:66" pos:end="518:75">getService</name><argument_list pos:start="518:76" pos:end="518:110">(<argument pos:start="518:77" pos:end="518:109"><expr pos:start="518:77" pos:end="518:109"><name pos:start="518:77" pos:end="518:109"><name pos:start="518:77" pos:end="518:103">IFlightManagerRemoteService</name><operator pos:start="518:104" pos:end="518:104">.</operator><name pos:start="518:105" pos:end="518:109">class</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					</block_content>}</block> <catch pos:start="519:43" pos:end="522:41">catch <parameter_list pos:start="519:49" pos:end="519:96">(<parameter pos:start="519:50" pos:end="519:95"><decl pos:start="519:50" pos:end="519:95"><type pos:start="519:50" pos:end="519:64"><name pos:start="519:50" pos:end="519:64">RemoteException</name></type> | <type pos:start="519:68" pos:end="519:95"><name pos:start="519:68" pos:end="519:92">DronologyServiceException</name></type> <name pos:start="519:94" pos:end="519:95">e1</name></decl></parameter>)</parameter_list> <block pos:start="519:98" pos:end="522:41">{<block_content pos:start="520:49" pos:end="521:85">
						<expr_stmt pos:start="520:49" pos:end="520:73"><expr pos:start="520:49" pos:end="520:72"><call pos:start="520:49" pos:end="520:72"><name pos:start="520:49" pos:end="520:65"><name pos:start="520:49" pos:end="520:52">MyUI</name><operator pos:start="520:53" pos:end="520:53">.</operator><name pos:start="520:54" pos:end="520:65">setConnected</name></name><argument_list pos:start="520:66" pos:end="520:72">(<argument pos:start="520:67" pos:end="520:71"><expr pos:start="520:67" pos:end="520:71"><literal type="boolean" pos:start="520:67" pos:end="520:71">false</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
						<expr_stmt pos:start="521:49" pos:end="521:85"><expr pos:start="521:49" pos:end="521:84"><call pos:start="521:49" pos:end="521:84"><name pos:start="521:49" pos:end="521:65"><name pos:start="521:49" pos:end="521:60">Notification</name><operator pos:start="521:61" pos:end="521:61">.</operator><name pos:start="521:62" pos:end="521:65">show</name></name><argument_list pos:start="521:66" pos:end="521:84">(<argument pos:start="521:67" pos:end="521:83"><expr pos:start="521:67" pos:end="521:83"><literal type="string" pos:start="521:67" pos:end="521:83">"Reconnecting..."</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					</block_content>}</block></catch></try>
					<expr_stmt pos:start="523:41" pos:end="523:77"><expr pos:start="523:41" pos:end="523:76"><call pos:start="523:41" pos:end="523:76"><name pos:start="523:41" pos:end="523:57"><name pos:start="523:41" pos:end="523:52">Notification</name><operator pos:start="523:53" pos:end="523:53">.</operator><name pos:start="523:54" pos:end="523:57">show</name></name><argument_list pos:start="523:58" pos:end="523:76">(<argument pos:start="523:59" pos:end="523:75"><expr pos:start="523:59" pos:end="523:75"><literal type="string" pos:start="523:59" pos:end="523:75">"Reconnecting..."</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				</block_content>}</block></catch></try>
			</block_content>}</block></while>
			<comment type="block" pos:start="526:25" pos:end="529:27">/*
			 * find the location on the screen to display the popup. Takes the absolute position of the mouse and converts that to the relative position of the mouse on the map. Uses the map dimensions and
			 * the map position within the layout
			 */</comment>
			<decl_stmt pos:start="530:25" pos:end="530:100"><decl pos:start="530:25" pos:end="530:99"><type pos:start="530:25" pos:end="530:30"><name pos:start="530:25" pos:end="530:30">double</name></type> <name pos:start="530:32" pos:end="530:39">mapWidth</name> <init pos:start="530:41" pos:end="530:99">= <expr pos:start="530:43" pos:end="530:99"><call pos:start="530:43" pos:end="530:57"><name pos:start="530:43" pos:end="530:55"><name pos:start="530:43" pos:end="530:44">UI</name><operator pos:start="530:45" pos:end="530:45">.</operator><name pos:start="530:46" pos:end="530:55">getCurrent</name></name><argument_list pos:start="530:56" pos:end="530:57">()</argument_list></call><operator pos:start="530:58" pos:end="530:58">.</operator><call pos:start="530:59" pos:end="530:67"><name pos:start="530:59" pos:end="530:65">getPage</name><argument_list pos:start="530:66" pos:end="530:67">()</argument_list></call><operator pos:start="530:68" pos:end="530:68">.</operator><call pos:start="530:69" pos:end="530:91"><name pos:start="530:69" pos:end="530:89">getBrowserWindowWidth</name><argument_list pos:start="530:90" pos:end="530:91">()</argument_list></call> <operator pos:start="530:93" pos:end="530:93">-</operator> <literal type="number" pos:start="530:95" pos:end="530:99">366.0</literal></expr></init></decl>;</decl_stmt>
			<decl_stmt pos:start="531:25" pos:end="531:100"><decl pos:start="531:25" pos:end="531:99"><type pos:start="531:25" pos:end="531:30"><name pos:start="531:25" pos:end="531:30">double</name></type> <name pos:start="531:32" pos:end="531:40">mapHeight</name> <init pos:start="531:42" pos:end="531:99">= <expr pos:start="531:44" pos:end="531:99"><call pos:start="531:44" pos:end="531:58"><name pos:start="531:44" pos:end="531:56"><name pos:start="531:44" pos:end="531:45">UI</name><operator pos:start="531:46" pos:end="531:46">.</operator><name pos:start="531:47" pos:end="531:56">getCurrent</name></name><argument_list pos:start="531:57" pos:end="531:58">()</argument_list></call><operator pos:start="531:59" pos:end="531:59">.</operator><call pos:start="531:60" pos:end="531:68"><name pos:start="531:60" pos:end="531:66">getPage</name><argument_list pos:start="531:67" pos:end="531:68">()</argument_list></call><operator pos:start="531:69" pos:end="531:69">.</operator><call pos:start="531:70" pos:end="531:93"><name pos:start="531:70" pos:end="531:91">getBrowserWindowHeight</name><argument_list pos:start="531:92" pos:end="531:93">()</argument_list></call> <operator pos:start="531:95" pos:end="531:95">*</operator> <literal type="number" pos:start="531:97" pos:end="531:99">0.9</literal></expr></init></decl>;</decl_stmt>

			<decl_stmt pos:start="533:25" pos:end="533:122"><decl pos:start="533:25" pos:end="533:121"><type pos:start="533:25" pos:end="533:30"><name pos:start="533:25" pos:end="533:30">double</name></type> <name pos:start="533:32" pos:end="533:48">xDegreeDifference</name> <init pos:start="533:50" pos:end="533:121">= <expr pos:start="533:52" pos:end="533:121"><operator pos:start="533:52" pos:end="533:52">-</operator><operator pos:start="533:53" pos:end="533:53">(</operator><call pos:start="533:54" pos:end="533:75"><name pos:start="533:54" pos:end="533:73"><name pos:start="533:54" pos:end="533:63">leafletMap</name><operator pos:start="533:64" pos:end="533:64">.</operator><name pos:start="533:65" pos:end="533:73">getCenter</name></name><argument_list pos:start="533:74" pos:end="533:75">()</argument_list></call><operator pos:start="533:76" pos:end="533:76">.</operator><call pos:start="533:77" pos:end="533:84"><name pos:start="533:77" pos:end="533:82">getLon</name><argument_list pos:start="533:83" pos:end="533:84">()</argument_list></call> <operator pos:start="533:86" pos:end="533:86">-</operator> <call pos:start="533:88" pos:end="533:111"><name pos:start="533:88" pos:end="533:109"><name pos:start="533:88" pos:end="533:100">leafletMarker</name><operator pos:start="533:101" pos:end="533:101">.</operator><name pos:start="533:102" pos:end="533:109">getPoint</name></name><argument_list pos:start="533:110" pos:end="533:111">()</argument_list></call><operator pos:start="533:112" pos:end="533:112">.</operator><call pos:start="533:113" pos:end="533:120"><name pos:start="533:113" pos:end="533:118">getLon</name><argument_list pos:start="533:119" pos:end="533:120">()</argument_list></call><operator pos:start="533:121" pos:end="533:121">)</operator></expr></init></decl>;</decl_stmt>
			<decl_stmt pos:start="534:25" pos:end="534:119"><decl pos:start="534:25" pos:end="534:118"><type pos:start="534:25" pos:end="534:30"><name pos:start="534:25" pos:end="534:30">double</name></type> <name pos:start="534:32" pos:end="534:48">yDegreeDifference</name> <init pos:start="534:50" pos:end="534:118">= <expr pos:start="534:52" pos:end="534:118"><call pos:start="534:52" pos:end="534:73"><name pos:start="534:52" pos:end="534:71"><name pos:start="534:52" pos:end="534:61">leafletMap</name><operator pos:start="534:62" pos:end="534:62">.</operator><name pos:start="534:63" pos:end="534:71">getCenter</name></name><argument_list pos:start="534:72" pos:end="534:73">()</argument_list></call><operator pos:start="534:74" pos:end="534:74">.</operator><call pos:start="534:75" pos:end="534:82"><name pos:start="534:75" pos:end="534:80">getLat</name><argument_list pos:start="534:81" pos:end="534:82">()</argument_list></call> <operator pos:start="534:84" pos:end="534:84">-</operator> <call pos:start="534:86" pos:end="534:109"><name pos:start="534:86" pos:end="534:107"><name pos:start="534:86" pos:end="534:98">leafletMarker</name><operator pos:start="534:99" pos:end="534:99">.</operator><name pos:start="534:100" pos:end="534:107">getPoint</name></name><argument_list pos:start="534:108" pos:end="534:109">()</argument_list></call><operator pos:start="534:110" pos:end="534:110">.</operator><call pos:start="534:111" pos:end="534:118"><name pos:start="534:111" pos:end="534:116">getLat</name><argument_list pos:start="534:117" pos:end="534:118">()</argument_list></call></expr></init></decl>;</decl_stmt>
			<decl_stmt pos:start="535:25" pos:end="535:98"><decl pos:start="535:25" pos:end="535:97"><type pos:start="535:25" pos:end="535:30"><name pos:start="535:25" pos:end="535:30">double</name></type> <name pos:start="535:32" pos:end="535:44">degreePerZoom</name> <init pos:start="535:46" pos:end="535:97">= <expr pos:start="535:48" pos:end="535:97"><operator pos:start="535:48" pos:end="535:48">(</operator><literal type="number" pos:start="535:49" pos:end="535:53">360.0</literal> <operator pos:start="535:55" pos:end="535:55">/</operator> <operator pos:start="535:57" pos:end="535:57">(</operator><call pos:start="535:58" pos:end="535:95"><name pos:start="535:58" pos:end="535:65"><name pos:start="535:58" pos:end="535:61">Math</name><operator pos:start="535:62" pos:end="535:62">.</operator><name pos:start="535:63" pos:end="535:65">pow</name></name><argument_list pos:start="535:66" pos:end="535:95">(<argument pos:start="535:67" pos:end="535:67"><expr pos:start="535:67" pos:end="535:67"><literal type="number" pos:start="535:67" pos:end="535:67">2</literal></expr></argument>, <argument pos:start="535:70" pos:end="535:94"><expr pos:start="535:70" pos:end="535:94"><call pos:start="535:70" pos:end="535:94"><name pos:start="535:70" pos:end="535:92"><name pos:start="535:70" pos:end="535:79">leafletMap</name><operator pos:start="535:80" pos:end="535:80">.</operator><name pos:start="535:81" pos:end="535:92">getZoomLevel</name></name><argument_list pos:start="535:93" pos:end="535:94">()</argument_list></call></expr></argument>)</argument_list></call><operator pos:start="535:96" pos:end="535:96">)</operator><operator pos:start="535:97" pos:end="535:97">)</operator></expr></init></decl>;</decl_stmt>
			<decl_stmt pos:start="536:25" pos:end="536:73"><decl pos:start="536:25" pos:end="536:72"><type pos:start="536:25" pos:end="536:30"><name pos:start="536:25" pos:end="536:30">double</name></type> <name pos:start="536:32" pos:end="536:45">degreePerPixel</name> <init pos:start="536:47" pos:end="536:72">= <expr pos:start="536:49" pos:end="536:72"><name pos:start="536:49" pos:end="536:61">degreePerZoom</name> <operator pos:start="536:63" pos:end="536:63">/</operator> <name pos:start="536:65" pos:end="536:72">mapWidth</name></expr></init></decl>;</decl_stmt>
			<decl_stmt pos:start="537:25" pos:end="537:93"><decl pos:start="537:25" pos:end="537:92"><type pos:start="537:25" pos:end="537:30"><name pos:start="537:25" pos:end="537:30">double</name></type> <name pos:start="537:32" pos:end="537:47">xPixelDifference</name> <init pos:start="537:49" pos:end="537:92">= <expr pos:start="537:51" pos:end="537:92"><operator pos:start="537:51" pos:end="537:51">(</operator><name pos:start="537:52" pos:end="537:68">xDegreeDifference</name> <operator pos:start="537:70" pos:end="537:70">/</operator> <name pos:start="537:72" pos:end="537:85">degreePerPixel</name><operator pos:start="537:86" pos:end="537:86">)</operator> <operator pos:start="537:88" pos:end="537:88">/</operator> <literal type="number" pos:start="537:90" pos:end="537:92">3.0</literal></expr></init></decl>;</decl_stmt>
			<decl_stmt pos:start="538:25" pos:end="538:93"><decl pos:start="538:25" pos:end="538:92"><type pos:start="538:25" pos:end="538:30"><name pos:start="538:25" pos:end="538:30">double</name></type> <name pos:start="538:32" pos:end="538:47">yPixelDifference</name> <init pos:start="538:49" pos:end="538:92">= <expr pos:start="538:51" pos:end="538:92"><operator pos:start="538:51" pos:end="538:51">(</operator><name pos:start="538:52" pos:end="538:68">yDegreeDifference</name> <operator pos:start="538:70" pos:end="538:70">/</operator> <name pos:start="538:72" pos:end="538:85">degreePerPixel</name><operator pos:start="538:86" pos:end="538:86">)</operator> <operator pos:start="538:88" pos:end="538:88">/</operator> <literal type="number" pos:start="538:90" pos:end="538:92">3.0</literal></expr></init></decl>;</decl_stmt>

			<expr_stmt pos:start="540:25" pos:end="540:67"><expr pos:start="540:25" pos:end="540:66"><name pos:start="540:25" pos:end="540:40">xPixelDifference</name> <operator pos:start="540:42" pos:end="540:42">=</operator> <name pos:start="540:44" pos:end="540:59">xPixelDifference</name> <operator pos:start="540:61" pos:end="540:61">*</operator> <literal type="number" pos:start="540:63" pos:end="540:66">0.55</literal></expr>;</expr_stmt>
			<expr_stmt pos:start="541:25" pos:end="541:66"><expr pos:start="541:25" pos:end="541:65"><name pos:start="541:25" pos:end="541:40">yPixelDifference</name> <operator pos:start="541:42" pos:end="541:42">=</operator> <name pos:start="541:44" pos:end="541:59">yPixelDifference</name> <operator pos:start="541:61" pos:end="541:61">*</operator> <literal type="number" pos:start="541:63" pos:end="541:65">0.6</literal></expr>;</expr_stmt>

			<decl_stmt pos:start="543:25" pos:end="543:88"><decl pos:start="543:25" pos:end="543:87"><type pos:start="543:25" pos:end="543:30"><name pos:start="543:25" pos:end="543:30">double</name></type> <name pos:start="543:32" pos:end="543:49">pixelsToLeftBorder</name> <init pos:start="543:51" pos:end="543:87">= <expr pos:start="543:53" pos:end="543:87"><operator pos:start="543:53" pos:end="543:53">(</operator><name pos:start="543:54" pos:end="543:61">mapWidth</name> <operator pos:start="543:63" pos:end="543:63">/</operator> <literal type="number" pos:start="543:65" pos:end="543:67">2.0</literal><operator pos:start="543:68" pos:end="543:68">)</operator> <operator pos:start="543:70" pos:end="543:70">+</operator> <name pos:start="543:72" pos:end="543:87">xPixelDifference</name></expr></init></decl>;</decl_stmt>
			<decl_stmt pos:start="544:25" pos:end="544:88"><decl pos:start="544:25" pos:end="544:87"><type pos:start="544:25" pos:end="544:30"><name pos:start="544:25" pos:end="544:30">double</name></type> <name pos:start="544:32" pos:end="544:48">pixelsToTopBorder</name> <init pos:start="544:50" pos:end="544:87">= <expr pos:start="544:52" pos:end="544:87"><operator pos:start="544:52" pos:end="544:52">(</operator><name pos:start="544:53" pos:end="544:61">mapHeight</name> <operator pos:start="544:63" pos:end="544:63">/</operator> <literal type="number" pos:start="544:65" pos:end="544:67">2.0</literal><operator pos:start="544:68" pos:end="544:68">)</operator> <operator pos:start="544:70" pos:end="544:70">+</operator> <name pos:start="544:72" pos:end="544:87">yPixelDifference</name></expr></init></decl>;</decl_stmt>
			<decl_stmt pos:start="545:25" pos:end="545:88"><decl pos:start="545:25" pos:end="545:87"><type pos:start="545:25" pos:end="545:30"><name pos:start="545:25" pos:end="545:30">double</name></type> <name pos:start="545:32" pos:end="545:37">mouseX</name> <init pos:start="545:39" pos:end="545:87">= <expr pos:start="545:41" pos:end="545:87"><call pos:start="545:41" pos:end="545:66"><name pos:start="545:41" pos:end="545:64"><name pos:start="545:41" pos:end="545:49">MouseInfo</name><operator pos:start="545:50" pos:end="545:50">.</operator><name pos:start="545:51" pos:end="545:64">getPointerInfo</name></name><argument_list pos:start="545:65" pos:end="545:66">()</argument_list></call><operator pos:start="545:67" pos:end="545:67">.</operator><call pos:start="545:68" pos:end="545:80"><name pos:start="545:68" pos:end="545:78">getLocation</name><argument_list pos:start="545:79" pos:end="545:80">()</argument_list></call><operator pos:start="545:81" pos:end="545:81">.</operator><call pos:start="545:82" pos:end="545:87"><name pos:start="545:82" pos:end="545:85">getX</name><argument_list pos:start="545:86" pos:end="545:87">()</argument_list></call></expr></init></decl>;</decl_stmt>
			<decl_stmt pos:start="546:25" pos:end="546:88"><decl pos:start="546:25" pos:end="546:87"><type pos:start="546:25" pos:end="546:30"><name pos:start="546:25" pos:end="546:30">double</name></type> <name pos:start="546:32" pos:end="546:37">mouseY</name> <init pos:start="546:39" pos:end="546:87">= <expr pos:start="546:41" pos:end="546:87"><call pos:start="546:41" pos:end="546:66"><name pos:start="546:41" pos:end="546:64"><name pos:start="546:41" pos:end="546:49">MouseInfo</name><operator pos:start="546:50" pos:end="546:50">.</operator><name pos:start="546:51" pos:end="546:64">getPointerInfo</name></name><argument_list pos:start="546:65" pos:end="546:66">()</argument_list></call><operator pos:start="546:67" pos:end="546:67">.</operator><call pos:start="546:68" pos:end="546:80"><name pos:start="546:68" pos:end="546:78">getLocation</name><argument_list pos:start="546:79" pos:end="546:80">()</argument_list></call><operator pos:start="546:81" pos:end="546:81">.</operator><call pos:start="546:82" pos:end="546:87"><name pos:start="546:82" pos:end="546:85">getY</name><argument_list pos:start="546:86" pos:end="546:87">()</argument_list></call></expr></init></decl>;</decl_stmt>
			<decl_stmt pos:start="547:25" pos:end="547:73"><decl pos:start="547:25" pos:end="547:72"><type pos:start="547:25" pos:end="547:30"><name pos:start="547:25" pos:end="547:30">double</name></type> <name pos:start="547:32" pos:end="547:42">mapTopLeftX</name> <init pos:start="547:44" pos:end="547:72">= <expr pos:start="547:46" pos:end="547:72"><name pos:start="547:46" pos:end="547:51">mouseX</name> <operator pos:start="547:53" pos:end="547:53">-</operator> <name pos:start="547:55" pos:end="547:72">pixelsToLeftBorder</name></expr></init></decl>;</decl_stmt>
			<decl_stmt pos:start="548:25" pos:end="548:72"><decl pos:start="548:25" pos:end="548:71"><type pos:start="548:25" pos:end="548:30"><name pos:start="548:25" pos:end="548:30">double</name></type> <name pos:start="548:32" pos:end="548:42">mapTopLeftY</name> <init pos:start="548:44" pos:end="548:71">= <expr pos:start="548:46" pos:end="548:71"><name pos:start="548:46" pos:end="548:51">mouseY</name> <operator pos:start="548:53" pos:end="548:53">-</operator> <name pos:start="548:55" pos:end="548:71">pixelsToTopBorder</name></expr></init></decl>;</decl_stmt>

			<decl_stmt pos:start="550:25" pos:end="550:72"><decl pos:start="550:25" pos:end="550:71"><type pos:start="550:25" pos:end="550:30"><name pos:start="550:25" pos:end="550:30">double</name></type> <name pos:start="550:32" pos:end="550:48">adjustedXLocation</name> <init pos:start="550:50" pos:end="550:71">= <expr pos:start="550:52" pos:end="550:71"><name pos:start="550:52" pos:end="550:57">mouseX</name> <operator pos:start="550:59" pos:end="550:59">-</operator> <name pos:start="550:61" pos:end="550:71">mapTopLeftX</name></expr></init></decl>;</decl_stmt>
			<decl_stmt pos:start="551:25" pos:end="551:72"><decl pos:start="551:25" pos:end="551:71"><type pos:start="551:25" pos:end="551:30"><name pos:start="551:25" pos:end="551:30">double</name></type> <name pos:start="551:32" pos:end="551:48">adjustedYLocation</name> <init pos:start="551:50" pos:end="551:71">= <expr pos:start="551:52" pos:end="551:71"><name pos:start="551:52" pos:end="551:57">mouseY</name> <operator pos:start="551:59" pos:end="551:59">-</operator> <name pos:start="551:61" pos:end="551:71">mapTopLeftY</name></expr></init></decl>;</decl_stmt>

			<expr_stmt pos:start="553:25" pos:end="554:90"><expr pos:start="553:25" pos:end="554:89"><call pos:start="553:25" pos:end="554:89"><name pos:start="553:25" pos:end="553:43"><name pos:start="553:25" pos:end="553:30">layout</name><operator pos:start="553:31" pos:end="553:31">.</operator><name pos:start="553:32" pos:end="553:43">addComponent</name></name><argument_list pos:start="553:44" pos:end="554:89">(<argument pos:start="553:45" pos:end="553:49"><expr pos:start="553:45" pos:end="553:49"><name pos:start="553:45" pos:end="553:49">popup</name></expr></argument>, <argument pos:start="553:52" pos:end="554:88"><expr pos:start="553:52" pos:end="554:88"><literal type="string" pos:start="553:52" pos:end="553:57">"top:"</literal> <operator pos:start="553:59" pos:end="553:59">+</operator> <call pos:start="553:61" pos:end="553:99"><name pos:start="553:61" pos:end="553:74"><name pos:start="553:61" pos:end="553:66">String</name><operator pos:start="553:67" pos:end="553:67">.</operator><name pos:start="553:68" pos:end="553:74">valueOf</name></name><argument_list pos:start="553:75" pos:end="553:99">(<argument pos:start="553:76" pos:end="553:98"><expr pos:start="553:76" pos:end="553:98"><operator pos:start="553:76" pos:end="553:76">(</operator><name pos:start="553:77" pos:end="553:79">int</name><operator pos:start="553:80" pos:end="553:80">)</operator> <name pos:start="553:82" pos:end="553:98">adjustedYLocation</name></expr></argument>)</argument_list></call> <operator pos:start="553:101" pos:end="553:101">+</operator> <literal type="string" pos:start="553:103" pos:end="553:112">"px;left:"</literal>
					<operator pos:start="554:41" pos:end="554:41">+</operator> <call pos:start="554:43" pos:end="554:81"><name pos:start="554:43" pos:end="554:56"><name pos:start="554:43" pos:end="554:48">String</name><operator pos:start="554:49" pos:end="554:49">.</operator><name pos:start="554:50" pos:end="554:56">valueOf</name></name><argument_list pos:start="554:57" pos:end="554:81">(<argument pos:start="554:58" pos:end="554:80"><expr pos:start="554:58" pos:end="554:80"><operator pos:start="554:58" pos:end="554:58">(</operator><name pos:start="554:59" pos:end="554:61">int</name><operator pos:start="554:62" pos:end="554:62">)</operator> <name pos:start="554:64" pos:end="554:80">adjustedXLocation</name></expr></argument>)</argument_list></call> <operator pos:start="554:83" pos:end="554:83">+</operator> <literal type="string" pos:start="554:85" pos:end="554:88">"px"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

			<expr_stmt pos:start="556:25" pos:end="556:47"><expr pos:start="556:25" pos:end="556:46"><call pos:start="556:25" pos:end="556:46"><name pos:start="556:25" pos:end="556:40"><name pos:start="556:25" pos:end="556:29">popup</name><operator pos:start="556:30" pos:end="556:30">.</operator><name pos:start="556:31" pos:end="556:40">setVisible</name></name><argument_list pos:start="556:41" pos:end="556:46">(<argument pos:start="556:42" pos:end="556:45"><expr pos:start="556:42" pos:end="556:45"><literal type="boolean" pos:start="556:42" pos:end="556:45">true</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt pos:start="557:25" pos:end="557:52"><expr pos:start="557:25" pos:end="557:51"><call pos:start="557:25" pos:end="557:51"><name pos:start="557:25" pos:end="557:45"><name pos:start="557:25" pos:end="557:29">popup</name><operator pos:start="557:30" pos:end="557:30">.</operator><name pos:start="557:31" pos:end="557:45">setPopupVisible</name></name><argument_list pos:start="557:46" pos:end="557:51">(<argument pos:start="557:47" pos:end="557:50"><expr pos:start="557:47" pos:end="557:50"><literal type="boolean" pos:start="557:47" pos:end="557:50">true</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		</block_content>}</block></function>
	}</block></class>

	<function pos:start="561:9" pos:end="563:9"><type pos:start="561:9" pos:end="561:39"><specifier pos:start="561:9" pos:end="561:14">public</specifier> <name pos:start="561:16" pos:end="561:39">LeafletMouseOverListener</name></type> <name pos:start="561:41" pos:end="561:59">getWaypointListener</name><parameter_list pos:start="561:60" pos:end="561:61">()</parameter_list> <block pos:start="561:63" pos:end="563:9">{<block_content pos:start="562:17" pos:end="562:51">
		<return pos:start="562:17" pos:end="562:51">return <expr pos:start="562:24" pos:end="562:50"><operator pos:start="562:24" pos:end="562:26">new</operator> <call pos:start="562:28" pos:end="562:50"><name pos:start="562:28" pos:end="562:48">WaypointMouseListener</name><argument_list pos:start="562:49" pos:end="562:50">()</argument_list></call></expr>;</return>
	</block_content>}</block></function>

	<function pos:start="565:9" pos:end="567:9"><type pos:start="565:9" pos:end="565:39"><specifier pos:start="565:9" pos:end="565:14">public</specifier> <name pos:start="565:16" pos:end="565:39">LeafletMouseOverListener</name></type> <name pos:start="565:41" pos:end="565:56">getDroneListener</name><parameter_list pos:start="565:57" pos:end="565:58">()</parameter_list> <block pos:start="565:60" pos:end="567:9">{<block_content pos:start="566:17" pos:end="566:48"> 
		<return pos:start="566:17" pos:end="566:48">return <expr pos:start="566:24" pos:end="566:47"><operator pos:start="566:24" pos:end="566:26">new</operator> <call pos:start="566:28" pos:end="566:47"><name pos:start="566:28" pos:end="566:45">DroneMouseListener</name><argument_list pos:start="566:46" pos:end="566:47">()</argument_list></call></expr>;</return>
	</block_content>}</block></function> 

	<function pos:start="569:9" pos:end="572:9"><type pos:start="569:9" pos:end="569:19"><specifier pos:start="569:9" pos:end="569:14">public</specifier> <name pos:start="569:16" pos:end="569:19">void</name></type> <name pos:start="569:21" pos:end="569:27">refresh</name><parameter_list pos:start="569:28" pos:end="569:70">(<parameter pos:start="569:29" pos:end="569:42"><decl pos:start="569:29" pos:end="569:42"><type pos:start="569:29" pos:end="569:42"><name pos:start="569:29" pos:end="569:34">String</name></type> <name pos:start="569:36" pos:end="569:42">focused</name></decl></parameter>, <parameter pos:start="569:45" pos:end="569:69"><decl pos:start="569:45" pos:end="569:69"><type pos:start="569:45" pos:end="569:69"><name pos:start="569:45" pos:end="569:56"><name pos:start="569:45" pos:end="569:48">List</name><argument_list type="generic" pos:start="569:49" pos:end="569:56">&lt;<argument pos:start="569:50" pos:end="569:55"><name pos:start="569:50" pos:end="569:55">String</name></argument>&gt;</argument_list></name></type> <name pos:start="569:58" pos:end="569:69">checkedNames</name></decl></parameter>)</parameter_list> <block pos:start="569:72" pos:end="572:9">{<block_content pos:start="570:17" pos:end="571:76">
		<expr_stmt pos:start="570:17" pos:end="570:70"><expr pos:start="570:17" pos:end="570:69"><call pos:start="570:17" pos:end="570:69"><name pos:start="570:17" pos:end="570:46"><name pos:start="570:17" pos:end="570:27">drawingutil</name><operator pos:start="570:28" pos:end="570:28">.</operator><name pos:start="570:29" pos:end="570:46">updateDroneMarkers</name></name><argument_list pos:start="570:47" pos:end="570:69">(<argument pos:start="570:48" pos:end="570:54"><expr pos:start="570:48" pos:end="570:54"><name pos:start="570:48" pos:end="570:54">focused</name></expr></argument>, <argument pos:start="570:57" pos:end="570:68"><expr pos:start="570:57" pos:end="570:68"><name pos:start="570:57" pos:end="570:68">checkedNames</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> 
		<expr_stmt pos:start="571:17" pos:end="571:76"><expr pos:start="571:17" pos:end="571:75"><call pos:start="571:17" pos:end="571:75"><name pos:start="571:17" pos:end="571:52"><name pos:start="571:17" pos:end="571:27">drawingutil</name><operator pos:start="571:28" pos:end="571:28">.</operator><name pos:start="571:29" pos:end="571:52">updateActiveFlightRoutes</name></name><argument_list pos:start="571:53" pos:end="571:75">(<argument pos:start="571:54" pos:end="571:60"><expr pos:start="571:54" pos:end="571:60"><name pos:start="571:54" pos:end="571:60">focused</name></expr></argument>, <argument pos:start="571:63" pos:end="571:74"><expr pos:start="571:63" pos:end="571:74"><name pos:start="571:63" pos:end="571:74">checkedNames</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	</block_content>}</block></function>

}</block></class></unit>
