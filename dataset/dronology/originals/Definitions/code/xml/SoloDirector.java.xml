<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="Java" filename="flatCode/SoloDirector.java" pos:tabs="8"><package pos:start="1:1" pos:end="1:46">package <name pos:start="1:9" pos:end="1:45"><name pos:start="1:9" pos:end="1:11">edu</name><operator pos:start="1:12" pos:end="1:12">.</operator><name pos:start="1:13" pos:end="1:14">nd</name><operator pos:start="1:15" pos:end="1:15">.</operator><name pos:start="1:16" pos:end="1:24">dronology</name><operator pos:start="1:25" pos:end="1:25">.</operator><name pos:start="1:26" pos:end="1:29">core</name><operator pos:start="1:30" pos:end="1:30">.</operator><name pos:start="1:31" pos:end="1:36">flight</name><operator pos:start="1:37" pos:end="1:37">.</operator><name pos:start="1:38" pos:end="1:45">internal</name></name>;</package>

<import pos:start="3:1" pos:end="3:27">import <name pos:start="3:8" pos:end="3:26"><name pos:start="3:8" pos:end="3:11">java</name><operator pos:start="3:12" pos:end="3:12">.</operator><name pos:start="3:13" pos:end="3:16">util</name><operator pos:start="3:17" pos:end="3:17">.</operator><name pos:start="3:18" pos:end="3:26">ArrayList</name></name>;</import>
<import pos:start="4:1" pos:end="4:22">import <name pos:start="4:8" pos:end="4:21"><name pos:start="4:8" pos:end="4:11">java</name><operator pos:start="4:12" pos:end="4:12">.</operator><name pos:start="4:13" pos:end="4:16">util</name><operator pos:start="4:17" pos:end="4:17">.</operator><name pos:start="4:18" pos:end="4:21">List</name></name>;</import>

<import pos:start="6:1" pos:end="6:38">import <name pos:start="6:8" pos:end="6:37"><name pos:start="6:8" pos:end="6:10">edu</name><operator pos:start="6:11" pos:end="6:11">.</operator><name pos:start="6:12" pos:end="6:13">nd</name><operator pos:start="6:14" pos:end="6:14">.</operator><name pos:start="6:15" pos:end="6:23">dronology</name><operator pos:start="6:24" pos:end="6:24">.</operator><name pos:start="6:25" pos:end="6:28">util</name><operator pos:start="6:29" pos:end="6:29">.</operator><name pos:start="6:30" pos:end="6:37">NullUtil</name></name>;</import>
<import pos:start="7:1" pos:end="7:37">import <name pos:start="7:8" pos:end="7:36"><name pos:start="7:8" pos:end="7:10">edu</name><operator pos:start="7:11" pos:end="7:11">.</operator><name pos:start="7:12" pos:end="7:13">nd</name><operator pos:start="7:14" pos:end="7:14">.</operator><name pos:start="7:15" pos:end="7:23">dronology</name><operator pos:start="7:24" pos:end="7:24">.</operator><name pos:start="7:25" pos:end="7:28">core</name><operator pos:start="7:29" pos:end="7:29">.</operator><name pos:start="7:30" pos:end="7:36">Discuss</name></name>;</import>
<import pos:start="8:1" pos:end="8:48">import <name pos:start="8:8" pos:end="8:47"><name pos:start="8:8" pos:end="8:10">edu</name><operator pos:start="8:11" pos:end="8:11">.</operator><name pos:start="8:12" pos:end="8:13">nd</name><operator pos:start="8:14" pos:end="8:14">.</operator><name pos:start="8:15" pos:end="8:23">dronology</name><operator pos:start="8:24" pos:end="8:24">.</operator><name pos:start="8:25" pos:end="8:28">core</name><operator pos:start="8:29" pos:end="8:29">.</operator><name pos:start="8:30" pos:end="8:47">DronologyConstants</name></name>;</import>
<import pos:start="9:1" pos:end="9:54">import <name pos:start="9:8" pos:end="9:53"><name pos:start="9:8" pos:end="9:10">edu</name><operator pos:start="9:11" pos:end="9:11">.</operator><name pos:start="9:12" pos:end="9:13">nd</name><operator pos:start="9:14" pos:end="9:14">.</operator><name pos:start="9:15" pos:end="9:23">dronology</name><operator pos:start="9:24" pos:end="9:24">.</operator><name pos:start="9:25" pos:end="9:28">core</name><operator pos:start="9:29" pos:end="9:29">.</operator><name pos:start="9:30" pos:end="9:39">coordinate</name><operator pos:start="9:40" pos:end="9:40">.</operator><name pos:start="9:41" pos:end="9:53">LlaCoordinate</name></name>;</import>
<import pos:start="10:1" pos:end="10:60">import <name pos:start="10:8" pos:end="10:59"><name pos:start="10:8" pos:end="10:10">edu</name><operator pos:start="10:11" pos:end="10:11">.</operator><name pos:start="10:12" pos:end="10:13">nd</name><operator pos:start="10:14" pos:end="10:14">.</operator><name pos:start="10:15" pos:end="10:23">dronology</name><operator pos:start="10:24" pos:end="10:24">.</operator><name pos:start="10:25" pos:end="10:28">core</name><operator pos:start="10:29" pos:end="10:29">.</operator><name pos:start="10:30" pos:end="10:39">exceptions</name><operator pos:start="10:40" pos:end="10:40">.</operator><name pos:start="10:41" pos:end="10:59">FlightZoneException</name></name>;</import>
<import pos:start="11:1" pos:end="11:52">import <name pos:start="11:8" pos:end="11:51"><name pos:start="11:8" pos:end="11:10">edu</name><operator pos:start="11:11" pos:end="11:11">.</operator><name pos:start="11:12" pos:end="11:13">nd</name><operator pos:start="11:14" pos:end="11:14">.</operator><name pos:start="11:15" pos:end="11:23">dronology</name><operator pos:start="11:24" pos:end="11:24">.</operator><name pos:start="11:25" pos:end="11:28">core</name><operator pos:start="11:29" pos:end="11:29">.</operator><name pos:start="11:30" pos:end="11:35">flight</name><operator pos:start="11:36" pos:end="11:36">.</operator><name pos:start="11:37" pos:end="11:51">IFlightDirector</name></name>;</import>
<import pos:start="12:1" pos:end="12:43">import <name pos:start="12:8" pos:end="12:42"><name pos:start="12:8" pos:end="12:10">edu</name><operator pos:start="12:11" pos:end="12:11">.</operator><name pos:start="12:12" pos:end="12:13">nd</name><operator pos:start="12:14" pos:end="12:14">.</operator><name pos:start="12:15" pos:end="12:23">dronology</name><operator pos:start="12:24" pos:end="12:24">.</operator><name pos:start="12:25" pos:end="12:28">core</name><operator pos:start="12:29" pos:end="12:29">.</operator><name pos:start="12:30" pos:end="12:33">util</name><operator pos:start="12:34" pos:end="12:34">.</operator><name pos:start="12:35" pos:end="12:42">Waypoint</name></name>;</import>
<import pos:start="13:1" pos:end="13:50">import <name pos:start="13:8" pos:end="13:49"><name pos:start="13:8" pos:end="13:10">edu</name><operator pos:start="13:11" pos:end="13:11">.</operator><name pos:start="13:12" pos:end="13:13">nd</name><operator pos:start="13:14" pos:end="13:14">.</operator><name pos:start="13:15" pos:end="13:23">dronology</name><operator pos:start="13:24" pos:end="13:24">.</operator><name pos:start="13:25" pos:end="13:28">core</name><operator pos:start="13:29" pos:end="13:29">.</operator><name pos:start="13:30" pos:end="13:36">vehicle</name><operator pos:start="13:37" pos:end="13:37">.</operator><name pos:start="13:38" pos:end="13:49">ManagedDrone</name></name>;</import>
<import pos:start="14:1" pos:end="14:30">import <name pos:start="14:8" pos:end="14:29"><name pos:start="14:8" pos:end="14:10">net</name><operator pos:start="14:11" pos:end="14:11">.</operator><name pos:start="14:12" pos:end="14:13">mv</name><operator pos:start="14:14" pos:end="14:14">.</operator><name pos:start="14:15" pos:end="14:21">logging</name><operator pos:start="14:22" pos:end="14:22">.</operator><name pos:start="14:23" pos:end="14:29">ILogger</name></name>;</import>
<import pos:start="15:1" pos:end="15:37">import <name pos:start="15:8" pos:end="15:36"><name pos:start="15:8" pos:end="15:10">net</name><operator pos:start="15:11" pos:end="15:11">.</operator><name pos:start="15:12" pos:end="15:13">mv</name><operator pos:start="15:14" pos:end="15:14">.</operator><name pos:start="15:15" pos:end="15:21">logging</name><operator pos:start="15:22" pos:end="15:22">.</operator><name pos:start="15:23" pos:end="15:36">LoggerProvider</name></name>;</import>

<comment type="block" format="javadoc" pos:start="17:1" pos:end="22:3">/**
 * Directions for one flight containing multiple waypoints.
 * 
 * @author Jane Cleland-Huang
 * 
 */</comment>
<class pos:start="23:1" pos:end="148:1"><specifier pos:start="23:1" pos:end="23:6">public</specifier> class <name pos:start="23:14" pos:end="23:25">SoloDirector</name> <super_list pos:start="23:27" pos:end="23:52"><implements pos:start="23:27" pos:end="23:52">implements <super pos:start="23:38" pos:end="23:52"><name pos:start="23:38" pos:end="23:52">IFlightDirector</name></super></implements></super_list> <block pos:start="23:54" pos:end="148:1">{

	<decl_stmt pos:start="25:9" pos:end="25:91"><decl pos:start="25:9" pos:end="25:90"><type pos:start="25:9" pos:end="25:36"><specifier pos:start="25:9" pos:end="25:15">private</specifier> <specifier pos:start="25:17" pos:end="25:22">static</specifier> <specifier pos:start="25:24" pos:end="25:28">final</specifier> <name pos:start="25:30" pos:end="25:36">ILogger</name></type> <name pos:start="25:38" pos:end="25:43">LOGGER</name> <init pos:start="25:45" pos:end="25:90">= <expr pos:start="25:47" pos:end="25:90"><call pos:start="25:47" pos:end="25:90"><name pos:start="25:47" pos:end="25:70"><name pos:start="25:47" pos:end="25:60">LoggerProvider</name><operator pos:start="25:61" pos:end="25:61">.</operator><name pos:start="25:62" pos:end="25:70">getLogger</name></name><argument_list pos:start="25:71" pos:end="25:90">(<argument pos:start="25:72" pos:end="25:89"><expr pos:start="25:72" pos:end="25:89"><name pos:start="25:72" pos:end="25:89"><name pos:start="25:72" pos:end="25:83">SoloDirector</name><operator pos:start="25:84" pos:end="25:84">.</operator><name pos:start="25:85" pos:end="25:89">class</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

	<decl_stmt pos:start="27:9" pos:end="27:41"><decl pos:start="27:9" pos:end="27:40"><type pos:start="27:9" pos:end="27:34"><specifier pos:start="27:9" pos:end="27:15">private</specifier> <specifier pos:start="27:17" pos:end="27:21">final</specifier> <name pos:start="27:23" pos:end="27:34">ManagedDrone</name></type> <name pos:start="27:36" pos:end="27:40">drone</name></decl>;</decl_stmt>
	<decl_stmt pos:start="28:9" pos:end="28:48"><decl pos:start="28:9" pos:end="28:47"><type pos:start="28:9" pos:end="28:23"><specifier pos:start="28:9" pos:end="28:15">private</specifier> <name pos:start="28:17" pos:end="28:23">boolean</name></type> <name pos:start="28:25" pos:end="28:39">safetyDiversion</name> <init pos:start="28:41" pos:end="28:47">= <expr pos:start="28:43" pos:end="28:47"><literal type="boolean" pos:start="28:43" pos:end="28:47">false</literal></expr></init></decl>;</decl_stmt>
	<decl_stmt pos:start="29:9" pos:end="29:52"><decl pos:start="29:9" pos:end="29:51"><type pos:start="29:9" pos:end="29:29"><specifier pos:start="29:9" pos:end="29:15">private</specifier> <name pos:start="29:17" pos:end="29:29">LlaCoordinate</name></type> <name pos:start="29:31" pos:end="29:44">targetPosition</name> <init pos:start="29:46" pos:end="29:51">= <expr pos:start="29:48" pos:end="29:51"><literal type="null" pos:start="29:48" pos:end="29:51">null</literal></expr></init></decl>;</decl_stmt>
	<decl_stmt pos:start="30:9" pos:end="30:61"><decl pos:start="30:9" pos:end="30:60"><type pos:start="30:9" pos:end="30:30"><specifier pos:start="30:9" pos:end="30:15">private</specifier> <name pos:start="30:17" pos:end="30:30"><name pos:start="30:17" pos:end="30:20">List</name><argument_list type="generic" pos:start="30:21" pos:end="30:30">&lt;<argument pos:start="30:22" pos:end="30:29"><name pos:start="30:22" pos:end="30:29">Waypoint</name></argument>&gt;</argument_list></name></type> <name pos:start="30:32" pos:end="30:40">wayPoints</name> <init pos:start="30:42" pos:end="30:60">= <expr pos:start="30:44" pos:end="30:60"><operator pos:start="30:44" pos:end="30:46">new</operator> <call pos:start="30:48" pos:end="30:60"><name pos:start="30:48" pos:end="30:58"><name pos:start="30:48" pos:end="30:56">ArrayList</name><argument_list type="generic" pos:start="30:57" pos:end="30:58">&lt;&gt;</argument_list></name><argument_list pos:start="30:59" pos:end="30:60">()</argument_list></call></expr></init></decl>;</decl_stmt>
	<decl_stmt pos:start="31:9" pos:end="31:71"><decl pos:start="31:9" pos:end="31:70"><type pos:start="31:9" pos:end="31:35"><specifier pos:start="31:9" pos:end="31:15">private</specifier> <name pos:start="31:17" pos:end="31:35"><name pos:start="31:17" pos:end="31:20">List</name><argument_list type="generic" pos:start="31:21" pos:end="31:35">&lt;<argument pos:start="31:22" pos:end="31:34"><name pos:start="31:22" pos:end="31:34">LlaCoordinate</name></argument>&gt;</argument_list></name></type> <name pos:start="31:37" pos:end="31:50">roundaboutPath</name> <init pos:start="31:52" pos:end="31:70">= <expr pos:start="31:54" pos:end="31:70"><operator pos:start="31:54" pos:end="31:56">new</operator> <call pos:start="31:58" pos:end="31:70"><name pos:start="31:58" pos:end="31:68"><name pos:start="31:58" pos:end="31:66">ArrayList</name><argument_list type="generic" pos:start="31:67" pos:end="31:68">&lt;&gt;</argument_list></name><argument_list pos:start="31:69" pos:end="31:70">()</argument_list></call></expr></init></decl>;</decl_stmt>

	<function pos:start="33:9" pos:end="37:9"><annotation pos:start="33:9" pos:end="33:17">@<name pos:start="33:10" pos:end="33:17">Override</name></annotation>
	<type pos:start="34:9" pos:end="34:28"><specifier pos:start="34:9" pos:end="34:14">public</specifier> <name pos:start="34:16" pos:end="34:28">LlaCoordinate</name></type> <name pos:start="34:30" pos:end="34:43">flyToNextPoint</name><parameter_list pos:start="34:44" pos:end="34:45">()</parameter_list> <block pos:start="34:47" pos:end="37:9">{<block_content pos:start="35:17" pos:end="36:38">
		<expr_stmt pos:start="35:17" pos:end="35:53"><expr pos:start="35:17" pos:end="35:52"><name pos:start="35:17" pos:end="35:30">targetPosition</name> <operator pos:start="35:32" pos:end="35:32">=</operator> <call pos:start="35:34" pos:end="35:52"><name pos:start="35:34" pos:end="35:50">flyToNextWayPoint</name><argument_list pos:start="35:51" pos:end="35:52">()</argument_list></call></expr>;</expr_stmt>
		<return pos:start="36:17" pos:end="36:38">return <expr pos:start="36:24" pos:end="36:37"><name pos:start="36:24" pos:end="36:37">targetPosition</name></expr>;</return>
	</block_content>}</block></function>

	<function pos:start="39:9" pos:end="41:9"><type pos:start="39:9" pos:end="39:29"><specifier pos:start="39:9" pos:end="39:14">public</specifier> <name pos:start="39:16" pos:end="39:29"><name pos:start="39:16" pos:end="39:19">List</name><argument_list type="generic" pos:start="39:20" pos:end="39:29">&lt;<argument pos:start="39:21" pos:end="39:28"><name pos:start="39:21" pos:end="39:28">Waypoint</name></argument>&gt;</argument_list></name></type> <name pos:start="39:31" pos:end="39:42">getWayPoints</name><parameter_list pos:start="39:43" pos:end="39:44">()</parameter_list> <block pos:start="39:46" pos:end="41:9">{<block_content pos:start="40:17" pos:end="40:55">
		<return pos:start="40:17" pos:end="40:55">return <expr pos:start="40:24" pos:end="40:54"><operator pos:start="40:24" pos:end="40:26">new</operator> <call pos:start="40:28" pos:end="40:54"><name pos:start="40:28" pos:end="40:38"><name pos:start="40:28" pos:end="40:36">ArrayList</name><argument_list type="generic" pos:start="40:37" pos:end="40:38">&lt;&gt;</argument_list></name><argument_list pos:start="40:39" pos:end="40:54">(<argument pos:start="40:40" pos:end="40:53"><expr pos:start="40:40" pos:end="40:53"><name pos:start="40:40" pos:end="40:53"><name pos:start="40:40" pos:end="40:43">this</name><operator pos:start="40:44" pos:end="40:44">.</operator><name pos:start="40:45" pos:end="40:53">wayPoints</name></name></expr></argument>)</argument_list></call></expr>;</return>
	</block_content>}</block></function>

	<comment type="block" format="javadoc" pos:start="43:9" pos:end="47:11">/**
	 * Constructor
	 * 
	 * @param managedDrone
	 */</comment>
	<constructor pos:start="48:9" pos:end="50:9"><specifier pos:start="48:9" pos:end="48:14">public</specifier> <name pos:start="48:16" pos:end="48:27">SoloDirector</name><parameter_list pos:start="48:28" pos:end="48:54">(<parameter pos:start="48:29" pos:end="48:53"><decl pos:start="48:29" pos:end="48:53"><type pos:start="48:29" pos:end="48:40"><name pos:start="48:29" pos:end="48:40">ManagedDrone</name></type> <name pos:start="48:42" pos:end="48:53">managedDrone</name></decl></parameter>)</parameter_list> <block pos:start="48:56" pos:end="50:9">{<block_content pos:start="49:17" pos:end="49:42">
		<expr_stmt pos:start="49:17" pos:end="49:42"><expr pos:start="49:17" pos:end="49:41"><name pos:start="49:17" pos:end="49:26"><name pos:start="49:17" pos:end="49:20">this</name><operator pos:start="49:21" pos:end="49:21">.</operator><name pos:start="49:22" pos:end="49:26">drone</name></name> <operator pos:start="49:28" pos:end="49:28">=</operator> <name pos:start="49:30" pos:end="49:41">managedDrone</name></expr>;</expr_stmt>
	</block_content>}</block></constructor>

	<function pos:start="52:9" pos:end="55:9"><annotation pos:start="52:9" pos:end="52:17">@<name pos:start="52:10" pos:end="52:17">Override</name></annotation>
	<type pos:start="53:9" pos:end="53:19"><specifier pos:start="53:9" pos:end="53:14">public</specifier> <name pos:start="53:16" pos:end="53:19">void</name></type> <name pos:start="53:21" pos:end="53:32">setWayPoints</name><parameter_list pos:start="53:33" pos:end="53:58">(<parameter pos:start="53:34" pos:end="53:57"><decl pos:start="53:34" pos:end="53:57"><type pos:start="53:34" pos:end="53:47"><name pos:start="53:34" pos:end="53:47"><name pos:start="53:34" pos:end="53:37">List</name><argument_list type="generic" pos:start="53:38" pos:end="53:47">&lt;<argument pos:start="53:39" pos:end="53:46"><name pos:start="53:39" pos:end="53:46">Waypoint</name></argument>&gt;</argument_list></name></type> <name pos:start="53:49" pos:end="53:57">wayPoints</name></decl></parameter>)</parameter_list> <block pos:start="53:60" pos:end="55:9">{<block_content pos:start="54:17" pos:end="54:60">
		<expr_stmt pos:start="54:17" pos:end="54:60"><expr pos:start="54:17" pos:end="54:59"><name pos:start="54:17" pos:end="54:30"><name pos:start="54:17" pos:end="54:20">this</name><operator pos:start="54:21" pos:end="54:21">.</operator><name pos:start="54:22" pos:end="54:30">wayPoints</name></name> <operator pos:start="54:32" pos:end="54:32">=</operator> <operator pos:start="54:34" pos:end="54:36">new</operator> <call pos:start="54:38" pos:end="54:59"><name pos:start="54:38" pos:end="54:48"><name pos:start="54:38" pos:end="54:46">ArrayList</name><argument_list type="generic" pos:start="54:47" pos:end="54:48">&lt;&gt;</argument_list></name><argument_list pos:start="54:49" pos:end="54:59">(<argument pos:start="54:50" pos:end="54:58"><expr pos:start="54:50" pos:end="54:58"><name pos:start="54:50" pos:end="54:58">wayPoints</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	</block_content>}</block></function>

	<function pos:start="57:9" pos:end="60:9"><annotation pos:start="57:9" pos:end="57:17">@<name pos:start="57:10" pos:end="57:17">Override</name></annotation>
	<type pos:start="58:9" pos:end="58:19"><specifier pos:start="58:9" pos:end="58:14">public</specifier> <name pos:start="58:16" pos:end="58:19">void</name></type> <name pos:start="58:21" pos:end="58:34">clearWayPoints</name><parameter_list pos:start="58:35" pos:end="58:36">()</parameter_list> <block pos:start="58:38" pos:end="60:9">{<block_content pos:start="59:17" pos:end="59:34">
		<expr_stmt pos:start="59:17" pos:end="59:34"><expr pos:start="59:17" pos:end="59:33"><call pos:start="59:17" pos:end="59:33"><name pos:start="59:17" pos:end="59:31"><name pos:start="59:17" pos:end="59:25">wayPoints</name><operator pos:start="59:26" pos:end="59:26">.</operator><name pos:start="59:27" pos:end="59:31">clear</name></name><argument_list pos:start="59:32" pos:end="59:33">()</argument_list></call></expr>;</expr_stmt>
	</block_content>}</block></function>

	<function pos:start="62:9" pos:end="65:9"><annotation pos:start="62:9" pos:end="62:17">@<name pos:start="62:10" pos:end="62:17">Override</name></annotation>
	<type pos:start="63:9" pos:end="63:22"><specifier pos:start="63:9" pos:end="63:14">public</specifier> <name pos:start="63:16" pos:end="63:22">boolean</name></type> <name pos:start="63:24" pos:end="63:39">hasMoreWayPoints</name><parameter_list pos:start="63:40" pos:end="63:41">()</parameter_list> <block pos:start="63:43" pos:end="65:9">{<block_content pos:start="64:17" pos:end="64:44">
		<return pos:start="64:17" pos:end="64:44">return <expr pos:start="64:24" pos:end="64:43"><operator pos:start="64:24" pos:end="64:24">!</operator><call pos:start="64:25" pos:end="64:43"><name pos:start="64:25" pos:end="64:41"><name pos:start="64:25" pos:end="64:33">wayPoints</name><operator pos:start="64:34" pos:end="64:34">.</operator><name pos:start="64:35" pos:end="64:41">isEmpty</name></name><argument_list pos:start="64:42" pos:end="64:43">()</argument_list></call></expr>;</return>
	</block_content>}</block></function>

	<function pos:start="67:9" pos:end="76:9"><annotation pos:start="67:9" pos:end="67:72">@<name pos:start="67:10" pos:end="67:16">Discuss</name><argument_list pos:start="67:17" pos:end="67:72">(<argument pos:start="67:18" pos:end="67:71"><expr pos:start="67:18" pos:end="67:71"><name pos:start="67:18" pos:end="67:24">discuss</name> <operator pos:start="67:26" pos:end="67:26">=</operator> <literal type="string" pos:start="67:28" pos:end="67:71">"this is called way to often.. needs fixing"</literal></expr></argument>)</argument_list></annotation>
	<type pos:start="68:9" pos:end="68:29"><specifier pos:start="68:9" pos:end="68:15">private</specifier> <name pos:start="68:17" pos:end="68:29">LlaCoordinate</name></type> <name pos:start="68:31" pos:end="68:47">flyToNextWayPoint</name><parameter_list pos:start="68:48" pos:end="68:49">()</parameter_list> <block pos:start="68:51" pos:end="76:9">{<block_content pos:start="70:17" pos:end="75:28">
		<comment type="line" pos:start="69:17" pos:end="69:58">// LOGGER.info("Flying to next waypoint");</comment>
		<if_stmt pos:start="70:17" pos:end="74:17"><if pos:start="70:17" pos:end="74:17">if <condition pos:start="70:20" pos:end="70:41">(<expr pos:start="70:21" pos:end="70:40"><operator pos:start="70:21" pos:end="70:21">!</operator><call pos:start="70:22" pos:end="70:40"><name pos:start="70:22" pos:end="70:38"><name pos:start="70:22" pos:end="70:30">wayPoints</name><operator pos:start="70:31" pos:end="70:31">.</operator><name pos:start="70:32" pos:end="70:38">isEmpty</name></name><argument_list pos:start="70:39" pos:end="70:40">()</argument_list></call></expr>)</condition> <block pos:start="70:43" pos:end="74:17">{<block_content pos:start="71:25" pos:end="73:60">
			<decl_stmt pos:start="71:25" pos:end="71:65"><decl pos:start="71:25" pos:end="71:64"><type pos:start="71:25" pos:end="71:32"><name pos:start="71:25" pos:end="71:32">Waypoint</name></type> <name pos:start="71:34" pos:end="71:45">nextWaypoint</name> <init pos:start="71:47" pos:end="71:64">= <expr pos:start="71:49" pos:end="71:64"><call pos:start="71:49" pos:end="71:64"><name pos:start="71:49" pos:end="71:61"><name pos:start="71:49" pos:end="71:57">wayPoints</name><operator pos:start="71:58" pos:end="71:58">.</operator><name pos:start="71:59" pos:end="71:61">get</name></name><argument_list pos:start="71:62" pos:end="71:64">(<argument pos:start="71:63" pos:end="71:63"><expr pos:start="71:63" pos:end="71:63"><literal type="number" pos:start="71:63" pos:end="71:63">0</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<expr_stmt pos:start="72:25" pos:end="72:102"><expr pos:start="72:25" pos:end="72:101"><call pos:start="72:25" pos:end="72:101"><name pos:start="72:25" pos:end="72:35"><name pos:start="72:25" pos:end="72:29">drone</name><operator pos:start="72:30" pos:end="72:30">.</operator><name pos:start="72:31" pos:end="72:35">flyTo</name></name><argument_list pos:start="72:36" pos:end="72:101">(<argument pos:start="72:37" pos:end="72:64"><expr pos:start="72:37" pos:end="72:64"><call pos:start="72:37" pos:end="72:64"><name pos:start="72:37" pos:end="72:62"><name pos:start="72:37" pos:end="72:48">nextWaypoint</name><operator pos:start="72:49" pos:end="72:49">.</operator><name pos:start="72:50" pos:end="72:62">getCoordinate</name></name><argument_list pos:start="72:63" pos:end="72:64">()</argument_list></call></expr></argument>, <argument pos:start="72:67" pos:end="72:100"><expr pos:start="72:67" pos:end="72:100"><call pos:start="72:67" pos:end="72:100"><name pos:start="72:67" pos:end="72:98"><name pos:start="72:67" pos:end="72:78">nextWaypoint</name><operator pos:start="72:79" pos:end="72:79">.</operator><name pos:start="72:80" pos:end="72:98">getApproachingspeed</name></name><argument_list pos:start="72:99" pos:end="72:100">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<return pos:start="73:25" pos:end="73:60">return <expr pos:start="73:32" pos:end="73:59"><call pos:start="73:32" pos:end="73:59"><name pos:start="73:32" pos:end="73:57"><name pos:start="73:32" pos:end="73:43">nextWaypoint</name><operator pos:start="73:44" pos:end="73:44">.</operator><name pos:start="73:45" pos:end="73:57">getCoordinate</name></name><argument_list pos:start="73:58" pos:end="73:59">()</argument_list></call></expr>;</return>
		</block_content>}</block></if></if_stmt>
		<return pos:start="75:17" pos:end="75:28">return <expr pos:start="75:24" pos:end="75:27"><literal type="null" pos:start="75:24" pos:end="75:27">null</literal></expr>;</return>
	</block_content>}</block></function>

	<function pos:start="78:9" pos:end="81:9"><annotation pos:start="78:9" pos:end="78:17">@<name pos:start="78:10" pos:end="78:17">Override</name></annotation>
	<type pos:start="79:9" pos:end="79:22"><specifier pos:start="79:9" pos:end="79:14">public</specifier> <name pos:start="79:16" pos:end="79:22">boolean</name></type> <name pos:start="79:24" pos:end="79:46">isUnderSafetyDirectives</name><parameter_list pos:start="79:47" pos:end="79:48">()</parameter_list> <block pos:start="79:50" pos:end="81:9">{<block_content pos:start="80:17" pos:end="80:39">
		<return pos:start="80:17" pos:end="80:39">return <expr pos:start="80:24" pos:end="80:38"><name pos:start="80:24" pos:end="80:38">safetyDiversion</name></expr>;</return>
	</block_content>}</block></function>

	<function pos:start="83:9" pos:end="105:9"><annotation pos:start="83:9" pos:end="83:17">@<name pos:start="83:10" pos:end="83:17">Override</name></annotation>
	<type pos:start="84:9" pos:end="84:19"><specifier pos:start="84:9" pos:end="84:14">public</specifier> <name pos:start="84:16" pos:end="84:19">void</name></type> <name pos:start="84:21" pos:end="84:40">clearCurrentWayPoint</name><parameter_list pos:start="84:41" pos:end="84:42">()</parameter_list> <block pos:start="84:44" pos:end="105:9">{<block_content pos:start="85:17" pos:end="104:17">
		<if_stmt pos:start="85:17" pos:end="104:17"><if pos:start="85:17" pos:end="92:17">if <condition pos:start="85:20" pos:end="85:46">(<expr pos:start="85:21" pos:end="85:45"><call pos:start="85:21" pos:end="85:45"><name pos:start="85:21" pos:end="85:43">isUnderSafetyDirectives</name><argument_list pos:start="85:44" pos:end="85:45">()</argument_list></call></expr>)</condition> <block pos:start="85:48" pos:end="92:17">{<block_content pos:start="86:25" pos:end="91:25">
			<if_stmt pos:start="86:25" pos:end="91:25"><if pos:start="86:25" pos:end="91:25">if <condition pos:start="86:28" pos:end="86:54">(<expr pos:start="86:29" pos:end="86:53"><operator pos:start="86:29" pos:end="86:29">!</operator><call pos:start="86:30" pos:end="86:53"><name pos:start="86:30" pos:end="86:51"><name pos:start="86:30" pos:end="86:43">roundaboutPath</name><operator pos:start="86:44" pos:end="86:44">.</operator><name pos:start="86:45" pos:end="86:51">isEmpty</name></name><argument_list pos:start="86:52" pos:end="86:53">()</argument_list></call></expr>)</condition> <block pos:start="86:56" pos:end="91:25">{<block_content pos:start="87:33" pos:end="90:33">
				<expr_stmt pos:start="87:33" pos:end="87:57"><expr pos:start="87:33" pos:end="87:56"><call pos:start="87:33" pos:end="87:56"><name pos:start="87:33" pos:end="87:53"><name pos:start="87:33" pos:end="87:46">roundaboutPath</name><operator pos:start="87:47" pos:end="87:47">.</operator><name pos:start="87:48" pos:end="87:53">remove</name></name><argument_list pos:start="87:54" pos:end="87:56">(<argument pos:start="87:55" pos:end="87:55"><expr pos:start="87:55" pos:end="87:55"><literal type="number" pos:start="87:55" pos:end="87:55">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<if_stmt pos:start="88:33" pos:end="90:33"><if pos:start="88:33" pos:end="90:33">if <condition pos:start="88:36" pos:end="88:61">(<expr pos:start="88:37" pos:end="88:60"><call pos:start="88:37" pos:end="88:60"><name pos:start="88:37" pos:end="88:58"><name pos:start="88:37" pos:end="88:50">roundaboutPath</name><operator pos:start="88:51" pos:end="88:51">.</operator><name pos:start="88:52" pos:end="88:58">isEmpty</name></name><argument_list pos:start="88:59" pos:end="88:60">()</argument_list></call></expr>)</condition> <block pos:start="88:63" pos:end="90:33">{<block_content pos:start="89:41" pos:end="89:64"> 
					<expr_stmt pos:start="89:41" pos:end="89:64"><expr pos:start="89:41" pos:end="89:63"><name pos:start="89:41" pos:end="89:55">safetyDiversion</name> <operator pos:start="89:57" pos:end="89:57">=</operator> <literal type="boolean" pos:start="89:59" pos:end="89:63">false</literal></expr>;</expr_stmt>
				</block_content>}</block></if></if_stmt>
			</block_content>}</block></if></if_stmt>
		</block_content>}</block></if> <else pos:start="92:19" pos:end="104:17">else <block pos:start="92:24" pos:end="104:17">{<block_content pos:start="93:25" pos:end="103:25">
			<if_stmt pos:start="93:25" pos:end="96:25"><if pos:start="93:25" pos:end="96:25">if <condition pos:start="93:28" pos:end="93:49">(<expr pos:start="93:29" pos:end="93:48"><operator pos:start="93:29" pos:end="93:29">!</operator><call pos:start="93:30" pos:end="93:48"><name pos:start="93:30" pos:end="93:46"><name pos:start="93:30" pos:end="93:38">wayPoints</name><operator pos:start="93:39" pos:end="93:39">.</operator><name pos:start="93:40" pos:end="93:46">isEmpty</name></name><argument_list pos:start="93:47" pos:end="93:48">()</argument_list></call></expr>)</condition> <block pos:start="93:51" pos:end="96:25">{<block_content pos:start="94:33" pos:end="95:49">
				<decl_stmt pos:start="94:33" pos:end="94:66"><decl pos:start="94:33" pos:end="94:65"><type pos:start="94:33" pos:end="94:40"><name pos:start="94:33" pos:end="94:40">Waypoint</name></type> <name pos:start="94:42" pos:end="94:43">wp</name> <init pos:start="94:45" pos:end="94:65">= <expr pos:start="94:47" pos:end="94:65"><call pos:start="94:47" pos:end="94:65"><name pos:start="94:47" pos:end="94:62"><name pos:start="94:47" pos:end="94:55">wayPoints</name><operator pos:start="94:56" pos:end="94:56">.</operator><name pos:start="94:57" pos:end="94:62">remove</name></name><argument_list pos:start="94:63" pos:end="94:65">(<argument pos:start="94:64" pos:end="94:64"><expr pos:start="94:64" pos:end="94:64"><literal type="number" pos:start="94:64" pos:end="94:64">0</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
				<expr_stmt pos:start="95:33" pos:end="95:49"><expr pos:start="95:33" pos:end="95:48"><call pos:start="95:33" pos:end="95:48"><name pos:start="95:33" pos:end="95:42"><name pos:start="95:33" pos:end="95:34">wp</name><operator pos:start="95:35" pos:end="95:35">.</operator><name pos:start="95:36" pos:end="95:42">reached</name></name><argument_list pos:start="95:43" pos:end="95:48">(<argument pos:start="95:44" pos:end="95:47"><expr pos:start="95:44" pos:end="95:47"><literal type="boolean" pos:start="95:44" pos:end="95:47">true</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			</block_content>}</block></if></if_stmt>
			<if_stmt pos:start="97:25" pos:end="103:25"><if pos:start="97:25" pos:end="103:25">if <condition pos:start="97:28" pos:end="97:48">(<expr pos:start="97:29" pos:end="97:47"><call pos:start="97:29" pos:end="97:47"><name pos:start="97:29" pos:end="97:45"><name pos:start="97:29" pos:end="97:37">wayPoints</name><operator pos:start="97:38" pos:end="97:38">.</operator><name pos:start="97:39" pos:end="97:45">isEmpty</name></name><argument_list pos:start="97:46" pos:end="97:47">()</argument_list></call></expr>)</condition> <block pos:start="97:50" pos:end="103:25">{<block_content pos:start="98:33" pos:end="102:33">
				<try pos:start="98:33" pos:end="102:33">try <block pos:start="98:37" pos:end="100:33">{<block_content pos:start="99:41" pos:end="99:84"> 
					<expr_stmt pos:start="99:41" pos:end="99:84"><expr pos:start="99:41" pos:end="99:83"><call pos:start="99:41" pos:end="99:66"><name pos:start="99:41" pos:end="99:64"><name pos:start="99:41" pos:end="99:45">drone</name><operator pos:start="99:46" pos:end="99:46">.</operator><name pos:start="99:47" pos:end="99:64">getFlightModeState</name></name><argument_list pos:start="99:65" pos:end="99:66">()</argument_list></call><operator pos:start="99:67" pos:end="99:67">.</operator><call pos:start="99:68" pos:end="99:83"><name pos:start="99:68" pos:end="99:81">setModeToInAir</name><argument_list pos:start="99:82" pos:end="99:83">()</argument_list></call></expr>;</expr_stmt> 
				</block_content>}</block> <catch pos:start="100:35" pos:end="102:33">catch <parameter_list pos:start="100:41" pos:end="100:63">(<parameter pos:start="100:42" pos:end="100:62"><decl pos:start="100:42" pos:end="100:62"><type pos:start="100:42" pos:end="100:62"><name pos:start="100:42" pos:end="100:60">FlightZoneException</name></type> <name pos:start="100:62" pos:end="100:62">e</name></decl></parameter>)</parameter_list> <block pos:start="100:65" pos:end="102:33">{<block_content pos:start="101:41" pos:end="101:56">
					<expr_stmt pos:start="101:41" pos:end="101:56"><expr pos:start="101:41" pos:end="101:55"><call pos:start="101:41" pos:end="101:55"><name pos:start="101:41" pos:end="101:52"><name pos:start="101:41" pos:end="101:46">LOGGER</name><operator pos:start="101:47" pos:end="101:47">.</operator><name pos:start="101:48" pos:end="101:52">error</name></name><argument_list pos:start="101:53" pos:end="101:55">(<argument pos:start="101:54" pos:end="101:54"><expr pos:start="101:54" pos:end="101:54"><name pos:start="101:54" pos:end="101:54">e</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				</block_content>}</block></catch></try>
			</block_content>}</block></if></if_stmt>
		</block_content>}</block></else></if_stmt>
	</block_content>}</block></function>

	<function pos:start="107:9" pos:end="110:9"><annotation pos:start="107:9" pos:end="107:17">@<name pos:start="107:10" pos:end="107:17">Override</name></annotation>
	<type pos:start="108:9" pos:end="108:19"><specifier pos:start="108:9" pos:end="108:14">public</specifier> <name pos:start="108:16" pos:end="108:19">void</name></type> <name pos:start="108:21" pos:end="108:31">addWayPoint</name><parameter_list pos:start="108:32" pos:end="108:50">(<parameter pos:start="108:33" pos:end="108:49"><decl pos:start="108:33" pos:end="108:49"><type pos:start="108:33" pos:end="108:40"><name pos:start="108:33" pos:end="108:40">Waypoint</name></type> <name pos:start="108:42" pos:end="108:49">wayPoint</name></decl></parameter>)</parameter_list> <block pos:start="108:52" pos:end="110:9">{<block_content pos:start="109:17" pos:end="109:40">
		<expr_stmt pos:start="109:17" pos:end="109:40"><expr pos:start="109:17" pos:end="109:39"><call pos:start="109:17" pos:end="109:39"><name pos:start="109:17" pos:end="109:29"><name pos:start="109:17" pos:end="109:25">wayPoints</name><operator pos:start="109:26" pos:end="109:26">.</operator><name pos:start="109:27" pos:end="109:29">add</name></name><argument_list pos:start="109:30" pos:end="109:39">(<argument pos:start="109:31" pos:end="109:38"><expr pos:start="109:31" pos:end="109:38"><name pos:start="109:31" pos:end="109:38">wayPoint</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	</block_content>}</block></function>

	<function pos:start="112:9" pos:end="116:9"><annotation pos:start="112:9" pos:end="112:17">@<name pos:start="112:10" pos:end="112:17">Override</name></annotation>
	<type pos:start="113:9" pos:end="113:19"><specifier pos:start="113:9" pos:end="113:14">public</specifier> <name pos:start="113:16" pos:end="113:19">void</name></type> <name pos:start="113:21" pos:end="113:27">flyHome</name><parameter_list pos:start="113:28" pos:end="113:29">()</parameter_list> <block pos:start="113:31" pos:end="116:9">{<block_content pos:start="114:17" pos:end="114:97">
		<expr_stmt pos:start="114:17" pos:end="114:97"><expr pos:start="114:17" pos:end="114:96"><call pos:start="114:17" pos:end="114:96"><name pos:start="114:17" pos:end="114:27"><name pos:start="114:17" pos:end="114:21">drone</name><operator pos:start="114:22" pos:end="114:22">.</operator><name pos:start="114:23" pos:end="114:27">flyTo</name></name><argument_list pos:start="114:28" pos:end="114:96">(<argument pos:start="114:29" pos:end="114:54"><expr pos:start="114:29" pos:end="114:54"><call pos:start="114:29" pos:end="114:54"><name pos:start="114:29" pos:end="114:52"><name pos:start="114:29" pos:end="114:33">drone</name><operator pos:start="114:34" pos:end="114:34">.</operator><name pos:start="114:35" pos:end="114:52">getBaseCoordinates</name></name><argument_list pos:start="114:53" pos:end="114:54">()</argument_list></call></expr></argument>, <argument pos:start="114:57" pos:end="114:95"><expr pos:start="114:57" pos:end="114:95"><name pos:start="114:57" pos:end="114:95"><name pos:start="114:57" pos:end="114:74">DronologyConstants</name><operator pos:start="114:75" pos:end="114:75">.</operator><name pos:start="114:76" pos:end="114:95">RETURN_TO_HOME_SPEED</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	</block_content>}</block></function>

	<function pos:start="118:9" pos:end="131:9"><annotation pos:start="118:9" pos:end="118:17">@<name pos:start="118:10" pos:end="118:17">Override</name></annotation>
	<type pos:start="119:9" pos:end="119:19"><specifier pos:start="119:9" pos:end="119:14">public</specifier> <name pos:start="119:16" pos:end="119:19">void</name></type> <name pos:start="119:21" pos:end="119:30">returnHome</name><parameter_list pos:start="119:31" pos:end="119:45">(<parameter pos:start="119:32" pos:end="119:44"><decl pos:start="119:32" pos:end="119:44"><type pos:start="119:32" pos:end="119:39"><name pos:start="119:32" pos:end="119:39">Waypoint</name></type> <name pos:start="119:41" pos:end="119:44">home</name></decl></parameter>)</parameter_list> <block pos:start="119:47" pos:end="131:9">{<block_content pos:start="120:17" pos:end="128:17">
		<expr_stmt pos:start="120:17" pos:end="120:41"><expr pos:start="120:17" pos:end="120:40"><call pos:start="120:17" pos:end="120:40"><name pos:start="120:17" pos:end="120:34"><name pos:start="120:17" pos:end="120:24">NullUtil</name><operator pos:start="120:25" pos:end="120:25">.</operator><name pos:start="120:26" pos:end="120:34">checkNull</name></name><argument_list pos:start="120:35" pos:end="120:40">(<argument pos:start="120:36" pos:end="120:39"><expr pos:start="120:36" pos:end="120:39"><name pos:start="120:36" pos:end="120:39">home</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt pos:start="121:17" pos:end="121:34"><expr pos:start="121:17" pos:end="121:33"><call pos:start="121:17" pos:end="121:33"><name pos:start="121:17" pos:end="121:27">addWayPoint</name><argument_list pos:start="121:28" pos:end="121:33">(<argument pos:start="121:29" pos:end="121:32"><expr pos:start="121:29" pos:end="121:32"><name pos:start="121:29" pos:end="121:32">home</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<decl_stmt pos:start="122:17" pos:end="122:79"><decl pos:start="122:17" pos:end="122:78"><type pos:start="122:17" pos:end="122:35"><name pos:start="122:17" pos:end="122:35"><name pos:start="122:17" pos:end="122:25">ArrayList</name><argument_list type="generic" pos:start="122:26" pos:end="122:35">&lt;<argument pos:start="122:27" pos:end="122:34"><name pos:start="122:27" pos:end="122:34">Waypoint</name></argument>&gt;</argument_list></name></type> <name pos:start="122:37" pos:end="122:49">tempWayPoints</name> <init pos:start="122:51" pos:end="122:78">= <expr pos:start="122:53" pos:end="122:78"><operator pos:start="122:53" pos:end="122:55">new</operator> <call pos:start="122:57" pos:end="122:78"><name pos:start="122:57" pos:end="122:67"><name pos:start="122:57" pos:end="122:65">ArrayList</name><argument_list type="generic" pos:start="122:66" pos:end="122:67">&lt;&gt;</argument_list></name><argument_list pos:start="122:68" pos:end="122:78">(<argument pos:start="122:69" pos:end="122:77"><expr pos:start="122:69" pos:end="122:77"><name pos:start="122:69" pos:end="122:77">wayPoints</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

		<for pos:start="124:17" pos:end="128:17">for <control pos:start="124:21" pos:end="124:55">(<init pos:start="124:22" pos:end="124:54"><decl pos:start="124:22" pos:end="124:54"><type pos:start="124:22" pos:end="124:29"><name pos:start="124:22" pos:end="124:29">Waypoint</name></type> <name pos:start="124:31" pos:end="124:38">wayPoint</name> <range pos:start="124:40" pos:end="124:54">: <expr pos:start="124:42" pos:end="124:54"><name pos:start="124:42" pos:end="124:54">tempWayPoints</name></expr></range></decl></init>)</control> <block pos:start="124:57" pos:end="128:17">{<block_content pos:start="125:25" pos:end="127:25">
			<if_stmt pos:start="125:25" pos:end="127:25"><if pos:start="125:25" pos:end="127:25">if <condition pos:start="125:28" pos:end="125:51">(<expr pos:start="125:29" pos:end="125:50"><operator pos:start="125:29" pos:end="125:29">!</operator><call pos:start="125:30" pos:end="125:50"><name pos:start="125:30" pos:end="125:44"><name pos:start="125:30" pos:end="125:37">wayPoint</name><operator pos:start="125:38" pos:end="125:38">.</operator><name pos:start="125:39" pos:end="125:44">equals</name></name><argument_list pos:start="125:45" pos:end="125:50">(<argument pos:start="125:46" pos:end="125:49"><expr pos:start="125:46" pos:end="125:49"><name pos:start="125:46" pos:end="125:49">home</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="125:53" pos:end="127:25">{<block_content pos:start="126:33" pos:end="126:59">
				<expr_stmt pos:start="126:33" pos:end="126:59"><expr pos:start="126:33" pos:end="126:58"><call pos:start="126:33" pos:end="126:58"><name pos:start="126:33" pos:end="126:48"><name pos:start="126:33" pos:end="126:41">wayPoints</name><operator pos:start="126:42" pos:end="126:42">.</operator><name pos:start="126:43" pos:end="126:48">remove</name></name><argument_list pos:start="126:49" pos:end="126:58">(<argument pos:start="126:50" pos:end="126:57"><expr pos:start="126:50" pos:end="126:57"><name pos:start="126:50" pos:end="126:57">wayPoint</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			</block_content>}</block></if></if_stmt>
		</block_content>}</block></for>

		<comment type="line" pos:start="130:17" pos:end="130:76">// Should only have one waypoint left and ready to go home!!</comment>
	</block_content>}</block></function>

	<function pos:start="133:9" pos:end="137:9"><annotation pos:start="133:9" pos:end="133:17">@<name pos:start="133:10" pos:end="133:17">Override</name></annotation>
	<type pos:start="134:9" pos:end="134:22"><specifier pos:start="134:9" pos:end="134:14">public</specifier> <name pos:start="134:16" pos:end="134:22">boolean</name></type> <name pos:start="134:24" pos:end="134:34">readyToLand</name><parameter_list pos:start="134:35" pos:end="134:36">()</parameter_list> <block pos:start="134:38" pos:end="137:9">{<block_content pos:start="135:17" pos:end="135:42">
		<return pos:start="135:17" pos:end="135:42">return <expr pos:start="135:24" pos:end="135:41"><call pos:start="135:24" pos:end="135:41"><name pos:start="135:24" pos:end="135:39">hasMoreWayPoints</name><argument_list pos:start="135:40" pos:end="135:41">()</argument_list></call></expr>;</return>

	</block_content>}</block></function>

	<function pos:start="139:9" pos:end="146:9"><annotation pos:start="139:9" pos:end="139:17">@<name pos:start="139:10" pos:end="139:17">Override</name></annotation>
	<type pos:start="140:9" pos:end="140:22"><specifier pos:start="140:9" pos:end="140:14">public</specifier> <name pos:start="140:16" pos:end="140:22">boolean</name></type> <name pos:start="140:24" pos:end="140:37">readyToTakeOff</name><parameter_list pos:start="140:38" pos:end="140:39">()</parameter_list> <block pos:start="140:41" pos:end="146:9">{<block_content pos:start="141:17" pos:end="145:17">
		<if_stmt pos:start="141:17" pos:end="145:17"><if pos:start="141:17" pos:end="143:17">if <condition pos:start="141:20" pos:end="141:40">(<expr pos:start="141:21" pos:end="141:39"><operator pos:start="141:21" pos:end="141:21">!</operator><call pos:start="141:22" pos:end="141:39"><name pos:start="141:22" pos:end="141:37">hasMoreWayPoints</name><argument_list pos:start="141:38" pos:end="141:39">()</argument_list></call></expr>)</condition> <block pos:start="141:42" pos:end="143:17">{<block_content pos:start="142:25" pos:end="142:37">
			<return pos:start="142:25" pos:end="142:37">return <expr pos:start="142:32" pos:end="142:36"><literal type="boolean" pos:start="142:32" pos:end="142:36">false</literal></expr>;</return>
		</block_content>}</block></if> <else pos:start="143:19" pos:end="145:17">else <block pos:start="143:24" pos:end="145:17">{<block_content pos:start="144:25" pos:end="144:36">
			<return pos:start="144:25" pos:end="144:36">return <expr pos:start="144:32" pos:end="144:35"><literal type="boolean" pos:start="144:32" pos:end="144:35">true</literal></expr>;</return>
		</block_content>}</block></else></if_stmt>
	</block_content>}</block></function>

}</block></class>
</unit>
