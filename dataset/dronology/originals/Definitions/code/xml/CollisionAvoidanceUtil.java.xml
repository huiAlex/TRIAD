<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="Java" filename="flatCode/CollisionAvoidanceUtil.java" pos:tabs="8"><package pos:start="1:1" pos:end="1:49">package <name pos:start="1:9" pos:end="1:48"><name pos:start="1:9" pos:end="1:11">edu</name><operator pos:start="1:12" pos:end="1:12">.</operator><name pos:start="1:13" pos:end="1:14">nd</name><operator pos:start="1:15" pos:end="1:15">.</operator><name pos:start="1:16" pos:end="1:24">dronology</name><operator pos:start="1:25" pos:end="1:25">.</operator><name pos:start="1:26" pos:end="1:29">core</name><operator pos:start="1:30" pos:end="1:30">.</operator><name pos:start="1:31" pos:end="1:48">collisionavoidance</name></name>;</package>

<import pos:start="3:1" pos:end="3:29">import <name pos:start="3:8" pos:end="3:28"><name pos:start="3:8" pos:end="3:11">java</name><operator pos:start="3:12" pos:end="3:12">.</operator><name pos:start="3:13" pos:end="3:16">util</name><operator pos:start="3:17" pos:end="3:17">.</operator><name pos:start="3:18" pos:end="3:28">Collections</name></name>;</import>
<import pos:start="4:1" pos:end="4:26">import <name pos:start="4:8" pos:end="4:25"><name pos:start="4:8" pos:end="4:11">java</name><operator pos:start="4:12" pos:end="4:12">.</operator><name pos:start="4:13" pos:end="4:16">util</name><operator pos:start="4:17" pos:end="4:17">.</operator><name pos:start="4:18" pos:end="4:25">Iterator</name></name>;</import>
<import pos:start="5:1" pos:end="5:22">import <name pos:start="5:8" pos:end="5:21"><name pos:start="5:8" pos:end="5:11">java</name><operator pos:start="5:12" pos:end="5:12">.</operator><name pos:start="5:13" pos:end="5:16">util</name><operator pos:start="5:17" pos:end="5:17">.</operator><name pos:start="5:18" pos:end="5:21">List</name></name>;</import>

<import pos:start="7:1" pos:end="7:56">import <name pos:start="7:8" pos:end="7:55"><name pos:start="7:8" pos:end="7:10">org</name><operator pos:start="7:11" pos:end="7:11">.</operator><name pos:start="7:12" pos:end="7:17">apache</name><operator pos:start="7:18" pos:end="7:18">.</operator><name pos:start="7:19" pos:end="7:25">commons</name><operator pos:start="7:26" pos:end="7:26">.</operator><name pos:start="7:27" pos:end="7:31">math3</name><operator pos:start="7:32" pos:end="7:32">.</operator><name pos:start="7:33" pos:end="7:36">util</name><operator pos:start="7:37" pos:end="7:37">.</operator><name pos:start="7:38" pos:end="7:55">CombinatoricsUtils</name></name>;</import>

<class pos:start="9:1" pos:end="56:1"><specifier pos:start="9:1" pos:end="9:6">public</specifier> class <name pos:start="9:14" pos:end="9:35">CollisionAvoidanceUtil</name> <block pos:start="9:37" pos:end="56:1">{

    <class pos:start="11:5" pos:end="34:5"><specifier pos:start="11:5" pos:end="11:11">private</specifier> <specifier pos:start="11:13" pos:end="11:18">static</specifier> class <name pos:start="11:26" pos:end="11:42">DronePairIterator</name> <super_list pos:start="11:44" pos:end="11:73"><implements pos:start="11:44" pos:end="11:73">implements <super pos:start="11:55" pos:end="11:73"><name pos:start="11:55" pos:end="11:73"><name pos:start="11:55" pos:end="11:62">Iterator</name><argument_list type="generic" pos:start="11:63" pos:end="11:73">&lt;<argument pos:start="11:64" pos:end="11:72"><name pos:start="11:64" pos:end="11:72">DronePair</name></argument>&gt;</argument_list></name></super></implements></super_list> <block pos:start="11:75" pos:end="34:5">{

        <decl_stmt pos:start="13:9" pos:end="13:32"><decl pos:start="13:9" pos:end="13:31"><type pos:start="13:9" pos:end="13:23"><name pos:start="13:9" pos:end="13:23"><name pos:start="13:9" pos:end="13:16">Iterator</name><argument_list type="generic" pos:start="13:17" pos:end="13:23">&lt;<argument pos:start="13:18" pos:end="13:22"><name pos:start="13:18" pos:end="13:22"><name pos:start="13:18" pos:end="13:20">int</name><index pos:start="13:21" pos:end="13:22">[]</index></name></argument>&gt;</argument_list></name></type> <name pos:start="13:25" pos:end="13:31">indices</name></decl>;</decl_stmt>
        <decl_stmt pos:start="14:9" pos:end="14:38"><decl pos:start="14:9" pos:end="14:37"><type pos:start="14:9" pos:end="14:27"><name pos:start="14:9" pos:end="14:27"><name pos:start="14:9" pos:end="14:12">List</name><argument_list type="generic" pos:start="14:13" pos:end="14:27">&lt;<argument pos:start="14:14" pos:end="14:26"><name pos:start="14:14" pos:end="14:26">DroneSnapshot</name></argument>&gt;</argument_list></name></type> <name pos:start="14:29" pos:end="14:37">snapshots</name></decl>;</decl_stmt>

        <constructor pos:start="16:9" pos:end="19:9"><name pos:start="16:9" pos:end="16:25">DronePairIterator</name><parameter_list pos:start="16:26" pos:end="16:81">(<parameter pos:start="16:27" pos:end="16:55"><decl pos:start="16:27" pos:end="16:55"><type pos:start="16:27" pos:end="16:55"><name pos:start="16:27" pos:end="16:45"><name pos:start="16:27" pos:end="16:30">List</name><argument_list type="generic" pos:start="16:31" pos:end="16:45">&lt;<argument pos:start="16:32" pos:end="16:44"><name pos:start="16:32" pos:end="16:44">DroneSnapshot</name></argument>&gt;</argument_list></name></type> <name pos:start="16:47" pos:end="16:55">snapshots</name></decl></parameter>, <parameter pos:start="16:58" pos:end="16:80"><decl pos:start="16:58" pos:end="16:80"><type pos:start="16:58" pos:end="16:80"><name pos:start="16:58" pos:end="16:72"><name pos:start="16:58" pos:end="16:65">Iterator</name><argument_list type="generic" pos:start="16:66" pos:end="16:72">&lt;<argument pos:start="16:67" pos:end="16:71"><name pos:start="16:67" pos:end="16:71"><name pos:start="16:67" pos:end="16:69">int</name><index pos:start="16:70" pos:end="16:71">[]</index></name></argument>&gt;</argument_list></name></type> <name pos:start="16:74" pos:end="16:80">indices</name></decl></parameter>)</parameter_list> <block pos:start="16:83" pos:end="19:9">{<block_content pos:start="17:13" pos:end="18:35">
            <expr_stmt pos:start="17:13" pos:end="17:39"><expr pos:start="17:13" pos:end="17:38"><name pos:start="17:13" pos:end="17:26"><name pos:start="17:13" pos:end="17:16">this</name><operator pos:start="17:17" pos:end="17:17">.</operator><name pos:start="17:18" pos:end="17:26">snapshots</name></name> <operator pos:start="17:28" pos:end="17:28">=</operator> <name pos:start="17:30" pos:end="17:38">snapshots</name></expr>;</expr_stmt>
            <expr_stmt pos:start="18:13" pos:end="18:35"><expr pos:start="18:13" pos:end="18:34"><name pos:start="18:13" pos:end="18:24"><name pos:start="18:13" pos:end="18:16">this</name><operator pos:start="18:17" pos:end="18:17">.</operator><name pos:start="18:18" pos:end="18:24">indices</name></name> <operator pos:start="18:26" pos:end="18:26">=</operator> <name pos:start="18:28" pos:end="18:34">indices</name></expr>;</expr_stmt>
        </block_content>}</block></constructor>

		<function pos:start="21:17" pos:end="24:17"><annotation pos:start="21:17" pos:end="21:25">@<name pos:start="21:18" pos:end="21:25">Override</name></annotation>
		<type pos:start="22:17" pos:end="22:30"><specifier pos:start="22:17" pos:end="22:22">public</specifier> <name pos:start="22:24" pos:end="22:30">boolean</name></type> <name pos:start="22:32" pos:end="22:38">hasNext</name><parameter_list pos:start="22:39" pos:end="22:40">()</parameter_list> <block pos:start="22:42" pos:end="24:17">{<block_content pos:start="23:25" pos:end="23:49">
			<return pos:start="23:25" pos:end="23:49">return <expr pos:start="23:32" pos:end="23:48"><call pos:start="23:32" pos:end="23:48"><name pos:start="23:32" pos:end="23:46"><name pos:start="23:32" pos:end="23:38">indices</name><operator pos:start="23:39" pos:end="23:39">.</operator><name pos:start="23:40" pos:end="23:46">hasNext</name></name><argument_list pos:start="23:47" pos:end="23:48">()</argument_list></call></expr>;</return>
		</block_content>}</block></function>

		<function pos:start="26:17" pos:end="32:17"><annotation pos:start="26:17" pos:end="26:25">@<name pos:start="26:18" pos:end="26:25">Override</name></annotation>
		<type pos:start="27:17" pos:end="27:32"><specifier pos:start="27:17" pos:end="27:22">public</specifier> <name pos:start="27:24" pos:end="27:32">DronePair</name></type> <name pos:start="27:34" pos:end="27:37">next</name><parameter_list pos:start="27:38" pos:end="27:39">()</parameter_list> <block pos:start="27:41" pos:end="32:17">{<block_content pos:start="28:13" pos:end="31:79">
            <decl_stmt pos:start="28:13" pos:end="28:47"><decl pos:start="28:13" pos:end="28:46"><type pos:start="28:13" pos:end="28:17"><name pos:start="28:13" pos:end="28:17"><name pos:start="28:13" pos:end="28:15">int</name><index pos:start="28:16" pos:end="28:17">[]</index></name></type> <name pos:start="28:19" pos:end="28:29">nextIndices</name> <init pos:start="28:31" pos:end="28:46">= <expr pos:start="28:33" pos:end="28:46"><call pos:start="28:33" pos:end="28:46"><name pos:start="28:33" pos:end="28:44"><name pos:start="28:33" pos:end="28:39">indices</name><operator pos:start="28:40" pos:end="28:40">.</operator><name pos:start="28:41" pos:end="28:44">next</name></name><argument_list pos:start="28:45" pos:end="28:46">()</argument_list></call></expr></init></decl>;</decl_stmt>
            <decl_stmt pos:start="29:13" pos:end="29:40"><decl pos:start="29:13" pos:end="29:39"><type pos:start="29:13" pos:end="29:15"><name pos:start="29:13" pos:end="29:15">int</name></type> <name pos:start="29:17" pos:end="29:22">indexA</name> <init pos:start="29:24" pos:end="29:39">= <expr pos:start="29:26" pos:end="29:39"><name pos:start="29:26" pos:end="29:39"><name pos:start="29:26" pos:end="29:36">nextIndices</name><index pos:start="29:37" pos:end="29:39">[<expr pos:start="29:38" pos:end="29:38"><literal type="number" pos:start="29:38" pos:end="29:38">0</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>
            <decl_stmt pos:start="30:13" pos:end="30:40"><decl pos:start="30:13" pos:end="30:39"><type pos:start="30:13" pos:end="30:15"><name pos:start="30:13" pos:end="30:15">int</name></type> <name pos:start="30:17" pos:end="30:22">indexB</name> <init pos:start="30:24" pos:end="30:39">= <expr pos:start="30:26" pos:end="30:39"><name pos:start="30:26" pos:end="30:39"><name pos:start="30:26" pos:end="30:36">nextIndices</name><index pos:start="30:37" pos:end="30:39">[<expr pos:start="30:38" pos:end="30:38"><literal type="number" pos:start="30:38" pos:end="30:38">1</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>
            <return pos:start="31:13" pos:end="31:79">return <expr pos:start="31:20" pos:end="31:78"><operator pos:start="31:20" pos:end="31:22">new</operator> <call pos:start="31:24" pos:end="31:78"><name pos:start="31:24" pos:end="31:32">DronePair</name><argument_list pos:start="31:33" pos:end="31:78">(<argument pos:start="31:34" pos:end="31:54"><expr pos:start="31:34" pos:end="31:54"><call pos:start="31:34" pos:end="31:54"><name pos:start="31:34" pos:end="31:46"><name pos:start="31:34" pos:end="31:42">snapshots</name><operator pos:start="31:43" pos:end="31:43">.</operator><name pos:start="31:44" pos:end="31:46">get</name></name><argument_list pos:start="31:47" pos:end="31:54">(<argument pos:start="31:48" pos:end="31:53"><expr pos:start="31:48" pos:end="31:53"><name pos:start="31:48" pos:end="31:53">indexA</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="31:57" pos:end="31:77"><expr pos:start="31:57" pos:end="31:77"><call pos:start="31:57" pos:end="31:77"><name pos:start="31:57" pos:end="31:69"><name pos:start="31:57" pos:end="31:65">snapshots</name><operator pos:start="31:66" pos:end="31:66">.</operator><name pos:start="31:67" pos:end="31:69">get</name></name><argument_list pos:start="31:70" pos:end="31:77">(<argument pos:start="31:71" pos:end="31:76"><expr pos:start="31:71" pos:end="31:76"><name pos:start="31:71" pos:end="31:76">indexB</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
		</block_content>}</block></function>

    }</block></class>

    <function pos:start="36:5" pos:end="43:5"><type pos:start="36:5" pos:end="36:38"><specifier pos:start="36:5" pos:end="36:11">private</specifier> <specifier pos:start="36:13" pos:end="36:18">static</specifier> <name pos:start="36:20" pos:end="36:38"><name pos:start="36:20" pos:end="36:27">Iterator</name><argument_list type="generic" pos:start="36:28" pos:end="36:38">&lt;<argument pos:start="36:29" pos:end="36:37"><name pos:start="36:29" pos:end="36:37">DronePair</name></argument>&gt;</argument_list></name></type> <name pos:start="36:40" pos:end="36:44">pairs</name><parameter_list pos:start="36:45" pos:end="36:75">(<parameter pos:start="36:46" pos:end="36:74"><decl pos:start="36:46" pos:end="36:74"><type pos:start="36:46" pos:end="36:64"><name pos:start="36:46" pos:end="36:64"><name pos:start="36:46" pos:end="36:49">List</name><argument_list type="generic" pos:start="36:50" pos:end="36:64">&lt;<argument pos:start="36:51" pos:end="36:63"><name pos:start="36:51" pos:end="36:63">DroneSnapshot</name></argument>&gt;</argument_list></name></type> <name pos:start="36:66" pos:end="36:74">snapshots</name></decl></parameter>)</parameter_list> <block pos:start="36:77" pos:end="43:5">{<block_content pos:start="37:9" pos:end="42:9">
        <if_stmt pos:start="37:9" pos:end="42:9"><if pos:start="37:9" pos:end="40:9">if <condition pos:start="37:12" pos:end="37:34">(<expr pos:start="37:13" pos:end="37:33"><call pos:start="37:13" pos:end="37:28"><name pos:start="37:13" pos:end="37:26"><name pos:start="37:13" pos:end="37:21">snapshots</name><operator pos:start="37:22" pos:end="37:22">.</operator><name pos:start="37:23" pos:end="37:26">size</name></name><argument_list pos:start="37:27" pos:end="37:28">()</argument_list></call> <operator pos:start="37:30" pos:end="37:31">&gt;=</operator> <literal type="number" pos:start="37:33" pos:end="37:33">2</literal></expr>)</condition> <block pos:start="37:36" pos:end="40:9">{<block_content pos:start="38:13" pos:end="39:61">
            <decl_stmt pos:start="38:13" pos:end="38:99"><decl pos:start="38:13" pos:end="38:98"><type pos:start="38:13" pos:end="38:27"><name pos:start="38:13" pos:end="38:27"><name pos:start="38:13" pos:end="38:20">Iterator</name><argument_list type="generic" pos:start="38:21" pos:end="38:27">&lt;<argument pos:start="38:22" pos:end="38:26"><name pos:start="38:22" pos:end="38:26"><name pos:start="38:22" pos:end="38:24">int</name><index pos:start="38:25" pos:end="38:26">[]</index></name></argument>&gt;</argument_list></name></type> <name pos:start="38:29" pos:end="38:35">indices</name> <init pos:start="38:37" pos:end="38:98">= <expr pos:start="38:39" pos:end="38:98"><call pos:start="38:39" pos:end="38:98"><name pos:start="38:39" pos:end="38:77"><name pos:start="38:39" pos:end="38:56">CombinatoricsUtils</name><operator pos:start="38:57" pos:end="38:57">.</operator><name pos:start="38:58" pos:end="38:77">combinationsIterator</name></name><argument_list pos:start="38:78" pos:end="38:98">(<argument pos:start="38:79" pos:end="38:94"><expr pos:start="38:79" pos:end="38:94"><call pos:start="38:79" pos:end="38:94"><name pos:start="38:79" pos:end="38:92"><name pos:start="38:79" pos:end="38:87">snapshots</name><operator pos:start="38:88" pos:end="38:88">.</operator><name pos:start="38:89" pos:end="38:92">size</name></name><argument_list pos:start="38:93" pos:end="38:94">()</argument_list></call></expr></argument>, <argument pos:start="38:97" pos:end="38:97"><expr pos:start="38:97" pos:end="38:97"><literal type="number" pos:start="38:97" pos:end="38:97">2</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
            <return pos:start="39:13" pos:end="39:61">return <expr pos:start="39:20" pos:end="39:60"><operator pos:start="39:20" pos:end="39:22">new</operator> <call pos:start="39:24" pos:end="39:60"><name pos:start="39:24" pos:end="39:40">DronePairIterator</name><argument_list pos:start="39:41" pos:end="39:60">(<argument pos:start="39:42" pos:end="39:50"><expr pos:start="39:42" pos:end="39:50"><name pos:start="39:42" pos:end="39:50">snapshots</name></expr></argument>, <argument pos:start="39:53" pos:end="39:59"><expr pos:start="39:53" pos:end="39:59"><name pos:start="39:53" pos:end="39:59">indices</name></expr></argument>)</argument_list></call></expr>;</return>
        </block_content>}</block></if> <else pos:start="40:11" pos:end="42:9">else <block pos:start="40:16" pos:end="42:9">{<block_content pos:start="41:13" pos:end="41:47">
            <return pos:start="41:13" pos:end="41:47">return <expr pos:start="41:20" pos:end="41:46"><call pos:start="41:20" pos:end="41:46"><name pos:start="41:20" pos:end="41:44"><name pos:start="41:20" pos:end="41:30">Collections</name><operator pos:start="41:31" pos:end="41:31">.</operator><name pos:start="41:32" pos:end="41:44">emptyIterator</name></name><argument_list pos:start="41:45" pos:end="41:46">()</argument_list></call></expr>;</return>
        </block_content>}</block></else></if_stmt>
    </block_content>}</block></function>

    <function pos:start="45:5" pos:end="54:5"><type pos:start="45:5" pos:end="45:37"><specifier pos:start="45:5" pos:end="45:10">public</specifier> <specifier pos:start="45:12" pos:end="45:17">static</specifier> <name pos:start="45:19" pos:end="45:37"><name pos:start="45:19" pos:end="45:26">Iterable</name><argument_list type="generic" pos:start="45:27" pos:end="45:37">&lt;<argument pos:start="45:28" pos:end="45:36"><name pos:start="45:28" pos:end="45:36">DronePair</name></argument>&gt;</argument_list></name></type> <name pos:start="45:39" pos:end="45:47">findPairs</name><parameter_list pos:start="45:48" pos:end="45:84">(<parameter pos:start="45:49" pos:end="45:83"><decl pos:start="45:49" pos:end="45:83"><type pos:start="45:49" pos:end="45:73"><specifier pos:start="45:49" pos:end="45:53">final</specifier> <name pos:start="45:55" pos:end="45:73"><name pos:start="45:55" pos:end="45:58">List</name><argument_list type="generic" pos:start="45:59" pos:end="45:73">&lt;<argument pos:start="45:60" pos:end="45:72"><name pos:start="45:60" pos:end="45:72">DroneSnapshot</name></argument>&gt;</argument_list></name></type> <name pos:start="45:75" pos:end="45:83">snapshots</name></decl></parameter>)</parameter_list> <block pos:start="45:86" pos:end="54:5">{<block_content pos:start="46:9" pos:end="53:10">
        <return pos:start="46:9" pos:end="53:10">return <expr pos:start="46:16" pos:end="53:9"><operator pos:start="46:16" pos:end="46:18">new</operator> <class pos:start="46:20" pos:end="53:9"><super pos:start="46:20" pos:end="46:38"><name pos:start="46:20" pos:end="46:38"><name pos:start="46:20" pos:end="46:27">Iterable</name><argument_list type="generic" pos:start="46:28" pos:end="46:38">&lt;<argument pos:start="46:29" pos:end="46:37"><name pos:start="46:29" pos:end="46:37">DronePair</name></argument>&gt;</argument_list></name></super><argument_list pos:start="46:39" pos:end="46:40">()</argument_list><block pos:start="46:41" pos:end="53:9">{
        
            <function pos:start="48:13" pos:end="51:13"><annotation pos:start="48:13" pos:end="48:21">@<name pos:start="48:14" pos:end="48:21">Override</name></annotation>
            <type pos:start="49:13" pos:end="49:38"><specifier pos:start="49:13" pos:end="49:18">public</specifier> <name pos:start="49:20" pos:end="49:38"><name pos:start="49:20" pos:end="49:27">Iterator</name><argument_list type="generic" pos:start="49:28" pos:end="49:38">&lt;<argument pos:start="49:29" pos:end="49:37"><name pos:start="49:29" pos:end="49:37">DronePair</name></argument>&gt;</argument_list></name></type> <name pos:start="49:40" pos:end="49:47">iterator</name><parameter_list pos:start="49:48" pos:end="49:49">()</parameter_list> <block pos:start="49:51" pos:end="51:13">{<block_content pos:start="50:17" pos:end="50:40">
                <return pos:start="50:17" pos:end="50:40">return <expr pos:start="50:24" pos:end="50:39"><call pos:start="50:24" pos:end="50:39"><name pos:start="50:24" pos:end="50:28">pairs</name><argument_list pos:start="50:29" pos:end="50:39">(<argument pos:start="50:30" pos:end="50:38"><expr pos:start="50:30" pos:end="50:38"><name pos:start="50:30" pos:end="50:38">snapshots</name></expr></argument>)</argument_list></call></expr>;</return>
            </block_content>}</block></function>
            
        }</block></class></expr>;</return>
    </block_content>}</block></function>

}</block></class></unit>
