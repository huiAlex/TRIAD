<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="Java" filename="flatCode/CollisionAvoidanceMessenger.java" pos:tabs="8"><package pos:start="1:1" pos:end="1:49">package <name pos:start="1:9" pos:end="1:48"><name pos:start="1:9" pos:end="1:11">edu</name><operator pos:start="1:12" pos:end="1:12">.</operator><name pos:start="1:13" pos:end="1:14">nd</name><operator pos:start="1:15" pos:end="1:15">.</operator><name pos:start="1:16" pos:end="1:24">dronology</name><operator pos:start="1:25" pos:end="1:25">.</operator><name pos:start="1:26" pos:end="1:29">core</name><operator pos:start="1:30" pos:end="1:30">.</operator><name pos:start="1:31" pos:end="1:48">collisionavoidance</name></name>;</package>

<import pos:start="3:1" pos:end="3:65">import <name pos:start="3:8" pos:end="3:64"><name pos:start="3:8" pos:end="3:10">edu</name><operator pos:start="3:11" pos:end="3:11">.</operator><name pos:start="3:12" pos:end="3:13">nd</name><operator pos:start="3:14" pos:end="3:14">.</operator><name pos:start="3:15" pos:end="3:23">dronology</name><operator pos:start="3:24" pos:end="3:24">.</operator><name pos:start="3:25" pos:end="3:28">core</name><operator pos:start="3:29" pos:end="3:29">.</operator><name pos:start="3:30" pos:end="3:47">collisionavoidance</name><operator pos:start="3:48" pos:end="3:48">.</operator><name pos:start="3:49" pos:end="3:62">backendmessage</name><operator pos:start="3:63" pos:end="3:63">.</operator><name pos:start="3:64" pos:end="3:64">*</name></name>;</import>
<import pos:start="4:1" pos:end="4:73">import <name pos:start="4:8" pos:end="4:72"><name pos:start="4:8" pos:end="4:10">edu</name><operator pos:start="4:11" pos:end="4:11">.</operator><name pos:start="4:12" pos:end="4:13">nd</name><operator pos:start="4:14" pos:end="4:14">.</operator><name pos:start="4:15" pos:end="4:23">dronology</name><operator pos:start="4:24" pos:end="4:24">.</operator><name pos:start="4:25" pos:end="4:28">core</name><operator pos:start="4:29" pos:end="4:29">.</operator><name pos:start="4:30" pos:end="4:47">collisionavoidance</name><operator pos:start="4:48" pos:end="4:48">.</operator><name pos:start="4:49" pos:end="4:64">guidancecommands</name><operator pos:start="4:65" pos:end="4:65">.</operator><name pos:start="4:66" pos:end="4:72">Command</name></name>;</import>
<import pos:start="5:1" pos:end="5:48">import <name pos:start="5:8" pos:end="5:47"><name pos:start="5:8" pos:end="5:10">edu</name><operator pos:start="5:11" pos:end="5:11">.</operator><name pos:start="5:12" pos:end="5:13">nd</name><operator pos:start="5:14" pos:end="5:14">.</operator><name pos:start="5:15" pos:end="5:23">dronology</name><operator pos:start="5:24" pos:end="5:24">.</operator><name pos:start="5:25" pos:end="5:28">core</name><operator pos:start="5:29" pos:end="5:29">.</operator><name pos:start="5:30" pos:end="5:33">goal</name><operator pos:start="5:34" pos:end="5:34">.</operator><name pos:start="5:35" pos:end="5:47">IGoalSnapshot</name></name>;</import>
<import pos:start="6:1" pos:end="6:50">import <name pos:start="6:8" pos:end="6:49"><name pos:start="6:8" pos:end="6:10">edu</name><operator pos:start="6:11" pos:end="6:11">.</operator><name pos:start="6:12" pos:end="6:13">nd</name><operator pos:start="6:14" pos:end="6:14">.</operator><name pos:start="6:15" pos:end="6:23">dronology</name><operator pos:start="6:24" pos:end="6:24">.</operator><name pos:start="6:25" pos:end="6:28">core</name><operator pos:start="6:29" pos:end="6:29">.</operator><name pos:start="6:30" pos:end="6:36">vehicle</name><operator pos:start="6:37" pos:end="6:37">.</operator><name pos:start="6:38" pos:end="6:49">ManagedDrone</name></name>;</import>
<import pos:start="7:1" pos:end="7:30">import <name pos:start="7:8" pos:end="7:29"><name pos:start="7:8" pos:end="7:10">net</name><operator pos:start="7:11" pos:end="7:11">.</operator><name pos:start="7:12" pos:end="7:13">mv</name><operator pos:start="7:14" pos:end="7:14">.</operator><name pos:start="7:15" pos:end="7:21">logging</name><operator pos:start="7:22" pos:end="7:22">.</operator><name pos:start="7:23" pos:end="7:29">ILogger</name></name>;</import>
<import pos:start="8:1" pos:end="8:37">import <name pos:start="8:8" pos:end="8:36"><name pos:start="8:8" pos:end="8:10">net</name><operator pos:start="8:11" pos:end="8:11">.</operator><name pos:start="8:12" pos:end="8:13">mv</name><operator pos:start="8:14" pos:end="8:14">.</operator><name pos:start="8:15" pos:end="8:21">logging</name><operator pos:start="8:22" pos:end="8:22">.</operator><name pos:start="8:23" pos:end="8:36">LoggerProvider</name></name>;</import>

<import pos:start="10:1" pos:end="10:22">import <name pos:start="10:8" pos:end="10:21"><name pos:start="10:8" pos:end="10:11">java</name><operator pos:start="10:12" pos:end="10:12">.</operator><name pos:start="10:13" pos:end="10:16">util</name><operator pos:start="10:17" pos:end="10:17">.</operator><name pos:start="10:18" pos:end="10:21">List</name></name>;</import>
<import pos:start="11:1" pos:end="11:21">import <name pos:start="11:8" pos:end="11:20"><name pos:start="11:8" pos:end="11:11">java</name><operator pos:start="11:12" pos:end="11:12">.</operator><name pos:start="11:13" pos:end="11:16">util</name><operator pos:start="11:17" pos:end="11:17">.</operator><name pos:start="11:18" pos:end="11:20">Set</name></name>;</import>
<import pos:start="12:1" pos:end="12:47">import <name pos:start="12:8" pos:end="12:46"><name pos:start="12:8" pos:end="12:11">java</name><operator pos:start="12:12" pos:end="12:12">.</operator><name pos:start="12:13" pos:end="12:16">util</name><operator pos:start="12:17" pos:end="12:17">.</operator><name pos:start="12:18" pos:end="12:27">concurrent</name><operator pos:start="12:28" pos:end="12:28">.</operator><name pos:start="12:29" pos:end="12:46">ArrayBlockingQueue</name></name>;</import>

<comment type="block" format="javadoc" pos:start="14:1" pos:end="17:3">/**
 * The CollisionAvoidanceMessenger class facilitates sending messages to instances of CollisionAvoidanceBackend. Use
 * instances of this class when you need to send a message to CollisionAvoidanceBackend.
 */</comment>
<class pos:start="18:1" pos:end="85:2"><specifier pos:start="18:1" pos:end="18:6">public</specifier> class <name pos:start="18:14" pos:end="18:40">CollisionAvoidanceMessenger</name> <block pos:start="18:42" pos:end="85:2">{
    <decl_stmt pos:start="19:5" pos:end="19:102"><decl pos:start="19:5" pos:end="19:101"><type pos:start="19:5" pos:end="19:32"><specifier pos:start="19:5" pos:end="19:11">private</specifier> <specifier pos:start="19:13" pos:end="19:18">static</specifier> <specifier pos:start="19:20" pos:end="19:24">final</specifier> <name pos:start="19:26" pos:end="19:32">ILogger</name></type> <name pos:start="19:34" pos:end="19:39">LOGGER</name> <init pos:start="19:41" pos:end="19:101">= <expr pos:start="19:43" pos:end="19:101"><call pos:start="19:43" pos:end="19:101"><name pos:start="19:43" pos:end="19:66"><name pos:start="19:43" pos:end="19:56">LoggerProvider</name><operator pos:start="19:57" pos:end="19:57">.</operator><name pos:start="19:58" pos:end="19:66">getLogger</name></name><argument_list pos:start="19:67" pos:end="19:101">(<argument pos:start="19:68" pos:end="19:100"><expr pos:start="19:68" pos:end="19:100"><name pos:start="19:68" pos:end="19:100"><name pos:start="19:68" pos:end="19:94">CollisionAvoidanceMessenger</name><operator pos:start="19:95" pos:end="19:95">.</operator><name pos:start="19:96" pos:end="19:100">class</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="20:5" pos:end="20:62"><decl pos:start="20:5" pos:end="20:61"><type pos:start="20:5" pos:end="20:53"><specifier pos:start="20:5" pos:end="20:11">private</specifier> <specifier pos:start="20:13" pos:end="20:17">final</specifier> <name pos:start="20:19" pos:end="20:53"><name pos:start="20:19" pos:end="20:36">ArrayBlockingQueue</name><argument_list type="generic" pos:start="20:37" pos:end="20:53">&lt;<argument pos:start="20:38" pos:end="20:52"><name pos:start="20:38" pos:end="20:52">AbstractMessage</name></argument>&gt;</argument_list></name></type> <name pos:start="20:55" pos:end="20:61">mailbox</name></decl>;</decl_stmt>

    <comment type="line" pos:start="22:5" pos:end="22:106">// This constructor intentionally has no access modifier. Instances of this class should be created by</comment>
    <comment type="line" pos:start="23:5" pos:end="23:33">// CollisionAvoidanceBackend.</comment>
    <constructor pos:start="24:5" pos:end="26:5"><name pos:start="24:5" pos:end="24:31">CollisionAvoidanceMessenger</name><parameter_list pos:start="24:32" pos:end="24:76">(<parameter pos:start="24:33" pos:end="24:75"><decl pos:start="24:33" pos:end="24:75"><type pos:start="24:33" pos:end="24:67"><name pos:start="24:33" pos:end="24:67"><name pos:start="24:33" pos:end="24:50">ArrayBlockingQueue</name><argument_list type="generic" pos:start="24:51" pos:end="24:67">&lt;<argument pos:start="24:52" pos:end="24:66"><name pos:start="24:52" pos:end="24:66">AbstractMessage</name></argument>&gt;</argument_list></name></type> <name pos:start="24:69" pos:end="24:75">mailbox</name></decl></parameter>)</parameter_list> <block pos:start="24:78" pos:end="26:5">{<block_content pos:start="25:9" pos:end="25:31">
        <expr_stmt pos:start="25:9" pos:end="25:31"><expr pos:start="25:9" pos:end="25:30"><name pos:start="25:9" pos:end="25:20"><name pos:start="25:9" pos:end="25:12">this</name><operator pos:start="25:13" pos:end="25:13">.</operator><name pos:start="25:14" pos:end="25:20">mailbox</name></name> <operator pos:start="25:22" pos:end="25:22">=</operator> <name pos:start="25:24" pos:end="25:30">mailbox</name></expr>;</expr_stmt>
    </block_content>}</block></constructor>

    <function pos:start="28:5" pos:end="32:5"><type pos:start="28:5" pos:end="28:16"><specifier pos:start="28:5" pos:end="28:11">private</specifier> <name pos:start="28:13" pos:end="28:16">void</name></type> <name pos:start="28:18" pos:end="28:29">offerMessage</name><parameter_list pos:start="28:30" pos:end="28:50">(<parameter pos:start="28:31" pos:end="28:49"><decl pos:start="28:31" pos:end="28:49"><type pos:start="28:31" pos:end="28:45"><name pos:start="28:31" pos:end="28:45">AbstractMessage</name></type> <name pos:start="28:47" pos:end="28:49">msg</name></decl></parameter>)</parameter_list> <block pos:start="28:52" pos:end="32:5">{<block_content pos:start="29:9" pos:end="31:9">
        <if_stmt pos:start="29:9" pos:end="31:9"><if pos:start="29:9" pos:end="31:9">if<condition pos:start="29:11" pos:end="29:31">(<expr pos:start="29:12" pos:end="29:30"><operator pos:start="29:12" pos:end="29:12">!</operator><call pos:start="29:13" pos:end="29:30"><name pos:start="29:13" pos:end="29:25"><name pos:start="29:13" pos:end="29:19">mailbox</name><operator pos:start="29:20" pos:end="29:20">.</operator><name pos:start="29:21" pos:end="29:25">offer</name></name><argument_list pos:start="29:26" pos:end="29:30">(<argument pos:start="29:27" pos:end="29:29"><expr pos:start="29:27" pos:end="29:29"><name pos:start="29:27" pos:end="29:29">msg</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="29:33" pos:end="31:9">{<block_content pos:start="30:13" pos:end="30:67">
            <expr_stmt pos:start="30:13" pos:end="30:67"><expr pos:start="30:13" pos:end="30:66"><call pos:start="30:13" pos:end="30:66"><name pos:start="30:13" pos:end="30:23"><name pos:start="30:13" pos:end="30:18">LOGGER</name><operator pos:start="30:19" pos:end="30:19">.</operator><name pos:start="30:20" pos:end="30:23">warn</name></name><argument_list pos:start="30:24" pos:end="30:66">(<argument pos:start="30:25" pos:end="30:65"><expr pos:start="30:25" pos:end="30:65"><literal type="string" pos:start="30:25" pos:end="30:59">"Could not add message to mailbox "</literal> <operator pos:start="30:61" pos:end="30:61">+</operator> <name pos:start="30:63" pos:end="30:65">msg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></if></if_stmt>
    </block_content>}</block></function>

    <comment type="block" format="javadoc" pos:start="34:5" pos:end="37:7">/**
     * Send a message to the CollisionAvoidanceBackend telling it to run CollisionAvoider.avoid() and disperse guidance
     * to the managed drones.
     */</comment>
    <comment type="line" pos:start="38:5" pos:end="38:29">//TODO rename this method</comment>
    <function pos:start="39:5" pos:end="41:5"><type pos:start="39:5" pos:end="39:15"><specifier pos:start="39:5" pos:end="39:10">public</specifier> <name pos:start="39:12" pos:end="39:15">void</name></type> <name pos:start="39:17" pos:end="39:29">sendCheckTask</name><parameter_list pos:start="39:30" pos:end="39:31">()</parameter_list> <block pos:start="39:33" pos:end="41:5">{<block_content pos:start="40:9" pos:end="40:47">
        <expr_stmt pos:start="40:9" pos:end="40:47"><expr pos:start="40:9" pos:end="40:46"><call pos:start="40:9" pos:end="40:46"><name pos:start="40:9" pos:end="40:20">offerMessage</name><argument_list pos:start="40:21" pos:end="40:46">(<argument pos:start="40:22" pos:end="40:45"><expr pos:start="40:22" pos:end="40:45"><operator pos:start="40:22" pos:end="40:24">new</operator> <call pos:start="40:26" pos:end="40:45"><name pos:start="40:26" pos:end="40:43">CheckerTaskMessage</name><argument_list pos:start="40:44" pos:end="40:45">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></function>

    <comment type="block" format="javadoc" pos:start="43:5" pos:end="48:7">/**
     * Send an update message with state from a physical drone. This message contains data sensed by a drones
     * (its position, velocity, etc.). Messages of this type should be sent when new data is received from the
     * drone.
     * @param snapshot a snapshot of the data received from the drone
     */</comment>
    <function pos:start="49:5" pos:end="52:5"><type pos:start="49:5" pos:end="49:15"><specifier pos:start="49:5" pos:end="49:10">public</specifier> <name pos:start="49:12" pos:end="49:15">void</name></type> <name pos:start="49:17" pos:end="49:39">sendPhysicalDroneUpdate</name><parameter_list pos:start="49:40" pos:end="49:71">(<parameter pos:start="49:41" pos:end="49:70"><decl pos:start="49:41" pos:end="49:70"><type pos:start="49:41" pos:end="49:61"><name pos:start="49:41" pos:end="49:61">DroneSnapshotInternal</name></type> <name pos:start="49:63" pos:end="49:70">snapshot</name></decl></parameter>)</parameter_list> <block pos:start="49:73" pos:end="52:5">{<block_content pos:start="50:9" pos:end="51:89">
        <expr_stmt pos:start="50:9" pos:end="51:89"><expr pos:start="50:9" pos:end="51:88"><call pos:start="50:9" pos:end="51:88"><name pos:start="50:9" pos:end="50:20">offerMessage</name><argument_list pos:start="50:21" pos:end="51:88">(<argument pos:start="50:22" pos:end="51:87"><expr pos:start="50:22" pos:end="51:87"><operator pos:start="50:22" pos:end="50:24">new</operator> <call pos:start="50:26" pos:end="51:87"><name pos:start="50:26" pos:end="50:51">PhysicalDroneUpdateMessage</name><argument_list pos:start="50:52" pos:end="51:87">(<argument pos:start="50:53" pos:end="50:70"><expr pos:start="50:53" pos:end="50:70"><call pos:start="50:53" pos:end="50:70"><name pos:start="50:53" pos:end="50:68"><name pos:start="50:53" pos:end="50:60">snapshot</name><operator pos:start="50:61" pos:end="50:61">.</operator><name pos:start="50:62" pos:end="50:68">getName</name></name><argument_list pos:start="50:69" pos:end="50:70">()</argument_list></call></expr></argument>,
                <argument pos:start="51:17" pos:end="51:38"><expr pos:start="51:17" pos:end="51:38"><call pos:start="51:17" pos:end="51:38"><name pos:start="51:17" pos:end="51:36"><name pos:start="51:17" pos:end="51:24">snapshot</name><operator pos:start="51:25" pos:end="51:25">.</operator><name pos:start="51:26" pos:end="51:36">getPosition</name></name><argument_list pos:start="51:37" pos:end="51:38">()</argument_list></call></expr></argument>, <argument pos:start="51:41" pos:end="51:62"><expr pos:start="51:41" pos:end="51:62"><call pos:start="51:41" pos:end="51:62"><name pos:start="51:41" pos:end="51:60"><name pos:start="51:41" pos:end="51:48">snapshot</name><operator pos:start="51:49" pos:end="51:49">.</operator><name pos:start="51:50" pos:end="51:60">getVelocity</name></name><argument_list pos:start="51:61" pos:end="51:62">()</argument_list></call></expr></argument>, <argument pos:start="51:65" pos:end="51:86"><expr pos:start="51:65" pos:end="51:86"><call pos:start="51:65" pos:end="51:86"><name pos:start="51:65" pos:end="51:84"><name pos:start="51:65" pos:end="51:72">snapshot</name><operator pos:start="51:73" pos:end="51:73">.</operator><name pos:start="51:74" pos:end="51:84">getAttitude</name></name><argument_list pos:start="51:85" pos:end="51:86">()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></function>

    <comment type="block" format="javadoc" pos:start="54:5" pos:end="66:7">/**
     * Sends an update message with state from a managed drone. This message contains a snapshot of the active goals as
     * well as the queue of commands currently being executed. Messages of this type should be sent when the set of
     * active goals changes or when the queue of commands changes.
     *
     * @param name the name of the drone
     * @param commandQueue the current queue of commands the managed drone is executing (this should not be the same
     *                     object use by managed drone, but a copy of that list)
     * @param goals a snapshot of the goals for this drone
     * @param state the state of the drone (FLYING, ON_GROUND, etc.)
     * @param managedDrone a reference to the managed drone this data came from (used to pass guidance back to the
     *                     managed drone after the next call of CollisionAvoider.avoid()).
     */</comment>
    <function pos:start="67:5" pos:end="69:5"><type pos:start="67:5" pos:end="67:15"><specifier pos:start="67:5" pos:end="67:10">public</specifier> <name pos:start="67:12" pos:end="67:15">void</name></type> <name pos:start="67:17" pos:end="67:38">sendManagedDroneUpdate</name><parameter_list pos:start="67:39" pos:end="67:146">(<parameter pos:start="67:40" pos:end="67:50"><decl pos:start="67:40" pos:end="67:50"><type pos:start="67:40" pos:end="67:50"><name pos:start="67:40" pos:end="67:45">String</name></type> <name pos:start="67:47" pos:end="67:50">name</name></decl></parameter>, <parameter pos:start="67:53" pos:end="67:78"><decl pos:start="67:53" pos:end="67:78"><type pos:start="67:53" pos:end="67:78"><name pos:start="67:53" pos:end="67:65"><name pos:start="67:53" pos:end="67:56">List</name><argument_list type="generic" pos:start="67:57" pos:end="67:65">&lt;<argument pos:start="67:58" pos:end="67:64"><name pos:start="67:58" pos:end="67:64">Command</name></argument>&gt;</argument_list></name></type> <name pos:start="67:67" pos:end="67:78">commandQueue</name></decl></parameter>, <parameter pos:start="67:81" pos:end="67:104"><decl pos:start="67:81" pos:end="67:104"><type pos:start="67:81" pos:end="67:104"><name pos:start="67:81" pos:end="67:98"><name pos:start="67:81" pos:end="67:83">Set</name><argument_list type="generic" pos:start="67:84" pos:end="67:98">&lt;<argument pos:start="67:85" pos:end="67:97"><name pos:start="67:85" pos:end="67:97">IGoalSnapshot</name></argument>&gt;</argument_list></name></type> <name pos:start="67:100" pos:end="67:104">goals</name></decl></parameter>, <parameter pos:start="67:107" pos:end="67:118"><decl pos:start="67:107" pos:end="67:118"><type pos:start="67:107" pos:end="67:118"><name pos:start="67:107" pos:end="67:112">String</name></type> <name pos:start="67:114" pos:end="67:118">state</name></decl></parameter>, <parameter pos:start="67:121" pos:end="67:145"><decl pos:start="67:121" pos:end="67:145"><type pos:start="67:121" pos:end="67:145"><name pos:start="67:121" pos:end="67:132">ManagedDrone</name></type> <name pos:start="67:134" pos:end="67:145">managedDrone</name></decl></parameter>)</parameter_list> <block pos:start="67:148" pos:end="69:5">{<block_content pos:start="68:9" pos:end="68:100">
        <expr_stmt pos:start="68:9" pos:end="68:100"><expr pos:start="68:9" pos:end="68:99"><call pos:start="68:9" pos:end="68:99"><name pos:start="68:9" pos:end="68:20">offerMessage</name><argument_list pos:start="68:21" pos:end="68:99">(<argument pos:start="68:22" pos:end="68:98"><expr pos:start="68:22" pos:end="68:98"><operator pos:start="68:22" pos:end="68:24">new</operator> <call pos:start="68:26" pos:end="68:98"><name pos:start="68:26" pos:end="68:50">ManagedDroneUpdateMessage</name><argument_list pos:start="68:51" pos:end="68:98">(<argument pos:start="68:52" pos:end="68:55"><expr pos:start="68:52" pos:end="68:55"><name pos:start="68:52" pos:end="68:55">name</name></expr></argument>, <argument pos:start="68:58" pos:end="68:69"><expr pos:start="68:58" pos:end="68:69"><name pos:start="68:58" pos:end="68:69">commandQueue</name></expr></argument>, <argument pos:start="68:72" pos:end="68:76"><expr pos:start="68:72" pos:end="68:76"><name pos:start="68:72" pos:end="68:76">goals</name></expr></argument>, <argument pos:start="68:79" pos:end="68:83"><expr pos:start="68:79" pos:end="68:83"><name pos:start="68:79" pos:end="68:83">state</name></expr></argument>, <argument pos:start="68:86" pos:end="68:97"><expr pos:start="68:86" pos:end="68:97"><name pos:start="68:86" pos:end="68:97">managedDrone</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></function>

    <comment type="block" format="javadoc" pos:start="71:5" pos:end="74:7">/**
     * Send a stop message. This message should be sent when the program is shutting down. This message causes the
     * CollisionAvoidanceBackend thread to stop gracefully.
     */</comment>
    <function pos:start="75:5" pos:end="84:5"><type pos:start="75:5" pos:end="75:15"><specifier pos:start="75:5" pos:end="75:10">public</specifier> <name pos:start="75:12" pos:end="75:15">void</name></type> <name pos:start="75:17" pos:end="75:31">sendStopMessage</name><parameter_list pos:start="75:32" pos:end="75:33">()</parameter_list> <block pos:start="75:35" pos:end="84:5">{<block_content pos:start="76:9" pos:end="82:9">
        <try pos:start="76:9" pos:end="82:9">try <block pos:start="76:13" pos:end="78:9">{<block_content pos:start="77:13" pos:end="77:43">
            <expr_stmt pos:start="77:13" pos:end="77:43"><expr pos:start="77:13" pos:end="77:42"><call pos:start="77:13" pos:end="77:42"><name pos:start="77:13" pos:end="77:23"><name pos:start="77:13" pos:end="77:19">mailbox</name><operator pos:start="77:20" pos:end="77:20">.</operator><name pos:start="77:21" pos:end="77:23">put</name></name><argument_list pos:start="77:24" pos:end="77:42">(<argument pos:start="77:25" pos:end="77:41"><expr pos:start="77:25" pos:end="77:41"><operator pos:start="77:25" pos:end="77:27">new</operator> <call pos:start="77:29" pos:end="77:41"><name pos:start="77:29" pos:end="77:39">StopMessage</name><argument_list pos:start="77:40" pos:end="77:41">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block> <catch pos:start="78:11" pos:end="82:9">catch <parameter_list pos:start="78:17" pos:end="78:40">(<parameter pos:start="78:18" pos:end="78:39"><decl pos:start="78:18" pos:end="78:39"><type pos:start="78:18" pos:end="78:39"><name pos:start="78:18" pos:end="78:37">InterruptedException</name></type> <name pos:start="78:39" pos:end="78:39">e</name></decl></parameter>)</parameter_list> <block pos:start="78:42" pos:end="82:9">{<block_content pos:start="79:13" pos:end="81:42">
            <expr_stmt pos:start="79:13" pos:end="79:85"><expr pos:start="79:13" pos:end="79:84"><call pos:start="79:13" pos:end="79:84"><name pos:start="79:13" pos:end="79:24"><name pos:start="79:13" pos:end="79:18">LOGGER</name><operator pos:start="79:19" pos:end="79:19">.</operator><name pos:start="79:20" pos:end="79:24">error</name></name><argument_list pos:start="79:25" pos:end="79:84">(<argument pos:start="79:26" pos:end="79:83"><expr pos:start="79:26" pos:end="79:83"><literal type="string" pos:start="79:26" pos:end="79:83">"Could not send stop command to CollisionAvoidanceBackend"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt pos:start="80:13" pos:end="80:28"><expr pos:start="80:13" pos:end="80:27"><call pos:start="80:13" pos:end="80:27"><name pos:start="80:13" pos:end="80:24"><name pos:start="80:13" pos:end="80:18">LOGGER</name><operator pos:start="80:19" pos:end="80:19">.</operator><name pos:start="80:20" pos:end="80:24">trace</name></name><argument_list pos:start="80:25" pos:end="80:27">(<argument pos:start="80:26" pos:end="80:26"><expr pos:start="80:26" pos:end="80:26"><name pos:start="80:26" pos:end="80:26">e</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <throw pos:start="81:13" pos:end="81:42">throw <expr pos:start="81:19" pos:end="81:41"><operator pos:start="81:19" pos:end="81:21">new</operator> <call pos:start="81:23" pos:end="81:41"><name pos:start="81:23" pos:end="81:38">RuntimeException</name><argument_list pos:start="81:39" pos:end="81:41">(<argument pos:start="81:40" pos:end="81:40"><expr pos:start="81:40" pos:end="81:40"><name pos:start="81:40" pos:end="81:40">e</name></expr></argument>)</argument_list></call></expr>;</throw>
        </block_content>}</block></catch></try>

    </block_content>}</block></function>
 }</block></class>
</unit>
