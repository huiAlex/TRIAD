<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="Java" filename="flatCode/KMLExporter.java" pos:tabs="8"><package pos:start="1:1" pos:end="1:34">package <name pos:start="1:9" pos:end="1:33"><name pos:start="1:9" pos:end="1:11">edu</name><operator pos:start="1:12" pos:end="1:12">.</operator><name pos:start="1:13" pos:end="1:14">nd</name><operator pos:start="1:15" pos:end="1:15">.</operator><name pos:start="1:16" pos:end="1:24">dronology</name><operator pos:start="1:25" pos:end="1:25">.</operator><name pos:start="1:26" pos:end="1:29">misc</name><operator pos:start="1:30" pos:end="1:30">.</operator><name pos:start="1:31" pos:end="1:33">kml</name></name>;</package>

<import pos:start="3:1" pos:end="3:30">import <name pos:start="3:8" pos:end="3:29"><name pos:start="3:8" pos:end="3:11">java</name><operator pos:start="3:12" pos:end="3:12">.</operator><name pos:start="3:13" pos:end="3:14">io</name><operator pos:start="3:15" pos:end="3:15">.</operator><name pos:start="3:16" pos:end="3:29">BufferedReader</name></name>;</import>
<import pos:start="4:1" pos:end="4:20">import <name pos:start="4:8" pos:end="4:19"><name pos:start="4:8" pos:end="4:11">java</name><operator pos:start="4:12" pos:end="4:12">.</operator><name pos:start="4:13" pos:end="4:14">io</name><operator pos:start="4:15" pos:end="4:15">.</operator><name pos:start="4:16" pos:end="4:19">File</name></name>;</import>
<import pos:start="5:1" pos:end="5:37">import <name pos:start="5:8" pos:end="5:36"><name pos:start="5:8" pos:end="5:11">java</name><operator pos:start="5:12" pos:end="5:12">.</operator><name pos:start="5:13" pos:end="5:14">io</name><operator pos:start="5:15" pos:end="5:15">.</operator><name pos:start="5:16" pos:end="5:36">FileNotFoundException</name></name>;</import>
<import pos:start="6:1" pos:end="6:26">import <name pos:start="6:8" pos:end="6:25"><name pos:start="6:8" pos:end="6:11">java</name><operator pos:start="6:12" pos:end="6:12">.</operator><name pos:start="6:13" pos:end="6:14">io</name><operator pos:start="6:15" pos:end="6:15">.</operator><name pos:start="6:16" pos:end="6:25">FileReader</name></name>;</import>
<import pos:start="7:1" pos:end="7:26">import <name pos:start="7:8" pos:end="7:25"><name pos:start="7:8" pos:end="7:11">java</name><operator pos:start="7:12" pos:end="7:12">.</operator><name pos:start="7:13" pos:end="7:14">io</name><operator pos:start="7:15" pos:end="7:15">.</operator><name pos:start="7:16" pos:end="7:25">FileWriter</name></name>;</import>
<import pos:start="8:1" pos:end="8:27">import <name pos:start="8:8" pos:end="8:26"><name pos:start="8:8" pos:end="8:11">java</name><operator pos:start="8:12" pos:end="8:12">.</operator><name pos:start="8:13" pos:end="8:14">io</name><operator pos:start="8:15" pos:end="8:15">.</operator><name pos:start="8:16" pos:end="8:26">IOException</name></name>;</import>
<import pos:start="9:1" pos:end="9:22">import <name pos:start="9:8" pos:end="9:21"><name pos:start="9:8" pos:end="9:11">java</name><operator pos:start="9:12" pos:end="9:12">.</operator><name pos:start="9:13" pos:end="9:14">io</name><operator pos:start="9:15" pos:end="9:15">.</operator><name pos:start="9:16" pos:end="9:21">Writer</name></name>;</import>
<import pos:start="10:1" pos:end="10:27">import <name pos:start="10:8" pos:end="10:26"><name pos:start="10:8" pos:end="10:11">java</name><operator pos:start="10:12" pos:end="10:12">.</operator><name pos:start="10:13" pos:end="10:15">nio</name><operator pos:start="10:16" pos:end="10:16">.</operator><name pos:start="10:17" pos:end="10:20">file</name><operator pos:start="10:21" pos:end="10:21">.</operator><name pos:start="10:22" pos:end="10:26">Files</name></name>;</import>
<import pos:start="11:1" pos:end="11:27">import <name pos:start="11:8" pos:end="11:26"><name pos:start="11:8" pos:end="11:11">java</name><operator pos:start="11:12" pos:end="11:12">.</operator><name pos:start="11:13" pos:end="11:15">nio</name><operator pos:start="11:16" pos:end="11:16">.</operator><name pos:start="11:17" pos:end="11:20">file</name><operator pos:start="11:21" pos:end="11:21">.</operator><name pos:start="11:22" pos:end="11:26">Paths</name></name>;</import>
<import pos:start="12:1" pos:end="12:28">import <name pos:start="12:8" pos:end="12:27"><name pos:start="12:8" pos:end="12:11">java</name><operator pos:start="12:12" pos:end="12:12">.</operator><name pos:start="12:13" pos:end="12:16">text</name><operator pos:start="12:17" pos:end="12:17">.</operator><name pos:start="12:18" pos:end="12:27">DateFormat</name></name>;</import>
<import pos:start="13:1" pos:end="13:34">import <name pos:start="13:8" pos:end="13:33"><name pos:start="13:8" pos:end="13:11">java</name><operator pos:start="13:12" pos:end="13:12">.</operator><name pos:start="13:13" pos:end="13:16">text</name><operator pos:start="13:17" pos:end="13:17">.</operator><name pos:start="13:18" pos:end="13:33">SimpleDateFormat</name></name>;</import>
<import pos:start="14:1" pos:end="14:27">import <name pos:start="14:8" pos:end="14:26"><name pos:start="14:8" pos:end="14:11">java</name><operator pos:start="14:12" pos:end="14:12">.</operator><name pos:start="14:13" pos:end="14:16">util</name><operator pos:start="14:17" pos:end="14:17">.</operator><name pos:start="14:18" pos:end="14:26">ArrayList</name></name>;</import>
<import pos:start="15:1" pos:end="15:22">import <name pos:start="15:8" pos:end="15:21"><name pos:start="15:8" pos:end="15:11">java</name><operator pos:start="15:12" pos:end="15:12">.</operator><name pos:start="15:13" pos:end="15:16">util</name><operator pos:start="15:17" pos:end="15:17">.</operator><name pos:start="15:18" pos:end="15:21">List</name></name>;</import>
<import pos:start="16:1" pos:end="16:26">import <name pos:start="16:8" pos:end="16:25"><name pos:start="16:8" pos:end="16:11">java</name><operator pos:start="16:12" pos:end="16:12">.</operator><name pos:start="16:13" pos:end="16:16">util</name><operator pos:start="16:17" pos:end="16:17">.</operator><name pos:start="16:18" pos:end="16:25">TimeZone</name></name>;</import>

<import pos:start="18:1" pos:end="18:45">import <name pos:start="18:8" pos:end="18:44"><name pos:start="18:8" pos:end="18:10">edu</name><operator pos:start="18:11" pos:end="18:11">.</operator><name pos:start="18:12" pos:end="18:13">nd</name><operator pos:start="18:14" pos:end="18:14">.</operator><name pos:start="18:15" pos:end="18:23">dronology</name><operator pos:start="18:24" pos:end="18:24">.</operator><name pos:start="18:25" pos:end="18:28">core</name><operator pos:start="18:29" pos:end="18:29">.</operator><name pos:start="18:30" pos:end="18:33">util</name><operator pos:start="18:34" pos:end="18:34">.</operator><name pos:start="18:35" pos:end="18:44">FormatUtil</name></name>;</import>
<import pos:start="19:1" pos:end="19:70">import <name pos:start="19:8" pos:end="19:69"><name pos:start="19:8" pos:end="19:10">edu</name><operator pos:start="19:11" pos:end="19:11">.</operator><name pos:start="19:12" pos:end="19:13">nd</name><operator pos:start="19:14" pos:end="19:14">.</operator><name pos:start="19:15" pos:end="19:23">dronology</name><operator pos:start="19:24" pos:end="19:24">.</operator><name pos:start="19:25" pos:end="19:32">gstation</name><operator pos:start="19:33" pos:end="19:33">.</operator><name pos:start="19:34" pos:end="19:42">connector</name><operator pos:start="19:43" pos:end="19:43">.</operator><name pos:start="19:44" pos:end="19:51">messages</name><operator pos:start="19:52" pos:end="19:52">.</operator><name pos:start="19:53" pos:end="19:69">UAVMessageFactory</name></name>;</import>
<import pos:start="20:1" pos:end="20:68">import <name pos:start="20:8" pos:end="20:67"><name pos:start="20:8" pos:end="20:10">edu</name><operator pos:start="20:11" pos:end="20:11">.</operator><name pos:start="20:12" pos:end="20:13">nd</name><operator pos:start="20:14" pos:end="20:14">.</operator><name pos:start="20:15" pos:end="20:23">dronology</name><operator pos:start="20:24" pos:end="20:24">.</operator><name pos:start="20:25" pos:end="20:32">gstation</name><operator pos:start="20:33" pos:end="20:33">.</operator><name pos:start="20:34" pos:end="20:42">connector</name><operator pos:start="20:43" pos:end="20:43">.</operator><name pos:start="20:44" pos:end="20:51">messages</name><operator pos:start="20:52" pos:end="20:52">.</operator><name pos:start="20:53" pos:end="20:67">UAVStateMessage</name></name>;</import>
<import pos:start="21:1" pos:end="21:38">import <name pos:start="21:8" pos:end="21:37"><name pos:start="21:8" pos:end="21:10">edu</name><operator pos:start="21:11" pos:end="21:11">.</operator><name pos:start="21:12" pos:end="21:13">nd</name><operator pos:start="21:14" pos:end="21:14">.</operator><name pos:start="21:15" pos:end="21:23">dronology</name><operator pos:start="21:24" pos:end="21:24">.</operator><name pos:start="21:25" pos:end="21:28">util</name><operator pos:start="21:29" pos:end="21:29">.</operator><name pos:start="21:30" pos:end="21:37">FileUtil</name></name>;</import>

<class pos:start="23:1" pos:end="184:1"><specifier pos:start="23:1" pos:end="23:6">public</specifier> class <name pos:start="23:14" pos:end="23:24">KMLExporter</name> <block pos:start="23:26" pos:end="184:1">{

	<decl_stmt pos:start="25:9" pos:end="25:52"><decl pos:start="25:9" pos:end="25:51"><type pos:start="25:9" pos:end="25:35"><specifier pos:start="25:9" pos:end="25:15">private</specifier> <specifier pos:start="25:17" pos:end="25:22">static</specifier> <specifier pos:start="25:24" pos:end="25:28">final</specifier> <name pos:start="25:30" pos:end="25:35">String</name></type> <name pos:start="25:37" pos:end="25:41">UAVID</name> <init pos:start="25:43" pos:end="25:51">= <expr pos:start="25:45" pos:end="25:51"><literal type="string" pos:start="25:45" pos:end="25:51">"IRIS2"</literal></expr></init></decl>;</decl_stmt>
	<decl_stmt pos:start="26:9" pos:end="26:41"><decl pos:start="26:9" pos:end="26:40"><type pos:start="26:9" pos:end="26:22"><specifier pos:start="26:9" pos:end="26:15">private</specifier> <name pos:start="26:17" pos:end="26:22">String</name></type> <name pos:start="26:24" pos:end="26:27">name</name> <init pos:start="26:29" pos:end="26:40">= <expr pos:start="26:31" pos:end="26:40"><literal type="string" pos:start="26:31" pos:end="26:40">"test.kml"</literal></expr></init></decl>;</decl_stmt>
	<decl_stmt pos:start="27:9" pos:end="27:50"><decl pos:start="27:9" pos:end="27:49"><type pos:start="27:9" pos:end="27:22"><specifier pos:start="27:9" pos:end="27:15">private</specifier> <name pos:start="27:17" pos:end="27:22">String</name></type> <name pos:start="27:24" pos:end="27:31">datapath</name> <init pos:start="27:33" pos:end="27:49">= <expr pos:start="27:35" pos:end="27:49"><literal type="string" pos:start="27:35" pos:end="27:49">"d:\\kmlexport"</literal></expr></init></decl>;</decl_stmt>
	<decl_stmt pos:start="28:9" pos:end="28:36"><decl pos:start="28:9" pos:end="28:35"><type pos:start="28:9" pos:end="28:22"><specifier pos:start="28:9" pos:end="28:15">private</specifier> <name pos:start="28:17" pos:end="28:22">String</name></type> <name pos:start="28:24" pos:end="28:35">rootTemplate</name></decl>;</decl_stmt>
	<decl_stmt pos:start="29:9" pos:end="29:37"><decl pos:start="29:9" pos:end="29:36"><type pos:start="29:9" pos:end="29:22"><specifier pos:start="29:9" pos:end="29:15">private</specifier> <name pos:start="29:17" pos:end="29:22">String</name></type> <name pos:start="29:24" pos:end="29:36">pointTemplate</name></decl>;</decl_stmt>

	<function pos:start="31:9" pos:end="35:9"><type pos:start="31:9" pos:end="31:26"><specifier pos:start="31:9" pos:end="31:14">public</specifier> <specifier pos:start="31:16" pos:end="31:21">static</specifier> <name pos:start="31:23" pos:end="31:26">void</name></type> <name pos:start="31:28" pos:end="31:31">main</name><parameter_list pos:start="31:32" pos:end="31:46">(<parameter pos:start="31:33" pos:end="31:45"><decl pos:start="31:33" pos:end="31:45"><type pos:start="31:33" pos:end="31:40"><name pos:start="31:33" pos:end="31:40"><name pos:start="31:33" pos:end="31:38">String</name><index pos:start="31:39" pos:end="31:40">[]</index></name></type> <name pos:start="31:42" pos:end="31:45">args</name></decl></parameter>)</parameter_list> <block pos:start="31:48" pos:end="35:9">{<block_content pos:start="33:17" pos:end="33:63">

		<expr_stmt pos:start="33:17" pos:end="33:63"><expr pos:start="33:17" pos:end="33:62"><operator pos:start="33:17" pos:end="33:19">new</operator> <call pos:start="33:21" pos:end="33:33"><name pos:start="33:21" pos:end="33:31">KMLExporter</name><argument_list pos:start="33:32" pos:end="33:33">()</argument_list></call><operator pos:start="33:34" pos:end="33:34">.</operator><call pos:start="33:35" pos:end="33:62"><name pos:start="33:35" pos:end="33:47">createKMLFile</name><argument_list pos:start="33:48" pos:end="33:62">(<argument pos:start="33:49" pos:end="33:61"><expr pos:start="33:49" pos:end="33:61"><literal type="string" pos:start="33:49" pos:end="33:61">"d:\\log.log"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	</block_content>}</block></function>

	<function pos:start="37:9" pos:end="49:9"><type pos:start="37:9" pos:end="37:19"><specifier pos:start="37:9" pos:end="37:14">public</specifier> <name pos:start="37:16" pos:end="37:19">void</name></type> <name pos:start="37:21" pos:end="37:33">createKMLFile</name><parameter_list pos:start="37:34" pos:end="37:49">(<parameter pos:start="37:35" pos:end="37:48"><decl pos:start="37:35" pos:end="37:48"><type pos:start="37:35" pos:end="37:40"><name pos:start="37:35" pos:end="37:40">String</name></type> <name pos:start="37:42" pos:end="37:48">logfile</name></decl></parameter>)</parameter_list> <block pos:start="37:51" pos:end="49:9">{<block_content pos:start="39:17" pos:end="48:39">

		<expr_stmt pos:start="39:17" pos:end="39:73"><expr pos:start="39:17" pos:end="39:72"><name pos:start="39:17" pos:end="39:28">rootTemplate</name> <operator pos:start="39:30" pos:end="39:30">=</operator> <call pos:start="39:32" pos:end="39:72"><name pos:start="39:32" pos:end="39:48"><name pos:start="39:32" pos:end="39:39">FileUtil</name><operator pos:start="39:40" pos:end="39:40">.</operator><name pos:start="39:41" pos:end="39:48">readFile</name></name><argument_list pos:start="39:49" pos:end="39:72">(<argument pos:start="39:50" pos:end="39:71"><expr pos:start="39:50" pos:end="39:71"><literal type="string" pos:start="39:50" pos:end="39:71">"./template/track.txt"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt pos:start="40:17" pos:end="40:79"><expr pos:start="40:17" pos:end="40:78"><name pos:start="40:17" pos:end="40:29">pointTemplate</name> <operator pos:start="40:31" pos:end="40:31">=</operator> <call pos:start="40:33" pos:end="40:78"><name pos:start="40:33" pos:end="40:49"><name pos:start="40:33" pos:end="40:40">FileUtil</name><operator pos:start="40:41" pos:end="40:41">.</operator><name pos:start="40:42" pos:end="40:49">readFile</name></name><argument_list pos:start="40:50" pos:end="40:78">(<argument pos:start="40:51" pos:end="40:77"><expr pos:start="40:51" pos:end="40:77"><literal type="string" pos:start="40:51" pos:end="40:77">"./template/trackpoint.txt"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		<comment type="line" pos:start="42:17" pos:end="42:53">// System.out.println(pointTemplate);</comment>

		<decl_stmt pos:start="44:17" pos:end="44:71"><decl pos:start="44:17" pos:end="44:70"><type pos:start="44:17" pos:end="44:37"><name pos:start="44:17" pos:end="44:37"><name pos:start="44:17" pos:end="44:20">List</name><argument_list type="generic" pos:start="44:21" pos:end="44:37">&lt;<argument pos:start="44:22" pos:end="44:36"><name pos:start="44:22" pos:end="44:36">UAVStateMessage</name></argument>&gt;</argument_list></name></type> <name pos:start="44:39" pos:end="44:46">messages</name> <init pos:start="44:48" pos:end="44:70">= <expr pos:start="44:50" pos:end="44:70"><call pos:start="44:50" pos:end="44:70"><name pos:start="44:50" pos:end="44:61">readMessages</name><argument_list pos:start="44:62" pos:end="44:70">(<argument pos:start="44:63" pos:end="44:69"><expr pos:start="44:63" pos:end="44:69"><name pos:start="44:63" pos:end="44:69">logfile</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

		<decl_stmt pos:start="46:17" pos:end="46:59"><decl pos:start="46:17" pos:end="46:58"><type pos:start="46:17" pos:end="46:22"><name pos:start="46:17" pos:end="46:22">String</name></type> <name pos:start="46:24" pos:end="46:32">kmlString</name> <init pos:start="46:34" pos:end="46:58">= <expr pos:start="46:36" pos:end="46:58"><call pos:start="46:36" pos:end="46:58"><name pos:start="46:36" pos:end="46:48">createKMLBody</name><argument_list pos:start="46:49" pos:end="46:58">(<argument pos:start="46:50" pos:end="46:57"><expr pos:start="46:50" pos:end="46:57"><name pos:start="46:50" pos:end="46:57">messages</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

		<expr_stmt pos:start="48:17" pos:end="48:39"><expr pos:start="48:17" pos:end="48:38"><call pos:start="48:17" pos:end="48:38"><name pos:start="48:17" pos:end="48:27">writeToFile</name><argument_list pos:start="48:28" pos:end="48:38">(<argument pos:start="48:29" pos:end="48:37"><expr pos:start="48:29" pos:end="48:37"><name pos:start="48:29" pos:end="48:37">kmlString</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	</block_content>}</block></function>

	<function pos:start="51:9" pos:end="64:9"><type pos:start="51:9" pos:end="51:37"><specifier pos:start="51:9" pos:end="51:15">private</specifier> <name pos:start="51:17" pos:end="51:37"><name pos:start="51:17" pos:end="51:20">List</name><argument_list type="generic" pos:start="51:21" pos:end="51:37">&lt;<argument pos:start="51:22" pos:end="51:36"><name pos:start="51:22" pos:end="51:36">UAVStateMessage</name></argument>&gt;</argument_list></name></type> <name pos:start="51:39" pos:end="51:50">readMessages</name><parameter_list pos:start="51:51" pos:end="51:66">(<parameter pos:start="51:52" pos:end="51:65"><decl pos:start="51:52" pos:end="51:65"><type pos:start="51:52" pos:end="51:57"><name pos:start="51:52" pos:end="51:57">String</name></type> <name pos:start="51:59" pos:end="51:65">logfile</name></decl></parameter>)</parameter_list> <block pos:start="51:68" pos:end="64:9">{<block_content pos:start="52:17" pos:end="63:35">
		<decl_stmt pos:start="52:17" pos:end="52:70"><decl pos:start="52:17" pos:end="52:69"><type pos:start="52:17" pos:end="52:37"><name pos:start="52:17" pos:end="52:37"><name pos:start="52:17" pos:end="52:20">List</name><argument_list type="generic" pos:start="52:21" pos:end="52:37">&lt;<argument pos:start="52:22" pos:end="52:36"><name pos:start="52:22" pos:end="52:36">UAVStateMessage</name></argument>&gt;</argument_list></name></type> <name pos:start="52:39" pos:end="52:49">messageList</name> <init pos:start="52:51" pos:end="52:69">= <expr pos:start="52:53" pos:end="52:69"><operator pos:start="52:53" pos:end="52:55">new</operator> <call pos:start="52:57" pos:end="52:69"><name pos:start="52:57" pos:end="52:67"><name pos:start="52:57" pos:end="52:65">ArrayList</name><argument_list type="generic" pos:start="52:66" pos:end="52:67">&lt;&gt;</argument_list></name><argument_list pos:start="52:68" pos:end="52:69">()</argument_list></call></expr></init></decl>;</decl_stmt>
		<try pos:start="53:17" pos:end="62:17">try <block pos:start="53:21" pos:end="59:17">{<block_content pos:start="55:25" pos:end="58:43">

			<decl_stmt pos:start="55:25" pos:end="55:84"><decl pos:start="55:25" pos:end="55:83"><type pos:start="55:25" pos:end="55:36"><name pos:start="55:25" pos:end="55:36"><name pos:start="55:25" pos:end="55:28">List</name><argument_list type="generic" pos:start="55:29" pos:end="55:36">&lt;<argument pos:start="55:30" pos:end="55:35"><name pos:start="55:30" pos:end="55:35">String</name></argument>&gt;</argument_list></name></type> <name pos:start="55:38" pos:end="55:42">lines</name> <init pos:start="55:44" pos:end="55:83">= <expr pos:start="55:46" pos:end="55:83"><call pos:start="55:46" pos:end="55:83"><name pos:start="55:46" pos:end="55:63"><name pos:start="55:46" pos:end="55:50">Files</name><operator pos:start="55:51" pos:end="55:51">.</operator><name pos:start="55:52" pos:end="55:63">readAllLines</name></name><argument_list pos:start="55:64" pos:end="55:83">(<argument pos:start="55:65" pos:end="55:82"><expr pos:start="55:65" pos:end="55:82"><call pos:start="55:65" pos:end="55:82"><name pos:start="55:65" pos:end="55:73"><name pos:start="55:65" pos:end="55:69">Paths</name><operator pos:start="55:70" pos:end="55:70">.</operator><name pos:start="55:71" pos:end="55:73">get</name></name><argument_list pos:start="55:74" pos:end="55:82">(<argument pos:start="55:75" pos:end="55:81"><expr pos:start="55:75" pos:end="55:81"><name pos:start="55:75" pos:end="55:81">logfile</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

			<expr_stmt pos:start="57:25" pos:end="57:74"><expr pos:start="57:25" pos:end="57:73"><call pos:start="57:25" pos:end="57:73"><name pos:start="57:25" pos:end="57:37"><name pos:start="57:25" pos:end="57:29">lines</name><operator pos:start="57:30" pos:end="57:30">.</operator><name pos:start="57:31" pos:end="57:37">forEach</name></name><argument_list pos:start="57:38" pos:end="57:73">(<argument pos:start="57:39" pos:end="57:72"><expr pos:start="57:39" pos:end="57:72"><lambda pos:start="57:39" pos:end="57:72"><parameter_list type="pseudo" pos:start="57:39" pos:end="57:39"><parameter pos:start="57:39" pos:end="57:39"><decl pos:start="57:39" pos:end="57:39"><name pos:start="57:39" pos:end="57:39">l</name></decl></parameter></parameter_list> -&gt;<block type="pseudo" pos:start="57:44" pos:end="57:72"><block_content pos:start="57:44" pos:end="57:72"> <expr pos:start="57:44" pos:end="57:72"><call pos:start="57:44" pos:end="57:72"><name pos:start="57:44" pos:end="57:58"><name pos:start="57:44" pos:end="57:54">messageList</name><operator pos:start="57:55" pos:end="57:55">.</operator><name pos:start="57:56" pos:end="57:58">add</name></name><argument_list pos:start="57:59" pos:end="57:72">(<argument pos:start="57:60" pos:end="57:71"><expr pos:start="57:60" pos:end="57:71"><call pos:start="57:60" pos:end="57:71"><name pos:start="57:60" pos:end="57:68">parseLine</name><argument_list pos:start="57:69" pos:end="57:71">(<argument pos:start="57:70" pos:end="57:70"><expr pos:start="57:70" pos:end="57:70"><name pos:start="57:70" pos:end="57:70">l</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></block_content></block></lambda></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<return pos:start="58:25" pos:end="58:43">return <expr pos:start="58:32" pos:end="58:42"><name pos:start="58:32" pos:end="58:42">messageList</name></expr>;</return>
		</block_content>}</block> <catch pos:start="59:19" pos:end="62:17">catch <parameter_list pos:start="59:25" pos:end="59:39">(<parameter pos:start="59:26" pos:end="59:38"><decl pos:start="59:26" pos:end="59:38"><type pos:start="59:26" pos:end="59:38"><name pos:start="59:26" pos:end="59:36">IOException</name></type> <name pos:start="59:38" pos:end="59:38">e</name></decl></parameter>)</parameter_list> <block pos:start="59:41" pos:end="62:17">{<block_content pos:start="61:25" pos:end="61:44">
			<comment type="line" pos:start="60:25" pos:end="60:58">// TODO Auto-generated catch block</comment>
			<expr_stmt pos:start="61:25" pos:end="61:44"><expr pos:start="61:25" pos:end="61:43"><call pos:start="61:25" pos:end="61:43"><name pos:start="61:25" pos:end="61:41"><name pos:start="61:25" pos:end="61:25">e</name><operator pos:start="61:26" pos:end="61:26">.</operator><name pos:start="61:27" pos:end="61:41">printStackTrace</name></name><argument_list pos:start="61:42" pos:end="61:43">()</argument_list></call></expr>;</expr_stmt>
		</block_content>}</block></catch></try>
		<return pos:start="63:17" pos:end="63:35">return <expr pos:start="63:24" pos:end="63:34"><name pos:start="63:24" pos:end="63:34">messageList</name></expr>;</return>
	</block_content>}</block></function>

	<function pos:start="66:9" pos:end="80:9"><type pos:start="66:9" pos:end="66:31"><specifier pos:start="66:9" pos:end="66:15">private</specifier> <name pos:start="66:17" pos:end="66:31">UAVStateMessage</name></type> <name pos:start="66:33" pos:end="66:41">parseLine</name><parameter_list pos:start="66:42" pos:end="66:51">(<parameter pos:start="66:43" pos:end="66:50"><decl pos:start="66:43" pos:end="66:50"><type pos:start="66:43" pos:end="66:48"><name pos:start="66:43" pos:end="66:48">String</name></type> <name pos:start="66:50" pos:end="66:50">l</name></decl></parameter>)</parameter_list> <block pos:start="66:53" pos:end="80:9">{<block_content pos:start="67:17" pos:end="78:28">
		<decl_stmt pos:start="67:17" pos:end="67:43"><decl pos:start="67:17" pos:end="67:42"><type pos:start="67:17" pos:end="67:19"><name pos:start="67:17" pos:end="67:19">int</name></type> <name pos:start="67:21" pos:end="67:25">start</name> <init pos:start="67:27" pos:end="67:42">= <expr pos:start="67:29" pos:end="67:42"><call pos:start="67:29" pos:end="67:42"><name pos:start="67:29" pos:end="67:37"><name pos:start="67:29" pos:end="67:29">l</name><operator pos:start="67:30" pos:end="67:30">.</operator><name pos:start="67:31" pos:end="67:37">indexOf</name></name><argument_list pos:start="67:38" pos:end="67:42">(<argument pos:start="67:39" pos:end="67:41"><expr pos:start="67:39" pos:end="67:41"><literal type="string" pos:start="67:39" pos:end="67:41">"{"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<decl_stmt pos:start="68:17" pos:end="68:52"><decl pos:start="68:17" pos:end="68:51"><type pos:start="68:17" pos:end="68:22"><name pos:start="68:17" pos:end="68:22">String</name></type> <name pos:start="68:24" pos:end="68:30">msgText</name> <init pos:start="68:32" pos:end="68:51">= <expr pos:start="68:34" pos:end="68:51"><call pos:start="68:34" pos:end="68:51"><name pos:start="68:34" pos:end="68:44"><name pos:start="68:34" pos:end="68:34">l</name><operator pos:start="68:35" pos:end="68:35">.</operator><name pos:start="68:36" pos:end="68:44">substring</name></name><argument_list pos:start="68:45" pos:end="68:51">(<argument pos:start="68:46" pos:end="68:50"><expr pos:start="68:46" pos:end="68:50"><name pos:start="68:46" pos:end="68:50">start</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

		<decl_stmt pos:start="70:17" pos:end="70:36"><decl pos:start="70:17" pos:end="70:35"><type pos:start="70:17" pos:end="70:31"><name pos:start="70:17" pos:end="70:31">UAVStateMessage</name></type> <name pos:start="70:33" pos:end="70:35">msg</name></decl>;</decl_stmt>
		<try pos:start="71:17" pos:end="77:17">try <block pos:start="71:21" pos:end="74:17">{<block_content pos:start="72:25" pos:end="73:35">
			<expr_stmt pos:start="72:25" pos:end="72:82"><expr pos:start="72:25" pos:end="72:81"><name pos:start="72:25" pos:end="72:27">msg</name> <operator pos:start="72:29" pos:end="72:29">=</operator> <operator pos:start="72:31" pos:end="72:31">(</operator><name pos:start="72:32" pos:end="72:46">UAVStateMessage</name><operator pos:start="72:47" pos:end="72:47">)</operator> <call pos:start="72:49" pos:end="72:81"><name pos:start="72:49" pos:end="72:72"><name pos:start="72:49" pos:end="72:65">UAVMessageFactory</name><operator pos:start="72:66" pos:end="72:66">.</operator><name pos:start="72:67" pos:end="72:72">create</name></name><argument_list pos:start="72:73" pos:end="72:81">(<argument pos:start="72:74" pos:end="72:80"><expr pos:start="72:74" pos:end="72:80"><name pos:start="72:74" pos:end="72:80">msgText</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<return pos:start="73:25" pos:end="73:35">return <expr pos:start="73:32" pos:end="73:34"><name pos:start="73:32" pos:end="73:34">msg</name></expr>;</return>
		</block_content>}</block> <catch pos:start="74:19" pos:end="77:17">catch <parameter_list pos:start="74:25" pos:end="74:37">(<parameter pos:start="74:26" pos:end="74:36"><decl pos:start="74:26" pos:end="74:36"><type pos:start="74:26" pos:end="74:36"><name pos:start="74:26" pos:end="74:34">Exception</name></type> <name pos:start="74:36" pos:end="74:36">e</name></decl></parameter>)</parameter_list> <block pos:start="74:39" pos:end="77:17">{<block_content pos:start="76:25" pos:end="76:44">
			<comment type="line" pos:start="75:25" pos:end="75:58">// TODO Auto-generated catch block</comment>
			<expr_stmt pos:start="76:25" pos:end="76:44"><expr pos:start="76:25" pos:end="76:43"><call pos:start="76:25" pos:end="76:43"><name pos:start="76:25" pos:end="76:41"><name pos:start="76:25" pos:end="76:25">e</name><operator pos:start="76:26" pos:end="76:26">.</operator><name pos:start="76:27" pos:end="76:41">printStackTrace</name></name><argument_list pos:start="76:42" pos:end="76:43">()</argument_list></call></expr>;</expr_stmt>
		</block_content>}</block></catch></try>
		<return pos:start="78:17" pos:end="78:28">return <expr pos:start="78:24" pos:end="78:27"><literal type="null" pos:start="78:24" pos:end="78:27">null</literal></expr>;</return>

	</block_content>}</block></function>

	<function pos:start="82:9" pos:end="140:9"><type pos:start="82:9" pos:end="82:20"><specifier pos:start="82:9" pos:end="82:15">private</specifier> <name pos:start="82:17" pos:end="82:20">void</name></type> <name pos:start="82:22" pos:end="82:32">writeToFile</name><parameter_list pos:start="82:33" pos:end="82:50">(<parameter pos:start="82:34" pos:end="82:49"><decl pos:start="82:34" pos:end="82:49"><type pos:start="82:34" pos:end="82:39"><name pos:start="82:34" pos:end="82:39">String</name></type> <name pos:start="82:41" pos:end="82:49">kmlString</name></decl></parameter>)</parameter_list> <block pos:start="82:52" pos:end="140:9">{<block_content pos:start="83:17" pos:end="138:17">
		<decl_stmt pos:start="83:17" pos:end="83:75"><decl pos:start="83:17" pos:end="83:74"><type pos:start="83:17" pos:end="83:20"><name pos:start="83:17" pos:end="83:20">File</name></type> <name pos:start="83:22" pos:end="83:31">testexists</name> <init pos:start="83:33" pos:end="83:74">= <expr pos:start="83:35" pos:end="83:74"><operator pos:start="83:35" pos:end="83:37">new</operator> <call pos:start="83:39" pos:end="83:74"><name pos:start="83:39" pos:end="83:42">File</name><argument_list pos:start="83:43" pos:end="83:74">(<argument pos:start="83:44" pos:end="83:73"><expr pos:start="83:44" pos:end="83:73"><name pos:start="83:44" pos:end="83:51">datapath</name> <operator pos:start="83:53" pos:end="83:53">+</operator> <literal type="string" pos:start="83:55" pos:end="83:57">"/"</literal> <operator pos:start="83:59" pos:end="83:59">+</operator> <name pos:start="83:61" pos:end="83:64">name</name> <operator pos:start="83:66" pos:end="83:66">+</operator> <literal type="string" pos:start="83:68" pos:end="83:73">".kml"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<decl_stmt pos:start="84:17" pos:end="84:31"><decl pos:start="84:17" pos:end="84:30"><type pos:start="84:17" pos:end="84:22"><name pos:start="84:17" pos:end="84:22">Writer</name></type> <name pos:start="84:24" pos:end="84:30">fwriter</name></decl>;</decl_stmt>

		<if_stmt pos:start="86:17" pos:end="138:17"><if pos:start="86:17" pos:end="97:17">if <condition pos:start="86:20" pos:end="86:41">(<expr pos:start="86:21" pos:end="86:40"><operator pos:start="86:21" pos:end="86:21">!</operator><call pos:start="86:22" pos:end="86:40"><name pos:start="86:22" pos:end="86:38"><name pos:start="86:22" pos:end="86:31">testexists</name><operator pos:start="86:32" pos:end="86:32">.</operator><name pos:start="86:33" pos:end="86:38">exists</name></name><argument_list pos:start="86:39" pos:end="86:40">()</argument_list></call></expr>)</condition> <block pos:start="86:43" pos:end="97:17">{<block_content pos:start="87:25" pos:end="96:25">
			<try pos:start="87:25" pos:end="96:25">try <block pos:start="87:29" pos:end="93:25">{<block_content pos:start="89:33" pos:end="92:48">

				<expr_stmt pos:start="89:33" pos:end="89:89"><expr pos:start="89:33" pos:end="89:88"><name pos:start="89:33" pos:end="89:39">fwriter</name> <operator pos:start="89:41" pos:end="89:41">=</operator> <operator pos:start="89:43" pos:end="89:45">new</operator> <call pos:start="89:47" pos:end="89:88"><name pos:start="89:47" pos:end="89:56">FileWriter</name><argument_list pos:start="89:57" pos:end="89:88">(<argument pos:start="89:58" pos:end="89:87"><expr pos:start="89:58" pos:end="89:87"><name pos:start="89:58" pos:end="89:65">datapath</name> <operator pos:start="89:67" pos:end="89:67">+</operator> <literal type="string" pos:start="89:69" pos:end="89:71">"/"</literal> <operator pos:start="89:73" pos:end="89:73">+</operator> <name pos:start="89:75" pos:end="89:78">name</name> <operator pos:start="89:80" pos:end="89:80">+</operator> <literal type="string" pos:start="89:82" pos:end="89:87">".kml"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<expr_stmt pos:start="90:33" pos:end="90:57"><expr pos:start="90:33" pos:end="90:56"><call pos:start="90:33" pos:end="90:56"><name pos:start="90:33" pos:end="90:45"><name pos:start="90:33" pos:end="90:39">fwriter</name><operator pos:start="90:40" pos:end="90:40">.</operator><name pos:start="90:41" pos:end="90:45">write</name></name><argument_list pos:start="90:46" pos:end="90:56">(<argument pos:start="90:47" pos:end="90:55"><expr pos:start="90:47" pos:end="90:55"><name pos:start="90:47" pos:end="90:55">kmlString</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<expr_stmt pos:start="91:33" pos:end="91:48"><expr pos:start="91:33" pos:end="91:47"><call pos:start="91:33" pos:end="91:47"><name pos:start="91:33" pos:end="91:45"><name pos:start="91:33" pos:end="91:39">fwriter</name><operator pos:start="91:40" pos:end="91:40">.</operator><name pos:start="91:41" pos:end="91:45">flush</name></name><argument_list pos:start="91:46" pos:end="91:47">()</argument_list></call></expr>;</expr_stmt>
				<expr_stmt pos:start="92:33" pos:end="92:48"><expr pos:start="92:33" pos:end="92:47"><call pos:start="92:33" pos:end="92:47"><name pos:start="92:33" pos:end="92:45"><name pos:start="92:33" pos:end="92:39">fwriter</name><operator pos:start="92:40" pos:end="92:40">.</operator><name pos:start="92:41" pos:end="92:45">close</name></name><argument_list pos:start="92:46" pos:end="92:47">()</argument_list></call></expr>;</expr_stmt>
			</block_content>}</block> <catch pos:start="93:27" pos:end="96:25">catch <parameter_list pos:start="93:33" pos:end="93:48">(<parameter pos:start="93:34" pos:end="93:47"><decl pos:start="93:34" pos:end="93:47"><type pos:start="93:34" pos:end="93:47"><name pos:start="93:34" pos:end="93:44">IOException</name></type> <name pos:start="93:46" pos:end="93:47">e1</name></decl></parameter>)</parameter_list> <block pos:start="93:50" pos:end="96:25">{<block_content pos:start="95:33" pos:end="95:53">
				<comment type="line" pos:start="94:33" pos:end="94:66">// TODO Auto-generated catch block</comment>
				<expr_stmt pos:start="95:33" pos:end="95:53"><expr pos:start="95:33" pos:end="95:52"><call pos:start="95:33" pos:end="95:52"><name pos:start="95:33" pos:end="95:50"><name pos:start="95:33" pos:end="95:34">e1</name><operator pos:start="95:35" pos:end="95:35">.</operator><name pos:start="95:36" pos:end="95:50">printStackTrace</name></name><argument_list pos:start="95:51" pos:end="95:52">()</argument_list></call></expr>;</expr_stmt>
			</block_content>}</block></catch></try>
		</block_content>}</block></if>

		<else pos:start="99:17" pos:end="138:17">else <block pos:start="99:22" pos:end="138:17">{<block_content pos:start="102:25" pos:end="136:25">

			<comment type="line" pos:start="101:25" pos:end="101:44">// schleifenvariable</comment>
			<decl_stmt pos:start="102:25" pos:end="102:48"><decl pos:start="102:25" pos:end="102:47"><type pos:start="102:25" pos:end="102:30"><name pos:start="102:25" pos:end="102:30">String</name></type> <name pos:start="102:32" pos:end="102:42">filecontent</name> <init pos:start="102:44" pos:end="102:47">= <expr pos:start="102:46" pos:end="102:47"><literal type="string" pos:start="102:46" pos:end="102:47">""</literal></expr></init></decl>;</decl_stmt>

			<decl_stmt pos:start="104:25" pos:end="104:78"><decl pos:start="104:25" pos:end="104:77"><type pos:start="104:25" pos:end="104:41"><name pos:start="104:25" pos:end="104:41"><name pos:start="104:25" pos:end="104:33">ArrayList</name><argument_list type="generic" pos:start="104:34" pos:end="104:41">&lt;<argument pos:start="104:35" pos:end="104:40"><name pos:start="104:35" pos:end="104:40">String</name></argument>&gt;</argument_list></name></type> <name pos:start="104:43" pos:end="104:51">newoutput</name> <init pos:start="104:53" pos:end="104:77">= <expr pos:start="104:55" pos:end="104:77"><operator pos:start="104:55" pos:end="104:57">new</operator> <call pos:start="104:59" pos:end="104:77"><name pos:start="104:59" pos:end="104:75"><name pos:start="104:59" pos:end="104:67">ArrayList</name><argument_list type="generic" pos:start="104:68" pos:end="104:75">&lt;<argument pos:start="104:69" pos:end="104:74"><name pos:start="104:69" pos:end="104:74">String</name></argument>&gt;</argument_list></name><argument_list pos:start="104:76" pos:end="104:77">()</argument_list></call></expr></init></decl>;</decl_stmt>
			<empty_stmt pos:start="105:25" pos:end="105:25">;</empty_stmt>

			<try pos:start="107:25" pos:end="119:25">try <block pos:start="107:29" pos:end="113:25">{<block_content pos:start="108:33" pos:end="111:67">
				<decl_stmt pos:start="108:33" pos:end="108:99"><decl pos:start="108:33" pos:end="108:98"><type pos:start="108:33" pos:end="108:46"><name pos:start="108:33" pos:end="108:46">BufferedReader</name></type> <name pos:start="108:48" pos:end="108:49">in</name> <init pos:start="108:51" pos:end="108:98">= <expr pos:start="108:53" pos:end="108:98"><operator pos:start="108:53" pos:end="108:55">new</operator> <call pos:start="108:57" pos:end="108:98"><name pos:start="108:57" pos:end="108:70">BufferedReader</name><argument_list pos:start="108:71" pos:end="108:98">(<argument pos:start="108:72" pos:end="108:97"><expr pos:start="108:72" pos:end="108:97"><operator pos:start="108:72" pos:end="108:74">new</operator> <call pos:start="108:76" pos:end="108:97"><name pos:start="108:76" pos:end="108:85">FileReader</name><argument_list pos:start="108:86" pos:end="108:97">(<argument pos:start="108:87" pos:end="108:96"><expr pos:start="108:87" pos:end="108:96"><name pos:start="108:87" pos:end="108:96">testexists</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
				<while pos:start="109:33" pos:end="111:67">while <condition pos:start="109:39" pos:end="109:77">(<expr pos:start="109:40" pos:end="109:76"><operator pos:start="109:40" pos:end="109:40">(</operator><name pos:start="109:41" pos:end="109:51">filecontent</name> <operator pos:start="109:53" pos:end="109:53">=</operator> <call pos:start="109:55" pos:end="109:67"><name pos:start="109:55" pos:end="109:65"><name pos:start="109:55" pos:end="109:56">in</name><operator pos:start="109:57" pos:end="109:57">.</operator><name pos:start="109:58" pos:end="109:65">readLine</name></name><argument_list pos:start="109:66" pos:end="109:67">()</argument_list></call><operator pos:start="109:68" pos:end="109:68">)</operator> <operator pos:start="109:70" pos:end="109:71">!=</operator> <literal type="null" pos:start="109:73" pos:end="109:76">null</literal></expr>)</condition><block type="pseudo" pos:start="111:41" pos:end="111:67"><block_content pos:start="111:41" pos:end="111:67">

					<expr_stmt pos:start="111:41" pos:end="111:67"><expr pos:start="111:41" pos:end="111:66"><call pos:start="111:41" pos:end="111:66"><name pos:start="111:41" pos:end="111:53"><name pos:start="111:41" pos:end="111:49">newoutput</name><operator pos:start="111:50" pos:end="111:50">.</operator><name pos:start="111:51" pos:end="111:53">add</name></name><argument_list pos:start="111:54" pos:end="111:66">(<argument pos:start="111:55" pos:end="111:65"><expr pos:start="111:55" pos:end="111:65"><name pos:start="111:55" pos:end="111:65">filecontent</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></while>

			</block_content>}</block> <catch pos:start="113:27" pos:end="116:25">catch <parameter_list pos:start="113:33" pos:end="113:58">(<parameter pos:start="113:34" pos:end="113:57"><decl pos:start="113:34" pos:end="113:57"><type pos:start="113:34" pos:end="113:57"><name pos:start="113:34" pos:end="113:54">FileNotFoundException</name></type> <name pos:start="113:56" pos:end="113:57">e1</name></decl></parameter>)</parameter_list> <block pos:start="113:60" pos:end="116:25">{<block_content pos:start="115:33" pos:end="115:53">
				<comment type="line" pos:start="114:33" pos:end="114:66">// TODO Auto-generated catch block</comment>
				<expr_stmt pos:start="115:33" pos:end="115:53"><expr pos:start="115:33" pos:end="115:52"><call pos:start="115:33" pos:end="115:52"><name pos:start="115:33" pos:end="115:50"><name pos:start="115:33" pos:end="115:34">e1</name><operator pos:start="115:35" pos:end="115:35">.</operator><name pos:start="115:36" pos:end="115:50">printStackTrace</name></name><argument_list pos:start="115:51" pos:end="115:52">()</argument_list></call></expr>;</expr_stmt>
			</block_content>}</block></catch> <catch pos:start="116:27" pos:end="119:25">catch <parameter_list pos:start="116:33" pos:end="116:48">(<parameter pos:start="116:34" pos:end="116:47"><decl pos:start="116:34" pos:end="116:47"><type pos:start="116:34" pos:end="116:47"><name pos:start="116:34" pos:end="116:44">IOException</name></type> <name pos:start="116:46" pos:end="116:47">e1</name></decl></parameter>)</parameter_list> <block pos:start="116:50" pos:end="119:25">{<block_content pos:start="118:33" pos:end="118:53">
				<comment type="line" pos:start="117:33" pos:end="117:66">// TODO Auto-generated catch block</comment>
				<expr_stmt pos:start="118:33" pos:end="118:53"><expr pos:start="118:33" pos:end="118:52"><call pos:start="118:33" pos:end="118:52"><name pos:start="118:33" pos:end="118:50"><name pos:start="118:33" pos:end="118:34">e1</name><operator pos:start="118:35" pos:end="118:35">.</operator><name pos:start="118:36" pos:end="118:50">printStackTrace</name></name><argument_list pos:start="118:51" pos:end="118:52">()</argument_list></call></expr>;</expr_stmt>
			</block_content>}</block></catch></try>

			<comment type="line" pos:start="121:25" pos:end="121:56">// newoutput.add(2, kmlelement);</comment>

			<decl_stmt pos:start="123:25" pos:end="123:44"><decl pos:start="123:25" pos:end="123:43"><type pos:start="123:25" pos:end="123:30"><name pos:start="123:25" pos:end="123:30">String</name></type> <name pos:start="123:32" pos:end="123:38">rewrite</name> <init pos:start="123:40" pos:end="123:43">= <expr pos:start="123:42" pos:end="123:43"><literal type="string" pos:start="123:42" pos:end="123:43">""</literal></expr></init></decl>;</decl_stmt>
			<for pos:start="124:25" pos:end="126:25">for <control pos:start="124:29" pos:end="124:50">(<init pos:start="124:30" pos:end="124:49"><decl pos:start="124:30" pos:end="124:49"><type pos:start="124:30" pos:end="124:35"><name pos:start="124:30" pos:end="124:35">String</name></type> <name pos:start="124:37" pos:end="124:37">s</name> <range pos:start="124:39" pos:end="124:49">: <expr pos:start="124:41" pos:end="124:49"><name pos:start="124:41" pos:end="124:49">newoutput</name></expr></range></decl></init>)</control> <block pos:start="124:52" pos:end="126:25">{<block_content pos:start="125:33" pos:end="125:45">
				<expr_stmt pos:start="125:33" pos:end="125:45"><expr pos:start="125:33" pos:end="125:44"><name pos:start="125:33" pos:end="125:39">rewrite</name> <operator pos:start="125:41" pos:end="125:42">+=</operator> <name pos:start="125:44" pos:end="125:44">s</name></expr>;</expr_stmt>
			</block_content>}</block></for>

			<try pos:start="128:25" pos:end="136:25">try <block pos:start="128:29" pos:end="133:25">{<block_content pos:start="129:33" pos:end="132:48">
				<expr_stmt pos:start="129:33" pos:end="129:89"><expr pos:start="129:33" pos:end="129:88"><name pos:start="129:33" pos:end="129:39">fwriter</name> <operator pos:start="129:41" pos:end="129:41">=</operator> <operator pos:start="129:43" pos:end="129:45">new</operator> <call pos:start="129:47" pos:end="129:88"><name pos:start="129:47" pos:end="129:56">FileWriter</name><argument_list pos:start="129:57" pos:end="129:88">(<argument pos:start="129:58" pos:end="129:87"><expr pos:start="129:58" pos:end="129:87"><name pos:start="129:58" pos:end="129:65">datapath</name> <operator pos:start="129:67" pos:end="129:67">+</operator> <literal type="string" pos:start="129:69" pos:end="129:71">"/"</literal> <operator pos:start="129:73" pos:end="129:73">+</operator> <name pos:start="129:75" pos:end="129:78">name</name> <operator pos:start="129:80" pos:end="129:80">+</operator> <literal type="string" pos:start="129:82" pos:end="129:87">".kml"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<expr_stmt pos:start="130:33" pos:end="130:55"><expr pos:start="130:33" pos:end="130:54"><call pos:start="130:33" pos:end="130:54"><name pos:start="130:33" pos:end="130:45"><name pos:start="130:33" pos:end="130:39">fwriter</name><operator pos:start="130:40" pos:end="130:40">.</operator><name pos:start="130:41" pos:end="130:45">write</name></name><argument_list pos:start="130:46" pos:end="130:54">(<argument pos:start="130:47" pos:end="130:53"><expr pos:start="130:47" pos:end="130:53"><name pos:start="130:47" pos:end="130:53">rewrite</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<expr_stmt pos:start="131:33" pos:end="131:48"><expr pos:start="131:33" pos:end="131:47"><call pos:start="131:33" pos:end="131:47"><name pos:start="131:33" pos:end="131:45"><name pos:start="131:33" pos:end="131:39">fwriter</name><operator pos:start="131:40" pos:end="131:40">.</operator><name pos:start="131:41" pos:end="131:45">flush</name></name><argument_list pos:start="131:46" pos:end="131:47">()</argument_list></call></expr>;</expr_stmt>
				<expr_stmt pos:start="132:33" pos:end="132:48"><expr pos:start="132:33" pos:end="132:47"><call pos:start="132:33" pos:end="132:47"><name pos:start="132:33" pos:end="132:45"><name pos:start="132:33" pos:end="132:39">fwriter</name><operator pos:start="132:40" pos:end="132:40">.</operator><name pos:start="132:41" pos:end="132:45">close</name></name><argument_list pos:start="132:46" pos:end="132:47">()</argument_list></call></expr>;</expr_stmt>
			</block_content>}</block> <catch pos:start="133:27" pos:end="136:25">catch <parameter_list pos:start="133:33" pos:end="133:47">(<parameter pos:start="133:34" pos:end="133:46"><decl pos:start="133:34" pos:end="133:46"><type pos:start="133:34" pos:end="133:46"><name pos:start="133:34" pos:end="133:44">IOException</name></type> <name pos:start="133:46" pos:end="133:46">e</name></decl></parameter>)</parameter_list> <block pos:start="133:49" pos:end="136:25">{<block_content pos:start="135:33" pos:end="135:52">
				<comment type="line" pos:start="134:33" pos:end="134:66">// TODO Auto-generated catch block</comment>
				<expr_stmt pos:start="135:33" pos:end="135:52"><expr pos:start="135:33" pos:end="135:51"><call pos:start="135:33" pos:end="135:51"><name pos:start="135:33" pos:end="135:49"><name pos:start="135:33" pos:end="135:33">e</name><operator pos:start="135:34" pos:end="135:34">.</operator><name pos:start="135:35" pos:end="135:49">printStackTrace</name></name><argument_list pos:start="135:50" pos:end="135:51">()</argument_list></call></expr>;</expr_stmt>
			</block_content>}</block></catch></try>

		</block_content>}</block></else></if_stmt>

	</block_content>}</block></function>

	<function pos:start="142:9" pos:end="163:9"><type pos:start="142:9" pos:end="142:22"><specifier pos:start="142:9" pos:end="142:15">private</specifier> <name pos:start="142:17" pos:end="142:22">String</name></type> <name pos:start="142:24" pos:end="142:36">createKMLBody</name><parameter_list pos:start="142:37" pos:end="142:68">(<parameter pos:start="142:38" pos:end="142:67"><decl pos:start="142:38" pos:end="142:67"><type pos:start="142:38" pos:end="142:58"><name pos:start="142:38" pos:end="142:58"><name pos:start="142:38" pos:end="142:41">List</name><argument_list type="generic" pos:start="142:42" pos:end="142:58">&lt;<argument pos:start="142:43" pos:end="142:57"><name pos:start="142:43" pos:end="142:57">UAVStateMessage</name></argument>&gt;</argument_list></name></type> <name pos:start="142:60" pos:end="142:67">messages</name></decl></parameter>)</parameter_list> <block pos:start="142:70" pos:end="163:9">{<block_content pos:start="144:17" pos:end="161:30">

		<decl_stmt pos:start="144:17" pos:end="144:57"><decl pos:start="144:17" pos:end="144:56"><type pos:start="144:17" pos:end="144:22"><name pos:start="144:17" pos:end="144:22">String</name></type> <name pos:start="144:24" pos:end="144:29">tqFile</name> <init pos:start="144:31" pos:end="144:56">= <expr pos:start="144:33" pos:end="144:56"><operator pos:start="144:33" pos:end="144:35">new</operator> <call pos:start="144:37" pos:end="144:56"><name pos:start="144:37" pos:end="144:42">String</name><argument_list pos:start="144:43" pos:end="144:56">(<argument pos:start="144:44" pos:end="144:55"><expr pos:start="144:44" pos:end="144:55"><name pos:start="144:44" pos:end="144:55">rootTemplate</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

		<decl_stmt pos:start="146:17" pos:end="146:64"><decl pos:start="146:17" pos:end="146:63"><type pos:start="146:17" pos:end="146:29"><name pos:start="146:17" pos:end="146:29">StringBuilder</name></type> <name pos:start="146:31" pos:end="146:41">cordBuilder</name> <init pos:start="146:43" pos:end="146:63">= <expr pos:start="146:45" pos:end="146:63"><operator pos:start="146:45" pos:end="146:47">new</operator> <call pos:start="146:49" pos:end="146:63"><name pos:start="146:49" pos:end="146:61">StringBuilder</name><argument_list pos:start="146:62" pos:end="146:63">()</argument_list></call></expr></init></decl>;</decl_stmt>
		<for pos:start="147:17" pos:end="152:17">for <control pos:start="147:21" pos:end="147:50">(<init pos:start="147:22" pos:end="147:49"><decl pos:start="147:22" pos:end="147:49"><type pos:start="147:22" pos:end="147:36"><name pos:start="147:22" pos:end="147:36">UAVStateMessage</name></type> <name pos:start="147:38" pos:end="147:38">m</name> <range pos:start="147:40" pos:end="147:49">: <expr pos:start="147:42" pos:end="147:49"><name pos:start="147:42" pos:end="147:49">messages</name></expr></range></decl></init>)</control> <block pos:start="147:52" pos:end="152:17">{<block_content pos:start="148:25" pos:end="151:25">
			<decl_stmt pos:start="148:25" pos:end="148:57"><decl pos:start="148:25" pos:end="148:56"><type pos:start="148:25" pos:end="148:30"><name pos:start="148:25" pos:end="148:30">String</name></type> <name pos:start="148:32" pos:end="148:34">res</name> <init pos:start="148:36" pos:end="148:56">= <expr pos:start="148:38" pos:end="148:56"><call pos:start="148:38" pos:end="148:56"><name pos:start="148:38" pos:end="148:53">createKMLElement</name><argument_list pos:start="148:54" pos:end="148:56">(<argument pos:start="148:55" pos:end="148:55"><expr pos:start="148:55" pos:end="148:55"><name pos:start="148:55" pos:end="148:55">m</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<if_stmt pos:start="149:25" pos:end="151:25"><if pos:start="149:25" pos:end="151:25">if <condition pos:start="149:28" pos:end="149:40">(<expr pos:start="149:29" pos:end="149:39"><name pos:start="149:29" pos:end="149:31">res</name> <operator pos:start="149:33" pos:end="149:34">!=</operator> <literal type="null" pos:start="149:36" pos:end="149:39">null</literal></expr>)</condition> <block pos:start="149:42" pos:end="151:25">{<block_content pos:start="150:33" pos:end="150:56">
				<expr_stmt pos:start="150:33" pos:end="150:56"><expr pos:start="150:33" pos:end="150:55"><call pos:start="150:33" pos:end="150:55"><name pos:start="150:33" pos:end="150:50"><name pos:start="150:33" pos:end="150:43">cordBuilder</name><operator pos:start="150:44" pos:end="150:44">.</operator><name pos:start="150:45" pos:end="150:50">append</name></name><argument_list pos:start="150:51" pos:end="150:55">(<argument pos:start="150:52" pos:end="150:54"><expr pos:start="150:52" pos:end="150:54"><name pos:start="150:52" pos:end="150:54">res</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			</block_content>}</block></if></if_stmt>
		</block_content>}</block></for>

		<expr_stmt pos:start="154:17" pos:end="154:75"><expr pos:start="154:17" pos:end="154:74"><name pos:start="154:17" pos:end="154:22">tqFile</name> <operator pos:start="154:24" pos:end="154:24">=</operator> <call pos:start="154:26" pos:end="154:74"><name pos:start="154:26" pos:end="154:39"><name pos:start="154:26" pos:end="154:31">tqFile</name><operator pos:start="154:32" pos:end="154:32">.</operator><name pos:start="154:33" pos:end="154:39">replace</name></name><argument_list pos:start="154:40" pos:end="154:74">(<argument pos:start="154:41" pos:end="154:49"><expr pos:start="154:41" pos:end="154:49"><literal type="string" pos:start="154:41" pos:end="154:49">"%points"</literal></expr></argument>, <argument pos:start="154:52" pos:end="154:73"><expr pos:start="154:52" pos:end="154:73"><call pos:start="154:52" pos:end="154:73"><name pos:start="154:52" pos:end="154:71"><name pos:start="154:52" pos:end="154:62">cordBuilder</name><operator pos:start="154:63" pos:end="154:63">.</operator><name pos:start="154:64" pos:end="154:71">toString</name></name><argument_list pos:start="154:72" pos:end="154:73">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		<comment type="line" pos:start="156:17" pos:end="156:58">// StringBuilder sb = new StringBuilder();</comment>
		<comment type="line" pos:start="157:17" pos:end="157:43">// content.forEach(str -&gt; {</comment>
		<comment type="line" pos:start="158:17" pos:end="158:34">// sb.append(str);</comment>
		<comment type="line" pos:start="159:17" pos:end="159:35">// sb.append("\n");</comment>
		<comment type="line" pos:start="160:17" pos:end="160:22">// });</comment>
		<return pos:start="161:17" pos:end="161:30">return <expr pos:start="161:24" pos:end="161:29"><name pos:start="161:24" pos:end="161:29">tqFile</name></expr>;</return>

	</block_content>}</block></function>

	<function pos:start="165:9" pos:end="183:9"><type pos:start="165:9" pos:end="165:22"><specifier pos:start="165:9" pos:end="165:15">private</specifier> <name pos:start="165:17" pos:end="165:22">String</name></type> <name pos:start="165:24" pos:end="165:39">createKMLElement</name><parameter_list pos:start="165:40" pos:end="165:58">(<parameter pos:start="165:41" pos:end="165:57"><decl pos:start="165:41" pos:end="165:57"><type pos:start="165:41" pos:end="165:55"><name pos:start="165:41" pos:end="165:55">UAVStateMessage</name></type> <name pos:start="165:57" pos:end="165:57">m</name></decl></parameter>)</parameter_list> <block pos:start="165:60" pos:end="183:9">{<block_content pos:start="169:17" pos:end="182:33">

		<comment type="line" pos:start="167:17" pos:end="167:84">// DateFormat df = new SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss'Z'");</comment>
		<comment type="line" pos:start="168:17" pos:end="168:64">// df.setTimeZone(TimeZone.getTimeZone("Zulu"));</comment>
		<decl_stmt pos:start="169:17" pos:end="169:101"><decl pos:start="169:17" pos:end="169:100"><type pos:start="169:17" pos:end="169:22"><name pos:start="169:17" pos:end="169:22">String</name></type> <name pos:start="169:24" pos:end="169:25">ts</name> <init pos:start="169:27" pos:end="169:100">= <expr pos:start="169:29" pos:end="169:100"><call pos:start="169:29" pos:end="169:100"><name pos:start="169:29" pos:end="169:54"><name pos:start="169:29" pos:end="169:38">FormatUtil</name><operator pos:start="169:39" pos:end="169:39">.</operator><name pos:start="169:40" pos:end="169:54">formatTimestamp</name></name><argument_list pos:start="169:55" pos:end="169:100">(<argument pos:start="169:56" pos:end="169:71"><expr pos:start="169:56" pos:end="169:71"><call pos:start="169:56" pos:end="169:71"><name pos:start="169:56" pos:end="169:69"><name pos:start="169:56" pos:end="169:56">m</name><operator pos:start="169:57" pos:end="169:57">.</operator><name pos:start="169:58" pos:end="169:69">getTimestamp</name></name><argument_list pos:start="169:70" pos:end="169:71">()</argument_list></call></expr></argument>, <argument pos:start="169:74" pos:end="169:99"><expr pos:start="169:74" pos:end="169:99"><literal type="string" pos:start="169:74" pos:end="169:99">"yyyy-MM-dd'T'HH:mm:ss'Z'"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

		<if_stmt pos:start="171:17" pos:end="173:17"><if pos:start="171:17" pos:end="173:17">if <condition pos:start="171:20" pos:end="171:48">(<expr pos:start="171:21" pos:end="171:47"><operator pos:start="171:21" pos:end="171:21">!</operator><call pos:start="171:22" pos:end="171:33"><name pos:start="171:22" pos:end="171:31"><name pos:start="171:22" pos:end="171:22">m</name><operator pos:start="171:23" pos:end="171:23">.</operator><name pos:start="171:24" pos:end="171:31">getUavid</name></name><argument_list pos:start="171:32" pos:end="171:33">()</argument_list></call><operator pos:start="171:34" pos:end="171:34">.</operator><call pos:start="171:35" pos:end="171:47"><name pos:start="171:35" pos:end="171:40">equals</name><argument_list pos:start="171:41" pos:end="171:47">(<argument pos:start="171:42" pos:end="171:46"><expr pos:start="171:42" pos:end="171:46"><name pos:start="171:42" pos:end="171:46">UAVID</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="171:50" pos:end="173:17">{<block_content pos:start="172:25" pos:end="172:36">
			<return pos:start="172:25" pos:end="172:36">return <expr pos:start="172:32" pos:end="172:35"><literal type="null" pos:start="172:32" pos:end="172:35">null</literal></expr>;</return>
		</block_content>}</block></if></if_stmt>

		<decl_stmt pos:start="175:17" pos:end="175:54"><decl pos:start="175:17" pos:end="175:53"><type pos:start="175:17" pos:end="175:22"><name pos:start="175:17" pos:end="175:22">String</name></type> <name pos:start="175:24" pos:end="175:25">tp</name> <init pos:start="175:27" pos:end="175:53">= <expr pos:start="175:29" pos:end="175:53"><operator pos:start="175:29" pos:end="175:31">new</operator> <call pos:start="175:33" pos:end="175:53"><name pos:start="175:33" pos:end="175:38">String</name><argument_list pos:start="175:39" pos:end="175:53">(<argument pos:start="175:40" pos:end="175:52"><expr pos:start="175:40" pos:end="175:52"><name pos:start="175:40" pos:end="175:52">pointTemplate</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

		<expr_stmt pos:start="177:17" pos:end="177:88"><expr pos:start="177:17" pos:end="177:87"><name pos:start="177:17" pos:end="177:18">tp</name> <operator pos:start="177:20" pos:end="177:20">=</operator> <call pos:start="177:22" pos:end="177:87"><name pos:start="177:22" pos:end="177:31"><name pos:start="177:22" pos:end="177:23">tp</name><operator pos:start="177:24" pos:end="177:24">.</operator><name pos:start="177:25" pos:end="177:31">replace</name></name><argument_list pos:start="177:32" pos:end="177:87">(<argument pos:start="177:33" pos:end="177:38"><expr pos:start="177:33" pos:end="177:38"><literal type="string" pos:start="177:33" pos:end="177:38">"%lat"</literal></expr></argument>, <argument pos:start="177:41" pos:end="177:86"><expr pos:start="177:41" pos:end="177:86"><call pos:start="177:41" pos:end="177:86"><name pos:start="177:41" pos:end="177:55"><name pos:start="177:41" pos:end="177:46">Double</name><operator pos:start="177:47" pos:end="177:47">.</operator><name pos:start="177:48" pos:end="177:55">toString</name></name><argument_list pos:start="177:56" pos:end="177:86">(<argument pos:start="177:57" pos:end="177:85"><expr pos:start="177:57" pos:end="177:85"><call pos:start="177:57" pos:end="177:71"><name pos:start="177:57" pos:end="177:69"><name pos:start="177:57" pos:end="177:57">m</name><operator pos:start="177:58" pos:end="177:58">.</operator><name pos:start="177:59" pos:end="177:69">getLocation</name></name><argument_list pos:start="177:70" pos:end="177:71">()</argument_list></call><operator pos:start="177:72" pos:end="177:72">.</operator><call pos:start="177:73" pos:end="177:85"><name pos:start="177:73" pos:end="177:83">getLatitude</name><argument_list pos:start="177:84" pos:end="177:85">()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt pos:start="178:17" pos:end="178:89"><expr pos:start="178:17" pos:end="178:88"><name pos:start="178:17" pos:end="178:18">tp</name> <operator pos:start="178:20" pos:end="178:20">=</operator> <call pos:start="178:22" pos:end="178:88"><name pos:start="178:22" pos:end="178:31"><name pos:start="178:22" pos:end="178:23">tp</name><operator pos:start="178:24" pos:end="178:24">.</operator><name pos:start="178:25" pos:end="178:31">replace</name></name><argument_list pos:start="178:32" pos:end="178:88">(<argument pos:start="178:33" pos:end="178:38"><expr pos:start="178:33" pos:end="178:38"><literal type="string" pos:start="178:33" pos:end="178:38">"%lon"</literal></expr></argument>, <argument pos:start="178:41" pos:end="178:87"><expr pos:start="178:41" pos:end="178:87"><call pos:start="178:41" pos:end="178:87"><name pos:start="178:41" pos:end="178:55"><name pos:start="178:41" pos:end="178:46">Double</name><operator pos:start="178:47" pos:end="178:47">.</operator><name pos:start="178:48" pos:end="178:55">toString</name></name><argument_list pos:start="178:56" pos:end="178:87">(<argument pos:start="178:57" pos:end="178:86"><expr pos:start="178:57" pos:end="178:86"><call pos:start="178:57" pos:end="178:71"><name pos:start="178:57" pos:end="178:69"><name pos:start="178:57" pos:end="178:57">m</name><operator pos:start="178:58" pos:end="178:58">.</operator><name pos:start="178:59" pos:end="178:69">getLocation</name></name><argument_list pos:start="178:70" pos:end="178:71">()</argument_list></call><operator pos:start="178:72" pos:end="178:72">.</operator><call pos:start="178:73" pos:end="178:86"><name pos:start="178:73" pos:end="178:84">getLongitude</name><argument_list pos:start="178:85" pos:end="178:86">()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt pos:start="179:17" pos:end="179:88"><expr pos:start="179:17" pos:end="179:87"><name pos:start="179:17" pos:end="179:18">tp</name> <operator pos:start="179:20" pos:end="179:20">=</operator> <call pos:start="179:22" pos:end="179:87"><name pos:start="179:22" pos:end="179:31"><name pos:start="179:22" pos:end="179:23">tp</name><operator pos:start="179:24" pos:end="179:24">.</operator><name pos:start="179:25" pos:end="179:31">replace</name></name><argument_list pos:start="179:32" pos:end="179:87">(<argument pos:start="179:33" pos:end="179:38"><expr pos:start="179:33" pos:end="179:38"><literal type="string" pos:start="179:33" pos:end="179:38">"%alt"</literal></expr></argument>, <argument pos:start="179:41" pos:end="179:86"><expr pos:start="179:41" pos:end="179:86"><call pos:start="179:41" pos:end="179:86"><name pos:start="179:41" pos:end="179:55"><name pos:start="179:41" pos:end="179:46">Double</name><operator pos:start="179:47" pos:end="179:47">.</operator><name pos:start="179:48" pos:end="179:55">toString</name></name><argument_list pos:start="179:56" pos:end="179:86">(<argument pos:start="179:57" pos:end="179:85"><expr pos:start="179:57" pos:end="179:85"><call pos:start="179:57" pos:end="179:71"><name pos:start="179:57" pos:end="179:69"><name pos:start="179:57" pos:end="179:57">m</name><operator pos:start="179:58" pos:end="179:58">.</operator><name pos:start="179:59" pos:end="179:69">getLocation</name></name><argument_list pos:start="179:70" pos:end="179:71">()</argument_list></call><operator pos:start="179:72" pos:end="179:72">.</operator><call pos:start="179:73" pos:end="179:85"><name pos:start="179:73" pos:end="179:83">getAltitude</name><argument_list pos:start="179:84" pos:end="179:85">()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt pos:start="180:17" pos:end="180:45"><expr pos:start="180:17" pos:end="180:44"><name pos:start="180:17" pos:end="180:18">tp</name> <operator pos:start="180:20" pos:end="180:20">=</operator> <call pos:start="180:22" pos:end="180:44"><name pos:start="180:22" pos:end="180:31"><name pos:start="180:22" pos:end="180:23">tp</name><operator pos:start="180:24" pos:end="180:24">.</operator><name pos:start="180:25" pos:end="180:31">replace</name></name><argument_list pos:start="180:32" pos:end="180:44">(<argument pos:start="180:33" pos:end="180:39"><expr pos:start="180:33" pos:end="180:39"><literal type="string" pos:start="180:33" pos:end="180:39">"%time"</literal></expr></argument>, <argument pos:start="180:42" pos:end="180:43"><expr pos:start="180:42" pos:end="180:43"><name pos:start="180:42" pos:end="180:43">ts</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		<return pos:start="182:17" pos:end="182:33">return <expr pos:start="182:24" pos:end="182:32"><name pos:start="182:24" pos:end="182:25">tp</name> <operator pos:start="182:27" pos:end="182:27">+</operator> <literal type="string" pos:start="182:29" pos:end="182:32">"\n"</literal></expr>;</return>
	</block_content>}</block></function>
}</block></class>
</unit>
