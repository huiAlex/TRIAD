<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="Java" filename="flatCode/RemoteInfoObject.java" pos:tabs="8"><package pos:start="1:1" pos:end="1:44">package <name pos:start="1:9" pos:end="1:43"><name pos:start="1:9" pos:end="1:11">edu</name><operator pos:start="1:12" pos:end="1:12">.</operator><name pos:start="1:13" pos:end="1:14">nd</name><operator pos:start="1:15" pos:end="1:15">.</operator><name pos:start="1:16" pos:end="1:24">dronology</name><operator pos:start="1:25" pos:end="1:25">.</operator><name pos:start="1:26" pos:end="1:33">services</name><operator pos:start="1:34" pos:end="1:34">.</operator><name pos:start="1:35" pos:end="1:38">core</name><operator pos:start="1:39" pos:end="1:39">.</operator><name pos:start="1:40" pos:end="1:43">info</name></name>;</package>

<import pos:start="3:1" pos:end="3:21">import <name pos:start="3:8" pos:end="3:20"><name pos:start="3:8" pos:end="3:11">java</name><operator pos:start="3:12" pos:end="3:12">.</operator><name pos:start="3:13" pos:end="3:16">util</name><operator pos:start="3:17" pos:end="3:17">.</operator><name pos:start="3:18" pos:end="3:20">Map</name></name>;</import>
<import pos:start="4:1" pos:end="4:27">import <name pos:start="4:8" pos:end="4:26"><name pos:start="4:8" pos:end="4:11">java</name><operator pos:start="4:12" pos:end="4:12">.</operator><name pos:start="4:13" pos:end="4:16">util</name><operator pos:start="4:17" pos:end="4:17">.</operator><name pos:start="4:18" pos:end="4:20">Map</name><operator pos:start="4:21" pos:end="4:21">.</operator><name pos:start="4:22" pos:end="4:26">Entry</name></name>;</import>

<import pos:start="6:1" pos:end="6:60">import <name pos:start="6:8" pos:end="6:59"><name pos:start="6:8" pos:end="6:10">edu</name><operator pos:start="6:11" pos:end="6:11">.</operator><name pos:start="6:12" pos:end="6:13">nd</name><operator pos:start="6:14" pos:end="6:14">.</operator><name pos:start="6:15" pos:end="6:23">dronology</name><operator pos:start="6:24" pos:end="6:24">.</operator><name pos:start="6:25" pos:end="6:32">services</name><operator pos:start="6:33" pos:end="6:33">.</operator><name pos:start="6:34" pos:end="6:37">core</name><operator pos:start="6:38" pos:end="6:38">.</operator><name pos:start="6:39" pos:end="6:41">api</name><operator pos:start="6:42" pos:end="6:42">.</operator><name pos:start="6:43" pos:end="6:59">IRemoteInfoObject</name></name>;</import>

<import pos:start="8:1" pos:end="8:21">import <name pos:start="8:8" pos:end="8:20"><name pos:start="8:8" pos:end="8:11">java</name><operator pos:start="8:12" pos:end="8:12">.</operator><name pos:start="8:13" pos:end="8:16">util</name><operator pos:start="8:17" pos:end="8:17">.</operator><name pos:start="8:18" pos:end="8:20">Set</name></name>;</import>
<import pos:start="9:1" pos:end="9:25">import <name pos:start="9:8" pos:end="9:24"><name pos:start="9:8" pos:end="9:11">java</name><operator pos:start="9:12" pos:end="9:12">.</operator><name pos:start="9:13" pos:end="9:16">util</name><operator pos:start="9:17" pos:end="9:17">.</operator><name pos:start="9:18" pos:end="9:24">TreeMap</name></name>;</import>

<comment type="block" format="javadoc" pos:start="11:1" pos:end="17:3">/**
 * 
 * Abstract base class for all info objects.
 * 
 * @author Michael Vierhauser
 * 
 */</comment>
<class pos:start="18:1" pos:end="108:1"><specifier pos:start="18:1" pos:end="18:6">public</specifier> <specifier pos:start="18:8" pos:end="18:15">abstract</specifier> class <name pos:start="18:23" pos:end="18:38">RemoteInfoObject</name> <super_list pos:start="18:40" pos:end="18:67"><implements pos:start="18:40" pos:end="18:67">implements <super pos:start="18:51" pos:end="18:67"><name pos:start="18:51" pos:end="18:67">IRemoteInfoObject</name></super></implements></super_list> <block pos:start="18:69" pos:end="108:1">{

	<comment type="block" format="javadoc" pos:start="20:9" pos:end="22:11">/**
	 * 
	 */</comment>
	<decl_stmt pos:start="23:9" pos:end="23:75"><decl pos:start="23:9" pos:end="23:74"><type pos:start="23:9" pos:end="23:33"><specifier pos:start="23:9" pos:end="23:15">private</specifier> <specifier pos:start="23:17" pos:end="23:22">static</specifier> <specifier pos:start="23:24" pos:end="23:28">final</specifier> <name pos:start="23:30" pos:end="23:33">long</name></type> <name pos:start="23:35" pos:end="23:50">serialVersionUID</name> <init pos:start="23:52" pos:end="23:74">= <expr pos:start="23:54" pos:end="23:74"><operator pos:start="23:54" pos:end="23:54">-</operator><literal type="number" pos:start="23:55" pos:end="23:74">1610958467030762516L</literal></expr></init></decl>;</decl_stmt>
	<decl_stmt pos:start="24:9" pos:end="24:28"><decl pos:start="24:9" pos:end="24:27"><type pos:start="24:9" pos:end="24:22"><specifier pos:start="24:9" pos:end="24:15">private</specifier> <name pos:start="24:17" pos:end="24:22">String</name></type> <name pos:start="24:24" pos:end="24:27">name</name></decl>;</decl_stmt>
	<decl_stmt pos:start="25:9" pos:end="25:26"><decl pos:start="25:9" pos:end="25:25"><type pos:start="25:9" pos:end="25:22"><specifier pos:start="25:9" pos:end="25:15">private</specifier> <name pos:start="25:17" pos:end="25:22">String</name></type> <name pos:start="25:24" pos:end="25:25">id</name></decl>;</decl_stmt>
	<decl_stmt pos:start="26:9" pos:end="26:65"><decl pos:start="26:9" pos:end="26:64"><type pos:start="26:9" pos:end="26:35"><specifier pos:start="26:9" pos:end="26:15">private</specifier> <name pos:start="26:17" pos:end="26:35"><name pos:start="26:17" pos:end="26:19">Map</name><argument_list type="generic" pos:start="26:20" pos:end="26:35">&lt;<argument pos:start="26:21" pos:end="26:26"><name pos:start="26:21" pos:end="26:26">String</name></argument>, <argument pos:start="26:29" pos:end="26:34"><name pos:start="26:29" pos:end="26:34">String</name></argument>&gt;</argument_list></name></type> <name pos:start="26:37" pos:end="26:46">attributes</name> <init pos:start="26:48" pos:end="26:64">= <expr pos:start="26:50" pos:end="26:64"><operator pos:start="26:50" pos:end="26:52">new</operator> <call pos:start="26:54" pos:end="26:64"><name pos:start="26:54" pos:end="26:62"><name pos:start="26:54" pos:end="26:60">TreeMap</name><argument_list type="generic" pos:start="26:61" pos:end="26:62">&lt;&gt;</argument_list></name><argument_list pos:start="26:63" pos:end="26:64">()</argument_list></call></expr></init></decl>;</decl_stmt>

	<comment type="block" format="javadoc" pos:start="28:9" pos:end="33:11">/**
	 * @param name
	 *          The name of the object; must not be null.
	 * @param id
	 *          The unique id of the object; must not be null.
	 */</comment>
	<constructor pos:start="34:9" pos:end="40:9"><specifier pos:start="34:9" pos:end="34:14">public</specifier> <name pos:start="34:16" pos:end="34:31">RemoteInfoObject</name><parameter_list pos:start="34:32" pos:end="34:55">(<parameter pos:start="34:33" pos:end="34:43"><decl pos:start="34:33" pos:end="34:43"><type pos:start="34:33" pos:end="34:43"><name pos:start="34:33" pos:end="34:38">String</name></type> <name pos:start="34:40" pos:end="34:43">name</name></decl></parameter>, <parameter pos:start="34:46" pos:end="34:54"><decl pos:start="34:46" pos:end="34:54"><type pos:start="34:46" pos:end="34:54"><name pos:start="34:46" pos:end="34:51">String</name></type> <name pos:start="34:53" pos:end="34:54">id</name></decl></parameter>)</parameter_list> <block pos:start="34:57" pos:end="40:9">{<block_content pos:start="35:17" pos:end="39:29">
		<if_stmt pos:start="35:17" pos:end="37:17"><if pos:start="35:17" pos:end="37:17">if <condition pos:start="35:20" pos:end="35:47">(<expr pos:start="35:21" pos:end="35:46"><name pos:start="35:21" pos:end="35:24">name</name> <operator pos:start="35:26" pos:end="35:27">==</operator> <literal type="null" pos:start="35:29" pos:end="35:32">null</literal> <operator pos:start="35:34" pos:end="35:35">||</operator> <name pos:start="35:37" pos:end="35:38">id</name> <operator pos:start="35:40" pos:end="35:41">==</operator> <literal type="null" pos:start="35:43" pos:end="35:46">null</literal></expr>)</condition> <block pos:start="35:49" pos:end="37:17">{<block_content pos:start="36:25" pos:end="36:90">
			<throw pos:start="36:25" pos:end="36:90">throw <expr pos:start="36:31" pos:end="36:89"><operator pos:start="36:31" pos:end="36:33">new</operator> <call pos:start="36:35" pos:end="36:89"><name pos:start="36:35" pos:end="36:58">IllegalArgumentException</name><argument_list pos:start="36:59" pos:end="36:89">(<argument pos:start="36:60" pos:end="36:88"><expr pos:start="36:60" pos:end="36:88"><literal type="string" pos:start="36:60" pos:end="36:88">"Parameter must not be null!"</literal></expr></argument>)</argument_list></call></expr>;</throw>
		</block_content>}</block></if></if_stmt>
		<expr_stmt pos:start="38:17" pos:end="38:33"><expr pos:start="38:17" pos:end="38:32"><name pos:start="38:17" pos:end="38:25"><name pos:start="38:17" pos:end="38:20">this</name><operator pos:start="38:21" pos:end="38:21">.</operator><name pos:start="38:22" pos:end="38:25">name</name></name> <operator pos:start="38:27" pos:end="38:27">=</operator> <name pos:start="38:29" pos:end="38:32">name</name></expr>;</expr_stmt>
		<expr_stmt pos:start="39:17" pos:end="39:29"><expr pos:start="39:17" pos:end="39:28"><name pos:start="39:17" pos:end="39:23"><name pos:start="39:17" pos:end="39:20">this</name><operator pos:start="39:21" pos:end="39:21">.</operator><name pos:start="39:22" pos:end="39:23">id</name></name> <operator pos:start="39:25" pos:end="39:25">=</operator> <name pos:start="39:27" pos:end="39:28">id</name></expr>;</expr_stmt>
	</block_content>}</block></constructor>

	<function pos:start="42:9" pos:end="45:9"><annotation pos:start="42:9" pos:end="42:17">@<name pos:start="42:10" pos:end="42:17">Override</name></annotation>
	<type pos:start="43:9" pos:end="43:21"><specifier pos:start="43:9" pos:end="43:14">public</specifier> <name pos:start="43:16" pos:end="43:21">String</name></type> <name pos:start="43:23" pos:end="43:29">getName</name><parameter_list pos:start="43:30" pos:end="43:31">()</parameter_list> <block pos:start="43:33" pos:end="45:9">{<block_content pos:start="44:17" pos:end="44:28">
		<return pos:start="44:17" pos:end="44:28">return <expr pos:start="44:24" pos:end="44:27"><name pos:start="44:24" pos:end="44:27">name</name></expr>;</return>
	</block_content>}</block></function>

	<function pos:start="47:9" pos:end="50:9"><annotation pos:start="47:9" pos:end="47:17">@<name pos:start="47:10" pos:end="47:17">Override</name></annotation>
	<type pos:start="48:9" pos:end="48:21"><specifier pos:start="48:9" pos:end="48:14">public</specifier> <name pos:start="48:16" pos:end="48:21">String</name></type> <name pos:start="48:23" pos:end="48:27">getId</name><parameter_list pos:start="48:28" pos:end="48:29">()</parameter_list> <block pos:start="48:31" pos:end="50:9">{<block_content pos:start="49:17" pos:end="49:26">
		<return pos:start="49:17" pos:end="49:26">return <expr pos:start="49:24" pos:end="49:25"><name pos:start="49:24" pos:end="49:25">id</name></expr>;</return>
	</block_content>}</block></function>

	<function pos:start="52:9" pos:end="55:9"><annotation pos:start="52:9" pos:end="52:17">@<name pos:start="52:10" pos:end="52:17">Override</name></annotation>
	<type pos:start="53:9" pos:end="53:41"><specifier pos:start="53:9" pos:end="53:14">public</specifier> <name pos:start="53:16" pos:end="53:41"><name pos:start="53:16" pos:end="53:18">Set</name><argument_list type="generic" pos:start="53:19" pos:end="53:41">&lt;<argument pos:start="53:20" pos:end="53:40"><name pos:start="53:20" pos:end="53:40"><name pos:start="53:20" pos:end="53:24">Entry</name><argument_list type="generic" pos:start="53:25" pos:end="53:40">&lt;<argument pos:start="53:26" pos:end="53:31"><name pos:start="53:26" pos:end="53:31">String</name></argument>, <argument pos:start="53:34" pos:end="53:39"><name pos:start="53:34" pos:end="53:39">String</name></argument>&gt;</argument_list></name></argument>&gt;</argument_list></name></type> <name pos:start="53:43" pos:end="53:55">getAttributes</name><parameter_list pos:start="53:56" pos:end="53:57">()</parameter_list> <block pos:start="53:59" pos:end="55:9">{<block_content pos:start="54:17" pos:end="54:45">
		<return pos:start="54:17" pos:end="54:45">return <expr pos:start="54:24" pos:end="54:44"><call pos:start="54:24" pos:end="54:44"><name pos:start="54:24" pos:end="54:42"><name pos:start="54:24" pos:end="54:33">attributes</name><operator pos:start="54:34" pos:end="54:34">.</operator><name pos:start="54:35" pos:end="54:42">entrySet</name></name><argument_list pos:start="54:43" pos:end="54:44">()</argument_list></call></expr>;</return>
	</block_content>}</block></function>

	<function pos:start="57:9" pos:end="63:9"><annotation pos:start="57:9" pos:end="57:17">@<name pos:start="57:10" pos:end="57:17">Override</name></annotation>
	<type pos:start="58:9" pos:end="58:19"><specifier pos:start="58:9" pos:end="58:14">public</specifier> <name pos:start="58:16" pos:end="58:19">void</name></type> <name pos:start="58:21" pos:end="58:32">addAttribute</name><parameter_list pos:start="58:33" pos:end="58:58">(<parameter pos:start="58:34" pos:end="58:43"><decl pos:start="58:34" pos:end="58:43"><type pos:start="58:34" pos:end="58:43"><name pos:start="58:34" pos:end="58:39">String</name></type> <name pos:start="58:41" pos:end="58:43">key</name></decl></parameter>, <parameter pos:start="58:46" pos:end="58:57"><decl pos:start="58:46" pos:end="58:57"><type pos:start="58:46" pos:end="58:57"><name pos:start="58:46" pos:end="58:51">String</name></type> <name pos:start="58:53" pos:end="58:57">value</name></decl></parameter>)</parameter_list> <block pos:start="58:60" pos:end="63:9">{<block_content pos:start="59:17" pos:end="62:43">
		<if_stmt pos:start="59:17" pos:end="61:17"><if pos:start="59:17" pos:end="61:17">if <condition pos:start="59:20" pos:end="59:49">(<expr pos:start="59:21" pos:end="59:48"><name pos:start="59:21" pos:end="59:23">key</name> <operator pos:start="59:25" pos:end="59:26">==</operator> <literal type="null" pos:start="59:28" pos:end="59:31">null</literal> <operator pos:start="59:33" pos:end="59:34">||</operator> <name pos:start="59:36" pos:end="59:40">value</name> <operator pos:start="59:42" pos:end="59:43">==</operator> <literal type="null" pos:start="59:45" pos:end="59:48">null</literal></expr>)</condition> <block pos:start="59:51" pos:end="61:17">{<block_content pos:start="60:25" pos:end="60:90">
			<throw pos:start="60:25" pos:end="60:90">throw <expr pos:start="60:31" pos:end="60:89"><operator pos:start="60:31" pos:end="60:33">new</operator> <call pos:start="60:35" pos:end="60:89"><name pos:start="60:35" pos:end="60:58">IllegalArgumentException</name><argument_list pos:start="60:59" pos:end="60:89">(<argument pos:start="60:60" pos:end="60:88"><expr pos:start="60:60" pos:end="60:88"><literal type="string" pos:start="60:60" pos:end="60:88">"Parameter must not be null!"</literal></expr></argument>)</argument_list></call></expr>;</throw>
		</block_content>}</block></if></if_stmt>
		<expr_stmt pos:start="62:17" pos:end="62:43"><expr pos:start="62:17" pos:end="62:42"><call pos:start="62:17" pos:end="62:42"><name pos:start="62:17" pos:end="62:30"><name pos:start="62:17" pos:end="62:26">attributes</name><operator pos:start="62:27" pos:end="62:27">.</operator><name pos:start="62:28" pos:end="62:30">put</name></name><argument_list pos:start="62:31" pos:end="62:42">(<argument pos:start="62:32" pos:end="62:34"><expr pos:start="62:32" pos:end="62:34"><name pos:start="62:32" pos:end="62:34">key</name></expr></argument>, <argument pos:start="62:37" pos:end="62:41"><expr pos:start="62:37" pos:end="62:41"><name pos:start="62:37" pos:end="62:41">value</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	</block_content>}</block></function>

	<function pos:start="65:9" pos:end="74:9"><annotation pos:start="65:9" pos:end="65:17">@<name pos:start="65:10" pos:end="65:17">Override</name></annotation>
	<type pos:start="66:9" pos:end="66:21"><specifier pos:start="66:9" pos:end="66:14">public</specifier> <name pos:start="66:16" pos:end="66:21">String</name></type> <name pos:start="66:23" pos:end="66:34">getAttribute</name><parameter_list pos:start="66:35" pos:end="66:46">(<parameter pos:start="66:36" pos:end="66:45"><decl pos:start="66:36" pos:end="66:45"><type pos:start="66:36" pos:end="66:41"><name pos:start="66:36" pos:end="66:41">String</name></type> <name pos:start="66:43" pos:end="66:45">key</name></decl></parameter>)</parameter_list> <block pos:start="66:48" pos:end="74:9">{<block_content pos:start="67:17" pos:end="73:28">
		<if_stmt pos:start="67:17" pos:end="69:17"><if pos:start="67:17" pos:end="69:17">if <condition pos:start="67:20" pos:end="67:32">(<expr pos:start="67:21" pos:end="67:31"><name pos:start="67:21" pos:end="67:23">key</name> <operator pos:start="67:25" pos:end="67:26">==</operator> <literal type="null" pos:start="67:28" pos:end="67:31">null</literal></expr>)</condition> <block pos:start="67:34" pos:end="69:17">{<block_content pos:start="68:25" pos:end="68:90">
			<throw pos:start="68:25" pos:end="68:90">throw <expr pos:start="68:31" pos:end="68:89"><operator pos:start="68:31" pos:end="68:33">new</operator> <call pos:start="68:35" pos:end="68:89"><name pos:start="68:35" pos:end="68:58">IllegalArgumentException</name><argument_list pos:start="68:59" pos:end="68:89">(<argument pos:start="68:60" pos:end="68:88"><expr pos:start="68:60" pos:end="68:88"><literal type="string" pos:start="68:60" pos:end="68:88">"Parameter must not be null!"</literal></expr></argument>)</argument_list></call></expr>;</throw>
		</block_content>}</block></if></if_stmt>
		<if_stmt pos:start="70:17" pos:end="72:17"><if pos:start="70:17" pos:end="72:17">if <condition pos:start="70:20" pos:end="70:48">(<expr pos:start="70:21" pos:end="70:47"><call pos:start="70:21" pos:end="70:47"><name pos:start="70:21" pos:end="70:42"><name pos:start="70:21" pos:end="70:30">attributes</name><operator pos:start="70:31" pos:end="70:31">.</operator><name pos:start="70:32" pos:end="70:42">containsKey</name></name><argument_list pos:start="70:43" pos:end="70:47">(<argument pos:start="70:44" pos:end="70:46"><expr pos:start="70:44" pos:end="70:46"><name pos:start="70:44" pos:end="70:46">key</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="70:50" pos:end="72:17">{<block_content pos:start="71:25" pos:end="71:51">
			<return pos:start="71:25" pos:end="71:51">return <expr pos:start="71:32" pos:end="71:50"><call pos:start="71:32" pos:end="71:50"><name pos:start="71:32" pos:end="71:45"><name pos:start="71:32" pos:end="71:41">attributes</name><operator pos:start="71:42" pos:end="71:42">.</operator><name pos:start="71:43" pos:end="71:45">get</name></name><argument_list pos:start="71:46" pos:end="71:50">(<argument pos:start="71:47" pos:end="71:49"><expr pos:start="71:47" pos:end="71:49"><name pos:start="71:47" pos:end="71:49">key</name></expr></argument>)</argument_list></call></expr>;</return>
		</block_content>}</block></if></if_stmt>
		<return pos:start="73:17" pos:end="73:28">return <expr pos:start="73:24" pos:end="73:27"><literal type="null" pos:start="73:24" pos:end="73:27">null</literal></expr>;</return>
	</block_content>}</block></function>

	<function pos:start="76:9" pos:end="82:9"><annotation pos:start="76:9" pos:end="76:17">@<name pos:start="76:10" pos:end="76:17">Override</name></annotation>
	<type pos:start="77:9" pos:end="77:18"><specifier pos:start="77:9" pos:end="77:14">public</specifier> <name pos:start="77:16" pos:end="77:18">int</name></type> <name pos:start="77:20" pos:end="77:27">hashCode</name><parameter_list pos:start="77:28" pos:end="77:29">()</parameter_list> <block pos:start="77:31" pos:end="82:9">{<block_content pos:start="78:17" pos:end="81:30">
		<decl_stmt pos:start="78:17" pos:end="78:37"><decl pos:start="78:17" pos:end="78:36"><type pos:start="78:17" pos:end="78:25"><specifier pos:start="78:17" pos:end="78:21">final</specifier> <name pos:start="78:23" pos:end="78:25">int</name></type> <name pos:start="78:27" pos:end="78:31">prime</name> <init pos:start="78:33" pos:end="78:36">= <expr pos:start="78:35" pos:end="78:36"><literal type="number" pos:start="78:35" pos:end="78:36">31</literal></expr></init></decl>;</decl_stmt>
		<decl_stmt pos:start="79:17" pos:end="79:31"><decl pos:start="79:17" pos:end="79:30"><type pos:start="79:17" pos:end="79:19"><name pos:start="79:17" pos:end="79:19">int</name></type> <name pos:start="79:21" pos:end="79:26">result</name> <init pos:start="79:28" pos:end="79:30">= <expr pos:start="79:30" pos:end="79:30"><literal type="number" pos:start="79:30" pos:end="79:30">1</literal></expr></init></decl>;</decl_stmt>
		<expr_stmt pos:start="80:17" pos:end="80:77"><expr pos:start="80:17" pos:end="80:76"><name pos:start="80:17" pos:end="80:22">result</name> <operator pos:start="80:24" pos:end="80:24">=</operator> <name pos:start="80:26" pos:end="80:30">prime</name> <operator pos:start="80:32" pos:end="80:32">*</operator> <name pos:start="80:34" pos:end="80:39">result</name> <operator pos:start="80:41" pos:end="80:41">+</operator> <operator pos:start="80:43" pos:end="80:43">(</operator><ternary pos:start="80:44" pos:end="80:75"><condition pos:start="80:44" pos:end="80:57"><expr pos:start="80:44" pos:end="80:55"><operator pos:start="80:44" pos:end="80:44">(</operator><name pos:start="80:45" pos:end="80:46">id</name> <operator pos:start="80:48" pos:end="80:49">==</operator> <literal type="null" pos:start="80:51" pos:end="80:54">null</literal><operator pos:start="80:55" pos:end="80:55">)</operator></expr> ?</condition><then pos:start="80:59" pos:end="80:59"> <expr pos:start="80:59" pos:end="80:59"><literal type="number" pos:start="80:59" pos:end="80:59">0</literal></expr> </then><else pos:start="80:61" pos:end="80:75">: <expr pos:start="80:63" pos:end="80:75"><call pos:start="80:63" pos:end="80:75"><name pos:start="80:63" pos:end="80:73"><name pos:start="80:63" pos:end="80:64">id</name><operator pos:start="80:65" pos:end="80:65">.</operator><name pos:start="80:66" pos:end="80:73">hashCode</name></name><argument_list pos:start="80:74" pos:end="80:75">()</argument_list></call></expr></else></ternary><operator pos:start="80:76" pos:end="80:76">)</operator></expr>;</expr_stmt>
		<return pos:start="81:17" pos:end="81:30">return <expr pos:start="81:24" pos:end="81:29"><name pos:start="81:24" pos:end="81:29">result</name></expr>;</return>
	</block_content>}</block></function>

	<function pos:start="84:9" pos:end="99:9"><annotation pos:start="84:9" pos:end="84:17">@<name pos:start="84:10" pos:end="84:17">Override</name></annotation>
	<type pos:start="85:9" pos:end="85:22"><specifier pos:start="85:9" pos:end="85:14">public</specifier> <name pos:start="85:16" pos:end="85:22">boolean</name></type> <name pos:start="85:24" pos:end="85:29">equals</name><parameter_list pos:start="85:30" pos:end="85:41">(<parameter pos:start="85:31" pos:end="85:40"><decl pos:start="85:31" pos:end="85:40"><type pos:start="85:31" pos:end="85:36"><name pos:start="85:31" pos:end="85:36">Object</name></type> <name pos:start="85:38" pos:end="85:40">obj</name></decl></parameter>)</parameter_list> <block pos:start="85:43" pos:end="99:9">{<block_content pos:start="86:17" pos:end="98:28">
		<if_stmt pos:start="86:17" pos:end="87:36"><if pos:start="86:17" pos:end="87:36">if <condition pos:start="86:20" pos:end="86:32">(<expr pos:start="86:21" pos:end="86:31"><name pos:start="86:21" pos:end="86:24">this</name> <operator pos:start="86:26" pos:end="86:27">==</operator> <name pos:start="86:29" pos:end="86:31">obj</name></expr>)</condition><block type="pseudo" pos:start="87:25" pos:end="87:36"><block_content pos:start="87:25" pos:end="87:36">
			<return pos:start="87:25" pos:end="87:36">return <expr pos:start="87:32" pos:end="87:35"><literal type="boolean" pos:start="87:32" pos:end="87:35">true</literal></expr>;</return></block_content></block></if></if_stmt>
		<if_stmt pos:start="88:17" pos:end="89:37"><if pos:start="88:17" pos:end="89:37">if <condition pos:start="88:20" pos:end="88:32">(<expr pos:start="88:21" pos:end="88:31"><name pos:start="88:21" pos:end="88:23">obj</name> <operator pos:start="88:25" pos:end="88:26">==</operator> <literal type="null" pos:start="88:28" pos:end="88:31">null</literal></expr>)</condition><block type="pseudo" pos:start="89:25" pos:end="89:37"><block_content pos:start="89:25" pos:end="89:37">
			<return pos:start="89:25" pos:end="89:37">return <expr pos:start="89:32" pos:end="89:36"><literal type="boolean" pos:start="89:32" pos:end="89:36">false</literal></expr>;</return></block_content></block></if></if_stmt>
		<if_stmt pos:start="90:17" pos:end="91:37"><if pos:start="90:17" pos:end="91:37">if <condition pos:start="90:20" pos:end="90:49">(<expr pos:start="90:21" pos:end="90:48"><call pos:start="90:21" pos:end="90:30"><name pos:start="90:21" pos:end="90:28">getClass</name><argument_list pos:start="90:29" pos:end="90:30">()</argument_list></call> <operator pos:start="90:32" pos:end="90:33">!=</operator> <call pos:start="90:35" pos:end="90:48"><name pos:start="90:35" pos:end="90:46"><name pos:start="90:35" pos:end="90:37">obj</name><operator pos:start="90:38" pos:end="90:38">.</operator><name pos:start="90:39" pos:end="90:46">getClass</name></name><argument_list pos:start="90:47" pos:end="90:48">()</argument_list></call></expr>)</condition><block type="pseudo" pos:start="91:25" pos:end="91:37"><block_content pos:start="91:25" pos:end="91:37">
			<return pos:start="91:25" pos:end="91:37">return <expr pos:start="91:32" pos:end="91:36"><literal type="boolean" pos:start="91:32" pos:end="91:36">false</literal></expr>;</return></block_content></block></if></if_stmt>
		<decl_stmt pos:start="92:17" pos:end="92:64"><decl pos:start="92:17" pos:end="92:63"><type pos:start="92:17" pos:end="92:32"><name pos:start="92:17" pos:end="92:32">RemoteInfoObject</name></type> <name pos:start="92:34" pos:end="92:38">other</name> <init pos:start="92:40" pos:end="92:63">= <expr pos:start="92:42" pos:end="92:63"><operator pos:start="92:42" pos:end="92:42">(</operator><name pos:start="92:43" pos:end="92:58">RemoteInfoObject</name><operator pos:start="92:59" pos:end="92:59">)</operator> <name pos:start="92:61" pos:end="92:63">obj</name></expr></init></decl>;</decl_stmt>
		<if_stmt pos:start="93:17" pos:end="97:37"><if pos:start="93:17" pos:end="96:17">if <condition pos:start="93:20" pos:end="93:31">(<expr pos:start="93:21" pos:end="93:30"><name pos:start="93:21" pos:end="93:22">id</name> <operator pos:start="93:24" pos:end="93:25">==</operator> <literal type="null" pos:start="93:27" pos:end="93:30">null</literal></expr>)</condition> <block pos:start="93:33" pos:end="96:17">{<block_content pos:start="94:25" pos:end="95:45">
			<if_stmt pos:start="94:25" pos:end="95:45"><if pos:start="94:25" pos:end="95:45">if <condition pos:start="94:28" pos:end="94:45">(<expr pos:start="94:29" pos:end="94:44"><name pos:start="94:29" pos:end="94:36"><name pos:start="94:29" pos:end="94:33">other</name><operator pos:start="94:34" pos:end="94:34">.</operator><name pos:start="94:35" pos:end="94:36">id</name></name> <operator pos:start="94:38" pos:end="94:39">!=</operator> <literal type="null" pos:start="94:41" pos:end="94:44">null</literal></expr>)</condition><block type="pseudo" pos:start="95:33" pos:end="95:45"><block_content pos:start="95:33" pos:end="95:45">
				<return pos:start="95:33" pos:end="95:45">return <expr pos:start="95:40" pos:end="95:44"><literal type="boolean" pos:start="95:40" pos:end="95:44">false</literal></expr>;</return></block_content></block></if></if_stmt>
		</block_content>}</block></if> <if type="elseif" pos:start="96:19" pos:end="97:37">else if <condition pos:start="96:27" pos:end="96:48">(<expr pos:start="96:28" pos:end="96:47"><operator pos:start="96:28" pos:end="96:28">!</operator><call pos:start="96:29" pos:end="96:47"><name pos:start="96:29" pos:end="96:37"><name pos:start="96:29" pos:end="96:30">id</name><operator pos:start="96:31" pos:end="96:31">.</operator><name pos:start="96:32" pos:end="96:37">equals</name></name><argument_list pos:start="96:38" pos:end="96:47">(<argument pos:start="96:39" pos:end="96:46"><expr pos:start="96:39" pos:end="96:46"><name pos:start="96:39" pos:end="96:46"><name pos:start="96:39" pos:end="96:43">other</name><operator pos:start="96:44" pos:end="96:44">.</operator><name pos:start="96:45" pos:end="96:46">id</name></name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="97:25" pos:end="97:37"><block_content pos:start="97:25" pos:end="97:37">
			<return pos:start="97:25" pos:end="97:37">return <expr pos:start="97:32" pos:end="97:36"><literal type="boolean" pos:start="97:32" pos:end="97:36">false</literal></expr>;</return></block_content></block></if></if_stmt>
		<return pos:start="98:17" pos:end="98:28">return <expr pos:start="98:24" pos:end="98:27"><literal type="boolean" pos:start="98:24" pos:end="98:27">true</literal></expr>;</return>
	</block_content>}</block></function>

	
	
	<function pos:start="103:9" pos:end="106:9"><annotation pos:start="103:9" pos:end="103:17">@<name pos:start="103:10" pos:end="103:17">Override</name></annotation>
	<type pos:start="104:9" pos:end="104:18"><specifier pos:start="104:9" pos:end="104:14">public</specifier> <name pos:start="104:16" pos:end="104:18">int</name></type> <name pos:start="104:20" pos:end="104:28">compareTo</name><parameter_list pos:start="104:29" pos:end="104:49">(<parameter pos:start="104:30" pos:end="104:48"><decl pos:start="104:30" pos:end="104:48"><type pos:start="104:30" pos:end="104:46"><name pos:start="104:30" pos:end="104:46">IRemoteInfoObject</name></type> <name pos:start="104:48" pos:end="104:48">o</name></decl></parameter>)</parameter_list> <block pos:start="104:51" pos:end="106:9">{<block_content pos:start="105:17" pos:end="105:52">
		<return pos:start="105:17" pos:end="105:52">return <expr pos:start="105:24" pos:end="105:51"><call pos:start="105:24" pos:end="105:51"><name pos:start="105:24" pos:end="105:40"><name pos:start="105:24" pos:end="105:27">this</name><operator pos:start="105:28" pos:end="105:28">.</operator><name pos:start="105:29" pos:end="105:30">id</name><operator pos:start="105:31" pos:end="105:31">.</operator><name pos:start="105:32" pos:end="105:40">compareTo</name></name><argument_list pos:start="105:41" pos:end="105:51">(<argument pos:start="105:42" pos:end="105:50"><expr pos:start="105:42" pos:end="105:50"><call pos:start="105:42" pos:end="105:50"><name pos:start="105:42" pos:end="105:48"><name pos:start="105:42" pos:end="105:42">o</name><operator pos:start="105:43" pos:end="105:43">.</operator><name pos:start="105:44" pos:end="105:48">getId</name></name><argument_list pos:start="105:49" pos:end="105:50">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
	</block_content>}</block></function>

}</block></class>
</unit>
