<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="Java" filename="flatCode/StopEveryone.java" pos:tabs="8"><package pos:start="1:1" pos:end="1:58">package <name pos:start="1:9" pos:end="1:57"><name pos:start="1:9" pos:end="1:11">edu</name><operator pos:start="1:12" pos:end="1:12">.</operator><name pos:start="1:13" pos:end="1:14">nd</name><operator pos:start="1:15" pos:end="1:15">.</operator><name pos:start="1:16" pos:end="1:24">dronology</name><operator pos:start="1:25" pos:end="1:25">.</operator><name pos:start="1:26" pos:end="1:29">core</name><operator pos:start="1:30" pos:end="1:30">.</operator><name pos:start="1:31" pos:end="1:48">collisionavoidance</name><operator pos:start="1:49" pos:end="1:49">.</operator><name pos:start="1:50" pos:end="1:57">strategy</name></name>;</package>

<import pos:start="3:1" pos:end="3:65">import <name pos:start="3:8" pos:end="3:64"><name pos:start="3:8" pos:end="3:10">edu</name><operator pos:start="3:11" pos:end="3:11">.</operator><name pos:start="3:12" pos:end="3:13">nd</name><operator pos:start="3:14" pos:end="3:14">.</operator><name pos:start="3:15" pos:end="3:23">dronology</name><operator pos:start="3:24" pos:end="3:24">.</operator><name pos:start="3:25" pos:end="3:28">core</name><operator pos:start="3:29" pos:end="3:29">.</operator><name pos:start="3:30" pos:end="3:47">collisionavoidance</name><operator pos:start="3:48" pos:end="3:48">.</operator><name pos:start="3:49" pos:end="3:64">CollisionAvoider</name></name>;</import>
<import pos:start="4:1" pos:end="4:62">import <name pos:start="4:8" pos:end="4:61"><name pos:start="4:8" pos:end="4:10">edu</name><operator pos:start="4:11" pos:end="4:11">.</operator><name pos:start="4:12" pos:end="4:13">nd</name><operator pos:start="4:14" pos:end="4:14">.</operator><name pos:start="4:15" pos:end="4:23">dronology</name><operator pos:start="4:24" pos:end="4:24">.</operator><name pos:start="4:25" pos:end="4:28">core</name><operator pos:start="4:29" pos:end="4:29">.</operator><name pos:start="4:30" pos:end="4:47">collisionavoidance</name><operator pos:start="4:48" pos:end="4:48">.</operator><name pos:start="4:49" pos:end="4:61">DroneSnapshot</name></name>;</import>
<import pos:start="5:1" pos:end="5:77">import <name pos:start="5:8" pos:end="5:76"><name pos:start="5:8" pos:end="5:10">edu</name><operator pos:start="5:11" pos:end="5:11">.</operator><name pos:start="5:12" pos:end="5:13">nd</name><operator pos:start="5:14" pos:end="5:14">.</operator><name pos:start="5:15" pos:end="5:23">dronology</name><operator pos:start="5:24" pos:end="5:24">.</operator><name pos:start="5:25" pos:end="5:28">core</name><operator pos:start="5:29" pos:end="5:29">.</operator><name pos:start="5:30" pos:end="5:47">collisionavoidance</name><operator pos:start="5:48" pos:end="5:48">.</operator><name pos:start="5:49" pos:end="5:64">guidancecommands</name><operator pos:start="5:65" pos:end="5:65">.</operator><name pos:start="5:66" pos:end="5:76">StopCommand</name></name>;</import>
<import pos:start="6:1" pos:end="6:81">import <name pos:start="6:8" pos:end="6:80"><name pos:start="6:8" pos:end="6:10">edu</name><operator pos:start="6:11" pos:end="6:11">.</operator><name pos:start="6:12" pos:end="6:13">nd</name><operator pos:start="6:14" pos:end="6:14">.</operator><name pos:start="6:15" pos:end="6:23">dronology</name><operator pos:start="6:24" pos:end="6:24">.</operator><name pos:start="6:25" pos:end="6:28">core</name><operator pos:start="6:29" pos:end="6:29">.</operator><name pos:start="6:30" pos:end="6:47">collisionavoidance</name><operator pos:start="6:48" pos:end="6:48">.</operator><name pos:start="6:49" pos:end="6:64">guidancecommands</name><operator pos:start="6:65" pos:end="6:65">.</operator><name pos:start="6:66" pos:end="6:80">WaypointCommand</name></name>;</import>
<import pos:start="7:1" pos:end="7:47">import <name pos:start="7:8" pos:end="7:46"><name pos:start="7:8" pos:end="7:10">edu</name><operator pos:start="7:11" pos:end="7:11">.</operator><name pos:start="7:12" pos:end="7:13">nd</name><operator pos:start="7:14" pos:end="7:14">.</operator><name pos:start="7:15" pos:end="7:23">dronology</name><operator pos:start="7:24" pos:end="7:24">.</operator><name pos:start="7:25" pos:end="7:28">core</name><operator pos:start="7:29" pos:end="7:29">.</operator><name pos:start="7:30" pos:end="7:33">goal</name><operator pos:start="7:34" pos:end="7:34">.</operator><name pos:start="7:35" pos:end="7:46">AbstractGoal</name></name>;</import>
<import pos:start="8:1" pos:end="8:48">import <name pos:start="8:8" pos:end="8:47"><name pos:start="8:8" pos:end="8:10">edu</name><operator pos:start="8:11" pos:end="8:11">.</operator><name pos:start="8:12" pos:end="8:13">nd</name><operator pos:start="8:14" pos:end="8:14">.</operator><name pos:start="8:15" pos:end="8:23">dronology</name><operator pos:start="8:24" pos:end="8:24">.</operator><name pos:start="8:25" pos:end="8:28">core</name><operator pos:start="8:29" pos:end="8:29">.</operator><name pos:start="8:30" pos:end="8:33">goal</name><operator pos:start="8:34" pos:end="8:34">.</operator><name pos:start="8:35" pos:end="8:47">IGoalSnapshot</name></name>;</import>
<import pos:start="9:1" pos:end="9:55">import <name pos:start="9:8" pos:end="9:54"><name pos:start="9:8" pos:end="9:10">edu</name><operator pos:start="9:11" pos:end="9:11">.</operator><name pos:start="9:12" pos:end="9:13">nd</name><operator pos:start="9:14" pos:end="9:14">.</operator><name pos:start="9:15" pos:end="9:23">dronology</name><operator pos:start="9:24" pos:end="9:24">.</operator><name pos:start="9:25" pos:end="9:28">core</name><operator pos:start="9:29" pos:end="9:29">.</operator><name pos:start="9:30" pos:end="9:33">goal</name><operator pos:start="9:34" pos:end="9:34">.</operator><name pos:start="9:35" pos:end="9:54">WaypointGoalSnapshot</name></name>;</import>
<import pos:start="10:1" pos:end="10:30">import <name pos:start="10:8" pos:end="10:29"><name pos:start="10:8" pos:end="10:10">net</name><operator pos:start="10:11" pos:end="10:11">.</operator><name pos:start="10:12" pos:end="10:13">mv</name><operator pos:start="10:14" pos:end="10:14">.</operator><name pos:start="10:15" pos:end="10:21">logging</name><operator pos:start="10:22" pos:end="10:22">.</operator><name pos:start="10:23" pos:end="10:29">ILogger</name></name>;</import>
<import pos:start="11:1" pos:end="11:37">import <name pos:start="11:8" pos:end="11:36"><name pos:start="11:8" pos:end="11:10">net</name><operator pos:start="11:11" pos:end="11:11">.</operator><name pos:start="11:12" pos:end="11:13">mv</name><operator pos:start="11:14" pos:end="11:14">.</operator><name pos:start="11:15" pos:end="11:21">logging</name><operator pos:start="11:22" pos:end="11:22">.</operator><name pos:start="11:23" pos:end="11:36">LoggerProvider</name></name>;</import>

<import pos:start="13:1" pos:end="13:27">import <name pos:start="13:8" pos:end="13:26"><name pos:start="13:8" pos:end="13:11">java</name><operator pos:start="13:12" pos:end="13:12">.</operator><name pos:start="13:13" pos:end="13:16">util</name><operator pos:start="13:17" pos:end="13:17">.</operator><name pos:start="13:18" pos:end="13:26">ArrayList</name></name>;</import>
<import pos:start="14:1" pos:end="14:21">import <name pos:start="14:8" pos:end="14:20"><name pos:start="14:8" pos:end="14:11">java</name><operator pos:start="14:12" pos:end="14:12">.</operator><name pos:start="14:13" pos:end="14:16">util</name><operator pos:start="14:17" pos:end="14:17">.</operator><name pos:start="14:18" pos:end="14:20">Set</name></name>;</import>
<import pos:start="15:1" pos:end="15:35">import <name pos:start="15:8" pos:end="15:34"><name pos:start="15:8" pos:end="15:11">java</name><operator pos:start="15:12" pos:end="15:12">.</operator><name pos:start="15:13" pos:end="15:16">util</name><operator pos:start="15:17" pos:end="15:17">.</operator><name pos:start="15:18" pos:end="15:23">stream</name><operator pos:start="15:24" pos:end="15:24">.</operator><name pos:start="15:25" pos:end="15:34">Collectors</name></name>;</import>

<comment type="block" format="javadoc" pos:start="17:1" pos:end="23:3">/**
 * The StopEveryone CollisionAvoider is a failsafe that only triggers if it detects two drones are intruding into each
 * others space because something has gone wrong. Use this with mission plans that carefully navigate the drones to
 * avoid crashing into one another. StopEveryone assumes the drones will follow a mission plan that takes into account
 * where all the drones will be in space and time. When the StopEveryone CollisionAvoider is triggered the mission is
 * aborted, and humans need to land the drones manually.
 */</comment>
<class pos:start="24:1" pos:end="159:1"><specifier pos:start="24:1" pos:end="24:6">public</specifier> class <name pos:start="24:14" pos:end="24:25">StopEveryone</name> <super_list pos:start="24:27" pos:end="24:53"><implements pos:start="24:27" pos:end="24:53">implements <super pos:start="24:38" pos:end="24:53"><name pos:start="24:38" pos:end="24:53">CollisionAvoider</name></super></implements></super_list> <block pos:start="24:55" pos:end="159:1">{
    <decl_stmt pos:start="25:5" pos:end="25:87"><decl pos:start="25:5" pos:end="25:86"><type pos:start="25:5" pos:end="25:32"><specifier pos:start="25:5" pos:end="25:11">private</specifier> <specifier pos:start="25:13" pos:end="25:18">static</specifier> <specifier pos:start="25:20" pos:end="25:24">final</specifier> <name pos:start="25:26" pos:end="25:32">ILogger</name></type> <name pos:start="25:34" pos:end="25:39">LOGGER</name> <init pos:start="25:41" pos:end="25:86">= <expr pos:start="25:43" pos:end="25:86"><call pos:start="25:43" pos:end="25:86"><name pos:start="25:43" pos:end="25:66"><name pos:start="25:43" pos:end="25:56">LoggerProvider</name><operator pos:start="25:57" pos:end="25:57">.</operator><name pos:start="25:58" pos:end="25:66">getLogger</name></name><argument_list pos:start="25:67" pos:end="25:86">(<argument pos:start="25:68" pos:end="25:85"><expr pos:start="25:68" pos:end="25:85"><name pos:start="25:68" pos:end="25:85"><name pos:start="25:68" pos:end="25:79">StopEveryone</name><operator pos:start="25:80" pos:end="25:80">.</operator><name pos:start="25:81" pos:end="25:85">class</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="26:5" pos:end="26:35"><decl pos:start="26:5" pos:end="26:34"><type pos:start="26:5" pos:end="26:24"><specifier pos:start="26:5" pos:end="26:11">private</specifier> <specifier pos:start="26:13" pos:end="26:17">final</specifier> <name pos:start="26:19" pos:end="26:24">double</name></type> <name pos:start="26:26" pos:end="26:34">threshold</name></decl>;</decl_stmt>

    <comment type="block" format="javadoc" pos:start="28:5" pos:end="34:7">/**
     * Initializes a newly created StopEveryone object that triggers all drones to stop whatever they're doing and hover
     * in place, if any two drones move closer than the threshold distance to one another.
     *
     * @param threshold distance in meters. If any two drones move close enough to be within the threshold distance,
     *                  then StopEveryone will command all drones to stop whatever they're doing and hover in place.
     */</comment>
    <constructor pos:start="35:5" pos:end="37:5"><specifier pos:start="35:5" pos:end="35:10">public</specifier>  <name pos:start="35:13" pos:end="35:24">StopEveryone</name><parameter_list pos:start="35:25" pos:end="35:42">(<parameter pos:start="35:26" pos:end="35:41"><decl pos:start="35:26" pos:end="35:41"><type pos:start="35:26" pos:end="35:31"><name pos:start="35:26" pos:end="35:31">double</name></type> <name pos:start="35:33" pos:end="35:41">threshold</name></decl></parameter>)</parameter_list> <block pos:start="35:44" pos:end="37:5">{<block_content pos:start="36:9" pos:end="36:35">
        <expr_stmt pos:start="36:9" pos:end="36:35"><expr pos:start="36:9" pos:end="36:34"><name pos:start="36:9" pos:end="36:22"><name pos:start="36:9" pos:end="36:12">this</name><operator pos:start="36:13" pos:end="36:13">.</operator><name pos:start="36:14" pos:end="36:22">threshold</name></name> <operator pos:start="36:24" pos:end="36:24">=</operator> <name pos:start="36:26" pos:end="36:34">threshold</name></expr>;</expr_stmt>
    </block_content>}</block></constructor>

    <function pos:start="39:5" pos:end="61:5"><annotation pos:start="39:5" pos:end="39:13">@<name pos:start="39:6" pos:end="39:13">Override</name></annotation>
    <type pos:start="40:5" pos:end="40:15"><specifier pos:start="40:5" pos:end="40:10">public</specifier> <name pos:start="40:12" pos:end="40:15">void</name></type> <name pos:start="40:17" pos:end="40:21">avoid</name><parameter_list pos:start="40:22" pos:end="40:54">(<parameter pos:start="40:23" pos:end="40:53"><decl pos:start="40:23" pos:end="40:53"><type pos:start="40:23" pos:end="40:46"><name pos:start="40:23" pos:end="40:46"><name pos:start="40:23" pos:end="40:31">ArrayList</name><argument_list type="generic" pos:start="40:32" pos:end="40:46">&lt;<argument pos:start="40:33" pos:end="40:45"><name pos:start="40:33" pos:end="40:45">DroneSnapshot</name></argument>&gt;</argument_list></name></type> <name pos:start="40:48" pos:end="40:53">drones</name></decl></parameter>)</parameter_list> <block pos:start="40:56" pos:end="61:5">{<block_content pos:start="41:9" pos:end="60:9">
        <decl_stmt pos:start="41:9" pos:end="41:73"><decl pos:start="41:9" pos:end="41:72"><type pos:start="41:9" pos:end="41:32"><name pos:start="41:9" pos:end="41:32"><name pos:start="41:9" pos:end="41:17">ArrayList</name><argument_list type="generic" pos:start="41:18" pos:end="41:32">&lt;<argument pos:start="41:19" pos:end="41:31"><name pos:start="41:19" pos:end="41:31">DroneSnapshot</name></argument>&gt;</argument_list></name></type> <name pos:start="41:34" pos:end="41:45">flyingDrones</name> <init pos:start="41:47" pos:end="41:72">= <expr pos:start="41:49" pos:end="41:72"><call pos:start="41:49" pos:end="41:72"><name pos:start="41:49" pos:end="41:64">findFlyingDrones</name><argument_list pos:start="41:65" pos:end="41:72">(<argument pos:start="41:66" pos:end="41:71"><expr pos:start="41:66" pos:end="41:71"><name pos:start="41:66" pos:end="41:71">drones</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <if_stmt pos:start="42:9" pos:end="60:9"><if pos:start="42:9" pos:end="53:9">if <condition pos:start="42:12" pos:end="42:33">(<expr pos:start="42:13" pos:end="42:32"><call pos:start="42:13" pos:end="42:32"><name pos:start="42:13" pos:end="42:18">isSafe</name><argument_list pos:start="42:19" pos:end="42:32">(<argument pos:start="42:20" pos:end="42:31"><expr pos:start="42:20" pos:end="42:31"><name pos:start="42:20" pos:end="42:31">flyingDrones</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="42:35" pos:end="53:9">{<block_content pos:start="44:13" pos:end="52:13">
            <comment type="line" pos:start="43:13" pos:end="43:30">// fly to the goal</comment>
            <for pos:start="44:13" pos:end="52:13">for <control pos:start="44:17" pos:end="44:52">(<init pos:start="44:18" pos:end="44:51"><decl pos:start="44:18" pos:end="44:51"><type pos:start="44:18" pos:end="44:30"><name pos:start="44:18" pos:end="44:30">DroneSnapshot</name></type> <name pos:start="44:32" pos:end="44:36">drone</name> <range pos:start="44:38" pos:end="44:51">: <expr pos:start="44:40" pos:end="44:51"><name pos:start="44:40" pos:end="44:51">flyingDrones</name></expr></range></decl></init>)</control> <block pos:start="44:54" pos:end="52:13">{<block_content pos:start="45:17" pos:end="51:17">
                <decl_stmt pos:start="45:17" pos:end="45:93"><decl pos:start="45:17" pos:end="45:92"><type pos:start="45:17" pos:end="45:36"><name pos:start="45:17" pos:end="45:36">WaypointGoalSnapshot</name></type> <name pos:start="45:38" pos:end="45:49">waypointGoal</name> <init pos:start="45:51" pos:end="45:92">= <expr pos:start="45:53" pos:end="45:92"><call pos:start="45:53" pos:end="45:92"><name pos:start="45:53" pos:end="45:74">findActiveWaypointGoal</name><argument_list pos:start="45:75" pos:end="45:92">(<argument pos:start="45:76" pos:end="45:91"><expr pos:start="45:76" pos:end="45:91"><call pos:start="45:76" pos:end="45:91"><name pos:start="45:76" pos:end="45:89"><name pos:start="45:76" pos:end="45:80">drone</name><operator pos:start="45:81" pos:end="45:81">.</operator><name pos:start="45:82" pos:end="45:89">getGoals</name></name><argument_list pos:start="45:90" pos:end="45:91">()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
                <if_stmt pos:start="46:17" pos:end="51:17"><if pos:start="46:17" pos:end="49:17">if <condition pos:start="46:20" pos:end="46:41">(<expr pos:start="46:21" pos:end="46:40"><name pos:start="46:21" pos:end="46:32">waypointGoal</name> <operator pos:start="46:34" pos:end="46:35">!=</operator> <literal type="null" pos:start="46:37" pos:end="46:40">null</literal></expr>)</condition> <block pos:start="46:43" pos:end="49:17">{<block_content pos:start="47:21" pos:end="48:63">
                    <expr_stmt pos:start="47:21" pos:end="47:124"><expr pos:start="47:21" pos:end="47:123"><call pos:start="47:21" pos:end="47:123"><name pos:start="47:21" pos:end="47:32"><name pos:start="47:21" pos:end="47:26">LOGGER</name><operator pos:start="47:27" pos:end="47:27">.</operator><name pos:start="47:28" pos:end="47:32">debug</name></name><argument_list pos:start="47:33" pos:end="47:123">(<argument pos:start="47:34" pos:end="47:122"><expr pos:start="47:34" pos:end="47:122"><call pos:start="47:34" pos:end="47:48"><name pos:start="47:34" pos:end="47:46"><name pos:start="47:34" pos:end="47:38">drone</name><operator pos:start="47:39" pos:end="47:39">.</operator><name pos:start="47:40" pos:end="47:46">getName</name></name><argument_list pos:start="47:47" pos:end="47:48">()</argument_list></call> <operator pos:start="47:50" pos:end="47:50">+</operator> <literal type="string" pos:start="47:52" pos:end="47:75">" had a waypoint goal: "</literal> <operator pos:start="47:77" pos:end="47:77">+</operator> <call pos:start="47:79" pos:end="47:104"><name pos:start="47:79" pos:end="47:102"><name pos:start="47:79" pos:end="47:90">waypointGoal</name><operator pos:start="47:91" pos:end="47:91">.</operator><name pos:start="47:92" pos:end="47:102">getPosition</name></name><argument_list pos:start="47:103" pos:end="47:104">()</argument_list></call><operator pos:start="47:105" pos:end="47:105">.</operator><call pos:start="47:106" pos:end="47:122"><name pos:start="47:106" pos:end="47:120">toLlaCoordinate</name><argument_list pos:start="47:121" pos:end="47:122">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                    <expr_stmt pos:start="48:21" pos:end="48:63"><expr pos:start="48:21" pos:end="48:62"><call pos:start="48:21" pos:end="48:62"><name pos:start="48:21" pos:end="48:41">flyToGoalIfNotAlready</name><argument_list pos:start="48:42" pos:end="48:62">(<argument pos:start="48:43" pos:end="48:47"><expr pos:start="48:43" pos:end="48:47"><name pos:start="48:43" pos:end="48:47">drone</name></expr></argument>, <argument pos:start="48:50" pos:end="48:61"><expr pos:start="48:50" pos:end="48:61"><name pos:start="48:50" pos:end="48:61">waypointGoal</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                </block_content>}</block></if> <else pos:start="49:19" pos:end="51:17">else <block pos:start="49:24" pos:end="51:17">{<block_content pos:start="50:21" pos:end="50:76">
                    <expr_stmt pos:start="50:21" pos:end="50:76"><expr pos:start="50:21" pos:end="50:75"><call pos:start="50:21" pos:end="50:75"><name pos:start="50:21" pos:end="50:32"><name pos:start="50:21" pos:end="50:26">LOGGER</name><operator pos:start="50:27" pos:end="50:27">.</operator><name pos:start="50:28" pos:end="50:32">debug</name></name><argument_list pos:start="50:33" pos:end="50:75">(<argument pos:start="50:34" pos:end="50:74"><expr pos:start="50:34" pos:end="50:74"><call pos:start="50:34" pos:end="50:48"><name pos:start="50:34" pos:end="50:46"><name pos:start="50:34" pos:end="50:38">drone</name><operator pos:start="50:39" pos:end="50:39">.</operator><name pos:start="50:40" pos:end="50:46">getName</name></name><argument_list pos:start="50:47" pos:end="50:48">()</argument_list></call> <operator pos:start="50:50" pos:end="50:50">+</operator> <literal type="string" pos:start="50:52" pos:end="50:74">" had no waypoint goal"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                </block_content>}</block></else></if_stmt>
            </block_content>}</block></for>
        </block_content>}</block></if>
        <else pos:start="54:9" pos:end="60:9">else <block pos:start="54:14" pos:end="60:9">{<block_content pos:start="56:13" pos:end="59:13">
            <comment type="line" pos:start="55:13" pos:end="55:28">// stop everyone</comment>
            <for pos:start="56:13" pos:end="59:13">for <control pos:start="56:17" pos:end="56:52">(<init pos:start="56:18" pos:end="56:51"><decl pos:start="56:18" pos:end="56:51"><type pos:start="56:18" pos:end="56:30"><name pos:start="56:18" pos:end="56:30">DroneSnapshot</name></type> <name pos:start="56:32" pos:end="56:36">drone</name> <range pos:start="56:38" pos:end="56:51">: <expr pos:start="56:40" pos:end="56:51"><name pos:start="56:40" pos:end="56:51">flyingDrones</name></expr></range></decl></init>)</control> <block pos:start="56:54" pos:end="59:13">{<block_content pos:start="57:17" pos:end="58:37">
                <expr_stmt pos:start="57:17" pos:end="57:59"><expr pos:start="57:17" pos:end="57:58"><call pos:start="57:17" pos:end="57:58"><name pos:start="57:17" pos:end="57:28"><name pos:start="57:17" pos:end="57:22">LOGGER</name><operator pos:start="57:23" pos:end="57:23">.</operator><name pos:start="57:24" pos:end="57:28">fatal</name></name><argument_list pos:start="57:29" pos:end="57:58">(<argument pos:start="57:30" pos:end="57:57"><expr pos:start="57:30" pos:end="57:57"><literal type="string" pos:start="57:30" pos:end="57:57">"WARNING ALL DRONES STOPPED"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt pos:start="58:17" pos:end="58:37"><expr pos:start="58:17" pos:end="58:36"><call pos:start="58:17" pos:end="58:36"><name pos:start="58:17" pos:end="58:29">onStopTrigger</name><argument_list pos:start="58:30" pos:end="58:36">(<argument pos:start="58:31" pos:end="58:35"><expr pos:start="58:31" pos:end="58:35"><name pos:start="58:31" pos:end="58:35">drone</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            </block_content>}</block></for>
        </block_content>}</block></else></if_stmt>
    </block_content>}</block></function>

    <function pos:start="63:5" pos:end="65:5"><type pos:start="63:5" pos:end="63:18"><specifier pos:start="63:5" pos:end="63:13">protected</specifier> <name pos:start="63:15" pos:end="63:18">void</name></type> <name pos:start="63:20" pos:end="63:32">onStopTrigger</name><parameter_list pos:start="63:33" pos:end="63:53">(<parameter pos:start="63:34" pos:end="63:52"><decl pos:start="63:34" pos:end="63:52"><type pos:start="63:34" pos:end="63:46"><name pos:start="63:34" pos:end="63:46">DroneSnapshot</name></type> <name pos:start="63:48" pos:end="63:52">drone</name></decl></parameter>)</parameter_list> <block pos:start="63:55" pos:end="65:5">{<block_content pos:start="64:9" pos:end="64:37">
        <expr_stmt pos:start="64:9" pos:end="64:37"><expr pos:start="64:9" pos:end="64:36"><call pos:start="64:9" pos:end="64:36"><name pos:start="64:9" pos:end="64:29">stopDroneIfNotStopped</name><argument_list pos:start="64:30" pos:end="64:36">(<argument pos:start="64:31" pos:end="64:35"><expr pos:start="64:31" pos:end="64:35"><name pos:start="64:31" pos:end="64:35">drone</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></function>

    <comment type="block" format="javadoc" pos:start="67:5" pos:end="70:7">/**
     * @param flyingDrones the drones that are flying (not all drones)
     * @return true if every drone is at least threshold distance apart
     */</comment>
    <function pos:start="71:5" pos:end="80:5"><type pos:start="71:5" pos:end="71:19"><specifier pos:start="71:5" pos:end="71:11">private</specifier> <name pos:start="71:13" pos:end="71:19">boolean</name></type> <name pos:start="71:21" pos:end="71:26">isSafe</name><parameter_list pos:start="71:27" pos:end="71:65">(<parameter pos:start="71:28" pos:end="71:64"><decl pos:start="71:28" pos:end="71:64"><type pos:start="71:28" pos:end="71:51"><name pos:start="71:28" pos:end="71:51"><name pos:start="71:28" pos:end="71:36">ArrayList</name><argument_list type="generic" pos:start="71:37" pos:end="71:51">&lt;<argument pos:start="71:38" pos:end="71:50"><name pos:start="71:38" pos:end="71:50">DroneSnapshot</name></argument>&gt;</argument_list></name></type> <name pos:start="71:53" pos:end="71:64">flyingDrones</name></decl></parameter>)</parameter_list> <block pos:start="71:67" pos:end="80:5">{<block_content pos:start="72:9" pos:end="79:20">
        <for pos:start="72:9" pos:end="78:9">for <control pos:start="72:13" pos:end="72:57">(<init pos:start="72:14" pos:end="72:23"><decl pos:start="72:14" pos:end="72:22"><type pos:start="72:14" pos:end="72:16"><name pos:start="72:14" pos:end="72:16">int</name></type> <name pos:start="72:18" pos:end="72:18">i</name> <init pos:start="72:20" pos:end="72:22">= <expr pos:start="72:22" pos:end="72:22"><literal type="number" pos:start="72:22" pos:end="72:22">0</literal></expr></init></decl>;</init> <condition pos:start="72:25" pos:end="72:52"><expr pos:start="72:25" pos:end="72:51"><name pos:start="72:25" pos:end="72:25">i</name> <operator pos:start="72:27" pos:end="72:27">&lt;</operator> <call pos:start="72:29" pos:end="72:47"><name pos:start="72:29" pos:end="72:45"><name pos:start="72:29" pos:end="72:40">flyingDrones</name><operator pos:start="72:41" pos:end="72:41">.</operator><name pos:start="72:42" pos:end="72:45">size</name></name><argument_list pos:start="72:46" pos:end="72:47">()</argument_list></call> <operator pos:start="72:49" pos:end="72:49">-</operator> <literal type="number" pos:start="72:51" pos:end="72:51">1</literal></expr>;</condition> <incr pos:start="72:54" pos:end="72:56"><expr pos:start="72:54" pos:end="72:56"><operator pos:start="72:54" pos:end="72:55">++</operator><name pos:start="72:56" pos:end="72:56">i</name></expr></incr>)</control> <block pos:start="72:59" pos:end="78:9">{<block_content pos:start="73:13" pos:end="77:13">
            <for pos:start="73:13" pos:end="77:13">for <control pos:start="73:17" pos:end="73:61">(<init pos:start="73:18" pos:end="73:31"><decl pos:start="73:18" pos:end="73:30"><type pos:start="73:18" pos:end="73:20"><name pos:start="73:18" pos:end="73:20">int</name></type> <name pos:start="73:22" pos:end="73:22">j</name> <init pos:start="73:24" pos:end="73:30">= <expr pos:start="73:26" pos:end="73:30"><name pos:start="73:26" pos:end="73:26">i</name> <operator pos:start="73:28" pos:end="73:28">+</operator> <literal type="number" pos:start="73:30" pos:end="73:30">1</literal></expr></init></decl>;</init> <condition pos:start="73:33" pos:end="73:56"><expr pos:start="73:33" pos:end="73:55"><name pos:start="73:33" pos:end="73:33">j</name> <operator pos:start="73:35" pos:end="73:35">&lt;</operator> <call pos:start="73:37" pos:end="73:55"><name pos:start="73:37" pos:end="73:53"><name pos:start="73:37" pos:end="73:48">flyingDrones</name><operator pos:start="73:49" pos:end="73:49">.</operator><name pos:start="73:50" pos:end="73:53">size</name></name><argument_list pos:start="73:54" pos:end="73:55">()</argument_list></call></expr>;</condition> <incr pos:start="73:58" pos:end="73:60"><expr pos:start="73:58" pos:end="73:60"><operator pos:start="73:58" pos:end="73:59">++</operator><name pos:start="73:60" pos:end="73:60">j</name></expr></incr>)</control> <block pos:start="73:63" pos:end="77:13">{<block_content pos:start="74:17" pos:end="76:17">
                <if_stmt pos:start="74:17" pos:end="76:17"><if pos:start="74:17" pos:end="76:17">if <condition pos:start="74:20" pos:end="74:73">(<expr pos:start="74:21" pos:end="74:72"><call pos:start="74:21" pos:end="74:72"><name pos:start="74:21" pos:end="74:30">isTooClose</name><argument_list pos:start="74:31" pos:end="74:72">(<argument pos:start="74:32" pos:end="74:50"><expr pos:start="74:32" pos:end="74:50"><call pos:start="74:32" pos:end="74:50"><name pos:start="74:32" pos:end="74:47"><name pos:start="74:32" pos:end="74:43">flyingDrones</name><operator pos:start="74:44" pos:end="74:44">.</operator><name pos:start="74:45" pos:end="74:47">get</name></name><argument_list pos:start="74:48" pos:end="74:50">(<argument pos:start="74:49" pos:end="74:49"><expr pos:start="74:49" pos:end="74:49"><name pos:start="74:49" pos:end="74:49">i</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="74:53" pos:end="74:71"><expr pos:start="74:53" pos:end="74:71"><call pos:start="74:53" pos:end="74:71"><name pos:start="74:53" pos:end="74:68"><name pos:start="74:53" pos:end="74:64">flyingDrones</name><operator pos:start="74:65" pos:end="74:65">.</operator><name pos:start="74:66" pos:end="74:68">get</name></name><argument_list pos:start="74:69" pos:end="74:71">(<argument pos:start="74:70" pos:end="74:70"><expr pos:start="74:70" pos:end="74:70"><name pos:start="74:70" pos:end="74:70">j</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="74:75" pos:end="76:17">{<block_content pos:start="75:21" pos:end="75:33">
                    <return pos:start="75:21" pos:end="75:33">return <expr pos:start="75:28" pos:end="75:32"><literal type="boolean" pos:start="75:28" pos:end="75:32">false</literal></expr>;</return>
                </block_content>}</block></if></if_stmt>
            </block_content>}</block></for>
        </block_content>}</block></for>
        <return pos:start="79:9" pos:end="79:20">return <expr pos:start="79:16" pos:end="79:19"><literal type="boolean" pos:start="79:16" pos:end="79:19">true</literal></expr>;</return>
    </block_content>}</block></function>


    <comment type="block" format="javadoc" pos:start="83:5" pos:end="88:7">/**
     * Check if two drones are too close
     * @param a the first drone
     * @param b the second drone
     * @return true if the distance between the drones is less than the threshold distance
     */</comment>
    <function pos:start="89:5" pos:end="96:5"><type pos:start="89:5" pos:end="89:19"><specifier pos:start="89:5" pos:end="89:11">private</specifier> <name pos:start="89:13" pos:end="89:19">boolean</name></type> <name pos:start="89:21" pos:end="89:30">isTooClose</name><parameter_list pos:start="89:31" pos:end="89:64">(<parameter pos:start="89:32" pos:end="89:46"><decl pos:start="89:32" pos:end="89:46"><type pos:start="89:32" pos:end="89:46"><name pos:start="89:32" pos:end="89:44">DroneSnapshot</name></type> <name pos:start="89:46" pos:end="89:46">a</name></decl></parameter>, <parameter pos:start="89:49" pos:end="89:63"><decl pos:start="89:49" pos:end="89:63"><type pos:start="89:49" pos:end="89:63"><name pos:start="89:49" pos:end="89:61">DroneSnapshot</name></type> <name pos:start="89:63" pos:end="89:63">b</name></decl></parameter>)</parameter_list> <block pos:start="89:66" pos:end="96:5">{<block_content pos:start="90:9" pos:end="95:22">
        <decl_stmt pos:start="90:9" pos:end="90:68"><decl pos:start="90:9" pos:end="90:67"><type pos:start="90:9" pos:end="90:14"><name pos:start="90:9" pos:end="90:14">double</name></type> <name pos:start="90:16" pos:end="90:23">distance</name> <init pos:start="90:25" pos:end="90:67">= <expr pos:start="90:27" pos:end="90:67"><call pos:start="90:27" pos:end="90:41"><name pos:start="90:27" pos:end="90:39"><name pos:start="90:27" pos:end="90:27">a</name><operator pos:start="90:28" pos:end="90:28">.</operator><name pos:start="90:29" pos:end="90:39">getPosition</name></name><argument_list pos:start="90:40" pos:end="90:41">()</argument_list></call><operator pos:start="90:42" pos:end="90:42">.</operator><call pos:start="90:43" pos:end="90:67"><name pos:start="90:43" pos:end="90:50">distance</name><argument_list pos:start="90:51" pos:end="90:67">(<argument pos:start="90:52" pos:end="90:66"><expr pos:start="90:52" pos:end="90:66"><call pos:start="90:52" pos:end="90:66"><name pos:start="90:52" pos:end="90:64"><name pos:start="90:52" pos:end="90:52">b</name><operator pos:start="90:53" pos:end="90:53">.</operator><name pos:start="90:54" pos:end="90:64">getPosition</name></name><argument_list pos:start="90:65" pos:end="90:66">()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt pos:start="91:9" pos:end="91:51"><decl pos:start="91:9" pos:end="91:50"><type pos:start="91:9" pos:end="91:15"><name pos:start="91:9" pos:end="91:15">boolean</name></type> <name pos:start="91:17" pos:end="91:22">result</name> <init pos:start="91:24" pos:end="91:50">= <expr pos:start="91:26" pos:end="91:50"><name pos:start="91:26" pos:end="91:33">distance</name> <operator pos:start="91:35" pos:end="91:35">&lt;</operator> <name pos:start="91:37" pos:end="91:50"><name pos:start="91:37" pos:end="91:40">this</name><operator pos:start="91:41" pos:end="91:41">.</operator><name pos:start="91:42" pos:end="91:50">threshold</name></name></expr></init></decl>;</decl_stmt>
        <if_stmt pos:start="92:9" pos:end="94:9"><if pos:start="92:9" pos:end="94:9">if <condition pos:start="92:12" pos:end="92:19">(<expr pos:start="92:13" pos:end="92:18"><name pos:start="92:13" pos:end="92:18">result</name></expr>)</condition> <block pos:start="92:21" pos:end="94:9">{<block_content pos:start="93:13" pos:end="93:107">
            <expr_stmt pos:start="93:13" pos:end="93:107"><expr pos:start="93:13" pos:end="93:106"><call pos:start="93:13" pos:end="93:106"><name pos:start="93:13" pos:end="93:23"><name pos:start="93:13" pos:end="93:18">LOGGER</name><operator pos:start="93:19" pos:end="93:19">.</operator><name pos:start="93:20" pos:end="93:23">warn</name></name><argument_list pos:start="93:24" pos:end="93:106">(<argument pos:start="93:25" pos:end="93:105"><expr pos:start="93:25" pos:end="93:105"><literal type="string" pos:start="93:25" pos:end="93:43">"DRONES TOO CLOSE "</literal> <operator pos:start="93:45" pos:end="93:45">+</operator> <call pos:start="93:47" pos:end="93:57"><name pos:start="93:47" pos:end="93:55"><name pos:start="93:47" pos:end="93:47">a</name><operator pos:start="93:48" pos:end="93:48">.</operator><name pos:start="93:49" pos:end="93:55">getName</name></name><argument_list pos:start="93:56" pos:end="93:57">()</argument_list></call> <operator pos:start="93:59" pos:end="93:59">+</operator> <literal type="string" pos:start="93:61" pos:end="93:64">", "</literal> <operator pos:start="93:66" pos:end="93:66">+</operator> <call pos:start="93:68" pos:end="93:78"><name pos:start="93:68" pos:end="93:76"><name pos:start="93:68" pos:end="93:68">b</name><operator pos:start="93:69" pos:end="93:69">.</operator><name pos:start="93:70" pos:end="93:76">getName</name></name><argument_list pos:start="93:77" pos:end="93:78">()</argument_list></call> <operator pos:start="93:80" pos:end="93:80">+</operator> <literal type="string" pos:start="93:82" pos:end="93:94">" distance: "</literal> <operator pos:start="93:96" pos:end="93:96">+</operator> <name pos:start="93:98" pos:end="93:105">distance</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></if></if_stmt>
        <return pos:start="95:9" pos:end="95:22">return <expr pos:start="95:16" pos:end="95:21"><name pos:start="95:16" pos:end="95:21">result</name></expr>;</return>
    </block_content>}</block></function>

    <comment type="block" format="javadoc" pos:start="98:5" pos:end="102:7">/**
     * given the drone snapshots, filter out the drones that are not flying
     * @param drones all the drone snapshots
     * @return a list with all the flying drones
     */</comment>
    <function pos:start="103:5" pos:end="107:5"><type pos:start="103:5" pos:end="103:42"><specifier pos:start="103:5" pos:end="103:10">public</specifier> <specifier pos:start="103:12" pos:end="103:17">static</specifier> <name pos:start="103:19" pos:end="103:42"><name pos:start="103:19" pos:end="103:27">ArrayList</name><argument_list type="generic" pos:start="103:28" pos:end="103:42">&lt;<argument pos:start="103:29" pos:end="103:41"><name pos:start="103:29" pos:end="103:41">DroneSnapshot</name></argument>&gt;</argument_list></name></type> <name pos:start="103:44" pos:end="103:59">findFlyingDrones</name><parameter_list pos:start="103:60" pos:end="103:92">(<parameter pos:start="103:61" pos:end="103:91"><decl pos:start="103:61" pos:end="103:91"><type pos:start="103:61" pos:end="103:84"><name pos:start="103:61" pos:end="103:84"><name pos:start="103:61" pos:end="103:69">ArrayList</name><argument_list type="generic" pos:start="103:70" pos:end="103:84">&lt;<argument pos:start="103:71" pos:end="103:83"><name pos:start="103:71" pos:end="103:83">DroneSnapshot</name></argument>&gt;</argument_list></name></type> <name pos:start="103:86" pos:end="103:91">drones</name></decl></parameter>)</parameter_list> <block pos:start="103:94" pos:end="107:5">{<block_content pos:start="104:9" pos:end="106:66">
        <return pos:start="104:9" pos:end="106:66">return <expr pos:start="104:16" pos:end="106:65"><call pos:start="104:16" pos:end="104:30"><name pos:start="104:16" pos:end="104:28"><name pos:start="104:16" pos:end="104:21">drones</name><operator pos:start="104:22" pos:end="104:22">.</operator><name pos:start="104:23" pos:end="104:28">stream</name></name><argument_list pos:start="104:29" pos:end="104:30">()</argument_list></call>
                <operator pos:start="105:17" pos:end="105:17">.</operator><call pos:start="105:18" pos:end="105:67"><name pos:start="105:18" pos:end="105:23">filter</name><argument_list pos:start="105:24" pos:end="105:67">(<argument pos:start="105:25" pos:end="105:66"><expr pos:start="105:25" pos:end="105:66"><lambda pos:start="105:25" pos:end="105:66"><parameter_list type="pseudo" pos:start="105:25" pos:end="105:29"><parameter pos:start="105:25" pos:end="105:29"><decl pos:start="105:25" pos:end="105:29"><name pos:start="105:25" pos:end="105:29">drone</name></decl></parameter></parameter_list> -&gt;<block type="pseudo" pos:start="105:34" pos:end="105:66"><block_content pos:start="105:34" pos:end="105:66"> <expr pos:start="105:34" pos:end="105:66"><literal type="string" pos:start="105:34" pos:end="105:41">"FLYING"</literal><operator pos:start="105:42" pos:end="105:42">.</operator><call pos:start="105:43" pos:end="105:66"><name pos:start="105:43" pos:end="105:48">equals</name><argument_list pos:start="105:49" pos:end="105:66">(<argument pos:start="105:50" pos:end="105:65"><expr pos:start="105:50" pos:end="105:65"><call pos:start="105:50" pos:end="105:65"><name pos:start="105:50" pos:end="105:63"><name pos:start="105:50" pos:end="105:54">drone</name><operator pos:start="105:55" pos:end="105:55">.</operator><name pos:start="105:56" pos:end="105:63">getState</name></name><argument_list pos:start="105:64" pos:end="105:65">()</argument_list></call></expr></argument>)</argument_list></call></expr></block_content></block></lambda></expr></argument>)</argument_list></call>
                <operator pos:start="106:17" pos:end="106:17">.</operator><call pos:start="106:18" pos:end="106:65"><name pos:start="106:18" pos:end="106:24">collect</name><argument_list pos:start="106:25" pos:end="106:65">(<argument pos:start="106:26" pos:end="106:64"><expr pos:start="106:26" pos:end="106:64"><call pos:start="106:26" pos:end="106:64"><name pos:start="106:26" pos:end="106:48"><name pos:start="106:26" pos:end="106:35">Collectors</name><operator pos:start="106:36" pos:end="106:36">.</operator><name pos:start="106:37" pos:end="106:48">toCollection</name></name><argument_list pos:start="106:49" pos:end="106:64">(<argument pos:start="106:50" pos:end="106:63"><expr pos:start="106:50" pos:end="106:63"><name pos:start="106:50" pos:end="106:58">ArrayList</name><operator pos:start="106:59" pos:end="106:60">::</operator><operator pos:start="106:61" pos:end="106:63">new</operator></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
    </block_content>}</block></function>

    <comment type="line" pos:start="109:5" pos:end="109:116">// if no active waypoint goal exists return null, otherwise return the first one it finds. Note if more than one</comment>
    <comment type="line" pos:start="110:5" pos:end="110:114">// active waypoint goal exists in the set of active goals, the active goal that is returned is up to the set's</comment>
    <comment type="line" pos:start="111:5" pos:end="111:15">// iterator</comment>
    <function pos:start="112:5" pos:end="119:5"><type pos:start="112:5" pos:end="112:38"><specifier pos:start="112:5" pos:end="112:10">public</specifier> <specifier pos:start="112:12" pos:end="112:17">static</specifier> <name pos:start="112:19" pos:end="112:38">WaypointGoalSnapshot</name></type> <name pos:start="112:40" pos:end="112:61">findActiveWaypointGoal</name><parameter_list pos:start="112:62" pos:end="112:87">(<parameter pos:start="112:63" pos:end="112:86"><decl pos:start="112:63" pos:end="112:86"><type pos:start="112:63" pos:end="112:80"><name pos:start="112:63" pos:end="112:80"><name pos:start="112:63" pos:end="112:65">Set</name><argument_list type="generic" pos:start="112:66" pos:end="112:80">&lt;<argument pos:start="112:67" pos:end="112:79"><name pos:start="112:67" pos:end="112:79">IGoalSnapshot</name></argument>&gt;</argument_list></name></type> <name pos:start="112:82" pos:end="112:86">goals</name></decl></parameter>)</parameter_list> <block pos:start="112:89" pos:end="119:5">{<block_content pos:start="113:9" pos:end="118:20">
        <for pos:start="113:9" pos:end="117:9">for <control pos:start="113:13" pos:end="113:39">(<init pos:start="113:14" pos:end="113:38"><decl pos:start="113:14" pos:end="113:38"><type pos:start="113:14" pos:end="113:26"><name pos:start="113:14" pos:end="113:26">IGoalSnapshot</name></type> <name pos:start="113:28" pos:end="113:31">goal</name><range pos:start="113:32" pos:end="113:38">: <expr pos:start="113:34" pos:end="113:38"><name pos:start="113:34" pos:end="113:38">goals</name></expr></range></decl></init>)</control> <block pos:start="113:41" pos:end="117:9">{<block_content pos:start="114:13" pos:end="116:13">
            <if_stmt pos:start="114:13" pos:end="116:13"><if pos:start="114:13" pos:end="116:13">if <condition pos:start="114:16" pos:end="114:105">(<expr pos:start="114:17" pos:end="114:104"><name pos:start="114:17" pos:end="114:20">goal</name> <operator pos:start="114:22" pos:end="114:31">instanceof</operator> <name pos:start="114:33" pos:end="114:52">WaypointGoalSnapshot</name> <operator pos:start="114:54" pos:end="114:55">&amp;&amp;</operator> <call pos:start="114:57" pos:end="114:71"><name pos:start="114:57" pos:end="114:69"><name pos:start="114:57" pos:end="114:60">goal</name><operator pos:start="114:61" pos:end="114:61">.</operator><name pos:start="114:62" pos:end="114:69">getState</name></name><argument_list pos:start="114:70" pos:end="114:71">()</argument_list></call> <operator pos:start="114:73" pos:end="114:74">==</operator> <name pos:start="114:76" pos:end="114:104"><name pos:start="114:76" pos:end="114:87">AbstractGoal</name><operator pos:start="114:88" pos:end="114:88">.</operator><name pos:start="114:89" pos:end="114:97">GoalState</name><operator pos:start="114:98" pos:end="114:98">.</operator><name pos:start="114:99" pos:end="114:104">ACTIVE</name></name></expr>)</condition> <block pos:start="114:107" pos:end="116:13">{<block_content pos:start="115:17" pos:end="115:51">
                <return pos:start="115:17" pos:end="115:51">return <expr pos:start="115:24" pos:end="115:50"><operator pos:start="115:24" pos:end="115:24">(</operator><name pos:start="115:25" pos:end="115:44">WaypointGoalSnapshot</name><operator pos:start="115:45" pos:end="115:45">)</operator> <name pos:start="115:47" pos:end="115:50">goal</name></expr>;</return>
            </block_content>}</block></if></if_stmt>
        </block_content>}</block></for>
        <return pos:start="118:9" pos:end="118:20">return <expr pos:start="118:16" pos:end="118:19"><literal type="null" pos:start="118:16" pos:end="118:19">null</literal></expr>;</return>
    </block_content>}</block></function>

    <comment type="block" format="javadoc" pos:start="121:5" pos:end="124:7">/**
     * Make sure the drone's command queue has a stop command, overwriting the current command queue if needed.
     * @param drone to stop
     */</comment>
    <function pos:start="125:5" pos:end="134:5"><type pos:start="125:5" pos:end="125:22"><specifier pos:start="125:5" pos:end="125:10">public</specifier> <specifier pos:start="125:12" pos:end="125:17">static</specifier> <name pos:start="125:19" pos:end="125:22">void</name></type> <name pos:start="125:24" pos:end="125:44">stopDroneIfNotStopped</name><parameter_list pos:start="125:45" pos:end="125:65">(<parameter pos:start="125:46" pos:end="125:64"><decl pos:start="125:46" pos:end="125:64"><type pos:start="125:46" pos:end="125:58"><name pos:start="125:46" pos:end="125:58">DroneSnapshot</name></type> <name pos:start="125:60" pos:end="125:64">drone</name></decl></parameter>)</parameter_list> <block pos:start="125:67" pos:end="134:5">{<block_content pos:start="127:9" pos:end="133:55">
        <comment type="line" pos:start="126:9" pos:end="126:99">// we don't need to do anything if the first command in the command queue is a stop command</comment>
        <if_stmt pos:start="127:9" pos:end="131:9"><if pos:start="127:9" pos:end="131:9">if <condition pos:start="127:12" pos:end="127:43">(<expr pos:start="127:13" pos:end="127:42"><operator pos:start="127:13" pos:end="127:13">!</operator><call pos:start="127:14" pos:end="127:32"><name pos:start="127:14" pos:end="127:30"><name pos:start="127:14" pos:end="127:18">drone</name><operator pos:start="127:19" pos:end="127:19">.</operator><name pos:start="127:20" pos:end="127:30">getCommands</name></name><argument_list pos:start="127:31" pos:end="127:32">()</argument_list></call><operator pos:start="127:33" pos:end="127:33">.</operator><call pos:start="127:34" pos:end="127:42"><name pos:start="127:34" pos:end="127:40">isEmpty</name><argument_list pos:start="127:41" pos:end="127:42">()</argument_list></call></expr>)</condition> <block pos:start="127:45" pos:end="131:9">{<block_content pos:start="128:13" pos:end="130:13">
            <if_stmt pos:start="128:13" pos:end="130:13"><if pos:start="128:13" pos:end="130:13">if <condition pos:start="128:16" pos:end="128:66">(<expr pos:start="128:17" pos:end="128:65"><call pos:start="128:17" pos:end="128:35"><name pos:start="128:17" pos:end="128:33"><name pos:start="128:17" pos:end="128:21">drone</name><operator pos:start="128:22" pos:end="128:22">.</operator><name pos:start="128:23" pos:end="128:33">getCommands</name></name><argument_list pos:start="128:34" pos:end="128:35">()</argument_list></call><operator pos:start="128:36" pos:end="128:36">.</operator><call pos:start="128:37" pos:end="128:42"><name pos:start="128:37" pos:end="128:39">get</name><argument_list pos:start="128:40" pos:end="128:42">(<argument pos:start="128:41" pos:end="128:41"><expr pos:start="128:41" pos:end="128:41"><literal type="number" pos:start="128:41" pos:end="128:41">0</literal></expr></argument>)</argument_list></call> <operator pos:start="128:44" pos:end="128:53">instanceof</operator> <name pos:start="128:55" pos:end="128:65">StopCommand</name></expr>)</condition> <block pos:start="128:68" pos:end="130:13">{<block_content pos:start="129:17" pos:end="129:23">
                <return pos:start="129:17" pos:end="129:23">return;</return>
            </block_content>}</block></if></if_stmt>
        </block_content>}</block></if></if_stmt>
        <expr_stmt pos:start="132:9" pos:end="132:36"><expr pos:start="132:9" pos:end="132:35"><call pos:start="132:9" pos:end="132:27"><name pos:start="132:9" pos:end="132:25"><name pos:start="132:9" pos:end="132:13">drone</name><operator pos:start="132:14" pos:end="132:14">.</operator><name pos:start="132:15" pos:end="132:25">getCommands</name></name><argument_list pos:start="132:26" pos:end="132:27">()</argument_list></call><operator pos:start="132:28" pos:end="132:28">.</operator><call pos:start="132:29" pos:end="132:35"><name pos:start="132:29" pos:end="132:33">clear</name><argument_list pos:start="132:34" pos:end="132:35">()</argument_list></call></expr>;</expr_stmt>
        <expr_stmt pos:start="133:9" pos:end="133:55"><expr pos:start="133:9" pos:end="133:54"><call pos:start="133:9" pos:end="133:27"><name pos:start="133:9" pos:end="133:25"><name pos:start="133:9" pos:end="133:13">drone</name><operator pos:start="133:14" pos:end="133:14">.</operator><name pos:start="133:15" pos:end="133:25">getCommands</name></name><argument_list pos:start="133:26" pos:end="133:27">()</argument_list></call><operator pos:start="133:28" pos:end="133:28">.</operator><call pos:start="133:29" pos:end="133:54"><name pos:start="133:29" pos:end="133:31">add</name><argument_list pos:start="133:32" pos:end="133:54">(<argument pos:start="133:33" pos:end="133:53"><expr pos:start="133:33" pos:end="133:53"><operator pos:start="133:33" pos:end="133:35">new</operator> <call pos:start="133:37" pos:end="133:53"><name pos:start="133:37" pos:end="133:47">StopCommand</name><argument_list pos:start="133:48" pos:end="133:53">(<argument pos:start="133:49" pos:end="133:52"><expr pos:start="133:49" pos:end="133:52"><operator pos:start="133:49" pos:end="133:49">-</operator><literal type="number" pos:start="133:50" pos:end="133:52">1.0</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></function>

    <comment type="block" pos:start="136:5" pos:end="139:7">/*
    if this method is called, we want the drone to fly to the current goal, so we will wipe out command queue and put a
    waypoint command in there unless the drone is already doing the right thing.
     */</comment>
    <function pos:start="140:5" pos:end="158:5"><type pos:start="140:5" pos:end="140:22"><specifier pos:start="140:5" pos:end="140:10">public</specifier> <specifier pos:start="140:12" pos:end="140:17">static</specifier> <name pos:start="140:19" pos:end="140:22">void</name></type> <name pos:start="140:24" pos:end="140:44">flyToGoalIfNotAlready</name><parameter_list pos:start="140:45" pos:end="140:92">(<parameter pos:start="140:46" pos:end="140:64"><decl pos:start="140:46" pos:end="140:64"><type pos:start="140:46" pos:end="140:64"><name pos:start="140:46" pos:end="140:58">DroneSnapshot</name></type> <name pos:start="140:60" pos:end="140:64">drone</name></decl></parameter>, <parameter pos:start="140:67" pos:end="140:91"><decl pos:start="140:67" pos:end="140:91"><type pos:start="140:67" pos:end="140:91"><name pos:start="140:67" pos:end="140:86">WaypointGoalSnapshot</name></type> <name pos:start="140:88" pos:end="140:91">goal</name></decl></parameter>)</parameter_list> <block pos:start="140:94" pos:end="158:5">{<block_content pos:start="143:9" pos:end="157:37">
        <comment type="line" pos:start="141:9" pos:end="141:116">// check if we are doing the right thing: that we have one cmd in the command queue and that cmd matches the</comment>
        <comment type="line" pos:start="142:9" pos:end="142:32">// current waypoint goal</comment>
        <if_stmt pos:start="143:9" pos:end="152:9"><if pos:start="143:9" pos:end="152:9">if <condition pos:start="143:12" pos:end="143:44">(<expr pos:start="143:13" pos:end="143:43"><call pos:start="143:13" pos:end="143:31"><name pos:start="143:13" pos:end="143:29"><name pos:start="143:13" pos:end="143:17">drone</name><operator pos:start="143:18" pos:end="143:18">.</operator><name pos:start="143:19" pos:end="143:29">getCommands</name></name><argument_list pos:start="143:30" pos:end="143:31">()</argument_list></call><operator pos:start="143:32" pos:end="143:32">.</operator><call pos:start="143:33" pos:end="143:38"><name pos:start="143:33" pos:end="143:36">size</name><argument_list pos:start="143:37" pos:end="143:38">()</argument_list></call> <operator pos:start="143:40" pos:end="143:41">==</operator> <literal type="number" pos:start="143:43" pos:end="143:43">1</literal></expr>)</condition> <block pos:start="143:46" pos:end="152:9">{<block_content pos:start="144:13" pos:end="151:13">
            <if_stmt pos:start="144:13" pos:end="151:13"><if pos:start="144:13" pos:end="151:13">if <condition pos:start="144:16" pos:end="144:70">(<expr pos:start="144:17" pos:end="144:69"><call pos:start="144:17" pos:end="144:35"><name pos:start="144:17" pos:end="144:33"><name pos:start="144:17" pos:end="144:21">drone</name><operator pos:start="144:22" pos:end="144:22">.</operator><name pos:start="144:23" pos:end="144:33">getCommands</name></name><argument_list pos:start="144:34" pos:end="144:35">()</argument_list></call><operator pos:start="144:36" pos:end="144:36">.</operator><call pos:start="144:37" pos:end="144:42"><name pos:start="144:37" pos:end="144:39">get</name><argument_list pos:start="144:40" pos:end="144:42">(<argument pos:start="144:41" pos:end="144:41"><expr pos:start="144:41" pos:end="144:41"><literal type="number" pos:start="144:41" pos:end="144:41">0</literal></expr></argument>)</argument_list></call> <operator pos:start="144:44" pos:end="144:53">instanceof</operator> <name pos:start="144:55" pos:end="144:69">WaypointCommand</name></expr>)</condition> <block pos:start="144:72" pos:end="151:13">{<block_content pos:start="145:17" pos:end="150:17">
                <decl_stmt pos:start="145:17" pos:end="145:82"><decl pos:start="145:17" pos:end="145:81"><type pos:start="145:17" pos:end="145:31"><name pos:start="145:17" pos:end="145:31">WaypointCommand</name></type> <name pos:start="145:33" pos:end="145:34">wp</name> <init pos:start="145:36" pos:end="145:81">= <expr pos:start="145:38" pos:end="145:81"><operator pos:start="145:38" pos:end="145:38">(</operator><name pos:start="145:39" pos:end="145:53">WaypointCommand</name><operator pos:start="145:54" pos:end="145:54">)</operator> <call pos:start="145:56" pos:end="145:74"><name pos:start="145:56" pos:end="145:72"><name pos:start="145:56" pos:end="145:60">drone</name><operator pos:start="145:61" pos:end="145:61">.</operator><name pos:start="145:62" pos:end="145:72">getCommands</name></name><argument_list pos:start="145:73" pos:end="145:74">()</argument_list></call><operator pos:start="145:75" pos:end="145:75">.</operator><call pos:start="145:76" pos:end="145:81"><name pos:start="145:76" pos:end="145:78">get</name><argument_list pos:start="145:79" pos:end="145:81">(<argument pos:start="145:80" pos:end="145:80"><expr pos:start="145:80" pos:end="145:80"><literal type="number" pos:start="145:80" pos:end="145:80">0</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
                <decl_stmt pos:start="146:17" pos:end="146:118"><decl pos:start="146:17" pos:end="146:117"><type pos:start="146:17" pos:end="146:23"><name pos:start="146:17" pos:end="146:23">boolean</name></type> <name pos:start="146:25" pos:end="146:32">sameDest</name> <init pos:start="146:34" pos:end="146:117">= <expr pos:start="146:36" pos:end="146:117"><call pos:start="146:36" pos:end="146:54"><name pos:start="146:36" pos:end="146:52"><name pos:start="146:36" pos:end="146:37">wp</name><operator pos:start="146:38" pos:end="146:38">.</operator><name pos:start="146:39" pos:end="146:52">getDestination</name></name><argument_list pos:start="146:53" pos:end="146:54">()</argument_list></call><operator pos:start="146:55" pos:end="146:55">.</operator><call pos:start="146:56" pos:end="146:72"><name pos:start="146:56" pos:end="146:70">toLlaCoordinate</name><argument_list pos:start="146:71" pos:end="146:72">()</argument_list></call><operator pos:start="146:73" pos:end="146:73">.</operator><call pos:start="146:74" pos:end="146:117"><name pos:start="146:74" pos:end="146:79">equals</name><argument_list pos:start="146:80" pos:end="146:117">(<argument pos:start="146:81" pos:end="146:116"><expr pos:start="146:81" pos:end="146:116"><call pos:start="146:81" pos:end="146:98"><name pos:start="146:81" pos:end="146:96"><name pos:start="146:81" pos:end="146:84">goal</name><operator pos:start="146:85" pos:end="146:85">.</operator><name pos:start="146:86" pos:end="146:96">getPosition</name></name><argument_list pos:start="146:97" pos:end="146:98">()</argument_list></call><operator pos:start="146:99" pos:end="146:99">.</operator><call pos:start="146:100" pos:end="146:116"><name pos:start="146:100" pos:end="146:114">toLlaCoordinate</name><argument_list pos:start="146:115" pos:end="146:116">()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
                <decl_stmt pos:start="147:17" pos:end="147:69"><decl pos:start="147:17" pos:end="147:68"><type pos:start="147:17" pos:end="147:23"><name pos:start="147:17" pos:end="147:23">boolean</name></type> <name pos:start="147:25" pos:end="147:33">sameSpeed</name> <init pos:start="147:35" pos:end="147:68">= <expr pos:start="147:37" pos:end="147:68"><call pos:start="147:37" pos:end="147:49"><name pos:start="147:37" pos:end="147:47"><name pos:start="147:37" pos:end="147:38">wp</name><operator pos:start="147:39" pos:end="147:39">.</operator><name pos:start="147:40" pos:end="147:47">getSpeed</name></name><argument_list pos:start="147:48" pos:end="147:49">()</argument_list></call> <operator pos:start="147:51" pos:end="147:52">==</operator> <call pos:start="147:54" pos:end="147:68"><name pos:start="147:54" pos:end="147:66"><name pos:start="147:54" pos:end="147:57">goal</name><operator pos:start="147:58" pos:end="147:58">.</operator><name pos:start="147:59" pos:end="147:66">getSpeed</name></name><argument_list pos:start="147:67" pos:end="147:68">()</argument_list></call></expr></init></decl>;</decl_stmt>
                <if_stmt pos:start="148:17" pos:end="150:17"><if pos:start="148:17" pos:end="150:17">if <condition pos:start="148:20" pos:end="148:42">(<expr pos:start="148:21" pos:end="148:41"><name pos:start="148:21" pos:end="148:28">sameDest</name> <operator pos:start="148:30" pos:end="148:31">&amp;&amp;</operator> <name pos:start="148:33" pos:end="148:41">sameSpeed</name></expr>)</condition> <block pos:start="148:44" pos:end="150:17">{<block_content pos:start="149:21" pos:end="149:27">
                    <return pos:start="149:21" pos:end="149:27">return;</return>
                </block_content>}</block></if></if_stmt>
            </block_content>}</block></if></if_stmt>
        </block_content>}</block></if></if_stmt>
        <comment type="line" pos:start="153:9" pos:end="153:118">// we have now filtered out the case where we don't have to do anything. If this code runs, we need to replace</comment>
        <comment type="line" pos:start="154:9" pos:end="154:38">// what's in the command queue</comment>
        <expr_stmt pos:start="155:9" pos:end="155:36"><expr pos:start="155:9" pos:end="155:35"><call pos:start="155:9" pos:end="155:27"><name pos:start="155:9" pos:end="155:25"><name pos:start="155:9" pos:end="155:13">drone</name><operator pos:start="155:14" pos:end="155:14">.</operator><name pos:start="155:15" pos:end="155:25">getCommands</name></name><argument_list pos:start="155:26" pos:end="155:27">()</argument_list></call><operator pos:start="155:28" pos:end="155:28">.</operator><call pos:start="155:29" pos:end="155:35"><name pos:start="155:29" pos:end="155:33">clear</name><argument_list pos:start="155:34" pos:end="155:35">()</argument_list></call></expr>;</expr_stmt>
        <decl_stmt pos:start="156:9" pos:end="156:105"><decl pos:start="156:9" pos:end="156:104"><type pos:start="156:9" pos:end="156:23"><name pos:start="156:9" pos:end="156:23">WaypointCommand</name></type> <name pos:start="156:25" pos:end="156:27">cmd</name> <init pos:start="156:29" pos:end="156:104">= <expr pos:start="156:31" pos:end="156:104"><operator pos:start="156:31" pos:end="156:33">new</operator> <call pos:start="156:35" pos:end="156:104"><name pos:start="156:35" pos:end="156:49">WaypointCommand</name><argument_list pos:start="156:50" pos:end="156:104">(<argument pos:start="156:51" pos:end="156:86"><expr pos:start="156:51" pos:end="156:86"><call pos:start="156:51" pos:end="156:68"><name pos:start="156:51" pos:end="156:66"><name pos:start="156:51" pos:end="156:54">goal</name><operator pos:start="156:55" pos:end="156:55">.</operator><name pos:start="156:56" pos:end="156:66">getPosition</name></name><argument_list pos:start="156:67" pos:end="156:68">()</argument_list></call><operator pos:start="156:69" pos:end="156:69">.</operator><call pos:start="156:70" pos:end="156:86"><name pos:start="156:70" pos:end="156:84">toLlaCoordinate</name><argument_list pos:start="156:85" pos:end="156:86">()</argument_list></call></expr></argument>, <argument pos:start="156:89" pos:end="156:103"><expr pos:start="156:89" pos:end="156:103"><call pos:start="156:89" pos:end="156:103"><name pos:start="156:89" pos:end="156:101"><name pos:start="156:89" pos:end="156:92">goal</name><operator pos:start="156:93" pos:end="156:93">.</operator><name pos:start="156:94" pos:end="156:101">getSpeed</name></name><argument_list pos:start="156:102" pos:end="156:103">()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <expr_stmt pos:start="157:9" pos:end="157:37"><expr pos:start="157:9" pos:end="157:36"><call pos:start="157:9" pos:end="157:27"><name pos:start="157:9" pos:end="157:25"><name pos:start="157:9" pos:end="157:13">drone</name><operator pos:start="157:14" pos:end="157:14">.</operator><name pos:start="157:15" pos:end="157:25">getCommands</name></name><argument_list pos:start="157:26" pos:end="157:27">()</argument_list></call><operator pos:start="157:28" pos:end="157:28">.</operator><call pos:start="157:29" pos:end="157:36"><name pos:start="157:29" pos:end="157:31">add</name><argument_list pos:start="157:32" pos:end="157:36">(<argument pos:start="157:33" pos:end="157:35"><expr pos:start="157:33" pos:end="157:35"><name pos:start="157:33" pos:end="157:35">cmd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></function>
}</block></class>
</unit>
