<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="Java" filename="flatCode/RemoteServerProcessListenerAdapter.java" pos:tabs="8"><package pos:start="1:1" pos:end="1:41">package <name pos:start="1:9" pos:end="1:40"><name pos:start="1:9" pos:end="1:11">edu</name><operator pos:start="1:12" pos:end="1:12">.</operator><name pos:start="1:13" pos:end="1:14">nd</name><operator pos:start="1:15" pos:end="1:15">.</operator><name pos:start="1:16" pos:end="1:24">dronology</name><operator pos:start="1:25" pos:end="1:25">.</operator><name pos:start="1:26" pos:end="1:33">services</name><operator pos:start="1:34" pos:end="1:34">.</operator><name pos:start="1:35" pos:end="1:40">remote</name></name>;</package>

<import pos:start="3:1" pos:end="3:32">import <name pos:start="3:8" pos:end="3:31"><name pos:start="3:8" pos:end="3:11">java</name><operator pos:start="3:12" pos:end="3:12">.</operator><name pos:start="3:13" pos:end="3:15">rmi</name><operator pos:start="3:16" pos:end="3:16">.</operator><name pos:start="3:17" pos:end="3:31">RemoteException</name></name>;</import>

<import pos:start="5:1" pos:end="5:56">import <name pos:start="5:8" pos:end="5:55"><name pos:start="5:8" pos:end="5:10">edu</name><operator pos:start="5:11" pos:end="5:11">.</operator><name pos:start="5:12" pos:end="5:13">nd</name><operator pos:start="5:14" pos:end="5:14">.</operator><name pos:start="5:15" pos:end="5:23">dronology</name><operator pos:start="5:24" pos:end="5:24">.</operator><name pos:start="5:25" pos:end="5:32">services</name><operator pos:start="5:33" pos:end="5:33">.</operator><name pos:start="5:34" pos:end="5:37">core</name><operator pos:start="5:38" pos:end="5:38">.</operator><name pos:start="5:39" pos:end="5:41">api</name><operator pos:start="5:42" pos:end="5:42">.</operator><name pos:start="5:43" pos:end="5:55">ServiceStatus</name></name>;</import>
<import pos:start="6:1" pos:end="6:64">import <name pos:start="6:8" pos:end="6:63"><name pos:start="6:8" pos:end="6:10">edu</name><operator pos:start="6:11" pos:end="6:11">.</operator><name pos:start="6:12" pos:end="6:13">nd</name><operator pos:start="6:14" pos:end="6:14">.</operator><name pos:start="6:15" pos:end="6:23">dronology</name><operator pos:start="6:24" pos:end="6:24">.</operator><name pos:start="6:25" pos:end="6:32">services</name><operator pos:start="6:33" pos:end="6:33">.</operator><name pos:start="6:34" pos:end="6:37">core</name><operator pos:start="6:38" pos:end="6:38">.</operator><name pos:start="6:39" pos:end="6:46">listener</name><operator pos:start="6:47" pos:end="6:47">.</operator><name pos:start="6:48" pos:end="6:63">IServiceListener</name></name>;</import>
<import pos:start="7:1" pos:end="7:68">import <name pos:start="7:8" pos:end="7:67"><name pos:start="7:8" pos:end="7:10">edu</name><operator pos:start="7:11" pos:end="7:11">.</operator><name pos:start="7:12" pos:end="7:13">nd</name><operator pos:start="7:14" pos:end="7:14">.</operator><name pos:start="7:15" pos:end="7:23">dronology</name><operator pos:start="7:24" pos:end="7:24">.</operator><name pos:start="7:25" pos:end="7:32">services</name><operator pos:start="7:33" pos:end="7:33">.</operator><name pos:start="7:34" pos:end="7:37">core</name><operator pos:start="7:38" pos:end="7:38">.</operator><name pos:start="7:39" pos:end="7:44">remote</name><operator pos:start="7:45" pos:end="7:45">.</operator><name pos:start="7:46" pos:end="7:67">IRemoteServiceListener</name></name>;</import>
<import pos:start="8:1" pos:end="8:30">import <name pos:start="8:8" pos:end="8:29"><name pos:start="8:8" pos:end="8:10">net</name><operator pos:start="8:11" pos:end="8:11">.</operator><name pos:start="8:12" pos:end="8:13">mv</name><operator pos:start="8:14" pos:end="8:14">.</operator><name pos:start="8:15" pos:end="8:21">logging</name><operator pos:start="8:22" pos:end="8:22">.</operator><name pos:start="8:23" pos:end="8:29">ILogger</name></name>;</import>
<import pos:start="9:1" pos:end="9:37">import <name pos:start="9:8" pos:end="9:36"><name pos:start="9:8" pos:end="9:10">net</name><operator pos:start="9:11" pos:end="9:11">.</operator><name pos:start="9:12" pos:end="9:13">mv</name><operator pos:start="9:14" pos:end="9:14">.</operator><name pos:start="9:15" pos:end="9:21">logging</name><operator pos:start="9:22" pos:end="9:22">.</operator><name pos:start="9:23" pos:end="9:36">LoggerProvider</name></name>;</import>

<class pos:start="11:1" pos:end="51:1"><specifier pos:start="11:1" pos:end="11:6">public</specifier> class <name pos:start="11:14" pos:end="11:47">RemoteServerProcessListenerAdapter</name> <super_list pos:start="11:49" pos:end="11:75"><implements pos:start="11:49" pos:end="11:75">implements <super pos:start="11:60" pos:end="11:75"><name pos:start="11:60" pos:end="11:75">IServiceListener</name></super></implements></super_list> <block pos:start="11:77" pos:end="51:1">{

	<decl_stmt pos:start="13:9" pos:end="13:113"><decl pos:start="13:9" pos:end="13:112"><type pos:start="13:9" pos:end="13:36"><specifier pos:start="13:9" pos:end="13:15">private</specifier> <specifier pos:start="13:17" pos:end="13:22">static</specifier> <specifier pos:start="13:24" pos:end="13:28">final</specifier> <name pos:start="13:30" pos:end="13:36">ILogger</name></type> <name pos:start="13:38" pos:end="13:43">LOGGER</name> <init pos:start="13:45" pos:end="13:112">= <expr pos:start="13:47" pos:end="13:112"><call pos:start="13:47" pos:end="13:112"><name pos:start="13:47" pos:end="13:70"><name pos:start="13:47" pos:end="13:60">LoggerProvider</name><operator pos:start="13:61" pos:end="13:61">.</operator><name pos:start="13:62" pos:end="13:70">getLogger</name></name><argument_list pos:start="13:71" pos:end="13:112">(<argument pos:start="13:72" pos:end="13:111"><expr pos:start="13:72" pos:end="13:111"><name pos:start="13:72" pos:end="13:111"><name pos:start="13:72" pos:end="13:105">RemoteServerProcessListenerAdapter</name><operator pos:start="13:106" pos:end="13:106">.</operator><name pos:start="13:107" pos:end="13:111">class</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<decl_stmt pos:start="14:9" pos:end="14:48"><decl pos:start="14:9" pos:end="14:47"><type pos:start="14:9" pos:end="14:38"><specifier pos:start="14:9" pos:end="14:15">private</specifier> <name pos:start="14:17" pos:end="14:38">IRemoteServiceListener</name></type> <name pos:start="14:40" pos:end="14:47">listener</name></decl>;</decl_stmt>

	<constructor pos:start="16:9" pos:end="18:9"><specifier pos:start="16:9" pos:end="16:14">public</specifier> <name pos:start="16:16" pos:end="16:49">RemoteServerProcessListenerAdapter</name><parameter_list pos:start="16:50" pos:end="16:82">(<parameter pos:start="16:51" pos:end="16:81"><decl pos:start="16:51" pos:end="16:81"><type pos:start="16:51" pos:end="16:72"><name pos:start="16:51" pos:end="16:72">IRemoteServiceListener</name></type> <name pos:start="16:74" pos:end="16:81">listener</name></decl></parameter>)</parameter_list> <block pos:start="16:84" pos:end="18:9">{<block_content pos:start="17:17" pos:end="17:41">
		<expr_stmt pos:start="17:17" pos:end="17:41"><expr pos:start="17:17" pos:end="17:40"><name pos:start="17:17" pos:end="17:29"><name pos:start="17:17" pos:end="17:20">this</name><operator pos:start="17:21" pos:end="17:21">.</operator><name pos:start="17:22" pos:end="17:29">listener</name></name> <operator pos:start="17:31" pos:end="17:31">=</operator> <name pos:start="17:33" pos:end="17:40">listener</name></expr>;</expr_stmt>
	</block_content>}</block></constructor>

	<function pos:start="20:9" pos:end="27:9"><annotation pos:start="20:9" pos:end="20:17">@<name pos:start="20:10" pos:end="20:17">Override</name></annotation>
	<type pos:start="21:9" pos:end="21:19"><specifier pos:start="21:9" pos:end="21:14">public</specifier> <name pos:start="21:16" pos:end="21:19">void</name></type> <name pos:start="21:21" pos:end="21:33">statusChanged</name><parameter_list pos:start="21:34" pos:end="21:57">(<parameter pos:start="21:35" pos:end="21:56"><decl pos:start="21:35" pos:end="21:56"><type pos:start="21:35" pos:end="21:47"><name pos:start="21:35" pos:end="21:47">ServiceStatus</name></type> <name pos:start="21:49" pos:end="21:56">newState</name></decl></parameter>)</parameter_list> <block pos:start="21:59" pos:end="27:9">{<block_content pos:start="22:17" pos:end="26:17">
		<try pos:start="22:17" pos:end="26:17">try <block pos:start="22:21" pos:end="24:17">{<block_content pos:start="23:25" pos:end="23:57">
			<expr_stmt pos:start="23:25" pos:end="23:57"><expr pos:start="23:25" pos:end="23:56"><call pos:start="23:25" pos:end="23:56"><name pos:start="23:25" pos:end="23:46"><name pos:start="23:25" pos:end="23:32">listener</name><operator pos:start="23:33" pos:end="23:33">.</operator><name pos:start="23:34" pos:end="23:46">statusChanged</name></name><argument_list pos:start="23:47" pos:end="23:56">(<argument pos:start="23:48" pos:end="23:55"><expr pos:start="23:48" pos:end="23:55"><name pos:start="23:48" pos:end="23:55">newState</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		</block_content>}</block> <catch pos:start="24:19" pos:end="26:17">catch <parameter_list pos:start="24:25" pos:end="24:43">(<parameter pos:start="24:26" pos:end="24:42"><decl pos:start="24:26" pos:end="24:42"><type pos:start="24:26" pos:end="24:42"><name pos:start="24:26" pos:end="24:40">RemoteException</name></type> <name pos:start="24:42" pos:end="24:42">e</name></decl></parameter>)</parameter_list> <block pos:start="24:45" pos:end="26:17">{<block_content pos:start="25:25" pos:end="25:40">
			<expr_stmt pos:start="25:25" pos:end="25:40"><expr pos:start="25:25" pos:end="25:39"><call pos:start="25:25" pos:end="25:39"><name pos:start="25:25" pos:end="25:36"><name pos:start="25:25" pos:end="25:30">LOGGER</name><operator pos:start="25:31" pos:end="25:31">.</operator><name pos:start="25:32" pos:end="25:36">error</name></name><argument_list pos:start="25:37" pos:end="25:39">(<argument pos:start="25:38" pos:end="25:38"><expr pos:start="25:38" pos:end="25:38"><name pos:start="25:38" pos:end="25:38">e</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		</block_content>}</block></catch></try>
	</block_content>}</block></function>
	
	<function pos:start="29:9" pos:end="38:9"><annotation pos:start="29:9" pos:end="29:17">@<name pos:start="29:10" pos:end="29:17">Override</name></annotation>
	<type pos:start="30:9" pos:end="30:22"><specifier pos:start="30:9" pos:end="30:14">public</specifier> <name pos:start="30:16" pos:end="30:22">boolean</name></type> <name pos:start="30:24" pos:end="30:29">equals</name><parameter_list pos:start="30:30" pos:end="30:48">(<parameter pos:start="30:31" pos:end="30:47"><decl pos:start="30:31" pos:end="30:47"><type pos:start="30:31" pos:end="30:36"><name pos:start="30:31" pos:end="30:36">Object</name></type> <name pos:start="30:38" pos:end="30:47">thatObject</name></decl></parameter>)</parameter_list> <block pos:start="30:50" pos:end="38:9">{<block_content pos:start="31:17" pos:end="37:104">
		<if_stmt pos:start="31:17" pos:end="33:17"><if pos:start="31:17" pos:end="33:17">if <condition pos:start="31:20" pos:end="31:39">(<expr pos:start="31:21" pos:end="31:38"><name pos:start="31:21" pos:end="31:24">this</name> <operator pos:start="31:26" pos:end="31:27">==</operator> <name pos:start="31:29" pos:end="31:38">thatObject</name></expr>)</condition> <block pos:start="31:41" pos:end="33:17">{<block_content pos:start="32:25" pos:end="32:36">
			<return pos:start="32:25" pos:end="32:36">return <expr pos:start="32:32" pos:end="32:35"><literal type="boolean" pos:start="32:32" pos:end="32:35">true</literal></expr>;</return>
		</block_content>}</block></if></if_stmt>
		<if_stmt pos:start="34:17" pos:end="36:17"><if pos:start="34:17" pos:end="36:17">if <condition pos:start="34:20" pos:end="34:80">(<expr pos:start="34:21" pos:end="34:79"><operator pos:start="34:21" pos:end="34:21">!</operator><operator pos:start="34:22" pos:end="34:22">(</operator><name pos:start="34:23" pos:end="34:32">thatObject</name> <operator pos:start="34:34" pos:end="34:43">instanceof</operator> <name pos:start="34:45" pos:end="34:78">RemoteServerProcessListenerAdapter</name><operator pos:start="34:79" pos:end="34:79">)</operator></expr>)</condition> <block pos:start="34:82" pos:end="36:17">{<block_content pos:start="35:25" pos:end="35:37">
			<return pos:start="35:25" pos:end="35:37">return <expr pos:start="35:32" pos:end="35:36"><literal type="boolean" pos:start="35:32" pos:end="35:36">false</literal></expr>;</return>
		</block_content>}</block></if></if_stmt>
		<return pos:start="37:17" pos:end="37:104">return <expr pos:start="37:24" pos:end="37:103"><call pos:start="37:24" pos:end="37:103"><name pos:start="37:24" pos:end="37:43"><name pos:start="37:24" pos:end="37:27">this</name><operator pos:start="37:28" pos:end="37:28">.</operator><name pos:start="37:29" pos:end="37:36">listener</name><operator pos:start="37:37" pos:end="37:37">.</operator><name pos:start="37:38" pos:end="37:43">equals</name></name><argument_list pos:start="37:44" pos:end="37:103">(<argument pos:start="37:45" pos:end="37:102"><expr pos:start="37:45" pos:end="37:102"><operator pos:start="37:45" pos:end="37:45">(</operator><operator pos:start="37:46" pos:end="37:46">(</operator><name pos:start="37:47" pos:end="37:80">RemoteServerProcessListenerAdapter</name><operator pos:start="37:81" pos:end="37:81">)</operator> <name pos:start="37:83" pos:end="37:92">thatObject</name><operator pos:start="37:93" pos:end="37:93">)</operator><operator pos:start="37:94" pos:end="37:94">.</operator><name pos:start="37:95" pos:end="37:102">listener</name></expr></argument>)</argument_list></call></expr>;</return>
	</block_content>}</block></function>

	<function pos:start="40:9" pos:end="46:9"><annotation pos:start="40:9" pos:end="40:17">@<name pos:start="40:10" pos:end="40:17">Override</name></annotation>
	<type pos:start="41:9" pos:end="41:18"><specifier pos:start="41:9" pos:end="41:14">public</specifier> <name pos:start="41:16" pos:end="41:18">int</name></type> <name pos:start="41:20" pos:end="41:27">hashCode</name><parameter_list pos:start="41:28" pos:end="41:29">()</parameter_list> <block pos:start="41:31" pos:end="46:9">{<block_content pos:start="42:17" pos:end="45:30">
		<decl_stmt pos:start="42:17" pos:end="42:37"><decl pos:start="42:17" pos:end="42:36"><type pos:start="42:17" pos:end="42:25"><specifier pos:start="42:17" pos:end="42:21">final</specifier> <name pos:start="42:23" pos:end="42:25">int</name></type> <name pos:start="42:27" pos:end="42:31">prime</name> <init pos:start="42:33" pos:end="42:36">= <expr pos:start="42:35" pos:end="42:36"><literal type="number" pos:start="42:35" pos:end="42:36">31</literal></expr></init></decl>;</decl_stmt>
		<decl_stmt pos:start="43:17" pos:end="43:31"><decl pos:start="43:17" pos:end="43:30"><type pos:start="43:17" pos:end="43:19"><name pos:start="43:17" pos:end="43:19">int</name></type> <name pos:start="43:21" pos:end="43:26">result</name> <init pos:start="43:28" pos:end="43:30">= <expr pos:start="43:30" pos:end="43:30"><literal type="number" pos:start="43:30" pos:end="43:30">1</literal></expr></init></decl>;</decl_stmt>
		<expr_stmt pos:start="44:17" pos:end="44:89"><expr pos:start="44:17" pos:end="44:88"><name pos:start="44:17" pos:end="44:22">result</name> <operator pos:start="44:24" pos:end="44:24">=</operator> <name pos:start="44:26" pos:end="44:30">prime</name> <operator pos:start="44:32" pos:end="44:32">*</operator> <name pos:start="44:34" pos:end="44:39">result</name> <operator pos:start="44:41" pos:end="44:41">+</operator> <operator pos:start="44:43" pos:end="44:43">(</operator><ternary pos:start="44:44" pos:end="44:87"><condition pos:start="44:44" pos:end="44:63"><expr pos:start="44:44" pos:end="44:61"><operator pos:start="44:44" pos:end="44:44">(</operator><name pos:start="44:45" pos:end="44:52">listener</name> <operator pos:start="44:54" pos:end="44:55">==</operator> <literal type="null" pos:start="44:57" pos:end="44:60">null</literal><operator pos:start="44:61" pos:end="44:61">)</operator></expr> ?</condition><then pos:start="44:65" pos:end="44:65"> <expr pos:start="44:65" pos:end="44:65"><literal type="number" pos:start="44:65" pos:end="44:65">0</literal></expr> </then><else pos:start="44:67" pos:end="44:87">: <expr pos:start="44:69" pos:end="44:87"><call pos:start="44:69" pos:end="44:87"><name pos:start="44:69" pos:end="44:85"><name pos:start="44:69" pos:end="44:76">listener</name><operator pos:start="44:77" pos:end="44:77">.</operator><name pos:start="44:78" pos:end="44:85">hashCode</name></name><argument_list pos:start="44:86" pos:end="44:87">()</argument_list></call></expr></else></ternary><operator pos:start="44:88" pos:end="44:88">)</operator></expr>;</expr_stmt>
		<return pos:start="45:17" pos:end="45:30">return <expr pos:start="45:24" pos:end="45:29"><name pos:start="45:24" pos:end="45:29">result</name></expr>;</return>
	</block_content>}</block></function>
	
	
	

}</block></class>
</unit>
