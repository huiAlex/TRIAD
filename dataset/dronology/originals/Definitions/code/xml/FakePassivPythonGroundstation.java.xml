<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="Java" filename="flatCode/FakePassivPythonGroundstation.java" pos:tabs="8"><package pos:start="1:1" pos:end="1:34">package <name pos:start="1:9" pos:end="1:33"><name pos:start="1:9" pos:end="1:11">edu</name><operator pos:start="1:12" pos:end="1:12">.</operator><name pos:start="1:13" pos:end="1:14">nd</name><operator pos:start="1:15" pos:end="1:15">.</operator><name pos:start="1:16" pos:end="1:24">dronology</name><operator pos:start="1:25" pos:end="1:25">.</operator><name pos:start="1:26" pos:end="1:29">misc</name><operator pos:start="1:30" pos:end="1:30">.</operator><name pos:start="1:31" pos:end="1:33">gcs</name></name>;</package>

<import pos:start="3:1" pos:end="3:30">import <name pos:start="3:8" pos:end="3:29"><name pos:start="3:8" pos:end="3:11">java</name><operator pos:start="3:12" pos:end="3:12">.</operator><name pos:start="3:13" pos:end="3:14">io</name><operator pos:start="3:15" pos:end="3:15">.</operator><name pos:start="3:16" pos:end="3:29">BufferedReader</name></name>;</import>
<import pos:start="4:1" pos:end="4:30">import <name pos:start="4:8" pos:end="4:29"><name pos:start="4:8" pos:end="4:11">java</name><operator pos:start="4:12" pos:end="4:12">.</operator><name pos:start="4:13" pos:end="4:14">io</name><operator pos:start="4:15" pos:end="4:15">.</operator><name pos:start="4:16" pos:end="4:29">BufferedWriter</name></name>;</import>
<import pos:start="5:1" pos:end="5:27">import <name pos:start="5:8" pos:end="5:26"><name pos:start="5:8" pos:end="5:11">java</name><operator pos:start="5:12" pos:end="5:12">.</operator><name pos:start="5:13" pos:end="5:14">io</name><operator pos:start="5:15" pos:end="5:15">.</operator><name pos:start="5:16" pos:end="5:26">InputStream</name></name>;</import>
<import pos:start="6:1" pos:end="6:33">import <name pos:start="6:8" pos:end="6:32"><name pos:start="6:8" pos:end="6:11">java</name><operator pos:start="6:12" pos:end="6:12">.</operator><name pos:start="6:13" pos:end="6:14">io</name><operator pos:start="6:15" pos:end="6:15">.</operator><name pos:start="6:16" pos:end="6:32">InputStreamReader</name></name>;</import>
<import pos:start="7:1" pos:end="7:28">import <name pos:start="7:8" pos:end="7:27"><name pos:start="7:8" pos:end="7:11">java</name><operator pos:start="7:12" pos:end="7:12">.</operator><name pos:start="7:13" pos:end="7:14">io</name><operator pos:start="7:15" pos:end="7:15">.</operator><name pos:start="7:16" pos:end="7:27">OutputStream</name></name>;</import>
<import pos:start="8:1" pos:end="8:34">import <name pos:start="8:8" pos:end="8:33"><name pos:start="8:8" pos:end="8:11">java</name><operator pos:start="8:12" pos:end="8:12">.</operator><name pos:start="8:13" pos:end="8:14">io</name><operator pos:start="8:15" pos:end="8:15">.</operator><name pos:start="8:16" pos:end="8:33">OutputStreamWriter</name></name>;</import>
<import pos:start="9:1" pos:end="9:34">import <name pos:start="9:8" pos:end="9:33"><name pos:start="9:8" pos:end="9:11">java</name><operator pos:start="9:12" pos:end="9:12">.</operator><name pos:start="9:13" pos:end="9:15">net</name><operator pos:start="9:16" pos:end="9:16">.</operator><name pos:start="9:17" pos:end="9:33">InetSocketAddress</name></name>;</import>
<import pos:start="10:1" pos:end="10:23">import <name pos:start="10:8" pos:end="10:22"><name pos:start="10:8" pos:end="10:11">java</name><operator pos:start="10:12" pos:end="10:12">.</operator><name pos:start="10:13" pos:end="10:15">net</name><operator pos:start="10:16" pos:end="10:16">.</operator><name pos:start="10:17" pos:end="10:22">Socket</name></name>;</import>
<import pos:start="11:1" pos:end="11:28">import <name pos:start="11:8" pos:end="11:27"><name pos:start="11:8" pos:end="11:11">java</name><operator pos:start="11:12" pos:end="11:12">.</operator><name pos:start="11:13" pos:end="11:16">text</name><operator pos:start="11:17" pos:end="11:17">.</operator><name pos:start="11:18" pos:end="11:27">DateFormat</name></name>;</import>
<import pos:start="12:1" pos:end="12:24">import <name pos:start="12:8" pos:end="12:23"><name pos:start="12:8" pos:end="12:11">java</name><operator pos:start="12:12" pos:end="12:12">.</operator><name pos:start="12:13" pos:end="12:16">util</name><operator pos:start="12:17" pos:end="12:17">.</operator><name pos:start="12:18" pos:end="12:23">Random</name></name>;</import>

<import pos:start="14:1" pos:end="14:41">import <name pos:start="14:8" pos:end="14:40"><name pos:start="14:8" pos:end="14:10">com</name><operator pos:start="14:11" pos:end="14:11">.</operator><name pos:start="14:12" pos:end="14:17">google</name><operator pos:start="14:18" pos:end="14:18">.</operator><name pos:start="14:19" pos:end="14:22">gson</name><operator pos:start="14:23" pos:end="14:23">.</operator><name pos:start="14:24" pos:end="14:40">FieldNamingPolicy</name></name>;</import>
<import pos:start="15:1" pos:end="15:28">import <name pos:start="15:8" pos:end="15:27"><name pos:start="15:8" pos:end="15:10">com</name><operator pos:start="15:11" pos:end="15:11">.</operator><name pos:start="15:12" pos:end="15:17">google</name><operator pos:start="15:18" pos:end="15:18">.</operator><name pos:start="15:19" pos:end="15:22">gson</name><operator pos:start="15:23" pos:end="15:23">.</operator><name pos:start="15:24" pos:end="15:27">Gson</name></name>;</import>
<import pos:start="16:1" pos:end="16:35">import <name pos:start="16:8" pos:end="16:34"><name pos:start="16:8" pos:end="16:10">com</name><operator pos:start="16:11" pos:end="16:11">.</operator><name pos:start="16:12" pos:end="16:17">google</name><operator pos:start="16:18" pos:end="16:18">.</operator><name pos:start="16:19" pos:end="16:22">gson</name><operator pos:start="16:23" pos:end="16:23">.</operator><name pos:start="16:24" pos:end="16:34">GsonBuilder</name></name>;</import>

<import pos:start="18:1" pos:end="18:72">import <name pos:start="18:8" pos:end="18:71"><name pos:start="18:8" pos:end="18:10">edu</name><operator pos:start="18:11" pos:end="18:11">.</operator><name pos:start="18:12" pos:end="18:13">nd</name><operator pos:start="18:14" pos:end="18:14">.</operator><name pos:start="18:15" pos:end="18:23">dronology</name><operator pos:start="18:24" pos:end="18:24">.</operator><name pos:start="18:25" pos:end="18:28">core</name><operator pos:start="18:29" pos:end="18:29">.</operator><name pos:start="18:30" pos:end="18:36">vehicle</name><operator pos:start="18:37" pos:end="18:37">.</operator><name pos:start="18:38" pos:end="18:45">commands</name><operator pos:start="18:46" pos:end="18:46">.</operator><name pos:start="18:47" pos:end="18:71">ConnectionResponseCommand</name></name>;</import>
<import pos:start="19:1" pos:end="19:77">import <name pos:start="19:8" pos:end="19:76"><name pos:start="19:8" pos:end="19:10">edu</name><operator pos:start="19:11" pos:end="19:11">.</operator><name pos:start="19:12" pos:end="19:13">nd</name><operator pos:start="19:14" pos:end="19:14">.</operator><name pos:start="19:15" pos:end="19:23">dronology</name><operator pos:start="19:24" pos:end="19:24">.</operator><name pos:start="19:25" pos:end="19:32">gstation</name><operator pos:start="19:33" pos:end="19:33">.</operator><name pos:start="19:34" pos:end="19:42">connector</name><operator pos:start="19:43" pos:end="19:43">.</operator><name pos:start="19:44" pos:end="19:51">messages</name><operator pos:start="19:52" pos:end="19:52">.</operator><name pos:start="19:53" pos:end="19:76">ConnectionRequestMessage</name></name>;</import>
<import pos:start="20:1" pos:end="20:73">import <name pos:start="20:8" pos:end="20:72"><name pos:start="20:8" pos:end="20:10">edu</name><operator pos:start="20:11" pos:end="20:11">.</operator><name pos:start="20:12" pos:end="20:13">nd</name><operator pos:start="20:14" pos:end="20:14">.</operator><name pos:start="20:15" pos:end="20:23">dronology</name><operator pos:start="20:24" pos:end="20:24">.</operator><name pos:start="20:25" pos:end="20:32">gstation</name><operator pos:start="20:33" pos:end="20:33">.</operator><name pos:start="20:34" pos:end="20:42">connector</name><operator pos:start="20:43" pos:end="20:43">.</operator><name pos:start="20:44" pos:end="20:51">messages</name><operator pos:start="20:52" pos:end="20:52">.</operator><name pos:start="20:53" pos:end="20:72">UAVMonitoringMessage</name></name>;</import>
<import pos:start="21:1" pos:end="21:30">import <name pos:start="21:8" pos:end="21:29"><name pos:start="21:8" pos:end="21:10">net</name><operator pos:start="21:11" pos:end="21:11">.</operator><name pos:start="21:12" pos:end="21:13">mv</name><operator pos:start="21:14" pos:end="21:14">.</operator><name pos:start="21:15" pos:end="21:21">logging</name><operator pos:start="21:22" pos:end="21:22">.</operator><name pos:start="21:23" pos:end="21:29">ILogger</name></name>;</import>
<import pos:start="22:1" pos:end="22:37">import <name pos:start="22:8" pos:end="22:36"><name pos:start="22:8" pos:end="22:10">net</name><operator pos:start="22:11" pos:end="22:11">.</operator><name pos:start="22:12" pos:end="22:13">mv</name><operator pos:start="22:14" pos:end="22:14">.</operator><name pos:start="22:15" pos:end="22:21">logging</name><operator pos:start="22:22" pos:end="22:22">.</operator><name pos:start="22:23" pos:end="22:36">LoggerProvider</name></name>;</import>

<class pos:start="24:1" pos:end="128:1"><specifier pos:start="24:1" pos:end="24:6">public</specifier> class <name pos:start="24:14" pos:end="24:42">FakePassivPythonGroundstation</name> <block pos:start="24:44" pos:end="128:1">{

	<comment type="line" pos:start="26:9" pos:end="26:39">//private static Socket socket;</comment>
	<decl_stmt pos:start="27:9" pos:end="27:108"><decl pos:start="27:9" pos:end="27:107"><type pos:start="27:9" pos:end="27:36"><specifier pos:start="27:9" pos:end="27:15">private</specifier> <specifier pos:start="27:17" pos:end="27:22">static</specifier> <specifier pos:start="27:24" pos:end="27:28">final</specifier> <name pos:start="27:30" pos:end="27:36">ILogger</name></type> <name pos:start="27:38" pos:end="27:43">LOGGER</name> <init pos:start="27:45" pos:end="27:107">= <expr pos:start="27:47" pos:end="27:107"><call pos:start="27:47" pos:end="27:107"><name pos:start="27:47" pos:end="27:70"><name pos:start="27:47" pos:end="27:60">LoggerProvider</name><operator pos:start="27:61" pos:end="27:61">.</operator><name pos:start="27:62" pos:end="27:70">getLogger</name></name><argument_list pos:start="27:71" pos:end="27:107">(<argument pos:start="27:72" pos:end="27:106"><expr pos:start="27:72" pos:end="27:106"><name pos:start="27:72" pos:end="27:106"><name pos:start="27:72" pos:end="27:100">FakePassivPythonGroundstation</name><operator pos:start="27:101" pos:end="27:101">.</operator><name pos:start="27:102" pos:end="27:106">class</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	
	<decl_stmt pos:start="29:9" pos:end="31:88"><decl pos:start="29:9" pos:end="31:87"><type pos:start="29:9" pos:end="29:25"><specifier pos:start="29:9" pos:end="29:13">final</specifier> <specifier pos:start="29:15" pos:end="29:20">static</specifier> <name pos:start="29:22" pos:end="29:25">Gson</name></type> <name pos:start="29:27" pos:end="29:30">GSON</name> <init pos:start="29:32" pos:end="31:87">= <expr pos:start="29:34" pos:end="31:87"><operator pos:start="29:34" pos:end="29:36">new</operator> <call pos:start="29:38" pos:end="29:50"><name pos:start="29:38" pos:end="29:48">GsonBuilder</name><argument_list pos:start="29:49" pos:end="29:50">()</argument_list></call><operator pos:start="29:51" pos:end="29:51">.</operator><call pos:start="29:52" pos:end="29:85"><name pos:start="29:52" pos:end="29:83">enableComplexMapKeySerialization</name><argument_list pos:start="29:84" pos:end="29:85">()</argument_list></call><operator pos:start="29:86" pos:end="29:86">.</operator><call pos:start="29:87" pos:end="29:102"><name pos:start="29:87" pos:end="29:100">serializeNulls</name><argument_list pos:start="29:101" pos:end="29:102">()</argument_list></call>
			<operator pos:start="30:25" pos:end="30:25">.</operator><call pos:start="30:26" pos:end="30:55"><name pos:start="30:26" pos:end="30:38">setDateFormat</name><argument_list pos:start="30:39" pos:end="30:55">(<argument pos:start="30:40" pos:end="30:54"><expr pos:start="30:40" pos:end="30:54"><name pos:start="30:40" pos:end="30:54"><name pos:start="30:40" pos:end="30:49">DateFormat</name><operator pos:start="30:50" pos:end="30:50">.</operator><name pos:start="30:51" pos:end="30:54">LONG</name></name></expr></argument>)</argument_list></call><operator pos:start="30:56" pos:end="30:56">.</operator><call pos:start="30:57" pos:end="30:118"><name pos:start="30:57" pos:end="30:76">setFieldNamingPolicy</name><argument_list pos:start="30:77" pos:end="30:118">(<argument pos:start="30:78" pos:end="30:117"><expr pos:start="30:78" pos:end="30:117"><name pos:start="30:78" pos:end="30:117"><name pos:start="30:78" pos:end="30:94">FieldNamingPolicy</name><operator pos:start="30:95" pos:end="30:95">.</operator><name pos:start="30:96" pos:end="30:117">LOWER_CASE_WITH_DASHES</name></name></expr></argument>)</argument_list></call>
			<operator pos:start="31:25" pos:end="31:25">.</operator><call pos:start="31:26" pos:end="31:40"><name pos:start="31:26" pos:end="31:35">setVersion</name><argument_list pos:start="31:36" pos:end="31:40">(<argument pos:start="31:37" pos:end="31:39"><expr pos:start="31:37" pos:end="31:39"><literal type="number" pos:start="31:37" pos:end="31:39">1.0</literal></expr></argument>)</argument_list></call><operator pos:start="31:41" pos:end="31:41">.</operator><call pos:start="31:42" pos:end="31:78"><name pos:start="31:42" pos:end="31:76">serializeSpecialFloatingPointValues</name><argument_list pos:start="31:77" pos:end="31:78">()</argument_list></call><operator pos:start="31:79" pos:end="31:79">.</operator><call pos:start="31:80" pos:end="31:87"><name pos:start="31:80" pos:end="31:85">create</name><argument_list pos:start="31:86" pos:end="31:87">()</argument_list></call></expr></init></decl>;</decl_stmt>

	<function pos:start="33:9" pos:end="126:9"><type pos:start="33:9" pos:end="33:26"><specifier pos:start="33:9" pos:end="33:14">public</specifier> <specifier pos:start="33:16" pos:end="33:21">static</specifier> <name pos:start="33:23" pos:end="33:26">void</name></type> <name pos:start="33:28" pos:end="33:31">main</name><parameter_list pos:start="33:32" pos:end="33:46">(<parameter pos:start="33:33" pos:end="33:45"><decl pos:start="33:33" pos:end="33:45"><type pos:start="33:33" pos:end="33:40"><name pos:start="33:33" pos:end="33:40"><name pos:start="33:33" pos:end="33:38">String</name><index pos:start="33:39" pos:end="33:40">[]</index></name></type> <name pos:start="33:42" pos:end="33:45">args</name></decl></parameter>)</parameter_list> <block pos:start="33:48" pos:end="126:9">{<block_content pos:start="34:17" pos:end="125:17">
		<try pos:start="34:17" pos:end="125:17">try <block pos:start="34:21" pos:end="123:17">{<block_content pos:start="35:25" pos:end="122:25">
			<decl_stmt pos:start="35:25" pos:end="35:40"><decl pos:start="35:25" pos:end="35:39"><type pos:start="35:25" pos:end="35:27"><name pos:start="35:25" pos:end="35:27">int</name></type> <name pos:start="35:29" pos:end="35:32">port</name> <init pos:start="35:34" pos:end="35:39">= <expr pos:start="35:36" pos:end="35:39"><literal type="number" pos:start="35:36" pos:end="35:39">1234</literal></expr></init></decl>;</decl_stmt>
			<comment type="line" pos:start="36:25" pos:end="36:78">// ServerSocket serverSocket = new ServerSocket(port);</comment>
			<comment type="line" pos:start="37:25" pos:end="37:93">// Server is running always. This is done using this while(true) loop</comment>

			<comment type="line" pos:start="39:25" pos:end="39:58">// socket = serverSocket.accept();</comment>
			<decl_stmt pos:start="40:25" pos:end="40:54"><decl pos:start="40:25" pos:end="40:53"><type pos:start="40:25" pos:end="40:30"><name pos:start="40:25" pos:end="40:30">String</name></type> <name pos:start="40:32" pos:end="40:39">hostAddr</name> <init pos:start="40:41" pos:end="40:53">= <expr pos:start="40:43" pos:end="40:53"><literal type="string" pos:start="40:43" pos:end="40:53">"localhost"</literal></expr></init></decl>;</decl_stmt>

			<expr_stmt pos:start="42:25" pos:end="42:90"><expr pos:start="42:25" pos:end="42:89"><call pos:start="42:25" pos:end="42:89"><name pos:start="42:25" pos:end="42:35"><name pos:start="42:25" pos:end="42:30">LOGGER</name><operator pos:start="42:31" pos:end="42:31">.</operator><name pos:start="42:32" pos:end="42:35">info</name></name><argument_list pos:start="42:36" pos:end="42:89">(<argument pos:start="42:37" pos:end="42:88"><expr pos:start="42:37" pos:end="42:88"><literal type="string" pos:start="42:37" pos:end="42:64">"Connecting to Python base "</literal> <operator pos:start="42:66" pos:end="42:66">+</operator> <name pos:start="42:68" pos:end="42:75">hostAddr</name> <operator pos:start="42:77" pos:end="42:77">+</operator> <literal type="string" pos:start="42:79" pos:end="42:81">"@"</literal> <operator pos:start="42:83" pos:end="42:83">+</operator> <name pos:start="42:85" pos:end="42:88">port</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<decl_stmt pos:start="43:25" pos:end="43:59"><decl pos:start="43:25" pos:end="43:58"><type pos:start="43:25" pos:end="43:30"><name pos:start="43:25" pos:end="43:30">Socket</name></type> <name pos:start="43:32" pos:end="43:43">pythonSocket</name> <init pos:start="43:45" pos:end="43:58">= <expr pos:start="43:47" pos:end="43:58"><operator pos:start="43:47" pos:end="43:49">new</operator> <call pos:start="43:51" pos:end="43:58"><name pos:start="43:51" pos:end="43:56">Socket</name><argument_list pos:start="43:57" pos:end="43:58">()</argument_list></call></expr></init></decl>;</decl_stmt>
			<expr_stmt pos:start="44:25" pos:end="44:90"><expr pos:start="44:25" pos:end="44:89"><call pos:start="44:25" pos:end="44:89"><name pos:start="44:25" pos:end="44:44"><name pos:start="44:25" pos:end="44:36">pythonSocket</name><operator pos:start="44:37" pos:end="44:37">.</operator><name pos:start="44:38" pos:end="44:44">connect</name></name><argument_list pos:start="44:45" pos:end="44:89">(<argument pos:start="44:46" pos:end="44:82"><expr pos:start="44:46" pos:end="44:82"><operator pos:start="44:46" pos:end="44:48">new</operator> <call pos:start="44:50" pos:end="44:82"><name pos:start="44:50" pos:end="44:66">InetSocketAddress</name><argument_list pos:start="44:67" pos:end="44:82">(<argument pos:start="44:68" pos:end="44:75"><expr pos:start="44:68" pos:end="44:75"><name pos:start="44:68" pos:end="44:75">hostAddr</name></expr></argument>, <argument pos:start="44:78" pos:end="44:81"><expr pos:start="44:78" pos:end="44:81"><name pos:start="44:78" pos:end="44:81">port</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="44:85" pos:end="44:88"><expr pos:start="44:85" pos:end="44:88"><literal type="number" pos:start="44:85" pos:end="44:88">5000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

			<expr_stmt pos:start="46:25" pos:end="46:68"><expr pos:start="46:25" pos:end="46:67"><call pos:start="46:25" pos:end="46:67"><name pos:start="46:25" pos:end="46:42"><name pos:start="46:25" pos:end="46:30">System</name><operator pos:start="46:31" pos:end="46:31">.</operator><name pos:start="46:32" pos:end="46:34">out</name><operator pos:start="46:35" pos:end="46:35">.</operator><name pos:start="46:36" pos:end="46:42">println</name></name><argument_list pos:start="46:43" pos:end="46:67">(<argument pos:start="46:44" pos:end="46:66"><expr pos:start="46:44" pos:end="46:66"><literal type="string" pos:start="46:44" pos:end="46:66">"Client has connected!"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<decl_stmt pos:start="47:25" pos:end="47:71"><decl pos:start="47:25" pos:end="47:70"><type pos:start="47:25" pos:end="47:35"><name pos:start="47:25" pos:end="47:35">InputStream</name></type> <name pos:start="47:37" pos:end="47:38">is</name> <init pos:start="47:40" pos:end="47:70">= <expr pos:start="47:42" pos:end="47:70"><call pos:start="47:42" pos:end="47:70"><name pos:start="47:42" pos:end="47:68"><name pos:start="47:42" pos:end="47:53">pythonSocket</name><operator pos:start="47:54" pos:end="47:54">.</operator><name pos:start="47:55" pos:end="47:68">getInputStream</name></name><argument_list pos:start="47:69" pos:end="47:70">()</argument_list></call></expr></init></decl>;</decl_stmt>
			<decl_stmt pos:start="48:25" pos:end="48:74"><decl pos:start="48:25" pos:end="48:73"><type pos:start="48:25" pos:end="48:41"><name pos:start="48:25" pos:end="48:41">InputStreamReader</name></type> <name pos:start="48:43" pos:end="48:45">isr</name> <init pos:start="48:47" pos:end="48:73">= <expr pos:start="48:49" pos:end="48:73"><operator pos:start="48:49" pos:end="48:51">new</operator> <call pos:start="48:53" pos:end="48:73"><name pos:start="48:53" pos:end="48:69">InputStreamReader</name><argument_list pos:start="48:70" pos:end="48:73">(<argument pos:start="48:71" pos:end="48:72"><expr pos:start="48:71" pos:end="48:72"><name pos:start="48:71" pos:end="48:72">is</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<decl_stmt pos:start="49:25" pos:end="49:68"><decl pos:start="49:25" pos:end="49:67"><type pos:start="49:25" pos:end="49:38"><name pos:start="49:25" pos:end="49:38">BufferedReader</name></type> <name pos:start="49:40" pos:end="49:41">br</name> <init pos:start="49:43" pos:end="49:67">= <expr pos:start="49:45" pos:end="49:67"><operator pos:start="49:45" pos:end="49:47">new</operator> <call pos:start="49:49" pos:end="49:67"><name pos:start="49:49" pos:end="49:62">BufferedReader</name><argument_list pos:start="49:63" pos:end="49:67">(<argument pos:start="49:64" pos:end="49:66"><expr pos:start="49:64" pos:end="49:66"><name pos:start="49:64" pos:end="49:66">isr</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

			<comment type="line" pos:start="51:25" pos:end="51:102">//UAVHandshakeMessage handshake = new UAVHandshakeMessage("Drone1", "Drone1");</comment>
			<decl_stmt pos:start="52:25" pos:end="52:105"><decl pos:start="52:25" pos:end="52:104"><type pos:start="52:25" pos:end="52:48"><name pos:start="52:25" pos:end="52:48">ConnectionRequestMessage</name></type> <name pos:start="52:50" pos:end="52:56">connect</name> <init pos:start="52:58" pos:end="52:104">= <expr pos:start="52:60" pos:end="52:104"><operator pos:start="52:60" pos:end="52:62">new</operator> <call pos:start="52:64" pos:end="52:104"><name pos:start="52:64" pos:end="52:87">ConnectionRequestMessage</name><argument_list pos:start="52:88" pos:end="52:104">(<argument pos:start="52:89" pos:end="52:103"><expr pos:start="52:89" pos:end="52:103"><literal type="string" pos:start="52:89" pos:end="52:103">"FAKE_GROUND_1"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			
		
			<decl_stmt pos:start="55:25" pos:end="55:70"><decl pos:start="55:25" pos:end="55:69"><type pos:start="55:25" pos:end="55:30"><name pos:start="55:25" pos:end="55:30">String</name></type> <name pos:start="55:32" pos:end="55:46">handshakeString</name> <init pos:start="55:48" pos:end="55:69">= <expr pos:start="55:50" pos:end="55:69"><call pos:start="55:50" pos:end="55:69"><name pos:start="55:50" pos:end="55:60"><name pos:start="55:50" pos:end="55:53">GSON</name><operator pos:start="55:54" pos:end="55:54">.</operator><name pos:start="55:55" pos:end="55:60">toJson</name></name><argument_list pos:start="55:61" pos:end="55:69">(<argument pos:start="55:62" pos:end="55:68"><expr pos:start="55:62" pos:end="55:68"><name pos:start="55:62" pos:end="55:68">connect</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<expr_stmt pos:start="56:25" pos:end="56:44"><expr pos:start="56:25" pos:end="56:43"><call pos:start="56:25" pos:end="56:43"><name pos:start="56:25" pos:end="56:36"><name pos:start="56:25" pos:end="56:30">Thread</name><operator pos:start="56:31" pos:end="56:31">.</operator><name pos:start="56:32" pos:end="56:36">sleep</name></name><argument_list pos:start="56:37" pos:end="56:43">(<argument pos:start="56:38" pos:end="56:42"><expr pos:start="56:38" pos:end="56:42"><literal type="number" pos:start="56:38" pos:end="56:42">10000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<decl_stmt pos:start="57:25" pos:end="57:73"><decl pos:start="57:25" pos:end="57:72"><type pos:start="57:25" pos:end="57:36"><name pos:start="57:25" pos:end="57:36">OutputStream</name></type> <name pos:start="57:38" pos:end="57:39">os</name> <init pos:start="57:41" pos:end="57:72">= <expr pos:start="57:43" pos:end="57:72"><call pos:start="57:43" pos:end="57:72"><name pos:start="57:43" pos:end="57:70"><name pos:start="57:43" pos:end="57:54">pythonSocket</name><operator pos:start="57:55" pos:end="57:55">.</operator><name pos:start="57:56" pos:end="57:70">getOutputStream</name></name><argument_list pos:start="57:71" pos:end="57:72">()</argument_list></call></expr></init></decl>;</decl_stmt>
			<decl_stmt pos:start="58:25" pos:end="58:76"><decl pos:start="58:25" pos:end="58:75"><type pos:start="58:25" pos:end="58:42"><name pos:start="58:25" pos:end="58:42">OutputStreamWriter</name></type> <name pos:start="58:44" pos:end="58:46">osw</name> <init pos:start="58:48" pos:end="58:75">= <expr pos:start="58:50" pos:end="58:75"><operator pos:start="58:50" pos:end="58:52">new</operator> <call pos:start="58:54" pos:end="58:75"><name pos:start="58:54" pos:end="58:71">OutputStreamWriter</name><argument_list pos:start="58:72" pos:end="58:75">(<argument pos:start="58:73" pos:end="58:74"><expr pos:start="58:73" pos:end="58:74"><name pos:start="58:73" pos:end="58:74">os</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<decl_stmt pos:start="59:25" pos:end="59:68"><decl pos:start="59:25" pos:end="59:67"><type pos:start="59:25" pos:end="59:38"><name pos:start="59:25" pos:end="59:38">BufferedWriter</name></type> <name pos:start="59:40" pos:end="59:41">bw</name> <init pos:start="59:43" pos:end="59:67">= <expr pos:start="59:45" pos:end="59:67"><operator pos:start="59:45" pos:end="59:47">new</operator> <call pos:start="59:49" pos:end="59:67"><name pos:start="59:49" pos:end="59:62">BufferedWriter</name><argument_list pos:start="59:63" pos:end="59:67">(<argument pos:start="59:64" pos:end="59:66"><expr pos:start="59:64" pos:end="59:66"><name pos:start="59:64" pos:end="59:66">osw</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<expr_stmt pos:start="60:25" pos:end="60:50"><expr pos:start="60:25" pos:end="60:49"><call pos:start="60:25" pos:end="60:49"><name pos:start="60:25" pos:end="60:32"><name pos:start="60:25" pos:end="60:26">bw</name><operator pos:start="60:27" pos:end="60:27">.</operator><name pos:start="60:28" pos:end="60:32">write</name></name><argument_list pos:start="60:33" pos:end="60:49">(<argument pos:start="60:34" pos:end="60:48"><expr pos:start="60:34" pos:end="60:48"><name pos:start="60:34" pos:end="60:48">handshakeString</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt pos:start="61:25" pos:end="61:39"><expr pos:start="61:25" pos:end="61:38"><call pos:start="61:25" pos:end="61:38"><name pos:start="61:25" pos:end="61:32"><name pos:start="61:25" pos:end="61:26">bw</name><operator pos:start="61:27" pos:end="61:27">.</operator><name pos:start="61:28" pos:end="61:32">write</name></name><argument_list pos:start="61:33" pos:end="61:38">(<argument pos:start="61:34" pos:end="61:37"><expr pos:start="61:34" pos:end="61:37"><literal type="string" pos:start="61:34" pos:end="61:37">"\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt pos:start="62:25" pos:end="62:95"><expr pos:start="62:25" pos:end="62:94"><call pos:start="62:25" pos:end="62:94"><name pos:start="62:25" pos:end="62:42"><name pos:start="62:25" pos:end="62:30">System</name><operator pos:start="62:31" pos:end="62:31">.</operator><name pos:start="62:32" pos:end="62:34">out</name><operator pos:start="62:35" pos:end="62:35">.</operator><name pos:start="62:36" pos:end="62:42">println</name></name><argument_list pos:start="62:43" pos:end="62:94">(<argument pos:start="62:44" pos:end="62:93"><expr pos:start="62:44" pos:end="62:93"><literal type="string" pos:start="62:44" pos:end="62:75">"Message sent to the client is "</literal> <operator pos:start="62:77" pos:end="62:77">+</operator> <name pos:start="62:79" pos:end="62:93">handshakeString</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt pos:start="63:25" pos:end="63:35"><expr pos:start="63:25" pos:end="63:34"><call pos:start="63:25" pos:end="63:34"><name pos:start="63:25" pos:end="63:32"><name pos:start="63:25" pos:end="63:26">bw</name><operator pos:start="63:27" pos:end="63:27">.</operator><name pos:start="63:28" pos:end="63:32">flush</name></name><argument_list pos:start="63:33" pos:end="63:34">()</argument_list></call></expr>;</expr_stmt>
			
			

			<decl_stmt pos:start="67:25" pos:end="67:58"><decl pos:start="67:25" pos:end="67:57"><type pos:start="67:25" pos:end="67:30"><name pos:start="67:25" pos:end="67:30">String</name></type> <name pos:start="67:32" pos:end="67:41">ackMesasge</name> <init pos:start="67:43" pos:end="67:57">= <expr pos:start="67:45" pos:end="67:57"><call pos:start="67:45" pos:end="67:57"><name pos:start="67:45" pos:end="67:55"><name pos:start="67:45" pos:end="67:46">br</name><operator pos:start="67:47" pos:end="67:47">.</operator><name pos:start="67:48" pos:end="67:55">readLine</name></name><argument_list pos:start="67:56" pos:end="67:57">()</argument_list></call></expr></init></decl>;</decl_stmt>
			<decl_stmt pos:start="68:25" pos:end="68:120"><decl pos:start="68:25" pos:end="68:119"><type pos:start="68:25" pos:end="68:49"><name pos:start="68:25" pos:end="68:49">ConnectionResponseCommand</name></type> <name pos:start="68:51" pos:end="68:58">response</name> <init pos:start="68:60" pos:end="68:119">= <expr pos:start="68:62" pos:end="68:119"><call pos:start="68:62" pos:end="68:119"><name pos:start="68:62" pos:end="68:74"><name pos:start="68:62" pos:end="68:65">GSON</name><operator pos:start="68:66" pos:end="68:66">.</operator><name pos:start="68:67" pos:end="68:74">fromJson</name></name><argument_list pos:start="68:75" pos:end="68:119">(<argument pos:start="68:76" pos:end="68:85"><expr pos:start="68:76" pos:end="68:85"><name pos:start="68:76" pos:end="68:85">ackMesasge</name></expr></argument>, <argument pos:start="68:88" pos:end="68:118"><expr pos:start="68:88" pos:end="68:118"><name pos:start="68:88" pos:end="68:118"><name pos:start="68:88" pos:end="68:112">ConnectionResponseCommand</name><operator pos:start="68:113" pos:end="68:113">.</operator><name pos:start="68:114" pos:end="68:118">class</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<expr_stmt pos:start="69:25" pos:end="69:82"><expr pos:start="69:25" pos:end="69:81"><call pos:start="69:25" pos:end="69:81"><name pos:start="69:25" pos:end="69:42"><name pos:start="69:25" pos:end="69:30">System</name><operator pos:start="69:31" pos:end="69:31">.</operator><name pos:start="69:32" pos:end="69:34">out</name><operator pos:start="69:35" pos:end="69:35">.</operator><name pos:start="69:36" pos:end="69:42">println</name></name><argument_list pos:start="69:43" pos:end="69:81">(<argument pos:start="69:44" pos:end="69:80"><expr pos:start="69:44" pos:end="69:80"><literal type="string" pos:start="69:44" pos:end="69:54">"RESPONSE:"</literal> <operator pos:start="69:56" pos:end="69:56">+</operator> <call pos:start="69:58" pos:end="69:80"><name pos:start="69:58" pos:end="69:78"><name pos:start="69:58" pos:end="69:65">response</name><operator pos:start="69:66" pos:end="69:66">.</operator><name pos:start="69:67" pos:end="69:78">toJsonString</name></name><argument_list pos:start="69:79" pos:end="69:80">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt pos:start="70:25" pos:end="70:43"><expr pos:start="70:25" pos:end="70:42"><call pos:start="70:25" pos:end="70:42"><name pos:start="70:25" pos:end="70:36"><name pos:start="70:25" pos:end="70:30">Thread</name><operator pos:start="70:31" pos:end="70:31">.</operator><name pos:start="70:32" pos:end="70:36">sleep</name></name><argument_list pos:start="70:37" pos:end="70:42">(<argument pos:start="70:38" pos:end="70:41"><expr pos:start="70:38" pos:end="70:41"><literal type="number" pos:start="70:38" pos:end="70:41">3000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			
			<expr_stmt pos:start="72:25" pos:end="72:44"><expr pos:start="72:25" pos:end="72:43"><call pos:start="72:25" pos:end="72:43"><name pos:start="72:25" pos:end="72:36"><name pos:start="72:25" pos:end="72:30">Thread</name><operator pos:start="72:31" pos:end="72:31">.</operator><name pos:start="72:32" pos:end="72:36">sleep</name></name><argument_list pos:start="72:37" pos:end="72:43">(<argument pos:start="72:38" pos:end="72:42"><expr pos:start="72:38" pos:end="72:42"><literal type="number" pos:start="72:38" pos:end="72:42">10000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

			<decl_stmt pos:start="74:25" pos:end="74:32"><decl pos:start="74:25" pos:end="74:31"><type pos:start="74:25" pos:end="74:27"><name pos:start="74:25" pos:end="74:27">int</name></type> <name pos:start="74:29" pos:end="74:29">i</name><init pos:start="74:30" pos:end="74:31">=<expr pos:start="74:31" pos:end="74:31"><literal type="number" pos:start="74:31" pos:end="74:31">2</literal></expr></init></decl>;</decl_stmt>
			<while pos:start="75:25" pos:end="122:25">while <condition pos:start="75:31" pos:end="75:35">(<expr pos:start="75:32" pos:end="75:34"><name pos:start="75:32" pos:end="75:32">i</name><operator pos:start="75:33" pos:end="75:33">&gt;</operator><literal type="number" pos:start="75:34" pos:end="75:34">1</literal></expr>)</condition> <block pos:start="75:37" pos:end="122:25">{<block_content pos:start="77:33" pos:end="120:51">

				<decl_stmt pos:start="77:33" pos:end="77:111"><decl pos:start="77:33" pos:end="77:110"><type pos:start="77:33" pos:end="77:52"><name pos:start="77:33" pos:end="77:52">UAVMonitoringMessage</name></type> <name pos:start="77:54" pos:end="77:55">mm</name> <init pos:start="77:57" pos:end="77:110">= <expr pos:start="77:59" pos:end="77:110"><operator pos:start="77:59" pos:end="77:61">new</operator> <call pos:start="77:63" pos:end="77:110"><name pos:start="77:63" pos:end="77:82">UAVMonitoringMessage</name><argument_list pos:start="77:83" pos:end="77:110">(<argument pos:start="77:84" pos:end="77:91"><expr pos:start="77:84" pos:end="77:91"><literal type="string" pos:start="77:84" pos:end="77:91">"Drone1"</literal></expr></argument>,  <argument pos:start="77:95" pos:end="77:100"><expr pos:start="77:95" pos:end="77:100"><literal type="string" pos:start="77:95" pos:end="77:100">"FAKE"</literal></expr></argument>,<argument pos:start="77:102" pos:end="77:109"><expr pos:start="77:102" pos:end="77:109"><literal type="string" pos:start="77:102" pos:end="77:109">"Drone1"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
				<decl_stmt pos:start="78:33" pos:end="78:59"><decl pos:start="78:33" pos:end="78:58"><type pos:start="78:33" pos:end="78:38"><name pos:start="78:33" pos:end="78:38">Random</name></type> <name pos:start="78:40" pos:end="78:43">rand</name> <init pos:start="78:45" pos:end="78:58">= <expr pos:start="78:47" pos:end="78:58"><operator pos:start="78:47" pos:end="78:49">new</operator> <call pos:start="78:51" pos:end="78:58"><name pos:start="78:51" pos:end="78:56">Random</name><argument_list pos:start="78:57" pos:end="78:58">()</argument_list></call></expr></init></decl>;</decl_stmt>
				<expr_stmt pos:start="79:33" pos:end="79:78"><expr pos:start="79:33" pos:end="79:77"><call pos:start="79:33" pos:end="79:77"><name pos:start="79:33" pos:end="79:42"><name pos:start="79:33" pos:end="79:34">mm</name><operator pos:start="79:35" pos:end="79:35">.</operator><name pos:start="79:36" pos:end="79:42">setType</name></name><argument_list pos:start="79:43" pos:end="79:77">(<argument pos:start="79:44" pos:end="79:76"><expr pos:start="79:44" pos:end="79:76"><name pos:start="79:44" pos:end="79:76"><name pos:start="79:44" pos:end="79:63">UAVMonitoringMessage</name><operator pos:start="79:64" pos:end="79:64">.</operator><name pos:start="79:65" pos:end="79:76">MESSAGE_TYPE</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<comment type="line" pos:start="80:33" pos:end="80:57">// mm.setuavid("DRONE1");</comment>
				<expr_stmt pos:start="81:33" pos:end="81:67"><expr pos:start="81:33" pos:end="81:66"><call pos:start="81:33" pos:end="81:66"><name pos:start="81:33" pos:end="81:45"><name pos:start="81:33" pos:end="81:34">mm</name><operator pos:start="81:35" pos:end="81:35">.</operator><name pos:start="81:36" pos:end="81:45">addPropery</name></name><argument_list pos:start="81:46" pos:end="81:66">(<argument pos:start="81:47" pos:end="81:60"><expr pos:start="81:47" pos:end="81:60"><literal type="string" pos:start="81:47" pos:end="81:60">"NR_SATELITES"</literal></expr></argument>, <argument pos:start="81:63" pos:end="81:65"><expr pos:start="81:63" pos:end="81:65"><literal type="string" pos:start="81:63" pos:end="81:65">"5"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<expr_stmt pos:start="82:33" pos:end="82:67"><expr pos:start="82:33" pos:end="82:66"><call pos:start="82:33" pos:end="82:66"><name pos:start="82:33" pos:end="82:45"><name pos:start="82:33" pos:end="82:34">mm</name><operator pos:start="82:35" pos:end="82:35">.</operator><name pos:start="82:36" pos:end="82:45">addPropery</name></name><argument_list pos:start="82:46" pos:end="82:66">(<argument pos:start="82:47" pos:end="82:56"><expr pos:start="82:47" pos:end="82:56"><literal type="string" pos:start="82:47" pos:end="82:56">"GPS_BIAS"</literal></expr></argument>, <argument pos:start="82:59" pos:end="82:65"><expr pos:start="82:59" pos:end="82:65"><literal type="string" pos:start="82:59" pos:end="82:65">"3.125"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<expr_stmt pos:start="83:33" pos:end="83:71"><expr pos:start="83:33" pos:end="83:70"><call pos:start="83:33" pos:end="83:70"><name pos:start="83:33" pos:end="83:45"><name pos:start="83:33" pos:end="83:34">mm</name><operator pos:start="83:35" pos:end="83:35">.</operator><name pos:start="83:36" pos:end="83:45">addPropery</name></name><argument_list pos:start="83:46" pos:end="83:70">(<argument pos:start="83:47" pos:end="83:61"><expr pos:start="83:47" pos:end="83:61"><literal type="string" pos:start="83:47" pos:end="83:61">"CURRENT_SPEED"</literal></expr></argument>, <argument pos:start="83:64" pos:end="83:69"><expr pos:start="83:64" pos:end="83:69"><literal type="string" pos:start="83:64" pos:end="83:69">"5.25"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<expr_stmt pos:start="84:33" pos:end="84:69"><expr pos:start="84:33" pos:end="84:68"><call pos:start="84:33" pos:end="84:68"><name pos:start="84:33" pos:end="84:45"><name pos:start="84:33" pos:end="84:34">mm</name><operator pos:start="84:35" pos:end="84:35">.</operator><name pos:start="84:36" pos:end="84:45">addPropery</name></name><argument_list pos:start="84:46" pos:end="84:68">(<argument pos:start="84:47" pos:end="84:62"><expr pos:start="84:47" pos:end="84:62"><literal type="string" pos:start="84:47" pos:end="84:62">"BLEVEL_VOLTAGE"</literal></expr></argument>, <argument pos:start="84:65" pos:end="84:67"><expr pos:start="84:65" pos:end="84:67"><literal type="string" pos:start="84:65" pos:end="84:67">"3"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<expr_stmt pos:start="85:33" pos:end="85:73"><expr pos:start="85:33" pos:end="85:72"><call pos:start="85:33" pos:end="85:72"><name pos:start="85:33" pos:end="85:45"><name pos:start="85:33" pos:end="85:34">mm</name><operator pos:start="85:35" pos:end="85:35">.</operator><name pos:start="85:36" pos:end="85:45">addPropery</name></name><argument_list pos:start="85:46" pos:end="85:72">(<argument pos:start="85:47" pos:end="85:65"><expr pos:start="85:47" pos:end="85:65"><literal type="string" pos:start="85:47" pos:end="85:65">"BATTERY_MAXPOWERX"</literal></expr></argument>, <argument pos:start="85:68" pos:end="85:71"><expr pos:start="85:68" pos:end="85:71"><literal type="string" pos:start="85:68" pos:end="85:71">"50"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<expr_stmt pos:start="86:33" pos:end="86:83"><expr pos:start="86:33" pos:end="86:82"><call pos:start="86:33" pos:end="86:82"><name pos:start="86:33" pos:end="86:45"><name pos:start="86:33" pos:end="86:34">mm</name><operator pos:start="86:35" pos:end="86:35">.</operator><name pos:start="86:36" pos:end="86:45">addPropery</name></name><argument_list pos:start="86:46" pos:end="86:82">(<argument pos:start="86:47" pos:end="86:63"><expr pos:start="86:47" pos:end="86:63"><literal type="string" pos:start="86:47" pos:end="86:63">"BATTERY_VOLTAGE"</literal></expr></argument>, <argument pos:start="86:66" pos:end="86:81"><expr pos:start="86:66" pos:end="86:81"><call pos:start="86:66" pos:end="86:81"><name pos:start="86:66" pos:end="86:77"><name pos:start="86:66" pos:end="86:69">rand</name><operator pos:start="86:70" pos:end="86:70">.</operator><name pos:start="86:71" pos:end="86:77">nextInt</name></name><argument_list pos:start="86:78" pos:end="86:81">(<argument pos:start="86:79" pos:end="86:80"><expr pos:start="86:79" pos:end="86:80"><literal type="number" pos:start="86:79" pos:end="86:80">10</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<expr_stmt pos:start="87:33" pos:end="87:81"><expr pos:start="87:33" pos:end="87:80"><call pos:start="87:33" pos:end="87:80"><name pos:start="87:33" pos:end="87:45"><name pos:start="87:33" pos:end="87:34">mm</name><operator pos:start="87:35" pos:end="87:35">.</operator><name pos:start="87:36" pos:end="87:45">addPropery</name></name><argument_list pos:start="87:46" pos:end="87:80">(<argument pos:start="87:47" pos:end="87:61"><expr pos:start="87:47" pos:end="87:61"><literal type="string" pos:start="87:47" pos:end="87:61">"BATTERY_POWER"</literal></expr></argument>, <argument pos:start="87:64" pos:end="87:79"><expr pos:start="87:64" pos:end="87:79"><call pos:start="87:64" pos:end="87:79"><name pos:start="87:64" pos:end="87:75"><name pos:start="87:64" pos:end="87:67">rand</name><operator pos:start="87:68" pos:end="87:68">.</operator><name pos:start="87:69" pos:end="87:75">nextInt</name></name><argument_list pos:start="87:76" pos:end="87:79">(<argument pos:start="87:77" pos:end="87:78"><expr pos:start="87:77" pos:end="87:78"><literal type="number" pos:start="87:77" pos:end="87:78">10</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<expr_stmt pos:start="88:33" pos:end="88:80"><expr pos:start="88:33" pos:end="88:79"><call pos:start="88:33" pos:end="88:79"><name pos:start="88:33" pos:end="88:45"><name pos:start="88:33" pos:end="88:34">mm</name><operator pos:start="88:35" pos:end="88:35">.</operator><name pos:start="88:36" pos:end="88:45">addPropery</name></name><argument_list pos:start="88:46" pos:end="88:79">(<argument pos:start="88:47" pos:end="88:60"><expr pos:start="88:47" pos:end="88:60"><literal type="string" pos:start="88:47" pos:end="88:60">"BLEVEL_POWER"</literal></expr></argument>, <argument pos:start="88:63" pos:end="88:78"><expr pos:start="88:63" pos:end="88:78"><call pos:start="88:63" pos:end="88:78"><name pos:start="88:63" pos:end="88:74"><name pos:start="88:63" pos:end="88:66">rand</name><operator pos:start="88:67" pos:end="88:67">.</operator><name pos:start="88:68" pos:end="88:74">nextInt</name></name><argument_list pos:start="88:75" pos:end="88:78">(<argument pos:start="88:76" pos:end="88:77"><expr pos:start="88:76" pos:end="88:77"><literal type="number" pos:start="88:76" pos:end="88:77">10</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

				<comment type="line" pos:start="90:33" pos:end="90:65">// if flying mission mlevel &gt; 20%</comment>
				<comment type="line" pos:start="91:33" pos:end="91:61">// if retunr home blvel &gt; 10;</comment>

				<decl_stmt pos:start="93:33" pos:end="93:64"><decl pos:start="93:33" pos:end="93:63"><type pos:start="93:33" pos:end="93:38"><name pos:start="93:33" pos:end="93:38">String</name></type> <name pos:start="93:40" pos:end="93:45">toSend</name> <init pos:start="93:47" pos:end="93:63">= <expr pos:start="93:49" pos:end="93:63"><call pos:start="93:49" pos:end="93:63"><name pos:start="93:49" pos:end="93:59"><name pos:start="93:49" pos:end="93:52">GSON</name><operator pos:start="93:53" pos:end="93:53">.</operator><name pos:start="93:54" pos:end="93:59">toJson</name></name><argument_list pos:start="93:60" pos:end="93:63">(<argument pos:start="93:61" pos:end="93:62"><expr pos:start="93:61" pos:end="93:62"><name pos:start="93:61" pos:end="93:62">mm</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

				<comment type="line" pos:start="95:33" pos:end="95:70">// Reading the message from the client</comment>

				<comment type="line" pos:start="97:33" pos:end="97:65">// String number = br.readLine();</comment>
				<comment type="line" pos:start="98:33" pos:end="98:99">// System.out.println("Message received from client is " + number);</comment>

				<comment type="line" pos:start="100:33" pos:end="100:93">// Multiplying the number by 2 and forming the return message</comment>
				<comment type="line" pos:start="101:33" pos:end="101:56">// String returnMessage;</comment>
				<comment type="line" pos:start="102:33" pos:end="102:40">// try {</comment>
				<comment type="line" pos:start="103:33" pos:end="103:84">// int numberInIntFormat = Integer.parseInt(number);</comment>
				<comment type="line" pos:start="104:33" pos:end="104:75">// int returnValue = numberInIntFormat * 2;</comment>
				<comment type="line" pos:start="105:33" pos:end="105:86">// returnMessage = String.valueOf(returnValue) + "\n";</comment>
				<comment type="line" pos:start="106:33" pos:end="106:70">// } catch (NumberFormatException e) {</comment>
				<comment type="line" pos:start="107:33" pos:end="107:100">// // Input was not a number. Sending proper message back to client.</comment>
				<comment type="line" pos:start="108:33" pos:end="108:83">// returnMessage = "Please send a proper number\n";</comment>
				<comment type="line" pos:start="109:33" pos:end="109:36">// }</comment>

				<comment type="line" pos:start="111:33" pos:end="111:75">// Sending the response back to the client.</comment>
				<comment type="line" pos:start="112:33" pos:end="112:78">// OutputStream os = socket.getOutputStream();</comment>
				<comment type="line" pos:start="113:33" pos:end="113:87">// OutputStreamWriter osw = new OutputStreamWriter(os);</comment>
				<comment type="line" pos:start="114:33" pos:end="114:79">// BufferedWriter bw = new BufferedWriter(osw);</comment>
				<expr_stmt pos:start="115:33" pos:end="115:49"><expr pos:start="115:33" pos:end="115:48"><call pos:start="115:33" pos:end="115:48"><name pos:start="115:33" pos:end="115:40"><name pos:start="115:33" pos:end="115:34">bw</name><operator pos:start="115:35" pos:end="115:35">.</operator><name pos:start="115:36" pos:end="115:40">write</name></name><argument_list pos:start="115:41" pos:end="115:48">(<argument pos:start="115:42" pos:end="115:47"><expr pos:start="115:42" pos:end="115:47"><name pos:start="115:42" pos:end="115:47">toSend</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<expr_stmt pos:start="116:33" pos:end="116:47"><expr pos:start="116:33" pos:end="116:46"><call pos:start="116:33" pos:end="116:46"><name pos:start="116:33" pos:end="116:40"><name pos:start="116:33" pos:end="116:34">bw</name><operator pos:start="116:35" pos:end="116:35">.</operator><name pos:start="116:36" pos:end="116:40">write</name></name><argument_list pos:start="116:41" pos:end="116:46">(<argument pos:start="116:42" pos:end="116:45"><expr pos:start="116:42" pos:end="116:45"><literal type="string" pos:start="116:42" pos:end="116:45">"\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<expr_stmt pos:start="117:33" pos:end="117:94"><expr pos:start="117:33" pos:end="117:93"><call pos:start="117:33" pos:end="117:93"><name pos:start="117:33" pos:end="117:50"><name pos:start="117:33" pos:end="117:38">System</name><operator pos:start="117:39" pos:end="117:39">.</operator><name pos:start="117:40" pos:end="117:42">out</name><operator pos:start="117:43" pos:end="117:43">.</operator><name pos:start="117:44" pos:end="117:50">println</name></name><argument_list pos:start="117:51" pos:end="117:93">(<argument pos:start="117:52" pos:end="117:92"><expr pos:start="117:52" pos:end="117:92"><literal type="string" pos:start="117:52" pos:end="117:83">"Message sent to the client is "</literal> <operator pos:start="117:85" pos:end="117:85">+</operator> <name pos:start="117:87" pos:end="117:92">toSend</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<expr_stmt pos:start="118:33" pos:end="118:43"><expr pos:start="118:33" pos:end="118:42"><call pos:start="118:33" pos:end="118:42"><name pos:start="118:33" pos:end="118:40"><name pos:start="118:33" pos:end="118:34">bw</name><operator pos:start="118:35" pos:end="118:35">.</operator><name pos:start="118:36" pos:end="118:40">flush</name></name><argument_list pos:start="118:41" pos:end="118:42">()</argument_list></call></expr>;</expr_stmt>

				<expr_stmt pos:start="120:33" pos:end="120:51"><expr pos:start="120:33" pos:end="120:50"><call pos:start="120:33" pos:end="120:50"><name pos:start="120:33" pos:end="120:44"><name pos:start="120:33" pos:end="120:38">Thread</name><operator pos:start="120:39" pos:end="120:39">.</operator><name pos:start="120:40" pos:end="120:44">sleep</name></name><argument_list pos:start="120:45" pos:end="120:50">(<argument pos:start="120:46" pos:end="120:49"><expr pos:start="120:46" pos:end="120:49"><literal type="number" pos:start="120:46" pos:end="120:49">5000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

			</block_content>}</block></while>
		</block_content>}</block> <catch pos:start="123:19" pos:end="125:17">catch <parameter_list pos:start="123:25" pos:end="123:37">(<parameter pos:start="123:26" pos:end="123:36"><decl pos:start="123:26" pos:end="123:36"><type pos:start="123:26" pos:end="123:36"><name pos:start="123:26" pos:end="123:34">Exception</name></type> <name pos:start="123:36" pos:end="123:36">e</name></decl></parameter>)</parameter_list> <block pos:start="123:39" pos:end="125:17">{<block_content pos:start="124:25" pos:end="124:44">
			<expr_stmt pos:start="124:25" pos:end="124:44"><expr pos:start="124:25" pos:end="124:43"><call pos:start="124:25" pos:end="124:43"><name pos:start="124:25" pos:end="124:41"><name pos:start="124:25" pos:end="124:25">e</name><operator pos:start="124:26" pos:end="124:26">.</operator><name pos:start="124:27" pos:end="124:41">printStackTrace</name></name><argument_list pos:start="124:42" pos:end="124:43">()</argument_list></call></expr>;</expr_stmt>
		</block_content>}</block></catch></try>
	</block_content>}</block></function>

}</block></class></unit>
