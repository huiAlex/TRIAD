<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="Java" filename="flatCode/StopExecutorViaReverse.java" pos:tabs="8"><package pos:start="1:1" pos:end="1:59">package <name pos:start="1:9" pos:end="1:58"><name pos:start="1:9" pos:end="1:11">edu</name><operator pos:start="1:12" pos:end="1:12">.</operator><name pos:start="1:13" pos:end="1:14">nd</name><operator pos:start="1:15" pos:end="1:15">.</operator><name pos:start="1:16" pos:end="1:24">dronology</name><operator pos:start="1:25" pos:end="1:25">.</operator><name pos:start="1:26" pos:end="1:29">core</name><operator pos:start="1:30" pos:end="1:30">.</operator><name pos:start="1:31" pos:end="1:37">vehicle</name><operator pos:start="1:38" pos:end="1:38">.</operator><name pos:start="1:39" pos:end="1:58">manageddroneinternal</name></name>;</package>

<import pos:start="3:1" pos:end="3:67">import <name pos:start="3:8" pos:end="3:66"><name pos:start="3:8" pos:end="3:10">org</name><operator pos:start="3:11" pos:end="3:11">.</operator><name pos:start="3:12" pos:end="3:17">apache</name><operator pos:start="3:18" pos:end="3:18">.</operator><name pos:start="3:19" pos:end="3:25">commons</name><operator pos:start="3:26" pos:end="3:26">.</operator><name pos:start="3:27" pos:end="3:31">math3</name><operator pos:start="3:32" pos:end="3:32">.</operator><name pos:start="3:33" pos:end="3:40">geometry</name><operator pos:start="3:41" pos:end="3:41">.</operator><name pos:start="3:42" pos:end="3:50">euclidean</name><operator pos:start="3:51" pos:end="3:51">.</operator><name pos:start="3:52" pos:end="3:57">threed</name><operator pos:start="3:58" pos:end="3:58">.</operator><name pos:start="3:59" pos:end="3:66">Vector3D</name></name>;</import>

<import pos:start="5:1" pos:end="5:70">import <name pos:start="5:8" pos:end="5:69"><name pos:start="5:8" pos:end="5:10">edu</name><operator pos:start="5:11" pos:end="5:11">.</operator><name pos:start="5:12" pos:end="5:13">nd</name><operator pos:start="5:14" pos:end="5:14">.</operator><name pos:start="5:15" pos:end="5:23">dronology</name><operator pos:start="5:24" pos:end="5:24">.</operator><name pos:start="5:25" pos:end="5:28">core</name><operator pos:start="5:29" pos:end="5:29">.</operator><name pos:start="5:30" pos:end="5:47">collisionavoidance</name><operator pos:start="5:48" pos:end="5:48">.</operator><name pos:start="5:49" pos:end="5:69">DroneSnapshotInternal</name></name>;</import>
<import pos:start="6:1" pos:end="6:77">import <name pos:start="6:8" pos:end="6:76"><name pos:start="6:8" pos:end="6:10">edu</name><operator pos:start="6:11" pos:end="6:11">.</operator><name pos:start="6:12" pos:end="6:13">nd</name><operator pos:start="6:14" pos:end="6:14">.</operator><name pos:start="6:15" pos:end="6:23">dronology</name><operator pos:start="6:24" pos:end="6:24">.</operator><name pos:start="6:25" pos:end="6:28">core</name><operator pos:start="6:29" pos:end="6:29">.</operator><name pos:start="6:30" pos:end="6:47">collisionavoidance</name><operator pos:start="6:48" pos:end="6:48">.</operator><name pos:start="6:49" pos:end="6:64">guidancecommands</name><operator pos:start="6:65" pos:end="6:65">.</operator><name pos:start="6:66" pos:end="6:76">StopCommand</name></name>;</import>
<import pos:start="7:1" pos:end="7:54">import <name pos:start="7:8" pos:end="7:53"><name pos:start="7:8" pos:end="7:10">edu</name><operator pos:start="7:11" pos:end="7:11">.</operator><name pos:start="7:12" pos:end="7:13">nd</name><operator pos:start="7:14" pos:end="7:14">.</operator><name pos:start="7:15" pos:end="7:23">dronology</name><operator pos:start="7:24" pos:end="7:24">.</operator><name pos:start="7:25" pos:end="7:28">core</name><operator pos:start="7:29" pos:end="7:29">.</operator><name pos:start="7:30" pos:end="7:39">coordinate</name><operator pos:start="7:40" pos:end="7:40">.</operator><name pos:start="7:41" pos:end="7:53">LlaCoordinate</name></name>;</import>
<import pos:start="8:1" pos:end="8:44">import <name pos:start="8:8" pos:end="8:43"><name pos:start="8:8" pos:end="8:10">edu</name><operator pos:start="8:11" pos:end="8:11">.</operator><name pos:start="8:12" pos:end="8:13">nd</name><operator pos:start="8:14" pos:end="8:14">.</operator><name pos:start="8:15" pos:end="8:23">dronology</name><operator pos:start="8:24" pos:end="8:24">.</operator><name pos:start="8:25" pos:end="8:28">core</name><operator pos:start="8:29" pos:end="8:29">.</operator><name pos:start="8:30" pos:end="8:36">vehicle</name><operator pos:start="8:37" pos:end="8:37">.</operator><name pos:start="8:38" pos:end="8:43">IDrone</name></name>;</import>
<import pos:start="9:1" pos:end="9:50">import <name pos:start="9:8" pos:end="9:49"><name pos:start="9:8" pos:end="9:10">edu</name><operator pos:start="9:11" pos:end="9:11">.</operator><name pos:start="9:12" pos:end="9:13">nd</name><operator pos:start="9:14" pos:end="9:14">.</operator><name pos:start="9:15" pos:end="9:23">dronology</name><operator pos:start="9:24" pos:end="9:24">.</operator><name pos:start="9:25" pos:end="9:28">core</name><operator pos:start="9:29" pos:end="9:29">.</operator><name pos:start="9:30" pos:end="9:36">vehicle</name><operator pos:start="9:37" pos:end="9:37">.</operator><name pos:start="9:38" pos:end="9:49">ManagedDrone</name></name>;</import>

<class pos:start="11:1" pos:end="105:1"><specifier pos:start="11:1" pos:end="11:6">public</specifier> class <name pos:start="11:14" pos:end="11:35">StopExecutorViaReverse</name> <super_list pos:start="11:37" pos:end="11:62"><implements pos:start="11:37" pos:end="11:62">implements <super pos:start="11:48" pos:end="11:62"><name pos:start="11:48" pos:end="11:62">CommandExecutor</name></super></implements></super_list> <block pos:start="11:64" pos:end="105:1">{

    <enum pos:start="13:5" pos:end="20:5">enum <name pos:start="13:10" pos:end="13:27">StopExecutionState</name> <block pos:start="13:29" pos:end="20:5">{
        <decl pos:start="14:9" pos:end="14:24"><name pos:start="14:9" pos:end="14:24">RADIOING_REVERSE</name></decl>,
        <decl pos:start="15:9" pos:end="15:26"><name pos:start="15:9" pos:end="15:26">WAITING_TO_REVERSE</name></decl>,
        <decl pos:start="16:9" pos:end="16:21"><name pos:start="16:9" pos:end="16:21">RADIOING_STOP</name></decl>,
        <decl pos:start="17:9" pos:end="17:26"><name pos:start="17:9" pos:end="17:26">WATCHING_THE_CLOCK</name></decl>,
        <decl pos:start="18:9" pos:end="18:23"><name pos:start="18:9" pos:end="18:23">WAITING_FOREVER</name></decl>,
        <decl pos:start="19:9" pos:end="19:16"><name pos:start="19:9" pos:end="19:16">FINISHED</name></decl>;
    }</block></enum>

    <comment type="line" pos:start="22:5" pos:end="22:90">// seconds to wait after sending reverse NED command before sending NED(0,0,0) command</comment>
    <decl_stmt pos:start="23:5" pos:end="23:57"><decl pos:start="23:5" pos:end="23:56"><type pos:start="23:5" pos:end="23:31"><specifier pos:start="23:5" pos:end="23:11">private</specifier> <specifier pos:start="23:13" pos:end="23:18">static</specifier> <specifier pos:start="23:20" pos:end="23:24">final</specifier> <name pos:start="23:26" pos:end="23:31">double</name></type> <name pos:start="23:33" pos:end="23:50">REVERSAL_WAIT_TIME</name> <init pos:start="23:52" pos:end="23:56">= <expr pos:start="23:54" pos:end="23:56"><literal type="number" pos:start="23:54" pos:end="23:56">2.0</literal></expr></init></decl>;</decl_stmt>

    <comment type="line" pos:start="25:5" pos:end="25:46">// how fast should the UAV reverse to stop</comment>
    <decl_stmt pos:start="26:5" pos:end="26:53"><decl pos:start="26:5" pos:end="26:52"><type pos:start="26:5" pos:end="26:31"><specifier pos:start="26:5" pos:end="26:11">private</specifier> <specifier pos:start="26:13" pos:end="26:18">static</specifier> <specifier pos:start="26:20" pos:end="26:24">final</specifier> <name pos:start="26:26" pos:end="26:31">double</name></type> <name pos:start="26:33" pos:end="26:46">REVERSAL_SPEED</name> <init pos:start="26:48" pos:end="26:52">= <expr pos:start="26:50" pos:end="26:52"><literal type="number" pos:start="26:50" pos:end="26:52">7.0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="28:5" pos:end="28:25"><decl pos:start="28:5" pos:end="28:24"><type pos:start="28:5" pos:end="28:18"><specifier pos:start="28:5" pos:end="28:11">private</specifier> <name pos:start="28:13" pos:end="28:18">IDrone</name></type> <name pos:start="28:20" pos:end="28:24">drone</name></decl>;</decl_stmt>
    <decl_stmt pos:start="29:5" pos:end="29:67"><decl pos:start="29:5" pos:end="29:66"><type pos:start="29:5" pos:end="29:22"><name pos:start="29:5" pos:end="29:22">StopExecutionState</name></type> <name pos:start="29:24" pos:end="29:28">state</name> <init pos:start="29:30" pos:end="29:66">= <expr pos:start="29:32" pos:end="29:66"><name pos:start="29:32" pos:end="29:66"><name pos:start="29:32" pos:end="29:49">StopExecutionState</name><operator pos:start="29:50" pos:end="29:50">.</operator><name pos:start="29:51" pos:end="29:66">RADIOING_REVERSE</name></name></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="30:5" pos:end="30:21"><decl pos:start="30:5" pos:end="30:20"><type pos:start="30:5" pos:end="30:15"><name pos:start="30:5" pos:end="30:15">StopCommand</name></type> <name pos:start="30:17" pos:end="30:20">data</name></decl>;</decl_stmt>
    <decl_stmt pos:start="31:5" pos:end="31:26"><decl pos:start="31:5" pos:end="31:25"><type pos:start="31:5" pos:end="31:8"><name pos:start="31:5" pos:end="31:8">long</name></type> <name pos:start="31:10" pos:end="31:25">reverseRadioTime</name></decl>;</decl_stmt>
    <decl_stmt pos:start="32:5" pos:end="32:19"><decl pos:start="32:5" pos:end="32:18"><type pos:start="32:5" pos:end="32:8"><name pos:start="32:5" pos:end="32:8">long</name></type> <name pos:start="32:10" pos:end="32:18">startTime</name></decl>;</decl_stmt>

    <constructor pos:start="34:5" pos:end="37:5"><specifier pos:start="34:5" pos:end="34:10">public</specifier> <name pos:start="34:12" pos:end="34:33">StopExecutorViaReverse</name><parameter_list pos:start="34:34" pos:end="34:65">(<parameter pos:start="34:35" pos:end="34:46"><decl pos:start="34:35" pos:end="34:46"><type pos:start="34:35" pos:end="34:46"><name pos:start="34:35" pos:end="34:40">IDrone</name></type> <name pos:start="34:42" pos:end="34:46">drone</name></decl></parameter>, <parameter pos:start="34:49" pos:end="34:64"><decl pos:start="34:49" pos:end="34:64"><type pos:start="34:49" pos:end="34:64"><name pos:start="34:49" pos:end="34:59">StopCommand</name></type> <name pos:start="34:61" pos:end="34:64">data</name></decl></parameter>)</parameter_list> <block pos:start="34:67" pos:end="37:5">{<block_content pos:start="35:9" pos:end="36:25">
        <expr_stmt pos:start="35:9" pos:end="35:27"><expr pos:start="35:9" pos:end="35:26"><name pos:start="35:9" pos:end="35:18"><name pos:start="35:9" pos:end="35:12">this</name><operator pos:start="35:13" pos:end="35:13">.</operator><name pos:start="35:14" pos:end="35:18">drone</name></name> <operator pos:start="35:20" pos:end="35:20">=</operator> <name pos:start="35:22" pos:end="35:26">drone</name></expr>;</expr_stmt>
        <expr_stmt pos:start="36:9" pos:end="36:25"><expr pos:start="36:9" pos:end="36:24"><name pos:start="36:9" pos:end="36:17"><name pos:start="36:9" pos:end="36:12">this</name><operator pos:start="36:13" pos:end="36:13">.</operator><name pos:start="36:14" pos:end="36:17">data</name></name> <operator pos:start="36:19" pos:end="36:19">=</operator> <name pos:start="36:21" pos:end="36:24">data</name></expr>;</expr_stmt>
    </block_content>}</block></constructor>

    <function pos:start="39:5" pos:end="61:5"><annotation pos:start="39:5" pos:end="39:13">@<name pos:start="39:6" pos:end="39:13">Override</name></annotation>
    <type pos:start="40:5" pos:end="40:15"><specifier pos:start="40:5" pos:end="40:10">public</specifier> <name pos:start="40:12" pos:end="40:15">void</name></type> <name pos:start="40:17" pos:end="40:23">process</name><parameter_list pos:start="40:24" pos:end="40:25">()</parameter_list> <block pos:start="40:27" pos:end="61:5">{<block_content pos:start="41:9" pos:end="60:9">
        <switch pos:start="41:9" pos:end="60:9">switch <condition pos:start="41:16" pos:end="41:22">(<expr pos:start="41:17" pos:end="41:21"><name pos:start="41:17" pos:end="41:21">state</name></expr>)</condition> <block pos:start="41:24" pos:end="60:9">{<block_content pos:start="42:13" pos:end="59:22">
            <case pos:start="42:13" pos:end="42:34">case <expr pos:start="42:18" pos:end="42:33"><name pos:start="42:18" pos:end="42:33">RADIOING_REVERSE</name></expr>:</case>
                <expr_stmt pos:start="43:17" pos:end="43:31"><expr pos:start="43:17" pos:end="43:30"><call pos:start="43:17" pos:end="43:30"><name pos:start="43:17" pos:end="43:28">radioReverse</name><argument_list pos:start="43:29" pos:end="43:30">()</argument_list></call></expr>;</expr_stmt>
                <break pos:start="44:17" pos:end="44:22">break;</break>
            <case pos:start="45:13" pos:end="45:36">case <expr pos:start="45:18" pos:end="45:35"><name pos:start="45:18" pos:end="45:35">WAITING_TO_REVERSE</name></expr>:</case>
                <expr_stmt pos:start="46:17" pos:end="46:34"><expr pos:start="46:17" pos:end="46:33"><call pos:start="46:17" pos:end="46:33"><name pos:start="46:17" pos:end="46:31">waitForReversal</name><argument_list pos:start="46:32" pos:end="46:33">()</argument_list></call></expr>;</expr_stmt>
                <break pos:start="47:17" pos:end="47:22">break;</break>
            <case pos:start="48:13" pos:end="48:31">case <expr pos:start="48:18" pos:end="48:30"><name pos:start="48:18" pos:end="48:30">RADIOING_STOP</name></expr>:</case>
                <expr_stmt pos:start="49:17" pos:end="49:28"><expr pos:start="49:17" pos:end="49:27"><call pos:start="49:17" pos:end="49:27"><name pos:start="49:17" pos:end="49:25">radioStop</name><argument_list pos:start="49:26" pos:end="49:27">()</argument_list></call></expr>;</expr_stmt>
                <break pos:start="50:17" pos:end="50:22">break;</break>
            <case pos:start="51:13" pos:end="51:36">case <expr pos:start="51:18" pos:end="51:35"><name pos:start="51:18" pos:end="51:35">WATCHING_THE_CLOCK</name></expr>:</case>
                <expr_stmt pos:start="52:17" pos:end="52:29"><expr pos:start="52:17" pos:end="52:28"><call pos:start="52:17" pos:end="52:28"><name pos:start="52:17" pos:end="52:26">checkClock</name><argument_list pos:start="52:27" pos:end="52:28">()</argument_list></call></expr>;</expr_stmt>
                <break pos:start="53:17" pos:end="53:22">break;</break>

            <case pos:start="55:13" pos:end="55:33">case <expr pos:start="55:18" pos:end="55:32"><name pos:start="55:18" pos:end="55:32">WAITING_FOREVER</name></expr>:</case>
            <case pos:start="56:13" pos:end="56:26">case <expr pos:start="56:18" pos:end="56:25"><name pos:start="56:18" pos:end="56:25">FINISHED</name></expr>:</case>
            <default pos:start="57:13" pos:end="57:20">default:</default>
                <comment type="line" pos:start="58:17" pos:end="58:30">// Do nothing.</comment>
                <break pos:start="59:17" pos:end="59:22">break;</break>
        </block_content>}</block></switch>
    </block_content>}</block></function>

    <function pos:start="63:5" pos:end="69:5"><type pos:start="63:5" pos:end="63:16"><specifier pos:start="63:5" pos:end="63:11">private</specifier> <name pos:start="63:13" pos:end="63:16">void</name></type> <name pos:start="63:18" pos:end="63:29">radioReverse</name><parameter_list pos:start="63:30" pos:end="63:31">()</parameter_list> <block pos:start="63:33" pos:end="69:5">{<block_content pos:start="65:9" pos:end="68:54">
        <comment type="line" pos:start="64:9" pos:end="64:59">//should this flatten? what if the UAV is going up?</comment>
        <decl_stmt pos:start="65:9" pos:end="65:139"><decl pos:start="65:9" pos:end="65:138"><type pos:start="65:9" pos:end="65:16"><name pos:start="65:9" pos:end="65:16">Vector3D</name></type> <name pos:start="65:18" pos:end="65:27">reverseNED</name> <init pos:start="65:29" pos:end="65:138">= <expr pos:start="65:31" pos:end="65:138"><call pos:start="65:31" pos:end="65:60"><name pos:start="65:31" pos:end="65:58"><name pos:start="65:31" pos:end="65:35">drone</name><operator pos:start="65:36" pos:end="65:36">.</operator><name pos:start="65:37" pos:end="65:58">getLatestDroneSnapshot</name></name><argument_list pos:start="65:59" pos:end="65:60">()</argument_list></call><operator pos:start="65:61" pos:end="65:61">.</operator><call pos:start="65:62" pos:end="65:74"><name pos:start="65:62" pos:end="65:72">getVelocity</name><argument_list pos:start="65:73" pos:end="65:74">()</argument_list></call><operator pos:start="65:75" pos:end="65:75">.</operator><call pos:start="65:76" pos:end="65:95"><name pos:start="65:76" pos:end="65:89">scalarMultiply</name><argument_list pos:start="65:90" pos:end="65:95">(<argument pos:start="65:91" pos:end="65:94"><expr pos:start="65:91" pos:end="65:94"><operator pos:start="65:91" pos:end="65:91">-</operator><literal type="number" pos:start="65:92" pos:end="65:94">1.0</literal></expr></argument>)</argument_list></call><operator pos:start="65:96" pos:end="65:96">.</operator><call pos:start="65:97" pos:end="65:107"><name pos:start="65:97" pos:end="65:105">normalize</name><argument_list pos:start="65:106" pos:end="65:107">()</argument_list></call><operator pos:start="65:108" pos:end="65:108">.</operator><call pos:start="65:109" pos:end="65:138"><name pos:start="65:109" pos:end="65:122">scalarMultiply</name><argument_list pos:start="65:123" pos:end="65:138">(<argument pos:start="65:124" pos:end="65:137"><expr pos:start="65:124" pos:end="65:137"><name pos:start="65:124" pos:end="65:137">REVERSAL_SPEED</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <expr_stmt pos:start="66:9" pos:end="66:83"><expr pos:start="66:9" pos:end="66:82"><call pos:start="66:9" pos:end="66:82"><name pos:start="66:9" pos:end="66:25"><name pos:start="66:9" pos:end="66:13">drone</name><operator pos:start="66:14" pos:end="66:14">.</operator><name pos:start="66:15" pos:end="66:25">setVelocity</name></name><argument_list pos:start="66:26" pos:end="66:82">(<argument pos:start="66:27" pos:end="66:43"><expr pos:start="66:27" pos:end="66:43"><call pos:start="66:27" pos:end="66:43"><name pos:start="66:27" pos:end="66:41"><name pos:start="66:27" pos:end="66:36">reverseNED</name><operator pos:start="66:37" pos:end="66:37">.</operator><name pos:start="66:38" pos:end="66:41">getX</name></name><argument_list pos:start="66:42" pos:end="66:43">()</argument_list></call></expr></argument>, <argument pos:start="66:46" pos:end="66:62"><expr pos:start="66:46" pos:end="66:62"><call pos:start="66:46" pos:end="66:62"><name pos:start="66:46" pos:end="66:60"><name pos:start="66:46" pos:end="66:55">reverseNED</name><operator pos:start="66:56" pos:end="66:56">.</operator><name pos:start="66:57" pos:end="66:60">getY</name></name><argument_list pos:start="66:61" pos:end="66:62">()</argument_list></call></expr></argument>, <argument pos:start="66:65" pos:end="66:81"><expr pos:start="66:65" pos:end="66:81"><call pos:start="66:65" pos:end="66:81"><name pos:start="66:65" pos:end="66:79"><name pos:start="66:65" pos:end="66:74">reverseNED</name><operator pos:start="66:75" pos:end="66:75">.</operator><name pos:start="66:76" pos:end="66:79">getZ</name></name><argument_list pos:start="66:80" pos:end="66:81">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt pos:start="67:9" pos:end="67:45"><expr pos:start="67:9" pos:end="67:44"><name pos:start="67:9" pos:end="67:24">reverseRadioTime</name> <operator pos:start="67:26" pos:end="67:26">=</operator> <call pos:start="67:28" pos:end="67:44"><name pos:start="67:28" pos:end="67:42"><name pos:start="67:28" pos:end="67:33">System</name><operator pos:start="67:34" pos:end="67:34">.</operator><name pos:start="67:35" pos:end="67:42">nanoTime</name></name><argument_list pos:start="67:43" pos:end="67:44">()</argument_list></call></expr>;</expr_stmt>
        <expr_stmt pos:start="68:9" pos:end="68:54"><expr pos:start="68:9" pos:end="68:53"><name pos:start="68:9" pos:end="68:13">state</name> <operator pos:start="68:15" pos:end="68:15">=</operator> <name pos:start="68:17" pos:end="68:53"><name pos:start="68:17" pos:end="68:34">StopExecutionState</name><operator pos:start="68:35" pos:end="68:35">.</operator><name pos:start="68:36" pos:end="68:53">WAITING_TO_REVERSE</name></name></expr>;</expr_stmt>
    </block_content>}</block></function>

    <function pos:start="71:5" pos:end="76:5"><type pos:start="71:5" pos:end="71:16"><specifier pos:start="71:5" pos:end="71:11">private</specifier> <name pos:start="71:13" pos:end="71:16">void</name></type> <name pos:start="71:18" pos:end="71:32">waitForReversal</name><parameter_list pos:start="71:33" pos:end="71:34">()</parameter_list> <block pos:start="71:36" pos:end="76:5">{<block_content pos:start="72:9" pos:end="75:9">
        <decl_stmt pos:start="72:9" pos:end="72:83"><decl pos:start="72:9" pos:end="72:82"><type pos:start="72:9" pos:end="72:14"><name pos:start="72:9" pos:end="72:14">double</name></type> <name pos:start="72:16" pos:end="72:32">reversalWaitTimer</name> <init pos:start="72:34" pos:end="72:82">= <expr pos:start="72:36" pos:end="72:82"><operator pos:start="72:36" pos:end="72:36">(</operator><call pos:start="72:37" pos:end="72:53"><name pos:start="72:37" pos:end="72:51"><name pos:start="72:37" pos:end="72:42">System</name><operator pos:start="72:43" pos:end="72:43">.</operator><name pos:start="72:44" pos:end="72:51">nanoTime</name></name><argument_list pos:start="72:52" pos:end="72:53">()</argument_list></call> <operator pos:start="72:55" pos:end="72:55">-</operator> <name pos:start="72:57" pos:end="72:72">reverseRadioTime</name><operator pos:start="72:73" pos:end="72:73">)</operator> <operator pos:start="72:75" pos:end="72:75">*</operator> <literal type="number" pos:start="72:77" pos:end="72:82">1.0e-9</literal></expr></init></decl>;</decl_stmt>
        <if_stmt pos:start="73:9" pos:end="75:9"><if pos:start="73:9" pos:end="75:9">if <condition pos:start="73:12" pos:end="73:51">(<expr pos:start="73:13" pos:end="73:50"><name pos:start="73:13" pos:end="73:30">REVERSAL_WAIT_TIME</name> <operator pos:start="73:32" pos:end="73:32">&lt;</operator> <name pos:start="73:34" pos:end="73:50">reversalWaitTimer</name></expr>)</condition> <block pos:start="73:53" pos:end="75:9">{<block_content pos:start="74:13" pos:end="74:53">
            <expr_stmt pos:start="74:13" pos:end="74:53"><expr pos:start="74:13" pos:end="74:52"><name pos:start="74:13" pos:end="74:17">state</name> <operator pos:start="74:19" pos:end="74:19">=</operator> <name pos:start="74:21" pos:end="74:52"><name pos:start="74:21" pos:end="74:38">StopExecutionState</name><operator pos:start="74:39" pos:end="74:39">.</operator><name pos:start="74:40" pos:end="74:52">RADIOING_STOP</name></name></expr>;</expr_stmt>
        </block_content>}</block></if></if_stmt>
    </block_content>}</block></function>

    <function pos:start="78:5" pos:end="89:5"><type pos:start="78:5" pos:end="78:16"><specifier pos:start="78:5" pos:end="78:11">private</specifier> <name pos:start="78:13" pos:end="78:16">void</name></type> <name pos:start="78:18" pos:end="78:26">radioStop</name><parameter_list pos:start="78:27" pos:end="78:28">()</parameter_list> <block pos:start="78:30" pos:end="89:5">{<block_content pos:start="79:9" pos:end="88:9">
        <expr_stmt pos:start="79:9" pos:end="79:41"><expr pos:start="79:9" pos:end="79:40"><call pos:start="79:9" pos:end="79:40"><name pos:start="79:9" pos:end="79:25"><name pos:start="79:9" pos:end="79:13">drone</name><operator pos:start="79:14" pos:end="79:14">.</operator><name pos:start="79:15" pos:end="79:25">setVelocity</name></name><argument_list pos:start="79:26" pos:end="79:40">(<argument pos:start="79:27" pos:end="79:29"><expr pos:start="79:27" pos:end="79:29"><literal type="number" pos:start="79:27" pos:end="79:29">0.0</literal></expr></argument>, <argument pos:start="79:32" pos:end="79:34"><expr pos:start="79:32" pos:end="79:34"><literal type="number" pos:start="79:32" pos:end="79:34">0.0</literal></expr></argument>, <argument pos:start="79:37" pos:end="79:39"><expr pos:start="79:37" pos:end="79:39"><literal type="number" pos:start="79:37" pos:end="79:39">0.0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <decl_stmt pos:start="81:9" pos:end="81:45"><decl pos:start="81:9" pos:end="81:44"><type pos:start="81:9" pos:end="81:14"><name pos:start="81:9" pos:end="81:14">double</name></type> <name pos:start="81:16" pos:end="81:27">waitDuration</name> <init pos:start="81:29" pos:end="81:44">= <expr pos:start="81:31" pos:end="81:44"><call pos:start="81:31" pos:end="81:44"><name pos:start="81:31" pos:end="81:42"><name pos:start="81:31" pos:end="81:34">data</name><operator pos:start="81:35" pos:end="81:35">.</operator><name pos:start="81:36" pos:end="81:42">getTime</name></name><argument_list pos:start="81:43" pos:end="81:44">()</argument_list></call></expr></init></decl>;</decl_stmt>
        <if_stmt pos:start="82:9" pos:end="88:9"><if pos:start="82:9" pos:end="85:9">if <condition pos:start="82:12" pos:end="82:31">(<expr pos:start="82:13" pos:end="82:30"><name pos:start="82:13" pos:end="82:24">waitDuration</name> <operator pos:start="82:26" pos:end="82:26">&gt;</operator> <literal type="number" pos:start="82:28" pos:end="82:30">0.0</literal></expr>)</condition> <block pos:start="82:33" pos:end="85:9">{<block_content pos:start="83:13" pos:end="84:58">
            <expr_stmt pos:start="83:13" pos:end="83:42"><expr pos:start="83:13" pos:end="83:41"><name pos:start="83:13" pos:end="83:21">startTime</name> <operator pos:start="83:23" pos:end="83:23">=</operator> <call pos:start="83:25" pos:end="83:41"><name pos:start="83:25" pos:end="83:39"><name pos:start="83:25" pos:end="83:30">System</name><operator pos:start="83:31" pos:end="83:31">.</operator><name pos:start="83:32" pos:end="83:39">nanoTime</name></name><argument_list pos:start="83:40" pos:end="83:41">()</argument_list></call></expr>;</expr_stmt>
            <expr_stmt pos:start="84:13" pos:end="84:58"><expr pos:start="84:13" pos:end="84:57"><name pos:start="84:13" pos:end="84:17">state</name> <operator pos:start="84:19" pos:end="84:19">=</operator> <name pos:start="84:21" pos:end="84:57"><name pos:start="84:21" pos:end="84:38">StopExecutionState</name><operator pos:start="84:39" pos:end="84:39">.</operator><name pos:start="84:40" pos:end="84:57">WATCHING_THE_CLOCK</name></name></expr>;</expr_stmt>
        </block_content>}</block></if>
        <else pos:start="86:9" pos:end="88:9">else <block pos:start="86:14" pos:end="88:9">{<block_content pos:start="87:13" pos:end="87:55">
            <expr_stmt pos:start="87:13" pos:end="87:55"><expr pos:start="87:13" pos:end="87:54"><name pos:start="87:13" pos:end="87:17">state</name> <operator pos:start="87:19" pos:end="87:19">=</operator> <name pos:start="87:21" pos:end="87:54"><name pos:start="87:21" pos:end="87:38">StopExecutionState</name><operator pos:start="87:39" pos:end="87:39">.</operator><name pos:start="87:40" pos:end="87:54">WAITING_FOREVER</name></name></expr>;</expr_stmt>
        </block_content>}</block></else></if_stmt>
    </block_content>}</block></function>

    <function pos:start="91:5" pos:end="98:5"><type pos:start="91:5" pos:end="91:16"><specifier pos:start="91:5" pos:end="91:11">private</specifier> <name pos:start="91:13" pos:end="91:16">void</name></type> <name pos:start="91:18" pos:end="91:27">checkClock</name><parameter_list pos:start="91:28" pos:end="91:29">()</parameter_list> <block pos:start="91:31" pos:end="98:5">{<block_content pos:start="92:9" pos:end="97:9">
        <decl_stmt pos:start="92:9" pos:end="92:45"><decl pos:start="92:9" pos:end="92:44"><type pos:start="92:9" pos:end="92:14"><name pos:start="92:9" pos:end="92:14">double</name></type> <name pos:start="92:16" pos:end="92:27">waitDuration</name> <init pos:start="92:29" pos:end="92:44">= <expr pos:start="92:31" pos:end="92:44"><call pos:start="92:31" pos:end="92:44"><name pos:start="92:31" pos:end="92:42"><name pos:start="92:31" pos:end="92:34">data</name><operator pos:start="92:35" pos:end="92:35">.</operator><name pos:start="92:36" pos:end="92:42">getTime</name></name><argument_list pos:start="92:43" pos:end="92:44">()</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt pos:start="93:9" pos:end="93:54"><decl pos:start="93:9" pos:end="93:53"><type pos:start="93:9" pos:end="93:12"><name pos:start="93:9" pos:end="93:12">long</name></type> <name pos:start="93:14" pos:end="93:22">deltaNano</name> <init pos:start="93:24" pos:end="93:53">= <expr pos:start="93:26" pos:end="93:53"><call pos:start="93:26" pos:end="93:42"><name pos:start="93:26" pos:end="93:40"><name pos:start="93:26" pos:end="93:31">System</name><operator pos:start="93:32" pos:end="93:32">.</operator><name pos:start="93:33" pos:end="93:40">nanoTime</name></name><argument_list pos:start="93:41" pos:end="93:42">()</argument_list></call><operator pos:start="93:43" pos:end="93:43">-</operator> <name pos:start="93:45" pos:end="93:53">startTime</name></expr></init></decl>;</decl_stmt>
        <decl_stmt pos:start="94:9" pos:end="94:43"><decl pos:start="94:9" pos:end="94:42"><type pos:start="94:9" pos:end="94:14"><name pos:start="94:9" pos:end="94:14">double</name></type> <name pos:start="94:16" pos:end="94:21">deltaT</name> <init pos:start="94:23" pos:end="94:42">= <expr pos:start="94:25" pos:end="94:42"><name pos:start="94:25" pos:end="94:33">deltaNano</name> <operator pos:start="94:35" pos:end="94:35">*</operator> <literal type="number" pos:start="94:37" pos:end="94:42">1.0e-9</literal></expr></init></decl>;</decl_stmt>
        <if_stmt pos:start="95:9" pos:end="97:9"><if pos:start="95:9" pos:end="97:9">if <condition pos:start="95:12" pos:end="95:34">(<expr pos:start="95:13" pos:end="95:33"><name pos:start="95:13" pos:end="95:18">deltaT</name> <operator pos:start="95:20" pos:end="95:20">&gt;</operator> <name pos:start="95:22" pos:end="95:33">waitDuration</name></expr>)</condition> <block pos:start="95:36" pos:end="97:9">{<block_content pos:start="96:13" pos:end="96:48">
            <expr_stmt pos:start="96:13" pos:end="96:48"><expr pos:start="96:13" pos:end="96:47"><name pos:start="96:13" pos:end="96:17">state</name> <operator pos:start="96:19" pos:end="96:19">=</operator> <name pos:start="96:21" pos:end="96:47"><name pos:start="96:21" pos:end="96:38">StopExecutionState</name><operator pos:start="96:39" pos:end="96:39">.</operator><name pos:start="96:40" pos:end="96:47">FINISHED</name></name></expr>;</expr_stmt>
        </block_content>}</block></if></if_stmt>
    </block_content>}</block></function>

    <function pos:start="100:5" pos:end="103:5"><annotation pos:start="100:5" pos:end="100:13">@<name pos:start="100:6" pos:end="100:13">Override</name></annotation>
    <type pos:start="101:5" pos:end="101:18"><specifier pos:start="101:5" pos:end="101:10">public</specifier> <name pos:start="101:12" pos:end="101:18">boolean</name></type> <name pos:start="101:20" pos:end="101:29">isFinished</name><parameter_list pos:start="101:30" pos:end="101:31">()</parameter_list> <block pos:start="101:33" pos:end="103:5">{<block_content pos:start="102:9" pos:end="102:52">
        <return pos:start="102:9" pos:end="102:52">return <expr pos:start="102:16" pos:end="102:51"><name pos:start="102:16" pos:end="102:20">state</name> <operator pos:start="102:22" pos:end="102:23">==</operator> <name pos:start="102:25" pos:end="102:51"><name pos:start="102:25" pos:end="102:42">StopExecutionState</name><operator pos:start="102:43" pos:end="102:43">.</operator><name pos:start="102:44" pos:end="102:51">FINISHED</name></name></expr>;</return>
    </block_content>}</block></function>

}</block></class>
</unit>
