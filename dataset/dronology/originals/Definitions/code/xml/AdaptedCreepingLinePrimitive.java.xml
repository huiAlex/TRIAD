<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="Java" filename="flatCode/AdaptedCreepingLinePrimitive.java" pos:tabs="8"><package pos:start="1:1" pos:end="1:66">package <name pos:start="1:9" pos:end="1:65"><name pos:start="1:9" pos:end="1:11">edu</name><operator pos:start="1:12" pos:end="1:12">.</operator><name pos:start="1:13" pos:end="1:14">nd</name><operator pos:start="1:15" pos:end="1:15">.</operator><name pos:start="1:16" pos:end="1:24">dronology</name><operator pos:start="1:25" pos:end="1:25">.</operator><name pos:start="1:26" pos:end="1:33">services</name><operator pos:start="1:34" pos:end="1:34">.</operator><name pos:start="1:35" pos:end="1:44">extensions</name><operator pos:start="1:45" pos:end="1:45">.</operator><name pos:start="1:46" pos:end="1:56">areamapping</name><operator pos:start="1:57" pos:end="1:57">.</operator><name pos:start="1:58" pos:end="1:65">internal</name></name>;</package>

<import pos:start="3:1" pos:end="3:29">import <name pos:start="3:8" pos:end="3:28"><name pos:start="3:8" pos:end="3:11">java</name><operator pos:start="3:12" pos:end="3:12">.</operator><name pos:start="3:13" pos:end="3:15">awt</name><operator pos:start="3:16" pos:end="3:16">.</operator><name pos:start="3:17" pos:end="3:20">geom</name><operator pos:start="3:21" pos:end="3:21">.</operator><name pos:start="3:22" pos:end="3:28">Point2D</name></name>;</import>
<import pos:start="4:1" pos:end="4:27">import <name pos:start="4:8" pos:end="4:26"><name pos:start="4:8" pos:end="4:11">java</name><operator pos:start="4:12" pos:end="4:12">.</operator><name pos:start="4:13" pos:end="4:16">util</name><operator pos:start="4:17" pos:end="4:17">.</operator><name pos:start="4:18" pos:end="4:26">ArrayList</name></name>;</import>
<import pos:start="5:1" pos:end="5:22">import <name pos:start="5:8" pos:end="5:21"><name pos:start="5:8" pos:end="5:11">java</name><operator pos:start="5:12" pos:end="5:12">.</operator><name pos:start="5:13" pos:end="5:16">util</name><operator pos:start="5:17" pos:end="5:17">.</operator><name pos:start="5:18" pos:end="5:21">List</name></name>;</import>

<import pos:start="7:1" pos:end="7:81">import <name pos:start="7:8" pos:end="7:80"><name pos:start="7:8" pos:end="7:10">org</name><operator pos:start="7:11" pos:end="7:11">.</operator><name pos:start="7:12" pos:end="7:17">apache</name><operator pos:start="7:18" pos:end="7:18">.</operator><name pos:start="7:19" pos:end="7:25">commons</name><operator pos:start="7:26" pos:end="7:26">.</operator><name pos:start="7:27" pos:end="7:31">math3</name><operator pos:start="7:32" pos:end="7:32">.</operator><name pos:start="7:33" pos:end="7:34">ml</name><operator pos:start="7:35" pos:end="7:35">.</operator><name pos:start="7:36" pos:end="7:44">neuralnet</name><operator pos:start="7:45" pos:end="7:45">.</operator><name pos:start="7:46" pos:end="7:49">twod</name><operator pos:start="7:50" pos:end="7:50">.</operator><name pos:start="7:51" pos:end="7:54">util</name><operator pos:start="7:55" pos:end="7:55">.</operator><name pos:start="7:56" pos:end="7:80">TopographicErrorHistogram</name></name>;</import>
<import pos:start="8:1" pos:end="8:60">import <name pos:start="8:8" pos:end="8:59"><name pos:start="8:8" pos:end="8:10">org</name><operator pos:start="8:11" pos:end="8:11">.</operator><name pos:start="8:12" pos:end="8:17">apache</name><operator pos:start="8:18" pos:end="8:18">.</operator><name pos:start="8:19" pos:end="8:25">logging</name><operator pos:start="8:26" pos:end="8:26">.</operator><name pos:start="8:27" pos:end="8:31">log4j</name><operator pos:start="8:32" pos:end="8:32">.</operator><name pos:start="8:33" pos:end="8:36">core</name><operator pos:start="8:37" pos:end="8:37">.</operator><name pos:start="8:38" pos:end="8:45">appender</name><operator pos:start="8:46" pos:end="8:46">.</operator><name pos:start="8:47" pos:end="8:53">routing</name><operator pos:start="8:54" pos:end="8:54">.</operator><name pos:start="8:55" pos:end="8:59">Route</name></name>;</import>

<import pos:start="10:1" pos:end="10:77">import <name pos:start="10:8" pos:end="10:76"><name pos:start="10:8" pos:end="10:10">edu</name><operator pos:start="10:11" pos:end="10:11">.</operator><name pos:start="10:12" pos:end="10:13">nd</name><operator pos:start="10:14" pos:end="10:14">.</operator><name pos:start="10:15" pos:end="10:23">dronology</name><operator pos:start="10:24" pos:end="10:24">.</operator><name pos:start="10:25" pos:end="10:32">services</name><operator pos:start="10:33" pos:end="10:33">.</operator><name pos:start="10:34" pos:end="10:43">extensions</name><operator pos:start="10:44" pos:end="10:44">.</operator><name pos:start="10:45" pos:end="10:55">areamapping</name><operator pos:start="10:56" pos:end="10:56">.</operator><name pos:start="10:57" pos:end="10:61">model</name><operator pos:start="10:62" pos:end="10:62">.</operator><name pos:start="10:63" pos:end="10:76">RoutePrimitive</name></name>;</import>
<import pos:start="11:1" pos:end="11:87">import <name pos:start="11:8" pos:end="11:86"><name pos:start="11:8" pos:end="11:10">edu</name><operator pos:start="11:11" pos:end="11:11">.</operator><name pos:start="11:12" pos:end="11:13">nd</name><operator pos:start="11:14" pos:end="11:14">.</operator><name pos:start="11:15" pos:end="11:23">dronology</name><operator pos:start="11:24" pos:end="11:24">.</operator><name pos:start="11:25" pos:end="11:32">services</name><operator pos:start="11:33" pos:end="11:33">.</operator><name pos:start="11:34" pos:end="11:43">extensions</name><operator pos:start="11:44" pos:end="11:44">.</operator><name pos:start="11:45" pos:end="11:55">areamapping</name><operator pos:start="11:56" pos:end="11:56">.</operator><name pos:start="11:57" pos:end="11:61">model</name><operator pos:start="11:62" pos:end="11:62">.</operator><name pos:start="11:63" pos:end="11:76">RoutePrimitive</name><operator pos:start="11:77" pos:end="11:77">.</operator><name pos:start="11:78" pos:end="11:86">RouteType</name></name>;</import>
<import pos:start="12:1" pos:end="12:71">import <name pos:start="12:8" pos:end="12:70"><name pos:start="12:8" pos:end="12:10">edu</name><operator pos:start="12:11" pos:end="12:11">.</operator><name pos:start="12:12" pos:end="12:13">nd</name><operator pos:start="12:14" pos:end="12:14">.</operator><name pos:start="12:15" pos:end="12:23">dronology</name><operator pos:start="12:24" pos:end="12:24">.</operator><name pos:start="12:25" pos:end="12:32">services</name><operator pos:start="12:33" pos:end="12:33">.</operator><name pos:start="12:34" pos:end="12:43">extensions</name><operator pos:start="12:44" pos:end="12:44">.</operator><name pos:start="12:45" pos:end="12:55">areamapping</name><operator pos:start="12:56" pos:end="12:56">.</operator><name pos:start="12:57" pos:end="12:60">util</name><operator pos:start="12:61" pos:end="12:61">.</operator><name pos:start="12:62" pos:end="12:70">Utilities</name></name>;</import>

<class pos:start="14:1" pos:end="181:1"><specifier pos:start="14:1" pos:end="14:6">public</specifier> class <name pos:start="14:14" pos:end="14:41">AdaptedCreepingLinePrimitive</name> <super_list pos:start="14:43" pos:end="14:74"><implements pos:start="14:43" pos:end="14:74">implements <super pos:start="14:54" pos:end="14:74"><name pos:start="14:54" pos:end="14:74">SearchPatternStrategy</name></super></implements></super_list><block pos:start="14:75" pos:end="181:1">{
	
	<decl_stmt pos:start="16:9" pos:end="16:48"><decl pos:start="16:9" pos:end="16:47"><type pos:start="16:9" pos:end="16:34"><specifier pos:start="16:9" pos:end="16:15">private</specifier> <name pos:start="16:17" pos:end="16:34"><name pos:start="16:17" pos:end="16:20">List</name><argument_list type="generic" pos:start="16:21" pos:end="16:34">&lt;<argument pos:start="16:22" pos:end="16:33"><name pos:start="16:22" pos:end="16:33">SourcePoints</name></argument>&gt;</argument_list></name></type> <name pos:start="16:36" pos:end="16:47">sourcePoints</name></decl>;</decl_stmt>
	<decl_stmt pos:start="17:9" pos:end="17:51"><decl pos:start="17:9" pos:end="17:50"><type pos:start="17:9" pos:end="17:40"><specifier pos:start="17:9" pos:end="17:15">private</specifier> <name pos:start="17:17" pos:end="17:40"><name pos:start="17:17" pos:end="17:30">RoutePrimitive</name><operator pos:start="17:31" pos:end="17:31">.</operator><name pos:start="17:32" pos:end="17:40">RouteType</name></name></type> <name pos:start="17:42" pos:end="17:50">routeType</name></decl>;</decl_stmt>
	
	<constructor pos:start="19:9" pos:end="21:9"><specifier pos:start="19:9" pos:end="19:14">public</specifier> <name pos:start="19:16" pos:end="19:43">AdaptedCreepingLinePrimitive</name><parameter_list pos:start="19:44" pos:end="19:45">()</parameter_list> <block pos:start="19:47" pos:end="21:9">{<block_content pos:start="20:17" pos:end="20:49">
		<expr_stmt pos:start="20:17" pos:end="20:49"><expr pos:start="20:17" pos:end="20:48"><name pos:start="20:17" pos:end="20:28">sourcePoints</name> <operator pos:start="20:30" pos:end="20:30">=</operator> <operator pos:start="20:32" pos:end="20:34">new</operator> <call pos:start="20:36" pos:end="20:48"><name pos:start="20:36" pos:end="20:46"><name pos:start="20:36" pos:end="20:44">ArrayList</name><argument_list type="generic" pos:start="20:45" pos:end="20:46">&lt;&gt;</argument_list></name><argument_list pos:start="20:47" pos:end="20:48">()</argument_list></call></expr>;</expr_stmt>
	</block_content>}</block></constructor>
	
	<function pos:start="23:9" pos:end="26:9"><annotation pos:start="23:9" pos:end="23:17">@<name pos:start="23:10" pos:end="23:17">Override</name></annotation>
	<type pos:start="24:9" pos:end="24:19"><specifier pos:start="24:9" pos:end="24:14">public</specifier> <name pos:start="24:16" pos:end="24:19">void</name></type> <name pos:start="24:21" pos:end="24:35">setSourcePoints</name><parameter_list pos:start="24:36" pos:end="24:62">(<parameter pos:start="24:37" pos:end="24:61"><decl pos:start="24:37" pos:end="24:61"><type pos:start="24:37" pos:end="24:54"><name pos:start="24:37" pos:end="24:54"><name pos:start="24:37" pos:end="24:40">List</name><argument_list type="generic" pos:start="24:41" pos:end="24:54">&lt;<argument pos:start="24:42" pos:end="24:53"><name pos:start="24:42" pos:end="24:53">SourcePoints</name></argument>&gt;</argument_list></name></type> <name pos:start="24:56" pos:end="24:61">points</name></decl></parameter>)</parameter_list> <block pos:start="24:64" pos:end="26:9">{<block_content pos:start="25:17" pos:end="25:38">
		<expr_stmt pos:start="25:17" pos:end="25:38"><expr pos:start="25:17" pos:end="25:37"><name pos:start="25:17" pos:end="25:28">sourcePoints</name> <operator pos:start="25:30" pos:end="25:30">=</operator> <name pos:start="25:32" pos:end="25:37">points</name></expr>;</expr_stmt>
	</block_content>}</block></function>
	
	<function pos:start="28:9" pos:end="30:9"><type pos:start="28:9" pos:end="28:19"><specifier pos:start="28:9" pos:end="28:14">public</specifier> <name pos:start="28:16" pos:end="28:19">void</name></type> <name pos:start="28:21" pos:end="28:32">setRouteType</name><parameter_list pos:start="28:33" pos:end="28:68">(<parameter pos:start="28:34" pos:end="28:67"><decl pos:start="28:34" pos:end="28:67"><type pos:start="28:34" pos:end="28:57"><name pos:start="28:34" pos:end="28:57"><name pos:start="28:34" pos:end="28:47">RoutePrimitive</name><operator pos:start="28:48" pos:end="28:48">.</operator><name pos:start="28:49" pos:end="28:57">RouteType</name></name></type> <name pos:start="28:59" pos:end="28:67">routeType</name></decl></parameter>)</parameter_list> <block pos:start="28:70" pos:end="30:9">{<block_content pos:start="29:17" pos:end="29:43">
		<expr_stmt pos:start="29:17" pos:end="29:43"><expr pos:start="29:17" pos:end="29:42"><name pos:start="29:17" pos:end="29:30"><name pos:start="29:17" pos:end="29:20">this</name><operator pos:start="29:21" pos:end="29:21">.</operator><name pos:start="29:22" pos:end="29:30">routeType</name></name> <operator pos:start="29:32" pos:end="29:32">=</operator> <name pos:start="29:34" pos:end="29:42">routeType</name></expr>;</expr_stmt>
	</block_content>}</block></function>
	
	
	<comment type="block" format="javadoc" pos:start="33:9" pos:end="38:11">/**
	 * This method generates the creeping line route between the source points.
	 * @param sideA
	 * @param sideB
	 * @return RoutePrimitive
	 */</comment>
	<function pos:start="39:9" pos:end="87:9"><type pos:start="39:9" pos:end="39:30"><specifier pos:start="39:9" pos:end="39:15">private</specifier> <name pos:start="39:17" pos:end="39:30">RoutePrimitive</name></type> <name pos:start="39:32" pos:end="39:56">generateCreepingLineRoute</name><parameter_list pos:start="39:57" pos:end="39:96">(<parameter pos:start="39:58" pos:end="39:75"><decl pos:start="39:58" pos:end="39:75"><type pos:start="39:58" pos:end="39:75"><name pos:start="39:58" pos:end="39:69">SourcePoints</name></type> <name pos:start="39:71" pos:end="39:75">sideA</name></decl></parameter>, <parameter pos:start="39:78" pos:end="39:95"><decl pos:start="39:78" pos:end="39:95"><type pos:start="39:78" pos:end="39:95"><name pos:start="39:78" pos:end="39:89">SourcePoints</name></type> <name pos:start="39:91" pos:end="39:95">sideB</name></decl></parameter>)</parameter_list> <block pos:start="39:98" pos:end="87:9">{<block_content pos:start="40:17" pos:end="86:32">
		<decl_stmt pos:start="40:17" pos:end="40:43"><decl pos:start="40:17" pos:end="40:42"><type pos:start="40:17" pos:end="40:19"><name pos:start="40:17" pos:end="40:19">int</name></type> <name pos:start="40:21" pos:end="40:38">opposingRouteIndex</name> <init pos:start="40:40" pos:end="40:42">= <expr pos:start="40:42" pos:end="40:42"><literal type="number" pos:start="40:42" pos:end="40:42">0</literal></expr></init></decl>;</decl_stmt>
		<decl_stmt pos:start="41:17" pos:end="41:48"><decl pos:start="41:17" pos:end="41:47"><type pos:start="41:17" pos:end="41:19"><name pos:start="41:17" pos:end="41:19">int</name></type> <name pos:start="41:21" pos:end="41:43">firstOpposingRouteIndex</name> <init pos:start="41:45" pos:end="41:47">= <expr pos:start="41:47" pos:end="41:47"><literal type="number" pos:start="41:47" pos:end="41:47">0</literal></expr></init></decl>;</decl_stmt>
		<decl_stmt pos:start="42:17" pos:end="42:47"><decl pos:start="42:17" pos:end="42:46"><type pos:start="42:17" pos:end="42:19"><name pos:start="42:17" pos:end="42:19">int</name></type> <name pos:start="42:21" pos:end="42:42">lastOpposingRouteIndex</name> <init pos:start="42:44" pos:end="42:46">= <expr pos:start="42:46" pos:end="42:46"><literal type="number" pos:start="42:46" pos:end="42:46">0</literal></expr></init></decl>;</decl_stmt>
		<decl_stmt pos:start="43:17" pos:end="43:50"><decl pos:start="43:17" pos:end="43:49"><type pos:start="43:17" pos:end="43:23"><name pos:start="43:17" pos:end="43:23">boolean</name></type> <name pos:start="43:25" pos:end="43:41">missedFirstPoints</name> <init pos:start="43:43" pos:end="43:49">= <expr pos:start="43:45" pos:end="43:49"><literal type="boolean" pos:start="43:45" pos:end="43:49">false</literal></expr></init></decl>;</decl_stmt>
		<decl_stmt pos:start="44:17" pos:end="44:49"><decl pos:start="44:17" pos:end="44:48"><type pos:start="44:17" pos:end="44:23"><name pos:start="44:17" pos:end="44:23">boolean</name></type> <name pos:start="44:25" pos:end="44:40">missedLastPoints</name> <init pos:start="44:42" pos:end="44:48">= <expr pos:start="44:44" pos:end="44:48"><literal type="boolean" pos:start="44:44" pos:end="44:48">false</literal></expr></init></decl>;</decl_stmt>
		<decl_stmt pos:start="45:17" pos:end="45:91"><decl pos:start="45:17" pos:end="45:90"><type pos:start="45:17" pos:end="45:30"><name pos:start="45:17" pos:end="45:30">RoutePrimitive</name></type> <name pos:start="45:32" pos:end="45:39">newRoute</name> <init pos:start="45:41" pos:end="45:90">= <expr pos:start="45:43" pos:end="45:90"><operator pos:start="45:43" pos:end="45:45">new</operator> <call pos:start="45:47" pos:end="45:90"><name pos:start="45:47" pos:end="45:60">RoutePrimitive</name><argument_list pos:start="45:61" pos:end="45:90">(<argument pos:start="45:62" pos:end="45:70"><expr pos:start="45:62" pos:end="45:70"><name pos:start="45:62" pos:end="45:70">routeType</name></expr></argument>, <argument pos:start="45:73" pos:end="45:89"><expr pos:start="45:73" pos:end="45:89"><call pos:start="45:73" pos:end="45:89"><name pos:start="45:73" pos:end="45:87"><name pos:start="45:73" pos:end="45:77">sideA</name><operator pos:start="45:78" pos:end="45:78">.</operator><name pos:start="45:79" pos:end="45:87">getWeight</name></name><argument_list pos:start="45:88" pos:end="45:89">()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<decl_stmt pos:start="46:17" pos:end="46:65"><decl pos:start="46:17" pos:end="46:64"><type pos:start="46:17" pos:end="46:30"><name pos:start="46:17" pos:end="46:30"><name pos:start="46:17" pos:end="46:23">Point2D</name><operator pos:start="46:24" pos:end="46:24">.</operator><name pos:start="46:25" pos:end="46:30">Double</name></name></type> <name pos:start="46:32" pos:end="46:41">startPoint</name> <init pos:start="46:43" pos:end="46:64">= <expr pos:start="46:45" pos:end="46:64"><operator pos:start="46:45" pos:end="46:47">new</operator> <call pos:start="46:49" pos:end="46:64"><name pos:start="46:49" pos:end="46:62"><name pos:start="46:49" pos:end="46:55">Point2D</name><operator pos:start="46:56" pos:end="46:56">.</operator><name pos:start="46:57" pos:end="46:62">Double</name></name><argument_list pos:start="46:63" pos:end="46:64">()</argument_list></call></expr></init></decl>;</decl_stmt>
		<decl_stmt pos:start="47:17" pos:end="47:68"><decl pos:start="47:17" pos:end="47:67"><type pos:start="47:17" pos:end="47:30"><name pos:start="47:17" pos:end="47:30"><name pos:start="47:17" pos:end="47:23">Point2D</name><operator pos:start="47:24" pos:end="47:24">.</operator><name pos:start="47:25" pos:end="47:30">Double</name></name></type> <name pos:start="47:32" pos:end="47:44">opposingPoint</name> <init pos:start="47:46" pos:end="47:67">= <expr pos:start="47:48" pos:end="47:67"><operator pos:start="47:48" pos:end="47:50">new</operator> <call pos:start="47:52" pos:end="47:67"><name pos:start="47:52" pos:end="47:65"><name pos:start="47:52" pos:end="47:58">Point2D</name><operator pos:start="47:59" pos:end="47:59">.</operator><name pos:start="47:60" pos:end="47:65">Double</name></name><argument_list pos:start="47:66" pos:end="47:67">()</argument_list></call></expr></init></decl>;</decl_stmt>
		<decl_stmt pos:start="48:17" pos:end="48:76"><decl pos:start="48:17" pos:end="48:75"><type pos:start="48:17" pos:end="48:30"><name pos:start="48:17" pos:end="48:30"><name pos:start="48:17" pos:end="48:23">Point2D</name><operator pos:start="48:24" pos:end="48:24">.</operator><name pos:start="48:25" pos:end="48:30">Double</name></name></type> <name pos:start="48:32" pos:end="48:52">previousOpposingPoint</name> <init pos:start="48:54" pos:end="48:75">= <expr pos:start="48:56" pos:end="48:75"><operator pos:start="48:56" pos:end="48:58">new</operator> <call pos:start="48:60" pos:end="48:75"><name pos:start="48:60" pos:end="48:73"><name pos:start="48:60" pos:end="48:66">Point2D</name><operator pos:start="48:67" pos:end="48:67">.</operator><name pos:start="48:68" pos:end="48:73">Double</name></name><argument_list pos:start="48:74" pos:end="48:75">()</argument_list></call></expr></init></decl>;</decl_stmt>
		<comment type="line" pos:start="49:17" pos:end="49:75">//main for loop for adding waypoints to the route primitive</comment>
		<for pos:start="50:17" pos:end="74:17">for<control pos:start="50:20" pos:end="50:53">(<init pos:start="50:21" pos:end="50:30"><decl pos:start="50:21" pos:end="50:29"><type pos:start="50:21" pos:end="50:23"><name pos:start="50:21" pos:end="50:23">int</name></type> <name pos:start="50:25" pos:end="50:25">i</name> <init pos:start="50:27" pos:end="50:29">= <expr pos:start="50:29" pos:end="50:29"><literal type="number" pos:start="50:29" pos:end="50:29">0</literal></expr></init></decl>;</init> <condition pos:start="50:32" pos:end="50:48"><expr pos:start="50:32" pos:end="50:47"><name pos:start="50:32" pos:end="50:32">i</name> <operator pos:start="50:34" pos:end="50:34">&lt;</operator> <call pos:start="50:36" pos:end="50:47"><name pos:start="50:36" pos:end="50:45"><name pos:start="50:36" pos:end="50:40">sideA</name><operator pos:start="50:41" pos:end="50:41">.</operator><name pos:start="50:42" pos:end="50:45">size</name></name><argument_list pos:start="50:46" pos:end="50:47">()</argument_list></call></expr>;</condition> <incr pos:start="50:50" pos:end="50:52"><expr pos:start="50:50" pos:end="50:52"><name pos:start="50:50" pos:end="50:50">i</name><operator pos:start="50:51" pos:end="50:52">++</operator></expr></incr>)</control> <block pos:start="50:55" pos:end="74:17">{<block_content pos:start="51:25" pos:end="73:25">
			<expr_stmt pos:start="51:25" pos:end="51:61"><expr pos:start="51:25" pos:end="51:60"><name pos:start="51:25" pos:end="51:34">startPoint</name> <operator pos:start="51:36" pos:end="51:36">=</operator> <call pos:start="51:38" pos:end="51:60"><name pos:start="51:38" pos:end="51:57"><name pos:start="51:38" pos:end="51:42">sideA</name><operator pos:start="51:43" pos:end="51:43">.</operator><name pos:start="51:44" pos:end="51:57">getSourcePoint</name></name><argument_list pos:start="51:58" pos:end="51:60">(<argument pos:start="51:59" pos:end="51:59"><expr pos:start="51:59" pos:end="51:59"><name pos:start="51:59" pos:end="51:59">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt pos:start="52:25" pos:end="52:62"><expr pos:start="52:25" pos:end="52:61"><call pos:start="52:25" pos:end="52:61"><name pos:start="52:25" pos:end="52:49"><name pos:start="52:25" pos:end="52:32">newRoute</name><operator pos:start="52:33" pos:end="52:33">.</operator><name pos:start="52:34" pos:end="52:49">addRouteWaypoint</name></name><argument_list pos:start="52:50" pos:end="52:61">(<argument pos:start="52:51" pos:end="52:60"><expr pos:start="52:51" pos:end="52:60"><name pos:start="52:51" pos:end="52:60">startPoint</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt pos:start="53:25" pos:end="53:111"><expr pos:start="53:25" pos:end="53:110"><name pos:start="53:25" pos:end="53:37">opposingPoint</name> <operator pos:start="53:39" pos:end="53:39">=</operator> <call pos:start="53:41" pos:end="53:110"><name pos:start="53:41" pos:end="53:73"><name pos:start="53:41" pos:end="53:48">Geometry</name><operator pos:start="53:49" pos:end="53:49">.</operator><name pos:start="53:50" pos:end="53:73">findClosestOpposingPoint</name></name><argument_list pos:start="53:74" pos:end="53:110">(<argument pos:start="53:75" pos:end="53:84"><expr pos:start="53:75" pos:end="53:84"><name pos:start="53:75" pos:end="53:84">startPoint</name></expr></argument>, <argument pos:start="53:87" pos:end="53:109"><expr pos:start="53:87" pos:end="53:109"><call pos:start="53:87" pos:end="53:109"><name pos:start="53:87" pos:end="53:107"><name pos:start="53:87" pos:end="53:91">sideB</name><operator pos:start="53:92" pos:end="53:92">.</operator><name pos:start="53:93" pos:end="53:107">getSourcePoints</name></name><argument_list pos:start="53:108" pos:end="53:109">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<if_stmt pos:start="54:25" pos:end="58:25"><if pos:start="54:25" pos:end="58:25">if<condition pos:start="54:27" pos:end="54:33">(<expr pos:start="54:28" pos:end="54:32"><name pos:start="54:28" pos:end="54:28">i</name> <operator pos:start="54:30" pos:end="54:30">&gt;</operator> <literal type="number" pos:start="54:32" pos:end="54:32">0</literal></expr>)</condition> <block pos:start="54:35" pos:end="58:25">{<block_content pos:start="55:33" pos:end="57:33">
				<if_stmt pos:start="55:33" pos:end="57:33"><if pos:start="55:33" pos:end="57:33">if<condition pos:start="55:35" pos:end="55:107">(<expr pos:start="55:36" pos:end="55:106"><call pos:start="55:36" pos:end="55:58"><name pos:start="55:36" pos:end="55:56"><name pos:start="55:36" pos:end="55:40">sideB</name><operator pos:start="55:41" pos:end="55:41">.</operator><name pos:start="55:42" pos:end="55:56">getSourcePoints</name></name><argument_list pos:start="55:57" pos:end="55:58">()</argument_list></call><operator pos:start="55:59" pos:end="55:59">.</operator><call pos:start="55:60" pos:end="55:81"><name pos:start="55:60" pos:end="55:66">indexOf</name><argument_list pos:start="55:67" pos:end="55:81">(<argument pos:start="55:68" pos:end="55:80"><expr pos:start="55:68" pos:end="55:80"><name pos:start="55:68" pos:end="55:80">opposingPoint</name></expr></argument>)</argument_list></call> <operator pos:start="55:83" pos:end="55:83">-</operator> <name pos:start="55:85" pos:end="55:102">opposingRouteIndex</name> <operator pos:start="55:104" pos:end="55:104">&gt;</operator> <literal type="number" pos:start="55:106" pos:end="55:106">1</literal></expr>)</condition> <block pos:start="55:109" pos:end="57:33">{<block_content pos:start="56:41" pos:end="56:159">
					<expr_stmt pos:start="56:41" pos:end="56:159"><expr pos:start="56:41" pos:end="56:158"><call pos:start="56:41" pos:end="56:158"><name pos:start="56:41" pos:end="56:66">generateCreepingLineMiddle</name><argument_list pos:start="56:67" pos:end="56:158">(<argument pos:start="56:68" pos:end="56:72"><expr pos:start="56:68" pos:end="56:72"><name pos:start="56:68" pos:end="56:72">sideA</name></expr></argument>, <argument pos:start="56:75" pos:end="56:79"><expr pos:start="56:75" pos:end="56:79"><name pos:start="56:75" pos:end="56:79">sideB</name></expr></argument>, <argument pos:start="56:82" pos:end="56:89"><expr pos:start="56:82" pos:end="56:89"><name pos:start="56:82" pos:end="56:89">newRoute</name></expr></argument>, <argument pos:start="56:92" pos:end="56:109"><expr pos:start="56:92" pos:end="56:109"><name pos:start="56:92" pos:end="56:109">opposingRouteIndex</name></expr></argument>, <argument pos:start="56:112" pos:end="56:157"><expr pos:start="56:112" pos:end="56:157"><call pos:start="56:112" pos:end="56:134"><name pos:start="56:112" pos:end="56:132"><name pos:start="56:112" pos:end="56:116">sideB</name><operator pos:start="56:117" pos:end="56:117">.</operator><name pos:start="56:118" pos:end="56:132">getSourcePoints</name></name><argument_list pos:start="56:133" pos:end="56:134">()</argument_list></call><operator pos:start="56:135" pos:end="56:135">.</operator><call pos:start="56:136" pos:end="56:157"><name pos:start="56:136" pos:end="56:142">indexOf</name><argument_list pos:start="56:143" pos:end="56:157">(<argument pos:start="56:144" pos:end="56:156"><expr pos:start="56:144" pos:end="56:156"><name pos:start="56:144" pos:end="56:156">opposingPoint</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				</block_content>}</block></if></if_stmt>
			</block_content>}</block></if></if_stmt>
			<expr_stmt pos:start="59:25" pos:end="59:92"><expr pos:start="59:25" pos:end="59:91"><name pos:start="59:25" pos:end="59:42">opposingRouteIndex</name> <operator pos:start="59:44" pos:end="59:44">=</operator> <call pos:start="59:46" pos:end="59:68"><name pos:start="59:46" pos:end="59:66"><name pos:start="59:46" pos:end="59:50">sideB</name><operator pos:start="59:51" pos:end="59:51">.</operator><name pos:start="59:52" pos:end="59:66">getSourcePoints</name></name><argument_list pos:start="59:67" pos:end="59:68">()</argument_list></call><operator pos:start="59:69" pos:end="59:69">.</operator><call pos:start="59:70" pos:end="59:91"><name pos:start="59:70" pos:end="59:76">indexOf</name><argument_list pos:start="59:77" pos:end="59:91">(<argument pos:start="59:78" pos:end="59:90"><expr pos:start="59:78" pos:end="59:90"><name pos:start="59:78" pos:end="59:90">opposingPoint</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<if_stmt pos:start="60:25" pos:end="65:25"><if pos:start="60:25" pos:end="65:25">if<condition pos:start="60:27" pos:end="60:34">(<expr pos:start="60:28" pos:end="60:33"><name pos:start="60:28" pos:end="60:28">i</name> <operator pos:start="60:30" pos:end="60:31">==</operator> <literal type="number" pos:start="60:33" pos:end="60:33">0</literal></expr>)</condition> <block pos:start="60:36" pos:end="65:25">{<block_content pos:start="61:33" pos:end="64:33">
				<if_stmt pos:start="61:33" pos:end="64:33"><if pos:start="61:33" pos:end="64:33">if<condition pos:start="61:35" pos:end="61:58">(<expr pos:start="61:36" pos:end="61:57"><name pos:start="61:36" pos:end="61:53">opposingRouteIndex</name> <operator pos:start="61:55" pos:end="61:55">&gt;</operator> <literal type="number" pos:start="61:57" pos:end="61:57">0</literal></expr>)</condition> <block pos:start="61:60" pos:end="64:33">{<block_content pos:start="62:41" pos:end="63:85">
					<expr_stmt pos:start="62:41" pos:end="62:65"><expr pos:start="62:41" pos:end="62:64"><name pos:start="62:41" pos:end="62:57">missedFirstPoints</name> <operator pos:start="62:59" pos:end="62:59">=</operator> <literal type="boolean" pos:start="62:61" pos:end="62:64">true</literal></expr>;</expr_stmt>
					<expr_stmt pos:start="63:41" pos:end="63:85"><expr pos:start="63:41" pos:end="63:84"><name pos:start="63:41" pos:end="63:63">firstOpposingRouteIndex</name> <operator pos:start="63:65" pos:end="63:65">=</operator> <name pos:start="63:67" pos:end="63:84">opposingRouteIndex</name></expr>;</expr_stmt>
				</block_content>}</block></if></if_stmt>
			</block_content>}</block></if></if_stmt>
			<comment type="line" pos:start="66:25" pos:end="66:95">//System.out.println("index of opposing point: " + opposingRouteIndex);</comment>
			<comment type="line" pos:start="67:25" pos:end="67:93">//do I want this portion? --- attempts to minimize doubling of routes</comment>
			<if_stmt pos:start="68:25" pos:end="73:25"><if pos:start="68:25" pos:end="70:25">if<condition pos:start="68:27" pos:end="68:88">(<expr pos:start="68:28" pos:end="68:87"><name pos:start="68:28" pos:end="68:40">opposingPoint</name> <operator pos:start="68:42" pos:end="68:43">==</operator> <name pos:start="68:45" pos:end="68:65">previousOpposingPoint</name> <operator pos:start="68:67" pos:end="68:68">&amp;&amp;</operator> <name pos:start="68:70" pos:end="68:70">i</name> <operator pos:start="68:72" pos:end="68:72">&lt;</operator> <call pos:start="68:74" pos:end="68:85"><name pos:start="68:74" pos:end="68:83"><name pos:start="68:74" pos:end="68:78">sideA</name><operator pos:start="68:79" pos:end="68:79">.</operator><name pos:start="68:80" pos:end="68:83">size</name></name><argument_list pos:start="68:84" pos:end="68:85">()</argument_list></call><operator pos:start="68:86" pos:end="68:86">-</operator><literal type="number" pos:start="68:87" pos:end="68:87">1</literal></expr>)</condition> <block pos:start="68:90" pos:end="70:25">{<block_content pos:start="69:33" pos:end="69:77">
				<expr_stmt pos:start="69:33" pos:end="69:77"><expr pos:start="69:33" pos:end="69:76"><name pos:start="69:33" pos:end="69:53">previousOpposingPoint</name> <operator pos:start="69:55" pos:end="69:55">=</operator> <operator pos:start="69:57" pos:end="69:59">new</operator> <call pos:start="69:61" pos:end="69:76"><name pos:start="69:61" pos:end="69:74"><name pos:start="69:61" pos:end="69:67">Point2D</name><operator pos:start="69:68" pos:end="69:68">.</operator><name pos:start="69:69" pos:end="69:74">Double</name></name><argument_list pos:start="69:75" pos:end="69:76">()</argument_list></call></expr>;</expr_stmt>
			</block_content>}</block></if> <else pos:start="70:27" pos:end="73:25">else <block pos:start="70:32" pos:end="73:25">{<block_content pos:start="71:33" pos:end="72:70">
				<expr_stmt pos:start="71:33" pos:end="71:73"><expr pos:start="71:33" pos:end="71:72"><call pos:start="71:33" pos:end="71:72"><name pos:start="71:33" pos:end="71:57"><name pos:start="71:33" pos:end="71:40">newRoute</name><operator pos:start="71:41" pos:end="71:41">.</operator><name pos:start="71:42" pos:end="71:57">addRouteWaypoint</name></name><argument_list pos:start="71:58" pos:end="71:72">(<argument pos:start="71:59" pos:end="71:71"><expr pos:start="71:59" pos:end="71:71"><name pos:start="71:59" pos:end="71:71">opposingPoint</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<expr_stmt pos:start="72:33" pos:end="72:70"><expr pos:start="72:33" pos:end="72:69"><name pos:start="72:33" pos:end="72:53">previousOpposingPoint</name> <operator pos:start="72:55" pos:end="72:55">=</operator> <name pos:start="72:57" pos:end="72:69">opposingPoint</name></expr>;</expr_stmt>
			</block_content>}</block></else></if_stmt>
		</block_content>}</block></for>
		<comment type="line" pos:start="75:17" pos:end="75:56">//checking for any missed waypoint nodes</comment>
		<if_stmt pos:start="76:17" pos:end="79:17"><if pos:start="76:17" pos:end="79:17">if<condition pos:start="76:19" pos:end="76:54">(<expr pos:start="76:20" pos:end="76:53"><name pos:start="76:20" pos:end="76:37">opposingRouteIndex</name> <operator pos:start="76:39" pos:end="76:40">!=</operator> <call pos:start="76:42" pos:end="76:53"><name pos:start="76:42" pos:end="76:51"><name pos:start="76:42" pos:end="76:46">sideB</name><operator pos:start="76:47" pos:end="76:47">.</operator><name pos:start="76:48" pos:end="76:51">size</name></name><argument_list pos:start="76:52" pos:end="76:53">()</argument_list></call></expr>)</condition> <block pos:start="76:56" pos:end="79:17">{<block_content pos:start="77:25" pos:end="78:68">
			<expr_stmt pos:start="77:25" pos:end="77:48"><expr pos:start="77:25" pos:end="77:47"><name pos:start="77:25" pos:end="77:40">missedLastPoints</name> <operator pos:start="77:42" pos:end="77:42">=</operator> <literal type="boolean" pos:start="77:44" pos:end="77:47">true</literal></expr>;</expr_stmt>
			<expr_stmt pos:start="78:25" pos:end="78:68"><expr pos:start="78:25" pos:end="78:67"><name pos:start="78:25" pos:end="78:46">lastOpposingRouteIndex</name> <operator pos:start="78:48" pos:end="78:48">=</operator> <name pos:start="78:50" pos:end="78:67">opposingRouteIndex</name></expr>;</expr_stmt>
		</block_content>}</block></if></if_stmt>
		<if_stmt pos:start="80:17" pos:end="82:17"><if pos:start="80:17" pos:end="82:17">if<condition pos:start="80:19" pos:end="80:37">(<expr pos:start="80:20" pos:end="80:36"><name pos:start="80:20" pos:end="80:36">missedFirstPoints</name></expr>)</condition> <block pos:start="80:39" pos:end="82:17">{<block_content pos:start="81:25" pos:end="81:103">
			<expr_stmt pos:start="81:25" pos:end="81:103"><expr pos:start="81:25" pos:end="81:102"><call pos:start="81:25" pos:end="81:102"><name pos:start="81:25" pos:end="81:53">generateCreepingLineBeginning</name><argument_list pos:start="81:54" pos:end="81:102">(<argument pos:start="81:55" pos:end="81:59"><expr pos:start="81:55" pos:end="81:59"><name pos:start="81:55" pos:end="81:59">sideA</name></expr></argument>, <argument pos:start="81:62" pos:end="81:66"><expr pos:start="81:62" pos:end="81:66"><name pos:start="81:62" pos:end="81:66">sideB</name></expr></argument>, <argument pos:start="81:69" pos:end="81:76"><expr pos:start="81:69" pos:end="81:76"><name pos:start="81:69" pos:end="81:76">newRoute</name></expr></argument>, <argument pos:start="81:79" pos:end="81:101"><expr pos:start="81:79" pos:end="81:101"><name pos:start="81:79" pos:end="81:101">firstOpposingRouteIndex</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		</block_content>}</block></if></if_stmt>
		<if_stmt pos:start="83:17" pos:end="85:17"><if pos:start="83:17" pos:end="85:17">if<condition pos:start="83:19" pos:end="83:36">(<expr pos:start="83:20" pos:end="83:35"><name pos:start="83:20" pos:end="83:35">missedLastPoints</name></expr>)</condition> <block pos:start="83:38" pos:end="85:17">{<block_content pos:start="84:25" pos:end="84:95">
			<expr_stmt pos:start="84:25" pos:end="84:95"><expr pos:start="84:25" pos:end="84:94"><call pos:start="84:25" pos:end="84:94"><name pos:start="84:25" pos:end="84:46">generateCreepinLineEnd</name><argument_list pos:start="84:47" pos:end="84:94">(<argument pos:start="84:48" pos:end="84:52"><expr pos:start="84:48" pos:end="84:52"><name pos:start="84:48" pos:end="84:52">sideA</name></expr></argument>, <argument pos:start="84:55" pos:end="84:59"><expr pos:start="84:55" pos:end="84:59"><name pos:start="84:55" pos:end="84:59">sideB</name></expr></argument>, <argument pos:start="84:62" pos:end="84:69"><expr pos:start="84:62" pos:end="84:69"><name pos:start="84:62" pos:end="84:69">newRoute</name></expr></argument>, <argument pos:start="84:72" pos:end="84:93"><expr pos:start="84:72" pos:end="84:93"><name pos:start="84:72" pos:end="84:93">lastOpposingRouteIndex</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		</block_content>}</block></if></if_stmt> 
		<return pos:start="86:17" pos:end="86:32">return <expr pos:start="86:24" pos:end="86:31"><name pos:start="86:24" pos:end="86:31">newRoute</name></expr>;</return>
	</block_content>}</block></function>
	
	<function pos:start="89:9" pos:end="109:9"><type pos:start="89:9" pos:end="89:20"><specifier pos:start="89:9" pos:end="89:15">private</specifier> <name pos:start="89:17" pos:end="89:20">void</name></type> <name pos:start="89:22" pos:end="89:47">generateCreepingLineMiddle</name><parameter_list pos:start="89:48" pos:end="89:171">(<parameter pos:start="89:49" pos:end="89:66"><decl pos:start="89:49" pos:end="89:66"><type pos:start="89:49" pos:end="89:66"><name pos:start="89:49" pos:end="89:60">SourcePoints</name></type> <name pos:start="89:62" pos:end="89:66">sideA</name></decl></parameter>, <parameter pos:start="89:69" pos:end="89:86"><decl pos:start="89:69" pos:end="89:86"><type pos:start="89:69" pos:end="89:86"><name pos:start="89:69" pos:end="89:80">SourcePoints</name></type> <name pos:start="89:82" pos:end="89:86">sideB</name></decl></parameter>, <parameter pos:start="89:89" pos:end="89:111"><decl pos:start="89:89" pos:end="89:111"><type pos:start="89:89" pos:end="89:111"><name pos:start="89:89" pos:end="89:102">RoutePrimitive</name></type> <name pos:start="89:104" pos:end="89:111">newRoute</name></decl></parameter>, <parameter pos:start="89:114" pos:end="89:143"><decl pos:start="89:114" pos:end="89:143"><type pos:start="89:114" pos:end="89:143"><name pos:start="89:114" pos:end="89:116">int</name></type> <name pos:start="89:118" pos:end="89:143">previousOpposingRouteIndex</name></decl></parameter>, <parameter pos:start="89:146" pos:end="89:170"><decl pos:start="89:146" pos:end="89:170"><type pos:start="89:146" pos:end="89:170"><name pos:start="89:146" pos:end="89:148">int</name></type> <name pos:start="89:150" pos:end="89:170">newOpposingRouteIndex</name></decl></parameter>)</parameter_list> <block pos:start="89:173" pos:end="109:9">{<block_content pos:start="90:17" pos:end="108:17">
		<decl_stmt pos:start="90:17" pos:end="90:68"><decl pos:start="90:17" pos:end="90:67"><type pos:start="90:17" pos:end="90:30"><name pos:start="90:17" pos:end="90:30"><name pos:start="90:17" pos:end="90:23">Point2D</name><operator pos:start="90:24" pos:end="90:24">.</operator><name pos:start="90:25" pos:end="90:30">Double</name></name></type> <name pos:start="90:32" pos:end="90:37">pointA</name> <init pos:start="90:39" pos:end="90:67">= <expr pos:start="90:41" pos:end="90:67"><call pos:start="90:41" pos:end="90:67"><name pos:start="90:41" pos:end="90:65"><name pos:start="90:41" pos:end="90:48">newRoute</name><operator pos:start="90:49" pos:end="90:49">.</operator><name pos:start="90:50" pos:end="90:65">getRouteEndPoint</name></name><argument_list pos:start="90:66" pos:end="90:67">()</argument_list></call></expr></init></decl>;</decl_stmt>
		<if_stmt pos:start="91:17" pos:end="108:17"><if pos:start="91:17" pos:end="101:17">if<condition pos:start="91:19" pos:end="91:81">(<expr pos:start="91:20" pos:end="91:80"><operator pos:start="91:20" pos:end="91:20">(</operator><name pos:start="91:21" pos:end="91:41">newOpposingRouteIndex</name> <operator pos:start="91:43" pos:end="91:43">-</operator> <name pos:start="91:45" pos:end="91:70">previousOpposingRouteIndex</name><operator pos:start="91:71" pos:end="91:71">)</operator> <operator pos:start="91:73" pos:end="91:73">%</operator> <literal type="number" pos:start="91:75" pos:end="91:75">2</literal> <operator pos:start="91:77" pos:end="91:78">==</operator> <literal type="number" pos:start="91:80" pos:end="91:80">0</literal></expr>)</condition> <block pos:start="91:83" pos:end="101:17">{<block_content pos:start="92:25" pos:end="100:25">
			<expr_stmt pos:start="92:25" pos:end="92:104"><expr pos:start="92:25" pos:end="92:103"><call pos:start="92:25" pos:end="92:103"><name pos:start="92:25" pos:end="92:49"><name pos:start="92:25" pos:end="92:32">newRoute</name><operator pos:start="92:33" pos:end="92:33">.</operator><name pos:start="92:34" pos:end="92:49">addRouteWaypoint</name></name><argument_list pos:start="92:50" pos:end="92:103">(<argument pos:start="92:51" pos:end="92:102"><expr pos:start="92:51" pos:end="92:102"><call pos:start="92:51" pos:end="92:102"><name pos:start="92:51" pos:end="92:70"><name pos:start="92:51" pos:end="92:55">sideB</name><operator pos:start="92:56" pos:end="92:56">.</operator><name pos:start="92:57" pos:end="92:70">getSourcePoint</name></name><argument_list pos:start="92:71" pos:end="92:102">(<argument pos:start="92:72" pos:end="92:101"><expr pos:start="92:72" pos:end="92:101"><name pos:start="92:72" pos:end="92:97">previousOpposingRouteIndex</name> <operator pos:start="92:99" pos:end="92:99">+</operator> <literal type="number" pos:start="92:101" pos:end="92:101">1</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<if_stmt pos:start="93:25" pos:end="100:25"><if pos:start="93:25" pos:end="100:25">if<condition pos:start="93:27" pos:end="93:82">(<expr pos:start="93:28" pos:end="93:81"><name pos:start="93:28" pos:end="93:48">newOpposingRouteIndex</name> <operator pos:start="93:50" pos:end="93:50">-</operator> <name pos:start="93:52" pos:end="93:77">previousOpposingRouteIndex</name> <operator pos:start="93:79" pos:end="93:79">&gt;</operator> <literal type="number" pos:start="93:81" pos:end="93:81">1</literal></expr>)</condition> <block pos:start="93:84" pos:end="100:25">{<block_content pos:start="94:33" pos:end="99:33">
				<for pos:start="94:33" pos:end="99:33">for<control pos:start="94:36" pos:end="94:107">(<init pos:start="94:37" pos:end="94:75"><decl pos:start="94:37" pos:end="94:74"><type pos:start="94:37" pos:end="94:39"><name pos:start="94:37" pos:end="94:39">int</name></type> <name pos:start="94:41" pos:end="94:41">i</name> <init pos:start="94:43" pos:end="94:74">= <expr pos:start="94:45" pos:end="94:74"><name pos:start="94:45" pos:end="94:70">previousOpposingRouteIndex</name> <operator pos:start="94:72" pos:end="94:72">+</operator> <literal type="number" pos:start="94:74" pos:end="94:74">2</literal></expr></init></decl>;</init> <condition pos:start="94:77" pos:end="94:102"><expr pos:start="94:77" pos:end="94:101"><name pos:start="94:77" pos:end="94:77">i</name> <operator pos:start="94:79" pos:end="94:79">&lt;</operator> <name pos:start="94:81" pos:end="94:101">newOpposingRouteIndex</name></expr>;</condition> <incr pos:start="94:104" pos:end="94:106"><expr pos:start="94:104" pos:end="94:106"><name pos:start="94:104" pos:end="94:104">i</name><operator pos:start="94:105" pos:end="94:106">++</operator></expr></incr>)</control> <block pos:start="94:109" pos:end="99:33">{<block_content pos:start="95:41" pos:end="98:44">
					<expr_stmt pos:start="95:41" pos:end="95:91"><expr pos:start="95:41" pos:end="95:90"><call pos:start="95:41" pos:end="95:90"><name pos:start="95:41" pos:end="95:65"><name pos:start="95:41" pos:end="95:48">newRoute</name><operator pos:start="95:49" pos:end="95:49">.</operator><name pos:start="95:50" pos:end="95:65">addRouteWaypoint</name></name><argument_list pos:start="95:66" pos:end="95:90">(<argument pos:start="95:67" pos:end="95:89"><expr pos:start="95:67" pos:end="95:89"><call pos:start="95:67" pos:end="95:89"><name pos:start="95:67" pos:end="95:86"><name pos:start="95:67" pos:end="95:71">sideB</name><operator pos:start="95:72" pos:end="95:72">.</operator><name pos:start="95:73" pos:end="95:86">getSourcePoint</name></name><argument_list pos:start="95:87" pos:end="95:89">(<argument pos:start="95:88" pos:end="95:88"><expr pos:start="95:88" pos:end="95:88"><name pos:start="95:88" pos:end="95:88">i</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<expr_stmt pos:start="96:41" pos:end="96:74"><expr pos:start="96:41" pos:end="96:73"><call pos:start="96:41" pos:end="96:73"><name pos:start="96:41" pos:end="96:65"><name pos:start="96:41" pos:end="96:48">newRoute</name><operator pos:start="96:49" pos:end="96:49">.</operator><name pos:start="96:50" pos:end="96:65">addRouteWaypoint</name></name><argument_list pos:start="96:66" pos:end="96:73">(<argument pos:start="96:67" pos:end="96:72"><expr pos:start="96:67" pos:end="96:72"><name pos:start="96:67" pos:end="96:72">pointA</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<expr_stmt pos:start="97:41" pos:end="97:93"><expr pos:start="97:41" pos:end="97:92"><call pos:start="97:41" pos:end="97:92"><name pos:start="97:41" pos:end="97:65"><name pos:start="97:41" pos:end="97:48">newRoute</name><operator pos:start="97:49" pos:end="97:49">.</operator><name pos:start="97:50" pos:end="97:65">addRouteWaypoint</name></name><argument_list pos:start="97:66" pos:end="97:92">(<argument pos:start="97:67" pos:end="97:91"><expr pos:start="97:67" pos:end="97:91"><call pos:start="97:67" pos:end="97:91"><name pos:start="97:67" pos:end="97:86"><name pos:start="97:67" pos:end="97:71">sideB</name><operator pos:start="97:72" pos:end="97:72">.</operator><name pos:start="97:73" pos:end="97:86">getSourcePoint</name></name><argument_list pos:start="97:87" pos:end="97:91">(<argument pos:start="97:88" pos:end="97:90"><expr pos:start="97:88" pos:end="97:90"><name pos:start="97:88" pos:end="97:88">i</name><operator pos:start="97:89" pos:end="97:89">+</operator><literal type="number" pos:start="97:90" pos:end="97:90">1</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<expr_stmt pos:start="98:41" pos:end="98:44"><expr pos:start="98:41" pos:end="98:43"><name pos:start="98:41" pos:end="98:41">i</name><operator pos:start="98:42" pos:end="98:43">++</operator></expr>;</expr_stmt>
				</block_content>}</block></for>
			</block_content>}</block></if></if_stmt>
		</block_content>}</block></if> <else pos:start="101:19" pos:end="108:17">else <block pos:start="101:24" pos:end="108:17">{<block_content pos:start="102:25" pos:end="107:25">
			<for pos:start="102:25" pos:end="107:25">for<control pos:start="102:28" pos:end="102:99">(<init pos:start="102:29" pos:end="102:67"><decl pos:start="102:29" pos:end="102:66"><type pos:start="102:29" pos:end="102:31"><name pos:start="102:29" pos:end="102:31">int</name></type> <name pos:start="102:33" pos:end="102:33">i</name> <init pos:start="102:35" pos:end="102:66">= <expr pos:start="102:37" pos:end="102:66"><name pos:start="102:37" pos:end="102:62">previousOpposingRouteIndex</name> <operator pos:start="102:64" pos:end="102:64">+</operator> <literal type="number" pos:start="102:66" pos:end="102:66">1</literal></expr></init></decl>;</init> <condition pos:start="102:69" pos:end="102:94"><expr pos:start="102:69" pos:end="102:93"><name pos:start="102:69" pos:end="102:69">i</name> <operator pos:start="102:71" pos:end="102:71">&lt;</operator> <name pos:start="102:73" pos:end="102:93">newOpposingRouteIndex</name></expr>;</condition> <incr pos:start="102:96" pos:end="102:98"><expr pos:start="102:96" pos:end="102:98"><name pos:start="102:96" pos:end="102:96">i</name><operator pos:start="102:97" pos:end="102:98">++</operator></expr></incr>)</control> <block pos:start="102:101" pos:end="107:25">{<block_content pos:start="103:33" pos:end="106:36">
				<expr_stmt pos:start="103:33" pos:end="103:83"><expr pos:start="103:33" pos:end="103:82"><call pos:start="103:33" pos:end="103:82"><name pos:start="103:33" pos:end="103:57"><name pos:start="103:33" pos:end="103:40">newRoute</name><operator pos:start="103:41" pos:end="103:41">.</operator><name pos:start="103:42" pos:end="103:57">addRouteWaypoint</name></name><argument_list pos:start="103:58" pos:end="103:82">(<argument pos:start="103:59" pos:end="103:81"><expr pos:start="103:59" pos:end="103:81"><call pos:start="103:59" pos:end="103:81"><name pos:start="103:59" pos:end="103:78"><name pos:start="103:59" pos:end="103:63">sideB</name><operator pos:start="103:64" pos:end="103:64">.</operator><name pos:start="103:65" pos:end="103:78">getSourcePoint</name></name><argument_list pos:start="103:79" pos:end="103:81">(<argument pos:start="103:80" pos:end="103:80"><expr pos:start="103:80" pos:end="103:80"><name pos:start="103:80" pos:end="103:80">i</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<expr_stmt pos:start="104:33" pos:end="104:85"><expr pos:start="104:33" pos:end="104:84"><call pos:start="104:33" pos:end="104:84"><name pos:start="104:33" pos:end="104:57"><name pos:start="104:33" pos:end="104:40">newRoute</name><operator pos:start="104:41" pos:end="104:41">.</operator><name pos:start="104:42" pos:end="104:57">addRouteWaypoint</name></name><argument_list pos:start="104:58" pos:end="104:84">(<argument pos:start="104:59" pos:end="104:83"><expr pos:start="104:59" pos:end="104:83"><call pos:start="104:59" pos:end="104:83"><name pos:start="104:59" pos:end="104:78"><name pos:start="104:59" pos:end="104:63">sideB</name><operator pos:start="104:64" pos:end="104:64">.</operator><name pos:start="104:65" pos:end="104:78">getSourcePoint</name></name><argument_list pos:start="104:79" pos:end="104:83">(<argument pos:start="104:80" pos:end="104:82"><expr pos:start="104:80" pos:end="104:82"><name pos:start="104:80" pos:end="104:80">i</name><operator pos:start="104:81" pos:end="104:81">+</operator><literal type="number" pos:start="104:82" pos:end="104:82">1</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<expr_stmt pos:start="105:33" pos:end="105:66"><expr pos:start="105:33" pos:end="105:65"><call pos:start="105:33" pos:end="105:65"><name pos:start="105:33" pos:end="105:57"><name pos:start="105:33" pos:end="105:40">newRoute</name><operator pos:start="105:41" pos:end="105:41">.</operator><name pos:start="105:42" pos:end="105:57">addRouteWaypoint</name></name><argument_list pos:start="105:58" pos:end="105:65">(<argument pos:start="105:59" pos:end="105:64"><expr pos:start="105:59" pos:end="105:64"><name pos:start="105:59" pos:end="105:64">pointA</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<expr_stmt pos:start="106:33" pos:end="106:36"><expr pos:start="106:33" pos:end="106:35"><name pos:start="106:33" pos:end="106:33">i</name><operator pos:start="106:34" pos:end="106:35">++</operator></expr>;</expr_stmt>
			</block_content>}</block></for>
		</block_content>}</block></else></if_stmt>
	</block_content>}</block></function>
	
	
	<comment type="block" format="javadoc" pos:start="112:9" pos:end="119:11">/**
	 * This is a helper method for generateCreepingLineRoute() to handle any source points 
	 * missed at the beginning of the route.
	 * @param sideA
	 * @param sideB
	 * @param newRoute
	 * @param firstOpposingRouteIndex
	 */</comment>
	<function pos:start="120:9" pos:end="143:9"><type pos:start="120:9" pos:end="120:20"><specifier pos:start="120:9" pos:end="120:15">private</specifier> <name pos:start="120:17" pos:end="120:20">void</name></type> <name pos:start="120:22" pos:end="120:50">generateCreepingLineBeginning</name><parameter_list pos:start="120:51" pos:end="120:144">(<parameter pos:start="120:52" pos:end="120:69"><decl pos:start="120:52" pos:end="120:69"><type pos:start="120:52" pos:end="120:69"><name pos:start="120:52" pos:end="120:63">SourcePoints</name></type> <name pos:start="120:65" pos:end="120:69">sideA</name></decl></parameter>, <parameter pos:start="120:72" pos:end="120:89"><decl pos:start="120:72" pos:end="120:89"><type pos:start="120:72" pos:end="120:89"><name pos:start="120:72" pos:end="120:83">SourcePoints</name></type> <name pos:start="120:85" pos:end="120:89">sideB</name></decl></parameter>, <parameter pos:start="120:92" pos:end="120:114"><decl pos:start="120:92" pos:end="120:114"><type pos:start="120:92" pos:end="120:114"><name pos:start="120:92" pos:end="120:105">RoutePrimitive</name></type> <name pos:start="120:107" pos:end="120:114">newRoute</name></decl></parameter>, <parameter pos:start="120:117" pos:end="120:143"><decl pos:start="120:117" pos:end="120:143"><type pos:start="120:117" pos:end="120:143"><name pos:start="120:117" pos:end="120:119">int</name></type> <name pos:start="120:121" pos:end="120:143">firstOpposingRouteIndex</name></decl></parameter>)</parameter_list> <block pos:start="120:146" pos:end="143:9">{<block_content pos:start="121:17" pos:end="142:17">
		<if_stmt pos:start="121:17" pos:end="142:17"><if pos:start="121:17" pos:end="130:17">if<condition pos:start="121:19" pos:end="121:52">(<expr pos:start="121:20" pos:end="121:51"><name pos:start="121:20" pos:end="121:42">firstOpposingRouteIndex</name> <operator pos:start="121:44" pos:end="121:44">%</operator> <literal type="number" pos:start="121:46" pos:end="121:46">2</literal> <operator pos:start="121:48" pos:end="121:49">==</operator> <literal type="number" pos:start="121:51" pos:end="121:51">0</literal></expr>)</condition> <block pos:start="121:54" pos:end="130:17">{<block_content pos:start="122:25" pos:end="129:25">
			<decl_stmt pos:start="122:25" pos:end="122:40"><decl pos:start="122:25" pos:end="122:39"><type pos:start="122:25" pos:end="122:27"><name pos:start="122:25" pos:end="122:27">int</name></type> <name pos:start="122:29" pos:end="122:35">counter</name> <init pos:start="122:37" pos:end="122:39">= <expr pos:start="122:39" pos:end="122:39"><literal type="number" pos:start="122:39" pos:end="122:39">0</literal></expr></init></decl>;</decl_stmt>
			<for pos:start="123:25" pos:end="129:25">for<control pos:start="123:28" pos:end="123:72">(<init pos:start="123:29" pos:end="123:38"><decl pos:start="123:29" pos:end="123:37"><type pos:start="123:29" pos:end="123:31"><name pos:start="123:29" pos:end="123:31">int</name></type> <name pos:start="123:33" pos:end="123:33">i</name> <init pos:start="123:35" pos:end="123:37">= <expr pos:start="123:37" pos:end="123:37"><literal type="number" pos:start="123:37" pos:end="123:37">0</literal></expr></init></decl>;</init> <condition pos:start="123:40" pos:end="123:67"><expr pos:start="123:40" pos:end="123:66"><name pos:start="123:40" pos:end="123:40">i</name> <operator pos:start="123:42" pos:end="123:42">&lt;</operator> <name pos:start="123:44" pos:end="123:66">firstOpposingRouteIndex</name></expr>;</condition> <incr pos:start="123:69" pos:end="123:71"><expr pos:start="123:69" pos:end="123:71"><name pos:start="123:69" pos:end="123:69">i</name><operator pos:start="123:70" pos:end="123:71">++</operator></expr></incr>)</control> <block pos:start="123:74" pos:end="129:25">{<block_content pos:start="124:33" pos:end="128:36">
				<expr_stmt pos:start="124:33" pos:end="124:95"><expr pos:start="124:33" pos:end="124:94"><call pos:start="124:33" pos:end="124:94"><name pos:start="124:33" pos:end="124:60"><name pos:start="124:33" pos:end="124:40">newRoute</name><operator pos:start="124:41" pos:end="124:41">.</operator><name pos:start="124:42" pos:end="124:60">insertRouteWaypoint</name></name><argument_list pos:start="124:61" pos:end="124:94">(<argument pos:start="124:62" pos:end="124:68"><expr pos:start="124:62" pos:end="124:68"><name pos:start="124:62" pos:end="124:68">counter</name></expr></argument>, <argument pos:start="124:71" pos:end="124:93"><expr pos:start="124:71" pos:end="124:93"><call pos:start="124:71" pos:end="124:93"><name pos:start="124:71" pos:end="124:90"><name pos:start="124:71" pos:end="124:75">sideA</name><operator pos:start="124:76" pos:end="124:76">.</operator><name pos:start="124:77" pos:end="124:90">getSourcePoint</name></name><argument_list pos:start="124:91" pos:end="124:93">(<argument pos:start="124:92" pos:end="124:92"><expr pos:start="124:92" pos:end="124:92"><literal type="number" pos:start="124:92" pos:end="124:92">0</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<expr_stmt pos:start="125:33" pos:end="125:99"><expr pos:start="125:33" pos:end="125:98"><call pos:start="125:33" pos:end="125:98"><name pos:start="125:33" pos:end="125:60"><name pos:start="125:33" pos:end="125:40">newRoute</name><operator pos:start="125:41" pos:end="125:41">.</operator><name pos:start="125:42" pos:end="125:60">insertRouteWaypoint</name></name><argument_list pos:start="125:61" pos:end="125:98">(<argument pos:start="125:62" pos:end="125:72"><expr pos:start="125:62" pos:end="125:72"><name pos:start="125:62" pos:end="125:68">counter</name> <operator pos:start="125:70" pos:end="125:70">+</operator> <literal type="number" pos:start="125:72" pos:end="125:72">1</literal></expr></argument>, <argument pos:start="125:75" pos:end="125:97"><expr pos:start="125:75" pos:end="125:97"><call pos:start="125:75" pos:end="125:97"><name pos:start="125:75" pos:end="125:94"><name pos:start="125:75" pos:end="125:79">sideB</name><operator pos:start="125:80" pos:end="125:80">.</operator><name pos:start="125:81" pos:end="125:94">getSourcePoint</name></name><argument_list pos:start="125:95" pos:end="125:97">(<argument pos:start="125:96" pos:end="125:96"><expr pos:start="125:96" pos:end="125:96"><name pos:start="125:96" pos:end="125:96">i</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<expr_stmt pos:start="126:33" pos:end="126:101"><expr pos:start="126:33" pos:end="126:100"><call pos:start="126:33" pos:end="126:100"><name pos:start="126:33" pos:end="126:60"><name pos:start="126:33" pos:end="126:40">newRoute</name><operator pos:start="126:41" pos:end="126:41">.</operator><name pos:start="126:42" pos:end="126:60">insertRouteWaypoint</name></name><argument_list pos:start="126:61" pos:end="126:100">(<argument pos:start="126:62" pos:end="126:72"><expr pos:start="126:62" pos:end="126:72"><name pos:start="126:62" pos:end="126:68">counter</name> <operator pos:start="126:70" pos:end="126:70">+</operator> <literal type="number" pos:start="126:72" pos:end="126:72">2</literal></expr></argument>, <argument pos:start="126:75" pos:end="126:99"><expr pos:start="126:75" pos:end="126:99"><call pos:start="126:75" pos:end="126:99"><name pos:start="126:75" pos:end="126:94"><name pos:start="126:75" pos:end="126:79">sideB</name><operator pos:start="126:80" pos:end="126:80">.</operator><name pos:start="126:81" pos:end="126:94">getSourcePoint</name></name><argument_list pos:start="126:95" pos:end="126:99">(<argument pos:start="126:96" pos:end="126:98"><expr pos:start="126:96" pos:end="126:98"><name pos:start="126:96" pos:end="126:96">i</name><operator pos:start="126:97" pos:end="126:97">+</operator><literal type="number" pos:start="126:98" pos:end="126:98">1</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<expr_stmt pos:start="127:33" pos:end="127:45"><expr pos:start="127:33" pos:end="127:44"><name pos:start="127:33" pos:end="127:39">counter</name> <operator pos:start="127:41" pos:end="127:42">+=</operator> <literal type="number" pos:start="127:44" pos:end="127:44">3</literal></expr>;</expr_stmt>
				<expr_stmt pos:start="128:33" pos:end="128:36"><expr pos:start="128:33" pos:end="128:35"><name pos:start="128:33" pos:end="128:33">i</name><operator pos:start="128:34" pos:end="128:35">++</operator></expr>;</expr_stmt>
			</block_content>}</block></for>
		</block_content>}</block></if> <else pos:start="130:19" pos:end="142:17">else <block pos:start="130:24" pos:end="142:17">{<block_content pos:start="131:25" pos:end="141:25">
			<decl_stmt pos:start="131:25" pos:end="131:40"><decl pos:start="131:25" pos:end="131:39"><type pos:start="131:25" pos:end="131:27"><name pos:start="131:25" pos:end="131:27">int</name></type> <name pos:start="131:29" pos:end="131:35">counter</name> <init pos:start="131:37" pos:end="131:39">= <expr pos:start="131:39" pos:end="131:39"><literal type="number" pos:start="131:39" pos:end="131:39">1</literal></expr></init></decl>;</decl_stmt>
			<expr_stmt pos:start="132:25" pos:end="132:81"><expr pos:start="132:25" pos:end="132:80"><call pos:start="132:25" pos:end="132:80"><name pos:start="132:25" pos:end="132:52"><name pos:start="132:25" pos:end="132:32">newRoute</name><operator pos:start="132:33" pos:end="132:33">.</operator><name pos:start="132:34" pos:end="132:52">insertRouteWaypoint</name></name><argument_list pos:start="132:53" pos:end="132:80">(<argument pos:start="132:54" pos:end="132:54"><expr pos:start="132:54" pos:end="132:54"><literal type="number" pos:start="132:54" pos:end="132:54">0</literal></expr></argument>, <argument pos:start="132:57" pos:end="132:79"><expr pos:start="132:57" pos:end="132:79"><call pos:start="132:57" pos:end="132:79"><name pos:start="132:57" pos:end="132:76"><name pos:start="132:57" pos:end="132:61">sideB</name><operator pos:start="132:62" pos:end="132:62">.</operator><name pos:start="132:63" pos:end="132:76">getSourcePoint</name></name><argument_list pos:start="132:77" pos:end="132:79">(<argument pos:start="132:78" pos:end="132:78"><expr pos:start="132:78" pos:end="132:78"><literal type="number" pos:start="132:78" pos:end="132:78">0</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<if_stmt pos:start="133:25" pos:end="141:25"><if pos:start="133:25" pos:end="141:25">if<condition pos:start="133:27" pos:end="133:55">(<expr pos:start="133:28" pos:end="133:54"><name pos:start="133:28" pos:end="133:50">firstOpposingRouteIndex</name> <operator pos:start="133:52" pos:end="133:52">&gt;</operator> <literal type="number" pos:start="133:54" pos:end="133:54">1</literal></expr>)</condition> <block pos:start="133:57" pos:end="141:25">{<block_content pos:start="134:33" pos:end="140:33">
				<for pos:start="134:33" pos:end="140:33">for<control pos:start="134:36" pos:end="134:80">(<init pos:start="134:37" pos:end="134:46"><decl pos:start="134:37" pos:end="134:45"><type pos:start="134:37" pos:end="134:39"><name pos:start="134:37" pos:end="134:39">int</name></type> <name pos:start="134:41" pos:end="134:41">i</name> <init pos:start="134:43" pos:end="134:45">= <expr pos:start="134:45" pos:end="134:45"><literal type="number" pos:start="134:45" pos:end="134:45">1</literal></expr></init></decl>;</init> <condition pos:start="134:48" pos:end="134:75"><expr pos:start="134:48" pos:end="134:74"><name pos:start="134:48" pos:end="134:48">i</name> <operator pos:start="134:50" pos:end="134:50">&lt;</operator> <name pos:start="134:52" pos:end="134:74">firstOpposingRouteIndex</name></expr>;</condition> <incr pos:start="134:77" pos:end="134:79"><expr pos:start="134:77" pos:end="134:79"><name pos:start="134:77" pos:end="134:77">i</name><operator pos:start="134:78" pos:end="134:79">++</operator></expr></incr>)</control> <block pos:start="134:82" pos:end="140:33">{<block_content pos:start="135:41" pos:end="139:44">
					<expr_stmt pos:start="135:41" pos:end="135:103"><expr pos:start="135:41" pos:end="135:102"><call pos:start="135:41" pos:end="135:102"><name pos:start="135:41" pos:end="135:68"><name pos:start="135:41" pos:end="135:48">newRoute</name><operator pos:start="135:49" pos:end="135:49">.</operator><name pos:start="135:50" pos:end="135:68">insertRouteWaypoint</name></name><argument_list pos:start="135:69" pos:end="135:102">(<argument pos:start="135:70" pos:end="135:76"><expr pos:start="135:70" pos:end="135:76"><name pos:start="135:70" pos:end="135:76">counter</name></expr></argument>, <argument pos:start="135:79" pos:end="135:101"><expr pos:start="135:79" pos:end="135:101"><call pos:start="135:79" pos:end="135:101"><name pos:start="135:79" pos:end="135:98"><name pos:start="135:79" pos:end="135:83">sideA</name><operator pos:start="135:84" pos:end="135:84">.</operator><name pos:start="135:85" pos:end="135:98">getSourcePoint</name></name><argument_list pos:start="135:99" pos:end="135:101">(<argument pos:start="135:100" pos:end="135:100"><expr pos:start="135:100" pos:end="135:100"><literal type="number" pos:start="135:100" pos:end="135:100">0</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<expr_stmt pos:start="136:41" pos:end="136:107"><expr pos:start="136:41" pos:end="136:106"><call pos:start="136:41" pos:end="136:106"><name pos:start="136:41" pos:end="136:68"><name pos:start="136:41" pos:end="136:48">newRoute</name><operator pos:start="136:49" pos:end="136:49">.</operator><name pos:start="136:50" pos:end="136:68">insertRouteWaypoint</name></name><argument_list pos:start="136:69" pos:end="136:106">(<argument pos:start="136:70" pos:end="136:80"><expr pos:start="136:70" pos:end="136:80"><name pos:start="136:70" pos:end="136:76">counter</name> <operator pos:start="136:78" pos:end="136:78">+</operator> <literal type="number" pos:start="136:80" pos:end="136:80">1</literal></expr></argument>, <argument pos:start="136:83" pos:end="136:105"><expr pos:start="136:83" pos:end="136:105"><call pos:start="136:83" pos:end="136:105"><name pos:start="136:83" pos:end="136:102"><name pos:start="136:83" pos:end="136:87">sideB</name><operator pos:start="136:88" pos:end="136:88">.</operator><name pos:start="136:89" pos:end="136:102">getSourcePoint</name></name><argument_list pos:start="136:103" pos:end="136:105">(<argument pos:start="136:104" pos:end="136:104"><expr pos:start="136:104" pos:end="136:104"><name pos:start="136:104" pos:end="136:104">i</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<expr_stmt pos:start="137:41" pos:end="137:109"><expr pos:start="137:41" pos:end="137:108"><call pos:start="137:41" pos:end="137:108"><name pos:start="137:41" pos:end="137:68"><name pos:start="137:41" pos:end="137:48">newRoute</name><operator pos:start="137:49" pos:end="137:49">.</operator><name pos:start="137:50" pos:end="137:68">insertRouteWaypoint</name></name><argument_list pos:start="137:69" pos:end="137:108">(<argument pos:start="137:70" pos:end="137:80"><expr pos:start="137:70" pos:end="137:80"><name pos:start="137:70" pos:end="137:76">counter</name> <operator pos:start="137:78" pos:end="137:78">+</operator> <literal type="number" pos:start="137:80" pos:end="137:80">1</literal></expr></argument>, <argument pos:start="137:83" pos:end="137:107"><expr pos:start="137:83" pos:end="137:107"><call pos:start="137:83" pos:end="137:107"><name pos:start="137:83" pos:end="137:102"><name pos:start="137:83" pos:end="137:87">sideB</name><operator pos:start="137:88" pos:end="137:88">.</operator><name pos:start="137:89" pos:end="137:102">getSourcePoint</name></name><argument_list pos:start="137:103" pos:end="137:107">(<argument pos:start="137:104" pos:end="137:106"><expr pos:start="137:104" pos:end="137:106"><name pos:start="137:104" pos:end="137:104">i</name><operator pos:start="137:105" pos:end="137:105">+</operator><literal type="number" pos:start="137:106" pos:end="137:106">1</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<expr_stmt pos:start="138:41" pos:end="138:53"><expr pos:start="138:41" pos:end="138:52"><name pos:start="138:41" pos:end="138:47">counter</name> <operator pos:start="138:49" pos:end="138:50">+=</operator> <literal type="number" pos:start="138:52" pos:end="138:52">2</literal></expr>;</expr_stmt>
					<expr_stmt pos:start="139:41" pos:end="139:44"><expr pos:start="139:41" pos:end="139:43"><name pos:start="139:41" pos:end="139:41">i</name><operator pos:start="139:42" pos:end="139:43">++</operator></expr>;</expr_stmt>
				</block_content>}</block></for>
			</block_content>}</block></if></if_stmt>
		</block_content>}</block></else></if_stmt>
	</block_content>}</block></function>
	
	
	<comment type="block" format="javadoc" pos:start="146:9" pos:end="153:11">/**
	 * This is a helper method for generateCreepingLineRoute() to handle and source point 
	 * missed at the end of the route.
	 * @param sideA
	 * @param sideB
	 * @param newRoute
	 * @param lastOpposingRouteIndex
	 */</comment>
	<function pos:start="154:9" pos:end="163:9"><type pos:start="154:9" pos:end="154:20"><specifier pos:start="154:9" pos:end="154:15">private</specifier> <name pos:start="154:17" pos:end="154:20">void</name></type> <name pos:start="154:22" pos:end="154:43">generateCreepinLineEnd</name><parameter_list pos:start="154:44" pos:end="154:136">(<parameter pos:start="154:45" pos:end="154:62"><decl pos:start="154:45" pos:end="154:62"><type pos:start="154:45" pos:end="154:62"><name pos:start="154:45" pos:end="154:56">SourcePoints</name></type> <name pos:start="154:58" pos:end="154:62">sideA</name></decl></parameter>, <parameter pos:start="154:65" pos:end="154:82"><decl pos:start="154:65" pos:end="154:82"><type pos:start="154:65" pos:end="154:82"><name pos:start="154:65" pos:end="154:76">SourcePoints</name></type> <name pos:start="154:78" pos:end="154:82">sideB</name></decl></parameter>, <parameter pos:start="154:85" pos:end="154:107"><decl pos:start="154:85" pos:end="154:107"><type pos:start="154:85" pos:end="154:107"><name pos:start="154:85" pos:end="154:98">RoutePrimitive</name></type> <name pos:start="154:100" pos:end="154:107">newRoute</name></decl></parameter>, <parameter pos:start="154:110" pos:end="154:135"><decl pos:start="154:110" pos:end="154:135"><type pos:start="154:110" pos:end="154:135"><name pos:start="154:110" pos:end="154:112">int</name></type> <name pos:start="154:114" pos:end="154:135">lastOpposingRouteIndex</name></decl></parameter>)</parameter_list> <block pos:start="154:138" pos:end="163:9">{<block_content pos:start="155:17" pos:end="162:17">
		<for pos:start="155:17" pos:end="162:17">for<control pos:start="155:20" pos:end="155:78">(<init pos:start="155:21" pos:end="155:55"><decl pos:start="155:21" pos:end="155:54"><type pos:start="155:21" pos:end="155:23"><name pos:start="155:21" pos:end="155:23">int</name></type> <name pos:start="155:25" pos:end="155:25">i</name> <init pos:start="155:27" pos:end="155:54">= <expr pos:start="155:29" pos:end="155:54"><name pos:start="155:29" pos:end="155:50">lastOpposingRouteIndex</name> <operator pos:start="155:52" pos:end="155:52">+</operator> <literal type="number" pos:start="155:54" pos:end="155:54">1</literal></expr></init></decl>;</init> <condition pos:start="155:57" pos:end="155:73"><expr pos:start="155:57" pos:end="155:72"><name pos:start="155:57" pos:end="155:57">i</name> <operator pos:start="155:59" pos:end="155:59">&lt;</operator> <call pos:start="155:61" pos:end="155:72"><name pos:start="155:61" pos:end="155:70"><name pos:start="155:61" pos:end="155:65">sideB</name><operator pos:start="155:66" pos:end="155:66">.</operator><name pos:start="155:67" pos:end="155:70">size</name></name><argument_list pos:start="155:71" pos:end="155:72">()</argument_list></call></expr>;</condition> <incr pos:start="155:75" pos:end="155:77"><expr pos:start="155:75" pos:end="155:77"><name pos:start="155:75" pos:end="155:75">i</name><operator pos:start="155:76" pos:end="155:77">++</operator></expr></incr>)</control> <block pos:start="155:80" pos:end="162:17">{<block_content pos:start="156:25" pos:end="161:28">
			<expr_stmt pos:start="156:25" pos:end="156:75"><expr pos:start="156:25" pos:end="156:74"><call pos:start="156:25" pos:end="156:74"><name pos:start="156:25" pos:end="156:49"><name pos:start="156:25" pos:end="156:32">newRoute</name><operator pos:start="156:33" pos:end="156:33">.</operator><name pos:start="156:34" pos:end="156:49">addRouteWaypoint</name></name><argument_list pos:start="156:50" pos:end="156:74">(<argument pos:start="156:51" pos:end="156:73"><expr pos:start="156:51" pos:end="156:73"><call pos:start="156:51" pos:end="156:73"><name pos:start="156:51" pos:end="156:70"><name pos:start="156:51" pos:end="156:55">sideB</name><operator pos:start="156:56" pos:end="156:56">.</operator><name pos:start="156:57" pos:end="156:70">getSourcePoint</name></name><argument_list pos:start="156:71" pos:end="156:73">(<argument pos:start="156:72" pos:end="156:72"><expr pos:start="156:72" pos:end="156:72"><name pos:start="156:72" pos:end="156:72">i</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt pos:start="157:25" pos:end="157:88"><expr pos:start="157:25" pos:end="157:87"><call pos:start="157:25" pos:end="157:87"><name pos:start="157:25" pos:end="157:49"><name pos:start="157:25" pos:end="157:32">newRoute</name><operator pos:start="157:33" pos:end="157:33">.</operator><name pos:start="157:34" pos:end="157:49">addRouteWaypoint</name></name><argument_list pos:start="157:50" pos:end="157:87">(<argument pos:start="157:51" pos:end="157:86"><expr pos:start="157:51" pos:end="157:86"><call pos:start="157:51" pos:end="157:86"><name pos:start="157:51" pos:end="157:70"><name pos:start="157:51" pos:end="157:55">sideA</name><operator pos:start="157:56" pos:end="157:56">.</operator><name pos:start="157:57" pos:end="157:70">getSourcePoint</name></name><argument_list pos:start="157:71" pos:end="157:86">(<argument pos:start="157:72" pos:end="157:85"><expr pos:start="157:72" pos:end="157:85"><call pos:start="157:72" pos:end="157:83"><name pos:start="157:72" pos:end="157:81"><name pos:start="157:72" pos:end="157:76">sideA</name><operator pos:start="157:77" pos:end="157:77">.</operator><name pos:start="157:78" pos:end="157:81">size</name></name><argument_list pos:start="157:82" pos:end="157:83">()</argument_list></call><operator pos:start="157:84" pos:end="157:84">-</operator><literal type="number" pos:start="157:85" pos:end="157:85">1</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<if_stmt pos:start="158:25" pos:end="160:25"><if pos:start="158:25" pos:end="160:25">if<condition pos:start="158:27" pos:end="158:46">(<expr pos:start="158:28" pos:end="158:45"><name pos:start="158:28" pos:end="158:28">i</name> <operator pos:start="158:30" pos:end="158:30">&lt;</operator> <call pos:start="158:32" pos:end="158:43"><name pos:start="158:32" pos:end="158:41"><name pos:start="158:32" pos:end="158:36">sideB</name><operator pos:start="158:37" pos:end="158:37">.</operator><name pos:start="158:38" pos:end="158:41">size</name></name><argument_list pos:start="158:42" pos:end="158:43">()</argument_list></call><operator pos:start="158:44" pos:end="158:44">-</operator><literal type="number" pos:start="158:45" pos:end="158:45">1</literal></expr>)</condition> <block pos:start="158:48" pos:end="160:25">{<block_content pos:start="159:33" pos:end="159:85">
				<expr_stmt pos:start="159:33" pos:end="159:85"><expr pos:start="159:33" pos:end="159:84"><call pos:start="159:33" pos:end="159:84"><name pos:start="159:33" pos:end="159:57"><name pos:start="159:33" pos:end="159:40">newRoute</name><operator pos:start="159:41" pos:end="159:41">.</operator><name pos:start="159:42" pos:end="159:57">addRouteWaypoint</name></name><argument_list pos:start="159:58" pos:end="159:84">(<argument pos:start="159:59" pos:end="159:83"><expr pos:start="159:59" pos:end="159:83"><call pos:start="159:59" pos:end="159:83"><name pos:start="159:59" pos:end="159:78"><name pos:start="159:59" pos:end="159:63">sideB</name><operator pos:start="159:64" pos:end="159:64">.</operator><name pos:start="159:65" pos:end="159:78">getSourcePoint</name></name><argument_list pos:start="159:79" pos:end="159:83">(<argument pos:start="159:80" pos:end="159:82"><expr pos:start="159:80" pos:end="159:82"><name pos:start="159:80" pos:end="159:80">i</name><operator pos:start="159:81" pos:end="159:81">+</operator><literal type="number" pos:start="159:82" pos:end="159:82">1</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			</block_content>}</block></if></if_stmt>
			<expr_stmt pos:start="161:25" pos:end="161:28"><expr pos:start="161:25" pos:end="161:27"><name pos:start="161:25" pos:end="161:25">i</name><operator pos:start="161:26" pos:end="161:27">++</operator></expr>;</expr_stmt>
		</block_content>}</block></for>
	</block_content>}</block></function>
	
	<function pos:start="165:9" pos:end="180:9"><annotation pos:start="165:9" pos:end="165:17">@<name pos:start="165:10" pos:end="165:17">Override</name></annotation>
	<type pos:start="166:9" pos:end="166:35"><specifier pos:start="166:9" pos:end="166:14">public</specifier> <name pos:start="166:16" pos:end="166:35"><name pos:start="166:16" pos:end="166:19">List</name><argument_list type="generic" pos:start="166:20" pos:end="166:35">&lt;<argument pos:start="166:21" pos:end="166:34"><name pos:start="166:21" pos:end="166:34">RoutePrimitive</name></argument>&gt;</argument_list></name></type> <name pos:start="166:37" pos:end="166:58">generateRoutePrimitive</name><parameter_list pos:start="166:59" pos:end="166:106">(<parameter pos:start="166:60" pos:end="166:82"><decl pos:start="166:60" pos:end="166:82"><type pos:start="166:60" pos:end="166:82"><name pos:start="166:60" pos:end="166:65">double</name></type> <name pos:start="166:67" pos:end="166:82">APERATURE_HEIGHT</name></decl></parameter>, <parameter pos:start="166:85" pos:end="166:105"><decl pos:start="166:85" pos:end="166:105"><type pos:start="166:85" pos:end="166:105"><name pos:start="166:85" pos:end="166:90">double</name></type> <name pos:start="166:92" pos:end="166:105">OVERLAP_FACTOR</name></decl></parameter>)</parameter_list><block pos:start="166:107" pos:end="180:9">{<block_content pos:start="167:17" pos:end="179:30">
		<decl_stmt pos:start="167:17" pos:end="167:64"><decl pos:start="167:17" pos:end="167:63"><type pos:start="167:17" pos:end="167:36"><name pos:start="167:17" pos:end="167:36"><name pos:start="167:17" pos:end="167:20">List</name><argument_list type="generic" pos:start="167:21" pos:end="167:36">&lt;<argument pos:start="167:22" pos:end="167:35"><name pos:start="167:22" pos:end="167:35">RoutePrimitive</name></argument>&gt;</argument_list></name></type> <name pos:start="167:38" pos:end="167:43">routes</name> <init pos:start="167:45" pos:end="167:63">= <expr pos:start="167:47" pos:end="167:63"><operator pos:start="167:47" pos:end="167:49">new</operator> <call pos:start="167:51" pos:end="167:63"><name pos:start="167:51" pos:end="167:61"><name pos:start="167:51" pos:end="167:59">ArrayList</name><argument_list type="generic" pos:start="167:60" pos:end="167:61">&lt;&gt;</argument_list></name><argument_list pos:start="167:62" pos:end="167:63">()</argument_list></call></expr></init></decl>;</decl_stmt>
		<decl_stmt pos:start="168:17" pos:end="168:59"><decl pos:start="168:17" pos:end="168:58"><type pos:start="168:17" pos:end="168:28"><name pos:start="168:17" pos:end="168:28">SourcePoints</name></type> <name pos:start="168:30" pos:end="168:36">source1</name> <init pos:start="168:38" pos:end="168:58">= <expr pos:start="168:40" pos:end="168:58"><call pos:start="168:40" pos:end="168:58"><name pos:start="168:40" pos:end="168:55"><name pos:start="168:40" pos:end="168:51">sourcePoints</name><operator pos:start="168:52" pos:end="168:52">.</operator><name pos:start="168:53" pos:end="168:55">get</name></name><argument_list pos:start="168:56" pos:end="168:58">(<argument pos:start="168:57" pos:end="168:57"><expr pos:start="168:57" pos:end="168:57"><literal type="number" pos:start="168:57" pos:end="168:57">0</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<decl_stmt pos:start="169:17" pos:end="169:59"><decl pos:start="169:17" pos:end="169:58"><type pos:start="169:17" pos:end="169:28"><name pos:start="169:17" pos:end="169:28">SourcePoints</name></type> <name pos:start="169:30" pos:end="169:36">source2</name> <init pos:start="169:38" pos:end="169:58">= <expr pos:start="169:40" pos:end="169:58"><call pos:start="169:40" pos:end="169:58"><name pos:start="169:40" pos:end="169:55"><name pos:start="169:40" pos:end="169:51">sourcePoints</name><operator pos:start="169:52" pos:end="169:52">.</operator><name pos:start="169:53" pos:end="169:55">get</name></name><argument_list pos:start="169:56" pos:end="169:58">(<argument pos:start="169:57" pos:end="169:57"><expr pos:start="169:57" pos:end="169:57"><literal type="number" pos:start="169:57" pos:end="169:57">1</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<decl_stmt pos:start="170:17" pos:end="170:49"><decl pos:start="170:17" pos:end="170:48"><type pos:start="170:17" pos:end="170:30"><name pos:start="170:17" pos:end="170:30">RoutePrimitive</name></type> <name pos:start="170:32" pos:end="170:48">creepingLineRoute</name></decl>;</decl_stmt>
		<if_stmt pos:start="171:17" pos:end="175:17"><if pos:start="171:17" pos:end="173:17">if<condition pos:start="171:19" pos:end="171:51">(<expr pos:start="171:20" pos:end="171:50"><call pos:start="171:20" pos:end="171:33"><name pos:start="171:20" pos:end="171:31"><name pos:start="171:20" pos:end="171:26">source1</name><operator pos:start="171:27" pos:end="171:27">.</operator><name pos:start="171:28" pos:end="171:31">size</name></name><argument_list pos:start="171:32" pos:end="171:33">()</argument_list></call> <operator pos:start="171:35" pos:end="171:35">&lt;</operator> <call pos:start="171:37" pos:end="171:50"><name pos:start="171:37" pos:end="171:48"><name pos:start="171:37" pos:end="171:43">source2</name><operator pos:start="171:44" pos:end="171:44">.</operator><name pos:start="171:45" pos:end="171:48">size</name></name><argument_list pos:start="171:49" pos:end="171:50">()</argument_list></call></expr>)</condition> <block pos:start="171:53" pos:end="173:17">{<block_content pos:start="172:25" pos:end="172:88">
			<expr_stmt pos:start="172:25" pos:end="172:88"><expr pos:start="172:25" pos:end="172:87"><name pos:start="172:25" pos:end="172:41">creepingLineRoute</name> <operator pos:start="172:43" pos:end="172:43">=</operator> <call pos:start="172:45" pos:end="172:87"><name pos:start="172:45" pos:end="172:69">generateCreepingLineRoute</name><argument_list pos:start="172:70" pos:end="172:87">(<argument pos:start="172:71" pos:end="172:77"><expr pos:start="172:71" pos:end="172:77"><name pos:start="172:71" pos:end="172:77">source2</name></expr></argument>, <argument pos:start="172:80" pos:end="172:86"><expr pos:start="172:80" pos:end="172:86"><name pos:start="172:80" pos:end="172:86">source1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		</block_content>}</block></if> <else pos:start="173:19" pos:end="175:17">else <block pos:start="173:24" pos:end="175:17">{<block_content pos:start="174:25" pos:end="174:88">
			<expr_stmt pos:start="174:25" pos:end="174:88"><expr pos:start="174:25" pos:end="174:87"><name pos:start="174:25" pos:end="174:41">creepingLineRoute</name> <operator pos:start="174:43" pos:end="174:43">=</operator> <call pos:start="174:45" pos:end="174:87"><name pos:start="174:45" pos:end="174:69">generateCreepingLineRoute</name><argument_list pos:start="174:70" pos:end="174:87">(<argument pos:start="174:71" pos:end="174:77"><expr pos:start="174:71" pos:end="174:77"><name pos:start="174:71" pos:end="174:77">source1</name></expr></argument>, <argument pos:start="174:80" pos:end="174:86"><expr pos:start="174:80" pos:end="174:86"><name pos:start="174:80" pos:end="174:86">source2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		</block_content>}</block></else></if_stmt>
		<comment type="line" pos:start="176:17" pos:end="176:59">//NOTE: should actually be APERATURE_HEIGHT</comment>
		<expr_stmt pos:start="177:17" pos:end="177:102"><expr pos:start="177:17" pos:end="177:101"><call pos:start="177:17" pos:end="177:101"><name pos:start="177:17" pos:end="177:48"><name pos:start="177:17" pos:end="177:25">Utilities</name><operator pos:start="177:26" pos:end="177:26">.</operator><name pos:start="177:27" pos:end="177:48">generateImageWaypoints</name></name><argument_list pos:start="177:49" pos:end="177:101">(<argument pos:start="177:50" pos:end="177:66"><expr pos:start="177:50" pos:end="177:66"><name pos:start="177:50" pos:end="177:66">creepingLineRoute</name></expr></argument>, <argument pos:start="177:69" pos:end="177:84"><expr pos:start="177:69" pos:end="177:84"><name pos:start="177:69" pos:end="177:84">APERATURE_HEIGHT</name></expr></argument>, <argument pos:start="177:87" pos:end="177:100"><expr pos:start="177:87" pos:end="177:100"><name pos:start="177:87" pos:end="177:100">OVERLAP_FACTOR</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt pos:start="178:17" pos:end="178:46"><expr pos:start="178:17" pos:end="178:45"><call pos:start="178:17" pos:end="178:45"><name pos:start="178:17" pos:end="178:26"><name pos:start="178:17" pos:end="178:22">routes</name><operator pos:start="178:23" pos:end="178:23">.</operator><name pos:start="178:24" pos:end="178:26">add</name></name><argument_list pos:start="178:27" pos:end="178:45">(<argument pos:start="178:28" pos:end="178:44"><expr pos:start="178:28" pos:end="178:44"><name pos:start="178:28" pos:end="178:44">creepingLineRoute</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<return pos:start="179:17" pos:end="179:30">return <expr pos:start="179:24" pos:end="179:29"><name pos:start="179:24" pos:end="179:29">routes</name></expr>;</return>
	</block_content>}</block></function>
}</block></class>
</unit>
