<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="Java" filename="flatCode/Onion.java" pos:tabs="8"><package pos:start="1:1" pos:end="1:58">package <name pos:start="1:9" pos:end="1:57"><name pos:start="1:9" pos:end="1:11">edu</name><operator pos:start="1:12" pos:end="1:12">.</operator><name pos:start="1:13" pos:end="1:14">nd</name><operator pos:start="1:15" pos:end="1:15">.</operator><name pos:start="1:16" pos:end="1:24">dronology</name><operator pos:start="1:25" pos:end="1:25">.</operator><name pos:start="1:26" pos:end="1:29">core</name><operator pos:start="1:30" pos:end="1:30">.</operator><name pos:start="1:31" pos:end="1:48">collisionavoidance</name><operator pos:start="1:49" pos:end="1:49">.</operator><name pos:start="1:50" pos:end="1:57">strategy</name></name>;</package>

<import pos:start="3:1" pos:end="3:27">import <name pos:start="3:8" pos:end="3:26"><name pos:start="3:8" pos:end="3:11">java</name><operator pos:start="3:12" pos:end="3:12">.</operator><name pos:start="3:13" pos:end="3:16">util</name><operator pos:start="3:17" pos:end="3:17">.</operator><name pos:start="3:18" pos:end="3:26">ArrayList</name></name>;</import>
<import pos:start="4:1" pos:end="4:24">import <name pos:start="4:8" pos:end="4:23"><name pos:start="4:8" pos:end="4:11">java</name><operator pos:start="4:12" pos:end="4:12">.</operator><name pos:start="4:13" pos:end="4:16">util</name><operator pos:start="4:17" pos:end="4:17">.</operator><name pos:start="4:18" pos:end="4:23">Arrays</name></name>;</import>
<import pos:start="5:1" pos:end="5:29">import <name pos:start="5:8" pos:end="5:28"><name pos:start="5:8" pos:end="5:11">java</name><operator pos:start="5:12" pos:end="5:12">.</operator><name pos:start="5:13" pos:end="5:16">util</name><operator pos:start="5:17" pos:end="5:17">.</operator><name pos:start="5:18" pos:end="5:28">Collections</name></name>;</import>
<import pos:start="6:1" pos:end="6:25">import <name pos:start="6:8" pos:end="6:24"><name pos:start="6:8" pos:end="6:11">java</name><operator pos:start="6:12" pos:end="6:12">.</operator><name pos:start="6:13" pos:end="6:16">util</name><operator pos:start="6:17" pos:end="6:17">.</operator><name pos:start="6:18" pos:end="6:24">HashMap</name></name>;</import>
<import pos:start="7:1" pos:end="7:22">import <name pos:start="7:8" pos:end="7:21"><name pos:start="7:8" pos:end="7:11">java</name><operator pos:start="7:12" pos:end="7:12">.</operator><name pos:start="7:13" pos:end="7:16">util</name><operator pos:start="7:17" pos:end="7:17">.</operator><name pos:start="7:18" pos:end="7:21">List</name></name>;</import>
<import pos:start="8:1" pos:end="8:25">import <name pos:start="8:8" pos:end="8:24"><name pos:start="8:8" pos:end="8:11">java</name><operator pos:start="8:12" pos:end="8:12">.</operator><name pos:start="8:13" pos:end="8:16">util</name><operator pos:start="8:17" pos:end="8:17">.</operator><name pos:start="8:18" pos:end="8:24">Objects</name></name>;</import>

<import pos:start="10:1" pos:end="10:71">import <name pos:start="10:8" pos:end="10:70"><name pos:start="10:8" pos:end="10:10">edu</name><operator pos:start="10:11" pos:end="10:11">.</operator><name pos:start="10:12" pos:end="10:13">nd</name><operator pos:start="10:14" pos:end="10:14">.</operator><name pos:start="10:15" pos:end="10:23">dronology</name><operator pos:start="10:24" pos:end="10:24">.</operator><name pos:start="10:25" pos:end="10:28">core</name><operator pos:start="10:29" pos:end="10:29">.</operator><name pos:start="10:30" pos:end="10:47">collisionavoidance</name><operator pos:start="10:48" pos:end="10:48">.</operator><name pos:start="10:49" pos:end="10:70">CollisionAvoidanceUtil</name></name>;</import>
<import pos:start="11:1" pos:end="11:65">import <name pos:start="11:8" pos:end="11:64"><name pos:start="11:8" pos:end="11:10">edu</name><operator pos:start="11:11" pos:end="11:11">.</operator><name pos:start="11:12" pos:end="11:13">nd</name><operator pos:start="11:14" pos:end="11:14">.</operator><name pos:start="11:15" pos:end="11:23">dronology</name><operator pos:start="11:24" pos:end="11:24">.</operator><name pos:start="11:25" pos:end="11:28">core</name><operator pos:start="11:29" pos:end="11:29">.</operator><name pos:start="11:30" pos:end="11:47">collisionavoidance</name><operator pos:start="11:48" pos:end="11:48">.</operator><name pos:start="11:49" pos:end="11:64">CollisionAvoider</name></name>;</import>
<import pos:start="12:1" pos:end="12:58">import <name pos:start="12:8" pos:end="12:57"><name pos:start="12:8" pos:end="12:10">edu</name><operator pos:start="12:11" pos:end="12:11">.</operator><name pos:start="12:12" pos:end="12:13">nd</name><operator pos:start="12:14" pos:end="12:14">.</operator><name pos:start="12:15" pos:end="12:23">dronology</name><operator pos:start="12:24" pos:end="12:24">.</operator><name pos:start="12:25" pos:end="12:28">core</name><operator pos:start="12:29" pos:end="12:29">.</operator><name pos:start="12:30" pos:end="12:47">collisionavoidance</name><operator pos:start="12:48" pos:end="12:48">.</operator><name pos:start="12:49" pos:end="12:57">DronePair</name></name>;</import>
<import pos:start="13:1" pos:end="13:62">import <name pos:start="13:8" pos:end="13:61"><name pos:start="13:8" pos:end="13:10">edu</name><operator pos:start="13:11" pos:end="13:11">.</operator><name pos:start="13:12" pos:end="13:13">nd</name><operator pos:start="13:14" pos:end="13:14">.</operator><name pos:start="13:15" pos:end="13:23">dronology</name><operator pos:start="13:24" pos:end="13:24">.</operator><name pos:start="13:25" pos:end="13:28">core</name><operator pos:start="13:29" pos:end="13:29">.</operator><name pos:start="13:30" pos:end="13:47">collisionavoidance</name><operator pos:start="13:48" pos:end="13:48">.</operator><name pos:start="13:49" pos:end="13:61">DroneSnapshot</name></name>;</import>
<import pos:start="14:1" pos:end="14:84">import <name pos:start="14:8" pos:end="14:83"><name pos:start="14:8" pos:end="14:10">edu</name><operator pos:start="14:11" pos:end="14:11">.</operator><name pos:start="14:12" pos:end="14:13">nd</name><operator pos:start="14:14" pos:end="14:14">.</operator><name pos:start="14:15" pos:end="14:23">dronology</name><operator pos:start="14:24" pos:end="14:24">.</operator><name pos:start="14:25" pos:end="14:28">core</name><operator pos:start="14:29" pos:end="14:29">.</operator><name pos:start="14:30" pos:end="14:47">collisionavoidance</name><operator pos:start="14:48" pos:end="14:48">.</operator><name pos:start="14:49" pos:end="14:56">strategy</name><operator pos:start="14:57" pos:end="14:57">.</operator><name pos:start="14:58" pos:end="14:69">onionbackend</name><operator pos:start="14:70" pos:end="14:70">.</operator><name pos:start="14:71" pos:end="14:83">DefaultAction</name></name>;</import>
<import pos:start="15:1" pos:end="15:78">import <name pos:start="15:8" pos:end="15:77"><name pos:start="15:8" pos:end="15:10">edu</name><operator pos:start="15:11" pos:end="15:11">.</operator><name pos:start="15:12" pos:end="15:13">nd</name><operator pos:start="15:14" pos:end="15:14">.</operator><name pos:start="15:15" pos:end="15:23">dronology</name><operator pos:start="15:24" pos:end="15:24">.</operator><name pos:start="15:25" pos:end="15:28">core</name><operator pos:start="15:29" pos:end="15:29">.</operator><name pos:start="15:30" pos:end="15:47">collisionavoidance</name><operator pos:start="15:48" pos:end="15:48">.</operator><name pos:start="15:49" pos:end="15:56">strategy</name><operator pos:start="15:57" pos:end="15:57">.</operator><name pos:start="15:58" pos:end="15:69">onionbackend</name><operator pos:start="15:70" pos:end="15:70">.</operator><name pos:start="15:71" pos:end="15:77">IAction</name></name>;</import>
<import pos:start="16:1" pos:end="16:77">import <name pos:start="16:8" pos:end="16:76"><name pos:start="16:8" pos:end="16:10">edu</name><operator pos:start="16:11" pos:end="16:11">.</operator><name pos:start="16:12" pos:end="16:13">nd</name><operator pos:start="16:14" pos:end="16:14">.</operator><name pos:start="16:15" pos:end="16:23">dronology</name><operator pos:start="16:24" pos:end="16:24">.</operator><name pos:start="16:25" pos:end="16:28">core</name><operator pos:start="16:29" pos:end="16:29">.</operator><name pos:start="16:30" pos:end="16:47">collisionavoidance</name><operator pos:start="16:48" pos:end="16:48">.</operator><name pos:start="16:49" pos:end="16:56">strategy</name><operator pos:start="16:57" pos:end="16:57">.</operator><name pos:start="16:58" pos:end="16:69">onionbackend</name><operator pos:start="16:70" pos:end="16:70">.</operator><name pos:start="16:71" pos:end="16:76">ILayer</name></name>;</import>
<import pos:start="17:1" pos:end="17:48">import <name pos:start="17:8" pos:end="17:47"><name pos:start="17:8" pos:end="17:10">edu</name><operator pos:start="17:11" pos:end="17:11">.</operator><name pos:start="17:12" pos:end="17:13">nd</name><operator pos:start="17:14" pos:end="17:14">.</operator><name pos:start="17:15" pos:end="17:23">dronology</name><operator pos:start="17:24" pos:end="17:24">.</operator><name pos:start="17:25" pos:end="17:28">core</name><operator pos:start="17:29" pos:end="17:29">.</operator><name pos:start="17:30" pos:end="17:33">goal</name><operator pos:start="17:34" pos:end="17:34">.</operator><name pos:start="17:35" pos:end="17:47">IGoalSnapshot</name></name>;</import>
<import pos:start="18:1" pos:end="18:55">import <name pos:start="18:8" pos:end="18:54"><name pos:start="18:8" pos:end="18:10">edu</name><operator pos:start="18:11" pos:end="18:11">.</operator><name pos:start="18:12" pos:end="18:13">nd</name><operator pos:start="18:14" pos:end="18:14">.</operator><name pos:start="18:15" pos:end="18:23">dronology</name><operator pos:start="18:24" pos:end="18:24">.</operator><name pos:start="18:25" pos:end="18:28">core</name><operator pos:start="18:29" pos:end="18:29">.</operator><name pos:start="18:30" pos:end="18:33">goal</name><operator pos:start="18:34" pos:end="18:34">.</operator><name pos:start="18:35" pos:end="18:54">WaypointGoalSnapshot</name></name>;</import>
<import pos:start="19:1" pos:end="19:30">import <name pos:start="19:8" pos:end="19:29"><name pos:start="19:8" pos:end="19:10">net</name><operator pos:start="19:11" pos:end="19:11">.</operator><name pos:start="19:12" pos:end="19:13">mv</name><operator pos:start="19:14" pos:end="19:14">.</operator><name pos:start="19:15" pos:end="19:21">logging</name><operator pos:start="19:22" pos:end="19:22">.</operator><name pos:start="19:23" pos:end="19:29">ILogger</name></name>;</import>
<import pos:start="20:1" pos:end="20:37">import <name pos:start="20:8" pos:end="20:36"><name pos:start="20:8" pos:end="20:10">net</name><operator pos:start="20:11" pos:end="20:11">.</operator><name pos:start="20:12" pos:end="20:13">mv</name><operator pos:start="20:14" pos:end="20:14">.</operator><name pos:start="20:15" pos:end="20:21">logging</name><operator pos:start="20:22" pos:end="20:22">.</operator><name pos:start="20:23" pos:end="20:36">LoggerProvider</name></name>;</import>

<comment type="block" format="javadoc" pos:start="22:1" pos:end="24:3">/**
 * This approach uses a collection of layers to determine avoidance actions. The inner most layer stops the drones. The next layer out might slow them. 
 */</comment>
<class pos:start="25:1" pos:end="97:1"><specifier pos:start="25:1" pos:end="25:6">public</specifier> class <name pos:start="25:14" pos:end="25:18">Onion</name> <super_list pos:start="25:20" pos:end="25:46"><implements pos:start="25:20" pos:end="25:46">implements <super pos:start="25:31" pos:end="25:46"><name pos:start="25:31" pos:end="25:46">CollisionAvoider</name></super></implements></super_list> <block pos:start="25:48" pos:end="97:1">{

    <decl_stmt pos:start="27:5" pos:end="27:80"><decl pos:start="27:5" pos:end="27:79"><type pos:start="27:5" pos:end="27:32"><specifier pos:start="27:5" pos:end="27:11">private</specifier> <specifier pos:start="27:13" pos:end="27:18">static</specifier> <specifier pos:start="27:20" pos:end="27:24">final</specifier> <name pos:start="27:26" pos:end="27:32">ILogger</name></type> <name pos:start="27:34" pos:end="27:39">LOGGER</name> <init pos:start="27:41" pos:end="27:79">= <expr pos:start="27:43" pos:end="27:79"><call pos:start="27:43" pos:end="27:79"><name pos:start="27:43" pos:end="27:66"><name pos:start="27:43" pos:end="27:56">LoggerProvider</name><operator pos:start="27:57" pos:end="27:57">.</operator><name pos:start="27:58" pos:end="27:66">getLogger</name></name><argument_list pos:start="27:67" pos:end="27:79">(<argument pos:start="27:68" pos:end="27:78"><expr pos:start="27:68" pos:end="27:78"><name pos:start="27:68" pos:end="27:78"><name pos:start="27:68" pos:end="27:72">Onion</name><operator pos:start="27:73" pos:end="27:73">.</operator><name pos:start="27:74" pos:end="27:78">class</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <comment type="line" pos:start="29:5" pos:end="29:57">// List of layers, ordered inner most to outer most. </comment>
    <decl_stmt pos:start="30:5" pos:end="30:24"><decl pos:start="30:5" pos:end="30:23"><type pos:start="30:5" pos:end="30:16"><name pos:start="30:5" pos:end="30:16"><name pos:start="30:5" pos:end="30:8">List</name><argument_list type="generic" pos:start="30:9" pos:end="30:16">&lt;<argument pos:start="30:10" pos:end="30:15"><name pos:start="30:10" pos:end="30:15">ILayer</name></argument>&gt;</argument_list></name></type> <name pos:start="30:18" pos:end="30:23">layers</name></decl>;</decl_stmt>
    <decl_stmt pos:start="31:5" pos:end="31:64"><decl pos:start="31:5" pos:end="31:63"><type pos:start="31:5" pos:end="31:34"><name pos:start="31:5" pos:end="31:34"><name pos:start="31:5" pos:end="31:11">HashMap</name><argument_list type="generic" pos:start="31:12" pos:end="31:34">&lt;<argument pos:start="31:13" pos:end="31:18"><name pos:start="31:13" pos:end="31:18">String</name></argument>, <argument pos:start="31:21" pos:end="31:33"><name pos:start="31:21" pos:end="31:33">DroneSnapshot</name></argument>&gt;</argument_list></name></type> <name pos:start="31:36" pos:end="31:45">nameLookup</name> <init pos:start="31:47" pos:end="31:63">= <expr pos:start="31:49" pos:end="31:63"><operator pos:start="31:49" pos:end="31:51">new</operator> <call pos:start="31:53" pos:end="31:63"><name pos:start="31:53" pos:end="31:61"><name pos:start="31:53" pos:end="31:59">HashMap</name><argument_list type="generic" pos:start="31:60" pos:end="31:61">&lt;&gt;</argument_list></name><argument_list pos:start="31:62" pos:end="31:63">()</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="32:5" pos:end="32:61"><decl pos:start="32:5" pos:end="32:60"><type pos:start="32:5" pos:end="32:27"><name pos:start="32:5" pos:end="32:27"><name pos:start="32:5" pos:end="32:11">HashMap</name><argument_list type="generic" pos:start="32:12" pos:end="32:27">&lt;<argument pos:start="32:13" pos:end="32:18"><name pos:start="32:13" pos:end="32:18">String</name></argument>, <argument pos:start="32:21" pos:end="32:26"><name pos:start="32:21" pos:end="32:26">Double</name></argument>&gt;</argument_list></name></type> <name pos:start="32:29" pos:end="32:42">distanceLookup</name> <init pos:start="32:44" pos:end="32:60">= <expr pos:start="32:46" pos:end="32:60"><operator pos:start="32:46" pos:end="32:48">new</operator> <call pos:start="32:50" pos:end="32:60"><name pos:start="32:50" pos:end="32:58"><name pos:start="32:50" pos:end="32:56">HashMap</name><argument_list type="generic" pos:start="32:57" pos:end="32:58">&lt;&gt;</argument_list></name><argument_list pos:start="32:59" pos:end="32:60">()</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="33:5" pos:end="33:62"><decl pos:start="33:5" pos:end="33:61"><type pos:start="33:5" pos:end="33:27"><name pos:start="33:5" pos:end="33:27"><name pos:start="33:5" pos:end="33:11">HashMap</name><argument_list type="generic" pos:start="33:12" pos:end="33:27">&lt;<argument pos:start="33:13" pos:end="33:18"><name pos:start="33:13" pos:end="33:18">String</name></argument>, <argument pos:start="33:21" pos:end="33:26"><name pos:start="33:21" pos:end="33:26">String</name></argument>&gt;</argument_list></name></type> <name pos:start="33:29" pos:end="33:43">nearestNeighbor</name> <init pos:start="33:45" pos:end="33:61">= <expr pos:start="33:47" pos:end="33:61"><operator pos:start="33:47" pos:end="33:49">new</operator> <call pos:start="33:51" pos:end="33:61"><name pos:start="33:51" pos:end="33:59"><name pos:start="33:51" pos:end="33:57">HashMap</name><argument_list type="generic" pos:start="33:58" pos:end="33:59">&lt;&gt;</argument_list></name><argument_list pos:start="33:60" pos:end="33:61">()</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="34:5" pos:end="34:54"><decl pos:start="34:5" pos:end="34:53"><type pos:start="34:5" pos:end="34:17"><specifier pos:start="34:5" pos:end="34:9">final</specifier> <name pos:start="34:11" pos:end="34:17">IAction</name></type> <name pos:start="34:19" pos:end="34:31">defaultAction</name> <init pos:start="34:33" pos:end="34:53">= <expr pos:start="34:35" pos:end="34:53"><operator pos:start="34:35" pos:end="34:37">new</operator> <call pos:start="34:39" pos:end="34:53"><name pos:start="34:39" pos:end="34:51">DefaultAction</name><argument_list pos:start="34:52" pos:end="34:53">()</argument_list></call></expr></init></decl>;</decl_stmt>

    <constructor pos:start="36:5" pos:end="41:5"><specifier pos:start="36:5" pos:end="36:10">public</specifier> <name pos:start="36:12" pos:end="36:16">Onion</name><parameter_list pos:start="36:17" pos:end="36:33">(<parameter pos:start="36:18" pos:end="36:32"><decl pos:start="36:18" pos:end="36:32"><type pos:start="36:18" pos:end="36:26"><name pos:start="36:18" pos:end="36:23">ILayer</name><modifier pos:start="36:24" pos:end="36:26">...</modifier></type><name pos:start="36:27" pos:end="36:32">layers</name></decl></parameter>)</parameter_list> <block pos:start="36:35" pos:end="41:5">{<block_content pos:start="37:9" pos:end="40:11">
        <expr_stmt pos:start="37:9" pos:end="37:61"><expr pos:start="37:9" pos:end="37:60"><name pos:start="37:9" pos:end="37:19"><name pos:start="37:9" pos:end="37:12">this</name><operator pos:start="37:13" pos:end="37:13">.</operator><name pos:start="37:14" pos:end="37:19">layers</name></name> <operator pos:start="37:21" pos:end="37:21">=</operator> <operator pos:start="37:23" pos:end="37:25">new</operator> <call pos:start="37:27" pos:end="37:60"><name pos:start="37:27" pos:end="37:37"><name pos:start="37:27" pos:end="37:35">ArrayList</name><argument_list type="generic" pos:start="37:36" pos:end="37:37">&lt;&gt;</argument_list></name><argument_list pos:start="37:38" pos:end="37:60">(<argument pos:start="37:39" pos:end="37:59"><expr pos:start="37:39" pos:end="37:59"><call pos:start="37:39" pos:end="37:59"><name pos:start="37:39" pos:end="37:51"><name pos:start="37:39" pos:end="37:44">Arrays</name><operator pos:start="37:45" pos:end="37:45">.</operator><name pos:start="37:46" pos:end="37:51">asList</name></name><argument_list pos:start="37:52" pos:end="37:59">(<argument pos:start="37:53" pos:end="37:58"><expr pos:start="37:53" pos:end="37:58"><name pos:start="37:53" pos:end="37:58">layers</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt pos:start="38:9" pos:end="40:11"><expr pos:start="38:9" pos:end="40:10"><call pos:start="38:9" pos:end="40:10"><name pos:start="38:9" pos:end="38:24"><name pos:start="38:9" pos:end="38:19">Collections</name><operator pos:start="38:20" pos:end="38:20">.</operator><name pos:start="38:21" pos:end="38:24">sort</name></name><argument_list pos:start="38:25" pos:end="40:10">(<argument pos:start="38:26" pos:end="38:36"><expr pos:start="38:26" pos:end="38:36"><name pos:start="38:26" pos:end="38:36"><name pos:start="38:26" pos:end="38:29">this</name><operator pos:start="38:30" pos:end="38:30">.</operator><name pos:start="38:31" pos:end="38:36">layers</name></name></expr></argument>, <argument pos:start="38:39" pos:end="40:9"><expr pos:start="38:39" pos:end="40:9"><lambda pos:start="38:39" pos:end="40:9"><parameter_list pos:start="38:39" pos:end="38:60">(<parameter pos:start="38:40" pos:end="38:48"><decl pos:start="38:40" pos:end="38:48"><type pos:start="38:40" pos:end="38:48"><name pos:start="38:40" pos:end="38:45">ILayer</name></type> <name pos:start="38:47" pos:end="38:48">l1</name></decl></parameter>, <parameter pos:start="38:51" pos:end="38:59"><decl pos:start="38:51" pos:end="38:59"><type pos:start="38:51" pos:end="38:59"><name pos:start="38:51" pos:end="38:56">ILayer</name></type> <name pos:start="38:58" pos:end="38:59">l2</name></decl></parameter>)</parameter_list> -&gt; <block pos:start="38:65" pos:end="40:9">{<block_content pos:start="39:13" pos:end="39:84">
            <return pos:start="39:13" pos:end="39:84">return <expr pos:start="39:20" pos:end="39:83"><call pos:start="39:20" pos:end="39:83"><name pos:start="39:20" pos:end="39:33"><name pos:start="39:20" pos:end="39:25">Double</name><operator pos:start="39:26" pos:end="39:26">.</operator><name pos:start="39:27" pos:end="39:33">compare</name></name><argument_list pos:start="39:34" pos:end="39:83">(<argument pos:start="39:35" pos:end="39:57"><expr pos:start="39:35" pos:end="39:57"><call pos:start="39:35" pos:end="39:57"><name pos:start="39:35" pos:end="39:55"><name pos:start="39:35" pos:end="39:36">l1</name><operator pos:start="39:37" pos:end="39:37">.</operator><name pos:start="39:38" pos:end="39:55">getTriggerDistance</name></name><argument_list pos:start="39:56" pos:end="39:57">()</argument_list></call></expr></argument>, <argument pos:start="39:60" pos:end="39:82"><expr pos:start="39:60" pos:end="39:82"><call pos:start="39:60" pos:end="39:82"><name pos:start="39:60" pos:end="39:80"><name pos:start="39:60" pos:end="39:61">l2</name><operator pos:start="39:62" pos:end="39:62">.</operator><name pos:start="39:63" pos:end="39:80">getTriggerDistance</name></name><argument_list pos:start="39:81" pos:end="39:82">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
        </block_content>}</block></lambda></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></constructor>

	<function pos:start="43:9" pos:end="77:5"><annotation pos:start="43:9" pos:end="43:17">@<name pos:start="43:10" pos:end="43:17">Override</name></annotation>
	<type pos:start="44:9" pos:end="44:19"><specifier pos:start="44:9" pos:end="44:14">public</specifier> <name pos:start="44:16" pos:end="44:19">void</name></type> <name pos:start="44:21" pos:end="44:25">avoid</name><parameter_list pos:start="44:26" pos:end="44:58">(<parameter pos:start="44:27" pos:end="44:57"><decl pos:start="44:27" pos:end="44:57"><type pos:start="44:27" pos:end="44:50"><name pos:start="44:27" pos:end="44:50"><name pos:start="44:27" pos:end="44:35">ArrayList</name><argument_list type="generic" pos:start="44:36" pos:end="44:50">&lt;<argument pos:start="44:37" pos:end="44:49"><name pos:start="44:37" pos:end="44:49">DroneSnapshot</name></argument>&gt;</argument_list></name></type> <name pos:start="44:52" pos:end="44:57">drones</name></decl></parameter>)</parameter_list> <block pos:start="44:60" pos:end="77:5">{<block_content pos:start="45:9" pos:end="76:9">
        <expr_stmt pos:start="45:9" pos:end="45:34"><expr pos:start="45:9" pos:end="45:33"><call pos:start="45:9" pos:end="45:33"><name pos:start="45:9" pos:end="45:25">setupLookupTables</name><argument_list pos:start="45:26" pos:end="45:33">(<argument pos:start="45:27" pos:end="45:32"><expr pos:start="45:27" pos:end="45:32"><name pos:start="45:27" pos:end="45:32">drones</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <for pos:start="46:9" pos:end="61:9">for <control pos:start="46:13" pos:end="46:71">(<init pos:start="46:14" pos:end="46:70"><decl pos:start="46:14" pos:end="46:70"><type pos:start="46:14" pos:end="46:22"><name pos:start="46:14" pos:end="46:22">DronePair</name></type> <name pos:start="46:24" pos:end="46:27">pair</name> <range pos:start="46:29" pos:end="46:70">: <expr pos:start="46:31" pos:end="46:70"><call pos:start="46:31" pos:end="46:70"><name pos:start="46:31" pos:end="46:62"><name pos:start="46:31" pos:end="46:52">CollisionAvoidanceUtil</name><operator pos:start="46:53" pos:end="46:53">.</operator><name pos:start="46:54" pos:end="46:62">findPairs</name></name><argument_list pos:start="46:63" pos:end="46:70">(<argument pos:start="46:64" pos:end="46:69"><expr pos:start="46:64" pos:end="46:69"><name pos:start="46:64" pos:end="46:69">drones</name></expr></argument>)</argument_list></call></expr></range></decl></init>)</control> <block pos:start="46:73" pos:end="61:9">{<block_content pos:start="47:13" pos:end="60:13">
            <decl_stmt pos:start="47:13" pos:end="47:50"><decl pos:start="47:13" pos:end="47:49"><type pos:start="47:13" pos:end="47:18"><name pos:start="47:13" pos:end="47:18">double</name></type> <name pos:start="47:20" pos:end="47:27">distance</name> <init pos:start="47:29" pos:end="47:49">= <expr pos:start="47:31" pos:end="47:49"><call pos:start="47:31" pos:end="47:49"><name pos:start="47:31" pos:end="47:47"><name pos:start="47:31" pos:end="47:34">pair</name><operator pos:start="47:35" pos:end="47:35">.</operator><name pos:start="47:36" pos:end="47:47">findDistance</name></name><argument_list pos:start="47:48" pos:end="47:49">()</argument_list></call></expr></init></decl>;</decl_stmt>
            <if_stmt pos:start="48:13" pos:end="54:13"><if pos:start="48:13" pos:end="54:13">if <condition pos:start="48:16" pos:end="49:64">(<expr pos:start="48:17" pos:end="49:63"><operator pos:start="48:17" pos:end="48:17">!</operator><call pos:start="48:18" pos:end="48:61"><name pos:start="48:18" pos:end="48:43"><name pos:start="48:18" pos:end="48:31">distanceLookup</name><operator pos:start="48:32" pos:end="48:32">.</operator><name pos:start="48:33" pos:end="48:43">containsKey</name></name><argument_list pos:start="48:44" pos:end="48:61">(<argument pos:start="48:45" pos:end="48:60"><expr pos:start="48:45" pos:end="48:60"><call pos:start="48:45" pos:end="48:60"><name pos:start="48:45" pos:end="48:58"><name pos:start="48:45" pos:end="48:48">pair</name><operator pos:start="48:49" pos:end="48:49">.</operator><name pos:start="48:50" pos:end="48:50">a</name><operator pos:start="48:51" pos:end="48:51">.</operator><name pos:start="48:52" pos:end="48:58">getName</name></name><argument_list pos:start="48:59" pos:end="48:60">()</argument_list></call></expr></argument>)</argument_list></call> <operator pos:start="48:63" pos:end="48:64">||</operator> 
                <name pos:start="49:17" pos:end="49:24">distance</name> <operator pos:start="49:26" pos:end="49:26">&lt;</operator> <call pos:start="49:28" pos:end="49:63"><name pos:start="49:28" pos:end="49:45"><name pos:start="49:28" pos:end="49:41">distanceLookup</name><operator pos:start="49:42" pos:end="49:42">.</operator><name pos:start="49:43" pos:end="49:45">get</name></name><argument_list pos:start="49:46" pos:end="49:63">(<argument pos:start="49:47" pos:end="49:62"><expr pos:start="49:47" pos:end="49:62"><call pos:start="49:47" pos:end="49:62"><name pos:start="49:47" pos:end="49:60"><name pos:start="49:47" pos:end="49:50">pair</name><operator pos:start="49:51" pos:end="49:51">.</operator><name pos:start="49:52" pos:end="49:52">a</name><operator pos:start="49:53" pos:end="49:53">.</operator><name pos:start="49:54" pos:end="49:60">getName</name></name><argument_list pos:start="49:61" pos:end="49:62">()</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="49:66" pos:end="54:13">{<block_content pos:start="51:17" pos:end="52:72">    
                
                <expr_stmt pos:start="51:17" pos:end="51:63"><expr pos:start="51:17" pos:end="51:62"><call pos:start="51:17" pos:end="51:62"><name pos:start="51:17" pos:end="51:34"><name pos:start="51:17" pos:end="51:30">distanceLookup</name><operator pos:start="51:31" pos:end="51:31">.</operator><name pos:start="51:32" pos:end="51:34">put</name></name><argument_list pos:start="51:35" pos:end="51:62">(<argument pos:start="51:36" pos:end="51:51"><expr pos:start="51:36" pos:end="51:51"><call pos:start="51:36" pos:end="51:51"><name pos:start="51:36" pos:end="51:49"><name pos:start="51:36" pos:end="51:39">pair</name><operator pos:start="51:40" pos:end="51:40">.</operator><name pos:start="51:41" pos:end="51:41">a</name><operator pos:start="51:42" pos:end="51:42">.</operator><name pos:start="51:43" pos:end="51:49">getName</name></name><argument_list pos:start="51:50" pos:end="51:51">()</argument_list></call></expr></argument>, <argument pos:start="51:54" pos:end="51:61"><expr pos:start="51:54" pos:end="51:61"><name pos:start="51:54" pos:end="51:61">distance</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt pos:start="52:17" pos:end="52:72"><expr pos:start="52:17" pos:end="52:71"><call pos:start="52:17" pos:end="52:71"><name pos:start="52:17" pos:end="52:35"><name pos:start="52:17" pos:end="52:31">nearestNeighbor</name><operator pos:start="52:32" pos:end="52:32">.</operator><name pos:start="52:33" pos:end="52:35">put</name></name><argument_list pos:start="52:36" pos:end="52:71">(<argument pos:start="52:37" pos:end="52:52"><expr pos:start="52:37" pos:end="52:52"><call pos:start="52:37" pos:end="52:52"><name pos:start="52:37" pos:end="52:50"><name pos:start="52:37" pos:end="52:40">pair</name><operator pos:start="52:41" pos:end="52:41">.</operator><name pos:start="52:42" pos:end="52:42">a</name><operator pos:start="52:43" pos:end="52:43">.</operator><name pos:start="52:44" pos:end="52:50">getName</name></name><argument_list pos:start="52:51" pos:end="52:52">()</argument_list></call></expr></argument>, <argument pos:start="52:55" pos:end="52:70"><expr pos:start="52:55" pos:end="52:70"><call pos:start="52:55" pos:end="52:70"><name pos:start="52:55" pos:end="52:68"><name pos:start="52:55" pos:end="52:58">pair</name><operator pos:start="52:59" pos:end="52:59">.</operator><name pos:start="52:60" pos:end="52:60">b</name><operator pos:start="52:61" pos:end="52:61">.</operator><name pos:start="52:62" pos:end="52:68">getName</name></name><argument_list pos:start="52:69" pos:end="52:70">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>
            <if_stmt pos:start="55:13" pos:end="60:13"><if pos:start="55:13" pos:end="60:13">if <condition pos:start="55:16" pos:end="56:64">(<expr pos:start="55:17" pos:end="56:63"><operator pos:start="55:17" pos:end="55:17">!</operator><call pos:start="55:18" pos:end="55:61"><name pos:start="55:18" pos:end="55:43"><name pos:start="55:18" pos:end="55:31">distanceLookup</name><operator pos:start="55:32" pos:end="55:32">.</operator><name pos:start="55:33" pos:end="55:43">containsKey</name></name><argument_list pos:start="55:44" pos:end="55:61">(<argument pos:start="55:45" pos:end="55:60"><expr pos:start="55:45" pos:end="55:60"><call pos:start="55:45" pos:end="55:60"><name pos:start="55:45" pos:end="55:58"><name pos:start="55:45" pos:end="55:48">pair</name><operator pos:start="55:49" pos:end="55:49">.</operator><name pos:start="55:50" pos:end="55:50">b</name><operator pos:start="55:51" pos:end="55:51">.</operator><name pos:start="55:52" pos:end="55:58">getName</name></name><argument_list pos:start="55:59" pos:end="55:60">()</argument_list></call></expr></argument>)</argument_list></call> <operator pos:start="55:63" pos:end="55:64">||</operator>
                <name pos:start="56:17" pos:end="56:24">distance</name> <operator pos:start="56:26" pos:end="56:26">&lt;</operator> <call pos:start="56:28" pos:end="56:63"><name pos:start="56:28" pos:end="56:45"><name pos:start="56:28" pos:end="56:41">distanceLookup</name><operator pos:start="56:42" pos:end="56:42">.</operator><name pos:start="56:43" pos:end="56:45">get</name></name><argument_list pos:start="56:46" pos:end="56:63">(<argument pos:start="56:47" pos:end="56:62"><expr pos:start="56:47" pos:end="56:62"><call pos:start="56:47" pos:end="56:62"><name pos:start="56:47" pos:end="56:60"><name pos:start="56:47" pos:end="56:50">pair</name><operator pos:start="56:51" pos:end="56:51">.</operator><name pos:start="56:52" pos:end="56:52">b</name><operator pos:start="56:53" pos:end="56:53">.</operator><name pos:start="56:54" pos:end="56:60">getName</name></name><argument_list pos:start="56:61" pos:end="56:62">()</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="56:66" pos:end="60:13">{<block_content pos:start="58:17" pos:end="59:72">
                
                <expr_stmt pos:start="58:17" pos:end="58:63"><expr pos:start="58:17" pos:end="58:62"><call pos:start="58:17" pos:end="58:62"><name pos:start="58:17" pos:end="58:34"><name pos:start="58:17" pos:end="58:30">distanceLookup</name><operator pos:start="58:31" pos:end="58:31">.</operator><name pos:start="58:32" pos:end="58:34">put</name></name><argument_list pos:start="58:35" pos:end="58:62">(<argument pos:start="58:36" pos:end="58:51"><expr pos:start="58:36" pos:end="58:51"><call pos:start="58:36" pos:end="58:51"><name pos:start="58:36" pos:end="58:49"><name pos:start="58:36" pos:end="58:39">pair</name><operator pos:start="58:40" pos:end="58:40">.</operator><name pos:start="58:41" pos:end="58:41">b</name><operator pos:start="58:42" pos:end="58:42">.</operator><name pos:start="58:43" pos:end="58:49">getName</name></name><argument_list pos:start="58:50" pos:end="58:51">()</argument_list></call></expr></argument>, <argument pos:start="58:54" pos:end="58:61"><expr pos:start="58:54" pos:end="58:61"><name pos:start="58:54" pos:end="58:61">distance</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt pos:start="59:17" pos:end="59:72"><expr pos:start="59:17" pos:end="59:71"><call pos:start="59:17" pos:end="59:71"><name pos:start="59:17" pos:end="59:35"><name pos:start="59:17" pos:end="59:31">nearestNeighbor</name><operator pos:start="59:32" pos:end="59:32">.</operator><name pos:start="59:33" pos:end="59:35">put</name></name><argument_list pos:start="59:36" pos:end="59:71">(<argument pos:start="59:37" pos:end="59:52"><expr pos:start="59:37" pos:end="59:52"><call pos:start="59:37" pos:end="59:52"><name pos:start="59:37" pos:end="59:50"><name pos:start="59:37" pos:end="59:40">pair</name><operator pos:start="59:41" pos:end="59:41">.</operator><name pos:start="59:42" pos:end="59:42">b</name><operator pos:start="59:43" pos:end="59:43">.</operator><name pos:start="59:44" pos:end="59:50">getName</name></name><argument_list pos:start="59:51" pos:end="59:52">()</argument_list></call></expr></argument>, <argument pos:start="59:55" pos:end="59:70"><expr pos:start="59:55" pos:end="59:70"><call pos:start="59:55" pos:end="59:70"><name pos:start="59:55" pos:end="59:68"><name pos:start="59:55" pos:end="59:58">pair</name><operator pos:start="59:59" pos:end="59:59">.</operator><name pos:start="59:60" pos:end="59:60">a</name><operator pos:start="59:61" pos:end="59:61">.</operator><name pos:start="59:62" pos:end="59:68">getName</name></name><argument_list pos:start="59:69" pos:end="59:70">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            </block_content>}</block></if></if_stmt>
        </block_content>}</block></for>

        <for pos:start="63:9" pos:end="76:9">for <control pos:start="63:13" pos:end="63:42">(<init pos:start="63:14" pos:end="63:41"><decl pos:start="63:14" pos:end="63:41"><type pos:start="63:14" pos:end="63:26"><name pos:start="63:14" pos:end="63:26">DroneSnapshot</name></type> <name pos:start="63:28" pos:end="63:32">drone</name> <range pos:start="63:34" pos:end="63:41">: <expr pos:start="63:36" pos:end="63:41"><name pos:start="63:36" pos:end="63:41">drones</name></expr></range></decl></init>)</control> <block pos:start="63:44" pos:end="76:9">{<block_content pos:start="64:13" pos:end="75:43">
            <decl_stmt pos:start="64:13" pos:end="64:48"><decl pos:start="64:13" pos:end="64:47"><type pos:start="64:13" pos:end="64:19"><name pos:start="64:13" pos:end="64:19">IAction</name></type> <name pos:start="64:21" pos:end="64:31">activeLayer</name> <init pos:start="64:33" pos:end="64:47">= <expr pos:start="64:35" pos:end="64:47"><name pos:start="64:35" pos:end="64:47">defaultAction</name></expr></init></decl>;</decl_stmt>
            <if_stmt pos:start="65:13" pos:end="74:13"><if pos:start="65:13" pos:end="74:13">if <condition pos:start="65:16" pos:end="65:43">(<expr pos:start="65:17" pos:end="65:42"><call pos:start="65:17" pos:end="65:37"><name pos:start="65:17" pos:end="65:35"><name pos:start="65:17" pos:end="65:30">distanceLookup</name><operator pos:start="65:31" pos:end="65:31">.</operator><name pos:start="65:32" pos:end="65:35">size</name></name><argument_list pos:start="65:36" pos:end="65:37">()</argument_list></call> <operator pos:start="65:39" pos:end="65:40">!=</operator> <literal type="number" pos:start="65:42" pos:end="65:42">0</literal></expr>)</condition> <block pos:start="65:45" pos:end="74:13">{<block_content pos:start="66:17" pos:end="73:17">
                <decl_stmt pos:start="66:17" pos:end="66:70"><decl pos:start="66:17" pos:end="66:69"><type pos:start="66:17" pos:end="66:22"><name pos:start="66:17" pos:end="66:22">double</name></type> <name pos:start="66:24" pos:end="66:31">distance</name> <init pos:start="66:33" pos:end="66:69">= <expr pos:start="66:35" pos:end="66:69"><call pos:start="66:35" pos:end="66:69"><name pos:start="66:35" pos:end="66:52"><name pos:start="66:35" pos:end="66:48">distanceLookup</name><operator pos:start="66:49" pos:end="66:49">.</operator><name pos:start="66:50" pos:end="66:52">get</name></name><argument_list pos:start="66:53" pos:end="66:69">(<argument pos:start="66:54" pos:end="66:68"><expr pos:start="66:54" pos:end="66:68"><call pos:start="66:54" pos:end="66:68"><name pos:start="66:54" pos:end="66:66"><name pos:start="66:54" pos:end="66:58">drone</name><operator pos:start="66:59" pos:end="66:59">.</operator><name pos:start="66:60" pos:end="66:66">getName</name></name><argument_list pos:start="66:67" pos:end="66:68">()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
                <decl_stmt pos:start="67:17" pos:end="67:60"><decl pos:start="67:17" pos:end="67:59"><type pos:start="67:17" pos:end="67:22"><name pos:start="67:17" pos:end="67:22">ILayer</name></type> <name pos:start="67:24" pos:end="67:28">layer</name> <init pos:start="67:30" pos:end="67:59">= <expr pos:start="67:32" pos:end="67:59"><call pos:start="67:32" pos:end="67:59"><name pos:start="67:32" pos:end="67:49">findInnerMostLayer</name><argument_list pos:start="67:50" pos:end="67:59">(<argument pos:start="67:51" pos:end="67:58"><expr pos:start="67:51" pos:end="67:58"><name pos:start="67:51" pos:end="67:58">distance</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
                <if_stmt pos:start="68:17" pos:end="73:17"><if pos:start="68:17" pos:end="73:17">if <condition pos:start="68:20" pos:end="68:34">(<expr pos:start="68:21" pos:end="68:33"><name pos:start="68:21" pos:end="68:25">layer</name> <operator pos:start="68:27" pos:end="68:28">!=</operator> <literal type="null" pos:start="68:30" pos:end="68:33">null</literal></expr>)</condition> <block pos:start="68:36" pos:end="73:17">{<block_content pos:start="69:21" pos:end="72:37">
                    <expr_stmt pos:start="69:21" pos:end="69:40"><expr pos:start="69:21" pos:end="69:39"><name pos:start="69:21" pos:end="69:31">activeLayer</name> <operator pos:start="69:33" pos:end="69:33">=</operator> <name pos:start="69:35" pos:end="69:39">layer</name></expr>;</expr_stmt>
                    <decl_stmt pos:start="70:21" pos:end="70:75"><decl pos:start="70:21" pos:end="70:74"><type pos:start="70:21" pos:end="70:26"><name pos:start="70:21" pos:end="70:26">String</name></type> <name pos:start="70:28" pos:end="70:35">neighbor</name> <init pos:start="70:37" pos:end="70:74">= <expr pos:start="70:39" pos:end="70:74"><call pos:start="70:39" pos:end="70:74"><name pos:start="70:39" pos:end="70:57"><name pos:start="70:39" pos:end="70:53">nearestNeighbor</name><operator pos:start="70:54" pos:end="70:54">.</operator><name pos:start="70:55" pos:end="70:57">get</name></name><argument_list pos:start="70:58" pos:end="70:74">(<argument pos:start="70:59" pos:end="70:73"><expr pos:start="70:59" pos:end="70:73"><call pos:start="70:59" pos:end="70:73"><name pos:start="70:59" pos:end="70:71"><name pos:start="70:59" pos:end="70:63">drone</name><operator pos:start="70:64" pos:end="70:64">.</operator><name pos:start="70:65" pos:end="70:71">getName</name></name><argument_list pos:start="70:72" pos:end="70:73">()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
                    <decl_stmt pos:start="71:21" pos:end="71:151"><decl pos:start="71:21" pos:end="71:150"><type pos:start="71:21" pos:end="71:26"><name pos:start="71:21" pos:end="71:26">String</name></type> <name pos:start="71:28" pos:end="71:30">msg</name> <init pos:start="71:32" pos:end="71:150">= <expr pos:start="71:34" pos:end="71:150"><call pos:start="71:34" pos:end="71:150"><name pos:start="71:34" pos:end="71:46"><name pos:start="71:34" pos:end="71:39">String</name><operator pos:start="71:40" pos:end="71:40">.</operator><name pos:start="71:41" pos:end="71:46">format</name></name><argument_list pos:start="71:47" pos:end="71:150">(<argument pos:start="71:48" pos:end="71:112"><expr pos:start="71:48" pos:end="71:112"><literal type="string" pos:start="71:48" pos:end="71:112">"Collision avoidance is taking action. %s is %.2f meters from %s"</literal></expr></argument>, <argument pos:start="71:115" pos:end="71:129"><expr pos:start="71:115" pos:end="71:129"><call pos:start="71:115" pos:end="71:129"><name pos:start="71:115" pos:end="71:127"><name pos:start="71:115" pos:end="71:119">drone</name><operator pos:start="71:120" pos:end="71:120">.</operator><name pos:start="71:121" pos:end="71:127">getName</name></name><argument_list pos:start="71:128" pos:end="71:129">()</argument_list></call></expr></argument>, <argument pos:start="71:132" pos:end="71:139"><expr pos:start="71:132" pos:end="71:139"><name pos:start="71:132" pos:end="71:139">distance</name></expr></argument>, <argument pos:start="71:142" pos:end="71:149"><expr pos:start="71:142" pos:end="71:149"><name pos:start="71:142" pos:end="71:149">neighbor</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
                    <expr_stmt pos:start="72:21" pos:end="72:37"><expr pos:start="72:21" pos:end="72:36"><call pos:start="72:21" pos:end="72:36"><name pos:start="72:21" pos:end="72:31"><name pos:start="72:21" pos:end="72:26">LOGGER</name><operator pos:start="72:27" pos:end="72:27">.</operator><name pos:start="72:28" pos:end="72:31">warn</name></name><argument_list pos:start="72:32" pos:end="72:36">(<argument pos:start="72:33" pos:end="72:35"><expr pos:start="72:33" pos:end="72:35"><name pos:start="72:33" pos:end="72:35">msg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                </block_content>}</block></if></if_stmt>
            </block_content>}</block></if></if_stmt>
            <expr_stmt pos:start="75:13" pos:end="75:43"><expr pos:start="75:13" pos:end="75:42"><call pos:start="75:13" pos:end="75:42"><name pos:start="75:13" pos:end="75:35"><name pos:start="75:13" pos:end="75:23">activeLayer</name><operator pos:start="75:24" pos:end="75:24">.</operator><name pos:start="75:25" pos:end="75:35">applyAction</name></name><argument_list pos:start="75:36" pos:end="75:42">(<argument pos:start="75:37" pos:end="75:41"><expr pos:start="75:37" pos:end="75:41"><name pos:start="75:37" pos:end="75:41">drone</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></for>
    </block_content>}</block></function>

    <function pos:start="79:5" pos:end="86:5"><type pos:start="79:5" pos:end="79:16"><specifier pos:start="79:5" pos:end="79:11">private</specifier> <name pos:start="79:13" pos:end="79:16">void</name></type> <name pos:start="79:18" pos:end="79:34">setupLookupTables</name><parameter_list pos:start="79:35" pos:end="79:67">(<parameter pos:start="79:36" pos:end="79:66"><decl pos:start="79:36" pos:end="79:66"><type pos:start="79:36" pos:end="79:59"><name pos:start="79:36" pos:end="79:59"><name pos:start="79:36" pos:end="79:44">ArrayList</name><argument_list type="generic" pos:start="79:45" pos:end="79:59">&lt;<argument pos:start="79:46" pos:end="79:58"><name pos:start="79:46" pos:end="79:58">DroneSnapshot</name></argument>&gt;</argument_list></name></type> <name pos:start="79:61" pos:end="79:66">drones</name></decl></parameter>)</parameter_list> <block pos:start="79:69" pos:end="86:5">{<block_content pos:start="80:9" pos:end="85:9">
        <expr_stmt pos:start="80:9" pos:end="80:27"><expr pos:start="80:9" pos:end="80:26"><call pos:start="80:9" pos:end="80:26"><name pos:start="80:9" pos:end="80:24"><name pos:start="80:9" pos:end="80:18">nameLookup</name><operator pos:start="80:19" pos:end="80:19">.</operator><name pos:start="80:20" pos:end="80:24">clear</name></name><argument_list pos:start="80:25" pos:end="80:26">()</argument_list></call></expr>;</expr_stmt>
        <expr_stmt pos:start="81:9" pos:end="81:31"><expr pos:start="81:9" pos:end="81:30"><call pos:start="81:9" pos:end="81:30"><name pos:start="81:9" pos:end="81:28"><name pos:start="81:9" pos:end="81:22">distanceLookup</name><operator pos:start="81:23" pos:end="81:23">.</operator><name pos:start="81:24" pos:end="81:28">clear</name></name><argument_list pos:start="81:29" pos:end="81:30">()</argument_list></call></expr>;</expr_stmt>
        <expr_stmt pos:start="82:9" pos:end="82:32"><expr pos:start="82:9" pos:end="82:31"><call pos:start="82:9" pos:end="82:31"><name pos:start="82:9" pos:end="82:29"><name pos:start="82:9" pos:end="82:23">nearestNeighbor</name><operator pos:start="82:24" pos:end="82:24">.</operator><name pos:start="82:25" pos:end="82:29">clear</name></name><argument_list pos:start="82:30" pos:end="82:31">()</argument_list></call></expr>;</expr_stmt>
        <for pos:start="83:9" pos:end="85:9">for <control pos:start="83:13" pos:end="83:42">(<init pos:start="83:14" pos:end="83:41"><decl pos:start="83:14" pos:end="83:41"><type pos:start="83:14" pos:end="83:26"><name pos:start="83:14" pos:end="83:26">DroneSnapshot</name></type> <name pos:start="83:28" pos:end="83:32">drone</name> <range pos:start="83:34" pos:end="83:41">: <expr pos:start="83:36" pos:end="83:41"><name pos:start="83:36" pos:end="83:41">drones</name></expr></range></decl></init>)</control> <block pos:start="83:44" pos:end="85:9">{<block_content pos:start="84:13" pos:end="84:51">
            <expr_stmt pos:start="84:13" pos:end="84:51"><expr pos:start="84:13" pos:end="84:50"><call pos:start="84:13" pos:end="84:50"><name pos:start="84:13" pos:end="84:26"><name pos:start="84:13" pos:end="84:22">nameLookup</name><operator pos:start="84:23" pos:end="84:23">.</operator><name pos:start="84:24" pos:end="84:26">put</name></name><argument_list pos:start="84:27" pos:end="84:50">(<argument pos:start="84:28" pos:end="84:42"><expr pos:start="84:28" pos:end="84:42"><call pos:start="84:28" pos:end="84:42"><name pos:start="84:28" pos:end="84:40"><name pos:start="84:28" pos:end="84:32">drone</name><operator pos:start="84:33" pos:end="84:33">.</operator><name pos:start="84:34" pos:end="84:40">getName</name></name><argument_list pos:start="84:41" pos:end="84:42">()</argument_list></call></expr></argument>, <argument pos:start="84:45" pos:end="84:49"><expr pos:start="84:45" pos:end="84:49"><name pos:start="84:45" pos:end="84:49">drone</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></for>
    </block_content>}</block></function>
    
    <function pos:start="88:5" pos:end="95:5"><type pos:start="88:5" pos:end="88:18"><specifier pos:start="88:5" pos:end="88:11">private</specifier> <name pos:start="88:13" pos:end="88:18">ILayer</name></type> <name pos:start="88:20" pos:end="88:37">findInnerMostLayer</name><parameter_list pos:start="88:38" pos:end="88:54">(<parameter pos:start="88:39" pos:end="88:53"><decl pos:start="88:39" pos:end="88:53"><type pos:start="88:39" pos:end="88:44"><name pos:start="88:39" pos:end="88:44">double</name></type> <name pos:start="88:46" pos:end="88:53">distance</name></decl></parameter>)</parameter_list> <block pos:start="88:56" pos:end="95:5">{<block_content pos:start="89:9" pos:end="94:20">
        <for pos:start="89:9" pos:end="93:9">for <control pos:start="89:13" pos:end="89:34">(<init pos:start="89:14" pos:end="89:33"><decl pos:start="89:14" pos:end="89:33"><type pos:start="89:14" pos:end="89:19"><name pos:start="89:14" pos:end="89:19">ILayer</name></type> <name pos:start="89:21" pos:end="89:25">layer</name><range pos:start="89:26" pos:end="89:33">: <expr pos:start="89:28" pos:end="89:33"><name pos:start="89:28" pos:end="89:33">layers</name></expr></range></decl></init>)</control> <block pos:start="89:36" pos:end="93:9">{<block_content pos:start="90:13" pos:end="92:13">
            <if_stmt pos:start="90:13" pos:end="92:13"><if pos:start="90:13" pos:end="92:13">if <condition pos:start="90:16" pos:end="90:44">(<expr pos:start="90:17" pos:end="90:43"><call pos:start="90:17" pos:end="90:43"><name pos:start="90:17" pos:end="90:33"><name pos:start="90:17" pos:end="90:21">layer</name><operator pos:start="90:22" pos:end="90:22">.</operator><name pos:start="90:23" pos:end="90:33">isTriggered</name></name><argument_list pos:start="90:34" pos:end="90:43">(<argument pos:start="90:35" pos:end="90:42"><expr pos:start="90:35" pos:end="90:42"><name pos:start="90:35" pos:end="90:42">distance</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="90:46" pos:end="92:13">{<block_content pos:start="91:17" pos:end="91:29">
                <return pos:start="91:17" pos:end="91:29">return <expr pos:start="91:24" pos:end="91:28"><name pos:start="91:24" pos:end="91:28">layer</name></expr>;</return>
            </block_content>}</block></if></if_stmt>
        </block_content>}</block></for>
        <return pos:start="94:9" pos:end="94:20">return <expr pos:start="94:16" pos:end="94:19"><literal type="null" pos:start="94:16" pos:end="94:19">null</literal></expr>;</return>
    </block_content>}</block></function>

}</block></class></unit>
