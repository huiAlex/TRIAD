<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="Java" filename="flatCode/Geometry.java" pos:tabs="8"><package pos:start="1:1" pos:end="1:66">package <name pos:start="1:9" pos:end="1:65"><name pos:start="1:9" pos:end="1:11">edu</name><operator pos:start="1:12" pos:end="1:12">.</operator><name pos:start="1:13" pos:end="1:14">nd</name><operator pos:start="1:15" pos:end="1:15">.</operator><name pos:start="1:16" pos:end="1:24">dronology</name><operator pos:start="1:25" pos:end="1:25">.</operator><name pos:start="1:26" pos:end="1:33">services</name><operator pos:start="1:34" pos:end="1:34">.</operator><name pos:start="1:35" pos:end="1:44">extensions</name><operator pos:start="1:45" pos:end="1:45">.</operator><name pos:start="1:46" pos:end="1:56">areamapping</name><operator pos:start="1:57" pos:end="1:57">.</operator><name pos:start="1:58" pos:end="1:65">internal</name></name>;</package>




<import pos:start="6:1" pos:end="6:28">import <name pos:start="6:8" pos:end="6:27"><name pos:start="6:8" pos:end="6:11">java</name><operator pos:start="6:12" pos:end="6:12">.</operator><name pos:start="6:13" pos:end="6:15">awt</name><operator pos:start="6:16" pos:end="6:16">.</operator><name pos:start="6:17" pos:end="6:20">geom</name><operator pos:start="6:21" pos:end="6:21">.</operator><name pos:start="6:22" pos:end="6:27">Line2D</name></name>;</import>
<import pos:start="7:1" pos:end="7:28">import <name pos:start="7:8" pos:end="7:27"><name pos:start="7:8" pos:end="7:11">java</name><operator pos:start="7:12" pos:end="7:12">.</operator><name pos:start="7:13" pos:end="7:15">awt</name><operator pos:start="7:16" pos:end="7:16">.</operator><name pos:start="7:17" pos:end="7:20">geom</name><operator pos:start="7:21" pos:end="7:21">.</operator><name pos:start="7:22" pos:end="7:27">Path2D</name></name>;</import>
<import pos:start="8:1" pos:end="8:29">import <name pos:start="8:8" pos:end="8:28"><name pos:start="8:8" pos:end="8:11">java</name><operator pos:start="8:12" pos:end="8:12">.</operator><name pos:start="8:13" pos:end="8:15">awt</name><operator pos:start="8:16" pos:end="8:16">.</operator><name pos:start="8:17" pos:end="8:20">geom</name><operator pos:start="8:21" pos:end="8:21">.</operator><name pos:start="8:22" pos:end="8:28">Point2D</name></name>;</import>
<import pos:start="9:1" pos:end="9:27">import <name pos:start="9:8" pos:end="9:26"><name pos:start="9:8" pos:end="9:11">java</name><operator pos:start="9:12" pos:end="9:12">.</operator><name pos:start="9:13" pos:end="9:16">util</name><operator pos:start="9:17" pos:end="9:17">.</operator><name pos:start="9:18" pos:end="9:26">ArrayList</name></name>;</import>
<import pos:start="10:1" pos:end="10:25">import <name pos:start="10:8" pos:end="10:24"><name pos:start="10:8" pos:end="10:11">java</name><operator pos:start="10:12" pos:end="10:12">.</operator><name pos:start="10:13" pos:end="10:16">util</name><operator pos:start="10:17" pos:end="10:17">.</operator><name pos:start="10:18" pos:end="10:24">HashSet</name></name>;</import>
<import pos:start="11:1" pos:end="11:22">import <name pos:start="11:8" pos:end="11:21"><name pos:start="11:8" pos:end="11:11">java</name><operator pos:start="11:12" pos:end="11:12">.</operator><name pos:start="11:13" pos:end="11:16">util</name><operator pos:start="11:17" pos:end="11:17">.</operator><name pos:start="11:18" pos:end="11:21">List</name></name>;</import>
<import pos:start="12:1" pos:end="12:24">import <name pos:start="12:8" pos:end="12:23"><name pos:start="12:8" pos:end="12:11">java</name><operator pos:start="12:12" pos:end="12:12">.</operator><name pos:start="12:13" pos:end="12:16">util</name><operator pos:start="12:17" pos:end="12:17">.</operator><name pos:start="12:18" pos:end="12:23">Vector</name></name>;</import>

<import pos:start="14:1" pos:end="14:78">import <name pos:start="14:8" pos:end="14:77"><name pos:start="14:8" pos:end="14:10">edu</name><operator pos:start="14:11" pos:end="14:11">.</operator><name pos:start="14:12" pos:end="14:13">nd</name><operator pos:start="14:14" pos:end="14:14">.</operator><name pos:start="14:15" pos:end="14:23">dronology</name><operator pos:start="14:24" pos:end="14:24">.</operator><name pos:start="14:25" pos:end="14:32">services</name><operator pos:start="14:33" pos:end="14:33">.</operator><name pos:start="14:34" pos:end="14:43">extensions</name><operator pos:start="14:44" pos:end="14:44">.</operator><name pos:start="14:45" pos:end="14:55">areamapping</name><operator pos:start="14:56" pos:end="14:56">.</operator><name pos:start="14:57" pos:end="14:61">model</name><operator pos:start="14:62" pos:end="14:62">.</operator><name pos:start="14:63" pos:end="14:77">RiverSubsegment</name></name>;</import>
<import pos:start="15:1" pos:end="15:77">import <name pos:start="15:8" pos:end="15:76"><name pos:start="15:8" pos:end="15:10">edu</name><operator pos:start="15:11" pos:end="15:11">.</operator><name pos:start="15:12" pos:end="15:13">nd</name><operator pos:start="15:14" pos:end="15:14">.</operator><name pos:start="15:15" pos:end="15:23">dronology</name><operator pos:start="15:24" pos:end="15:24">.</operator><name pos:start="15:25" pos:end="15:32">services</name><operator pos:start="15:33" pos:end="15:33">.</operator><name pos:start="15:34" pos:end="15:43">extensions</name><operator pos:start="15:44" pos:end="15:44">.</operator><name pos:start="15:45" pos:end="15:55">areamapping</name><operator pos:start="15:56" pos:end="15:56">.</operator><name pos:start="15:57" pos:end="15:61">model</name><operator pos:start="15:62" pos:end="15:62">.</operator><name pos:start="15:63" pos:end="15:76">RoutePrimitive</name></name>;</import>
<import pos:start="16:1" pos:end="16:71">import <name pos:start="16:8" pos:end="16:70"><name pos:start="16:8" pos:end="16:10">edu</name><operator pos:start="16:11" pos:end="16:11">.</operator><name pos:start="16:12" pos:end="16:13">nd</name><operator pos:start="16:14" pos:end="16:14">.</operator><name pos:start="16:15" pos:end="16:23">dronology</name><operator pos:start="16:24" pos:end="16:24">.</operator><name pos:start="16:25" pos:end="16:32">services</name><operator pos:start="16:33" pos:end="16:33">.</operator><name pos:start="16:34" pos:end="16:43">extensions</name><operator pos:start="16:44" pos:end="16:44">.</operator><name pos:start="16:45" pos:end="16:55">areamapping</name><operator pos:start="16:56" pos:end="16:56">.</operator><name pos:start="16:57" pos:end="16:60">util</name><operator pos:start="16:61" pos:end="16:61">.</operator><name pos:start="16:62" pos:end="16:70">Utilities</name></name>;</import>
<class pos:start="17:1" pos:end="476:1"><specifier pos:start="17:1" pos:end="17:6">public</specifier> class <name pos:start="17:14" pos:end="17:21">Geometry</name> <block pos:start="17:23" pos:end="476:1">{

    <decl_stmt pos:start="19:5" pos:end="19:43"><decl pos:start="19:5" pos:end="19:42"><type pos:start="19:5" pos:end="19:23"><specifier pos:start="19:5" pos:end="19:10">static</specifier> <specifier pos:start="19:12" pos:end="19:16">final</specifier> <name pos:start="19:18" pos:end="19:23">double</name></type> <name pos:start="19:25" pos:end="19:30">RADIUS</name> <init pos:start="19:32" pos:end="19:42">= <expr pos:start="19:34" pos:end="19:42"><literal type="number" pos:start="19:34" pos:end="19:42">6373000.0</literal></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="20:5" pos:end="20:50"><decl pos:start="20:5" pos:end="20:49"><type pos:start="20:5" pos:end="20:30"><specifier pos:start="20:5" pos:end="20:10">public</specifier> <specifier pos:start="20:12" pos:end="20:17">static</specifier> <specifier pos:start="20:19" pos:end="20:23">final</specifier> <name pos:start="20:25" pos:end="20:30">double</name></type> <name pos:start="20:32" pos:end="20:38">EPSILON</name> <init pos:start="20:40" pos:end="20:49">= <expr pos:start="20:42" pos:end="20:49"><literal type="number" pos:start="20:42" pos:end="20:49">0.000001</literal></expr></init></decl>;</decl_stmt>

    <comment type="block" format="javadoc" pos:start="22:5" pos:end="27:7">/**
     * This function calculates the angle between two points.
     * @param a
     * @param b
     * @return angle between two points
     */</comment>
    <function pos:start="28:5" pos:end="35:5"><type pos:start="28:5" pos:end="28:24"><specifier pos:start="28:5" pos:end="28:10">public</specifier> <specifier pos:start="28:12" pos:end="28:17">static</specifier> <name pos:start="28:19" pos:end="28:24">double</name></type> <name pos:start="28:26" pos:end="28:33">getAngle</name><parameter_list pos:start="28:34" pos:end="28:69">(<parameter pos:start="28:35" pos:end="28:50"><decl pos:start="28:35" pos:end="28:50"><type pos:start="28:35" pos:end="28:50"><name pos:start="28:35" pos:end="28:48"><name pos:start="28:35" pos:end="28:41">Point2D</name><operator pos:start="28:42" pos:end="28:42">.</operator><name pos:start="28:43" pos:end="28:48">Double</name></name></type> <name pos:start="28:50" pos:end="28:50">a</name></decl></parameter>, <parameter pos:start="28:53" pos:end="28:68"><decl pos:start="28:53" pos:end="28:68"><type pos:start="28:53" pos:end="28:68"><name pos:start="28:53" pos:end="28:66"><name pos:start="28:53" pos:end="28:59">Point2D</name><operator pos:start="28:60" pos:end="28:60">.</operator><name pos:start="28:61" pos:end="28:66">Double</name></name></type> <name pos:start="28:68" pos:end="28:68">b</name></decl></parameter>)</parameter_list> <block pos:start="28:71" pos:end="35:5">{<block_content pos:start="29:9" pos:end="34:21">
        <decl_stmt pos:start="29:9" pos:end="29:25"><decl pos:start="29:9" pos:end="29:24"><type pos:start="29:9" pos:end="29:14"><name pos:start="29:9" pos:end="29:14">double</name></type> <name pos:start="29:16" pos:end="29:20">angle</name> <init pos:start="29:22" pos:end="29:24">= <expr pos:start="29:24" pos:end="29:24"><literal type="number" pos:start="29:24" pos:end="29:24">0</literal></expr></init></decl>;</decl_stmt>
        <if_stmt pos:start="30:9" pos:end="33:9"><if pos:start="30:9" pos:end="33:9">if<condition pos:start="30:11" pos:end="30:59">(<expr pos:start="30:12" pos:end="30:58"><operator pos:start="30:12" pos:end="30:12">!</operator><operator pos:start="30:13" pos:end="30:13">(</operator><call pos:start="30:14" pos:end="30:21"><name pos:start="30:14" pos:end="30:19"><name pos:start="30:14" pos:end="30:14">a</name><operator pos:start="30:15" pos:end="30:15">.</operator><name pos:start="30:16" pos:end="30:19">getX</name></name><argument_list pos:start="30:20" pos:end="30:21">()</argument_list></call> <operator pos:start="30:23" pos:end="30:24">==</operator> <call pos:start="30:26" pos:end="30:33"><name pos:start="30:26" pos:end="30:31"><name pos:start="30:26" pos:end="30:26">b</name><operator pos:start="30:27" pos:end="30:27">.</operator><name pos:start="30:28" pos:end="30:31">getX</name></name><argument_list pos:start="30:32" pos:end="30:33">()</argument_list></call> <operator pos:start="30:35" pos:end="30:36">||</operator> <call pos:start="30:38" pos:end="30:45"><name pos:start="30:38" pos:end="30:43"><name pos:start="30:38" pos:end="30:38">a</name><operator pos:start="30:39" pos:end="30:39">.</operator><name pos:start="30:40" pos:end="30:43">getY</name></name><argument_list pos:start="30:44" pos:end="30:45">()</argument_list></call> <operator pos:start="30:47" pos:end="30:48">==</operator> <call pos:start="30:50" pos:end="30:57"><name pos:start="30:50" pos:end="30:55"><name pos:start="30:50" pos:end="30:50">b</name><operator pos:start="30:51" pos:end="30:51">.</operator><name pos:start="30:52" pos:end="30:55">getY</name></name><argument_list pos:start="30:56" pos:end="30:57">()</argument_list></call><operator pos:start="30:58" pos:end="30:58">)</operator></expr>)</condition>
        <block pos:start="31:9" pos:end="33:9">{<block_content pos:start="32:13" pos:end="32:74">
            <expr_stmt pos:start="32:13" pos:end="32:74"><expr pos:start="32:13" pos:end="32:72"><name pos:start="32:13" pos:end="32:17">angle</name> <operator pos:start="32:19" pos:end="32:19">=</operator> <call pos:start="32:21" pos:end="32:72"><name pos:start="32:21" pos:end="32:30"><name pos:start="32:21" pos:end="32:24">Math</name><operator pos:start="32:25" pos:end="32:25">.</operator><name pos:start="32:26" pos:end="32:30">atan2</name></name><argument_list pos:start="32:31" pos:end="32:72">(<argument pos:start="32:32" pos:end="32:50"><expr pos:start="32:32" pos:end="32:50"><call pos:start="32:32" pos:end="32:39"><name pos:start="32:32" pos:end="32:37"><name pos:start="32:32" pos:end="32:32">b</name><operator pos:start="32:33" pos:end="32:33">.</operator><name pos:start="32:34" pos:end="32:37">getY</name></name><argument_list pos:start="32:38" pos:end="32:39">()</argument_list></call> <operator pos:start="32:41" pos:end="32:41">-</operator> <call pos:start="32:43" pos:end="32:50"><name pos:start="32:43" pos:end="32:48"><name pos:start="32:43" pos:end="32:43">a</name><operator pos:start="32:44" pos:end="32:44">.</operator><name pos:start="32:45" pos:end="32:48">getY</name></name><argument_list pos:start="32:49" pos:end="32:50">()</argument_list></call></expr></argument>, <argument pos:start="32:53" pos:end="32:71"><expr pos:start="32:53" pos:end="32:71"><call pos:start="32:53" pos:end="32:60"><name pos:start="32:53" pos:end="32:58"><name pos:start="32:53" pos:end="32:53">b</name><operator pos:start="32:54" pos:end="32:54">.</operator><name pos:start="32:55" pos:end="32:58">getX</name></name><argument_list pos:start="32:59" pos:end="32:60">()</argument_list></call> <operator pos:start="32:62" pos:end="32:62">-</operator> <call pos:start="32:64" pos:end="32:71"><name pos:start="32:64" pos:end="32:69"><name pos:start="32:64" pos:end="32:64">a</name><operator pos:start="32:65" pos:end="32:65">.</operator><name pos:start="32:66" pos:end="32:69">getX</name></name><argument_list pos:start="32:70" pos:end="32:71">()</argument_list></call></expr></argument>)</argument_list></call></expr> ;</expr_stmt>
        </block_content>}</block></if></if_stmt>
        <return pos:start="34:9" pos:end="34:21">return <expr pos:start="34:16" pos:end="34:20"><name pos:start="34:16" pos:end="34:20">angle</name></expr>;</return>
    </block_content>}</block></function>

    <comment type="block" format="javadoc" pos:start="37:5" pos:end="42:7">/**
     * This function finds the midpoint between two points.
     * @param a
     * @param b
     * @return midpoint between two points.
     */</comment>
    <function pos:start="43:5" pos:end="46:5"><type pos:start="43:5" pos:end="43:32"><specifier pos:start="43:5" pos:end="43:10">public</specifier> <specifier pos:start="43:12" pos:end="43:17">static</specifier> <name pos:start="43:19" pos:end="43:32"><name pos:start="43:19" pos:end="43:25">Point2D</name><operator pos:start="43:26" pos:end="43:26">.</operator><name pos:start="43:27" pos:end="43:32">Double</name></name></type> <name pos:start="43:34" pos:end="43:45">findMidpoint</name><parameter_list pos:start="43:46" pos:end="43:81">(<parameter pos:start="43:47" pos:end="43:62"><decl pos:start="43:47" pos:end="43:62"><type pos:start="43:47" pos:end="43:62"><name pos:start="43:47" pos:end="43:60"><name pos:start="43:47" pos:end="43:53">Point2D</name><operator pos:start="43:54" pos:end="43:54">.</operator><name pos:start="43:55" pos:end="43:60">Double</name></name></type> <name pos:start="43:62" pos:end="43:62">a</name></decl></parameter>, <parameter pos:start="43:65" pos:end="43:80"><decl pos:start="43:65" pos:end="43:80"><type pos:start="43:65" pos:end="43:80"><name pos:start="43:65" pos:end="43:78"><name pos:start="43:65" pos:end="43:71">Point2D</name><operator pos:start="43:72" pos:end="43:72">.</operator><name pos:start="43:73" pos:end="43:78">Double</name></name></type> <name pos:start="43:80" pos:end="43:80">b</name></decl></parameter>)</parameter_list> <block pos:start="43:83" pos:end="46:5">{<block_content pos:start="44:9" pos:end="45:19">
        <decl_stmt pos:start="44:9" pos:end="44:94"><decl pos:start="44:9" pos:end="44:93"><type pos:start="44:9" pos:end="44:22"><name pos:start="44:9" pos:end="44:22"><name pos:start="44:9" pos:end="44:15">Point2D</name><operator pos:start="44:16" pos:end="44:16">.</operator><name pos:start="44:17" pos:end="44:22">Double</name></name></type> <name pos:start="44:24" pos:end="44:26">mid</name> <init pos:start="44:28" pos:end="44:93">= <expr pos:start="44:30" pos:end="44:93"><operator pos:start="44:30" pos:end="44:32">new</operator> <call pos:start="44:34" pos:end="44:93"><name pos:start="44:34" pos:end="44:47"><name pos:start="44:34" pos:end="44:40">Point2D</name><operator pos:start="44:41" pos:end="44:41">.</operator><name pos:start="44:42" pos:end="44:47">Double</name></name><argument_list pos:start="44:48" pos:end="44:93">(<argument pos:start="44:49" pos:end="44:69"><expr pos:start="44:49" pos:end="44:69"><operator pos:start="44:49" pos:end="44:49">(</operator><call pos:start="44:50" pos:end="44:57"><name pos:start="44:50" pos:end="44:55"><name pos:start="44:50" pos:end="44:50">a</name><operator pos:start="44:51" pos:end="44:51">.</operator><name pos:start="44:52" pos:end="44:55">getX</name></name><argument_list pos:start="44:56" pos:end="44:57">()</argument_list></call><operator pos:start="44:58" pos:end="44:58">+</operator><call pos:start="44:59" pos:end="44:66"><name pos:start="44:59" pos:end="44:64"><name pos:start="44:59" pos:end="44:59">b</name><operator pos:start="44:60" pos:end="44:60">.</operator><name pos:start="44:61" pos:end="44:64">getX</name></name><argument_list pos:start="44:65" pos:end="44:66">()</argument_list></call><operator pos:start="44:67" pos:end="44:67">)</operator><operator pos:start="44:68" pos:end="44:68">/</operator><literal type="number" pos:start="44:69" pos:end="44:69">2</literal></expr></argument>, <argument pos:start="44:72" pos:end="44:92"><expr pos:start="44:72" pos:end="44:92"><operator pos:start="44:72" pos:end="44:72">(</operator><call pos:start="44:73" pos:end="44:80"><name pos:start="44:73" pos:end="44:78"><name pos:start="44:73" pos:end="44:73">a</name><operator pos:start="44:74" pos:end="44:74">.</operator><name pos:start="44:75" pos:end="44:78">getY</name></name><argument_list pos:start="44:79" pos:end="44:80">()</argument_list></call><operator pos:start="44:81" pos:end="44:81">+</operator><call pos:start="44:82" pos:end="44:89"><name pos:start="44:82" pos:end="44:87"><name pos:start="44:82" pos:end="44:82">b</name><operator pos:start="44:83" pos:end="44:83">.</operator><name pos:start="44:84" pos:end="44:87">getY</name></name><argument_list pos:start="44:88" pos:end="44:89">()</argument_list></call><operator pos:start="44:90" pos:end="44:90">)</operator><operator pos:start="44:91" pos:end="44:91">/</operator><literal type="number" pos:start="44:92" pos:end="44:92">2</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <return pos:start="45:9" pos:end="45:19">return <expr pos:start="45:16" pos:end="45:18"><name pos:start="45:16" pos:end="45:18">mid</name></expr>;</return>
    </block_content>}</block></function>


    <comment type="block" format="javadoc" pos:start="49:5" pos:end="55:7">/**
     * This function takes a point of gps coordinates and translates into cartesian coordinates.
     * X is latitude, Y is longitude, and centralLatitude is the latitude of a point in the river.
     * @param gpsPoint
     * @param centralLatitude
     * @return Point2D.Double of cartesian coordinates
     */</comment>
    <function pos:start="56:5" pos:end="68:5"><type pos:start="56:5" pos:end="56:32"><specifier pos:start="56:5" pos:end="56:10">public</specifier> <specifier pos:start="56:12" pos:end="56:17">static</specifier> <name pos:start="56:19" pos:end="56:32"><name pos:start="56:19" pos:end="56:25">Point2D</name><operator pos:start="56:26" pos:end="56:26">.</operator><name pos:start="56:27" pos:end="56:32">Double</name></name></type> <name pos:start="56:34" pos:end="56:47">gpsToCartesian</name> <parameter_list pos:start="56:49" pos:end="56:97">(<parameter pos:start="56:50" pos:end="56:72"><decl pos:start="56:50" pos:end="56:72"><type pos:start="56:50" pos:end="56:72"><name pos:start="56:50" pos:end="56:63"><name pos:start="56:50" pos:end="56:56">Point2D</name><operator pos:start="56:57" pos:end="56:57">.</operator><name pos:start="56:58" pos:end="56:63">Double</name></name></type> <name pos:start="56:65" pos:end="56:72">gpsPoint</name></decl></parameter>, <parameter pos:start="56:75" pos:end="56:96"><decl pos:start="56:75" pos:end="56:96"><type pos:start="56:75" pos:end="56:96"><name pos:start="56:75" pos:end="56:80">double</name></type> <name pos:start="56:82" pos:end="56:96">centralLatitude</name></decl></parameter>)</parameter_list><block pos:start="56:98" pos:end="68:5">{<block_content pos:start="57:9" pos:end="67:30">
        <decl_stmt pos:start="57:9" pos:end="57:61"><decl pos:start="57:9" pos:end="57:60"><type pos:start="57:9" pos:end="57:22"><name pos:start="57:9" pos:end="57:22"><name pos:start="57:9" pos:end="57:15">Point2D</name><operator pos:start="57:16" pos:end="57:16">.</operator><name pos:start="57:17" pos:end="57:22">Double</name></name></type> <name pos:start="57:24" pos:end="57:37">cartesianPoint</name> <init pos:start="57:39" pos:end="57:60">= <expr pos:start="57:41" pos:end="57:60"><operator pos:start="57:41" pos:end="57:43">new</operator> <call pos:start="57:45" pos:end="57:60"><name pos:start="57:45" pos:end="57:58"><name pos:start="57:45" pos:end="57:51">Point2D</name><operator pos:start="57:52" pos:end="57:52">.</operator><name pos:start="57:53" pos:end="57:58">Double</name></name><argument_list pos:start="57:59" pos:end="57:60">()</argument_list></call></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="59:9" pos:end="59:53"><decl pos:start="59:9" pos:end="59:52"><type pos:start="59:9" pos:end="59:14"><name pos:start="59:9" pos:end="59:14">double</name></type> <name pos:start="59:16" pos:end="59:18">lat</name> <init pos:start="59:20" pos:end="59:52">= <expr pos:start="59:22" pos:end="59:52"><call pos:start="59:22" pos:end="59:52"><name pos:start="59:22" pos:end="59:35"><name pos:start="59:22" pos:end="59:25">Math</name><operator pos:start="59:26" pos:end="59:26">.</operator><name pos:start="59:27" pos:end="59:35">toRadians</name></name><argument_list pos:start="59:36" pos:end="59:52">(<argument pos:start="59:37" pos:end="59:51"><expr pos:start="59:37" pos:end="59:51"><call pos:start="59:37" pos:end="59:51"><name pos:start="59:37" pos:end="59:49"><name pos:start="59:37" pos:end="59:44">gpsPoint</name><operator pos:start="59:45" pos:end="59:45">.</operator><name pos:start="59:46" pos:end="59:49">getX</name></name><argument_list pos:start="59:50" pos:end="59:51">()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt pos:start="60:9" pos:end="60:53"><decl pos:start="60:9" pos:end="60:52"><type pos:start="60:9" pos:end="60:14"><name pos:start="60:9" pos:end="60:14">double</name></type> <name pos:start="60:16" pos:end="60:18">lon</name> <init pos:start="60:20" pos:end="60:52">= <expr pos:start="60:22" pos:end="60:52"><call pos:start="60:22" pos:end="60:52"><name pos:start="60:22" pos:end="60:35"><name pos:start="60:22" pos:end="60:25">Math</name><operator pos:start="60:26" pos:end="60:26">.</operator><name pos:start="60:27" pos:end="60:35">toRadians</name></name><argument_list pos:start="60:36" pos:end="60:52">(<argument pos:start="60:37" pos:end="60:51"><expr pos:start="60:37" pos:end="60:51"><call pos:start="60:37" pos:end="60:51"><name pos:start="60:37" pos:end="60:49"><name pos:start="60:37" pos:end="60:44">gpsPoint</name><operator pos:start="60:45" pos:end="60:45">.</operator><name pos:start="60:46" pos:end="60:49">getY</name></name><argument_list pos:start="60:50" pos:end="60:51">()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt pos:start="61:9" pos:end="61:71"><decl pos:start="61:9" pos:end="61:70"><type pos:start="61:9" pos:end="61:14"><name pos:start="61:9" pos:end="61:14">double</name></type> <name pos:start="61:16" pos:end="61:26">aspectRatio</name> <init pos:start="61:28" pos:end="61:70">= <expr pos:start="61:30" pos:end="61:70"><call pos:start="61:30" pos:end="61:70"><name pos:start="61:30" pos:end="61:37"><name pos:start="61:30" pos:end="61:33">Math</name><operator pos:start="61:34" pos:end="61:34">.</operator><name pos:start="61:35" pos:end="61:37">cos</name></name><argument_list pos:start="61:38" pos:end="61:70">(<argument pos:start="61:39" pos:end="61:69"><expr pos:start="61:39" pos:end="61:69"><call pos:start="61:39" pos:end="61:69"><name pos:start="61:39" pos:end="61:52"><name pos:start="61:39" pos:end="61:42">Math</name><operator pos:start="61:43" pos:end="61:43">.</operator><name pos:start="61:44" pos:end="61:52">toRadians</name></name><argument_list pos:start="61:53" pos:end="61:69">(<argument pos:start="61:54" pos:end="61:68"><expr pos:start="61:54" pos:end="61:68"><name pos:start="61:54" pos:end="61:68">centralLatitude</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="63:9" pos:end="63:41"><decl pos:start="63:9" pos:end="63:40"><type pos:start="63:9" pos:end="63:14"><name pos:start="63:9" pos:end="63:14">double</name></type> <name pos:start="63:16" pos:end="63:25">xCartesian</name> <init pos:start="63:27" pos:end="63:40">= <expr pos:start="63:29" pos:end="63:40"><name pos:start="63:29" pos:end="63:34">RADIUS</name> <operator pos:start="63:36" pos:end="63:36">*</operator> <name pos:start="63:38" pos:end="63:40">lat</name></expr></init></decl>;</decl_stmt>
        <decl_stmt pos:start="64:9" pos:end="64:55"><decl pos:start="64:9" pos:end="64:54"><type pos:start="64:9" pos:end="64:14"><name pos:start="64:9" pos:end="64:14">double</name></type> <name pos:start="64:16" pos:end="64:25">yCartesian</name> <init pos:start="64:27" pos:end="64:54">= <expr pos:start="64:29" pos:end="64:54"><name pos:start="64:29" pos:end="64:34">RADIUS</name> <operator pos:start="64:36" pos:end="64:36">*</operator> <name pos:start="64:38" pos:end="64:40">lon</name> <operator pos:start="64:42" pos:end="64:42">*</operator> <name pos:start="64:44" pos:end="64:54">aspectRatio</name></expr></init></decl>;</decl_stmt>

        <expr_stmt pos:start="66:9" pos:end="66:67"><expr pos:start="66:9" pos:end="66:66"><name pos:start="66:9" pos:end="66:22">cartesianPoint</name> <operator pos:start="66:24" pos:end="66:24">=</operator> <operator pos:start="66:26" pos:end="66:28">new</operator> <call pos:start="66:30" pos:end="66:66"><name pos:start="66:30" pos:end="66:43"><name pos:start="66:30" pos:end="66:36">Point2D</name><operator pos:start="66:37" pos:end="66:37">.</operator><name pos:start="66:38" pos:end="66:43">Double</name></name><argument_list pos:start="66:44" pos:end="66:66">(<argument pos:start="66:45" pos:end="66:54"><expr pos:start="66:45" pos:end="66:54"><name pos:start="66:45" pos:end="66:54">xCartesian</name></expr></argument>,<argument pos:start="66:56" pos:end="66:65"><expr pos:start="66:56" pos:end="66:65"><name pos:start="66:56" pos:end="66:65">yCartesian</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <return pos:start="67:9" pos:end="67:30">return <expr pos:start="67:16" pos:end="67:29"><name pos:start="67:16" pos:end="67:29">cartesianPoint</name></expr>;</return>
    </block_content>}</block></function>

    <comment type="block" pos:start="70:5" pos:end="70:56">/*This function is the inverse of gpsToCartesian. */</comment>

    <comment type="block" format="javadoc" pos:start="72:5" pos:end="78:7">/**
     * This function performs the reverse operation of gpsToCartesian. It takes a point of cartesian coordinates
     * and translates them into gps coordinates.
     * @param cartesianPoint
     * @param centralLatitude
     * @return Point2D.Double of gps coordinates
     */</comment>
    <function pos:start="79:5" pos:end="91:5"><type pos:start="79:5" pos:end="79:32"><specifier pos:start="79:5" pos:end="79:10">public</specifier> <specifier pos:start="79:12" pos:end="79:17">static</specifier> <name pos:start="79:19" pos:end="79:32"><name pos:start="79:19" pos:end="79:25">Point2D</name><operator pos:start="79:26" pos:end="79:26">.</operator><name pos:start="79:27" pos:end="79:32">Double</name></name></type> <name pos:start="79:34" pos:end="79:47">cartesianToGPS</name> <parameter_list pos:start="79:49" pos:end="79:103">(<parameter pos:start="79:50" pos:end="79:78"><decl pos:start="79:50" pos:end="79:78"><type pos:start="79:50" pos:end="79:78"><name pos:start="79:50" pos:end="79:63"><name pos:start="79:50" pos:end="79:56">Point2D</name><operator pos:start="79:57" pos:end="79:57">.</operator><name pos:start="79:58" pos:end="79:63">Double</name></name></type> <name pos:start="79:65" pos:end="79:78">cartesianPoint</name></decl></parameter>, <parameter pos:start="79:81" pos:end="79:102"><decl pos:start="79:81" pos:end="79:102"><type pos:start="79:81" pos:end="79:102"><name pos:start="79:81" pos:end="79:86">double</name></type> <name pos:start="79:88" pos:end="79:102">centralLatitude</name></decl></parameter>)</parameter_list> <block pos:start="79:105" pos:end="91:5">{<block_content pos:start="80:9" pos:end="90:24">
        <decl_stmt pos:start="80:9" pos:end="80:55"><decl pos:start="80:9" pos:end="80:54"><type pos:start="80:9" pos:end="80:22"><name pos:start="80:9" pos:end="80:22"><name pos:start="80:9" pos:end="80:15">Point2D</name><operator pos:start="80:16" pos:end="80:16">.</operator><name pos:start="80:17" pos:end="80:22">Double</name></name></type> <name pos:start="80:24" pos:end="80:31">gpsPoint</name> <init pos:start="80:33" pos:end="80:54">= <expr pos:start="80:35" pos:end="80:54"><operator pos:start="80:35" pos:end="80:37">new</operator> <call pos:start="80:39" pos:end="80:54"><name pos:start="80:39" pos:end="80:52"><name pos:start="80:39" pos:end="80:45">Point2D</name><operator pos:start="80:46" pos:end="80:46">.</operator><name pos:start="80:47" pos:end="80:52">Double</name></name><argument_list pos:start="80:53" pos:end="80:54">()</argument_list></call></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="82:9" pos:end="82:50"><decl pos:start="82:9" pos:end="82:49"><type pos:start="82:9" pos:end="82:14"><name pos:start="82:9" pos:end="82:14">double</name></type> <name pos:start="82:16" pos:end="82:25">xCartesian</name> <init pos:start="82:27" pos:end="82:49">= <expr pos:start="82:29" pos:end="82:49"><call pos:start="82:29" pos:end="82:49"><name pos:start="82:29" pos:end="82:47"><name pos:start="82:29" pos:end="82:42">cartesianPoint</name><operator pos:start="82:43" pos:end="82:43">.</operator><name pos:start="82:44" pos:end="82:47">getX</name></name><argument_list pos:start="82:48" pos:end="82:49">()</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt pos:start="83:9" pos:end="83:50"><decl pos:start="83:9" pos:end="83:49"><type pos:start="83:9" pos:end="83:14"><name pos:start="83:9" pos:end="83:14">double</name></type> <name pos:start="83:16" pos:end="83:25">yCartesian</name> <init pos:start="83:27" pos:end="83:49">= <expr pos:start="83:29" pos:end="83:49"><call pos:start="83:29" pos:end="83:49"><name pos:start="83:29" pos:end="83:47"><name pos:start="83:29" pos:end="83:42">cartesianPoint</name><operator pos:start="83:43" pos:end="83:43">.</operator><name pos:start="83:44" pos:end="83:47">getY</name></name><argument_list pos:start="83:48" pos:end="83:49">()</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt pos:start="84:9" pos:end="84:71"><decl pos:start="84:9" pos:end="84:70"><type pos:start="84:9" pos:end="84:14"><name pos:start="84:9" pos:end="84:14">double</name></type> <name pos:start="84:16" pos:end="84:26">aspectRatio</name> <init pos:start="84:28" pos:end="84:70">= <expr pos:start="84:30" pos:end="84:70"><call pos:start="84:30" pos:end="84:70"><name pos:start="84:30" pos:end="84:37"><name pos:start="84:30" pos:end="84:33">Math</name><operator pos:start="84:34" pos:end="84:34">.</operator><name pos:start="84:35" pos:end="84:37">cos</name></name><argument_list pos:start="84:38" pos:end="84:70">(<argument pos:start="84:39" pos:end="84:69"><expr pos:start="84:39" pos:end="84:69"><call pos:start="84:39" pos:end="84:69"><name pos:start="84:39" pos:end="84:52"><name pos:start="84:39" pos:end="84:42">Math</name><operator pos:start="84:43" pos:end="84:43">.</operator><name pos:start="84:44" pos:end="84:52">toRadians</name></name><argument_list pos:start="84:53" pos:end="84:69">(<argument pos:start="84:54" pos:end="84:68"><expr pos:start="84:54" pos:end="84:68"><name pos:start="84:54" pos:end="84:68">centralLatitude</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="86:9" pos:end="86:57"><decl pos:start="86:9" pos:end="86:56"><type pos:start="86:9" pos:end="86:14"><name pos:start="86:9" pos:end="86:14">double</name></type> <name pos:start="86:16" pos:end="86:18">lat</name> <init pos:start="86:20" pos:end="86:56">= <expr pos:start="86:22" pos:end="86:56"><call pos:start="86:22" pos:end="86:56"><name pos:start="86:22" pos:end="86:35"><name pos:start="86:22" pos:end="86:25">Math</name><operator pos:start="86:26" pos:end="86:26">.</operator><name pos:start="86:27" pos:end="86:35">toDegrees</name></name><argument_list pos:start="86:36" pos:end="86:56">(<argument pos:start="86:37" pos:end="86:55"><expr pos:start="86:37" pos:end="86:55"><name pos:start="86:37" pos:end="86:46">xCartesian</name> <operator pos:start="86:48" pos:end="86:48">/</operator> <name pos:start="86:50" pos:end="86:55">RADIUS</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt pos:start="87:9" pos:end="87:73"><decl pos:start="87:9" pos:end="87:72"><type pos:start="87:9" pos:end="87:14"><name pos:start="87:9" pos:end="87:14">double</name></type> <name pos:start="87:16" pos:end="87:18">lon</name> <init pos:start="87:20" pos:end="87:72">= <expr pos:start="87:22" pos:end="87:72"><call pos:start="87:22" pos:end="87:72"><name pos:start="87:22" pos:end="87:35"><name pos:start="87:22" pos:end="87:25">Math</name><operator pos:start="87:26" pos:end="87:26">.</operator><name pos:start="87:27" pos:end="87:35">toDegrees</name></name><argument_list pos:start="87:36" pos:end="87:72">(<argument pos:start="87:37" pos:end="87:71"><expr pos:start="87:37" pos:end="87:71"><name pos:start="87:37" pos:end="87:46">yCartesian</name> <operator pos:start="87:48" pos:end="87:48">/</operator> <operator pos:start="87:50" pos:end="87:50">(</operator><name pos:start="87:51" pos:end="87:56">RADIUS</name> <operator pos:start="87:58" pos:end="87:58">*</operator> <name pos:start="87:60" pos:end="87:70">aspectRatio</name><operator pos:start="87:71" pos:end="87:71">)</operator></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <expr_stmt pos:start="89:9" pos:end="89:48"><expr pos:start="89:9" pos:end="89:47"><name pos:start="89:9" pos:end="89:16">gpsPoint</name> <operator pos:start="89:18" pos:end="89:18">=</operator> <operator pos:start="89:20" pos:end="89:22">new</operator> <call pos:start="89:24" pos:end="89:47"><name pos:start="89:24" pos:end="89:37"><name pos:start="89:24" pos:end="89:30">Point2D</name><operator pos:start="89:31" pos:end="89:31">.</operator><name pos:start="89:32" pos:end="89:37">Double</name></name><argument_list pos:start="89:38" pos:end="89:47">(<argument pos:start="89:39" pos:end="89:41"><expr pos:start="89:39" pos:end="89:41"><name pos:start="89:39" pos:end="89:41">lat</name></expr></argument>, <argument pos:start="89:44" pos:end="89:46"><expr pos:start="89:44" pos:end="89:46"><name pos:start="89:44" pos:end="89:46">lon</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <return pos:start="90:9" pos:end="90:24">return <expr pos:start="90:16" pos:end="90:23"><name pos:start="90:16" pos:end="90:23">gpsPoint</name></expr>;</return>
    </block_content>}</block></function>

    <comment type="block" format="javadoc" pos:start="93:5" pos:end="98:7">/**
     * This function finds the intersection point of two line segments
     * @param line1
     * @param line2
     * @return intersection point of the two line segments
     */</comment>
    <function pos:start="99:5" pos:end="136:5"><type pos:start="99:5" pos:end="99:32"><specifier pos:start="99:5" pos:end="99:10">public</specifier> <specifier pos:start="99:12" pos:end="99:17">static</specifier> <name pos:start="99:19" pos:end="99:32"><name pos:start="99:19" pos:end="99:25">Point2D</name><operator pos:start="99:26" pos:end="99:26">.</operator><name pos:start="99:27" pos:end="99:32">Double</name></name></type> <name pos:start="99:34" pos:end="99:53">findLineIntersection</name><parameter_list pos:start="99:54" pos:end="99:95">(<parameter pos:start="99:55" pos:end="99:73"><decl pos:start="99:55" pos:end="99:73"><type pos:start="99:55" pos:end="99:73"><name pos:start="99:55" pos:end="99:67"><name pos:start="99:55" pos:end="99:60">Line2D</name><operator pos:start="99:61" pos:end="99:61">.</operator><name pos:start="99:62" pos:end="99:67">Double</name></name></type> <name pos:start="99:69" pos:end="99:73">line1</name></decl></parameter>, <parameter pos:start="99:76" pos:end="99:94"><decl pos:start="99:76" pos:end="99:94"><type pos:start="99:76" pos:end="99:94"><name pos:start="99:76" pos:end="99:88"><name pos:start="99:76" pos:end="99:81">Line2D</name><operator pos:start="99:82" pos:end="99:82">.</operator><name pos:start="99:83" pos:end="99:88">Double</name></name></type> <name pos:start="99:90" pos:end="99:94">line2</name></decl></parameter>)</parameter_list><block pos:start="99:96" pos:end="136:5">{<block_content pos:start="100:9" pos:end="135:63">
        <decl_stmt pos:start="100:9" pos:end="100:60"><decl pos:start="100:9" pos:end="100:17"><type pos:start="100:9" pos:end="100:14"><name pos:start="100:9" pos:end="100:14">double</name></type> <name pos:start="100:16" pos:end="100:17">m1</name></decl>, <decl pos:start="100:20" pos:end="100:21"><type ref="prev" pos:start="100:9" pos:end="100:14"/><name pos:start="100:20" pos:end="100:21">m2</name></decl>, <decl pos:start="100:24" pos:end="100:25"><type ref="prev" pos:start="100:9" pos:end="100:14"/><name pos:start="100:24" pos:end="100:25">b1</name></decl>, <decl pos:start="100:28" pos:end="100:29"><type ref="prev" pos:start="100:9" pos:end="100:14"/><name pos:start="100:28" pos:end="100:29">b2</name></decl>, <decl pos:start="100:32" pos:end="100:44"><type ref="prev" pos:start="100:9" pos:end="100:14"/><name pos:start="100:32" pos:end="100:44">xIntersection</name></decl>, <decl pos:start="100:47" pos:end="100:59"><type ref="prev" pos:start="100:9" pos:end="100:14"/><name pos:start="100:47" pos:end="100:59">yIntersection</name></decl>;</decl_stmt>
        
        <expr_stmt pos:start="102:9" pos:end="102:107"><expr pos:start="102:9" pos:end="102:106"><name pos:start="102:9" pos:end="102:10">m1</name> <operator pos:start="102:12" pos:end="102:12">=</operator> <operator pos:start="102:14" pos:end="102:14">(</operator><call pos:start="102:15" pos:end="102:27"><name pos:start="102:15" pos:end="102:25"><name pos:start="102:15" pos:end="102:19">line1</name><operator pos:start="102:20" pos:end="102:20">.</operator><name pos:start="102:21" pos:end="102:25">getP2</name></name><argument_list pos:start="102:26" pos:end="102:27">()</argument_list></call><operator pos:start="102:28" pos:end="102:28">.</operator><call pos:start="102:29" pos:end="102:34"><name pos:start="102:29" pos:end="102:32">getY</name><argument_list pos:start="102:33" pos:end="102:34">()</argument_list></call> <operator pos:start="102:36" pos:end="102:36">-</operator> <call pos:start="102:38" pos:end="102:50"><name pos:start="102:38" pos:end="102:48"><name pos:start="102:38" pos:end="102:42">line1</name><operator pos:start="102:43" pos:end="102:43">.</operator><name pos:start="102:44" pos:end="102:48">getP1</name></name><argument_list pos:start="102:49" pos:end="102:50">()</argument_list></call><operator pos:start="102:51" pos:end="102:51">.</operator><call pos:start="102:52" pos:end="102:57"><name pos:start="102:52" pos:end="102:55">getY</name><argument_list pos:start="102:56" pos:end="102:57">()</argument_list></call><operator pos:start="102:58" pos:end="102:58">)</operator> <operator pos:start="102:60" pos:end="102:60">/</operator> <operator pos:start="102:62" pos:end="102:62">(</operator><call pos:start="102:63" pos:end="102:75"><name pos:start="102:63" pos:end="102:73"><name pos:start="102:63" pos:end="102:67">line1</name><operator pos:start="102:68" pos:end="102:68">.</operator><name pos:start="102:69" pos:end="102:73">getP2</name></name><argument_list pos:start="102:74" pos:end="102:75">()</argument_list></call><operator pos:start="102:76" pos:end="102:76">.</operator><call pos:start="102:77" pos:end="102:82"><name pos:start="102:77" pos:end="102:80">getX</name><argument_list pos:start="102:81" pos:end="102:82">()</argument_list></call> <operator pos:start="102:84" pos:end="102:84">-</operator> <call pos:start="102:86" pos:end="102:98"><name pos:start="102:86" pos:end="102:96"><name pos:start="102:86" pos:end="102:90">line1</name><operator pos:start="102:91" pos:end="102:91">.</operator><name pos:start="102:92" pos:end="102:96">getP1</name></name><argument_list pos:start="102:97" pos:end="102:98">()</argument_list></call><operator pos:start="102:99" pos:end="102:99">.</operator><call pos:start="102:100" pos:end="102:105"><name pos:start="102:100" pos:end="102:103">getX</name><argument_list pos:start="102:104" pos:end="102:105">()</argument_list></call><operator pos:start="102:106" pos:end="102:106">)</operator></expr>;</expr_stmt>
        <expr_stmt pos:start="103:9" pos:end="103:107"><expr pos:start="103:9" pos:end="103:106"><name pos:start="103:9" pos:end="103:10">m2</name> <operator pos:start="103:12" pos:end="103:12">=</operator> <operator pos:start="103:14" pos:end="103:14">(</operator><call pos:start="103:15" pos:end="103:27"><name pos:start="103:15" pos:end="103:25"><name pos:start="103:15" pos:end="103:19">line2</name><operator pos:start="103:20" pos:end="103:20">.</operator><name pos:start="103:21" pos:end="103:25">getP2</name></name><argument_list pos:start="103:26" pos:end="103:27">()</argument_list></call><operator pos:start="103:28" pos:end="103:28">.</operator><call pos:start="103:29" pos:end="103:34"><name pos:start="103:29" pos:end="103:32">getY</name><argument_list pos:start="103:33" pos:end="103:34">()</argument_list></call> <operator pos:start="103:36" pos:end="103:36">-</operator> <call pos:start="103:38" pos:end="103:50"><name pos:start="103:38" pos:end="103:48"><name pos:start="103:38" pos:end="103:42">line2</name><operator pos:start="103:43" pos:end="103:43">.</operator><name pos:start="103:44" pos:end="103:48">getP1</name></name><argument_list pos:start="103:49" pos:end="103:50">()</argument_list></call><operator pos:start="103:51" pos:end="103:51">.</operator><call pos:start="103:52" pos:end="103:57"><name pos:start="103:52" pos:end="103:55">getY</name><argument_list pos:start="103:56" pos:end="103:57">()</argument_list></call><operator pos:start="103:58" pos:end="103:58">)</operator> <operator pos:start="103:60" pos:end="103:60">/</operator> <operator pos:start="103:62" pos:end="103:62">(</operator><call pos:start="103:63" pos:end="103:75"><name pos:start="103:63" pos:end="103:73"><name pos:start="103:63" pos:end="103:67">line2</name><operator pos:start="103:68" pos:end="103:68">.</operator><name pos:start="103:69" pos:end="103:73">getP2</name></name><argument_list pos:start="103:74" pos:end="103:75">()</argument_list></call><operator pos:start="103:76" pos:end="103:76">.</operator><call pos:start="103:77" pos:end="103:82"><name pos:start="103:77" pos:end="103:80">getX</name><argument_list pos:start="103:81" pos:end="103:82">()</argument_list></call> <operator pos:start="103:84" pos:end="103:84">-</operator> <call pos:start="103:86" pos:end="103:98"><name pos:start="103:86" pos:end="103:96"><name pos:start="103:86" pos:end="103:90">line2</name><operator pos:start="103:91" pos:end="103:91">.</operator><name pos:start="103:92" pos:end="103:96">getP1</name></name><argument_list pos:start="103:97" pos:end="103:98">()</argument_list></call><operator pos:start="103:99" pos:end="103:99">.</operator><call pos:start="103:100" pos:end="103:105"><name pos:start="103:100" pos:end="103:103">getX</name><argument_list pos:start="103:104" pos:end="103:105">()</argument_list></call><operator pos:start="103:106" pos:end="103:106">)</operator></expr>;</expr_stmt>
        
        <if_stmt pos:start="105:9" pos:end="133:9"><if pos:start="105:9" pos:end="109:9">if <condition pos:start="105:12" pos:end="105:36">(<expr pos:start="105:13" pos:end="105:35"><name pos:start="105:13" pos:end="105:14">m1</name> <operator pos:start="105:16" pos:end="105:16">&gt;</operator> <literal type="number" pos:start="105:18" pos:end="105:21">1000</literal> <operator pos:start="105:23" pos:end="105:24">||</operator> <name pos:start="105:26" pos:end="105:27">m1</name> <operator pos:start="105:29" pos:end="105:29">&lt;</operator> <operator pos:start="105:31" pos:end="105:31">-</operator><literal type="number" pos:start="105:32" pos:end="105:35">1000</literal></expr>)</condition><block pos:start="105:37" pos:end="109:9">{<block_content pos:start="106:13" pos:end="108:52">
            <expr_stmt pos:start="106:13" pos:end="106:49"><expr pos:start="106:13" pos:end="106:48"><name pos:start="106:13" pos:end="106:25">xIntersection</name> <operator pos:start="106:27" pos:end="106:27">=</operator> <call pos:start="106:29" pos:end="106:41"><name pos:start="106:29" pos:end="106:39"><name pos:start="106:29" pos:end="106:33">line1</name><operator pos:start="106:34" pos:end="106:34">.</operator><name pos:start="106:35" pos:end="106:39">getP1</name></name><argument_list pos:start="106:40" pos:end="106:41">()</argument_list></call><operator pos:start="106:42" pos:end="106:42">.</operator><call pos:start="106:43" pos:end="106:48"><name pos:start="106:43" pos:end="106:46">getX</name><argument_list pos:start="106:47" pos:end="106:48">()</argument_list></call></expr>;</expr_stmt>
            <expr_stmt pos:start="107:13" pos:end="107:68"><expr pos:start="107:13" pos:end="107:67"><name pos:start="107:13" pos:end="107:14">b2</name> <operator pos:start="107:16" pos:end="107:16">=</operator> <call pos:start="107:18" pos:end="107:30"><name pos:start="107:18" pos:end="107:28"><name pos:start="107:18" pos:end="107:22">line2</name><operator pos:start="107:23" pos:end="107:23">.</operator><name pos:start="107:24" pos:end="107:28">getP1</name></name><argument_list pos:start="107:29" pos:end="107:30">()</argument_list></call><operator pos:start="107:31" pos:end="107:31">.</operator><call pos:start="107:32" pos:end="107:37"><name pos:start="107:32" pos:end="107:35">getY</name><argument_list pos:start="107:36" pos:end="107:37">()</argument_list></call> <operator pos:start="107:39" pos:end="107:39">-</operator> <operator pos:start="107:41" pos:end="107:41">(</operator><name pos:start="107:42" pos:end="107:43">m2</name> <operator pos:start="107:45" pos:end="107:45">*</operator> <call pos:start="107:47" pos:end="107:59"><name pos:start="107:47" pos:end="107:57"><name pos:start="107:47" pos:end="107:51">line2</name><operator pos:start="107:52" pos:end="107:52">.</operator><name pos:start="107:53" pos:end="107:57">getP1</name></name><argument_list pos:start="107:58" pos:end="107:59">()</argument_list></call><operator pos:start="107:60" pos:end="107:60">.</operator><call pos:start="107:61" pos:end="107:66"><name pos:start="107:61" pos:end="107:64">getX</name><argument_list pos:start="107:65" pos:end="107:66">()</argument_list></call><operator pos:start="107:67" pos:end="107:67">)</operator></expr>;</expr_stmt>
            <expr_stmt pos:start="108:13" pos:end="108:52"><expr pos:start="108:13" pos:end="108:51"><name pos:start="108:13" pos:end="108:25">yIntersection</name> <operator pos:start="108:27" pos:end="108:27">=</operator> <name pos:start="108:29" pos:end="108:30">m2</name> <operator pos:start="108:32" pos:end="108:32">*</operator> <name pos:start="108:34" pos:end="108:46">xIntersection</name> <operator pos:start="108:48" pos:end="108:48">+</operator> <name pos:start="108:50" pos:end="108:51">b2</name></expr>;</expr_stmt>
        </block_content>}</block></if>
        <if type="elseif" pos:start="110:9" pos:end="114:9">else if <condition pos:start="110:17" pos:end="110:41">(<expr pos:start="110:18" pos:end="110:40"><name pos:start="110:18" pos:end="110:19">m2</name> <operator pos:start="110:21" pos:end="110:21">&gt;</operator> <literal type="number" pos:start="110:23" pos:end="110:26">1000</literal> <operator pos:start="110:28" pos:end="110:29">||</operator> <name pos:start="110:31" pos:end="110:32">m2</name> <operator pos:start="110:34" pos:end="110:34">&lt;</operator> <operator pos:start="110:36" pos:end="110:36">-</operator><literal type="number" pos:start="110:37" pos:end="110:40">1000</literal></expr>)</condition><block pos:start="110:42" pos:end="114:9">{<block_content pos:start="111:13" pos:end="113:52">
            <expr_stmt pos:start="111:13" pos:end="111:49"><expr pos:start="111:13" pos:end="111:48"><name pos:start="111:13" pos:end="111:25">xIntersection</name> <operator pos:start="111:27" pos:end="111:27">=</operator> <call pos:start="111:29" pos:end="111:41"><name pos:start="111:29" pos:end="111:39"><name pos:start="111:29" pos:end="111:33">line2</name><operator pos:start="111:34" pos:end="111:34">.</operator><name pos:start="111:35" pos:end="111:39">getP1</name></name><argument_list pos:start="111:40" pos:end="111:41">()</argument_list></call><operator pos:start="111:42" pos:end="111:42">.</operator><call pos:start="111:43" pos:end="111:48"><name pos:start="111:43" pos:end="111:46">getX</name><argument_list pos:start="111:47" pos:end="111:48">()</argument_list></call></expr>;</expr_stmt>
            <expr_stmt pos:start="112:13" pos:end="112:68"><expr pos:start="112:13" pos:end="112:67"><name pos:start="112:13" pos:end="112:14">b1</name> <operator pos:start="112:16" pos:end="112:16">=</operator> <call pos:start="112:18" pos:end="112:30"><name pos:start="112:18" pos:end="112:28"><name pos:start="112:18" pos:end="112:22">line1</name><operator pos:start="112:23" pos:end="112:23">.</operator><name pos:start="112:24" pos:end="112:28">getP1</name></name><argument_list pos:start="112:29" pos:end="112:30">()</argument_list></call><operator pos:start="112:31" pos:end="112:31">.</operator><call pos:start="112:32" pos:end="112:37"><name pos:start="112:32" pos:end="112:35">getY</name><argument_list pos:start="112:36" pos:end="112:37">()</argument_list></call> <operator pos:start="112:39" pos:end="112:39">-</operator> <operator pos:start="112:41" pos:end="112:41">(</operator><name pos:start="112:42" pos:end="112:43">m1</name> <operator pos:start="112:45" pos:end="112:45">*</operator> <call pos:start="112:47" pos:end="112:59"><name pos:start="112:47" pos:end="112:57"><name pos:start="112:47" pos:end="112:51">line1</name><operator pos:start="112:52" pos:end="112:52">.</operator><name pos:start="112:53" pos:end="112:57">getP1</name></name><argument_list pos:start="112:58" pos:end="112:59">()</argument_list></call><operator pos:start="112:60" pos:end="112:60">.</operator><call pos:start="112:61" pos:end="112:66"><name pos:start="112:61" pos:end="112:64">getX</name><argument_list pos:start="112:65" pos:end="112:66">()</argument_list></call><operator pos:start="112:67" pos:end="112:67">)</operator></expr>;</expr_stmt>
            <expr_stmt pos:start="113:13" pos:end="113:52"><expr pos:start="113:13" pos:end="113:51"><name pos:start="113:13" pos:end="113:25">yIntersection</name> <operator pos:start="113:27" pos:end="113:27">=</operator> <name pos:start="113:29" pos:end="113:30">m1</name> <operator pos:start="113:32" pos:end="113:32">*</operator> <name pos:start="113:34" pos:end="113:46">xIntersection</name> <operator pos:start="113:48" pos:end="113:48">+</operator> <name pos:start="113:50" pos:end="113:51">b1</name></expr>;</expr_stmt>
        </block_content>}</block></if>

        <if type="elseif" pos:start="116:9" pos:end="120:9">else if <condition pos:start="116:17" pos:end="116:47">(<expr pos:start="116:18" pos:end="116:46"><name pos:start="116:18" pos:end="116:37"><name pos:start="116:18" pos:end="116:19">m1</name> <argument_list type="generic" pos:start="116:21" pos:end="116:37">&lt; <argument pos:start="116:23" pos:end="116:35"><name pos:start="116:23" pos:end="116:29">EPSILON</name> <operator pos:start="116:31" pos:end="116:32">&amp;&amp;</operator> <name pos:start="116:34" pos:end="116:35">m1</name></argument> &gt;</argument_list></name> <operator pos:start="116:39" pos:end="116:39">-</operator><name pos:start="116:40" pos:end="116:46">EPSILON</name></expr>)</condition> <block pos:start="116:49" pos:end="120:9">{<block_content pos:start="117:13" pos:end="119:54"> <comment type="line" pos:start="116:51" pos:end="116:67">//horizontal line</comment>
            <expr_stmt pos:start="117:13" pos:end="117:49"><expr pos:start="117:13" pos:end="117:48"><name pos:start="117:13" pos:end="117:25">yIntersection</name> <operator pos:start="117:27" pos:end="117:27">=</operator> <call pos:start="117:29" pos:end="117:41"><name pos:start="117:29" pos:end="117:39"><name pos:start="117:29" pos:end="117:33">line1</name><operator pos:start="117:34" pos:end="117:34">.</operator><name pos:start="117:35" pos:end="117:39">getP2</name></name><argument_list pos:start="117:40" pos:end="117:41">()</argument_list></call><operator pos:start="117:42" pos:end="117:42">.</operator><call pos:start="117:43" pos:end="117:48"><name pos:start="117:43" pos:end="117:46">getY</name><argument_list pos:start="117:47" pos:end="117:48">()</argument_list></call></expr>;</expr_stmt>
            <expr_stmt pos:start="118:13" pos:end="118:68"><expr pos:start="118:13" pos:end="118:67"><name pos:start="118:13" pos:end="118:14">b2</name> <operator pos:start="118:16" pos:end="118:16">=</operator> <call pos:start="118:18" pos:end="118:30"><name pos:start="118:18" pos:end="118:28"><name pos:start="118:18" pos:end="118:22">line2</name><operator pos:start="118:23" pos:end="118:23">.</operator><name pos:start="118:24" pos:end="118:28">getP1</name></name><argument_list pos:start="118:29" pos:end="118:30">()</argument_list></call><operator pos:start="118:31" pos:end="118:31">.</operator><call pos:start="118:32" pos:end="118:37"><name pos:start="118:32" pos:end="118:35">getY</name><argument_list pos:start="118:36" pos:end="118:37">()</argument_list></call> <operator pos:start="118:39" pos:end="118:39">-</operator> <operator pos:start="118:41" pos:end="118:41">(</operator><name pos:start="118:42" pos:end="118:43">m2</name> <operator pos:start="118:45" pos:end="118:45">*</operator> <call pos:start="118:47" pos:end="118:59"><name pos:start="118:47" pos:end="118:57"><name pos:start="118:47" pos:end="118:51">line2</name><operator pos:start="118:52" pos:end="118:52">.</operator><name pos:start="118:53" pos:end="118:57">getP1</name></name><argument_list pos:start="118:58" pos:end="118:59">()</argument_list></call><operator pos:start="118:60" pos:end="118:60">.</operator><call pos:start="118:61" pos:end="118:66"><name pos:start="118:61" pos:end="118:64">getX</name><argument_list pos:start="118:65" pos:end="118:66">()</argument_list></call><operator pos:start="118:67" pos:end="118:67">)</operator></expr>;</expr_stmt>
            <expr_stmt pos:start="119:13" pos:end="119:54"><expr pos:start="119:13" pos:end="119:53"><name pos:start="119:13" pos:end="119:25">xIntersection</name> <operator pos:start="119:27" pos:end="119:27">=</operator> <operator pos:start="119:29" pos:end="119:29">(</operator><name pos:start="119:30" pos:end="119:42">yIntersection</name> <operator pos:start="119:44" pos:end="119:44">-</operator> <name pos:start="119:46" pos:end="119:47">b2</name><operator pos:start="119:48" pos:end="119:48">)</operator> <operator pos:start="119:50" pos:end="119:50">/</operator> <name pos:start="119:52" pos:end="119:53">m2</name></expr>;</expr_stmt>
        </block_content>}</block></if>
        
        <if type="elseif" pos:start="122:9" pos:end="126:9">else if <condition pos:start="122:17" pos:end="122:47">(<expr pos:start="122:18" pos:end="122:46"><name pos:start="122:18" pos:end="122:37"><name pos:start="122:18" pos:end="122:19">m2</name> <argument_list type="generic" pos:start="122:21" pos:end="122:37">&lt; <argument pos:start="122:23" pos:end="122:35"><name pos:start="122:23" pos:end="122:29">EPSILON</name> <operator pos:start="122:31" pos:end="122:32">&amp;&amp;</operator> <name pos:start="122:34" pos:end="122:35">m2</name></argument> &gt;</argument_list></name> <operator pos:start="122:39" pos:end="122:39">-</operator><name pos:start="122:40" pos:end="122:46">EPSILON</name></expr>)</condition> <block pos:start="122:49" pos:end="126:9">{<block_content pos:start="123:13" pos:end="125:54"> <comment type="line" pos:start="122:51" pos:end="122:67">//horizontal line</comment>
            <expr_stmt pos:start="123:13" pos:end="123:49"><expr pos:start="123:13" pos:end="123:48"><name pos:start="123:13" pos:end="123:25">yIntersection</name> <operator pos:start="123:27" pos:end="123:27">=</operator> <call pos:start="123:29" pos:end="123:41"><name pos:start="123:29" pos:end="123:39"><name pos:start="123:29" pos:end="123:33">line2</name><operator pos:start="123:34" pos:end="123:34">.</operator><name pos:start="123:35" pos:end="123:39">getP2</name></name><argument_list pos:start="123:40" pos:end="123:41">()</argument_list></call><operator pos:start="123:42" pos:end="123:42">.</operator><call pos:start="123:43" pos:end="123:48"><name pos:start="123:43" pos:end="123:46">getY</name><argument_list pos:start="123:47" pos:end="123:48">()</argument_list></call></expr>;</expr_stmt>
            <expr_stmt pos:start="124:13" pos:end="124:68"><expr pos:start="124:13" pos:end="124:67"><name pos:start="124:13" pos:end="124:14">b1</name> <operator pos:start="124:16" pos:end="124:16">=</operator> <call pos:start="124:18" pos:end="124:30"><name pos:start="124:18" pos:end="124:28"><name pos:start="124:18" pos:end="124:22">line1</name><operator pos:start="124:23" pos:end="124:23">.</operator><name pos:start="124:24" pos:end="124:28">getP1</name></name><argument_list pos:start="124:29" pos:end="124:30">()</argument_list></call><operator pos:start="124:31" pos:end="124:31">.</operator><call pos:start="124:32" pos:end="124:37"><name pos:start="124:32" pos:end="124:35">getY</name><argument_list pos:start="124:36" pos:end="124:37">()</argument_list></call> <operator pos:start="124:39" pos:end="124:39">-</operator> <operator pos:start="124:41" pos:end="124:41">(</operator><name pos:start="124:42" pos:end="124:43">m1</name> <operator pos:start="124:45" pos:end="124:45">*</operator> <call pos:start="124:47" pos:end="124:59"><name pos:start="124:47" pos:end="124:57"><name pos:start="124:47" pos:end="124:51">line1</name><operator pos:start="124:52" pos:end="124:52">.</operator><name pos:start="124:53" pos:end="124:57">getP1</name></name><argument_list pos:start="124:58" pos:end="124:59">()</argument_list></call><operator pos:start="124:60" pos:end="124:60">.</operator><call pos:start="124:61" pos:end="124:66"><name pos:start="124:61" pos:end="124:64">getX</name><argument_list pos:start="124:65" pos:end="124:66">()</argument_list></call><operator pos:start="124:67" pos:end="124:67">)</operator></expr>;</expr_stmt>
            <expr_stmt pos:start="125:13" pos:end="125:54"><expr pos:start="125:13" pos:end="125:53"><name pos:start="125:13" pos:end="125:25">xIntersection</name> <operator pos:start="125:27" pos:end="125:27">=</operator> <operator pos:start="125:29" pos:end="125:29">(</operator><name pos:start="125:30" pos:end="125:42">yIntersection</name> <operator pos:start="125:44" pos:end="125:44">-</operator> <name pos:start="125:46" pos:end="125:47">b1</name><operator pos:start="125:48" pos:end="125:48">)</operator> <operator pos:start="125:50" pos:end="125:50">/</operator> <name pos:start="125:52" pos:end="125:53">m1</name></expr>;</expr_stmt>
        </block_content>}</block></if>

        <else pos:start="128:9" pos:end="133:9">else <block pos:start="128:14" pos:end="133:9">{<block_content pos:start="129:13" pos:end="132:64">
            <expr_stmt pos:start="129:13" pos:end="129:68"><expr pos:start="129:13" pos:end="129:67"><name pos:start="129:13" pos:end="129:14">b1</name> <operator pos:start="129:16" pos:end="129:16">=</operator> <call pos:start="129:18" pos:end="129:30"><name pos:start="129:18" pos:end="129:28"><name pos:start="129:18" pos:end="129:22">line1</name><operator pos:start="129:23" pos:end="129:23">.</operator><name pos:start="129:24" pos:end="129:28">getP1</name></name><argument_list pos:start="129:29" pos:end="129:30">()</argument_list></call><operator pos:start="129:31" pos:end="129:31">.</operator><call pos:start="129:32" pos:end="129:37"><name pos:start="129:32" pos:end="129:35">getY</name><argument_list pos:start="129:36" pos:end="129:37">()</argument_list></call> <operator pos:start="129:39" pos:end="129:39">-</operator> <operator pos:start="129:41" pos:end="129:41">(</operator><name pos:start="129:42" pos:end="129:43">m1</name> <operator pos:start="129:45" pos:end="129:45">*</operator> <call pos:start="129:47" pos:end="129:59"><name pos:start="129:47" pos:end="129:57"><name pos:start="129:47" pos:end="129:51">line1</name><operator pos:start="129:52" pos:end="129:52">.</operator><name pos:start="129:53" pos:end="129:57">getP1</name></name><argument_list pos:start="129:58" pos:end="129:59">()</argument_list></call><operator pos:start="129:60" pos:end="129:60">.</operator><call pos:start="129:61" pos:end="129:66"><name pos:start="129:61" pos:end="129:64">getX</name><argument_list pos:start="129:65" pos:end="129:66">()</argument_list></call><operator pos:start="129:67" pos:end="129:67">)</operator></expr>;</expr_stmt>
            <expr_stmt pos:start="130:13" pos:end="130:68"><expr pos:start="130:13" pos:end="130:67"><name pos:start="130:13" pos:end="130:14">b2</name> <operator pos:start="130:16" pos:end="130:16">=</operator> <call pos:start="130:18" pos:end="130:30"><name pos:start="130:18" pos:end="130:28"><name pos:start="130:18" pos:end="130:22">line2</name><operator pos:start="130:23" pos:end="130:23">.</operator><name pos:start="130:24" pos:end="130:28">getP1</name></name><argument_list pos:start="130:29" pos:end="130:30">()</argument_list></call><operator pos:start="130:31" pos:end="130:31">.</operator><call pos:start="130:32" pos:end="130:37"><name pos:start="130:32" pos:end="130:35">getY</name><argument_list pos:start="130:36" pos:end="130:37">()</argument_list></call> <operator pos:start="130:39" pos:end="130:39">-</operator> <operator pos:start="130:41" pos:end="130:41">(</operator><name pos:start="130:42" pos:end="130:43">m2</name> <operator pos:start="130:45" pos:end="130:45">*</operator> <call pos:start="130:47" pos:end="130:59"><name pos:start="130:47" pos:end="130:57"><name pos:start="130:47" pos:end="130:51">line2</name><operator pos:start="130:52" pos:end="130:52">.</operator><name pos:start="130:53" pos:end="130:57">getP1</name></name><argument_list pos:start="130:58" pos:end="130:59">()</argument_list></call><operator pos:start="130:60" pos:end="130:60">.</operator><call pos:start="130:61" pos:end="130:66"><name pos:start="130:61" pos:end="130:64">getX</name><argument_list pos:start="130:65" pos:end="130:66">()</argument_list></call><operator pos:start="130:67" pos:end="130:67">)</operator></expr>;</expr_stmt>
            <expr_stmt pos:start="131:13" pos:end="131:46"><expr pos:start="131:13" pos:end="131:45"><name pos:start="131:13" pos:end="131:25">xIntersection</name> <operator pos:start="131:27" pos:end="131:27">=</operator> <operator pos:start="131:29" pos:end="131:29">(</operator><name pos:start="131:30" pos:end="131:31">b2</name><operator pos:start="131:32" pos:end="131:32">-</operator><name pos:start="131:33" pos:end="131:34">b1</name><operator pos:start="131:35" pos:end="131:35">)</operator> <operator pos:start="131:37" pos:end="131:37">/</operator> <operator pos:start="131:39" pos:end="131:39">(</operator><name pos:start="131:40" pos:end="131:41">m1</name><operator pos:start="131:42" pos:end="131:42">-</operator><name pos:start="131:43" pos:end="131:44">m2</name><operator pos:start="131:45" pos:end="131:45">)</operator></expr>;</expr_stmt>
            <expr_stmt pos:start="132:13" pos:end="132:64"><expr pos:start="132:13" pos:end="132:63"><name pos:start="132:13" pos:end="132:25">yIntersection</name> <operator pos:start="132:27" pos:end="132:27">=</operator> <name pos:start="132:29" pos:end="132:30">m1</name> <operator pos:start="132:32" pos:end="132:32">*</operator> <operator pos:start="132:34" pos:end="132:34">(</operator> <operator pos:start="132:36" pos:end="132:36">(</operator><name pos:start="132:37" pos:end="132:38">b2</name> <operator pos:start="132:40" pos:end="132:40">-</operator> <name pos:start="132:42" pos:end="132:43">b1</name><operator pos:start="132:44" pos:end="132:44">)</operator> <operator pos:start="132:46" pos:end="132:46">/</operator> <operator pos:start="132:48" pos:end="132:48">(</operator><name pos:start="132:49" pos:end="132:50">m1</name> <operator pos:start="132:52" pos:end="132:52">-</operator> <name pos:start="132:54" pos:end="132:55">m2</name><operator pos:start="132:56" pos:end="132:56">)</operator> <operator pos:start="132:58" pos:end="132:58">)</operator> <operator pos:start="132:60" pos:end="132:60">+</operator> <name pos:start="132:62" pos:end="132:63">b1</name></expr>;</expr_stmt>
        </block_content>}</block></else></if_stmt>

        <return pos:start="135:9" pos:end="135:63">return <expr pos:start="135:16" pos:end="135:62"><operator pos:start="135:16" pos:end="135:18">new</operator> <call pos:start="135:20" pos:end="135:62"><name pos:start="135:20" pos:end="135:33"><name pos:start="135:20" pos:end="135:26">Point2D</name><operator pos:start="135:27" pos:end="135:27">.</operator><name pos:start="135:28" pos:end="135:33">Double</name></name><argument_list pos:start="135:34" pos:end="135:62">(<argument pos:start="135:35" pos:end="135:47"><expr pos:start="135:35" pos:end="135:47"><name pos:start="135:35" pos:end="135:47">xIntersection</name></expr></argument>,<argument pos:start="135:49" pos:end="135:61"><expr pos:start="135:49" pos:end="135:61"><name pos:start="135:49" pos:end="135:61">yIntersection</name></expr></argument>)</argument_list></call></expr>;</return>
    </block_content>}</block></function>
    
    
    <comment type="block" format="javadoc" pos:start="139:5" pos:end="144:7">/**
     * This function finds the cartesian distance between two points
     * @param pointA
     * @param pointB
     * @return cartesian distance
     */</comment>
    <function pos:start="145:5" pos:end="147:5"><type pos:start="145:5" pos:end="145:24"><specifier pos:start="145:5" pos:end="145:10">public</specifier> <specifier pos:start="145:12" pos:end="145:17">static</specifier> <name pos:start="145:19" pos:end="145:24">double</name></type> <name pos:start="145:26" pos:end="145:46">findCartesianDistance</name><parameter_list pos:start="145:47" pos:end="145:92">(<parameter pos:start="145:48" pos:end="145:68"><decl pos:start="145:48" pos:end="145:68"><type pos:start="145:48" pos:end="145:68"><name pos:start="145:48" pos:end="145:61"><name pos:start="145:48" pos:end="145:54">Point2D</name><operator pos:start="145:55" pos:end="145:55">.</operator><name pos:start="145:56" pos:end="145:61">Double</name></name></type> <name pos:start="145:63" pos:end="145:68">pointA</name></decl></parameter>, <parameter pos:start="145:71" pos:end="145:91"><decl pos:start="145:71" pos:end="145:91"><type pos:start="145:71" pos:end="145:91"><name pos:start="145:71" pos:end="145:84"><name pos:start="145:71" pos:end="145:77">Point2D</name><operator pos:start="145:78" pos:end="145:78">.</operator><name pos:start="145:79" pos:end="145:84">Double</name></name></type> <name pos:start="145:86" pos:end="145:91">pointB</name></decl></parameter>)</parameter_list> <block pos:start="145:94" pos:end="147:5">{<block_content pos:start="146:9" pos:end="146:118">
    	<return pos:start="146:9" pos:end="146:118">return <expr pos:start="146:16" pos:end="146:117"><call pos:start="146:16" pos:end="146:117"><name pos:start="146:16" pos:end="146:24"><name pos:start="146:16" pos:end="146:19">Math</name><operator pos:start="146:20" pos:end="146:20">.</operator><name pos:start="146:21" pos:end="146:24">sqrt</name></name><argument_list pos:start="146:25" pos:end="146:117">(<argument pos:start="146:26" pos:end="146:116"><expr pos:start="146:26" pos:end="146:116"><call pos:start="146:26" pos:end="146:69"><name pos:start="146:26" pos:end="146:33"><name pos:start="146:26" pos:end="146:29">Math</name><operator pos:start="146:30" pos:end="146:30">.</operator><name pos:start="146:31" pos:end="146:33">pow</name></name><argument_list pos:start="146:34" pos:end="146:69">(<argument pos:start="146:35" pos:end="146:65"><expr pos:start="146:35" pos:end="146:65"><operator pos:start="146:35" pos:end="146:35">(</operator><call pos:start="146:36" pos:end="146:48"><name pos:start="146:36" pos:end="146:46"><name pos:start="146:36" pos:end="146:41">pointA</name><operator pos:start="146:42" pos:end="146:42">.</operator><name pos:start="146:43" pos:end="146:46">getX</name></name><argument_list pos:start="146:47" pos:end="146:48">()</argument_list></call> <operator pos:start="146:50" pos:end="146:50">-</operator> <call pos:start="146:52" pos:end="146:64"><name pos:start="146:52" pos:end="146:62"><name pos:start="146:52" pos:end="146:57">pointB</name><operator pos:start="146:58" pos:end="146:58">.</operator><name pos:start="146:59" pos:end="146:62">getX</name></name><argument_list pos:start="146:63" pos:end="146:64">()</argument_list></call><operator pos:start="146:65" pos:end="146:65">)</operator></expr></argument>, <argument pos:start="146:68" pos:end="146:68"><expr pos:start="146:68" pos:end="146:68"><literal type="number" pos:start="146:68" pos:end="146:68">2</literal></expr></argument>)</argument_list></call> <operator pos:start="146:71" pos:end="146:71">+</operator> <call pos:start="146:73" pos:end="146:116"><name pos:start="146:73" pos:end="146:80"><name pos:start="146:73" pos:end="146:76">Math</name><operator pos:start="146:77" pos:end="146:77">.</operator><name pos:start="146:78" pos:end="146:80">pow</name></name><argument_list pos:start="146:81" pos:end="146:116">(<argument pos:start="146:82" pos:end="146:112"><expr pos:start="146:82" pos:end="146:112"><operator pos:start="146:82" pos:end="146:82">(</operator><call pos:start="146:83" pos:end="146:95"><name pos:start="146:83" pos:end="146:93"><name pos:start="146:83" pos:end="146:88">pointA</name><operator pos:start="146:89" pos:end="146:89">.</operator><name pos:start="146:90" pos:end="146:93">getY</name></name><argument_list pos:start="146:94" pos:end="146:95">()</argument_list></call> <operator pos:start="146:97" pos:end="146:97">-</operator> <call pos:start="146:99" pos:end="146:111"><name pos:start="146:99" pos:end="146:109"><name pos:start="146:99" pos:end="146:104">pointB</name><operator pos:start="146:105" pos:end="146:105">.</operator><name pos:start="146:106" pos:end="146:109">getY</name></name><argument_list pos:start="146:110" pos:end="146:111">()</argument_list></call><operator pos:start="146:112" pos:end="146:112">)</operator></expr></argument>, <argument pos:start="146:115" pos:end="146:115"><expr pos:start="146:115" pos:end="146:115"><literal type="number" pos:start="146:115" pos:end="146:115">2</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
    </block_content>}</block></function>
    
    
    <comment type="block" format="javadoc" pos:start="150:5" pos:end="156:7">/**
     * This function uses a distance ratio to calculate a point a given distance along the path from one point to another
     * @param point1
     * @param point2
     * @param distanceRatio - desired distance/distance between the two points
     * @return
     */</comment>
    <function pos:start="157:5" pos:end="161:5"><type pos:start="157:5" pos:end="157:32"><specifier pos:start="157:5" pos:end="157:10">public</specifier> <specifier pos:start="157:12" pos:end="157:17">static</specifier> <name pos:start="157:19" pos:end="157:32"><name pos:start="157:19" pos:end="157:25">Point2D</name><operator pos:start="157:26" pos:end="157:26">.</operator><name pos:start="157:27" pos:end="157:32">Double</name></name></type> <name pos:start="157:34" pos:end="157:48">findOffsetPoint</name><parameter_list pos:start="157:49" pos:end="157:116">(<parameter pos:start="157:50" pos:end="157:70"><decl pos:start="157:50" pos:end="157:70"><type pos:start="157:50" pos:end="157:70"><name pos:start="157:50" pos:end="157:63"><name pos:start="157:50" pos:end="157:56">Point2D</name><operator pos:start="157:57" pos:end="157:57">.</operator><name pos:start="157:58" pos:end="157:63">Double</name></name></type> <name pos:start="157:65" pos:end="157:70">point1</name></decl></parameter>, <parameter pos:start="157:73" pos:end="157:93"><decl pos:start="157:73" pos:end="157:93"><type pos:start="157:73" pos:end="157:93"><name pos:start="157:73" pos:end="157:86"><name pos:start="157:73" pos:end="157:79">Point2D</name><operator pos:start="157:80" pos:end="157:80">.</operator><name pos:start="157:81" pos:end="157:86">Double</name></name></type> <name pos:start="157:88" pos:end="157:93">point2</name></decl></parameter>, <parameter pos:start="157:96" pos:end="157:115"><decl pos:start="157:96" pos:end="157:115"><type pos:start="157:96" pos:end="157:115"><name pos:start="157:96" pos:end="157:101">double</name></type> <name pos:start="157:103" pos:end="157:115">distanceRatio</name></decl></parameter>)</parameter_list><block pos:start="157:117" pos:end="161:5">{<block_content pos:start="158:9" pos:end="160:24">
    	<decl_stmt pos:start="158:9" pos:end="158:55"><decl pos:start="158:9" pos:end="158:54"><type pos:start="158:9" pos:end="158:22"><name pos:start="158:9" pos:end="158:22"><name pos:start="158:9" pos:end="158:15">Point2D</name><operator pos:start="158:16" pos:end="158:16">.</operator><name pos:start="158:17" pos:end="158:22">Double</name></name></type> <name pos:start="158:24" pos:end="158:31">newPoint</name> <init pos:start="158:33" pos:end="158:54">= <expr pos:start="158:35" pos:end="158:54"><operator pos:start="158:35" pos:end="158:37">new</operator> <call pos:start="158:39" pos:end="158:54"><name pos:start="158:39" pos:end="158:52"><name pos:start="158:39" pos:end="158:45">Point2D</name><operator pos:start="158:46" pos:end="158:46">.</operator><name pos:start="158:47" pos:end="158:52">Double</name></name><argument_list pos:start="158:53" pos:end="158:54">()</argument_list></call></expr></init></decl>;</decl_stmt>
    	<expr_stmt pos:start="159:9" pos:end="159:159"><expr pos:start="159:9" pos:end="159:158"><call pos:start="159:9" pos:end="159:158"><name pos:start="159:9" pos:end="159:28"><name pos:start="159:9" pos:end="159:16">newPoint</name><operator pos:start="159:17" pos:end="159:17">.</operator><name pos:start="159:18" pos:end="159:28">setLocation</name></name><argument_list pos:start="159:29" pos:end="159:158">(<argument pos:start="159:30" pos:end="159:92"><expr pos:start="159:30" pos:end="159:92"><operator pos:start="159:30" pos:end="159:30">(</operator><operator pos:start="159:31" pos:end="159:31">(</operator><literal type="number" pos:start="159:32" pos:end="159:32">1</literal><operator pos:start="159:33" pos:end="159:33">-</operator><name pos:start="159:34" pos:end="159:46">distanceRatio</name><operator pos:start="159:47" pos:end="159:47">)</operator><operator pos:start="159:48" pos:end="159:48">*</operator><call pos:start="159:49" pos:end="159:61"><name pos:start="159:49" pos:end="159:59"><name pos:start="159:49" pos:end="159:54">point1</name><operator pos:start="159:55" pos:end="159:55">.</operator><name pos:start="159:56" pos:end="159:59">getX</name></name><argument_list pos:start="159:60" pos:end="159:61">()</argument_list></call> <operator pos:start="159:63" pos:end="159:63">+</operator> <name pos:start="159:65" pos:end="159:77">distanceRatio</name><operator pos:start="159:78" pos:end="159:78">*</operator><call pos:start="159:79" pos:end="159:91"><name pos:start="159:79" pos:end="159:89"><name pos:start="159:79" pos:end="159:84">point2</name><operator pos:start="159:85" pos:end="159:85">.</operator><name pos:start="159:86" pos:end="159:89">getX</name></name><argument_list pos:start="159:90" pos:end="159:91">()</argument_list></call><operator pos:start="159:92" pos:end="159:92">)</operator></expr></argument>, <argument pos:start="159:95" pos:end="159:157"><expr pos:start="159:95" pos:end="159:157"><operator pos:start="159:95" pos:end="159:95">(</operator><operator pos:start="159:96" pos:end="159:96">(</operator><literal type="number" pos:start="159:97" pos:end="159:97">1</literal><operator pos:start="159:98" pos:end="159:98">-</operator><name pos:start="159:99" pos:end="159:111">distanceRatio</name><operator pos:start="159:112" pos:end="159:112">)</operator><operator pos:start="159:113" pos:end="159:113">*</operator><call pos:start="159:114" pos:end="159:126"><name pos:start="159:114" pos:end="159:124"><name pos:start="159:114" pos:end="159:119">point1</name><operator pos:start="159:120" pos:end="159:120">.</operator><name pos:start="159:121" pos:end="159:124">getY</name></name><argument_list pos:start="159:125" pos:end="159:126">()</argument_list></call> <operator pos:start="159:128" pos:end="159:128">+</operator> <name pos:start="159:130" pos:end="159:142">distanceRatio</name><operator pos:start="159:143" pos:end="159:143">*</operator><call pos:start="159:144" pos:end="159:156"><name pos:start="159:144" pos:end="159:154"><name pos:start="159:144" pos:end="159:149">point2</name><operator pos:start="159:150" pos:end="159:150">.</operator><name pos:start="159:151" pos:end="159:154">getY</name></name><argument_list pos:start="159:155" pos:end="159:156">()</argument_list></call><operator pos:start="159:157" pos:end="159:157">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    	<return pos:start="160:9" pos:end="160:24">return <expr pos:start="160:16" pos:end="160:23"><name pos:start="160:16" pos:end="160:23">newPoint</name></expr>;</return>
    </block_content>}</block></function>
    
    
    <comment type="block" format="javadoc" pos:start="164:5" pos:end="168:7">/**
     * This function calculates the total cartesian distance of a RoutePrimitive
     * @param route
     * @return cartesian distance
     */</comment>
    <function pos:start="169:5" pos:end="175:5"><type pos:start="169:5" pos:end="169:24"><specifier pos:start="169:5" pos:end="169:10">public</specifier> <specifier pos:start="169:12" pos:end="169:17">static</specifier> <name pos:start="169:19" pos:end="169:24">double</name></type> <name pos:start="169:26" pos:end="169:47">routePrimitiveDistance</name><parameter_list pos:start="169:48" pos:end="169:75">(<parameter pos:start="169:49" pos:end="169:74"><decl pos:start="169:49" pos:end="169:74"><type pos:start="169:49" pos:end="169:68"><name pos:start="169:49" pos:end="169:68"><name pos:start="169:49" pos:end="169:52">List</name><argument_list type="generic" pos:start="169:53" pos:end="169:68">&lt;<argument pos:start="169:54" pos:end="169:67"><name pos:start="169:54" pos:end="169:67"><name pos:start="169:54" pos:end="169:60">Point2D</name><operator pos:start="169:61" pos:end="169:61">.</operator><name pos:start="169:62" pos:end="169:67">Double</name></name></argument>&gt;</argument_list></name></type> <name pos:start="169:70" pos:end="169:74">route</name></decl></parameter>)</parameter_list> <block pos:start="169:77" pos:end="175:5">{<block_content pos:start="170:9" pos:end="174:29">
    	<decl_stmt pos:start="170:9" pos:end="170:33"><decl pos:start="170:9" pos:end="170:32"><type pos:start="170:9" pos:end="170:14"><name pos:start="170:9" pos:end="170:14">double</name></type> <name pos:start="170:16" pos:end="170:28">totalDistance</name> <init pos:start="170:30" pos:end="170:32">= <expr pos:start="170:32" pos:end="170:32"><literal type="number" pos:start="170:32" pos:end="170:32">0</literal></expr></init></decl>;</decl_stmt>
    	<for pos:start="171:9" pos:end="173:9">for<control pos:start="171:12" pos:end="171:47">(<init pos:start="171:13" pos:end="171:22"><decl pos:start="171:13" pos:end="171:21"><type pos:start="171:13" pos:end="171:15"><name pos:start="171:13" pos:end="171:15">int</name></type> <name pos:start="171:17" pos:end="171:17">i</name> <init pos:start="171:19" pos:end="171:21">= <expr pos:start="171:21" pos:end="171:21"><literal type="number" pos:start="171:21" pos:end="171:21">0</literal></expr></init></decl>;</init> <condition pos:start="171:24" pos:end="171:42"><expr pos:start="171:24" pos:end="171:41"><name pos:start="171:24" pos:end="171:24">i</name> <operator pos:start="171:26" pos:end="171:26">&lt;</operator> <call pos:start="171:28" pos:end="171:39"><name pos:start="171:28" pos:end="171:37"><name pos:start="171:28" pos:end="171:32">route</name><operator pos:start="171:33" pos:end="171:33">.</operator><name pos:start="171:34" pos:end="171:37">size</name></name><argument_list pos:start="171:38" pos:end="171:39">()</argument_list></call><operator pos:start="171:40" pos:end="171:40">-</operator><literal type="number" pos:start="171:41" pos:end="171:41">1</literal></expr>;</condition> <incr pos:start="171:44" pos:end="171:46"><expr pos:start="171:44" pos:end="171:46"><name pos:start="171:44" pos:end="171:44">i</name><operator pos:start="171:45" pos:end="171:46">++</operator></expr></incr>)</control> <block pos:start="171:49" pos:end="173:9">{<block_content pos:start="172:17" pos:end="172:85">
    		<expr_stmt pos:start="172:17" pos:end="172:85"><expr pos:start="172:17" pos:end="172:84"><name pos:start="172:17" pos:end="172:29">totalDistance</name> <operator pos:start="172:31" pos:end="172:32">+=</operator> <call pos:start="172:34" pos:end="172:84"><name pos:start="172:34" pos:end="172:54">findCartesianDistance</name><argument_list pos:start="172:55" pos:end="172:84">(<argument pos:start="172:56" pos:end="172:67"><expr pos:start="172:56" pos:end="172:67"><call pos:start="172:56" pos:end="172:67"><name pos:start="172:56" pos:end="172:64"><name pos:start="172:56" pos:end="172:60">route</name><operator pos:start="172:61" pos:end="172:61">.</operator><name pos:start="172:62" pos:end="172:64">get</name></name><argument_list pos:start="172:65" pos:end="172:67">(<argument pos:start="172:66" pos:end="172:66"><expr pos:start="172:66" pos:end="172:66"><name pos:start="172:66" pos:end="172:66">i</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="172:70" pos:end="172:83"><expr pos:start="172:70" pos:end="172:83"><call pos:start="172:70" pos:end="172:83"><name pos:start="172:70" pos:end="172:78"><name pos:start="172:70" pos:end="172:74">route</name><operator pos:start="172:75" pos:end="172:75">.</operator><name pos:start="172:76" pos:end="172:78">get</name></name><argument_list pos:start="172:79" pos:end="172:83">(<argument pos:start="172:80" pos:end="172:82"><expr pos:start="172:80" pos:end="172:82"><name pos:start="172:80" pos:end="172:80">i</name><operator pos:start="172:81" pos:end="172:81">+</operator><literal type="number" pos:start="172:82" pos:end="172:82">1</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    	</block_content>}</block></for>
    	<return pos:start="174:9" pos:end="174:29">return <expr pos:start="174:16" pos:end="174:28"><name pos:start="174:16" pos:end="174:28">totalDistance</name></expr>;</return>
    </block_content>}</block></function>
    
    
    <comment type="block" format="javadoc" pos:start="178:5" pos:end="182:7">/**
     * This function calculates the total cartesian distance of a RiverBank
     * @param bank
     * @return cartesian distance
     */</comment>
    <function pos:start="183:5" pos:end="189:5"><type pos:start="183:5" pos:end="183:24"><specifier pos:start="183:5" pos:end="183:10">public</specifier> <specifier pos:start="183:12" pos:end="183:17">static</specifier> <name pos:start="183:19" pos:end="183:24">double</name></type> <name pos:start="183:26" pos:end="183:42">riverBankDistance</name><parameter_list pos:start="183:43" pos:end="183:58">(<parameter pos:start="183:44" pos:end="183:57"><decl pos:start="183:44" pos:end="183:57"><type pos:start="183:44" pos:end="183:52"><name pos:start="183:44" pos:end="183:52">RiverBank</name></type> <name pos:start="183:54" pos:end="183:57">bank</name></decl></parameter>)</parameter_list> <block pos:start="183:60" pos:end="189:5">{<block_content pos:start="184:9" pos:end="188:29">
    	<decl_stmt pos:start="184:9" pos:end="184:33"><decl pos:start="184:9" pos:end="184:32"><type pos:start="184:9" pos:end="184:14"><name pos:start="184:9" pos:end="184:14">double</name></type> <name pos:start="184:16" pos:end="184:28">totalDistance</name> <init pos:start="184:30" pos:end="184:32">= <expr pos:start="184:32" pos:end="184:32"><literal type="number" pos:start="184:32" pos:end="184:32">0</literal></expr></init></decl>;</decl_stmt>
    	<for pos:start="185:9" pos:end="187:9">for<control pos:start="185:12" pos:end="185:46">(<init pos:start="185:13" pos:end="185:22"><decl pos:start="185:13" pos:end="185:21"><type pos:start="185:13" pos:end="185:15"><name pos:start="185:13" pos:end="185:15">int</name></type> <name pos:start="185:17" pos:end="185:17">i</name> <init pos:start="185:19" pos:end="185:21">= <expr pos:start="185:21" pos:end="185:21"><literal type="number" pos:start="185:21" pos:end="185:21">0</literal></expr></init></decl>;</init> <condition pos:start="185:24" pos:end="185:41"><expr pos:start="185:24" pos:end="185:40"><name pos:start="185:24" pos:end="185:24">i</name> <operator pos:start="185:26" pos:end="185:26">&lt;</operator> <call pos:start="185:28" pos:end="185:38"><name pos:start="185:28" pos:end="185:36"><name pos:start="185:28" pos:end="185:31">bank</name><operator pos:start="185:32" pos:end="185:32">.</operator><name pos:start="185:33" pos:end="185:36">size</name></name><argument_list pos:start="185:37" pos:end="185:38">()</argument_list></call><operator pos:start="185:39" pos:end="185:39">-</operator><literal type="number" pos:start="185:40" pos:end="185:40">1</literal></expr>;</condition> <incr pos:start="185:43" pos:end="185:45"><expr pos:start="185:43" pos:end="185:45"><name pos:start="185:43" pos:end="185:43">i</name><operator pos:start="185:44" pos:end="185:45">++</operator></expr></incr>)</control> <block pos:start="185:48" pos:end="187:9">{<block_content pos:start="186:17" pos:end="186:83">
    		<expr_stmt pos:start="186:17" pos:end="186:83"><expr pos:start="186:17" pos:end="186:82"><name pos:start="186:17" pos:end="186:29">totalDistance</name> <operator pos:start="186:31" pos:end="186:32">+=</operator> <call pos:start="186:34" pos:end="186:82"><name pos:start="186:34" pos:end="186:54">findCartesianDistance</name><argument_list pos:start="186:55" pos:end="186:82">(<argument pos:start="186:56" pos:end="186:66"><expr pos:start="186:56" pos:end="186:66"><call pos:start="186:56" pos:end="186:66"><name pos:start="186:56" pos:end="186:63"><name pos:start="186:56" pos:end="186:59">bank</name><operator pos:start="186:60" pos:end="186:60">.</operator><name pos:start="186:61" pos:end="186:63">get</name></name><argument_list pos:start="186:64" pos:end="186:66">(<argument pos:start="186:65" pos:end="186:65"><expr pos:start="186:65" pos:end="186:65"><name pos:start="186:65" pos:end="186:65">i</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="186:69" pos:end="186:81"><expr pos:start="186:69" pos:end="186:81"><call pos:start="186:69" pos:end="186:81"><name pos:start="186:69" pos:end="186:76"><name pos:start="186:69" pos:end="186:72">bank</name><operator pos:start="186:73" pos:end="186:73">.</operator><name pos:start="186:74" pos:end="186:76">get</name></name><argument_list pos:start="186:77" pos:end="186:81">(<argument pos:start="186:78" pos:end="186:80"><expr pos:start="186:78" pos:end="186:80"><name pos:start="186:78" pos:end="186:78">i</name><operator pos:start="186:79" pos:end="186:79">+</operator><literal type="number" pos:start="186:80" pos:end="186:80">1</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    	</block_content>}</block></for>
    	<return pos:start="188:9" pos:end="188:29">return <expr pos:start="188:16" pos:end="188:28"><name pos:start="188:16" pos:end="188:28">totalDistance</name></expr>;</return>
    </block_content>}</block></function>
    
    
    <comment type="block" format="javadoc" pos:start="192:5" pos:end="196:7">/**
     * This function calculates the area irregular polygon shape of the river segment
     * @param segment
     * @return area
     */</comment>
    <function pos:start="197:5" pos:end="213:5"><type pos:start="197:5" pos:end="197:24"><specifier pos:start="197:5" pos:end="197:10">public</specifier> <specifier pos:start="197:12" pos:end="197:17">static</specifier> <name pos:start="197:19" pos:end="197:24">double</name></type> <name pos:start="197:26" pos:end="197:50">calculateRiverSegmentArea</name><parameter_list pos:start="197:51" pos:end="197:75">(<parameter pos:start="197:52" pos:end="197:74"><decl pos:start="197:52" pos:end="197:74"><type pos:start="197:52" pos:end="197:66"><name pos:start="197:52" pos:end="197:66">RiverSubsegment</name></type> <name pos:start="197:68" pos:end="197:74">segment</name></decl></parameter>)</parameter_list> <block pos:start="197:77" pos:end="213:5">{<block_content pos:start="198:9" pos:end="212:30">
    	<decl_stmt pos:start="198:9" pos:end="198:24"><decl pos:start="198:9" pos:end="198:23"><type pos:start="198:9" pos:end="198:14"><name pos:start="198:9" pos:end="198:14">double</name></type> <name pos:start="198:16" pos:end="198:19">area</name> <init pos:start="198:21" pos:end="198:23">= <expr pos:start="198:23" pos:end="198:23"><literal type="number" pos:start="198:23" pos:end="198:23">0</literal></expr></init></decl>;</decl_stmt>
    	<decl_stmt pos:start="199:9" pos:end="199:58"><decl pos:start="199:9" pos:end="199:57"><type pos:start="199:9" pos:end="199:28"><name pos:start="199:9" pos:end="199:28"><name pos:start="199:9" pos:end="199:12">List</name><argument_list type="generic" pos:start="199:13" pos:end="199:28">&lt;<argument pos:start="199:14" pos:end="199:27"><name pos:start="199:14" pos:end="199:27"><name pos:start="199:14" pos:end="199:20">Point2D</name><operator pos:start="199:21" pos:end="199:21">.</operator><name pos:start="199:22" pos:end="199:27">Double</name></name></argument>&gt;</argument_list></name></type> <name pos:start="199:30" pos:end="199:34">bank1</name> <init pos:start="199:36" pos:end="199:57">= <expr pos:start="199:38" pos:end="199:57"><call pos:start="199:38" pos:end="199:51"><name pos:start="199:38" pos:end="199:48"><name pos:start="199:38" pos:end="199:44">segment</name><operator pos:start="199:45" pos:end="199:45">.</operator><name pos:start="199:46" pos:end="199:48">get</name></name><argument_list pos:start="199:49" pos:end="199:51">(<argument pos:start="199:50" pos:end="199:50"><expr pos:start="199:50" pos:end="199:50"><literal type="number" pos:start="199:50" pos:end="199:50">0</literal></expr></argument>)</argument_list></call><operator pos:start="199:52" pos:end="199:52">.</operator><call pos:start="199:53" pos:end="199:57"><name pos:start="199:53" pos:end="199:55">get</name><argument_list pos:start="199:56" pos:end="199:57">()</argument_list></call></expr></init></decl>;</decl_stmt>
    	<for pos:start="200:9" pos:end="202:9">for<control pos:start="200:12" pos:end="200:47">(<init pos:start="200:13" pos:end="200:22"><decl pos:start="200:13" pos:end="200:21"><type pos:start="200:13" pos:end="200:15"><name pos:start="200:13" pos:end="200:15">int</name></type> <name pos:start="200:17" pos:end="200:17">i</name> <init pos:start="200:19" pos:end="200:21">= <expr pos:start="200:21" pos:end="200:21"><literal type="number" pos:start="200:21" pos:end="200:21">0</literal></expr></init></decl>;</init> <condition pos:start="200:24" pos:end="200:42"><expr pos:start="200:24" pos:end="200:41"><name pos:start="200:24" pos:end="200:24">i</name> <operator pos:start="200:26" pos:end="200:26">&lt;</operator> <call pos:start="200:28" pos:end="200:39"><name pos:start="200:28" pos:end="200:37"><name pos:start="200:28" pos:end="200:32">bank1</name><operator pos:start="200:33" pos:end="200:33">.</operator><name pos:start="200:34" pos:end="200:37">size</name></name><argument_list pos:start="200:38" pos:end="200:39">()</argument_list></call><operator pos:start="200:40" pos:end="200:40">-</operator><literal type="number" pos:start="200:41" pos:end="200:41">1</literal></expr>;</condition> <incr pos:start="200:44" pos:end="200:46"><expr pos:start="200:44" pos:end="200:46"><name pos:start="200:44" pos:end="200:44">i</name><operator pos:start="200:45" pos:end="200:46">++</operator></expr></incr>)</control> <block pos:start="200:49" pos:end="202:9">{<block_content pos:start="201:17" pos:end="201:110">
    		<expr_stmt pos:start="201:17" pos:end="201:110"><expr pos:start="201:17" pos:end="201:109"><name pos:start="201:17" pos:end="201:20">area</name> <operator pos:start="201:22" pos:end="201:23">+=</operator> <call pos:start="201:25" pos:end="201:36"><name pos:start="201:25" pos:end="201:33"><name pos:start="201:25" pos:end="201:29">bank1</name><operator pos:start="201:30" pos:end="201:30">.</operator><name pos:start="201:31" pos:end="201:33">get</name></name><argument_list pos:start="201:34" pos:end="201:36">(<argument pos:start="201:35" pos:end="201:35"><expr pos:start="201:35" pos:end="201:35"><name pos:start="201:35" pos:end="201:35">i</name></expr></argument>)</argument_list></call><operator pos:start="201:37" pos:end="201:37">.</operator><call pos:start="201:38" pos:end="201:43"><name pos:start="201:38" pos:end="201:41">getY</name><argument_list pos:start="201:42" pos:end="201:43">()</argument_list></call><operator pos:start="201:44" pos:end="201:44">*</operator><call pos:start="201:45" pos:end="201:58"><name pos:start="201:45" pos:end="201:53"><name pos:start="201:45" pos:end="201:49">bank1</name><operator pos:start="201:50" pos:end="201:50">.</operator><name pos:start="201:51" pos:end="201:53">get</name></name><argument_list pos:start="201:54" pos:end="201:58">(<argument pos:start="201:55" pos:end="201:57"><expr pos:start="201:55" pos:end="201:57"><name pos:start="201:55" pos:end="201:55">i</name><operator pos:start="201:56" pos:end="201:56">+</operator><literal type="number" pos:start="201:57" pos:end="201:57">1</literal></expr></argument>)</argument_list></call><operator pos:start="201:59" pos:end="201:59">.</operator><call pos:start="201:60" pos:end="201:65"><name pos:start="201:60" pos:end="201:63">getX</name><argument_list pos:start="201:64" pos:end="201:65">()</argument_list></call> <operator pos:start="201:67" pos:end="201:67">-</operator> <call pos:start="201:69" pos:end="201:80"><name pos:start="201:69" pos:end="201:77"><name pos:start="201:69" pos:end="201:73">bank1</name><operator pos:start="201:74" pos:end="201:74">.</operator><name pos:start="201:75" pos:end="201:77">get</name></name><argument_list pos:start="201:78" pos:end="201:80">(<argument pos:start="201:79" pos:end="201:79"><expr pos:start="201:79" pos:end="201:79"><name pos:start="201:79" pos:end="201:79">i</name></expr></argument>)</argument_list></call><operator pos:start="201:81" pos:end="201:81">.</operator><call pos:start="201:82" pos:end="201:87"><name pos:start="201:82" pos:end="201:85">getX</name><argument_list pos:start="201:86" pos:end="201:87">()</argument_list></call><operator pos:start="201:88" pos:end="201:88">*</operator><call pos:start="201:89" pos:end="201:102"><name pos:start="201:89" pos:end="201:97"><name pos:start="201:89" pos:end="201:93">bank1</name><operator pos:start="201:94" pos:end="201:94">.</operator><name pos:start="201:95" pos:end="201:97">get</name></name><argument_list pos:start="201:98" pos:end="201:102">(<argument pos:start="201:99" pos:end="201:101"><expr pos:start="201:99" pos:end="201:101"><name pos:start="201:99" pos:end="201:99">i</name><operator pos:start="201:100" pos:end="201:100">+</operator><literal type="number" pos:start="201:101" pos:end="201:101">1</literal></expr></argument>)</argument_list></call><operator pos:start="201:103" pos:end="201:103">.</operator><call pos:start="201:104" pos:end="201:109"><name pos:start="201:104" pos:end="201:107">getY</name><argument_list pos:start="201:108" pos:end="201:109">()</argument_list></call></expr>;</expr_stmt>
    	</block_content>}</block></for>
    	<decl_stmt pos:start="203:9" pos:end="203:41"><decl pos:start="203:9" pos:end="203:40"><type pos:start="203:9" pos:end="203:17"><name pos:start="203:9" pos:end="203:17">RiverBank</name></type> <name pos:start="203:19" pos:end="203:23">bank2</name> <init pos:start="203:25" pos:end="203:40">= <expr pos:start="203:27" pos:end="203:40"><call pos:start="203:27" pos:end="203:40"><name pos:start="203:27" pos:end="203:37"><name pos:start="203:27" pos:end="203:33">segment</name><operator pos:start="203:34" pos:end="203:34">.</operator><name pos:start="203:35" pos:end="203:37">get</name></name><argument_list pos:start="203:38" pos:end="203:40">(<argument pos:start="203:39" pos:end="203:39"><expr pos:start="203:39" pos:end="203:39"><literal type="number" pos:start="203:39" pos:end="203:39">1</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    	<expr_stmt pos:start="204:9" pos:end="204:24"><expr pos:start="204:9" pos:end="204:23"><call pos:start="204:9" pos:end="204:23"><name pos:start="204:9" pos:end="204:21"><name pos:start="204:9" pos:end="204:13">bank2</name><operator pos:start="204:14" pos:end="204:14">.</operator><name pos:start="204:15" pos:end="204:21">reverse</name></name><argument_list pos:start="204:22" pos:end="204:23">()</argument_list></call></expr>;</expr_stmt>
    	<expr_stmt pos:start="205:9" pos:end="205:124"><expr pos:start="205:9" pos:end="205:123"><name pos:start="205:9" pos:end="205:12">area</name> <operator pos:start="205:14" pos:end="205:15">+=</operator> <call pos:start="205:17" pos:end="205:41"><name pos:start="205:17" pos:end="205:25"><name pos:start="205:17" pos:end="205:21">bank1</name><operator pos:start="205:22" pos:end="205:22">.</operator><name pos:start="205:23" pos:end="205:25">get</name></name><argument_list pos:start="205:26" pos:end="205:41">(<argument pos:start="205:27" pos:end="205:40"><expr pos:start="205:27" pos:end="205:40"><call pos:start="205:27" pos:end="205:38"><name pos:start="205:27" pos:end="205:36"><name pos:start="205:27" pos:end="205:31">bank1</name><operator pos:start="205:32" pos:end="205:32">.</operator><name pos:start="205:33" pos:end="205:36">size</name></name><argument_list pos:start="205:37" pos:end="205:38">()</argument_list></call><operator pos:start="205:39" pos:end="205:39">-</operator><literal type="number" pos:start="205:40" pos:end="205:40">1</literal></expr></argument>)</argument_list></call><operator pos:start="205:42" pos:end="205:42">.</operator><call pos:start="205:43" pos:end="205:48"><name pos:start="205:43" pos:end="205:46">getY</name><argument_list pos:start="205:47" pos:end="205:48">()</argument_list></call><operator pos:start="205:49" pos:end="205:49">*</operator><call pos:start="205:50" pos:end="205:61"><name pos:start="205:50" pos:end="205:58"><name pos:start="205:50" pos:end="205:54">bank2</name><operator pos:start="205:55" pos:end="205:55">.</operator><name pos:start="205:56" pos:end="205:58">get</name></name><argument_list pos:start="205:59" pos:end="205:61">(<argument pos:start="205:60" pos:end="205:60"><expr pos:start="205:60" pos:end="205:60"><literal type="number" pos:start="205:60" pos:end="205:60">0</literal></expr></argument>)</argument_list></call><operator pos:start="205:62" pos:end="205:62">.</operator><call pos:start="205:63" pos:end="205:68"><name pos:start="205:63" pos:end="205:66">getX</name><argument_list pos:start="205:67" pos:end="205:68">()</argument_list></call> <operator pos:start="205:70" pos:end="205:70">-</operator> <call pos:start="205:72" pos:end="205:96"><name pos:start="205:72" pos:end="205:80"><name pos:start="205:72" pos:end="205:76">bank1</name><operator pos:start="205:77" pos:end="205:77">.</operator><name pos:start="205:78" pos:end="205:80">get</name></name><argument_list pos:start="205:81" pos:end="205:96">(<argument pos:start="205:82" pos:end="205:95"><expr pos:start="205:82" pos:end="205:95"><call pos:start="205:82" pos:end="205:93"><name pos:start="205:82" pos:end="205:91"><name pos:start="205:82" pos:end="205:86">bank1</name><operator pos:start="205:87" pos:end="205:87">.</operator><name pos:start="205:88" pos:end="205:91">size</name></name><argument_list pos:start="205:92" pos:end="205:93">()</argument_list></call><operator pos:start="205:94" pos:end="205:94">-</operator><literal type="number" pos:start="205:95" pos:end="205:95">1</literal></expr></argument>)</argument_list></call><operator pos:start="205:97" pos:end="205:97">.</operator><call pos:start="205:98" pos:end="205:103"><name pos:start="205:98" pos:end="205:101">getX</name><argument_list pos:start="205:102" pos:end="205:103">()</argument_list></call><operator pos:start="205:104" pos:end="205:104">*</operator><call pos:start="205:105" pos:end="205:116"><name pos:start="205:105" pos:end="205:113"><name pos:start="205:105" pos:end="205:109">bank2</name><operator pos:start="205:110" pos:end="205:110">.</operator><name pos:start="205:111" pos:end="205:113">get</name></name><argument_list pos:start="205:114" pos:end="205:116">(<argument pos:start="205:115" pos:end="205:115"><expr pos:start="205:115" pos:end="205:115"><literal type="number" pos:start="205:115" pos:end="205:115">0</literal></expr></argument>)</argument_list></call><operator pos:start="205:117" pos:end="205:117">.</operator><call pos:start="205:118" pos:end="205:123"><name pos:start="205:118" pos:end="205:121">getY</name><argument_list pos:start="205:122" pos:end="205:123">()</argument_list></call></expr>;</expr_stmt>
    	<for pos:start="206:9" pos:end="208:9">for<control pos:start="206:12" pos:end="206:47">(<init pos:start="206:13" pos:end="206:22"><decl pos:start="206:13" pos:end="206:21"><type pos:start="206:13" pos:end="206:15"><name pos:start="206:13" pos:end="206:15">int</name></type> <name pos:start="206:17" pos:end="206:17">i</name> <init pos:start="206:19" pos:end="206:21">= <expr pos:start="206:21" pos:end="206:21"><literal type="number" pos:start="206:21" pos:end="206:21">0</literal></expr></init></decl>;</init> <condition pos:start="206:24" pos:end="206:42"><expr pos:start="206:24" pos:end="206:41"><name pos:start="206:24" pos:end="206:24">i</name> <operator pos:start="206:26" pos:end="206:26">&lt;</operator> <call pos:start="206:28" pos:end="206:39"><name pos:start="206:28" pos:end="206:37"><name pos:start="206:28" pos:end="206:32">bank2</name><operator pos:start="206:33" pos:end="206:33">.</operator><name pos:start="206:34" pos:end="206:37">size</name></name><argument_list pos:start="206:38" pos:end="206:39">()</argument_list></call><operator pos:start="206:40" pos:end="206:40">-</operator><literal type="number" pos:start="206:41" pos:end="206:41">1</literal></expr>;</condition> <incr pos:start="206:44" pos:end="206:46"><expr pos:start="206:44" pos:end="206:46"><name pos:start="206:44" pos:end="206:44">i</name><operator pos:start="206:45" pos:end="206:46">++</operator></expr></incr>)</control> <block pos:start="206:49" pos:end="208:9">{<block_content pos:start="207:17" pos:end="207:110">
    		<expr_stmt pos:start="207:17" pos:end="207:110"><expr pos:start="207:17" pos:end="207:109"><name pos:start="207:17" pos:end="207:20">area</name> <operator pos:start="207:22" pos:end="207:23">+=</operator> <call pos:start="207:25" pos:end="207:36"><name pos:start="207:25" pos:end="207:33"><name pos:start="207:25" pos:end="207:29">bank2</name><operator pos:start="207:30" pos:end="207:30">.</operator><name pos:start="207:31" pos:end="207:33">get</name></name><argument_list pos:start="207:34" pos:end="207:36">(<argument pos:start="207:35" pos:end="207:35"><expr pos:start="207:35" pos:end="207:35"><name pos:start="207:35" pos:end="207:35">i</name></expr></argument>)</argument_list></call><operator pos:start="207:37" pos:end="207:37">.</operator><call pos:start="207:38" pos:end="207:43"><name pos:start="207:38" pos:end="207:41">getY</name><argument_list pos:start="207:42" pos:end="207:43">()</argument_list></call><operator pos:start="207:44" pos:end="207:44">*</operator><call pos:start="207:45" pos:end="207:58"><name pos:start="207:45" pos:end="207:53"><name pos:start="207:45" pos:end="207:49">bank2</name><operator pos:start="207:50" pos:end="207:50">.</operator><name pos:start="207:51" pos:end="207:53">get</name></name><argument_list pos:start="207:54" pos:end="207:58">(<argument pos:start="207:55" pos:end="207:57"><expr pos:start="207:55" pos:end="207:57"><name pos:start="207:55" pos:end="207:55">i</name><operator pos:start="207:56" pos:end="207:56">+</operator><literal type="number" pos:start="207:57" pos:end="207:57">1</literal></expr></argument>)</argument_list></call><operator pos:start="207:59" pos:end="207:59">.</operator><call pos:start="207:60" pos:end="207:65"><name pos:start="207:60" pos:end="207:63">getX</name><argument_list pos:start="207:64" pos:end="207:65">()</argument_list></call> <operator pos:start="207:67" pos:end="207:67">-</operator> <call pos:start="207:69" pos:end="207:80"><name pos:start="207:69" pos:end="207:77"><name pos:start="207:69" pos:end="207:73">bank2</name><operator pos:start="207:74" pos:end="207:74">.</operator><name pos:start="207:75" pos:end="207:77">get</name></name><argument_list pos:start="207:78" pos:end="207:80">(<argument pos:start="207:79" pos:end="207:79"><expr pos:start="207:79" pos:end="207:79"><name pos:start="207:79" pos:end="207:79">i</name></expr></argument>)</argument_list></call><operator pos:start="207:81" pos:end="207:81">.</operator><call pos:start="207:82" pos:end="207:87"><name pos:start="207:82" pos:end="207:85">getX</name><argument_list pos:start="207:86" pos:end="207:87">()</argument_list></call><operator pos:start="207:88" pos:end="207:88">*</operator><call pos:start="207:89" pos:end="207:102"><name pos:start="207:89" pos:end="207:97"><name pos:start="207:89" pos:end="207:93">bank2</name><operator pos:start="207:94" pos:end="207:94">.</operator><name pos:start="207:95" pos:end="207:97">get</name></name><argument_list pos:start="207:98" pos:end="207:102">(<argument pos:start="207:99" pos:end="207:101"><expr pos:start="207:99" pos:end="207:101"><name pos:start="207:99" pos:end="207:99">i</name><operator pos:start="207:100" pos:end="207:100">+</operator><literal type="number" pos:start="207:101" pos:end="207:101">1</literal></expr></argument>)</argument_list></call><operator pos:start="207:103" pos:end="207:103">.</operator><call pos:start="207:104" pos:end="207:109"><name pos:start="207:104" pos:end="207:107">getY</name><argument_list pos:start="207:108" pos:end="207:109">()</argument_list></call></expr>;</expr_stmt>
    	</block_content>}</block></for>
    	<expr_stmt pos:start="209:9" pos:end="209:124"><expr pos:start="209:9" pos:end="209:123"><name pos:start="209:9" pos:end="209:12">area</name> <operator pos:start="209:14" pos:end="209:15">+=</operator> <call pos:start="209:17" pos:end="209:41"><name pos:start="209:17" pos:end="209:25"><name pos:start="209:17" pos:end="209:21">bank2</name><operator pos:start="209:22" pos:end="209:22">.</operator><name pos:start="209:23" pos:end="209:25">get</name></name><argument_list pos:start="209:26" pos:end="209:41">(<argument pos:start="209:27" pos:end="209:40"><expr pos:start="209:27" pos:end="209:40"><call pos:start="209:27" pos:end="209:38"><name pos:start="209:27" pos:end="209:36"><name pos:start="209:27" pos:end="209:31">bank2</name><operator pos:start="209:32" pos:end="209:32">.</operator><name pos:start="209:33" pos:end="209:36">size</name></name><argument_list pos:start="209:37" pos:end="209:38">()</argument_list></call><operator pos:start="209:39" pos:end="209:39">-</operator><literal type="number" pos:start="209:40" pos:end="209:40">1</literal></expr></argument>)</argument_list></call><operator pos:start="209:42" pos:end="209:42">.</operator><call pos:start="209:43" pos:end="209:48"><name pos:start="209:43" pos:end="209:46">getY</name><argument_list pos:start="209:47" pos:end="209:48">()</argument_list></call><operator pos:start="209:49" pos:end="209:49">*</operator><call pos:start="209:50" pos:end="209:61"><name pos:start="209:50" pos:end="209:58"><name pos:start="209:50" pos:end="209:54">bank1</name><operator pos:start="209:55" pos:end="209:55">.</operator><name pos:start="209:56" pos:end="209:58">get</name></name><argument_list pos:start="209:59" pos:end="209:61">(<argument pos:start="209:60" pos:end="209:60"><expr pos:start="209:60" pos:end="209:60"><literal type="number" pos:start="209:60" pos:end="209:60">0</literal></expr></argument>)</argument_list></call><operator pos:start="209:62" pos:end="209:62">.</operator><call pos:start="209:63" pos:end="209:68"><name pos:start="209:63" pos:end="209:66">getX</name><argument_list pos:start="209:67" pos:end="209:68">()</argument_list></call> <operator pos:start="209:70" pos:end="209:70">-</operator> <call pos:start="209:72" pos:end="209:96"><name pos:start="209:72" pos:end="209:80"><name pos:start="209:72" pos:end="209:76">bank2</name><operator pos:start="209:77" pos:end="209:77">.</operator><name pos:start="209:78" pos:end="209:80">get</name></name><argument_list pos:start="209:81" pos:end="209:96">(<argument pos:start="209:82" pos:end="209:95"><expr pos:start="209:82" pos:end="209:95"><call pos:start="209:82" pos:end="209:93"><name pos:start="209:82" pos:end="209:91"><name pos:start="209:82" pos:end="209:86">bank2</name><operator pos:start="209:87" pos:end="209:87">.</operator><name pos:start="209:88" pos:end="209:91">size</name></name><argument_list pos:start="209:92" pos:end="209:93">()</argument_list></call><operator pos:start="209:94" pos:end="209:94">-</operator><literal type="number" pos:start="209:95" pos:end="209:95">1</literal></expr></argument>)</argument_list></call><operator pos:start="209:97" pos:end="209:97">.</operator><call pos:start="209:98" pos:end="209:103"><name pos:start="209:98" pos:end="209:101">getX</name><argument_list pos:start="209:102" pos:end="209:103">()</argument_list></call><operator pos:start="209:104" pos:end="209:104">*</operator><call pos:start="209:105" pos:end="209:116"><name pos:start="209:105" pos:end="209:113"><name pos:start="209:105" pos:end="209:109">bank1</name><operator pos:start="209:110" pos:end="209:110">.</operator><name pos:start="209:111" pos:end="209:113">get</name></name><argument_list pos:start="209:114" pos:end="209:116">(<argument pos:start="209:115" pos:end="209:115"><expr pos:start="209:115" pos:end="209:115"><literal type="number" pos:start="209:115" pos:end="209:115">0</literal></expr></argument>)</argument_list></call><operator pos:start="209:117" pos:end="209:117">.</operator><call pos:start="209:118" pos:end="209:123"><name pos:start="209:118" pos:end="209:121">getY</name><argument_list pos:start="209:122" pos:end="209:123">()</argument_list></call></expr>;</expr_stmt>
    	<expr_stmt pos:start="210:9" pos:end="210:24"><expr pos:start="210:9" pos:end="210:23"><name pos:start="210:9" pos:end="210:12">area</name> <operator pos:start="210:14" pos:end="210:14">=</operator> <name pos:start="210:16" pos:end="210:19">area</name> <operator pos:start="210:21" pos:end="210:21">/</operator> <literal type="number" pos:start="210:23" pos:end="210:23">2</literal></expr>;</expr_stmt>
    	<expr_stmt pos:start="211:9" pos:end="211:24"><expr pos:start="211:9" pos:end="211:23"><call pos:start="211:9" pos:end="211:23"><name pos:start="211:9" pos:end="211:21"><name pos:start="211:9" pos:end="211:13">bank2</name><operator pos:start="211:14" pos:end="211:14">.</operator><name pos:start="211:15" pos:end="211:21">reverse</name></name><argument_list pos:start="211:22" pos:end="211:23">()</argument_list></call></expr>;</expr_stmt>    	
    	<return pos:start="212:9" pos:end="212:30">return <expr pos:start="212:16" pos:end="212:29"><call pos:start="212:16" pos:end="212:29"><name pos:start="212:16" pos:end="212:23"><name pos:start="212:16" pos:end="212:19">Math</name><operator pos:start="212:20" pos:end="212:20">.</operator><name pos:start="212:21" pos:end="212:23">abs</name></name><argument_list pos:start="212:24" pos:end="212:29">(<argument pos:start="212:25" pos:end="212:28"><expr pos:start="212:25" pos:end="212:28"><name pos:start="212:25" pos:end="212:28">area</name></expr></argument>)</argument_list></call></expr>;</return>
    </block_content>}</block></function>
    
    
    <comment type="block" format="javadoc" pos:start="216:5" pos:end="221:7">/**
     * This function calculates the maximum and minimum coordinate points of a simpleBoundingRectangle around the 
     * river segment
     * @param banks
     * @return vector containing maximum and minimum coordinate points
     */</comment>
    <function pos:start="222:5" pos:end="237:5"><type pos:start="222:5" pos:end="222:40"><specifier pos:start="222:5" pos:end="222:10">public</specifier> <specifier pos:start="222:12" pos:end="222:17">static</specifier> <name pos:start="222:19" pos:end="222:40"><name pos:start="222:19" pos:end="222:24">Vector</name><argument_list type="generic" pos:start="222:25" pos:end="222:40">&lt;<argument pos:start="222:26" pos:end="222:39"><name pos:start="222:26" pos:end="222:39"><name pos:start="222:26" pos:end="222:32">Point2D</name><operator pos:start="222:33" pos:end="222:33">.</operator><name pos:start="222:34" pos:end="222:39">Double</name></name></argument>&gt;</argument_list></name></type> <name pos:start="222:42" pos:end="222:69">simpleRiverBoundingRectangle</name><parameter_list pos:start="222:70" pos:end="222:92">(<parameter pos:start="222:71" pos:end="222:91"><decl pos:start="222:71" pos:end="222:91"><type pos:start="222:71" pos:end="222:85"><name pos:start="222:71" pos:end="222:85"><name pos:start="222:71" pos:end="222:74">List</name><argument_list type="generic" pos:start="222:75" pos:end="222:85">&lt;<argument pos:start="222:76" pos:end="222:84"><name pos:start="222:76" pos:end="222:84">RiverBank</name></argument>&gt;</argument_list></name></type> <name pos:start="222:87" pos:end="222:91">banks</name></decl></parameter>)</parameter_list> <block pos:start="222:94" pos:end="237:5">{<block_content pos:start="223:9" pos:end="236:22">
    	<decl_stmt pos:start="223:9" pos:end="223:55"><decl pos:start="223:9" pos:end="223:54"><type pos:start="223:9" pos:end="223:30"><name pos:start="223:9" pos:end="223:30"><name pos:start="223:9" pos:end="223:14">Vector</name><argument_list type="generic" pos:start="223:15" pos:end="223:30">&lt;<argument pos:start="223:16" pos:end="223:29"><name pos:start="223:16" pos:end="223:29"><name pos:start="223:16" pos:end="223:22">Point2D</name><operator pos:start="223:23" pos:end="223:23">.</operator><name pos:start="223:24" pos:end="223:29">Double</name></name></argument>&gt;</argument_list></name></type> <name pos:start="223:32" pos:end="223:37">minMax</name> <init pos:start="223:39" pos:end="223:54">= <expr pos:start="223:41" pos:end="223:54"><operator pos:start="223:41" pos:end="223:43">new</operator> <call pos:start="223:45" pos:end="223:54"><name pos:start="223:45" pos:end="223:52"><name pos:start="223:45" pos:end="223:50">Vector</name><argument_list type="generic" pos:start="223:51" pos:end="223:52">&lt;&gt;</argument_list></name><argument_list pos:start="223:53" pos:end="223:54">()</argument_list></call></expr></init></decl>;</decl_stmt>
    	<decl_stmt pos:start="224:9" pos:end="224:56"><decl pos:start="224:9" pos:end="224:55"><type pos:start="224:9" pos:end="224:28"><name pos:start="224:9" pos:end="224:28"><name pos:start="224:9" pos:end="224:12">List</name><argument_list type="generic" pos:start="224:13" pos:end="224:28">&lt;<argument pos:start="224:14" pos:end="224:27"><name pos:start="224:14" pos:end="224:27"><name pos:start="224:14" pos:end="224:20">Point2D</name><operator pos:start="224:21" pos:end="224:21">.</operator><name pos:start="224:22" pos:end="224:27">Double</name></name></argument>&gt;</argument_list></name></type> <name pos:start="224:30" pos:end="224:34">bank1</name> <init pos:start="224:36" pos:end="224:55">= <expr pos:start="224:38" pos:end="224:55"><call pos:start="224:38" pos:end="224:49"><name pos:start="224:38" pos:end="224:46"><name pos:start="224:38" pos:end="224:42">banks</name><operator pos:start="224:43" pos:end="224:43">.</operator><name pos:start="224:44" pos:end="224:46">get</name></name><argument_list pos:start="224:47" pos:end="224:49">(<argument pos:start="224:48" pos:end="224:48"><expr pos:start="224:48" pos:end="224:48"><literal type="number" pos:start="224:48" pos:end="224:48">0</literal></expr></argument>)</argument_list></call><operator pos:start="224:50" pos:end="224:50">.</operator><call pos:start="224:51" pos:end="224:55"><name pos:start="224:51" pos:end="224:53">get</name><argument_list pos:start="224:54" pos:end="224:55">()</argument_list></call></expr></init></decl>;</decl_stmt>
    	<decl_stmt pos:start="225:9" pos:end="225:56"><decl pos:start="225:9" pos:end="225:55"><type pos:start="225:9" pos:end="225:28"><name pos:start="225:9" pos:end="225:28"><name pos:start="225:9" pos:end="225:12">List</name><argument_list type="generic" pos:start="225:13" pos:end="225:28">&lt;<argument pos:start="225:14" pos:end="225:27"><name pos:start="225:14" pos:end="225:27"><name pos:start="225:14" pos:end="225:20">Point2D</name><operator pos:start="225:21" pos:end="225:21">.</operator><name pos:start="225:22" pos:end="225:27">Double</name></name></argument>&gt;</argument_list></name></type> <name pos:start="225:30" pos:end="225:34">bank2</name> <init pos:start="225:36" pos:end="225:55">= <expr pos:start="225:38" pos:end="225:55"><call pos:start="225:38" pos:end="225:49"><name pos:start="225:38" pos:end="225:46"><name pos:start="225:38" pos:end="225:42">banks</name><operator pos:start="225:43" pos:end="225:43">.</operator><name pos:start="225:44" pos:end="225:46">get</name></name><argument_list pos:start="225:47" pos:end="225:49">(<argument pos:start="225:48" pos:end="225:48"><expr pos:start="225:48" pos:end="225:48"><literal type="number" pos:start="225:48" pos:end="225:48">1</literal></expr></argument>)</argument_list></call><operator pos:start="225:50" pos:end="225:50">.</operator><call pos:start="225:51" pos:end="225:55"><name pos:start="225:51" pos:end="225:53">get</name><argument_list pos:start="225:54" pos:end="225:55">()</argument_list></call></expr></init></decl>;</decl_stmt>
    	<decl_stmt pos:start="226:9" pos:end="226:89"><decl pos:start="226:9" pos:end="226:88"><type pos:start="226:9" pos:end="226:22"><name pos:start="226:9" pos:end="226:22"><name pos:start="226:9" pos:end="226:15">Point2D</name><operator pos:start="226:16" pos:end="226:16">.</operator><name pos:start="226:17" pos:end="226:22">Double</name></name></type> <name pos:start="226:24" pos:end="226:31">minPoint</name> <init pos:start="226:33" pos:end="226:88">= <expr pos:start="226:35" pos:end="226:88"><operator pos:start="226:35" pos:end="226:37">new</operator> <call pos:start="226:39" pos:end="226:88"><name pos:start="226:39" pos:end="226:52"><name pos:start="226:39" pos:end="226:45">Point2D</name><operator pos:start="226:46" pos:end="226:46">.</operator><name pos:start="226:47" pos:end="226:52">Double</name></name><argument_list pos:start="226:53" pos:end="226:88">(<argument pos:start="226:54" pos:end="226:69"><expr pos:start="226:54" pos:end="226:69"><name pos:start="226:54" pos:end="226:69"><name pos:start="226:54" pos:end="226:59">Double</name><operator pos:start="226:60" pos:end="226:60">.</operator><name pos:start="226:61" pos:end="226:69">MAX_VALUE</name></name></expr></argument>, <argument pos:start="226:72" pos:end="226:87"><expr pos:start="226:72" pos:end="226:87"><name pos:start="226:72" pos:end="226:87"><name pos:start="226:72" pos:end="226:77">Double</name><operator pos:start="226:78" pos:end="226:78">.</operator><name pos:start="226:79" pos:end="226:87">MAX_VALUE</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    	<decl_stmt pos:start="227:9" pos:end="227:91"><decl pos:start="227:9" pos:end="227:90"><type pos:start="227:9" pos:end="227:22"><name pos:start="227:9" pos:end="227:22"><name pos:start="227:9" pos:end="227:15">Point2D</name><operator pos:start="227:16" pos:end="227:16">.</operator><name pos:start="227:17" pos:end="227:22">Double</name></name></type> <name pos:start="227:24" pos:end="227:31">maxPoint</name> <init pos:start="227:33" pos:end="227:90">= <expr pos:start="227:35" pos:end="227:90"><operator pos:start="227:35" pos:end="227:37">new</operator> <call pos:start="227:39" pos:end="227:90"><name pos:start="227:39" pos:end="227:52"><name pos:start="227:39" pos:end="227:45">Point2D</name><operator pos:start="227:46" pos:end="227:46">.</operator><name pos:start="227:47" pos:end="227:52">Double</name></name><argument_list pos:start="227:53" pos:end="227:90">(<argument pos:start="227:54" pos:end="227:70"><expr pos:start="227:54" pos:end="227:70"><operator pos:start="227:54" pos:end="227:54">-</operator><name pos:start="227:55" pos:end="227:70"><name pos:start="227:55" pos:end="227:60">Double</name><operator pos:start="227:61" pos:end="227:61">.</operator><name pos:start="227:62" pos:end="227:70">MAX_VALUE</name></name></expr></argument>, <argument pos:start="227:73" pos:end="227:89"><expr pos:start="227:73" pos:end="227:89"><operator pos:start="227:73" pos:end="227:73">-</operator><name pos:start="227:74" pos:end="227:89"><name pos:start="227:74" pos:end="227:79">Double</name><operator pos:start="227:80" pos:end="227:80">.</operator><name pos:start="227:81" pos:end="227:89">MAX_VALUE</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    	<expr_stmt pos:start="228:9" pos:end="228:51"><expr pos:start="228:9" pos:end="228:50"><call pos:start="228:9" pos:end="228:50"><name pos:start="228:9" pos:end="228:23">minAndMaxPoints</name><argument_list pos:start="228:24" pos:end="228:50">(<argument pos:start="228:25" pos:end="228:32"><expr pos:start="228:25" pos:end="228:32"><name pos:start="228:25" pos:end="228:32">minPoint</name></expr></argument>, <argument pos:start="228:35" pos:end="228:42"><expr pos:start="228:35" pos:end="228:42"><name pos:start="228:35" pos:end="228:42">maxPoint</name></expr></argument>, <argument pos:start="228:45" pos:end="228:49"><expr pos:start="228:45" pos:end="228:49"><name pos:start="228:45" pos:end="228:49">bank1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    	<expr_stmt pos:start="229:9" pos:end="229:51"><expr pos:start="229:9" pos:end="229:50"><call pos:start="229:9" pos:end="229:50"><name pos:start="229:9" pos:end="229:23">minAndMaxPoints</name><argument_list pos:start="229:24" pos:end="229:50">(<argument pos:start="229:25" pos:end="229:32"><expr pos:start="229:25" pos:end="229:32"><name pos:start="229:25" pos:end="229:32">minPoint</name></expr></argument>, <argument pos:start="229:35" pos:end="229:42"><expr pos:start="229:35" pos:end="229:42"><name pos:start="229:35" pos:end="229:42">maxPoint</name></expr></argument>, <argument pos:start="229:45" pos:end="229:49"><expr pos:start="229:45" pos:end="229:49"><name pos:start="229:45" pos:end="229:49">bank2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    	<expr_stmt pos:start="230:9" pos:end="230:29"><expr pos:start="230:9" pos:end="230:28"><call pos:start="230:9" pos:end="230:28"><name pos:start="230:9" pos:end="230:18"><name pos:start="230:9" pos:end="230:14">minMax</name><operator pos:start="230:15" pos:end="230:15">.</operator><name pos:start="230:16" pos:end="230:18">add</name></name><argument_list pos:start="230:19" pos:end="230:28">(<argument pos:start="230:20" pos:end="230:27"><expr pos:start="230:20" pos:end="230:27"><name pos:start="230:20" pos:end="230:27">minPoint</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    	<expr_stmt pos:start="231:9" pos:end="231:29"><expr pos:start="231:9" pos:end="231:28"><call pos:start="231:9" pos:end="231:28"><name pos:start="231:9" pos:end="231:18"><name pos:start="231:9" pos:end="231:14">minMax</name><operator pos:start="231:15" pos:end="231:15">.</operator><name pos:start="231:16" pos:end="231:18">add</name></name><argument_list pos:start="231:19" pos:end="231:28">(<argument pos:start="231:20" pos:end="231:27"><expr pos:start="231:20" pos:end="231:27"><name pos:start="231:20" pos:end="231:27">maxPoint</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    	<comment type="block" pos:start="232:9" pos:end="235:83">/*System.out.println("[" + minPoint.getX() + ", " + minPoint.getY() + "]");
    	System.out.println("[" + minPoint.getX() + ", " + maxPoint.getY() + "]");
    	System.out.println("[" + maxPoint.getX() + ", " + maxPoint.getY() + "]");
    	System.out.println("[" + maxPoint.getX() + ", " + minPoint.getY() + "]");*/</comment>
    	<return pos:start="236:9" pos:end="236:22">return <expr pos:start="236:16" pos:end="236:21"><name pos:start="236:16" pos:end="236:21">minMax</name></expr>;</return>
    </block_content>}</block></function>
    
    <function pos:start="239:5" pos:end="251:5"><type pos:start="239:5" pos:end="239:40"><specifier pos:start="239:5" pos:end="239:10">public</specifier> <specifier pos:start="239:12" pos:end="239:17">static</specifier> <name pos:start="239:19" pos:end="239:40"><name pos:start="239:19" pos:end="239:24">Vector</name><argument_list type="generic" pos:start="239:25" pos:end="239:40">&lt;<argument pos:start="239:26" pos:end="239:39"><name pos:start="239:26" pos:end="239:39"><name pos:start="239:26" pos:end="239:32">Point2D</name><operator pos:start="239:33" pos:end="239:33">.</operator><name pos:start="239:34" pos:end="239:39">Double</name></name></argument>&gt;</argument_list></name></type> <name pos:start="239:42" pos:end="239:79">simplePriorityPolygonBoundingRectangle</name><parameter_list pos:start="239:80" pos:end="239:115">(<parameter pos:start="239:81" pos:end="239:114"><decl pos:start="239:81" pos:end="239:114"><type pos:start="239:81" pos:end="239:100"><name pos:start="239:81" pos:end="239:100"><name pos:start="239:81" pos:end="239:84">List</name><argument_list type="generic" pos:start="239:85" pos:end="239:100">&lt;<argument pos:start="239:86" pos:end="239:99"><name pos:start="239:86" pos:end="239:99"><name pos:start="239:86" pos:end="239:92">Point2D</name><operator pos:start="239:93" pos:end="239:93">.</operator><name pos:start="239:94" pos:end="239:99">Double</name></name></argument>&gt;</argument_list></name></type> <name pos:start="239:102" pos:end="239:114">polygonPoints</name></decl></parameter>)</parameter_list> <block pos:start="239:117" pos:end="251:5">{<block_content pos:start="240:9" pos:end="250:22">
    	<decl_stmt pos:start="240:9" pos:end="240:55"><decl pos:start="240:9" pos:end="240:54"><type pos:start="240:9" pos:end="240:30"><name pos:start="240:9" pos:end="240:30"><name pos:start="240:9" pos:end="240:14">Vector</name><argument_list type="generic" pos:start="240:15" pos:end="240:30">&lt;<argument pos:start="240:16" pos:end="240:29"><name pos:start="240:16" pos:end="240:29"><name pos:start="240:16" pos:end="240:22">Point2D</name><operator pos:start="240:23" pos:end="240:23">.</operator><name pos:start="240:24" pos:end="240:29">Double</name></name></argument>&gt;</argument_list></name></type> <name pos:start="240:32" pos:end="240:37">minMax</name> <init pos:start="240:39" pos:end="240:54">= <expr pos:start="240:41" pos:end="240:54"><operator pos:start="240:41" pos:end="240:43">new</operator> <call pos:start="240:45" pos:end="240:54"><name pos:start="240:45" pos:end="240:52"><name pos:start="240:45" pos:end="240:50">Vector</name><argument_list type="generic" pos:start="240:51" pos:end="240:52">&lt;&gt;</argument_list></name><argument_list pos:start="240:53" pos:end="240:54">()</argument_list></call></expr></init></decl>;</decl_stmt>
    	<decl_stmt pos:start="241:9" pos:end="241:89"><decl pos:start="241:9" pos:end="241:88"><type pos:start="241:9" pos:end="241:22"><name pos:start="241:9" pos:end="241:22"><name pos:start="241:9" pos:end="241:15">Point2D</name><operator pos:start="241:16" pos:end="241:16">.</operator><name pos:start="241:17" pos:end="241:22">Double</name></name></type> <name pos:start="241:24" pos:end="241:31">minPoint</name> <init pos:start="241:33" pos:end="241:88">= <expr pos:start="241:35" pos:end="241:88"><operator pos:start="241:35" pos:end="241:37">new</operator> <call pos:start="241:39" pos:end="241:88"><name pos:start="241:39" pos:end="241:52"><name pos:start="241:39" pos:end="241:45">Point2D</name><operator pos:start="241:46" pos:end="241:46">.</operator><name pos:start="241:47" pos:end="241:52">Double</name></name><argument_list pos:start="241:53" pos:end="241:88">(<argument pos:start="241:54" pos:end="241:69"><expr pos:start="241:54" pos:end="241:69"><name pos:start="241:54" pos:end="241:69"><name pos:start="241:54" pos:end="241:59">Double</name><operator pos:start="241:60" pos:end="241:60">.</operator><name pos:start="241:61" pos:end="241:69">MAX_VALUE</name></name></expr></argument>, <argument pos:start="241:72" pos:end="241:87"><expr pos:start="241:72" pos:end="241:87"><name pos:start="241:72" pos:end="241:87"><name pos:start="241:72" pos:end="241:77">Double</name><operator pos:start="241:78" pos:end="241:78">.</operator><name pos:start="241:79" pos:end="241:87">MAX_VALUE</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    	<decl_stmt pos:start="242:9" pos:end="242:91"><decl pos:start="242:9" pos:end="242:90"><type pos:start="242:9" pos:end="242:22"><name pos:start="242:9" pos:end="242:22"><name pos:start="242:9" pos:end="242:15">Point2D</name><operator pos:start="242:16" pos:end="242:16">.</operator><name pos:start="242:17" pos:end="242:22">Double</name></name></type> <name pos:start="242:24" pos:end="242:31">maxPoint</name> <init pos:start="242:33" pos:end="242:90">= <expr pos:start="242:35" pos:end="242:90"><operator pos:start="242:35" pos:end="242:37">new</operator> <call pos:start="242:39" pos:end="242:90"><name pos:start="242:39" pos:end="242:52"><name pos:start="242:39" pos:end="242:45">Point2D</name><operator pos:start="242:46" pos:end="242:46">.</operator><name pos:start="242:47" pos:end="242:52">Double</name></name><argument_list pos:start="242:53" pos:end="242:90">(<argument pos:start="242:54" pos:end="242:70"><expr pos:start="242:54" pos:end="242:70"><operator pos:start="242:54" pos:end="242:54">-</operator><name pos:start="242:55" pos:end="242:70"><name pos:start="242:55" pos:end="242:60">Double</name><operator pos:start="242:61" pos:end="242:61">.</operator><name pos:start="242:62" pos:end="242:70">MAX_VALUE</name></name></expr></argument>, <argument pos:start="242:73" pos:end="242:89"><expr pos:start="242:73" pos:end="242:89"><operator pos:start="242:73" pos:end="242:73">-</operator><name pos:start="242:74" pos:end="242:89"><name pos:start="242:74" pos:end="242:79">Double</name><operator pos:start="242:80" pos:end="242:80">.</operator><name pos:start="242:81" pos:end="242:89">MAX_VALUE</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    	<expr_stmt pos:start="243:9" pos:end="243:59"><expr pos:start="243:9" pos:end="243:58"><call pos:start="243:9" pos:end="243:58"><name pos:start="243:9" pos:end="243:23">minAndMaxPoints</name><argument_list pos:start="243:24" pos:end="243:58">(<argument pos:start="243:25" pos:end="243:32"><expr pos:start="243:25" pos:end="243:32"><name pos:start="243:25" pos:end="243:32">minPoint</name></expr></argument>, <argument pos:start="243:35" pos:end="243:42"><expr pos:start="243:35" pos:end="243:42"><name pos:start="243:35" pos:end="243:42">maxPoint</name></expr></argument>, <argument pos:start="243:45" pos:end="243:57"><expr pos:start="243:45" pos:end="243:57"><name pos:start="243:45" pos:end="243:57">polygonPoints</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    	<expr_stmt pos:start="244:9" pos:end="244:29"><expr pos:start="244:9" pos:end="244:28"><call pos:start="244:9" pos:end="244:28"><name pos:start="244:9" pos:end="244:18"><name pos:start="244:9" pos:end="244:14">minMax</name><operator pos:start="244:15" pos:end="244:15">.</operator><name pos:start="244:16" pos:end="244:18">add</name></name><argument_list pos:start="244:19" pos:end="244:28">(<argument pos:start="244:20" pos:end="244:27"><expr pos:start="244:20" pos:end="244:27"><name pos:start="244:20" pos:end="244:27">minPoint</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    	<expr_stmt pos:start="245:9" pos:end="245:29"><expr pos:start="245:9" pos:end="245:28"><call pos:start="245:9" pos:end="245:28"><name pos:start="245:9" pos:end="245:18"><name pos:start="245:9" pos:end="245:14">minMax</name><operator pos:start="245:15" pos:end="245:15">.</operator><name pos:start="245:16" pos:end="245:18">add</name></name><argument_list pos:start="245:19" pos:end="245:28">(<argument pos:start="245:20" pos:end="245:27"><expr pos:start="245:20" pos:end="245:27"><name pos:start="245:20" pos:end="245:27">maxPoint</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    	<comment type="block" pos:start="246:9" pos:end="249:83">/*System.out.println("[" + minPoint.getX() + ", " + minPoint.getY() + "]");
    	System.out.println("[" + minPoint.getX() + ", " + maxPoint.getY() + "]");
    	System.out.println("[" + maxPoint.getX() + ", " + maxPoint.getY() + "]");
    	System.out.println("[" + maxPoint.getX() + ", " + minPoint.getY() + "]");*/</comment>
    	<return pos:start="250:9" pos:end="250:22">return <expr pos:start="250:16" pos:end="250:21"><name pos:start="250:16" pos:end="250:21">minMax</name></expr>;</return>
    </block_content>}</block></function>
    
   
    <comment type="block" format="javadoc" pos:start="254:5" pos:end="259:7">/**
     * This function finds the minimum and maximum points in a RiverBank
     * @param minPoint
     * @param maxPoint
     * @param points
     */</comment>
    <function pos:start="260:5" pos:end="275:5"><type pos:start="260:5" pos:end="260:23"><specifier pos:start="260:5" pos:end="260:11">private</specifier> <specifier pos:start="260:13" pos:end="260:18">static</specifier> <name pos:start="260:20" pos:end="260:23">void</name></type> <name pos:start="260:25" pos:end="260:39">minAndMaxPoints</name><parameter_list pos:start="260:40" pos:end="260:118">(<parameter pos:start="260:41" pos:end="260:63"><decl pos:start="260:41" pos:end="260:63"><type pos:start="260:41" pos:end="260:63"><name pos:start="260:41" pos:end="260:54"><name pos:start="260:41" pos:end="260:47">Point2D</name><operator pos:start="260:48" pos:end="260:48">.</operator><name pos:start="260:49" pos:end="260:54">Double</name></name></type> <name pos:start="260:56" pos:end="260:63">minPoint</name></decl></parameter>, <parameter pos:start="260:66" pos:end="260:88"><decl pos:start="260:66" pos:end="260:88"><type pos:start="260:66" pos:end="260:88"><name pos:start="260:66" pos:end="260:79"><name pos:start="260:66" pos:end="260:72">Point2D</name><operator pos:start="260:73" pos:end="260:73">.</operator><name pos:start="260:74" pos:end="260:79">Double</name></name></type> <name pos:start="260:81" pos:end="260:88">maxPoint</name></decl></parameter>, <parameter pos:start="260:91" pos:end="260:117"><decl pos:start="260:91" pos:end="260:117"><type pos:start="260:91" pos:end="260:117"><name pos:start="260:91" pos:end="260:110"><name pos:start="260:91" pos:end="260:94">List</name><argument_list type="generic" pos:start="260:95" pos:end="260:110">&lt;<argument pos:start="260:96" pos:end="260:109"><name pos:start="260:96" pos:end="260:109"><name pos:start="260:96" pos:end="260:102">Point2D</name><operator pos:start="260:103" pos:end="260:103">.</operator><name pos:start="260:104" pos:end="260:109">Double</name></name></argument>&gt;</argument_list></name></type> <name pos:start="260:112" pos:end="260:117">points</name></decl></parameter>)</parameter_list> <block pos:start="260:120" pos:end="275:5">{<block_content pos:start="261:9" pos:end="274:9">
    	<for pos:start="261:9" pos:end="274:9">for<control pos:start="261:12" pos:end="261:46">(<init pos:start="261:13" pos:end="261:22"><decl pos:start="261:13" pos:end="261:21"><type pos:start="261:13" pos:end="261:15"><name pos:start="261:13" pos:end="261:15">int</name></type> <name pos:start="261:17" pos:end="261:17">i</name> <init pos:start="261:19" pos:end="261:21">= <expr pos:start="261:21" pos:end="261:21"><literal type="number" pos:start="261:21" pos:end="261:21">0</literal></expr></init></decl>;</init> <condition pos:start="261:24" pos:end="261:41"><expr pos:start="261:24" pos:end="261:40"><name pos:start="261:24" pos:end="261:24">i</name> <operator pos:start="261:26" pos:end="261:26">&lt;</operator> <call pos:start="261:28" pos:end="261:40"><name pos:start="261:28" pos:end="261:38"><name pos:start="261:28" pos:end="261:33">points</name><operator pos:start="261:34" pos:end="261:34">.</operator><name pos:start="261:35" pos:end="261:38">size</name></name><argument_list pos:start="261:39" pos:end="261:40">()</argument_list></call></expr>;</condition> <incr pos:start="261:43" pos:end="261:45"><expr pos:start="261:43" pos:end="261:45"><name pos:start="261:43" pos:end="261:43">i</name><operator pos:start="261:44" pos:end="261:45">++</operator></expr></incr>)</control> <block pos:start="261:48" pos:end="274:9">{<block_content pos:start="262:17" pos:end="273:17">
    		<if_stmt pos:start="262:17" pos:end="264:17"><if pos:start="262:17" pos:end="264:17">if<condition pos:start="262:19" pos:end="262:58">(<expr pos:start="262:20" pos:end="262:57"><call pos:start="262:20" pos:end="262:32"><name pos:start="262:20" pos:end="262:29"><name pos:start="262:20" pos:end="262:25">points</name><operator pos:start="262:26" pos:end="262:26">.</operator><name pos:start="262:27" pos:end="262:29">get</name></name><argument_list pos:start="262:30" pos:end="262:32">(<argument pos:start="262:31" pos:end="262:31"><expr pos:start="262:31" pos:end="262:31"><name pos:start="262:31" pos:end="262:31">i</name></expr></argument>)</argument_list></call><operator pos:start="262:33" pos:end="262:33">.</operator><call pos:start="262:34" pos:end="262:39"><name pos:start="262:34" pos:end="262:37">getX</name><argument_list pos:start="262:38" pos:end="262:39">()</argument_list></call> <operator pos:start="262:41" pos:end="262:41">&lt;</operator> <call pos:start="262:43" pos:end="262:57"><name pos:start="262:43" pos:end="262:55"><name pos:start="262:43" pos:end="262:50">minPoint</name><operator pos:start="262:51" pos:end="262:51">.</operator><name pos:start="262:52" pos:end="262:55">getX</name></name><argument_list pos:start="262:56" pos:end="262:57">()</argument_list></call></expr>)</condition> <block pos:start="262:60" pos:end="264:17">{<block_content pos:start="263:25" pos:end="263:84">
    			<expr_stmt pos:start="263:25" pos:end="263:84"><expr pos:start="263:25" pos:end="263:83"><call pos:start="263:25" pos:end="263:83"><name pos:start="263:25" pos:end="263:44"><name pos:start="263:25" pos:end="263:32">minPoint</name><operator pos:start="263:33" pos:end="263:33">.</operator><name pos:start="263:34" pos:end="263:44">setLocation</name></name><argument_list pos:start="263:45" pos:end="263:83">(<argument pos:start="263:46" pos:end="263:65"><expr pos:start="263:46" pos:end="263:65"><call pos:start="263:46" pos:end="263:58"><name pos:start="263:46" pos:end="263:55"><name pos:start="263:46" pos:end="263:51">points</name><operator pos:start="263:52" pos:end="263:52">.</operator><name pos:start="263:53" pos:end="263:55">get</name></name><argument_list pos:start="263:56" pos:end="263:58">(<argument pos:start="263:57" pos:end="263:57"><expr pos:start="263:57" pos:end="263:57"><name pos:start="263:57" pos:end="263:57">i</name></expr></argument>)</argument_list></call><operator pos:start="263:59" pos:end="263:59">.</operator><call pos:start="263:60" pos:end="263:65"><name pos:start="263:60" pos:end="263:63">getX</name><argument_list pos:start="263:64" pos:end="263:65">()</argument_list></call></expr></argument>, <argument pos:start="263:68" pos:end="263:82"><expr pos:start="263:68" pos:end="263:82"><call pos:start="263:68" pos:end="263:82"><name pos:start="263:68" pos:end="263:80"><name pos:start="263:68" pos:end="263:75">minPoint</name><operator pos:start="263:76" pos:end="263:76">.</operator><name pos:start="263:77" pos:end="263:80">getY</name></name><argument_list pos:start="263:81" pos:end="263:82">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    		</block_content>}</block></if></if_stmt>
    		<if_stmt pos:start="265:17" pos:end="267:17"><if pos:start="265:17" pos:end="267:17">if<condition pos:start="265:19" pos:end="265:58">(<expr pos:start="265:20" pos:end="265:57"><call pos:start="265:20" pos:end="265:32"><name pos:start="265:20" pos:end="265:29"><name pos:start="265:20" pos:end="265:25">points</name><operator pos:start="265:26" pos:end="265:26">.</operator><name pos:start="265:27" pos:end="265:29">get</name></name><argument_list pos:start="265:30" pos:end="265:32">(<argument pos:start="265:31" pos:end="265:31"><expr pos:start="265:31" pos:end="265:31"><name pos:start="265:31" pos:end="265:31">i</name></expr></argument>)</argument_list></call><operator pos:start="265:33" pos:end="265:33">.</operator><call pos:start="265:34" pos:end="265:39"><name pos:start="265:34" pos:end="265:37">getX</name><argument_list pos:start="265:38" pos:end="265:39">()</argument_list></call> <operator pos:start="265:41" pos:end="265:41">&gt;</operator> <call pos:start="265:43" pos:end="265:57"><name pos:start="265:43" pos:end="265:55"><name pos:start="265:43" pos:end="265:50">maxPoint</name><operator pos:start="265:51" pos:end="265:51">.</operator><name pos:start="265:52" pos:end="265:55">getX</name></name><argument_list pos:start="265:56" pos:end="265:57">()</argument_list></call></expr>)</condition> <block pos:start="265:60" pos:end="267:17">{<block_content pos:start="266:25" pos:end="266:83">
    			<expr_stmt pos:start="266:25" pos:end="266:83"><expr pos:start="266:25" pos:end="266:82"><call pos:start="266:25" pos:end="266:82"><name pos:start="266:25" pos:end="266:44"><name pos:start="266:25" pos:end="266:32">maxPoint</name><operator pos:start="266:33" pos:end="266:33">.</operator><name pos:start="266:34" pos:end="266:44">setLocation</name></name><argument_list pos:start="266:45" pos:end="266:82">(<argument pos:start="266:46" pos:end="266:65"><expr pos:start="266:46" pos:end="266:65"><call pos:start="266:46" pos:end="266:58"><name pos:start="266:46" pos:end="266:55"><name pos:start="266:46" pos:end="266:51">points</name><operator pos:start="266:52" pos:end="266:52">.</operator><name pos:start="266:53" pos:end="266:55">get</name></name><argument_list pos:start="266:56" pos:end="266:58">(<argument pos:start="266:57" pos:end="266:57"><expr pos:start="266:57" pos:end="266:57"><name pos:start="266:57" pos:end="266:57">i</name></expr></argument>)</argument_list></call><operator pos:start="266:59" pos:end="266:59">.</operator><call pos:start="266:60" pos:end="266:65"><name pos:start="266:60" pos:end="266:63">getX</name><argument_list pos:start="266:64" pos:end="266:65">()</argument_list></call></expr></argument>,<argument pos:start="266:67" pos:end="266:81"><expr pos:start="266:67" pos:end="266:81"><call pos:start="266:67" pos:end="266:81"><name pos:start="266:67" pos:end="266:79"><name pos:start="266:67" pos:end="266:74">maxPoint</name><operator pos:start="266:75" pos:end="266:75">.</operator><name pos:start="266:76" pos:end="266:79">getY</name></name><argument_list pos:start="266:80" pos:end="266:81">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    		</block_content>}</block></if></if_stmt>
    		<if_stmt pos:start="268:17" pos:end="270:17"><if pos:start="268:17" pos:end="270:17">if<condition pos:start="268:19" pos:end="268:58">(<expr pos:start="268:20" pos:end="268:57"><call pos:start="268:20" pos:end="268:32"><name pos:start="268:20" pos:end="268:29"><name pos:start="268:20" pos:end="268:25">points</name><operator pos:start="268:26" pos:end="268:26">.</operator><name pos:start="268:27" pos:end="268:29">get</name></name><argument_list pos:start="268:30" pos:end="268:32">(<argument pos:start="268:31" pos:end="268:31"><expr pos:start="268:31" pos:end="268:31"><name pos:start="268:31" pos:end="268:31">i</name></expr></argument>)</argument_list></call><operator pos:start="268:33" pos:end="268:33">.</operator><call pos:start="268:34" pos:end="268:39"><name pos:start="268:34" pos:end="268:37">getY</name><argument_list pos:start="268:38" pos:end="268:39">()</argument_list></call> <operator pos:start="268:41" pos:end="268:41">&lt;</operator> <call pos:start="268:43" pos:end="268:57"><name pos:start="268:43" pos:end="268:55"><name pos:start="268:43" pos:end="268:50">minPoint</name><operator pos:start="268:51" pos:end="268:51">.</operator><name pos:start="268:52" pos:end="268:55">getY</name></name><argument_list pos:start="268:56" pos:end="268:57">()</argument_list></call></expr>)</condition> <block pos:start="268:60" pos:end="270:17">{<block_content pos:start="269:25" pos:end="269:84">
    			<expr_stmt pos:start="269:25" pos:end="269:84"><expr pos:start="269:25" pos:end="269:83"><call pos:start="269:25" pos:end="269:83"><name pos:start="269:25" pos:end="269:44"><name pos:start="269:25" pos:end="269:32">minPoint</name><operator pos:start="269:33" pos:end="269:33">.</operator><name pos:start="269:34" pos:end="269:44">setLocation</name></name><argument_list pos:start="269:45" pos:end="269:83">(<argument pos:start="269:46" pos:end="269:60"><expr pos:start="269:46" pos:end="269:60"><call pos:start="269:46" pos:end="269:60"><name pos:start="269:46" pos:end="269:58"><name pos:start="269:46" pos:end="269:53">minPoint</name><operator pos:start="269:54" pos:end="269:54">.</operator><name pos:start="269:55" pos:end="269:58">getX</name></name><argument_list pos:start="269:59" pos:end="269:60">()</argument_list></call></expr></argument>, <argument pos:start="269:63" pos:end="269:82"><expr pos:start="269:63" pos:end="269:82"><call pos:start="269:63" pos:end="269:75"><name pos:start="269:63" pos:end="269:72"><name pos:start="269:63" pos:end="269:68">points</name><operator pos:start="269:69" pos:end="269:69">.</operator><name pos:start="269:70" pos:end="269:72">get</name></name><argument_list pos:start="269:73" pos:end="269:75">(<argument pos:start="269:74" pos:end="269:74"><expr pos:start="269:74" pos:end="269:74"><name pos:start="269:74" pos:end="269:74">i</name></expr></argument>)</argument_list></call><operator pos:start="269:76" pos:end="269:76">.</operator><call pos:start="269:77" pos:end="269:82"><name pos:start="269:77" pos:end="269:80">getY</name><argument_list pos:start="269:81" pos:end="269:82">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    		</block_content>}</block></if></if_stmt>
    		<if_stmt pos:start="271:17" pos:end="273:17"><if pos:start="271:17" pos:end="273:17">if<condition pos:start="271:19" pos:end="271:58">(<expr pos:start="271:20" pos:end="271:57"><call pos:start="271:20" pos:end="271:32"><name pos:start="271:20" pos:end="271:29"><name pos:start="271:20" pos:end="271:25">points</name><operator pos:start="271:26" pos:end="271:26">.</operator><name pos:start="271:27" pos:end="271:29">get</name></name><argument_list pos:start="271:30" pos:end="271:32">(<argument pos:start="271:31" pos:end="271:31"><expr pos:start="271:31" pos:end="271:31"><name pos:start="271:31" pos:end="271:31">i</name></expr></argument>)</argument_list></call><operator pos:start="271:33" pos:end="271:33">.</operator><call pos:start="271:34" pos:end="271:39"><name pos:start="271:34" pos:end="271:37">getY</name><argument_list pos:start="271:38" pos:end="271:39">()</argument_list></call> <operator pos:start="271:41" pos:end="271:41">&gt;</operator> <call pos:start="271:43" pos:end="271:57"><name pos:start="271:43" pos:end="271:55"><name pos:start="271:43" pos:end="271:50">maxPoint</name><operator pos:start="271:51" pos:end="271:51">.</operator><name pos:start="271:52" pos:end="271:55">getY</name></name><argument_list pos:start="271:56" pos:end="271:57">()</argument_list></call></expr>)</condition> <block pos:start="271:60" pos:end="273:17">{<block_content pos:start="272:25" pos:end="272:84">
    			<expr_stmt pos:start="272:25" pos:end="272:84"><expr pos:start="272:25" pos:end="272:83"><call pos:start="272:25" pos:end="272:83"><name pos:start="272:25" pos:end="272:44"><name pos:start="272:25" pos:end="272:32">maxPoint</name><operator pos:start="272:33" pos:end="272:33">.</operator><name pos:start="272:34" pos:end="272:44">setLocation</name></name><argument_list pos:start="272:45" pos:end="272:83">(<argument pos:start="272:46" pos:end="272:60"><expr pos:start="272:46" pos:end="272:60"><call pos:start="272:46" pos:end="272:60"><name pos:start="272:46" pos:end="272:58"><name pos:start="272:46" pos:end="272:53">maxPoint</name><operator pos:start="272:54" pos:end="272:54">.</operator><name pos:start="272:55" pos:end="272:58">getX</name></name><argument_list pos:start="272:59" pos:end="272:60">()</argument_list></call></expr></argument>, <argument pos:start="272:63" pos:end="272:82"><expr pos:start="272:63" pos:end="272:82"><call pos:start="272:63" pos:end="272:75"><name pos:start="272:63" pos:end="272:72"><name pos:start="272:63" pos:end="272:68">points</name><operator pos:start="272:69" pos:end="272:69">.</operator><name pos:start="272:70" pos:end="272:72">get</name></name><argument_list pos:start="272:73" pos:end="272:75">(<argument pos:start="272:74" pos:end="272:74"><expr pos:start="272:74" pos:end="272:74"><name pos:start="272:74" pos:end="272:74">i</name></expr></argument>)</argument_list></call><operator pos:start="272:76" pos:end="272:76">.</operator><call pos:start="272:77" pos:end="272:82"><name pos:start="272:77" pos:end="272:80">getY</name><argument_list pos:start="272:81" pos:end="272:82">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    		</block_content>}</block></if></if_stmt>
    	</block_content>}</block></for>
    </block_content>}</block></function>
    
    
    <comment type="block" format="javadoc" pos:start="278:5" pos:end="283:7">/**
     * This function finds the closest point in the opposite RoutePrimitive
     * @param point
     * @param opposingSide
     * @return closest opposing point
     */</comment>
    <function pos:start="284:5" pos:end="296:5"><type pos:start="284:5" pos:end="284:32"><specifier pos:start="284:5" pos:end="284:10">public</specifier> <specifier pos:start="284:12" pos:end="284:17">static</specifier> <name pos:start="284:19" pos:end="284:32"><name pos:start="284:19" pos:end="284:25">Point2D</name><operator pos:start="284:26" pos:end="284:26">.</operator><name pos:start="284:27" pos:end="284:32">Double</name></name></type> <name pos:start="284:34" pos:end="284:57">findClosestOpposingPoint</name><parameter_list pos:start="284:58" pos:end="284:114">(<parameter pos:start="284:59" pos:end="284:78"><decl pos:start="284:59" pos:end="284:78"><type pos:start="284:59" pos:end="284:78"><name pos:start="284:59" pos:end="284:72"><name pos:start="284:59" pos:end="284:65">Point2D</name><operator pos:start="284:66" pos:end="284:66">.</operator><name pos:start="284:67" pos:end="284:72">Double</name></name></type> <name pos:start="284:74" pos:end="284:78">point</name></decl></parameter>, <parameter pos:start="284:81" pos:end="284:113"><decl pos:start="284:81" pos:end="284:113"><type pos:start="284:81" pos:end="284:113"><name pos:start="284:81" pos:end="284:100"><name pos:start="284:81" pos:end="284:84">List</name><argument_list type="generic" pos:start="284:85" pos:end="284:100">&lt;<argument pos:start="284:86" pos:end="284:99"><name pos:start="284:86" pos:end="284:99"><name pos:start="284:86" pos:end="284:92">Point2D</name><operator pos:start="284:93" pos:end="284:93">.</operator><name pos:start="284:94" pos:end="284:99">Double</name></name></argument>&gt;</argument_list></name></type> <name pos:start="284:102" pos:end="284:113">opposingSide</name></decl></parameter>)</parameter_list> <block pos:start="284:116" pos:end="296:5">{<block_content pos:start="285:9" pos:end="295:27">
    	<decl_stmt pos:start="285:9" pos:end="285:58"><decl pos:start="285:9" pos:end="285:57"><type pos:start="285:9" pos:end="285:22"><name pos:start="285:9" pos:end="285:22"><name pos:start="285:9" pos:end="285:15">Point2D</name><operator pos:start="285:16" pos:end="285:16">.</operator><name pos:start="285:17" pos:end="285:22">Double</name></name></type> <name pos:start="285:24" pos:end="285:34">destination</name> <init pos:start="285:36" pos:end="285:57">= <expr pos:start="285:38" pos:end="285:57"><operator pos:start="285:38" pos:end="285:40">new</operator> <call pos:start="285:42" pos:end="285:57"><name pos:start="285:42" pos:end="285:55"><name pos:start="285:42" pos:end="285:48">Point2D</name><operator pos:start="285:49" pos:end="285:49">.</operator><name pos:start="285:50" pos:end="285:55">Double</name></name><argument_list pos:start="285:56" pos:end="285:57">()</argument_list></call></expr></init></decl>;</decl_stmt>
    	<decl_stmt pos:start="286:9" pos:end="286:43"><decl pos:start="286:9" pos:end="286:42"><type pos:start="286:9" pos:end="286:14"><name pos:start="286:9" pos:end="286:14">double</name></type> <name pos:start="286:16" pos:end="286:23">distance</name> <init pos:start="286:25" pos:end="286:42">= <expr pos:start="286:27" pos:end="286:42"><name pos:start="286:27" pos:end="286:42"><name pos:start="286:27" pos:end="286:32">Double</name><operator pos:start="286:33" pos:end="286:33">.</operator><name pos:start="286:34" pos:end="286:42">MAX_VALUE</name></name></expr></init></decl>;</decl_stmt>
    	<decl_stmt pos:start="287:9" pos:end="287:27"><decl pos:start="287:9" pos:end="287:26"><type pos:start="287:9" pos:end="287:14"><name pos:start="287:9" pos:end="287:14">double</name></type> <name pos:start="287:16" pos:end="287:26">newDistance</name></decl>;</decl_stmt>
    	<for pos:start="288:9" pos:end="294:9">for<control pos:start="288:12" pos:end="288:47">(<init pos:start="288:13" pos:end="288:46"><decl pos:start="288:13" pos:end="288:46"><type pos:start="288:13" pos:end="288:26"><name pos:start="288:13" pos:end="288:26"><name pos:start="288:13" pos:end="288:19">Point2D</name><operator pos:start="288:20" pos:end="288:20">.</operator><name pos:start="288:21" pos:end="288:26">Double</name></name></type> <name pos:start="288:28" pos:end="288:31">node</name> <range pos:start="288:33" pos:end="288:46">: <expr pos:start="288:35" pos:end="288:46"><name pos:start="288:35" pos:end="288:46">opposingSide</name></expr></range></decl></init>)</control> <block pos:start="288:49" pos:end="294:9">{<block_content pos:start="289:17" pos:end="293:17">
    		<expr_stmt pos:start="289:17" pos:end="289:65"><expr pos:start="289:17" pos:end="289:64"><name pos:start="289:17" pos:end="289:27">newDistance</name> <operator pos:start="289:29" pos:end="289:29">=</operator> <call pos:start="289:31" pos:end="289:64"><name pos:start="289:31" pos:end="289:51">findCartesianDistance</name><argument_list pos:start="289:52" pos:end="289:64">(<argument pos:start="289:53" pos:end="289:57"><expr pos:start="289:53" pos:end="289:57"><name pos:start="289:53" pos:end="289:57">point</name></expr></argument>, <argument pos:start="289:60" pos:end="289:63"><expr pos:start="289:60" pos:end="289:63"><name pos:start="289:60" pos:end="289:63">node</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    		<if_stmt pos:start="290:17" pos:end="293:17"><if pos:start="290:17" pos:end="293:17">if<condition pos:start="290:19" pos:end="290:42">(<expr pos:start="290:20" pos:end="290:41"><name pos:start="290:20" pos:end="290:30">newDistance</name> <operator pos:start="290:32" pos:end="290:32">&lt;</operator> <name pos:start="290:34" pos:end="290:41">distance</name></expr>)</condition><block pos:start="290:43" pos:end="293:17">{<block_content pos:start="291:25" pos:end="292:43">
    			<expr_stmt pos:start="291:25" pos:end="291:47"><expr pos:start="291:25" pos:end="291:46"><name pos:start="291:25" pos:end="291:32">distance</name> <operator pos:start="291:34" pos:end="291:34">=</operator> <name pos:start="291:36" pos:end="291:46">newDistance</name></expr>;</expr_stmt>
    			<expr_stmt pos:start="292:25" pos:end="292:43"><expr pos:start="292:25" pos:end="292:42"><name pos:start="292:25" pos:end="292:35">destination</name> <operator pos:start="292:37" pos:end="292:37">=</operator> <name pos:start="292:39" pos:end="292:42">node</name></expr>;</expr_stmt>
    		</block_content>}</block></if></if_stmt>
    	</block_content>}</block></for>
    	<return pos:start="295:9" pos:end="295:27">return <expr pos:start="295:16" pos:end="295:26"><name pos:start="295:16" pos:end="295:26">destination</name></expr>;</return>
    </block_content>}</block></function> 
    
    
    <comment type="block" format="javadoc" pos:start="299:5" pos:end="308:7">/**
     * This function inserts additional nodes into each RiverBank so that there is a node every 
     * APERATURE_WIDTH*OVERLAP_FACTOR.
     * @param bank
     * @param newPoints
     * @param APERATURE_WIDTH
     * @param OVERLAP_FACTOR
     * @param riverSegment
     * @return adjusted RiverBank
     */</comment>
    <function pos:start="309:5" pos:end="343:9"><type pos:start="309:5" pos:end="309:28"><specifier pos:start="309:5" pos:end="309:11">private</specifier> <specifier pos:start="309:13" pos:end="309:18">static</specifier> <name pos:start="309:20" pos:end="309:28">RiverBank</name></type> <name pos:start="309:30" pos:end="309:48">findRiverBankOffset</name><parameter_list pos:start="309:49" pos:end="309:171">(<parameter pos:start="309:50" pos:end="309:63"><decl pos:start="309:50" pos:end="309:63"><type pos:start="309:50" pos:end="309:63"><name pos:start="309:50" pos:end="309:58">RiverBank</name></type> <name pos:start="309:60" pos:end="309:63">bank</name></decl></parameter>, <parameter pos:start="309:66" pos:end="309:95"><decl pos:start="309:66" pos:end="309:95"><type pos:start="309:66" pos:end="309:95"><name pos:start="309:66" pos:end="309:85"><name pos:start="309:66" pos:end="309:69">List</name><argument_list type="generic" pos:start="309:70" pos:end="309:85">&lt;<argument pos:start="309:71" pos:end="309:84"><name pos:start="309:71" pos:end="309:84"><name pos:start="309:71" pos:end="309:77">Point2D</name><operator pos:start="309:78" pos:end="309:78">.</operator><name pos:start="309:79" pos:end="309:84">Double</name></name></argument>&gt;</argument_list></name></type> <name pos:start="309:87" pos:end="309:95">newPoints</name></decl></parameter>, <parameter pos:start="309:98" pos:end="309:119"><decl pos:start="309:98" pos:end="309:119"><type pos:start="309:98" pos:end="309:119"><name pos:start="309:98" pos:end="309:103">double</name></type> <name pos:start="309:105" pos:end="309:119">APERATURE_WIDTH</name></decl></parameter>, <parameter pos:start="309:122" pos:end="309:142"><decl pos:start="309:122" pos:end="309:142"><type pos:start="309:122" pos:end="309:142"><name pos:start="309:122" pos:end="309:127">double</name></type> <name pos:start="309:129" pos:end="309:142">OVERLAP_FACTOR</name></decl></parameter>, <parameter pos:start="309:145" pos:end="309:170"><decl pos:start="309:145" pos:end="309:170"><type pos:start="309:145" pos:end="309:170"><name pos:start="309:145" pos:end="309:157"><name pos:start="309:145" pos:end="309:150">Path2D</name><operator pos:start="309:151" pos:end="309:151">.</operator><name pos:start="309:152" pos:end="309:157">Double</name></name></type> <name pos:start="309:159" pos:end="309:170">riverSegment</name></decl></parameter>)</parameter_list><block pos:start="309:172" pos:end="343:9">{<block_content pos:start="310:17" pos:end="342:31">
		<decl_stmt pos:start="310:17" pos:end="310:63"><decl pos:start="310:17" pos:end="310:62"><type pos:start="310:17" pos:end="310:30"><name pos:start="310:17" pos:end="310:30"><name pos:start="310:17" pos:end="310:23">Point2D</name><operator pos:start="310:24" pos:end="310:24">.</operator><name pos:start="310:25" pos:end="310:30">Double</name></name></type> <name pos:start="310:32" pos:end="310:39">newPoint</name> <init pos:start="310:41" pos:end="310:62">= <expr pos:start="310:43" pos:end="310:62"><operator pos:start="310:43" pos:end="310:45">new</operator> <call pos:start="310:47" pos:end="310:62"><name pos:start="310:47" pos:end="310:60"><name pos:start="310:47" pos:end="310:53">Point2D</name><operator pos:start="310:54" pos:end="310:54">.</operator><name pos:start="310:55" pos:end="310:60">Double</name></name><argument_list pos:start="310:61" pos:end="310:62">()</argument_list></call></expr></init></decl>;</decl_stmt>
		<decl_stmt pos:start="311:17" pos:end="311:38"><decl pos:start="311:17" pos:end="311:37"><type pos:start="311:17" pos:end="311:30"><name pos:start="311:17" pos:end="311:30"><name pos:start="311:17" pos:end="311:23">Point2D</name><operator pos:start="311:24" pos:end="311:24">.</operator><name pos:start="311:25" pos:end="311:30">Double</name></name></type> <name pos:start="311:32" pos:end="311:37">point1</name></decl>;</decl_stmt>
		<decl_stmt pos:start="312:17" pos:end="312:38"><decl pos:start="312:17" pos:end="312:37"><type pos:start="312:17" pos:end="312:30"><name pos:start="312:17" pos:end="312:30"><name pos:start="312:17" pos:end="312:23">Point2D</name><operator pos:start="312:24" pos:end="312:24">.</operator><name pos:start="312:25" pos:end="312:30">Double</name></name></type> <name pos:start="312:32" pos:end="312:37">point2</name></decl>;</decl_stmt>
		<decl_stmt pos:start="313:17" pos:end="313:52"><decl pos:start="313:17" pos:end="313:51"><type pos:start="313:17" pos:end="313:25"><name pos:start="313:17" pos:end="313:25">RiverBank</name></type> <name pos:start="313:27" pos:end="313:33">newBank</name> <init pos:start="313:35" pos:end="313:51">= <expr pos:start="313:37" pos:end="313:51"><operator pos:start="313:37" pos:end="313:39">new</operator> <call pos:start="313:41" pos:end="313:51"><name pos:start="313:41" pos:end="313:49">RiverBank</name><argument_list pos:start="313:50" pos:end="313:51">()</argument_list></call></expr></init></decl>;</decl_stmt>
		<decl_stmt pos:start="314:17" pos:end="314:41"><decl pos:start="314:17" pos:end="314:40"><type pos:start="314:17" pos:end="314:22"><name pos:start="314:17" pos:end="314:22">double</name></type> <name pos:start="314:24" pos:end="314:40">riverBankDistance</name></decl>;</decl_stmt>
		<decl_stmt pos:start="315:17" pos:end="315:73"><decl pos:start="315:17" pos:end="315:72"><type pos:start="315:17" pos:end="315:22"><name pos:start="315:17" pos:end="315:22">double</name></type> <name pos:start="315:24" pos:end="315:39">traverseDistance</name> <init pos:start="315:41" pos:end="315:72">= <expr pos:start="315:43" pos:end="315:72"><name pos:start="315:43" pos:end="315:57">APERATURE_WIDTH</name><operator pos:start="315:58" pos:end="315:58">*</operator><name pos:start="315:59" pos:end="315:72">OVERLAP_FACTOR</name></expr></init></decl>;</decl_stmt>
		<decl_stmt pos:start="316:17" pos:end="316:37"><decl pos:start="316:17" pos:end="316:36"><type pos:start="316:17" pos:end="316:22"><name pos:start="316:17" pos:end="316:22">double</name></type> <name pos:start="316:24" pos:end="316:36">distanceRatio</name></decl>;</decl_stmt>
		<decl_stmt pos:start="317:17" pos:end="317:47"><decl pos:start="317:17" pos:end="317:46"><type pos:start="317:17" pos:end="317:22"><name pos:start="317:17" pos:end="317:22">double</name></type> <name pos:start="317:24" pos:end="317:42">newTraverseDistance</name> <init pos:start="317:44" pos:end="317:46">= <expr pos:start="317:46" pos:end="317:46"><literal type="number" pos:start="317:46" pos:end="317:46">0</literal></expr></init></decl>;</decl_stmt>
		<for pos:start="318:17" pos:end="341:17">for<control pos:start="318:20" pos:end="318:54">(<init pos:start="318:21" pos:end="318:30"><decl pos:start="318:21" pos:end="318:29"><type pos:start="318:21" pos:end="318:23"><name pos:start="318:21" pos:end="318:23">int</name></type> <name pos:start="318:25" pos:end="318:25">i</name> <init pos:start="318:27" pos:end="318:29">= <expr pos:start="318:29" pos:end="318:29"><literal type="number" pos:start="318:29" pos:end="318:29">0</literal></expr></init></decl>;</init> <condition pos:start="318:32" pos:end="318:49"><expr pos:start="318:32" pos:end="318:48"><name pos:start="318:32" pos:end="318:32">i</name> <operator pos:start="318:34" pos:end="318:34">&lt;</operator> <call pos:start="318:36" pos:end="318:46"><name pos:start="318:36" pos:end="318:44"><name pos:start="318:36" pos:end="318:39">bank</name><operator pos:start="318:40" pos:end="318:40">.</operator><name pos:start="318:41" pos:end="318:44">size</name></name><argument_list pos:start="318:45" pos:end="318:46">()</argument_list></call><operator pos:start="318:47" pos:end="318:47">-</operator><literal type="number" pos:start="318:48" pos:end="318:48">1</literal></expr>;</condition> <incr pos:start="318:51" pos:end="318:53"><expr pos:start="318:51" pos:end="318:53"><name pos:start="318:51" pos:end="318:51">i</name><operator pos:start="318:52" pos:end="318:53">++</operator></expr></incr>)</control> <block pos:start="318:56" pos:end="341:17">{<block_content pos:start="319:25" pos:end="340:91">
			<expr_stmt pos:start="319:25" pos:end="319:45"><expr pos:start="319:25" pos:end="319:44"><name pos:start="319:25" pos:end="319:30">point1</name> <operator pos:start="319:32" pos:end="319:32">=</operator> <call pos:start="319:34" pos:end="319:44"><name pos:start="319:34" pos:end="319:41"><name pos:start="319:34" pos:end="319:37">bank</name><operator pos:start="319:38" pos:end="319:38">.</operator><name pos:start="319:39" pos:end="319:41">get</name></name><argument_list pos:start="319:42" pos:end="319:44">(<argument pos:start="319:43" pos:end="319:43"><expr pos:start="319:43" pos:end="319:43"><name pos:start="319:43" pos:end="319:43">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt pos:start="320:25" pos:end="320:47"><expr pos:start="320:25" pos:end="320:46"><name pos:start="320:25" pos:end="320:30">point2</name> <operator pos:start="320:32" pos:end="320:32">=</operator> <call pos:start="320:34" pos:end="320:46"><name pos:start="320:34" pos:end="320:41"><name pos:start="320:34" pos:end="320:37">bank</name><operator pos:start="320:38" pos:end="320:38">.</operator><name pos:start="320:39" pos:end="320:41">get</name></name><argument_list pos:start="320:42" pos:end="320:46">(<argument pos:start="320:43" pos:end="320:45"><expr pos:start="320:43" pos:end="320:45"><name pos:start="320:43" pos:end="320:43">i</name><operator pos:start="320:44" pos:end="320:44">+</operator><literal type="number" pos:start="320:45" pos:end="320:45">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt pos:start="321:25" pos:end="321:44"><expr pos:start="321:25" pos:end="321:43"><call pos:start="321:25" pos:end="321:43"><name pos:start="321:25" pos:end="321:35"><name pos:start="321:25" pos:end="321:31">newBank</name><operator pos:start="321:32" pos:end="321:32">.</operator><name pos:start="321:33" pos:end="321:35">add</name></name><argument_list pos:start="321:36" pos:end="321:43">(<argument pos:start="321:37" pos:end="321:42"><expr pos:start="321:37" pos:end="321:42"><name pos:start="321:37" pos:end="321:42">point1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt pos:start="322:25" pos:end="322:91"><expr pos:start="322:25" pos:end="322:90"><name pos:start="322:25" pos:end="322:41">riverBankDistance</name> <operator pos:start="322:43" pos:end="322:43">=</operator> <call pos:start="322:45" pos:end="322:90"><name pos:start="322:45" pos:end="322:74"><name pos:start="322:45" pos:end="322:52">Geometry</name><operator pos:start="322:53" pos:end="322:53">.</operator><name pos:start="322:54" pos:end="322:74">findCartesianDistance</name></name><argument_list pos:start="322:75" pos:end="322:90">(<argument pos:start="322:76" pos:end="322:81"><expr pos:start="322:76" pos:end="322:81"><name pos:start="322:76" pos:end="322:81">point1</name></expr></argument>, <argument pos:start="322:84" pos:end="322:89"><expr pos:start="322:84" pos:end="322:89"><name pos:start="322:84" pos:end="322:89">point2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<if_stmt pos:start="323:25" pos:end="331:25"><if pos:start="323:25" pos:end="331:25">if<condition pos:start="323:27" pos:end="323:96">(<expr pos:start="323:28" pos:end="323:95"><name pos:start="323:28" pos:end="323:46">newTraverseDistance</name> <operator pos:start="323:48" pos:end="323:49">!=</operator> <literal type="number" pos:start="323:51" pos:end="323:51">0</literal> <operator pos:start="323:53" pos:end="323:54">&amp;&amp;</operator> <name pos:start="323:56" pos:end="323:74">newTraverseDistance</name> <operator pos:start="323:76" pos:end="323:77">&lt;=</operator> <name pos:start="323:79" pos:end="323:95">riverBankDistance</name></expr>)</condition> <block pos:start="323:98" pos:end="331:25">{<block_content pos:start="324:33" pos:end="330:56">
				<expr_stmt pos:start="324:33" pos:end="324:88"><expr pos:start="324:33" pos:end="324:87"><name pos:start="324:33" pos:end="324:45">distanceRatio</name> <operator pos:start="324:47" pos:end="324:47">=</operator> <name pos:start="324:49" pos:end="324:67">newTraverseDistance</name> <operator pos:start="324:69" pos:end="324:69">/</operator> <name pos:start="324:71" pos:end="324:87">riverBankDistance</name></expr>;</expr_stmt>
				<expr_stmt pos:start="325:33" pos:end="325:99"><expr pos:start="325:33" pos:end="325:98"><name pos:start="325:33" pos:end="325:40">newPoint</name> <operator pos:start="325:42" pos:end="325:42">=</operator> <call pos:start="325:44" pos:end="325:98"><name pos:start="325:44" pos:end="325:67"><name pos:start="325:44" pos:end="325:51">Geometry</name><operator pos:start="325:52" pos:end="325:52">.</operator><name pos:start="325:53" pos:end="325:67">findOffsetPoint</name></name><argument_list pos:start="325:68" pos:end="325:98">(<argument pos:start="325:69" pos:end="325:74"><expr pos:start="325:69" pos:end="325:74"><name pos:start="325:69" pos:end="325:74">point1</name></expr></argument>, <argument pos:start="325:77" pos:end="325:82"><expr pos:start="325:77" pos:end="325:82"><name pos:start="325:77" pos:end="325:82">point2</name></expr></argument>, <argument pos:start="325:85" pos:end="325:97"><expr pos:start="325:85" pos:end="325:97"><name pos:start="325:85" pos:end="325:97">distanceRatio</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<expr_stmt pos:start="326:33" pos:end="326:54"><expr pos:start="326:33" pos:end="326:53"><call pos:start="326:33" pos:end="326:53"><name pos:start="326:33" pos:end="326:43"><name pos:start="326:33" pos:end="326:39">newBank</name><operator pos:start="326:40" pos:end="326:40">.</operator><name pos:start="326:41" pos:end="326:43">add</name></name><argument_list pos:start="326:44" pos:end="326:53">(<argument pos:start="326:45" pos:end="326:52"><expr pos:start="326:45" pos:end="326:52"><name pos:start="326:45" pos:end="326:52">newPoint</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<expr_stmt pos:start="327:33" pos:end="327:56"><expr pos:start="327:33" pos:end="327:55"><call pos:start="327:33" pos:end="327:55"><name pos:start="327:33" pos:end="327:45"><name pos:start="327:33" pos:end="327:41">newPoints</name><operator pos:start="327:42" pos:end="327:42">.</operator><name pos:start="327:43" pos:end="327:45">add</name></name><argument_list pos:start="327:46" pos:end="327:55">(<argument pos:start="327:47" pos:end="327:54"><expr pos:start="327:47" pos:end="327:54"><name pos:start="327:47" pos:end="327:54">newPoint</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<expr_stmt pos:start="328:33" pos:end="328:50"><expr pos:start="328:33" pos:end="328:49"><name pos:start="328:33" pos:end="328:38">point1</name> <operator pos:start="328:40" pos:end="328:40">=</operator> <name pos:start="328:42" pos:end="328:49">newPoint</name></expr>;</expr_stmt>
				<expr_stmt pos:start="329:33" pos:end="329:92"><expr pos:start="329:33" pos:end="329:91"><name pos:start="329:33" pos:end="329:49">riverBankDistance</name> <operator pos:start="329:51" pos:end="329:51">=</operator> <name pos:start="329:53" pos:end="329:69">riverBankDistance</name> <operator pos:start="329:71" pos:end="329:71">-</operator> <name pos:start="329:73" pos:end="329:91">newTraverseDistance</name></expr>;</expr_stmt>
				<expr_stmt pos:start="330:33" pos:end="330:56"><expr pos:start="330:33" pos:end="330:55"><name pos:start="330:33" pos:end="330:51">newTraverseDistance</name> <operator pos:start="330:53" pos:end="330:53">=</operator> <literal type="number" pos:start="330:55" pos:end="330:55">0</literal></expr>;</expr_stmt>
			</block_content>}</block></if></if_stmt>
			<while pos:start="332:25" pos:end="339:25">while<condition pos:start="332:30" pos:end="332:68">(<expr pos:start="332:31" pos:end="332:67"><name pos:start="332:31" pos:end="332:46">traverseDistance</name> <operator pos:start="332:48" pos:end="332:49">&lt;=</operator> <name pos:start="332:51" pos:end="332:67">riverBankDistance</name></expr>)</condition> <block pos:start="332:70" pos:end="339:25">{<block_content pos:start="333:41" pos:end="338:58">
					<expr_stmt pos:start="333:41" pos:end="333:93"><expr pos:start="333:41" pos:end="333:92"><name pos:start="333:41" pos:end="333:53">distanceRatio</name> <operator pos:start="333:55" pos:end="333:55">=</operator> <name pos:start="333:57" pos:end="333:72">traverseDistance</name> <operator pos:start="333:74" pos:end="333:74">/</operator> <name pos:start="333:76" pos:end="333:92">riverBankDistance</name></expr>;</expr_stmt>
					<expr_stmt pos:start="334:41" pos:end="334:107"><expr pos:start="334:41" pos:end="334:106"><name pos:start="334:41" pos:end="334:48">newPoint</name> <operator pos:start="334:50" pos:end="334:50">=</operator> <call pos:start="334:52" pos:end="334:106"><name pos:start="334:52" pos:end="334:75"><name pos:start="334:52" pos:end="334:59">Geometry</name><operator pos:start="334:60" pos:end="334:60">.</operator><name pos:start="334:61" pos:end="334:75">findOffsetPoint</name></name><argument_list pos:start="334:76" pos:end="334:106">(<argument pos:start="334:77" pos:end="334:82"><expr pos:start="334:77" pos:end="334:82"><name pos:start="334:77" pos:end="334:82">point1</name></expr></argument>, <argument pos:start="334:85" pos:end="334:90"><expr pos:start="334:85" pos:end="334:90"><name pos:start="334:85" pos:end="334:90">point2</name></expr></argument>, <argument pos:start="334:93" pos:end="334:105"><expr pos:start="334:93" pos:end="334:105"><name pos:start="334:93" pos:end="334:105">distanceRatio</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<expr_stmt pos:start="335:41" pos:end="335:62"><expr pos:start="335:41" pos:end="335:61"><call pos:start="335:41" pos:end="335:61"><name pos:start="335:41" pos:end="335:51"><name pos:start="335:41" pos:end="335:47">newBank</name><operator pos:start="335:48" pos:end="335:48">.</operator><name pos:start="335:49" pos:end="335:51">add</name></name><argument_list pos:start="335:52" pos:end="335:61">(<argument pos:start="335:53" pos:end="335:60"><expr pos:start="335:53" pos:end="335:60"><name pos:start="335:53" pos:end="335:60">newPoint</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<expr_stmt pos:start="336:41" pos:end="336:64"><expr pos:start="336:41" pos:end="336:63"><call pos:start="336:41" pos:end="336:63"><name pos:start="336:41" pos:end="336:53"><name pos:start="336:41" pos:end="336:49">newPoints</name><operator pos:start="336:50" pos:end="336:50">.</operator><name pos:start="336:51" pos:end="336:53">add</name></name><argument_list pos:start="336:54" pos:end="336:63">(<argument pos:start="336:55" pos:end="336:62"><expr pos:start="336:55" pos:end="336:62"><name pos:start="336:55" pos:end="336:62">newPoint</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<expr_stmt pos:start="337:41" pos:end="337:97"><expr pos:start="337:41" pos:end="337:96"><name pos:start="337:41" pos:end="337:57">riverBankDistance</name> <operator pos:start="337:59" pos:end="337:59">=</operator> <name pos:start="337:61" pos:end="337:77">riverBankDistance</name> <operator pos:start="337:79" pos:end="337:79">-</operator> <name pos:start="337:81" pos:end="337:96">traverseDistance</name></expr>;</expr_stmt>
					<expr_stmt pos:start="338:41" pos:end="338:58"><expr pos:start="338:41" pos:end="338:57"><name pos:start="338:41" pos:end="338:46">point1</name> <operator pos:start="338:48" pos:end="338:48">=</operator> <name pos:start="338:50" pos:end="338:57">newPoint</name></expr>;</expr_stmt>
			</block_content>}</block></while> 
				<expr_stmt pos:start="340:33" pos:end="340:91"><expr pos:start="340:33" pos:end="340:90"><name pos:start="340:33" pos:end="340:51">newTraverseDistance</name> <operator pos:start="340:53" pos:end="340:53">=</operator> <name pos:start="340:55" pos:end="340:70">traverseDistance</name> <operator pos:start="340:72" pos:end="340:72">-</operator> <name pos:start="340:74" pos:end="340:90">riverBankDistance</name></expr>;</expr_stmt>
		</block_content>}</block></for>
		<return pos:start="342:17" pos:end="342:31">return <expr pos:start="342:24" pos:end="342:30"><name pos:start="342:24" pos:end="342:30">newBank</name></expr>;</return>
	</block_content>}</block></function>
    
    <function pos:start="345:5" pos:end="349:5"><type pos:start="345:5" pos:end="345:23"><specifier pos:start="345:5" pos:end="345:11">private</specifier> <specifier pos:start="345:13" pos:end="345:18">static</specifier> <name pos:start="345:20" pos:end="345:23">void</name></type> <name pos:start="345:25" pos:end="345:47">sourcePointsStartAndEnd</name><parameter_list pos:start="345:48" pos:end="345:173">(<parameter pos:start="345:49" pos:end="345:73"><decl pos:start="345:49" pos:end="345:73"><type pos:start="345:49" pos:end="345:73"><name pos:start="345:49" pos:end="345:62"><name pos:start="345:49" pos:end="345:55">Point2D</name><operator pos:start="345:56" pos:end="345:56">.</operator><name pos:start="345:57" pos:end="345:62">Double</name></name></type> <name pos:start="345:64" pos:end="345:73">bank1Point</name></decl></parameter>, <parameter pos:start="345:76" pos:end="345:100"><decl pos:start="345:76" pos:end="345:100"><type pos:start="345:76" pos:end="345:100"><name pos:start="345:76" pos:end="345:89"><name pos:start="345:76" pos:end="345:82">Point2D</name><operator pos:start="345:83" pos:end="345:83">.</operator><name pos:start="345:84" pos:end="345:89">Double</name></name></type> <name pos:start="345:91" pos:end="345:100">bank2Point</name></decl></parameter>, <parameter pos:start="345:103" pos:end="345:124"><decl pos:start="345:103" pos:end="345:124"><type pos:start="345:103" pos:end="345:124"><name pos:start="345:103" pos:end="345:114">SourcePoints</name></type> <name pos:start="345:116" pos:end="345:124">newPoints</name></decl></parameter>, <parameter pos:start="345:127" pos:end="345:149"><decl pos:start="345:127" pos:end="345:149"><type pos:start="345:127" pos:end="345:149"><name pos:start="345:127" pos:end="345:132">double</name></type> <name pos:start="345:134" pos:end="345:149">APERATURE_HEIGHT</name></decl></parameter>, <parameter pos:start="345:152" pos:end="345:172"><decl pos:start="345:152" pos:end="345:172"><type pos:start="345:152" pos:end="345:172"><name pos:start="345:152" pos:end="345:157">double</name></type> <name pos:start="345:159" pos:end="345:172">OVERLAP_FACTOR</name></decl></parameter>)</parameter_list> <block pos:start="345:175" pos:end="349:5">{<block_content pos:start="346:9" pos:end="348:108">
    	<decl_stmt pos:start="346:9" pos:end="346:55"><decl pos:start="346:9" pos:end="346:54"><type pos:start="346:9" pos:end="346:14"><name pos:start="346:9" pos:end="346:14">double</name></type> <name pos:start="346:16" pos:end="346:31">traverseDistance</name> <init pos:start="346:33" pos:end="346:54">= <expr pos:start="346:35" pos:end="346:54"><name pos:start="346:35" pos:end="346:50">APERATURE_HEIGHT</name> <operator pos:start="346:52" pos:end="346:52">/</operator> <literal type="number" pos:start="346:54" pos:end="346:54">2</literal></expr></init></decl>;</decl_stmt>
    	<decl_stmt pos:start="347:9" pos:end="347:77"><decl pos:start="347:9" pos:end="347:76"><type pos:start="347:9" pos:end="347:14"><name pos:start="347:9" pos:end="347:14">double</name></type> <name pos:start="347:16" pos:end="347:28">totalDistance</name> <init pos:start="347:30" pos:end="347:76">= <expr pos:start="347:32" pos:end="347:76"><call pos:start="347:32" pos:end="347:76"><name pos:start="347:32" pos:end="347:52">findCartesianDistance</name><argument_list pos:start="347:53" pos:end="347:76">(<argument pos:start="347:54" pos:end="347:63"><expr pos:start="347:54" pos:end="347:63"><name pos:start="347:54" pos:end="347:63">bank1Point</name></expr></argument>, <argument pos:start="347:66" pos:end="347:75"><expr pos:start="347:66" pos:end="347:75"><name pos:start="347:66" pos:end="347:75">bank2Point</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    	<expr_stmt pos:start="348:9" pos:end="348:108"><expr pos:start="348:9" pos:end="348:107"><call pos:start="348:9" pos:end="348:107"><name pos:start="348:9" pos:end="348:32"><name pos:start="348:9" pos:end="348:17">newPoints</name><operator pos:start="348:18" pos:end="348:18">.</operator><name pos:start="348:19" pos:end="348:32">addSourcePoint</name></name><argument_list pos:start="348:33" pos:end="348:107">(<argument pos:start="348:34" pos:end="348:106"><expr pos:start="348:34" pos:end="348:106"><call pos:start="348:34" pos:end="348:106"><name pos:start="348:34" pos:end="348:48">findOffsetPoint</name><argument_list pos:start="348:49" pos:end="348:106">(<argument pos:start="348:50" pos:end="348:59"><expr pos:start="348:50" pos:end="348:59"><name pos:start="348:50" pos:end="348:59">bank1Point</name></expr></argument>, <argument pos:start="348:62" pos:end="348:71"><expr pos:start="348:62" pos:end="348:71"><name pos:start="348:62" pos:end="348:71">bank2Point</name></expr></argument>, <argument pos:start="348:74" pos:end="348:105"><expr pos:start="348:74" pos:end="348:105"><name pos:start="348:74" pos:end="348:89">traverseDistance</name> <operator pos:start="348:91" pos:end="348:91">/</operator> <name pos:start="348:93" pos:end="348:105">totalDistance</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></function>
    
    <comment type="line" pos:start="351:5" pos:end="351:46">//trying to fix issue with whiteField.json</comment>
    <comment type="block" pos:start="352:5" pos:end="378:8">/*private static Point2D.Double getProjectedPoint(double APERATURE_HEIGHT, double thetaO, Path2D.Double riverSegment, Point2D.Double bankNode){
    	double dx = (APERATURE_HEIGHT / 2) * Math.cos(thetaO);
		double dy = (APERATURE_HEIGHT / 2) * Math.sin(thetaO);
		double newX = bankNode.getX()+dx;
		double newY = bankNode.getY()+dy;
		Point2D.Double newPoint  = new Point2D.Double(newX, newY);
		if(!riverSegment.contains(newPoint)) {
			newPoint.setLocation(bankNode.getX()-dx, bankNode.getY()-dy);
		}
		if(!riverSegment.contains(newPoint)) {
			thetaO = thetaO - Math.PI;
			dx = (APERATURE_HEIGHT / 2) * Math.cos(thetaO);
			dy = (APERATURE_HEIGHT / 2) * Math.sin(thetaO);
			newX = bankNode.getX()+dx;
			newY = bankNode.getY()+dy;
			newPoint.setLocation(newX, newY);
		}
		if(!riverSegment.contains(newPoint)) {
			newPoint.setLocation(bankNode.getX()-dx, bankNode.getY()-dy);
		}
		if(!riverSegment.contains(newPoint)){
			System.out.println("couldn't find a projected point");
			return null;
		} else {
			return newPoint;
		}
    } */</comment>
    
    
    <comment type="block" format="javadoc" pos:start="381:5" pos:end="390:7">/**
     * This function projects the points in RiverBank out into the river segment and makes these points 
     * into a RoutePrimitive.
     * @param bank1
     * @param newPoints
     * @param APERATURE_WIDTH
     * @param OVERLAP_FACTOR
     * @param riverSegment
     * @return RoutePrimitive
     */</comment>
    <function pos:start="391:5" pos:end="439:9"><type pos:start="391:5" pos:end="391:31"><specifier pos:start="391:5" pos:end="391:11">private</specifier> <specifier pos:start="391:13" pos:end="391:18">static</specifier> <name pos:start="391:20" pos:end="391:31">SourcePoints</name></type> <name pos:start="391:33" pos:end="391:52">projectPointsInwards</name><parameter_list pos:start="391:53" pos:end="391:194">(<parameter pos:start="391:54" pos:end="391:68"><decl pos:start="391:54" pos:end="391:68"><type pos:start="391:54" pos:end="391:68"><name pos:start="391:54" pos:end="391:62">RiverBank</name></type> <name pos:start="391:64" pos:end="391:68">bank1</name></decl></parameter>, <parameter pos:start="391:71" pos:end="391:85"><decl pos:start="391:71" pos:end="391:85"><type pos:start="391:71" pos:end="391:85"><name pos:start="391:71" pos:end="391:79">RiverBank</name></type> <name pos:start="391:81" pos:end="391:85">bank2</name></decl></parameter>, <parameter pos:start="391:88" pos:end="391:117"><decl pos:start="391:88" pos:end="391:117"><type pos:start="391:88" pos:end="391:117"><name pos:start="391:88" pos:end="391:107"><name pos:start="391:88" pos:end="391:91">List</name><argument_list type="generic" pos:start="391:92" pos:end="391:107">&lt;<argument pos:start="391:93" pos:end="391:106"><name pos:start="391:93" pos:end="391:106"><name pos:start="391:93" pos:end="391:99">Point2D</name><operator pos:start="391:100" pos:end="391:100">.</operator><name pos:start="391:101" pos:end="391:106">Double</name></name></argument>&gt;</argument_list></name></type> <name pos:start="391:109" pos:end="391:117">newPoints</name></decl></parameter>, <parameter pos:start="391:120" pos:end="391:142"><decl pos:start="391:120" pos:end="391:142"><type pos:start="391:120" pos:end="391:142"><name pos:start="391:120" pos:end="391:125">double</name></type> <name pos:start="391:127" pos:end="391:142">APERATURE_HEIGHT</name></decl></parameter>, <parameter pos:start="391:145" pos:end="391:165"><decl pos:start="391:145" pos:end="391:165"><type pos:start="391:145" pos:end="391:165"><name pos:start="391:145" pos:end="391:150">double</name></type> <name pos:start="391:152" pos:end="391:165">OVERLAP_FACTOR</name></decl></parameter>, <parameter pos:start="391:168" pos:end="391:193"><decl pos:start="391:168" pos:end="391:193"><type pos:start="391:168" pos:end="391:193"><name pos:start="391:168" pos:end="391:180"><name pos:start="391:168" pos:end="391:173">Path2D</name><operator pos:start="391:174" pos:end="391:174">.</operator><name pos:start="391:175" pos:end="391:180">Double</name></name></type> <name pos:start="391:182" pos:end="391:193">riverSegment</name></decl></parameter>)</parameter_list> <block pos:start="391:196" pos:end="439:9">{<block_content pos:start="392:17" pos:end="438:39">
		<decl_stmt pos:start="392:17" pos:end="392:66"><decl pos:start="392:17" pos:end="392:65"><type pos:start="392:17" pos:end="392:28"><name pos:start="392:17" pos:end="392:28">SourcePoints</name></type> <name pos:start="392:30" pos:end="392:44">newSourcePoints</name> <init pos:start="392:46" pos:end="392:65">= <expr pos:start="392:48" pos:end="392:65"><operator pos:start="392:48" pos:end="392:50">new</operator> <call pos:start="392:52" pos:end="392:65"><name pos:start="392:52" pos:end="392:63">SourcePoints</name><argument_list pos:start="392:64" pos:end="392:65">()</argument_list></call></expr></init></decl>;</decl_stmt>
		<decl_stmt pos:start="393:17" pos:end="393:26"><decl pos:start="393:17" pos:end="393:25"><type pos:start="393:17" pos:end="393:22"><name pos:start="393:17" pos:end="393:22">double</name></type> <name pos:start="393:24" pos:end="393:25">dx</name></decl>;</decl_stmt>
		<decl_stmt pos:start="394:17" pos:end="394:26"><decl pos:start="394:17" pos:end="394:25"><type pos:start="394:17" pos:end="394:22"><name pos:start="394:17" pos:end="394:22">double</name></type> <name pos:start="394:24" pos:end="394:25">dy</name></decl>;</decl_stmt>
		<decl_stmt pos:start="395:17" pos:end="395:28"><decl pos:start="395:17" pos:end="395:27"><type pos:start="395:17" pos:end="395:22"><name pos:start="395:17" pos:end="395:22">double</name></type> <name pos:start="395:24" pos:end="395:27">newX</name></decl>;</decl_stmt>
		<decl_stmt pos:start="396:17" pos:end="396:28"><decl pos:start="396:17" pos:end="396:27"><type pos:start="396:17" pos:end="396:22"><name pos:start="396:17" pos:end="396:22">double</name></type> <name pos:start="396:24" pos:end="396:27">newY</name></decl>;</decl_stmt>
		<decl_stmt pos:start="397:17" pos:end="397:73"><decl pos:start="397:17" pos:end="397:72"><type pos:start="397:17" pos:end="397:39"><name pos:start="397:17" pos:end="397:39"><name pos:start="397:17" pos:end="397:23">HashSet</name><argument_list type="generic" pos:start="397:24" pos:end="397:39">&lt;<argument pos:start="397:25" pos:end="397:38"><name pos:start="397:25" pos:end="397:38"><name pos:start="397:25" pos:end="397:31">Point2D</name><operator pos:start="397:32" pos:end="397:32">.</operator><name pos:start="397:33" pos:end="397:38">Double</name></name></argument>&gt;</argument_list></name></type> <name pos:start="397:41" pos:end="397:45">nodes</name> <init pos:start="397:47" pos:end="397:72">= <expr pos:start="397:49" pos:end="397:72"><operator pos:start="397:49" pos:end="397:51">new</operator> <call pos:start="397:53" pos:end="397:72"><name pos:start="397:53" pos:end="397:61"><name pos:start="397:53" pos:end="397:59">HashSet</name><argument_list type="generic" pos:start="397:60" pos:end="397:61">&lt;&gt;</argument_list></name><argument_list pos:start="397:62" pos:end="397:72">(<argument pos:start="397:63" pos:end="397:71"><expr pos:start="397:63" pos:end="397:71"><name pos:start="397:63" pos:end="397:71">newPoints</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt pos:start="398:17" pos:end="398:119"><expr pos:start="398:17" pos:end="398:118"><call pos:start="398:17" pos:end="398:118"><name pos:start="398:17" pos:end="398:39">sourcePointsStartAndEnd</name><argument_list pos:start="398:40" pos:end="398:118">(<argument pos:start="398:41" pos:end="398:52"><expr pos:start="398:41" pos:end="398:52"><call pos:start="398:41" pos:end="398:52"><name pos:start="398:41" pos:end="398:49"><name pos:start="398:41" pos:end="398:45">bank1</name><operator pos:start="398:46" pos:end="398:46">.</operator><name pos:start="398:47" pos:end="398:49">get</name></name><argument_list pos:start="398:50" pos:end="398:52">(<argument pos:start="398:51" pos:end="398:51"><expr pos:start="398:51" pos:end="398:51"><literal type="number" pos:start="398:51" pos:end="398:51">0</literal></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="398:55" pos:end="398:66"><expr pos:start="398:55" pos:end="398:66"><call pos:start="398:55" pos:end="398:66"><name pos:start="398:55" pos:end="398:63"><name pos:start="398:55" pos:end="398:59">bank2</name><operator pos:start="398:60" pos:end="398:60">.</operator><name pos:start="398:61" pos:end="398:63">get</name></name><argument_list pos:start="398:64" pos:end="398:66">(<argument pos:start="398:65" pos:end="398:65"><expr pos:start="398:65" pos:end="398:65"><literal type="number" pos:start="398:65" pos:end="398:65">0</literal></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="398:69" pos:end="398:83"><expr pos:start="398:69" pos:end="398:83"><name pos:start="398:69" pos:end="398:83">newSourcePoints</name></expr></argument>, <argument pos:start="398:86" pos:end="398:101"><expr pos:start="398:86" pos:end="398:101"><name pos:start="398:86" pos:end="398:101">APERATURE_HEIGHT</name></expr></argument>, <argument pos:start="398:104" pos:end="398:117"><expr pos:start="398:104" pos:end="398:117"><name pos:start="398:104" pos:end="398:117">OVERLAP_FACTOR</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<for pos:start="399:17" pos:end="436:17">for<control pos:start="399:20" pos:end="399:55">(<init pos:start="399:21" pos:end="399:30"><decl pos:start="399:21" pos:end="399:29"><type pos:start="399:21" pos:end="399:23"><name pos:start="399:21" pos:end="399:23">int</name></type> <name pos:start="399:25" pos:end="399:25">i</name> <init pos:start="399:27" pos:end="399:29">= <expr pos:start="399:29" pos:end="399:29"><literal type="number" pos:start="399:29" pos:end="399:29">0</literal></expr></init></decl>;</init> <condition pos:start="399:32" pos:end="399:50"><expr pos:start="399:32" pos:end="399:49"><name pos:start="399:32" pos:end="399:32">i</name> <operator pos:start="399:34" pos:end="399:34">&lt;</operator> <call pos:start="399:36" pos:end="399:47"><name pos:start="399:36" pos:end="399:45"><name pos:start="399:36" pos:end="399:40">bank1</name><operator pos:start="399:41" pos:end="399:41">.</operator><name pos:start="399:42" pos:end="399:45">size</name></name><argument_list pos:start="399:46" pos:end="399:47">()</argument_list></call><operator pos:start="399:48" pos:end="399:48">-</operator><literal type="number" pos:start="399:49" pos:end="399:49">2</literal></expr>;</condition> <incr pos:start="399:52" pos:end="399:54"><expr pos:start="399:52" pos:end="399:54"><name pos:start="399:52" pos:end="399:52">i</name><operator pos:start="399:53" pos:end="399:54">++</operator></expr></incr>)</control> <block pos:start="399:57" pos:end="436:17">{<block_content pos:start="400:25" pos:end="435:25">
			<if_stmt pos:start="400:25" pos:end="402:25"><if pos:start="400:25" pos:end="402:25">if<condition pos:start="400:27" pos:end="400:59">(<expr pos:start="400:28" pos:end="400:58"><operator pos:start="400:28" pos:end="400:28">!</operator><call pos:start="400:29" pos:end="400:58"><name pos:start="400:29" pos:end="400:42"><name pos:start="400:29" pos:end="400:33">nodes</name><operator pos:start="400:34" pos:end="400:34">.</operator><name pos:start="400:35" pos:end="400:42">contains</name></name><argument_list pos:start="400:43" pos:end="400:58">(<argument pos:start="400:44" pos:end="400:57"><expr pos:start="400:44" pos:end="400:57"><call pos:start="400:44" pos:end="400:57"><name pos:start="400:44" pos:end="400:52"><name pos:start="400:44" pos:end="400:48">bank1</name><operator pos:start="400:49" pos:end="400:49">.</operator><name pos:start="400:50" pos:end="400:52">get</name></name><argument_list pos:start="400:53" pos:end="400:57">(<argument pos:start="400:54" pos:end="400:56"><expr pos:start="400:54" pos:end="400:56"><name pos:start="400:54" pos:end="400:54">i</name><operator pos:start="400:55" pos:end="400:55">+</operator><literal type="number" pos:start="400:56" pos:end="400:56">1</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="400:61" pos:end="402:25">{<block_content pos:start="401:33" pos:end="401:41">
				<continue pos:start="401:33" pos:end="401:41">continue;</continue>
			</block_content>}</block></if></if_stmt>
			<decl_stmt pos:start="403:25" pos:end="403:88"><decl pos:start="403:25" pos:end="403:87"><type pos:start="403:25" pos:end="403:30"><name pos:start="403:25" pos:end="403:30">double</name></type> <name pos:start="403:32" pos:end="403:37">theta1</name> <init pos:start="403:39" pos:end="403:87">= <expr pos:start="403:41" pos:end="403:87"><call pos:start="403:41" pos:end="403:87"><name pos:start="403:41" pos:end="403:57"><name pos:start="403:41" pos:end="403:48">Geometry</name><operator pos:start="403:49" pos:end="403:49">.</operator><name pos:start="403:50" pos:end="403:57">getAngle</name></name><argument_list pos:start="403:58" pos:end="403:87">(<argument pos:start="403:59" pos:end="403:70"><expr pos:start="403:59" pos:end="403:70"><call pos:start="403:59" pos:end="403:70"><name pos:start="403:59" pos:end="403:67"><name pos:start="403:59" pos:end="403:63">bank1</name><operator pos:start="403:64" pos:end="403:64">.</operator><name pos:start="403:65" pos:end="403:67">get</name></name><argument_list pos:start="403:68" pos:end="403:70">(<argument pos:start="403:69" pos:end="403:69"><expr pos:start="403:69" pos:end="403:69"><name pos:start="403:69" pos:end="403:69">i</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="403:73" pos:end="403:86"><expr pos:start="403:73" pos:end="403:86"><call pos:start="403:73" pos:end="403:86"><name pos:start="403:73" pos:end="403:81"><name pos:start="403:73" pos:end="403:77">bank1</name><operator pos:start="403:78" pos:end="403:78">.</operator><name pos:start="403:79" pos:end="403:81">get</name></name><argument_list pos:start="403:82" pos:end="403:86">(<argument pos:start="403:83" pos:end="403:85"><expr pos:start="403:83" pos:end="403:85"><name pos:start="403:83" pos:end="403:83">i</name><operator pos:start="403:84" pos:end="403:84">+</operator><literal type="number" pos:start="403:85" pos:end="403:85">1</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<decl_stmt pos:start="404:25" pos:end="404:90"><decl pos:start="404:25" pos:end="404:89"><type pos:start="404:25" pos:end="404:30"><name pos:start="404:25" pos:end="404:30">double</name></type> <name pos:start="404:32" pos:end="404:37">theta2</name> <init pos:start="404:39" pos:end="404:89">= <expr pos:start="404:41" pos:end="404:89"><call pos:start="404:41" pos:end="404:89"><name pos:start="404:41" pos:end="404:57"><name pos:start="404:41" pos:end="404:48">Geometry</name><operator pos:start="404:49" pos:end="404:49">.</operator><name pos:start="404:50" pos:end="404:57">getAngle</name></name><argument_list pos:start="404:58" pos:end="404:89">(<argument pos:start="404:59" pos:end="404:72"><expr pos:start="404:59" pos:end="404:72"><call pos:start="404:59" pos:end="404:72"><name pos:start="404:59" pos:end="404:67"><name pos:start="404:59" pos:end="404:63">bank1</name><operator pos:start="404:64" pos:end="404:64">.</operator><name pos:start="404:65" pos:end="404:67">get</name></name><argument_list pos:start="404:68" pos:end="404:72">(<argument pos:start="404:69" pos:end="404:71"><expr pos:start="404:69" pos:end="404:71"><name pos:start="404:69" pos:end="404:69">i</name><operator pos:start="404:70" pos:end="404:70">+</operator><literal type="number" pos:start="404:71" pos:end="404:71">1</literal></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="404:75" pos:end="404:88"><expr pos:start="404:75" pos:end="404:88"><call pos:start="404:75" pos:end="404:88"><name pos:start="404:75" pos:end="404:83"><name pos:start="404:75" pos:end="404:79">bank1</name><operator pos:start="404:80" pos:end="404:80">.</operator><name pos:start="404:81" pos:end="404:83">get</name></name><argument_list pos:start="404:84" pos:end="404:88">(<argument pos:start="404:85" pos:end="404:87"><expr pos:start="404:85" pos:end="404:87"><name pos:start="404:85" pos:end="404:85">i</name><operator pos:start="404:86" pos:end="404:86">+</operator><literal type="number" pos:start="404:87" pos:end="404:87">2</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<decl_stmt pos:start="405:25" pos:end="405:61"><decl pos:start="405:25" pos:end="405:60"><type pos:start="405:25" pos:end="405:30"><name pos:start="405:25" pos:end="405:30">double</name></type> <name pos:start="405:32" pos:end="405:36">theta</name> <init pos:start="405:38" pos:end="405:60">= <expr pos:start="405:40" pos:end="405:60"><operator pos:start="405:40" pos:end="405:40">(</operator><name pos:start="405:41" pos:end="405:46">theta1</name> <operator pos:start="405:48" pos:end="405:48">+</operator> <name pos:start="405:50" pos:end="405:55">theta2</name><operator pos:start="405:56" pos:end="405:56">)</operator> <operator pos:start="405:58" pos:end="405:58">/</operator> <literal type="number" pos:start="405:60" pos:end="405:60">2</literal></expr></init></decl>;</decl_stmt>
			<decl_stmt pos:start="406:25" pos:end="406:38"><decl pos:start="406:25" pos:end="406:37"><type pos:start="406:25" pos:end="406:30"><name pos:start="406:25" pos:end="406:30">double</name></type> <name pos:start="406:32" pos:end="406:37">thetaO</name></decl>;</decl_stmt>
			<comment type="line" pos:start="407:25" pos:end="407:75">//this was trying to fix issue with whiteField.json</comment>
			<comment type="block" pos:start="408:25" pos:end="412:27">/*if(theta1 == 0.0 &amp;&amp; theta2 == 0.0) {
				thetaO = theta;
			} else {
				thetaO = theta + Math.PI / 2;
			}*/</comment>
			<expr_stmt pos:start="413:25" pos:end="413:53"><expr pos:start="413:25" pos:end="413:52"><name pos:start="413:25" pos:end="413:30">thetaO</name> <operator pos:start="413:32" pos:end="413:32">=</operator> <name pos:start="413:34" pos:end="413:38">theta</name> <operator pos:start="413:40" pos:end="413:40">+</operator> <name pos:start="413:42" pos:end="413:48"><name pos:start="413:42" pos:end="413:45">Math</name><operator pos:start="413:46" pos:end="413:46">.</operator><name pos:start="413:47" pos:end="413:48">PI</name></name> <operator pos:start="413:50" pos:end="413:50">/</operator> <literal type="number" pos:start="413:52" pos:end="413:52">2</literal></expr>;</expr_stmt>
			<expr_stmt pos:start="414:25" pos:end="414:71"><expr pos:start="414:25" pos:end="414:70"><name pos:start="414:25" pos:end="414:26">dx</name> <operator pos:start="414:28" pos:end="414:28">=</operator> <operator pos:start="414:30" pos:end="414:30">(</operator><name pos:start="414:31" pos:end="414:46">APERATURE_HEIGHT</name> <operator pos:start="414:48" pos:end="414:48">/</operator> <literal type="number" pos:start="414:50" pos:end="414:50">2</literal><operator pos:start="414:51" pos:end="414:51">)</operator> <operator pos:start="414:53" pos:end="414:53">*</operator> <call pos:start="414:55" pos:end="414:70"><name pos:start="414:55" pos:end="414:62"><name pos:start="414:55" pos:end="414:58">Math</name><operator pos:start="414:59" pos:end="414:59">.</operator><name pos:start="414:60" pos:end="414:62">cos</name></name><argument_list pos:start="414:63" pos:end="414:70">(<argument pos:start="414:64" pos:end="414:69"><expr pos:start="414:64" pos:end="414:69"><name pos:start="414:64" pos:end="414:69">thetaO</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt pos:start="415:25" pos:end="415:71"><expr pos:start="415:25" pos:end="415:70"><name pos:start="415:25" pos:end="415:26">dy</name> <operator pos:start="415:28" pos:end="415:28">=</operator> <operator pos:start="415:30" pos:end="415:30">(</operator><name pos:start="415:31" pos:end="415:46">APERATURE_HEIGHT</name> <operator pos:start="415:48" pos:end="415:48">/</operator> <literal type="number" pos:start="415:50" pos:end="415:50">2</literal><operator pos:start="415:51" pos:end="415:51">)</operator> <operator pos:start="415:53" pos:end="415:53">*</operator> <call pos:start="415:55" pos:end="415:70"><name pos:start="415:55" pos:end="415:62"><name pos:start="415:55" pos:end="415:58">Math</name><operator pos:start="415:59" pos:end="415:59">.</operator><name pos:start="415:60" pos:end="415:62">sin</name></name><argument_list pos:start="415:63" pos:end="415:70">(<argument pos:start="415:64" pos:end="415:69"><expr pos:start="415:64" pos:end="415:69"><name pos:start="415:64" pos:end="415:69">thetaO</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt pos:start="416:25" pos:end="416:56"><expr pos:start="416:25" pos:end="416:55"><name pos:start="416:25" pos:end="416:28">newX</name> <operator pos:start="416:30" pos:end="416:30">=</operator> <call pos:start="416:32" pos:end="416:45"><name pos:start="416:32" pos:end="416:40"><name pos:start="416:32" pos:end="416:36">bank1</name><operator pos:start="416:37" pos:end="416:37">.</operator><name pos:start="416:38" pos:end="416:40">get</name></name><argument_list pos:start="416:41" pos:end="416:45">(<argument pos:start="416:42" pos:end="416:44"><expr pos:start="416:42" pos:end="416:44"><name pos:start="416:42" pos:end="416:42">i</name><operator pos:start="416:43" pos:end="416:43">+</operator><literal type="number" pos:start="416:44" pos:end="416:44">1</literal></expr></argument>)</argument_list></call><operator pos:start="416:46" pos:end="416:46">.</operator><call pos:start="416:47" pos:end="416:52"><name pos:start="416:47" pos:end="416:50">getX</name><argument_list pos:start="416:51" pos:end="416:52">()</argument_list></call><operator pos:start="416:53" pos:end="416:53">+</operator><name pos:start="416:54" pos:end="416:55">dx</name></expr>;</expr_stmt>
			<expr_stmt pos:start="417:25" pos:end="417:56"><expr pos:start="417:25" pos:end="417:55"><name pos:start="417:25" pos:end="417:28">newY</name> <operator pos:start="417:30" pos:end="417:30">=</operator> <call pos:start="417:32" pos:end="417:45"><name pos:start="417:32" pos:end="417:40"><name pos:start="417:32" pos:end="417:36">bank1</name><operator pos:start="417:37" pos:end="417:37">.</operator><name pos:start="417:38" pos:end="417:40">get</name></name><argument_list pos:start="417:41" pos:end="417:45">(<argument pos:start="417:42" pos:end="417:44"><expr pos:start="417:42" pos:end="417:44"><name pos:start="417:42" pos:end="417:42">i</name><operator pos:start="417:43" pos:end="417:43">+</operator><literal type="number" pos:start="417:44" pos:end="417:44">1</literal></expr></argument>)</argument_list></call><operator pos:start="417:46" pos:end="417:46">.</operator><call pos:start="417:47" pos:end="417:52"><name pos:start="417:47" pos:end="417:50">getY</name><argument_list pos:start="417:51" pos:end="417:52">()</argument_list></call><operator pos:start="417:53" pos:end="417:53">+</operator><name pos:start="417:54" pos:end="417:55">dy</name></expr>;</expr_stmt>
			<decl_stmt pos:start="418:25" pos:end="418:82"><decl pos:start="418:25" pos:end="418:81"><type pos:start="418:25" pos:end="418:38"><name pos:start="418:25" pos:end="418:38"><name pos:start="418:25" pos:end="418:31">Point2D</name><operator pos:start="418:32" pos:end="418:32">.</operator><name pos:start="418:33" pos:end="418:38">Double</name></name></type> <name pos:start="418:40" pos:end="418:47">newPoint</name>  <init pos:start="418:50" pos:end="418:81">= <expr pos:start="418:52" pos:end="418:81"><operator pos:start="418:52" pos:end="418:54">new</operator> <call pos:start="418:56" pos:end="418:81"><name pos:start="418:56" pos:end="418:69"><name pos:start="418:56" pos:end="418:62">Point2D</name><operator pos:start="418:63" pos:end="418:63">.</operator><name pos:start="418:64" pos:end="418:69">Double</name></name><argument_list pos:start="418:70" pos:end="418:81">(<argument pos:start="418:71" pos:end="418:74"><expr pos:start="418:71" pos:end="418:74"><name pos:start="418:71" pos:end="418:74">newX</name></expr></argument>, <argument pos:start="418:77" pos:end="418:80"><expr pos:start="418:77" pos:end="418:80"><name pos:start="418:77" pos:end="418:80">newY</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<if_stmt pos:start="419:25" pos:end="421:25"><if pos:start="419:25" pos:end="421:25">if<condition pos:start="419:27" pos:end="419:60">(<expr pos:start="419:28" pos:end="419:59"><operator pos:start="419:28" pos:end="419:28">!</operator><call pos:start="419:29" pos:end="419:59"><name pos:start="419:29" pos:end="419:49"><name pos:start="419:29" pos:end="419:40">riverSegment</name><operator pos:start="419:41" pos:end="419:41">.</operator><name pos:start="419:42" pos:end="419:49">contains</name></name><argument_list pos:start="419:50" pos:end="419:59">(<argument pos:start="419:51" pos:end="419:58"><expr pos:start="419:51" pos:end="419:58"><name pos:start="419:51" pos:end="419:58">newPoint</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="419:62" pos:end="421:25">{<block_content pos:start="420:33" pos:end="420:105">
				<expr_stmt pos:start="420:33" pos:end="420:105"><expr pos:start="420:33" pos:end="420:104"><call pos:start="420:33" pos:end="420:104"><name pos:start="420:33" pos:end="420:52"><name pos:start="420:33" pos:end="420:40">newPoint</name><operator pos:start="420:41" pos:end="420:41">.</operator><name pos:start="420:42" pos:end="420:52">setLocation</name></name><argument_list pos:start="420:53" pos:end="420:104">(<argument pos:start="420:54" pos:end="420:77"><expr pos:start="420:54" pos:end="420:77"><call pos:start="420:54" pos:end="420:67"><name pos:start="420:54" pos:end="420:62"><name pos:start="420:54" pos:end="420:58">bank1</name><operator pos:start="420:59" pos:end="420:59">.</operator><name pos:start="420:60" pos:end="420:62">get</name></name><argument_list pos:start="420:63" pos:end="420:67">(<argument pos:start="420:64" pos:end="420:66"><expr pos:start="420:64" pos:end="420:66"><name pos:start="420:64" pos:end="420:64">i</name><operator pos:start="420:65" pos:end="420:65">+</operator><literal type="number" pos:start="420:66" pos:end="420:66">1</literal></expr></argument>)</argument_list></call><operator pos:start="420:68" pos:end="420:68">.</operator><call pos:start="420:69" pos:end="420:74"><name pos:start="420:69" pos:end="420:72">getX</name><argument_list pos:start="420:73" pos:end="420:74">()</argument_list></call><operator pos:start="420:75" pos:end="420:75">-</operator><name pos:start="420:76" pos:end="420:77">dx</name></expr></argument>, <argument pos:start="420:80" pos:end="420:103"><expr pos:start="420:80" pos:end="420:103"><call pos:start="420:80" pos:end="420:93"><name pos:start="420:80" pos:end="420:88"><name pos:start="420:80" pos:end="420:84">bank1</name><operator pos:start="420:85" pos:end="420:85">.</operator><name pos:start="420:86" pos:end="420:88">get</name></name><argument_list pos:start="420:89" pos:end="420:93">(<argument pos:start="420:90" pos:end="420:92"><expr pos:start="420:90" pos:end="420:92"><name pos:start="420:90" pos:end="420:90">i</name><operator pos:start="420:91" pos:end="420:91">+</operator><literal type="number" pos:start="420:92" pos:end="420:92">1</literal></expr></argument>)</argument_list></call><operator pos:start="420:94" pos:end="420:94">.</operator><call pos:start="420:95" pos:end="420:100"><name pos:start="420:95" pos:end="420:98">getY</name><argument_list pos:start="420:99" pos:end="420:100">()</argument_list></call><operator pos:start="420:101" pos:end="420:101">-</operator><name pos:start="420:102" pos:end="420:103">dy</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			</block_content>}</block></if></if_stmt>
			<if_stmt pos:start="422:25" pos:end="429:25"><if pos:start="422:25" pos:end="429:25">if<condition pos:start="422:27" pos:end="422:60">(<expr pos:start="422:28" pos:end="422:59"><operator pos:start="422:28" pos:end="422:28">!</operator><call pos:start="422:29" pos:end="422:59"><name pos:start="422:29" pos:end="422:49"><name pos:start="422:29" pos:end="422:40">riverSegment</name><operator pos:start="422:41" pos:end="422:41">.</operator><name pos:start="422:42" pos:end="422:49">contains</name></name><argument_list pos:start="422:50" pos:end="422:59">(<argument pos:start="422:51" pos:end="422:58"><expr pos:start="422:51" pos:end="422:58"><name pos:start="422:51" pos:end="422:58">newPoint</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="422:62" pos:end="429:25">{<block_content pos:start="423:33" pos:end="428:65">
				<expr_stmt pos:start="423:33" pos:end="423:61"><expr pos:start="423:33" pos:end="423:60"><name pos:start="423:33" pos:end="423:38">thetaO</name> <operator pos:start="423:40" pos:end="423:40">=</operator> <name pos:start="423:42" pos:end="423:46">theta</name> <operator pos:start="423:48" pos:end="423:48">-</operator> <name pos:start="423:50" pos:end="423:56"><name pos:start="423:50" pos:end="423:53">Math</name><operator pos:start="423:54" pos:end="423:54">.</operator><name pos:start="423:55" pos:end="423:56">PI</name></name> <operator pos:start="423:58" pos:end="423:58">/</operator> <literal type="number" pos:start="423:60" pos:end="423:60">2</literal></expr>;</expr_stmt>
				<expr_stmt pos:start="424:33" pos:end="424:79"><expr pos:start="424:33" pos:end="424:78"><name pos:start="424:33" pos:end="424:34">dx</name> <operator pos:start="424:36" pos:end="424:36">=</operator> <operator pos:start="424:38" pos:end="424:38">(</operator><name pos:start="424:39" pos:end="424:54">APERATURE_HEIGHT</name> <operator pos:start="424:56" pos:end="424:56">/</operator> <literal type="number" pos:start="424:58" pos:end="424:58">2</literal><operator pos:start="424:59" pos:end="424:59">)</operator> <operator pos:start="424:61" pos:end="424:61">*</operator> <call pos:start="424:63" pos:end="424:78"><name pos:start="424:63" pos:end="424:70"><name pos:start="424:63" pos:end="424:66">Math</name><operator pos:start="424:67" pos:end="424:67">.</operator><name pos:start="424:68" pos:end="424:70">cos</name></name><argument_list pos:start="424:71" pos:end="424:78">(<argument pos:start="424:72" pos:end="424:77"><expr pos:start="424:72" pos:end="424:77"><name pos:start="424:72" pos:end="424:77">thetaO</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<expr_stmt pos:start="425:33" pos:end="425:79"><expr pos:start="425:33" pos:end="425:78"><name pos:start="425:33" pos:end="425:34">dy</name> <operator pos:start="425:36" pos:end="425:36">=</operator> <operator pos:start="425:38" pos:end="425:38">(</operator><name pos:start="425:39" pos:end="425:54">APERATURE_HEIGHT</name> <operator pos:start="425:56" pos:end="425:56">/</operator> <literal type="number" pos:start="425:58" pos:end="425:58">2</literal><operator pos:start="425:59" pos:end="425:59">)</operator> <operator pos:start="425:61" pos:end="425:61">*</operator> <call pos:start="425:63" pos:end="425:78"><name pos:start="425:63" pos:end="425:70"><name pos:start="425:63" pos:end="425:66">Math</name><operator pos:start="425:67" pos:end="425:67">.</operator><name pos:start="425:68" pos:end="425:70">sin</name></name><argument_list pos:start="425:71" pos:end="425:78">(<argument pos:start="425:72" pos:end="425:77"><expr pos:start="425:72" pos:end="425:77"><name pos:start="425:72" pos:end="425:77">thetaO</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<expr_stmt pos:start="426:33" pos:end="426:64"><expr pos:start="426:33" pos:end="426:63"><name pos:start="426:33" pos:end="426:36">newX</name> <operator pos:start="426:38" pos:end="426:38">=</operator> <call pos:start="426:40" pos:end="426:53"><name pos:start="426:40" pos:end="426:48"><name pos:start="426:40" pos:end="426:44">bank1</name><operator pos:start="426:45" pos:end="426:45">.</operator><name pos:start="426:46" pos:end="426:48">get</name></name><argument_list pos:start="426:49" pos:end="426:53">(<argument pos:start="426:50" pos:end="426:52"><expr pos:start="426:50" pos:end="426:52"><name pos:start="426:50" pos:end="426:50">i</name><operator pos:start="426:51" pos:end="426:51">+</operator><literal type="number" pos:start="426:52" pos:end="426:52">1</literal></expr></argument>)</argument_list></call><operator pos:start="426:54" pos:end="426:54">.</operator><call pos:start="426:55" pos:end="426:60"><name pos:start="426:55" pos:end="426:58">getX</name><argument_list pos:start="426:59" pos:end="426:60">()</argument_list></call><operator pos:start="426:61" pos:end="426:61">+</operator><name pos:start="426:62" pos:end="426:63">dx</name></expr>;</expr_stmt>
				<expr_stmt pos:start="427:33" pos:end="427:64"><expr pos:start="427:33" pos:end="427:63"><name pos:start="427:33" pos:end="427:36">newY</name> <operator pos:start="427:38" pos:end="427:38">=</operator> <call pos:start="427:40" pos:end="427:53"><name pos:start="427:40" pos:end="427:48"><name pos:start="427:40" pos:end="427:44">bank1</name><operator pos:start="427:45" pos:end="427:45">.</operator><name pos:start="427:46" pos:end="427:48">get</name></name><argument_list pos:start="427:49" pos:end="427:53">(<argument pos:start="427:50" pos:end="427:52"><expr pos:start="427:50" pos:end="427:52"><name pos:start="427:50" pos:end="427:50">i</name><operator pos:start="427:51" pos:end="427:51">+</operator><literal type="number" pos:start="427:52" pos:end="427:52">1</literal></expr></argument>)</argument_list></call><operator pos:start="427:54" pos:end="427:54">.</operator><call pos:start="427:55" pos:end="427:60"><name pos:start="427:55" pos:end="427:58">getY</name><argument_list pos:start="427:59" pos:end="427:60">()</argument_list></call><operator pos:start="427:61" pos:end="427:61">+</operator><name pos:start="427:62" pos:end="427:63">dy</name></expr>;</expr_stmt>
				<expr_stmt pos:start="428:33" pos:end="428:65"><expr pos:start="428:33" pos:end="428:64"><call pos:start="428:33" pos:end="428:64"><name pos:start="428:33" pos:end="428:52"><name pos:start="428:33" pos:end="428:40">newPoint</name><operator pos:start="428:41" pos:end="428:41">.</operator><name pos:start="428:42" pos:end="428:52">setLocation</name></name><argument_list pos:start="428:53" pos:end="428:64">(<argument pos:start="428:54" pos:end="428:57"><expr pos:start="428:54" pos:end="428:57"><name pos:start="428:54" pos:end="428:57">newX</name></expr></argument>, <argument pos:start="428:60" pos:end="428:63"><expr pos:start="428:60" pos:end="428:63"><name pos:start="428:60" pos:end="428:63">newY</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			</block_content>}</block></if></if_stmt>
			<if_stmt pos:start="430:25" pos:end="432:25"><if pos:start="430:25" pos:end="432:25">if<condition pos:start="430:27" pos:end="430:60">(<expr pos:start="430:28" pos:end="430:59"><operator pos:start="430:28" pos:end="430:28">!</operator><call pos:start="430:29" pos:end="430:59"><name pos:start="430:29" pos:end="430:49"><name pos:start="430:29" pos:end="430:40">riverSegment</name><operator pos:start="430:41" pos:end="430:41">.</operator><name pos:start="430:42" pos:end="430:49">contains</name></name><argument_list pos:start="430:50" pos:end="430:59">(<argument pos:start="430:51" pos:end="430:58"><expr pos:start="430:51" pos:end="430:58"><name pos:start="430:51" pos:end="430:58">newPoint</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="430:62" pos:end="432:25">{<block_content pos:start="431:33" pos:end="431:105">
				<expr_stmt pos:start="431:33" pos:end="431:105"><expr pos:start="431:33" pos:end="431:104"><call pos:start="431:33" pos:end="431:104"><name pos:start="431:33" pos:end="431:52"><name pos:start="431:33" pos:end="431:40">newPoint</name><operator pos:start="431:41" pos:end="431:41">.</operator><name pos:start="431:42" pos:end="431:52">setLocation</name></name><argument_list pos:start="431:53" pos:end="431:104">(<argument pos:start="431:54" pos:end="431:77"><expr pos:start="431:54" pos:end="431:77"><call pos:start="431:54" pos:end="431:67"><name pos:start="431:54" pos:end="431:62"><name pos:start="431:54" pos:end="431:58">bank1</name><operator pos:start="431:59" pos:end="431:59">.</operator><name pos:start="431:60" pos:end="431:62">get</name></name><argument_list pos:start="431:63" pos:end="431:67">(<argument pos:start="431:64" pos:end="431:66"><expr pos:start="431:64" pos:end="431:66"><name pos:start="431:64" pos:end="431:64">i</name><operator pos:start="431:65" pos:end="431:65">+</operator><literal type="number" pos:start="431:66" pos:end="431:66">1</literal></expr></argument>)</argument_list></call><operator pos:start="431:68" pos:end="431:68">.</operator><call pos:start="431:69" pos:end="431:74"><name pos:start="431:69" pos:end="431:72">getX</name><argument_list pos:start="431:73" pos:end="431:74">()</argument_list></call><operator pos:start="431:75" pos:end="431:75">-</operator><name pos:start="431:76" pos:end="431:77">dx</name></expr></argument>, <argument pos:start="431:80" pos:end="431:103"><expr pos:start="431:80" pos:end="431:103"><call pos:start="431:80" pos:end="431:93"><name pos:start="431:80" pos:end="431:88"><name pos:start="431:80" pos:end="431:84">bank1</name><operator pos:start="431:85" pos:end="431:85">.</operator><name pos:start="431:86" pos:end="431:88">get</name></name><argument_list pos:start="431:89" pos:end="431:93">(<argument pos:start="431:90" pos:end="431:92"><expr pos:start="431:90" pos:end="431:92"><name pos:start="431:90" pos:end="431:90">i</name><operator pos:start="431:91" pos:end="431:91">+</operator><literal type="number" pos:start="431:92" pos:end="431:92">1</literal></expr></argument>)</argument_list></call><operator pos:start="431:94" pos:end="431:94">.</operator><call pos:start="431:95" pos:end="431:100"><name pos:start="431:95" pos:end="431:98">getY</name><argument_list pos:start="431:99" pos:end="431:100">()</argument_list></call><operator pos:start="431:101" pos:end="431:101">-</operator><name pos:start="431:102" pos:end="431:103">dy</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			</block_content>}</block></if></if_stmt>
			<if_stmt pos:start="433:25" pos:end="435:25"><if pos:start="433:25" pos:end="435:25">if<condition pos:start="433:27" pos:end="433:59">(<expr pos:start="433:28" pos:end="433:58"><call pos:start="433:28" pos:end="433:58"><name pos:start="433:28" pos:end="433:48"><name pos:start="433:28" pos:end="433:39">riverSegment</name><operator pos:start="433:40" pos:end="433:40">.</operator><name pos:start="433:41" pos:end="433:48">contains</name></name><argument_list pos:start="433:49" pos:end="433:58">(<argument pos:start="433:50" pos:end="433:57"><expr pos:start="433:50" pos:end="433:57"><name pos:start="433:50" pos:end="433:57">newPoint</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="433:61" pos:end="435:25">{<block_content pos:start="434:33" pos:end="434:73">
				<expr_stmt pos:start="434:33" pos:end="434:73"><expr pos:start="434:33" pos:end="434:72"><call pos:start="434:33" pos:end="434:72"><name pos:start="434:33" pos:end="434:62"><name pos:start="434:33" pos:end="434:47">newSourcePoints</name><operator pos:start="434:48" pos:end="434:48">.</operator><name pos:start="434:49" pos:end="434:62">addSourcePoint</name></name><argument_list pos:start="434:63" pos:end="434:72">(<argument pos:start="434:64" pos:end="434:71"><expr pos:start="434:64" pos:end="434:71"><name pos:start="434:64" pos:end="434:71">newPoint</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			</block_content>}</block></if></if_stmt> 
		</block_content>}</block></for>
		<expr_stmt pos:start="437:17" pos:end="437:145"><expr pos:start="437:17" pos:end="437:144"><call pos:start="437:17" pos:end="437:144"><name pos:start="437:17" pos:end="437:39">sourcePointsStartAndEnd</name><argument_list pos:start="437:40" pos:end="437:144">(<argument pos:start="437:41" pos:end="437:65"><expr pos:start="437:41" pos:end="437:65"><call pos:start="437:41" pos:end="437:65"><name pos:start="437:41" pos:end="437:49"><name pos:start="437:41" pos:end="437:45">bank1</name><operator pos:start="437:46" pos:end="437:46">.</operator><name pos:start="437:47" pos:end="437:49">get</name></name><argument_list pos:start="437:50" pos:end="437:65">(<argument pos:start="437:51" pos:end="437:64"><expr pos:start="437:51" pos:end="437:64"><call pos:start="437:51" pos:end="437:62"><name pos:start="437:51" pos:end="437:60"><name pos:start="437:51" pos:end="437:55">bank1</name><operator pos:start="437:56" pos:end="437:56">.</operator><name pos:start="437:57" pos:end="437:60">size</name></name><argument_list pos:start="437:61" pos:end="437:62">()</argument_list></call><operator pos:start="437:63" pos:end="437:63">-</operator><literal type="number" pos:start="437:64" pos:end="437:64">1</literal></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="437:68" pos:end="437:92"><expr pos:start="437:68" pos:end="437:92"><call pos:start="437:68" pos:end="437:92"><name pos:start="437:68" pos:end="437:76"><name pos:start="437:68" pos:end="437:72">bank2</name><operator pos:start="437:73" pos:end="437:73">.</operator><name pos:start="437:74" pos:end="437:76">get</name></name><argument_list pos:start="437:77" pos:end="437:92">(<argument pos:start="437:78" pos:end="437:91"><expr pos:start="437:78" pos:end="437:91"><call pos:start="437:78" pos:end="437:89"><name pos:start="437:78" pos:end="437:87"><name pos:start="437:78" pos:end="437:82">bank2</name><operator pos:start="437:83" pos:end="437:83">.</operator><name pos:start="437:84" pos:end="437:87">size</name></name><argument_list pos:start="437:88" pos:end="437:89">()</argument_list></call><operator pos:start="437:90" pos:end="437:90">-</operator><literal type="number" pos:start="437:91" pos:end="437:91">1</literal></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="437:95" pos:end="437:109"><expr pos:start="437:95" pos:end="437:109"><name pos:start="437:95" pos:end="437:109">newSourcePoints</name></expr></argument>, <argument pos:start="437:112" pos:end="437:127"><expr pos:start="437:112" pos:end="437:127"><name pos:start="437:112" pos:end="437:127">APERATURE_HEIGHT</name></expr></argument>, <argument pos:start="437:130" pos:end="437:143"><expr pos:start="437:130" pos:end="437:143"><name pos:start="437:130" pos:end="437:143">OVERLAP_FACTOR</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<return pos:start="438:17" pos:end="438:39">return <expr pos:start="438:24" pos:end="438:38"><name pos:start="438:24" pos:end="438:38">newSourcePoints</name></expr>;</return>
	</block_content>}</block></function>
    
    
    <comment type="block" format="javadoc" pos:start="442:5" pos:end="448:7">/**
     * This function creates route primitives parallel to the riverbanks inside the river segment.
     * @param APERATURE_WIDTH
     * @param OVERLAP_FACTOR
     * @param bankList
     * @return RoutePrimitive objects for both riverbanks
     */</comment>
    <function pos:start="449:5" pos:end="475:5"><type pos:start="449:5" pos:end="449:36"><specifier pos:start="449:5" pos:end="449:10">public</specifier> <specifier pos:start="449:12" pos:end="449:17">static</specifier> <name pos:start="449:19" pos:end="449:36"><name pos:start="449:19" pos:end="449:22">List</name><argument_list type="generic" pos:start="449:23" pos:end="449:36">&lt;<argument pos:start="449:24" pos:end="449:35"><name pos:start="449:24" pos:end="449:35">SourcePoints</name></argument>&gt;</argument_list></name></type> <name pos:start="449:38" pos:end="449:57">generateSourcePoints</name><parameter_list pos:start="449:58" pos:end="449:180">(<parameter pos:start="449:59" pos:end="449:80"><decl pos:start="449:59" pos:end="449:80"><type pos:start="449:59" pos:end="449:80"><name pos:start="449:59" pos:end="449:64">double</name></type> <name pos:start="449:66" pos:end="449:80">APERATURE_WIDTH</name></decl></parameter>, <parameter pos:start="449:83" pos:end="449:105"><decl pos:start="449:83" pos:end="449:105"><type pos:start="449:83" pos:end="449:105"><name pos:start="449:83" pos:end="449:88">double</name></type> <name pos:start="449:90" pos:end="449:105">APERATURE_HEIGHT</name></decl></parameter>, <parameter pos:start="449:108" pos:end="449:128"><decl pos:start="449:108" pos:end="449:128"><type pos:start="449:108" pos:end="449:128"><name pos:start="449:108" pos:end="449:113">double</name></type> <name pos:start="449:115" pos:end="449:128">OVERLAP_FACTOR</name></decl></parameter>, <parameter pos:start="449:131" pos:end="449:154"><decl pos:start="449:131" pos:end="449:154"><type pos:start="449:131" pos:end="449:154"><name pos:start="449:131" pos:end="449:145"><name pos:start="449:131" pos:end="449:134">List</name><argument_list type="generic" pos:start="449:135" pos:end="449:145">&lt;<argument pos:start="449:136" pos:end="449:144"><name pos:start="449:136" pos:end="449:144">RiverBank</name></argument>&gt;</argument_list></name></type> <name pos:start="449:147" pos:end="449:154">bankList</name></decl></parameter>, <parameter pos:start="449:157" pos:end="449:179"><decl pos:start="449:157" pos:end="449:179"><type pos:start="449:157" pos:end="449:179"><name pos:start="449:157" pos:end="449:163">boolean</name></type> <name pos:start="449:165" pos:end="449:179">innerCrissCross</name></decl></parameter>)</parameter_list><block pos:start="449:181" pos:end="475:5">{<block_content pos:start="450:9" pos:end="474:40">
    	<decl_stmt pos:start="450:9" pos:end="450:64"><decl pos:start="450:9" pos:end="450:63"><type pos:start="450:9" pos:end="450:26"><name pos:start="450:9" pos:end="450:26"><name pos:start="450:9" pos:end="450:12">List</name><argument_list type="generic" pos:start="450:13" pos:end="450:26">&lt;<argument pos:start="450:14" pos:end="450:25"><name pos:start="450:14" pos:end="450:25">SourcePoints</name></argument>&gt;</argument_list></name></type> <name pos:start="450:28" pos:end="450:43">sourcePointsList</name> <init pos:start="450:45" pos:end="450:63">= <expr pos:start="450:47" pos:end="450:63"><operator pos:start="450:47" pos:end="450:49">new</operator> <call pos:start="450:51" pos:end="450:63"><name pos:start="450:51" pos:end="450:61"><name pos:start="450:51" pos:end="450:59">ArrayList</name><argument_list type="generic" pos:start="450:60" pos:end="450:61">&lt;&gt;</argument_list></name><argument_list pos:start="450:62" pos:end="450:63">()</argument_list></call></expr></init></decl>;</decl_stmt>
    	<expr_stmt pos:start="451:9" pos:end="451:49"><expr pos:start="451:9" pos:end="451:48"><call pos:start="451:9" pos:end="451:48"><name pos:start="451:9" pos:end="451:28"><name pos:start="451:9" pos:end="451:24">sourcePointsList</name><operator pos:start="451:25" pos:end="451:25">.</operator><name pos:start="451:26" pos:end="451:28">add</name></name><argument_list pos:start="451:29" pos:end="451:48">(<argument pos:start="451:30" pos:end="451:47"><expr pos:start="451:30" pos:end="451:47"><operator pos:start="451:30" pos:end="451:32">new</operator> <call pos:start="451:34" pos:end="451:47"><name pos:start="451:34" pos:end="451:45">SourcePoints</name><argument_list pos:start="451:46" pos:end="451:47">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    	<expr_stmt pos:start="452:9" pos:end="452:49"><expr pos:start="452:9" pos:end="452:48"><call pos:start="452:9" pos:end="452:48"><name pos:start="452:9" pos:end="452:28"><name pos:start="452:9" pos:end="452:24">sourcePointsList</name><operator pos:start="452:25" pos:end="452:25">.</operator><name pos:start="452:26" pos:end="452:28">add</name></name><argument_list pos:start="452:29" pos:end="452:48">(<argument pos:start="452:30" pos:end="452:47"><expr pos:start="452:30" pos:end="452:47"><operator pos:start="452:30" pos:end="452:32">new</operator> <call pos:start="452:34" pos:end="452:47"><name pos:start="452:34" pos:end="452:45">SourcePoints</name><argument_list pos:start="452:46" pos:end="452:47">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    	<decl_stmt pos:start="453:9" pos:end="453:59"><decl pos:start="453:9" pos:end="453:58"><type pos:start="453:9" pos:end="453:28"><name pos:start="453:9" pos:end="453:28"><name pos:start="453:9" pos:end="453:12">List</name><argument_list type="generic" pos:start="453:13" pos:end="453:28">&lt;<argument pos:start="453:14" pos:end="453:27"><name pos:start="453:14" pos:end="453:27"><name pos:start="453:14" pos:end="453:20">Point2D</name><operator pos:start="453:21" pos:end="453:21">.</operator><name pos:start="453:22" pos:end="453:27">Double</name></name></argument>&gt;</argument_list></name></type> <name pos:start="453:30" pos:end="453:38">newPoints</name> <init pos:start="453:40" pos:end="453:58">= <expr pos:start="453:42" pos:end="453:58"><operator pos:start="453:42" pos:end="453:44">new</operator> <call pos:start="453:46" pos:end="453:58"><name pos:start="453:46" pos:end="453:56"><name pos:start="453:46" pos:end="453:54">ArrayList</name><argument_list type="generic" pos:start="453:55" pos:end="453:56">&lt;&gt;</argument_list></name><argument_list pos:start="453:57" pos:end="453:58">()</argument_list></call></expr></init></decl>;</decl_stmt>
		<decl_stmt pos:start="454:17" pos:end="454:68"><decl pos:start="454:17" pos:end="454:67"><type pos:start="454:17" pos:end="454:36"><name pos:start="454:17" pos:end="454:36"><name pos:start="454:17" pos:end="454:20">List</name><argument_list type="generic" pos:start="454:21" pos:end="454:36">&lt;<argument pos:start="454:22" pos:end="454:35"><name pos:start="454:22" pos:end="454:35"><name pos:start="454:22" pos:end="454:28">Point2D</name><operator pos:start="454:29" pos:end="454:29">.</operator><name pos:start="454:30" pos:end="454:35">Double</name></name></argument>&gt;</argument_list></name></type> <name pos:start="454:38" pos:end="454:47">newPoints1</name> <init pos:start="454:49" pos:end="454:67">= <expr pos:start="454:51" pos:end="454:67"><operator pos:start="454:51" pos:end="454:53">new</operator> <call pos:start="454:55" pos:end="454:67"><name pos:start="454:55" pos:end="454:65"><name pos:start="454:55" pos:end="454:63">ArrayList</name><argument_list type="generic" pos:start="454:64" pos:end="454:65">&lt;&gt;</argument_list></name><argument_list pos:start="454:66" pos:end="454:67">()</argument_list></call></expr></init></decl>;</decl_stmt>
		<decl_stmt pos:start="455:17" pos:end="455:32"><decl pos:start="455:17" pos:end="455:31"><type pos:start="455:17" pos:end="455:25"><name pos:start="455:17" pos:end="455:25">RiverBank</name></type> <name pos:start="455:27" pos:end="455:31">bank1</name></decl>;</decl_stmt>
		<decl_stmt pos:start="456:17" pos:end="456:32"><decl pos:start="456:17" pos:end="456:31"><type pos:start="456:17" pos:end="456:25"><name pos:start="456:17" pos:end="456:25">RiverBank</name></type> <name pos:start="456:27" pos:end="456:31">bank2</name></decl>;</decl_stmt>
		<decl_stmt pos:start="457:17" pos:end="457:87"><decl pos:start="457:17" pos:end="457:86"><type pos:start="457:17" pos:end="457:29"><name pos:start="457:17" pos:end="457:29"><name pos:start="457:17" pos:end="457:22">Path2D</name><operator pos:start="457:23" pos:end="457:23">.</operator><name pos:start="457:24" pos:end="457:29">Double</name></name></type> <name pos:start="457:31" pos:end="457:42">riverSegment</name> <init pos:start="457:44" pos:end="457:86">= <expr pos:start="457:46" pos:end="457:86"><call pos:start="457:46" pos:end="457:86"><name pos:start="457:46" pos:end="457:76"><name pos:start="457:46" pos:end="457:54">Utilities</name><operator pos:start="457:55" pos:end="457:55">.</operator><name pos:start="457:56" pos:end="457:76">makeTotalRiverSegment</name></name><argument_list pos:start="457:77" pos:end="457:86">(<argument pos:start="457:78" pos:end="457:85"><expr pos:start="457:78" pos:end="457:85"><name pos:start="457:78" pos:end="457:85">bankList</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<decl_stmt pos:start="458:17" pos:end="458:65"><decl pos:start="458:17" pos:end="458:64"><type pos:start="458:17" pos:end="458:31"><name pos:start="458:17" pos:end="458:31">RiverSubsegment</name></type> <name pos:start="458:33" pos:end="458:40">newRiver</name> <init pos:start="458:42" pos:end="458:64">= <expr pos:start="458:44" pos:end="458:64"><operator pos:start="458:44" pos:end="458:46">new</operator> <call pos:start="458:48" pos:end="458:64"><name pos:start="458:48" pos:end="458:62">RiverSubsegment</name><argument_list pos:start="458:63" pos:end="458:64">()</argument_list></call></expr></init></decl>;</decl_stmt>

		<expr_stmt pos:start="460:17" pos:end="460:40"><expr pos:start="460:17" pos:end="460:39"><name pos:start="460:17" pos:end="460:21">bank1</name> <operator pos:start="460:23" pos:end="460:23">=</operator> <call pos:start="460:25" pos:end="460:39"><name pos:start="460:25" pos:end="460:36"><name pos:start="460:25" pos:end="460:32">bankList</name><operator pos:start="460:33" pos:end="460:33">.</operator><name pos:start="460:34" pos:end="460:36">get</name></name><argument_list pos:start="460:37" pos:end="460:39">(<argument pos:start="460:38" pos:end="460:38"><expr pos:start="460:38" pos:end="460:38"><literal type="number" pos:start="460:38" pos:end="460:38">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt pos:start="461:17" pos:end="461:40"><expr pos:start="461:17" pos:end="461:39"><name pos:start="461:17" pos:end="461:21">bank2</name> <operator pos:start="461:23" pos:end="461:23">=</operator> <call pos:start="461:25" pos:end="461:39"><name pos:start="461:25" pos:end="461:36"><name pos:start="461:25" pos:end="461:32">bankList</name><operator pos:start="461:33" pos:end="461:33">.</operator><name pos:start="461:34" pos:end="461:36">get</name></name><argument_list pos:start="461:37" pos:end="461:39">(<argument pos:start="461:38" pos:end="461:38"><expr pos:start="461:38" pos:end="461:38"><literal type="number" pos:start="461:38" pos:end="461:38">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt pos:start="462:17" pos:end="462:109"><expr pos:start="462:17" pos:end="462:108"><name pos:start="462:17" pos:end="462:21">bank1</name> <operator pos:start="462:23" pos:end="462:23">=</operator> <call pos:start="462:25" pos:end="462:108"><name pos:start="462:25" pos:end="462:43">findRiverBankOffset</name><argument_list pos:start="462:44" pos:end="462:108">(<argument pos:start="462:45" pos:end="462:49"><expr pos:start="462:45" pos:end="462:49"><name pos:start="462:45" pos:end="462:49">bank1</name></expr></argument>, <argument pos:start="462:52" pos:end="462:60"><expr pos:start="462:52" pos:end="462:60"><name pos:start="462:52" pos:end="462:60">newPoints</name></expr></argument>, <argument pos:start="462:63" pos:end="462:77"><expr pos:start="462:63" pos:end="462:77"><name pos:start="462:63" pos:end="462:77">APERATURE_WIDTH</name></expr></argument>, <argument pos:start="462:80" pos:end="462:93"><expr pos:start="462:80" pos:end="462:93"><name pos:start="462:80" pos:end="462:93">OVERLAP_FACTOR</name></expr></argument>, <argument pos:start="462:96" pos:end="462:107"><expr pos:start="462:96" pos:end="462:107"><name pos:start="462:96" pos:end="462:107">riverSegment</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt pos:start="463:17" pos:end="463:110"><expr pos:start="463:17" pos:end="463:109"><name pos:start="463:17" pos:end="463:21">bank2</name> <operator pos:start="463:23" pos:end="463:23">=</operator> <call pos:start="463:25" pos:end="463:109"><name pos:start="463:25" pos:end="463:43">findRiverBankOffset</name><argument_list pos:start="463:44" pos:end="463:109">(<argument pos:start="463:45" pos:end="463:49"><expr pos:start="463:45" pos:end="463:49"><name pos:start="463:45" pos:end="463:49">bank2</name></expr></argument>, <argument pos:start="463:52" pos:end="463:61"><expr pos:start="463:52" pos:end="463:61"><name pos:start="463:52" pos:end="463:61">newPoints1</name></expr></argument>, <argument pos:start="463:64" pos:end="463:78"><expr pos:start="463:64" pos:end="463:78"><name pos:start="463:64" pos:end="463:78">APERATURE_WIDTH</name></expr></argument>, <argument pos:start="463:81" pos:end="463:94"><expr pos:start="463:81" pos:end="463:94"><name pos:start="463:81" pos:end="463:94">OVERLAP_FACTOR</name></expr></argument>, <argument pos:start="463:97" pos:end="463:108"><expr pos:start="463:97" pos:end="463:108"><name pos:start="463:97" pos:end="463:108">riverSegment</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt pos:start="464:17" pos:end="464:36"><expr pos:start="464:17" pos:end="464:35"><call pos:start="464:17" pos:end="464:35"><name pos:start="464:17" pos:end="464:28"><name pos:start="464:17" pos:end="464:24">newRiver</name><operator pos:start="464:25" pos:end="464:25">.</operator><name pos:start="464:26" pos:end="464:28">add</name></name><argument_list pos:start="464:29" pos:end="464:35">(<argument pos:start="464:30" pos:end="464:34"><expr pos:start="464:30" pos:end="464:34"><name pos:start="464:30" pos:end="464:34">bank1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>  <comment type="line" pos:start="464:39" pos:end="464:72">//what does this line actually do?</comment>
		<expr_stmt pos:start="465:17" pos:end="465:36"><expr pos:start="465:17" pos:end="465:35"><call pos:start="465:17" pos:end="465:35"><name pos:start="465:17" pos:end="465:28"><name pos:start="465:17" pos:end="465:24">newRiver</name><operator pos:start="465:25" pos:end="465:25">.</operator><name pos:start="465:26" pos:end="465:28">add</name></name><argument_list pos:start="465:29" pos:end="465:35">(<argument pos:start="465:30" pos:end="465:34"><expr pos:start="465:30" pos:end="465:34"><name pos:start="465:30" pos:end="465:34">bank2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		<if_stmt pos:start="467:17" pos:end="473:17"><if pos:start="467:17" pos:end="470:17">if<condition pos:start="467:19" pos:end="467:35">(<expr pos:start="467:20" pos:end="467:34"><name pos:start="467:20" pos:end="467:34">innerCrissCross</name></expr>)</condition> <block pos:start="467:37" pos:end="470:17">{<block_content pos:start="468:25" pos:end="469:148">
			<expr_stmt pos:start="468:25" pos:end="468:147"><expr pos:start="468:25" pos:end="468:146"><call pos:start="468:25" pos:end="468:146"><name pos:start="468:25" pos:end="468:44"><name pos:start="468:25" pos:end="468:40">sourcePointsList</name><operator pos:start="468:41" pos:end="468:41">.</operator><name pos:start="468:42" pos:end="468:44">set</name></name><argument_list pos:start="468:45" pos:end="468:146">(<argument pos:start="468:46" pos:end="468:46"><expr pos:start="468:46" pos:end="468:46"><literal type="number" pos:start="468:46" pos:end="468:46">0</literal></expr></argument>, <argument pos:start="468:49" pos:end="468:145"><expr pos:start="468:49" pos:end="468:145"><call pos:start="468:49" pos:end="468:145"><name pos:start="468:49" pos:end="468:68">projectPointsInwards</name><argument_list pos:start="468:69" pos:end="468:145">(<argument pos:start="468:70" pos:end="468:74"><expr pos:start="468:70" pos:end="468:74"><name pos:start="468:70" pos:end="468:74">bank1</name></expr></argument>, <argument pos:start="468:77" pos:end="468:81"><expr pos:start="468:77" pos:end="468:81"><name pos:start="468:77" pos:end="468:81">bank2</name></expr></argument>, <argument pos:start="468:84" pos:end="468:92"><expr pos:start="468:84" pos:end="468:92"><name pos:start="468:84" pos:end="468:92">newPoints</name></expr></argument>, <argument pos:start="468:95" pos:end="468:114"><expr pos:start="468:95" pos:end="468:114"><name pos:start="468:95" pos:end="468:110">APERATURE_HEIGHT</name> <operator pos:start="468:112" pos:end="468:112">*</operator> <literal type="number" pos:start="468:114" pos:end="468:114">2</literal></expr></argument>, <argument pos:start="468:117" pos:end="468:130"><expr pos:start="468:117" pos:end="468:130"><name pos:start="468:117" pos:end="468:130">OVERLAP_FACTOR</name></expr></argument>, <argument pos:start="468:133" pos:end="468:144"><expr pos:start="468:133" pos:end="468:144"><name pos:start="468:133" pos:end="468:144">riverSegment</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt pos:start="469:25" pos:end="469:148"><expr pos:start="469:25" pos:end="469:147"><call pos:start="469:25" pos:end="469:147"><name pos:start="469:25" pos:end="469:44"><name pos:start="469:25" pos:end="469:40">sourcePointsList</name><operator pos:start="469:41" pos:end="469:41">.</operator><name pos:start="469:42" pos:end="469:44">set</name></name><argument_list pos:start="469:45" pos:end="469:147">(<argument pos:start="469:46" pos:end="469:46"><expr pos:start="469:46" pos:end="469:46"><literal type="number" pos:start="469:46" pos:end="469:46">1</literal></expr></argument>, <argument pos:start="469:49" pos:end="469:146"><expr pos:start="469:49" pos:end="469:146"><call pos:start="469:49" pos:end="469:146"><name pos:start="469:49" pos:end="469:68">projectPointsInwards</name><argument_list pos:start="469:69" pos:end="469:146">(<argument pos:start="469:70" pos:end="469:74"><expr pos:start="469:70" pos:end="469:74"><name pos:start="469:70" pos:end="469:74">bank2</name></expr></argument>, <argument pos:start="469:77" pos:end="469:81"><expr pos:start="469:77" pos:end="469:81"><name pos:start="469:77" pos:end="469:81">bank1</name></expr></argument>, <argument pos:start="469:84" pos:end="469:93"><expr pos:start="469:84" pos:end="469:93"><name pos:start="469:84" pos:end="469:93">newPoints1</name></expr></argument>, <argument pos:start="469:96" pos:end="469:115"><expr pos:start="469:96" pos:end="469:115"><name pos:start="469:96" pos:end="469:111">APERATURE_HEIGHT</name> <operator pos:start="469:113" pos:end="469:113">*</operator> <literal type="number" pos:start="469:115" pos:end="469:115">2</literal></expr></argument>, <argument pos:start="469:118" pos:end="469:131"><expr pos:start="469:118" pos:end="469:131"><name pos:start="469:118" pos:end="469:131">OVERLAP_FACTOR</name></expr></argument>, <argument pos:start="469:134" pos:end="469:145"><expr pos:start="469:134" pos:end="469:145"><name pos:start="469:134" pos:end="469:145">riverSegment</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		</block_content>}</block></if> <else pos:start="470:19" pos:end="473:17">else <block pos:start="470:24" pos:end="473:17">{<block_content pos:start="471:25" pos:end="472:144">
			<expr_stmt pos:start="471:25" pos:end="471:143"><expr pos:start="471:25" pos:end="471:142"><call pos:start="471:25" pos:end="471:142"><name pos:start="471:25" pos:end="471:44"><name pos:start="471:25" pos:end="471:40">sourcePointsList</name><operator pos:start="471:41" pos:end="471:41">.</operator><name pos:start="471:42" pos:end="471:44">set</name></name><argument_list pos:start="471:45" pos:end="471:142">(<argument pos:start="471:46" pos:end="471:46"><expr pos:start="471:46" pos:end="471:46"><literal type="number" pos:start="471:46" pos:end="471:46">0</literal></expr></argument>, <argument pos:start="471:49" pos:end="471:141"><expr pos:start="471:49" pos:end="471:141"><call pos:start="471:49" pos:end="471:141"><name pos:start="471:49" pos:end="471:68">projectPointsInwards</name><argument_list pos:start="471:69" pos:end="471:141">(<argument pos:start="471:70" pos:end="471:74"><expr pos:start="471:70" pos:end="471:74"><name pos:start="471:70" pos:end="471:74">bank1</name></expr></argument>, <argument pos:start="471:77" pos:end="471:81"><expr pos:start="471:77" pos:end="471:81"><name pos:start="471:77" pos:end="471:81">bank2</name></expr></argument>, <argument pos:start="471:84" pos:end="471:92"><expr pos:start="471:84" pos:end="471:92"><name pos:start="471:84" pos:end="471:92">newPoints</name></expr></argument>, <argument pos:start="471:95" pos:end="471:110"><expr pos:start="471:95" pos:end="471:110"><name pos:start="471:95" pos:end="471:110">APERATURE_HEIGHT</name></expr></argument>, <argument pos:start="471:113" pos:end="471:126"><expr pos:start="471:113" pos:end="471:126"><name pos:start="471:113" pos:end="471:126">OVERLAP_FACTOR</name></expr></argument>, <argument pos:start="471:129" pos:end="471:140"><expr pos:start="471:129" pos:end="471:140"><name pos:start="471:129" pos:end="471:140">riverSegment</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt pos:start="472:25" pos:end="472:144"><expr pos:start="472:25" pos:end="472:143"><call pos:start="472:25" pos:end="472:143"><name pos:start="472:25" pos:end="472:44"><name pos:start="472:25" pos:end="472:40">sourcePointsList</name><operator pos:start="472:41" pos:end="472:41">.</operator><name pos:start="472:42" pos:end="472:44">set</name></name><argument_list pos:start="472:45" pos:end="472:143">(<argument pos:start="472:46" pos:end="472:46"><expr pos:start="472:46" pos:end="472:46"><literal type="number" pos:start="472:46" pos:end="472:46">1</literal></expr></argument>, <argument pos:start="472:49" pos:end="472:142"><expr pos:start="472:49" pos:end="472:142"><call pos:start="472:49" pos:end="472:142"><name pos:start="472:49" pos:end="472:68">projectPointsInwards</name><argument_list pos:start="472:69" pos:end="472:142">(<argument pos:start="472:70" pos:end="472:74"><expr pos:start="472:70" pos:end="472:74"><name pos:start="472:70" pos:end="472:74">bank2</name></expr></argument>, <argument pos:start="472:77" pos:end="472:81"><expr pos:start="472:77" pos:end="472:81"><name pos:start="472:77" pos:end="472:81">bank1</name></expr></argument>, <argument pos:start="472:84" pos:end="472:93"><expr pos:start="472:84" pos:end="472:93"><name pos:start="472:84" pos:end="472:93">newPoints1</name></expr></argument>, <argument pos:start="472:96" pos:end="472:111"><expr pos:start="472:96" pos:end="472:111"><name pos:start="472:96" pos:end="472:111">APERATURE_HEIGHT</name></expr></argument>, <argument pos:start="472:114" pos:end="472:127"><expr pos:start="472:114" pos:end="472:127"><name pos:start="472:114" pos:end="472:127">OVERLAP_FACTOR</name></expr></argument>, <argument pos:start="472:130" pos:end="472:141"><expr pos:start="472:130" pos:end="472:141"><name pos:start="472:130" pos:end="472:141">riverSegment</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		</block_content>}</block></else></if_stmt>
		<return pos:start="474:17" pos:end="474:40">return <expr pos:start="474:24" pos:end="474:39"><name pos:start="474:24" pos:end="474:39">sourcePointsList</name></expr>;</return>
    </block_content>}</block></function>
}</block></class></unit>
