<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="Java" filename="flatCode/PysicalDroneIdGenerator.java" pos:tabs="8"><package pos:start="1:1" pos:end="1:53">package <name pos:start="1:9" pos:end="1:52"><name pos:start="1:9" pos:end="1:11">edu</name><operator pos:start="1:12" pos:end="1:12">.</operator><name pos:start="1:13" pos:end="1:14">nd</name><operator pos:start="1:15" pos:end="1:15">.</operator><name pos:start="1:16" pos:end="1:24">dronology</name><operator pos:start="1:25" pos:end="1:25">.</operator><name pos:start="1:26" pos:end="1:33">gstation</name><operator pos:start="1:34" pos:end="1:34">.</operator><name pos:start="1:35" pos:end="1:43">connector</name><operator pos:start="1:44" pos:end="1:44">.</operator><name pos:start="1:45" pos:end="1:52">dispatch</name></name>;</package>

<import pos:start="3:1" pos:end="3:31">import <name pos:start="3:8" pos:end="3:30"><name pos:start="3:8" pos:end="3:11">java</name><operator pos:start="3:12" pos:end="3:12">.</operator><name pos:start="3:13" pos:end="3:16">util</name><operator pos:start="3:17" pos:end="3:17">.</operator><name pos:start="3:18" pos:end="3:22">regex</name><operator pos:start="3:23" pos:end="3:23">.</operator><name pos:start="3:24" pos:end="3:30">Matcher</name></name>;</import>
<import pos:start="4:1" pos:end="4:31">import <name pos:start="4:8" pos:end="4:30"><name pos:start="4:8" pos:end="4:11">java</name><operator pos:start="4:12" pos:end="4:12">.</operator><name pos:start="4:13" pos:end="4:16">util</name><operator pos:start="4:17" pos:end="4:17">.</operator><name pos:start="4:18" pos:end="4:22">regex</name><operator pos:start="4:23" pos:end="4:23">.</operator><name pos:start="4:24" pos:end="4:30">Pattern</name></name>;</import>

<class pos:start="6:1" pos:end="23:1"><specifier pos:start="6:1" pos:end="6:6">public</specifier> class <name pos:start="6:14" pos:end="6:36">PysicalDroneIdGenerator</name> <block pos:start="6:38" pos:end="23:1">{

	<decl_stmt pos:start="8:9" pos:end="8:56"><decl pos:start="8:9" pos:end="8:55"><type pos:start="8:9" pos:end="8:35"><specifier pos:start="8:9" pos:end="8:15">private</specifier> <specifier pos:start="8:17" pos:end="8:22">static</specifier> <specifier pos:start="8:24" pos:end="8:28">final</specifier> <name pos:start="8:30" pos:end="8:35">String</name></type> <name pos:start="8:37" pos:end="8:43">pattern</name> <init pos:start="8:45" pos:end="8:55">=<expr pos:start="8:46" pos:end="8:55"><literal type="string" pos:start="8:46" pos:end="8:55">"\\:(%s$)"</literal></expr></init></decl>;</decl_stmt>
	
	<function pos:start="10:9" pos:end="12:9"><type pos:start="10:9" pos:end="10:28"><specifier pos:start="10:9" pos:end="10:14">public</specifier> <specifier pos:start="10:16" pos:end="10:21">static</specifier> <name pos:start="10:23" pos:end="10:28">String</name></type> <name pos:start="10:30" pos:end="10:37">generate</name><parameter_list pos:start="10:38" pos:end="10:72">(<parameter pos:start="10:39" pos:end="10:47"><decl pos:start="10:39" pos:end="10:47"><type pos:start="10:39" pos:end="10:47"><name pos:start="10:39" pos:end="10:44">String</name></type> <name pos:start="10:46" pos:end="10:47">id</name></decl></parameter>, <parameter pos:start="10:50" pos:end="10:71"><decl pos:start="10:50" pos:end="10:71"><type pos:start="10:50" pos:end="10:71"><name pos:start="10:50" pos:end="10:55">String</name></type> <name pos:start="10:57" pos:end="10:71">groundstationid</name></decl></parameter>)</parameter_list> <block pos:start="10:74" pos:end="12:9">{<block_content pos:start="11:17" pos:end="11:50">
		<return pos:start="11:17" pos:end="11:50">return <expr pos:start="11:24" pos:end="11:49"><name pos:start="11:24" pos:end="11:25">id</name> <operator pos:start="11:27" pos:end="11:27">+</operator> <literal type="string" pos:start="11:29" pos:end="11:31">":"</literal> <operator pos:start="11:33" pos:end="11:33">+</operator> <name pos:start="11:35" pos:end="11:49">groundstationid</name></expr>;</return>
	</block_content>}</block></function>
	
	
	<function pos:start="15:9" pos:end="21:9"><type pos:start="15:9" pos:end="15:29"><specifier pos:start="15:9" pos:end="15:14">public</specifier> <specifier pos:start="15:16" pos:end="15:21">static</specifier> <name pos:start="15:23" pos:end="15:29">boolean</name></type> <name pos:start="15:31" pos:end="15:59">isAssociatedWithGroundstation</name><parameter_list pos:start="15:60" pos:end="15:94">(<parameter pos:start="15:61" pos:end="15:69"><decl pos:start="15:61" pos:end="15:69"><type pos:start="15:61" pos:end="15:69"><name pos:start="15:61" pos:end="15:66">String</name></type> <name pos:start="15:68" pos:end="15:69">id</name></decl></parameter>, <parameter pos:start="15:72" pos:end="15:93"><decl pos:start="15:72" pos:end="15:93"><type pos:start="15:72" pos:end="15:93"><name pos:start="15:72" pos:end="15:77">String</name></type> <name pos:start="15:79" pos:end="15:93">groundstationid</name></decl></parameter>)</parameter_list> <block pos:start="15:96" pos:end="21:9">{<block_content pos:start="16:17" pos:end="19:32">
		<decl_stmt pos:start="16:17" pos:end="16:69"><decl pos:start="16:17" pos:end="16:68"><type pos:start="16:17" pos:end="16:22"><name pos:start="16:17" pos:end="16:22">String</name></type> <name pos:start="16:24" pos:end="16:26">pat</name> <init pos:start="16:28" pos:end="16:68">= <expr pos:start="16:30" pos:end="16:68"><call pos:start="16:30" pos:end="16:68"><name pos:start="16:30" pos:end="16:42"><name pos:start="16:30" pos:end="16:35">String</name><operator pos:start="16:36" pos:end="16:36">.</operator><name pos:start="16:37" pos:end="16:42">format</name></name><argument_list pos:start="16:43" pos:end="16:68">(<argument pos:start="16:44" pos:end="16:50"><expr pos:start="16:44" pos:end="16:50"><name pos:start="16:44" pos:end="16:50">pattern</name></expr></argument>, <argument pos:start="16:53" pos:end="16:67"><expr pos:start="16:53" pos:end="16:67"><name pos:start="16:53" pos:end="16:67">groundstationid</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		
		<decl_stmt pos:start="18:17" pos:end="18:61"><decl pos:start="18:17" pos:end="18:60"><type pos:start="18:17" pos:end="18:23"><name pos:start="18:17" pos:end="18:23">Matcher</name></type> <name pos:start="18:25" pos:end="18:25">m</name> <init pos:start="18:27" pos:end="18:60">= <expr pos:start="18:29" pos:end="18:60"><call pos:start="18:29" pos:end="18:48"><name pos:start="18:29" pos:end="18:43"><name pos:start="18:29" pos:end="18:35">Pattern</name><operator pos:start="18:36" pos:end="18:36">.</operator><name pos:start="18:37" pos:end="18:43">compile</name></name><argument_list pos:start="18:44" pos:end="18:48">(<argument pos:start="18:45" pos:end="18:47"><expr pos:start="18:45" pos:end="18:47"><name pos:start="18:45" pos:end="18:47">pat</name></expr></argument>)</argument_list></call><operator pos:start="18:49" pos:end="18:49">.</operator><call pos:start="18:50" pos:end="18:60"><name pos:start="18:50" pos:end="18:56">matcher</name><argument_list pos:start="18:57" pos:end="18:60">(<argument pos:start="18:58" pos:end="18:59"><expr pos:start="18:58" pos:end="18:59"><name pos:start="18:58" pos:end="18:59">id</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<return pos:start="19:17" pos:end="19:32">return <expr pos:start="19:24" pos:end="19:31"><call pos:start="19:24" pos:end="19:31"><name pos:start="19:24" pos:end="19:29"><name pos:start="19:24" pos:end="19:24">m</name><operator pos:start="19:25" pos:end="19:25">.</operator><name pos:start="19:26" pos:end="19:29">find</name></name><argument_list pos:start="19:30" pos:end="19:31">()</argument_list></call></expr>;</return>
	
	</block_content>}</block></function>

}</block></class>

</unit>
