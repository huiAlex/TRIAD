<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="Java" filename="flatCode/TestStatusDispatchThread.java" pos:tabs="8"><package pos:start="1:1" pos:end="1:53">package <name pos:start="1:9" pos:end="1:52"><name pos:start="1:9" pos:end="1:11">edu</name><operator pos:start="1:12" pos:end="1:12">.</operator><name pos:start="1:13" pos:end="1:14">nd</name><operator pos:start="1:15" pos:end="1:15">.</operator><name pos:start="1:16" pos:end="1:24">dronology</name><operator pos:start="1:25" pos:end="1:25">.</operator><name pos:start="1:26" pos:end="1:33">gstation</name><operator pos:start="1:34" pos:end="1:34">.</operator><name pos:start="1:35" pos:end="1:43">connector</name><operator pos:start="1:44" pos:end="1:44">.</operator><name pos:start="1:45" pos:end="1:52">dispatch</name></name>;</package>

<import pos:start="3:1" pos:end="3:56">import <name pos:start="3:8" pos:end="3:55"><name pos:start="3:8" pos:end="3:10">edu</name><operator pos:start="3:11" pos:end="3:11">.</operator><name pos:start="3:12" pos:end="3:13">nd</name><operator pos:start="3:14" pos:end="3:14">.</operator><name pos:start="3:15" pos:end="3:23">dronology</name><operator pos:start="3:24" pos:end="3:24">.</operator><name pos:start="3:25" pos:end="3:28">core</name><operator pos:start="3:29" pos:end="3:29">.</operator><name pos:start="3:30" pos:end="3:55">IUAVPropertyUpdateNotifier</name></name>;</import>
<import pos:start="4:1" pos:end="4:54">import <name pos:start="4:8" pos:end="4:53"><name pos:start="4:8" pos:end="4:10">edu</name><operator pos:start="4:11" pos:end="4:11">.</operator><name pos:start="4:12" pos:end="4:13">nd</name><operator pos:start="4:14" pos:end="4:14">.</operator><name pos:start="4:15" pos:end="4:23">dronology</name><operator pos:start="4:24" pos:end="4:24">.</operator><name pos:start="4:25" pos:end="4:28">core</name><operator pos:start="4:29" pos:end="4:29">.</operator><name pos:start="4:30" pos:end="4:39">coordinate</name><operator pos:start="4:40" pos:end="4:40">.</operator><name pos:start="4:41" pos:end="4:53">LlaCoordinate</name></name>;</import>
<import pos:start="5:1" pos:end="5:71">import <name pos:start="5:8" pos:end="5:70"><name pos:start="5:8" pos:end="5:10">edu</name><operator pos:start="5:11" pos:end="5:11">.</operator><name pos:start="5:12" pos:end="5:13">nd</name><operator pos:start="5:14" pos:end="5:14">.</operator><name pos:start="5:15" pos:end="5:23">dronology</name><operator pos:start="5:24" pos:end="5:24">.</operator><name pos:start="5:25" pos:end="5:32">gstation</name><operator pos:start="5:33" pos:end="5:33">.</operator><name pos:start="5:34" pos:end="5:42">connector</name><operator pos:start="5:43" pos:end="5:43">.</operator><name pos:start="5:44" pos:end="5:51">messages</name><operator pos:start="5:52" pos:end="5:52">.</operator><name pos:start="5:53" pos:end="5:70">AbstractUAVMessage</name></name>;</import>
<import pos:start="6:1" pos:end="6:70">import <name pos:start="6:8" pos:end="6:69"><name pos:start="6:8" pos:end="6:10">edu</name><operator pos:start="6:11" pos:end="6:11">.</operator><name pos:start="6:12" pos:end="6:13">nd</name><operator pos:start="6:14" pos:end="6:14">.</operator><name pos:start="6:15" pos:end="6:23">dronology</name><operator pos:start="6:24" pos:end="6:24">.</operator><name pos:start="6:25" pos:end="6:32">gstation</name><operator pos:start="6:33" pos:end="6:33">.</operator><name pos:start="6:34" pos:end="6:42">connector</name><operator pos:start="6:43" pos:end="6:43">.</operator><name pos:start="6:44" pos:end="6:51">messages</name><operator pos:start="6:52" pos:end="6:52">.</operator><name pos:start="6:53" pos:end="6:69">UAVMessageFactory</name></name>;</import>
<import pos:start="7:1" pos:end="7:68">import <name pos:start="7:8" pos:end="7:67"><name pos:start="7:8" pos:end="7:10">edu</name><operator pos:start="7:11" pos:end="7:11">.</operator><name pos:start="7:12" pos:end="7:13">nd</name><operator pos:start="7:14" pos:end="7:14">.</operator><name pos:start="7:15" pos:end="7:23">dronology</name><operator pos:start="7:24" pos:end="7:24">.</operator><name pos:start="7:25" pos:end="7:32">gstation</name><operator pos:start="7:33" pos:end="7:33">.</operator><name pos:start="7:34" pos:end="7:42">connector</name><operator pos:start="7:43" pos:end="7:43">.</operator><name pos:start="7:44" pos:end="7:51">messages</name><operator pos:start="7:52" pos:end="7:52">.</operator><name pos:start="7:53" pos:end="7:67">UAVStateMessage</name></name>;</import>
<import pos:start="8:1" pos:end="8:67">import <name pos:start="8:8" pos:end="8:66"><name pos:start="8:8" pos:end="8:10">org</name><operator pos:start="8:11" pos:end="8:11">.</operator><name pos:start="8:12" pos:end="8:17">apache</name><operator pos:start="8:18" pos:end="8:18">.</operator><name pos:start="8:19" pos:end="8:25">commons</name><operator pos:start="8:26" pos:end="8:26">.</operator><name pos:start="8:27" pos:end="8:31">math3</name><operator pos:start="8:32" pos:end="8:32">.</operator><name pos:start="8:33" pos:end="8:40">geometry</name><operator pos:start="8:41" pos:end="8:41">.</operator><name pos:start="8:42" pos:end="8:50">euclidean</name><operator pos:start="8:51" pos:end="8:51">.</operator><name pos:start="8:52" pos:end="8:57">threed</name><operator pos:start="8:58" pos:end="8:58">.</operator><name pos:start="8:59" pos:end="8:66">Vector3D</name></name>;</import>
<import pos:start="9:1" pos:end="9:22">import <name pos:start="9:8" pos:end="9:21"><name pos:start="9:8" pos:end="9:10">org</name><operator pos:start="9:11" pos:end="9:11">.</operator><name pos:start="9:12" pos:end="9:16">junit</name><operator pos:start="9:17" pos:end="9:17">.</operator><name pos:start="9:18" pos:end="9:21">Test</name></name>;</import>
<import pos:start="10:1" pos:end="10:24">import <name pos:start="10:8" pos:end="10:23"><name pos:start="10:8" pos:end="10:10">org</name><operator pos:start="10:11" pos:end="10:11">.</operator><name pos:start="10:12" pos:end="10:16">junit</name><operator pos:start="10:17" pos:end="10:17">.</operator><name pos:start="10:18" pos:end="10:23">Assert</name></name>;</import>

<import pos:start="12:1" pos:end="12:42">import <name pos:start="12:8" pos:end="12:41"><name pos:start="12:8" pos:end="12:11">java</name><operator pos:start="12:12" pos:end="12:12">.</operator><name pos:start="12:13" pos:end="12:16">util</name><operator pos:start="12:17" pos:end="12:17">.</operator><name pos:start="12:18" pos:end="12:27">concurrent</name><operator pos:start="12:28" pos:end="12:28">.</operator><name pos:start="12:29" pos:end="12:41">BlockingQueue</name></name>;</import>
<import pos:start="13:1" pos:end="13:48">import <name pos:start="13:8" pos:end="13:47"><name pos:start="13:8" pos:end="13:11">java</name><operator pos:start="13:12" pos:end="13:12">.</operator><name pos:start="13:13" pos:end="13:16">util</name><operator pos:start="13:17" pos:end="13:17">.</operator><name pos:start="13:18" pos:end="13:27">concurrent</name><operator pos:start="13:28" pos:end="13:28">.</operator><name pos:start="13:29" pos:end="13:47">LinkedBlockingQueue</name></name>;</import>

<class pos:start="15:1" pos:end="111:1"><specifier pos:start="15:1" pos:end="15:6">public</specifier> class <name pos:start="15:14" pos:end="15:37">TestStatusDispatchThread</name> <block pos:start="15:39" pos:end="111:1">{

    <class pos:start="17:5" pos:end="19:5">class <name pos:start="17:11" pos:end="17:25">DispatchWrapper</name> <block pos:start="17:27" pos:end="19:5">{
        <decl_stmt pos:start="18:9" pos:end="18:56"><decl pos:start="18:9" pos:end="18:55"><type pos:start="18:9" pos:end="18:44"><specifier pos:start="18:9" pos:end="18:14">public</specifier> <specifier pos:start="18:16" pos:end="18:23">volatile</specifier> <name pos:start="18:25" pos:end="18:44">StatusDispatchThread</name></type> <name pos:start="18:46" pos:end="18:55">dispatcher</name></decl>;</decl_stmt>
    }</block></class>

    <function pos:start="21:5" pos:end="110:5"><annotation pos:start="21:5" pos:end="21:9">@<name pos:start="21:6" pos:end="21:9">Test</name></annotation>
    <type pos:start="22:5" pos:end="22:15"><specifier pos:start="22:5" pos:end="22:10">public</specifier> <name pos:start="22:12" pos:end="22:15">void</name></type> <name pos:start="22:17" pos:end="22:35">testCurrentBehavior</name><parameter_list pos:start="22:36" pos:end="22:37">()</parameter_list> <throws pos:start="22:39" pos:end="22:54">throws <argument pos:start="22:46" pos:end="22:54"><expr pos:start="22:46" pos:end="22:54"><name pos:start="22:46" pos:end="22:54">Throwable</name></expr></argument></throws> <block pos:start="22:56" pos:end="110:5">{<block_content pos:start="26:9" pos:end="108:42">
        <comment type="block" pos:start="23:9" pos:end="25:11">/*
        Create a mock IUAVPropertyUpdateNotifier that checks the stubbed data gets passed in
         */</comment>
        <decl_stmt pos:start="26:9" pos:end="26:70"><decl pos:start="26:9" pos:end="26:69"><type pos:start="26:9" pos:end="26:29"><specifier pos:start="26:9" pos:end="26:13">final</specifier> <name pos:start="26:15" pos:end="26:29">DispatchWrapper</name></type> <name pos:start="26:31" pos:end="26:45">dispatchWrapper</name> <init pos:start="26:47" pos:end="26:69">= <expr pos:start="26:49" pos:end="26:69"><operator pos:start="26:49" pos:end="26:51">new</operator> <call pos:start="26:53" pos:end="26:69"><name pos:start="26:53" pos:end="26:67">DispatchWrapper</name><argument_list pos:start="26:68" pos:end="26:69">()</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt pos:start="27:9" pos:end="27:76"><decl pos:start="27:9" pos:end="27:75"><type pos:start="27:9" pos:end="27:41"><name pos:start="27:9" pos:end="27:41"><name pos:start="27:9" pos:end="27:21">BlockingQueue</name><argument_list type="generic" pos:start="27:22" pos:end="27:41">&lt;<argument pos:start="27:23" pos:end="27:40"><name pos:start="27:23" pos:end="27:40">AbstractUAVMessage</name></argument>&gt;</argument_list></name></type> <name pos:start="27:43" pos:end="27:47">queue</name> <init pos:start="27:49" pos:end="27:75">= <expr pos:start="27:51" pos:end="27:75"><operator pos:start="27:51" pos:end="27:53">new</operator> <call pos:start="27:55" pos:end="27:75"><name pos:start="27:55" pos:end="27:73">LinkedBlockingQueue</name><argument_list pos:start="27:74" pos:end="27:75">()</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt pos:start="28:9" pos:end="80:10"><decl pos:start="28:9" pos:end="80:9"><type pos:start="28:9" pos:end="28:34"><name pos:start="28:9" pos:end="28:34">IUAVPropertyUpdateNotifier</name></type> <name pos:start="28:36" pos:end="28:49">updateNotifier</name> <init pos:start="28:51" pos:end="80:9">= <expr pos:start="28:53" pos:end="80:9"><operator pos:start="28:53" pos:end="28:55">new</operator> <class pos:start="28:57" pos:end="80:9"><super pos:start="28:57" pos:end="28:82"><name pos:start="28:57" pos:end="28:82">IUAVPropertyUpdateNotifier</name></super><argument_list pos:start="28:83" pos:end="28:84">()</argument_list> <block pos:start="28:86" pos:end="80:9">{
            <function pos:start="29:13" pos:end="35:13"><annotation pos:start="29:13" pos:end="29:21">@<name pos:start="29:14" pos:end="29:21">Override</name></annotation>
            <type pos:start="30:13" pos:end="30:23"><specifier pos:start="30:13" pos:end="30:18">public</specifier> <name pos:start="30:20" pos:end="30:23">void</name></type> <name pos:start="30:25" pos:end="30:30">update</name><parameter_list pos:start="30:31" pos:end="30:127">(<parameter pos:start="30:32" pos:end="30:53"><decl pos:start="30:32" pos:end="30:53"><type pos:start="30:32" pos:end="30:53"><name pos:start="30:32" pos:end="30:44">LlaCoordinate</name></type> <name pos:start="30:46" pos:end="30:53">location</name></decl></parameter>, <parameter pos:start="30:56" pos:end="30:74"><decl pos:start="30:56" pos:end="30:74"><type pos:start="30:56" pos:end="30:74"><name pos:start="30:56" pos:end="30:61">double</name></type> <name pos:start="30:63" pos:end="30:74">batteryLevel</name></decl></parameter>, <parameter pos:start="30:77" pos:end="30:88"><decl pos:start="30:77" pos:end="30:88"><type pos:start="30:77" pos:end="30:88"><name pos:start="30:77" pos:end="30:82">double</name></type> <name pos:start="30:84" pos:end="30:88">speed</name></decl></parameter>, <parameter pos:start="30:91" pos:end="30:107"><decl pos:start="30:91" pos:end="30:107"><type pos:start="30:91" pos:end="30:107"><name pos:start="30:91" pos:end="30:98">Vector3D</name></type> <name pos:start="30:100" pos:end="30:107">velocity</name></decl></parameter>, <parameter pos:start="30:110" pos:end="30:126"><decl pos:start="30:110" pos:end="30:126"><type pos:start="30:110" pos:end="30:126"><name pos:start="30:110" pos:end="30:117">Vector3D</name></type> <name pos:start="30:119" pos:end="30:126">attitude</name></decl></parameter>)</parameter_list> <block pos:start="30:129" pos:end="35:13">{<block_content pos:start="31:17" pos:end="34:71">
                <expr_stmt pos:start="31:17" pos:end="31:44"><expr pos:start="31:17" pos:end="31:43"><call pos:start="31:17" pos:end="31:43"><name pos:start="31:17" pos:end="31:33">updateCoordinates</name><argument_list pos:start="31:34" pos:end="31:43">(<argument pos:start="31:35" pos:end="31:42"><expr pos:start="31:35" pos:end="31:42"><name pos:start="31:35" pos:end="31:42">location</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt pos:start="32:17" pos:end="32:49"><expr pos:start="32:17" pos:end="32:48"><call pos:start="32:17" pos:end="32:48"><name pos:start="32:17" pos:end="32:34">updateBatteryLevel</name><argument_list pos:start="32:35" pos:end="32:48">(<argument pos:start="32:36" pos:end="32:47"><expr pos:start="32:36" pos:end="32:47"><name pos:start="32:36" pos:end="32:47">batteryLevel</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt pos:start="33:17" pos:end="33:38"><expr pos:start="33:17" pos:end="33:37"><call pos:start="33:17" pos:end="33:37"><name pos:start="33:17" pos:end="33:30">updateVelocity</name><argument_list pos:start="33:31" pos:end="33:37">(<argument pos:start="33:32" pos:end="33:36"><expr pos:start="33:32" pos:end="33:36"><name pos:start="33:32" pos:end="33:36">speed</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt pos:start="34:17" pos:end="34:71"><expr pos:start="34:17" pos:end="34:70"><call pos:start="34:17" pos:end="34:70"><name pos:start="34:17" pos:end="34:40">updateCollisionAvoidance</name><argument_list pos:start="34:41" pos:end="34:70">(<argument pos:start="34:42" pos:end="34:49"><expr pos:start="34:42" pos:end="34:49"><name pos:start="34:42" pos:end="34:49">location</name></expr></argument>, <argument pos:start="34:52" pos:end="34:59"><expr pos:start="34:52" pos:end="34:59"><name pos:start="34:52" pos:end="34:59">velocity</name></expr></argument>, <argument pos:start="34:62" pos:end="34:69"><expr pos:start="34:62" pos:end="34:69"><name pos:start="34:62" pos:end="34:69">attitude</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            </block_content>}</block></function>

            <function pos:start="37:13" pos:end="42:13"><annotation pos:start="37:13" pos:end="37:21">@<name pos:start="37:14" pos:end="37:21">Override</name></annotation>
            <type pos:start="38:13" pos:end="38:23"><specifier pos:start="38:13" pos:end="38:18">public</specifier> <name pos:start="38:20" pos:end="38:23">void</name></type> <name pos:start="38:25" pos:end="38:41">updateCoordinates</name><parameter_list pos:start="38:42" pos:end="38:65">(<parameter pos:start="38:43" pos:end="38:64"><decl pos:start="38:43" pos:end="38:64"><type pos:start="38:43" pos:end="38:55"><name pos:start="38:43" pos:end="38:55">LlaCoordinate</name></type> <name pos:start="38:57" pos:end="38:64">location</name></decl></parameter>)</parameter_list> <block pos:start="38:67" pos:end="42:13">{<block_content pos:start="39:17" pos:end="41:56">
                <expr_stmt pos:start="39:17" pos:end="39:54"><expr pos:start="39:17" pos:end="39:53"><call pos:start="39:17" pos:end="39:53"><name pos:start="39:17" pos:end="39:51"><name pos:start="39:17" pos:end="39:31">dispatchWrapper</name><operator pos:start="39:32" pos:end="39:32">.</operator><name pos:start="39:33" pos:end="39:42">dispatcher</name><operator pos:start="39:43" pos:end="39:43">.</operator><name pos:start="39:44" pos:end="39:51">tearDown</name></name><argument_list pos:start="39:52" pos:end="39:53">()</argument_list></call></expr>;</expr_stmt>
                <decl_stmt pos:start="40:17" pos:end="40:88"><decl pos:start="40:17" pos:end="40:87"><type pos:start="40:17" pos:end="40:29"><name pos:start="40:17" pos:end="40:29">LlaCoordinate</name></type> <name pos:start="40:31" pos:end="40:38">expected</name> <init pos:start="40:40" pos:end="40:87">= <expr pos:start="40:42" pos:end="40:87"><operator pos:start="40:42" pos:end="40:44">new</operator> <call pos:start="40:46" pos:end="40:87"><name pos:start="40:46" pos:end="40:58">LlaCoordinate</name><argument_list pos:start="40:59" pos:end="40:87">(<argument pos:start="40:60" pos:end="40:68"><expr pos:start="40:60" pos:end="40:68"><literal type="number" pos:start="40:60" pos:end="40:68">41.519495</literal></expr></argument>,<argument pos:start="40:70" pos:end="40:79"><expr pos:start="40:70" pos:end="40:79"><operator pos:start="40:70" pos:end="40:70">-</operator><literal type="number" pos:start="40:71" pos:end="40:79">86.239937</literal></expr></argument>,<argument pos:start="40:81" pos:end="40:86"><expr pos:start="40:81" pos:end="40:86"><literal type="number" pos:start="40:81" pos:end="40:86">266.19</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
                <expr_stmt pos:start="41:17" pos:end="41:56"><expr pos:start="41:17" pos:end="41:55"><call pos:start="41:17" pos:end="41:55"><name pos:start="41:17" pos:end="41:35"><name pos:start="41:17" pos:end="41:22">Assert</name><operator pos:start="41:23" pos:end="41:23">.</operator><name pos:start="41:24" pos:end="41:35">assertEquals</name></name><argument_list pos:start="41:36" pos:end="41:55">(<argument pos:start="41:37" pos:end="41:44"><expr pos:start="41:37" pos:end="41:44"><name pos:start="41:37" pos:end="41:44">expected</name></expr></argument>, <argument pos:start="41:47" pos:end="41:54"><expr pos:start="41:47" pos:end="41:54"><name pos:start="41:47" pos:end="41:54">location</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            </block_content>}</block></function>

            <function pos:start="44:13" pos:end="49:13"><annotation pos:start="44:13" pos:end="44:21">@<name pos:start="44:14" pos:end="44:21">Override</name></annotation>
            <type pos:start="45:13" pos:end="45:23"><specifier pos:start="45:13" pos:end="45:18">public</specifier> <name pos:start="45:20" pos:end="45:23">void</name></type> <name pos:start="45:25" pos:end="45:40">updateDroneState</name><parameter_list pos:start="45:41" pos:end="45:55">(<parameter pos:start="45:42" pos:end="45:54"><decl pos:start="45:42" pos:end="45:54"><type pos:start="45:42" pos:end="45:47"><name pos:start="45:42" pos:end="45:47">String</name></type> <name pos:start="45:49" pos:end="45:54">status</name></decl></parameter>)</parameter_list> <block pos:start="45:57" pos:end="49:13">{<block_content pos:start="46:17" pos:end="48:49">
                <expr_stmt pos:start="46:17" pos:end="46:54"><expr pos:start="46:17" pos:end="46:53"><call pos:start="46:17" pos:end="46:53"><name pos:start="46:17" pos:end="46:51"><name pos:start="46:17" pos:end="46:31">dispatchWrapper</name><operator pos:start="46:32" pos:end="46:32">.</operator><name pos:start="46:33" pos:end="46:42">dispatcher</name><operator pos:start="46:43" pos:end="46:43">.</operator><name pos:start="46:44" pos:end="46:51">tearDown</name></name><argument_list pos:start="46:52" pos:end="46:53">()</argument_list></call></expr>;</expr_stmt>
                <comment type="line" pos:start="47:17" pos:end="47:66">//todo investigate if this is the behavior we want</comment>
                <expr_stmt pos:start="48:17" pos:end="48:49"><expr pos:start="48:17" pos:end="48:48"><call pos:start="48:17" pos:end="48:48"><name pos:start="48:17" pos:end="48:27"><name pos:start="48:17" pos:end="48:22">Assert</name><operator pos:start="48:23" pos:end="48:23">.</operator><name pos:start="48:24" pos:end="48:27">fail</name></name><argument_list pos:start="48:28" pos:end="48:48">(<argument pos:start="48:29" pos:end="48:47"><expr pos:start="48:29" pos:end="48:47"><literal type="string" pos:start="48:29" pos:end="48:47">"This isn't called"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            </block_content>}</block></function>

            <function pos:start="51:13" pos:end="56:13"><annotation pos:start="51:13" pos:end="51:21">@<name pos:start="51:14" pos:end="51:21">Override</name></annotation>
            <type pos:start="52:13" pos:end="52:23"><specifier pos:start="52:13" pos:end="52:18">public</specifier> <name pos:start="52:20" pos:end="52:23">void</name></type> <name pos:start="52:25" pos:end="52:42">updateBatteryLevel</name><parameter_list pos:start="52:43" pos:end="52:63">(<parameter pos:start="52:44" pos:end="52:62"><decl pos:start="52:44" pos:end="52:62"><type pos:start="52:44" pos:end="52:49"><name pos:start="52:44" pos:end="52:49">double</name></type> <name pos:start="52:51" pos:end="52:62">batteryLevel</name></decl></parameter>)</parameter_list> <block pos:start="52:65" pos:end="56:13">{<block_content pos:start="53:17" pos:end="54:60">
                <expr_stmt pos:start="53:17" pos:end="53:54"><expr pos:start="53:17" pos:end="53:53"><call pos:start="53:17" pos:end="53:53"><name pos:start="53:17" pos:end="53:51"><name pos:start="53:17" pos:end="53:31">dispatchWrapper</name><operator pos:start="53:32" pos:end="53:32">.</operator><name pos:start="53:33" pos:end="53:42">dispatcher</name><operator pos:start="53:43" pos:end="53:43">.</operator><name pos:start="53:44" pos:end="53:51">tearDown</name></name><argument_list pos:start="53:52" pos:end="53:53">()</argument_list></call></expr>;</expr_stmt>
                <expr_stmt pos:start="54:17" pos:end="54:60"><expr pos:start="54:17" pos:end="54:59"><call pos:start="54:17" pos:end="54:59"><name pos:start="54:17" pos:end="54:35"><name pos:start="54:17" pos:end="54:22">Assert</name><operator pos:start="54:23" pos:end="54:23">.</operator><name pos:start="54:24" pos:end="54:35">assertEquals</name></name><argument_list pos:start="54:36" pos:end="54:59">(<argument pos:start="54:37" pos:end="54:39"><expr pos:start="54:37" pos:end="54:39"><literal type="number" pos:start="54:37" pos:end="54:39">100</literal></expr></argument>, <argument pos:start="54:42" pos:end="54:53"><expr pos:start="54:42" pos:end="54:53"><name pos:start="54:42" pos:end="54:53">batteryLevel</name></expr></argument>, <argument pos:start="54:56" pos:end="54:58"><expr pos:start="54:56" pos:end="54:58"><literal type="number" pos:start="54:56" pos:end="54:58">0.0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></function>

            <function pos:start="58:13" pos:end="62:13"><annotation pos:start="58:13" pos:end="58:21">@<name pos:start="58:14" pos:end="58:21">Override</name></annotation>
            <type pos:start="59:13" pos:end="59:23"><specifier pos:start="59:13" pos:end="59:18">public</specifier> <name pos:start="59:20" pos:end="59:23">void</name></type> <name pos:start="59:25" pos:end="59:38">updateVelocity</name><parameter_list pos:start="59:39" pos:end="59:55">(<parameter pos:start="59:40" pos:end="59:54"><decl pos:start="59:40" pos:end="59:54"><type pos:start="59:40" pos:end="59:45"><name pos:start="59:40" pos:end="59:45">double</name></type> <name pos:start="59:47" pos:end="59:54">velocity</name></decl></parameter>)</parameter_list> <block pos:start="59:57" pos:end="62:13">{<block_content pos:start="60:17" pos:end="61:56">
                <expr_stmt pos:start="60:17" pos:end="60:54"><expr pos:start="60:17" pos:end="60:53"><call pos:start="60:17" pos:end="60:53"><name pos:start="60:17" pos:end="60:51"><name pos:start="60:17" pos:end="60:31">dispatchWrapper</name><operator pos:start="60:32" pos:end="60:32">.</operator><name pos:start="60:33" pos:end="60:42">dispatcher</name><operator pos:start="60:43" pos:end="60:43">.</operator><name pos:start="60:44" pos:end="60:51">tearDown</name></name><argument_list pos:start="60:52" pos:end="60:53">()</argument_list></call></expr>;</expr_stmt>
                <expr_stmt pos:start="61:17" pos:end="61:56"><expr pos:start="61:17" pos:end="61:55"><call pos:start="61:17" pos:end="61:55"><name pos:start="61:17" pos:end="61:35"><name pos:start="61:17" pos:end="61:22">Assert</name><operator pos:start="61:23" pos:end="61:23">.</operator><name pos:start="61:24" pos:end="61:35">assertEquals</name></name><argument_list pos:start="61:36" pos:end="61:55">(<argument pos:start="61:37" pos:end="61:39"><expr pos:start="61:37" pos:end="61:39"><literal type="number" pos:start="61:37" pos:end="61:39">5.0</literal></expr></argument>, <argument pos:start="61:42" pos:end="61:49"><expr pos:start="61:42" pos:end="61:49"><name pos:start="61:42" pos:end="61:49">velocity</name></expr></argument>, <argument pos:start="61:52" pos:end="61:54"><expr pos:start="61:52" pos:end="61:54"><literal type="number" pos:start="61:52" pos:end="61:54">0.0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            </block_content>}</block></function>

            <function pos:start="64:13" pos:end="74:13"><annotation pos:start="64:13" pos:end="64:21">@<name pos:start="64:14" pos:end="64:21">Override</name></annotation>
            <type pos:start="65:13" pos:end="65:23"><specifier pos:start="65:13" pos:end="65:18">public</specifier> <name pos:start="65:20" pos:end="65:23">void</name></type> <name pos:start="65:25" pos:end="65:48">updateCollisionAvoidance</name><parameter_list pos:start="65:49" pos:end="65:110">(<parameter pos:start="65:50" pos:end="65:71"><decl pos:start="65:50" pos:end="65:71"><type pos:start="65:50" pos:end="65:71"><name pos:start="65:50" pos:end="65:62">LlaCoordinate</name></type> <name pos:start="65:64" pos:end="65:71">position</name></decl></parameter>, <parameter pos:start="65:74" pos:end="65:90"><decl pos:start="65:74" pos:end="65:90"><type pos:start="65:74" pos:end="65:90"><name pos:start="65:74" pos:end="65:81">Vector3D</name></type> <name pos:start="65:83" pos:end="65:90">velocity</name></decl></parameter>, <parameter pos:start="65:93" pos:end="65:109"><decl pos:start="65:93" pos:end="65:109"><type pos:start="65:93" pos:end="65:109"><name pos:start="65:93" pos:end="65:100">Vector3D</name></type> <name pos:start="65:102" pos:end="65:109">attitude</name></decl></parameter>)</parameter_list> <block pos:start="65:112" pos:end="74:13">{<block_content pos:start="66:17" pos:end="73:64">
                <decl_stmt pos:start="66:17" pos:end="66:88"><decl pos:start="66:17" pos:end="66:87"><type pos:start="66:17" pos:end="66:29"><name pos:start="66:17" pos:end="66:29">LlaCoordinate</name></type> <name pos:start="66:31" pos:end="66:38">expected</name> <init pos:start="66:40" pos:end="66:87">= <expr pos:start="66:42" pos:end="66:87"><operator pos:start="66:42" pos:end="66:44">new</operator> <call pos:start="66:46" pos:end="66:87"><name pos:start="66:46" pos:end="66:58">LlaCoordinate</name><argument_list pos:start="66:59" pos:end="66:87">(<argument pos:start="66:60" pos:end="66:68"><expr pos:start="66:60" pos:end="66:68"><literal type="number" pos:start="66:60" pos:end="66:68">41.519495</literal></expr></argument>,<argument pos:start="66:70" pos:end="66:79"><expr pos:start="66:70" pos:end="66:79"><operator pos:start="66:70" pos:end="66:70">-</operator><literal type="number" pos:start="66:71" pos:end="66:79">86.239937</literal></expr></argument>,<argument pos:start="66:81" pos:end="66:86"><expr pos:start="66:81" pos:end="66:86"><literal type="number" pos:start="66:81" pos:end="66:86">266.19</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
                <expr_stmt pos:start="67:17" pos:end="67:56"><expr pos:start="67:17" pos:end="67:55"><call pos:start="67:17" pos:end="67:55"><name pos:start="67:17" pos:end="67:35"><name pos:start="67:17" pos:end="67:22">Assert</name><operator pos:start="67:23" pos:end="67:23">.</operator><name pos:start="67:24" pos:end="67:35">assertEquals</name></name><argument_list pos:start="67:36" pos:end="67:55">(<argument pos:start="67:37" pos:end="67:44"><expr pos:start="67:37" pos:end="67:44"><name pos:start="67:37" pos:end="67:44">expected</name></expr></argument>, <argument pos:start="67:47" pos:end="67:54"><expr pos:start="67:47" pos:end="67:54"><name pos:start="67:47" pos:end="67:54">position</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <decl_stmt pos:start="69:17" pos:end="69:71"><decl pos:start="69:17" pos:end="69:70"><type pos:start="69:17" pos:end="69:24"><name pos:start="69:17" pos:end="69:24">Vector3D</name></type> <name pos:start="69:26" pos:end="69:40">expectedVelcity</name> <init pos:start="69:42" pos:end="69:70">= <expr pos:start="69:44" pos:end="69:70"><operator pos:start="69:44" pos:end="69:46">new</operator> <call pos:start="69:48" pos:end="69:70"><name pos:start="69:48" pos:end="69:55">Vector3D</name><argument_list pos:start="69:56" pos:end="69:70">(<argument pos:start="69:57" pos:end="69:59"><expr pos:start="69:57" pos:end="69:59"><literal type="number" pos:start="69:57" pos:end="69:59">3.0</literal></expr></argument>, <argument pos:start="69:62" pos:end="69:64"><expr pos:start="69:62" pos:end="69:64"><literal type="number" pos:start="69:62" pos:end="69:64">4.0</literal></expr></argument>, <argument pos:start="69:67" pos:end="69:69"><expr pos:start="69:67" pos:end="69:69"><literal type="number" pos:start="69:67" pos:end="69:69">0.0</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
                <expr_stmt pos:start="70:17" pos:end="70:63"><expr pos:start="70:17" pos:end="70:62"><call pos:start="70:17" pos:end="70:62"><name pos:start="70:17" pos:end="70:35"><name pos:start="70:17" pos:end="70:22">Assert</name><operator pos:start="70:23" pos:end="70:23">.</operator><name pos:start="70:24" pos:end="70:35">assertEquals</name></name><argument_list pos:start="70:36" pos:end="70:62">(<argument pos:start="70:37" pos:end="70:51"><expr pos:start="70:37" pos:end="70:51"><name pos:start="70:37" pos:end="70:51">expectedVelcity</name></expr></argument>, <argument pos:start="70:54" pos:end="70:61"><expr pos:start="70:54" pos:end="70:61"><name pos:start="70:54" pos:end="70:61">velocity</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <decl_stmt pos:start="72:17" pos:end="72:75"><decl pos:start="72:17" pos:end="72:74"><type pos:start="72:17" pos:end="72:24"><name pos:start="72:17" pos:end="72:24">Vector3D</name></type> <name pos:start="72:26" pos:end="72:41">expectedAttitude</name> <init pos:start="72:43" pos:end="72:74">= <expr pos:start="72:45" pos:end="72:74"><operator pos:start="72:45" pos:end="72:47">new</operator> <call pos:start="72:49" pos:end="72:74"><name pos:start="72:49" pos:end="72:56">Vector3D</name><argument_list pos:start="72:57" pos:end="72:74">(<argument pos:start="72:58" pos:end="72:61"><expr pos:start="72:58" pos:end="72:61"><literal type="number" pos:start="72:58" pos:end="72:61">30.0</literal></expr></argument>, <argument pos:start="72:64" pos:end="72:67"><expr pos:start="72:64" pos:end="72:67"><literal type="number" pos:start="72:64" pos:end="72:67">31.0</literal></expr></argument>, <argument pos:start="72:70" pos:end="72:73"><expr pos:start="72:70" pos:end="72:73"><literal type="number" pos:start="72:70" pos:end="72:73">32.0</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
                <expr_stmt pos:start="73:17" pos:end="73:64"><expr pos:start="73:17" pos:end="73:63"><call pos:start="73:17" pos:end="73:63"><name pos:start="73:17" pos:end="73:35"><name pos:start="73:17" pos:end="73:22">Assert</name><operator pos:start="73:23" pos:end="73:23">.</operator><name pos:start="73:24" pos:end="73:35">assertEquals</name></name><argument_list pos:start="73:36" pos:end="73:63">(<argument pos:start="73:37" pos:end="73:52"><expr pos:start="73:37" pos:end="73:52"><name pos:start="73:37" pos:end="73:52">expectedAttitude</name></expr></argument>, <argument pos:start="73:55" pos:end="73:62"><expr pos:start="73:55" pos:end="73:62"><name pos:start="73:55" pos:end="73:62">attitude</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            </block_content>}</block></function>

			<function pos:start="76:25" pos:end="79:25"><annotation pos:start="76:25" pos:end="76:33">@<name pos:start="76:26" pos:end="76:33">Override</name></annotation>
			<type pos:start="77:25" pos:end="77:35"><specifier pos:start="77:25" pos:end="77:30">public</specifier> <name pos:start="77:32" pos:end="77:35">void</name></type> <name pos:start="77:37" pos:end="77:46">updateMode</name><parameter_list pos:start="77:47" pos:end="77:59">(<parameter pos:start="77:48" pos:end="77:58"><decl pos:start="77:48" pos:end="77:58"><type pos:start="77:48" pos:end="77:53"><name pos:start="77:48" pos:end="77:53">String</name></type> <name pos:start="77:55" pos:end="77:58">mode</name></decl></parameter>)</parameter_list> <block pos:start="77:61" pos:end="79:25">{<block_content>
				
			</block_content>}</block></function>
        }</block></class></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="82:9" pos:end="86:20"><decl pos:start="82:9" pos:end="86:19"><type pos:start="82:9" pos:end="82:14"><name pos:start="82:9" pos:end="82:14">String</name></type> <name pos:start="82:16" pos:end="82:27">batteryState</name> <init pos:start="82:29" pos:end="86:19">= <expr pos:start="82:31" pos:end="86:19"><literal type="string" pos:start="82:31" pos:end="82:35">"{\n"</literal> <operator pos:start="82:37" pos:end="82:37">+</operator>
                <literal type="string" pos:start="83:17" pos:end="83:39">"\"voltage\": 12.19,\n"</literal> <operator pos:start="83:41" pos:end="83:41">+</operator>
                <literal type="string" pos:start="84:17" pos:end="84:39">"\"current\": 27.15,\n"</literal> <operator pos:start="84:41" pos:end="84:41">+</operator>
                <literal type="string" pos:start="85:17" pos:end="85:34">"\"level\": 100\n"</literal> <operator pos:start="85:36" pos:end="85:36">+</operator>
                <literal type="string" pos:start="86:17" pos:end="86:19">"}"</literal></expr></init></decl>;</decl_stmt>
        <decl_stmt pos:start="87:9" pos:end="104:20"><decl pos:start="87:9" pos:end="104:19"><type pos:start="87:9" pos:end="87:14"><name pos:start="87:9" pos:end="87:14">String</name></type> <name pos:start="87:16" pos:end="87:23">gsString</name> <init pos:start="87:25" pos:end="104:19">=<expr pos:start="87:26" pos:end="104:19"><literal type="string" pos:start="87:26" pos:end="87:30">"{\n"</literal> <operator pos:start="87:32" pos:end="87:32">+</operator>
                <literal type="string" pos:start="88:17" pos:end="88:40">"\"type\": \"state\",\n"</literal> <operator pos:start="88:42" pos:end="88:42">+</operator>
                <literal type="string" pos:start="89:17" pos:end="89:42">"\"uavid\":\"TESTING\",\n"</literal> <operator pos:start="89:44" pos:end="89:44">+</operator>
                <literal type="string" pos:start="90:17" pos:end="90:36">"\"sendtimestamp\":"</literal> <operator pos:start="90:38" pos:end="90:38">+</operator> <call pos:start="90:40" pos:end="90:65"><name pos:start="90:40" pos:end="90:63"><name pos:start="90:40" pos:end="90:45">System</name><operator pos:start="90:46" pos:end="90:46">.</operator><name pos:start="90:47" pos:end="90:63">currentTimeMillis</name></name><argument_list pos:start="90:64" pos:end="90:65">()</argument_list></call> <operator pos:start="90:67" pos:end="90:67">+</operator> <literal type="string" pos:start="90:69" pos:end="90:73">",\n"</literal> <operator pos:start="90:75" pos:end="90:75">+</operator>
                <literal type="string" pos:start="91:17" pos:end="91:30">"\"data\":{\n"</literal> <operator pos:start="91:32" pos:end="91:32">+</operator>
                <literal type="string" pos:start="92:17" pos:end="92:87">"\"location\": {\"x\": 41.519495, \"y\": -86.239937, \"z\": 266.19},\n"</literal> <operator pos:start="92:89" pos:end="92:89">+</operator>
                <literal type="string" pos:start="93:17" pos:end="93:74">"\"attitude\": {\"x\": 30.0, \"y\": 31.0, \"z\": 32.0},\n"</literal> <operator pos:start="93:76" pos:end="93:76">+</operator>
                <literal type="string" pos:start="94:17" pos:end="94:65">"\"velocity\": {\"x\": 3, \"y\": 4, \"z\": 0},\n"</literal> <operator pos:start="94:67" pos:end="94:67">+</operator>
                <literal type="string" pos:start="95:17" pos:end="95:43">"\"status\": \"ACTIVE\",\n"</literal> <operator pos:start="95:45" pos:end="95:45">+</operator>
                <literal type="string" pos:start="96:17" pos:end="96:47">"\"heading\": 53.1301025195,\n"</literal> <operator pos:start="96:49" pos:end="96:49">+</operator>
                <literal type="string" pos:start="97:17" pos:end="97:36">"\"airspeed\": 5,\n"</literal> <operator pos:start="97:38" pos:end="97:38">+</operator>
                <literal type="string" pos:start="98:17" pos:end="98:39">"\"groundspeed\": 5,\n"</literal> <operator pos:start="98:41" pos:end="98:41">+</operator>
                <literal type="string" pos:start="99:17" pos:end="99:36">"\"armed\": true,\n"</literal> <operator pos:start="99:38" pos:end="99:38">+</operator>
                <literal type="string" pos:start="100:17" pos:end="100:38">"\"armable\": true,\n"</literal> <operator pos:start="100:40" pos:end="100:40">+</operator>
                <literal type="string" pos:start="101:17" pos:end="101:41">"\"mode\": \"GUIDED\",\n"</literal> <operator pos:start="101:43" pos:end="101:43">+</operator>
                <literal type="string" pos:start="102:17" pos:end="102:37">"\"batterystatus\": "</literal> <operator pos:start="102:39" pos:end="102:39">+</operator> <name pos:start="102:41" pos:end="102:52">batteryState</name> <operator pos:start="102:54" pos:end="102:54">+</operator> <literal type="string" pos:start="102:56" pos:end="102:59">"\n"</literal> <operator pos:start="102:61" pos:end="102:61">+</operator>
                <literal type="string" pos:start="103:17" pos:end="103:21">"}\n"</literal> <operator pos:start="103:23" pos:end="103:23">+</operator>
                <literal type="string" pos:start="104:17" pos:end="104:19">"}"</literal></expr></init></decl>;</decl_stmt>
        <decl_stmt pos:start="105:9" pos:end="105:87"><decl pos:start="105:9" pos:end="105:86"><type pos:start="105:9" pos:end="105:29"><specifier pos:start="105:9" pos:end="105:13">final</specifier> <name pos:start="105:15" pos:end="105:29">UAVStateMessage</name></type> <name pos:start="105:31" pos:end="105:31">x</name> <init pos:start="105:33" pos:end="105:86">= <expr pos:start="105:35" pos:end="105:86"><operator pos:start="105:35" pos:end="105:35">(</operator><name pos:start="105:36" pos:end="105:50">UAVStateMessage</name><operator pos:start="105:51" pos:end="105:51">)</operator> <call pos:start="105:53" pos:end="105:86"><name pos:start="105:53" pos:end="105:76"><name pos:start="105:53" pos:end="105:69">UAVMessageFactory</name><operator pos:start="105:70" pos:end="105:70">.</operator><name pos:start="105:71" pos:end="105:76">create</name></name><argument_list pos:start="105:77" pos:end="105:86">(<argument pos:start="105:78" pos:end="105:85"><expr pos:start="105:78" pos:end="105:85"><name pos:start="105:78" pos:end="105:85">gsString</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <expr_stmt pos:start="106:9" pos:end="106:23"><expr pos:start="106:9" pos:end="106:22"><call pos:start="106:9" pos:end="106:22"><name pos:start="106:9" pos:end="106:19"><name pos:start="106:9" pos:end="106:13">queue</name><operator pos:start="106:14" pos:end="106:14">.</operator><name pos:start="106:15" pos:end="106:19">offer</name></name><argument_list pos:start="106:20" pos:end="106:22">(<argument pos:start="106:21" pos:end="106:21"><expr pos:start="106:21" pos:end="106:21"><name pos:start="106:21" pos:end="106:21">x</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt pos:start="107:9" pos:end="107:85"><expr pos:start="107:9" pos:end="107:84"><name pos:start="107:9" pos:end="107:34"><name pos:start="107:9" pos:end="107:23">dispatchWrapper</name><operator pos:start="107:24" pos:end="107:24">.</operator><name pos:start="107:25" pos:end="107:34">dispatcher</name></name> <operator pos:start="107:36" pos:end="107:36">=</operator> <operator pos:start="107:38" pos:end="107:40">new</operator> <call pos:start="107:42" pos:end="107:84"><name pos:start="107:42" pos:end="107:61">StatusDispatchThread</name><argument_list pos:start="107:62" pos:end="107:84">(<argument pos:start="107:63" pos:end="107:67"><expr pos:start="107:63" pos:end="107:67"><name pos:start="107:63" pos:end="107:67">queue</name></expr></argument>, <argument pos:start="107:70" pos:end="107:83"><expr pos:start="107:70" pos:end="107:83"><name pos:start="107:70" pos:end="107:83">updateNotifier</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt pos:start="108:9" pos:end="108:42"><expr pos:start="108:9" pos:end="108:41"><call pos:start="108:9" pos:end="108:41"><name pos:start="108:9" pos:end="108:39"><name pos:start="108:9" pos:end="108:23">dispatchWrapper</name><operator pos:start="108:24" pos:end="108:24">.</operator><name pos:start="108:25" pos:end="108:34">dispatcher</name><operator pos:start="108:35" pos:end="108:35">.</operator><name pos:start="108:36" pos:end="108:39">call</name></name><argument_list pos:start="108:40" pos:end="108:41">()</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></function>
}</block></class>
</unit>
