<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="Java" filename="flatCode/DroneCollector.java" pos:tabs="8"><package pos:start="1:1" pos:end="1:49">package <name pos:start="1:9" pos:end="1:48"><name pos:start="1:9" pos:end="1:11">edu</name><operator pos:start="1:12" pos:end="1:12">.</operator><name pos:start="1:13" pos:end="1:14">nd</name><operator pos:start="1:15" pos:end="1:15">.</operator><name pos:start="1:16" pos:end="1:24">dronology</name><operator pos:start="1:25" pos:end="1:25">.</operator><name pos:start="1:26" pos:end="1:29">core</name><operator pos:start="1:30" pos:end="1:30">.</operator><name pos:start="1:31" pos:end="1:48">collisionavoidance</name></name>;</package>

<import pos:start="3:1" pos:end="3:50">import <name pos:start="3:8" pos:end="3:49"><name pos:start="3:8" pos:end="3:10">edu</name><operator pos:start="3:11" pos:end="3:11">.</operator><name pos:start="3:12" pos:end="3:13">nd</name><operator pos:start="3:14" pos:end="3:14">.</operator><name pos:start="3:15" pos:end="3:23">dronology</name><operator pos:start="3:24" pos:end="3:24">.</operator><name pos:start="3:25" pos:end="3:28">core</name><operator pos:start="3:29" pos:end="3:29">.</operator><name pos:start="3:30" pos:end="3:36">vehicle</name><operator pos:start="3:37" pos:end="3:37">.</operator><name pos:start="3:38" pos:end="3:49">ManagedDrone</name></name>;</import>

<import pos:start="5:1" pos:end="5:22">import <name pos:start="5:8" pos:end="5:21"><name pos:start="5:8" pos:end="5:11">java</name><operator pos:start="5:12" pos:end="5:12">.</operator><name pos:start="5:13" pos:end="5:16">util</name><operator pos:start="5:17" pos:end="5:17">.</operator><name pos:start="5:18" pos:end="5:21">List</name></name>;</import>

<comment type="block" format="javadoc" pos:start="7:1" pos:end="10:3">/**
 * I think of this as an agent who's one job is to find a list of ManagedDrones. The motivation for this to exist comes
 * from making it easier to isolate CollisionAvoidanceCheckTask under test.
 */</comment>
<interface pos:start="11:1" pos:end="13:1"><specifier pos:start="11:1" pos:end="11:6">public</specifier> interface <name pos:start="11:18" pos:end="11:31">DroneCollector</name> <block pos:start="11:33" pos:end="13:1">{
    <function_decl pos:start="12:5" pos:end="12:42"><type pos:start="12:5" pos:end="12:22"><name pos:start="12:5" pos:end="12:22"><name pos:start="12:5" pos:end="12:8">List</name><argument_list type="generic" pos:start="12:9" pos:end="12:22">&lt;<argument pos:start="12:10" pos:end="12:21"><name pos:start="12:10" pos:end="12:21">ManagedDrone</name></argument>&gt;</argument_list></name></type> <name pos:start="12:24" pos:end="12:39">getManagedDrones</name><parameter_list pos:start="12:40" pos:end="12:41">()</parameter_list>;</function_decl>
}</block></interface>
</unit>
