<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="Java" filename="flatCode/UAVTypeRegistrationXStreamPersistor.java" pos:tabs="8"><package pos:start="1:1" pos:end="1:60">package <name pos:start="1:9" pos:end="1:59"><name pos:start="1:9" pos:end="1:11">edu</name><operator pos:start="1:12" pos:end="1:12">.</operator><name pos:start="1:13" pos:end="1:14">nd</name><operator pos:start="1:15" pos:end="1:15">.</operator><name pos:start="1:16" pos:end="1:24">dronology</name><operator pos:start="1:25" pos:end="1:25">.</operator><name pos:start="1:26" pos:end="1:33">services</name><operator pos:start="1:34" pos:end="1:34">.</operator><name pos:start="1:35" pos:end="1:38">core</name><operator pos:start="1:39" pos:end="1:39">.</operator><name pos:start="1:40" pos:end="1:50">persistence</name><operator pos:start="1:51" pos:end="1:51">.</operator><name pos:start="1:52" pos:end="1:59">internal</name></name>;</package>

<import pos:start="3:1" pos:end="3:35">import <name pos:start="3:8" pos:end="3:34"><name pos:start="3:8" pos:end="3:11">java</name><operator pos:start="3:12" pos:end="3:12">.</operator><name pos:start="3:13" pos:end="3:14">io</name><operator pos:start="3:15" pos:end="3:15">.</operator><name pos:start="3:16" pos:end="3:34">BufferedInputStream</name></name>;</import>
<import pos:start="4:1" pos:end="4:36">import <name pos:start="4:8" pos:end="4:35"><name pos:start="4:8" pos:end="4:11">java</name><operator pos:start="4:12" pos:end="4:12">.</operator><name pos:start="4:13" pos:end="4:14">io</name><operator pos:start="4:15" pos:end="4:15">.</operator><name pos:start="4:16" pos:end="4:35">BufferedOutputStream</name></name>;</import>
<import pos:start="5:1" pos:end="5:30">import <name pos:start="5:8" pos:end="5:29"><name pos:start="5:8" pos:end="5:11">java</name><operator pos:start="5:12" pos:end="5:12">.</operator><name pos:start="5:13" pos:end="5:14">io</name><operator pos:start="5:15" pos:end="5:15">.</operator><name pos:start="5:16" pos:end="5:29">BufferedReader</name></name>;</import>
<import pos:start="6:1" pos:end="6:30">import <name pos:start="6:8" pos:end="6:29"><name pos:start="6:8" pos:end="6:11">java</name><operator pos:start="6:12" pos:end="6:12">.</operator><name pos:start="6:13" pos:end="6:14">io</name><operator pos:start="6:15" pos:end="6:15">.</operator><name pos:start="6:16" pos:end="6:29">BufferedWriter</name></name>;</import>
<import pos:start="7:1" pos:end="7:27">import <name pos:start="7:8" pos:end="7:26"><name pos:start="7:8" pos:end="7:11">java</name><operator pos:start="7:12" pos:end="7:12">.</operator><name pos:start="7:13" pos:end="7:14">io</name><operator pos:start="7:15" pos:end="7:15">.</operator><name pos:start="7:16" pos:end="7:26">IOException</name></name>;</import>
<import pos:start="8:1" pos:end="8:27">import <name pos:start="8:8" pos:end="8:26"><name pos:start="8:8" pos:end="8:11">java</name><operator pos:start="8:12" pos:end="8:12">.</operator><name pos:start="8:13" pos:end="8:14">io</name><operator pos:start="8:15" pos:end="8:15">.</operator><name pos:start="8:16" pos:end="8:26">InputStream</name></name>;</import>
<import pos:start="9:1" pos:end="9:33">import <name pos:start="9:8" pos:end="9:32"><name pos:start="9:8" pos:end="9:11">java</name><operator pos:start="9:12" pos:end="9:12">.</operator><name pos:start="9:13" pos:end="9:14">io</name><operator pos:start="9:15" pos:end="9:15">.</operator><name pos:start="9:16" pos:end="9:32">InputStreamReader</name></name>;</import>
<import pos:start="10:1" pos:end="10:28">import <name pos:start="10:8" pos:end="10:27"><name pos:start="10:8" pos:end="10:11">java</name><operator pos:start="10:12" pos:end="10:12">.</operator><name pos:start="10:13" pos:end="10:14">io</name><operator pos:start="10:15" pos:end="10:15">.</operator><name pos:start="10:16" pos:end="10:27">OutputStream</name></name>;</import>
<import pos:start="11:1" pos:end="11:34">import <name pos:start="11:8" pos:end="11:33"><name pos:start="11:8" pos:end="11:11">java</name><operator pos:start="11:12" pos:end="11:12">.</operator><name pos:start="11:13" pos:end="11:14">io</name><operator pos:start="11:15" pos:end="11:15">.</operator><name pos:start="11:16" pos:end="11:33">OutputStreamWriter</name></name>;</import>
<import pos:start="12:1" pos:end="12:32">import <name pos:start="12:8" pos:end="12:31"><name pos:start="12:8" pos:end="12:11">java</name><operator pos:start="12:12" pos:end="12:12">.</operator><name pos:start="12:13" pos:end="12:15">nio</name><operator pos:start="12:16" pos:end="12:16">.</operator><name pos:start="12:17" pos:end="12:23">charset</name><operator pos:start="12:24" pos:end="12:24">.</operator><name pos:start="12:25" pos:end="12:31">Charset</name></name>;</import>
<import pos:start="13:1" pos:end="13:37">import <name pos:start="13:8" pos:end="13:36"><name pos:start="13:8" pos:end="13:11">java</name><operator pos:start="13:12" pos:end="13:12">.</operator><name pos:start="13:13" pos:end="13:16">util</name><operator pos:start="13:17" pos:end="13:17">.</operator><name pos:start="13:18" pos:end="13:20">zip</name><operator pos:start="13:21" pos:end="13:21">.</operator><name pos:start="13:22" pos:end="13:36">GZIPInputStream</name></name>;</import>
<import pos:start="14:1" pos:end="14:38">import <name pos:start="14:8" pos:end="14:37"><name pos:start="14:8" pos:end="14:11">java</name><operator pos:start="14:12" pos:end="14:12">.</operator><name pos:start="14:13" pos:end="14:16">util</name><operator pos:start="14:17" pos:end="14:17">.</operator><name pos:start="14:18" pos:end="14:20">zip</name><operator pos:start="14:21" pos:end="14:21">.</operator><name pos:start="14:22" pos:end="14:37">GZIPOutputStream</name></name>;</import>

<import pos:start="16:1" pos:end="16:40">import <name pos:start="16:8" pos:end="16:39"><name pos:start="16:8" pos:end="16:10">com</name><operator pos:start="16:11" pos:end="16:11">.</operator><name pos:start="16:12" pos:end="16:23">thoughtworks</name><operator pos:start="16:24" pos:end="16:24">.</operator><name pos:start="16:25" pos:end="16:31">xstream</name><operator pos:start="16:32" pos:end="16:32">.</operator><name pos:start="16:33" pos:end="16:39">XStream</name></name>;</import>
<import pos:start="17:1" pos:end="17:49">import <name pos:start="17:8" pos:end="17:48"><name pos:start="17:8" pos:end="17:10">com</name><operator pos:start="17:11" pos:end="17:11">.</operator><name pos:start="17:12" pos:end="17:23">thoughtworks</name><operator pos:start="17:24" pos:end="17:24">.</operator><name pos:start="17:25" pos:end="17:31">xstream</name><operator pos:start="17:32" pos:end="17:32">.</operator><name pos:start="17:33" pos:end="17:34">io</name><operator pos:start="17:35" pos:end="17:35">.</operator><name pos:start="17:36" pos:end="17:38">xml</name><operator pos:start="17:39" pos:end="17:39">.</operator><name pos:start="17:40" pos:end="17:48">XppDriver</name></name>;</import>

<import pos:start="19:1" pos:end="19:61">import <name pos:start="19:8" pos:end="19:60"><name pos:start="19:8" pos:end="19:10">edu</name><operator pos:start="19:11" pos:end="19:11">.</operator><name pos:start="19:12" pos:end="19:13">nd</name><operator pos:start="19:14" pos:end="19:14">.</operator><name pos:start="19:15" pos:end="19:23">dronology</name><operator pos:start="19:24" pos:end="19:24">.</operator><name pos:start="19:25" pos:end="19:32">services</name><operator pos:start="19:33" pos:end="19:33">.</operator><name pos:start="19:34" pos:end="19:37">core</name><operator pos:start="19:38" pos:end="19:38">.</operator><name pos:start="19:39" pos:end="19:43">items</name><operator pos:start="19:44" pos:end="19:44">.</operator><name pos:start="19:45" pos:end="19:60">IUAVRegistration</name></name>;</import>
<import pos:start="20:1" pos:end="20:65">import <name pos:start="20:8" pos:end="20:64"><name pos:start="20:8" pos:end="20:10">edu</name><operator pos:start="20:11" pos:end="20:11">.</operator><name pos:start="20:12" pos:end="20:13">nd</name><operator pos:start="20:14" pos:end="20:14">.</operator><name pos:start="20:15" pos:end="20:23">dronology</name><operator pos:start="20:24" pos:end="20:24">.</operator><name pos:start="20:25" pos:end="20:32">services</name><operator pos:start="20:33" pos:end="20:33">.</operator><name pos:start="20:34" pos:end="20:37">core</name><operator pos:start="20:38" pos:end="20:38">.</operator><name pos:start="20:39" pos:end="20:43">items</name><operator pos:start="20:44" pos:end="20:44">.</operator><name pos:start="20:45" pos:end="20:64">IUAVTypeRegistration</name></name>;</import>
<import pos:start="21:1" pos:end="21:75">import <name pos:start="21:8" pos:end="21:74"><name pos:start="21:8" pos:end="21:10">edu</name><operator pos:start="21:11" pos:end="21:11">.</operator><name pos:start="21:12" pos:end="21:13">nd</name><operator pos:start="21:14" pos:end="21:14">.</operator><name pos:start="21:15" pos:end="21:23">dronology</name><operator pos:start="21:24" pos:end="21:24">.</operator><name pos:start="21:25" pos:end="21:32">services</name><operator pos:start="21:33" pos:end="21:33">.</operator><name pos:start="21:34" pos:end="21:37">core</name><operator pos:start="21:38" pos:end="21:38">.</operator><name pos:start="21:39" pos:end="21:49">persistence</name><operator pos:start="21:50" pos:end="21:50">.</operator><name pos:start="21:51" pos:end="21:74">DronologyPersistenceUtil</name></name>;</import>
<import pos:start="22:1" pos:end="22:70">import <name pos:start="22:8" pos:end="22:69"><name pos:start="22:8" pos:end="22:10">edu</name><operator pos:start="22:11" pos:end="22:11">.</operator><name pos:start="22:12" pos:end="22:13">nd</name><operator pos:start="22:14" pos:end="22:14">.</operator><name pos:start="22:15" pos:end="22:23">dronology</name><operator pos:start="22:24" pos:end="22:24">.</operator><name pos:start="22:25" pos:end="22:32">services</name><operator pos:start="22:33" pos:end="22:33">.</operator><name pos:start="22:34" pos:end="22:37">core</name><operator pos:start="22:38" pos:end="22:38">.</operator><name pos:start="22:39" pos:end="22:49">persistence</name><operator pos:start="22:50" pos:end="22:50">.</operator><name pos:start="22:51" pos:end="22:69">IPersistenceManager</name></name>;</import>
<import pos:start="23:1" pos:end="23:71">import <name pos:start="23:8" pos:end="23:70"><name pos:start="23:8" pos:end="23:10">edu</name><operator pos:start="23:11" pos:end="23:11">.</operator><name pos:start="23:12" pos:end="23:13">nd</name><operator pos:start="23:14" pos:end="23:14">.</operator><name pos:start="23:15" pos:end="23:23">dronology</name><operator pos:start="23:24" pos:end="23:24">.</operator><name pos:start="23:25" pos:end="23:32">services</name><operator pos:start="23:33" pos:end="23:33">.</operator><name pos:start="23:34" pos:end="23:37">core</name><operator pos:start="23:38" pos:end="23:38">.</operator><name pos:start="23:39" pos:end="23:49">persistence</name><operator pos:start="23:50" pos:end="23:50">.</operator><name pos:start="23:51" pos:end="23:70">PersistenceException</name></name>;</import>
<import pos:start="24:1" pos:end="24:30">import <name pos:start="24:8" pos:end="24:29"><name pos:start="24:8" pos:end="24:10">net</name><operator pos:start="24:11" pos:end="24:11">.</operator><name pos:start="24:12" pos:end="24:13">mv</name><operator pos:start="24:14" pos:end="24:14">.</operator><name pos:start="24:15" pos:end="24:21">logging</name><operator pos:start="24:22" pos:end="24:22">.</operator><name pos:start="24:23" pos:end="24:29">ILogger</name></name>;</import>
<import pos:start="25:1" pos:end="25:37">import <name pos:start="25:8" pos:end="25:36"><name pos:start="25:8" pos:end="25:10">net</name><operator pos:start="25:11" pos:end="25:11">.</operator><name pos:start="25:12" pos:end="25:13">mv</name><operator pos:start="25:14" pos:end="25:14">.</operator><name pos:start="25:15" pos:end="25:21">logging</name><operator pos:start="25:22" pos:end="25:22">.</operator><name pos:start="25:23" pos:end="25:36">LoggerProvider</name></name>;</import>

<class pos:start="27:1" pos:end="141:1"><specifier pos:start="27:1" pos:end="27:6">public</specifier> class <name pos:start="27:14" pos:end="27:48">UAVTypeRegistrationXStreamPersistor</name> <super_list pos:start="27:50" pos:end="27:101"><implements pos:start="27:50" pos:end="27:101">implements <super pos:start="27:61" pos:end="27:101"><name pos:start="27:61" pos:end="27:101"><name pos:start="27:61" pos:end="27:79">IPersistenceManager</name><argument_list type="generic" pos:start="27:80" pos:end="27:101">&lt;<argument pos:start="27:81" pos:end="27:100"><name pos:start="27:81" pos:end="27:100">IUAVTypeRegistration</name></argument>&gt;</argument_list></name></super></implements></super_list> <block pos:start="27:103" pos:end="141:1">{

	<decl_stmt pos:start="29:9" pos:end="29:76"><decl pos:start="29:9" pos:end="29:75"><type pos:start="29:9" pos:end="29:36"><specifier pos:start="29:9" pos:end="29:15">private</specifier> <specifier pos:start="29:17" pos:end="29:22">static</specifier> <specifier pos:start="29:24" pos:end="29:28">final</specifier> <name pos:start="29:30" pos:end="29:36">XStream</name></type> <name pos:start="29:38" pos:end="29:44">xstream</name> <init pos:start="29:46" pos:end="29:75">= <expr pos:start="29:48" pos:end="29:75"><operator pos:start="29:48" pos:end="29:50">new</operator> <call pos:start="29:52" pos:end="29:75"><name pos:start="29:52" pos:end="29:58">XStream</name><argument_list pos:start="29:59" pos:end="29:75">(<argument pos:start="29:60" pos:end="29:74"><expr pos:start="29:60" pos:end="29:74"><operator pos:start="29:60" pos:end="29:62">new</operator> <call pos:start="29:64" pos:end="29:74"><name pos:start="29:64" pos:end="29:72">XppDriver</name><argument_list pos:start="29:73" pos:end="29:74">()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<decl_stmt pos:start="30:9" pos:end="30:108"><decl pos:start="30:9" pos:end="30:107"><type pos:start="30:9" pos:end="30:30"><specifier pos:start="30:9" pos:end="30:15">private</specifier> <specifier pos:start="30:17" pos:end="30:22">static</specifier> <name pos:start="30:24" pos:end="30:30">ILogger</name></type> <name pos:start="30:32" pos:end="30:37">LOGGER</name> <init pos:start="30:39" pos:end="30:107">= <expr pos:start="30:41" pos:end="30:107"><call pos:start="30:41" pos:end="30:107"><name pos:start="30:41" pos:end="30:64"><name pos:start="30:41" pos:end="30:54">LoggerProvider</name><operator pos:start="30:55" pos:end="30:55">.</operator><name pos:start="30:56" pos:end="30:64">getLogger</name></name><argument_list pos:start="30:65" pos:end="30:107">(<argument pos:start="30:66" pos:end="30:106"><expr pos:start="30:66" pos:end="30:106"><name pos:start="30:66" pos:end="30:106"><name pos:start="30:66" pos:end="30:100">UAVTypeRegistrationXStreamPersistor</name><operator pos:start="30:101" pos:end="30:101">.</operator><name pos:start="30:102" pos:end="30:106">class</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

	<decl_stmt pos:start="32:9" pos:end="32:52"><decl pos:start="32:9" pos:end="32:51"><type pos:start="32:9" pos:end="32:28"><specifier pos:start="32:9" pos:end="32:14">static</specifier> <specifier pos:start="32:16" pos:end="32:20">final</specifier> <name pos:start="32:22" pos:end="32:28">boolean</name></type> <name pos:start="32:30" pos:end="32:43">useCompression</name> <init pos:start="32:45" pos:end="32:51">= <expr pos:start="32:47" pos:end="32:51"><literal type="boolean" pos:start="32:47" pos:end="32:51">false</literal></expr></init></decl>;</decl_stmt>

	<function pos:start="34:9" pos:end="45:9"><annotation pos:start="34:9" pos:end="34:17">@<name pos:start="34:10" pos:end="34:17">Override</name></annotation>
	<type pos:start="35:9" pos:end="35:35"><specifier pos:start="35:9" pos:end="35:14">public</specifier> <name pos:start="35:16" pos:end="35:35">IUAVTypeRegistration</name></type> <name pos:start="35:37" pos:end="35:40">open</name><parameter_list pos:start="35:41" pos:end="35:57">(<parameter pos:start="35:42" pos:end="35:56"><decl pos:start="35:42" pos:end="35:56"><type pos:start="35:42" pos:end="35:52"><name pos:start="35:42" pos:end="35:52">InputStream</name></type> <name pos:start="35:54" pos:end="35:56">fin</name></decl></parameter>)</parameter_list> <throws pos:start="35:59" pos:end="35:85">throws <argument pos:start="35:66" pos:end="35:85"><expr pos:start="35:66" pos:end="35:85"><name pos:start="35:66" pos:end="35:85">PersistenceException</name></expr></argument></throws> <block pos:start="35:87" pos:end="45:9">{<block_content pos:start="36:17" pos:end="44:17">
		<expr_stmt pos:start="36:17" pos:end="36:67"><expr pos:start="36:17" pos:end="36:66"><call pos:start="36:17" pos:end="36:66"><name pos:start="36:17" pos:end="36:57"><name pos:start="36:17" pos:end="36:40">DronologyPersistenceUtil</name><operator pos:start="36:41" pos:end="36:41">.</operator><name pos:start="36:42" pos:end="36:57">preprocessStream</name></name><argument_list pos:start="36:58" pos:end="36:66">(<argument pos:start="36:59" pos:end="36:65"><expr pos:start="36:59" pos:end="36:65"><name pos:start="36:59" pos:end="36:65">xstream</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<comment type="line" pos:start="37:9" pos:end="37:43">//	 xstream.setMode(XStream.);</comment>
		<comment type="line" pos:start="38:17" pos:end="38:88">// xstream.addImplicitCollection(ImplMMEArtifactType.class, "children");</comment>
		
		<if_stmt pos:start="40:17" pos:end="44:17"><if pos:start="40:17" pos:end="42:17">if <condition pos:start="40:20" pos:end="40:35">(<expr pos:start="40:21" pos:end="40:34"><name pos:start="40:21" pos:end="40:34">useCompression</name></expr>)</condition> <block pos:start="40:37" pos:end="42:17">{<block_content pos:start="41:25" pos:end="41:59">
			<return pos:start="41:25" pos:end="41:59">return <expr pos:start="41:32" pos:end="41:58"><call pos:start="41:32" pos:end="41:58"><name pos:start="41:32" pos:end="41:53">loadedCompressedStream</name><argument_list pos:start="41:54" pos:end="41:58">(<argument pos:start="41:55" pos:end="41:57"><expr pos:start="41:55" pos:end="41:57"><name pos:start="41:55" pos:end="41:57">fin</name></expr></argument>)</argument_list></call></expr>;</return>
		</block_content>}</block></if> <else pos:start="42:19" pos:end="44:17">else <block pos:start="42:24" pos:end="44:17">{<block_content pos:start="43:25" pos:end="43:59">
			<return pos:start="43:25" pos:end="43:59">return <expr pos:start="43:32" pos:end="43:58"><call pos:start="43:32" pos:end="43:58"><name pos:start="43:32" pos:end="43:53">loadUncompressedStream</name><argument_list pos:start="43:54" pos:end="43:58">(<argument pos:start="43:55" pos:end="43:57"><expr pos:start="43:55" pos:end="43:57"><name pos:start="43:55" pos:end="43:57">fin</name></expr></argument>)</argument_list></call></expr>;</return>
		</block_content>}</block></else></if_stmt>
	</block_content>}</block></function>

	<function pos:start="47:9" pos:end="63:9"><type pos:start="47:9" pos:end="47:36"><specifier pos:start="47:9" pos:end="47:15">private</specifier> <name pos:start="47:17" pos:end="47:36">IUAVTypeRegistration</name></type> <name pos:start="47:38" pos:end="47:59">loadUncompressedStream</name><parameter_list pos:start="47:60" pos:end="47:76">(<parameter pos:start="47:61" pos:end="47:75"><decl pos:start="47:61" pos:end="47:75"><type pos:start="47:61" pos:end="47:71"><name pos:start="47:61" pos:end="47:71">InputStream</name></type> <name pos:start="47:73" pos:end="47:75">fin</name></decl></parameter>)</parameter_list> <throws pos:start="47:78" pos:end="47:104">throws <argument pos:start="47:85" pos:end="47:104"><expr pos:start="47:85" pos:end="47:104"><name pos:start="47:85" pos:end="47:104">PersistenceException</name></expr></argument></throws> <block pos:start="47:106" pos:end="63:9">{<block_content pos:start="48:17" pos:end="62:17">
		<try pos:start="48:17" pos:end="62:17">try <block pos:start="48:21" pos:end="52:17">{<block_content pos:start="49:25" pos:end="51:60">
			<decl_stmt pos:start="49:25" pos:end="49:129"><decl pos:start="49:25" pos:end="49:128"><type pos:start="49:25" pos:end="49:41"><name pos:start="49:25" pos:end="49:41">InputStreamReader</name></type> <name pos:start="49:43" pos:end="49:48">reader</name> <init pos:start="49:50" pos:end="49:128">= <expr pos:start="49:52" pos:end="49:128"><operator pos:start="49:52" pos:end="49:54">new</operator> <call pos:start="49:56" pos:end="49:128"><name pos:start="49:56" pos:end="49:72">InputStreamReader</name><argument_list pos:start="49:73" pos:end="49:128">(<argument pos:start="49:74" pos:end="49:101"><expr pos:start="49:74" pos:end="49:101"><operator pos:start="49:74" pos:end="49:76">new</operator> <call pos:start="49:78" pos:end="49:101"><name pos:start="49:78" pos:end="49:96">BufferedInputStream</name><argument_list pos:start="49:97" pos:end="49:101">(<argument pos:start="49:98" pos:end="49:100"><expr pos:start="49:98" pos:end="49:100"><name pos:start="49:98" pos:end="49:100">fin</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="49:104" pos:end="49:127"><expr pos:start="49:104" pos:end="49:127"><call pos:start="49:104" pos:end="49:127"><name pos:start="49:104" pos:end="49:118"><name pos:start="49:104" pos:end="49:110">Charset</name><operator pos:start="49:111" pos:end="49:111">.</operator><name pos:start="49:112" pos:end="49:118">forName</name></name><argument_list pos:start="49:119" pos:end="49:127">(<argument pos:start="49:120" pos:end="49:126"><expr pos:start="49:120" pos:end="49:126"><literal type="string" pos:start="49:120" pos:end="49:126">"UTF-8"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<decl_stmt pos:start="50:25" pos:end="50:63"><decl pos:start="50:25" pos:end="50:62"><type pos:start="50:25" pos:end="50:30"><name pos:start="50:25" pos:end="50:30">Object</name></type> <name pos:start="50:32" pos:end="50:36">model</name> <init pos:start="50:38" pos:end="50:62">= <expr pos:start="50:40" pos:end="50:62"><call pos:start="50:40" pos:end="50:62"><name pos:start="50:40" pos:end="50:54"><name pos:start="50:40" pos:end="50:46">xstream</name><operator pos:start="50:47" pos:end="50:47">.</operator><name pos:start="50:48" pos:end="50:54">fromXML</name></name><argument_list pos:start="50:55" pos:end="50:62">(<argument pos:start="50:56" pos:end="50:61"><expr pos:start="50:56" pos:end="50:61"><name pos:start="50:56" pos:end="50:61">reader</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<return pos:start="51:25" pos:end="51:60">return <expr pos:start="51:32" pos:end="51:59"><operator pos:start="51:32" pos:end="51:32">(</operator><name pos:start="51:33" pos:end="51:52">IUAVTypeRegistration</name><operator pos:start="51:53" pos:end="51:53">)</operator> <name pos:start="51:55" pos:end="51:59">model</name></expr>;</return>
		</block_content>}</block> <catch pos:start="52:19" pos:end="54:17">catch <parameter_list pos:start="52:25" pos:end="52:37">(<parameter pos:start="52:26" pos:end="52:36"><decl pos:start="52:26" pos:end="52:36"><type pos:start="52:26" pos:end="52:36"><name pos:start="52:26" pos:end="52:34">Exception</name></type> <name pos:start="52:36" pos:end="52:36">e</name></decl></parameter>)</parameter_list> <block pos:start="52:39" pos:end="54:17">{<block_content pos:start="53:25" pos:end="53:58">
			<throw pos:start="53:25" pos:end="53:58">throw <expr pos:start="53:31" pos:end="53:57"><operator pos:start="53:31" pos:end="53:33">new</operator> <call pos:start="53:35" pos:end="53:57"><name pos:start="53:35" pos:end="53:54">PersistenceException</name><argument_list pos:start="53:55" pos:end="53:57">(<argument pos:start="53:56" pos:end="53:56"><expr pos:start="53:56" pos:end="53:56"><name pos:start="53:56" pos:end="53:56">e</name></expr></argument>)</argument_list></call></expr>;</throw>
		</block_content>}</block></catch> <finally pos:start="54:19" pos:end="62:17">finally <block pos:start="54:27" pos:end="62:17">{<block_content pos:start="55:25" pos:end="61:25">
			<try pos:start="55:25" pos:end="61:25">try <block pos:start="55:29" pos:end="59:25">{<block_content pos:start="56:33" pos:end="58:33">
				<if_stmt pos:start="56:33" pos:end="58:33"><if pos:start="56:33" pos:end="58:33">if <condition pos:start="56:36" pos:end="56:48">(<expr pos:start="56:37" pos:end="56:47"><name pos:start="56:37" pos:end="56:39">fin</name> <operator pos:start="56:41" pos:end="56:42">!=</operator> <literal type="null" pos:start="56:44" pos:end="56:47">null</literal></expr>)</condition> <block pos:start="56:50" pos:end="58:33">{<block_content pos:start="57:41" pos:end="57:52">
					<expr_stmt pos:start="57:41" pos:end="57:52"><expr pos:start="57:41" pos:end="57:51"><call pos:start="57:41" pos:end="57:51"><name pos:start="57:41" pos:end="57:49"><name pos:start="57:41" pos:end="57:43">fin</name><operator pos:start="57:44" pos:end="57:44">.</operator><name pos:start="57:45" pos:end="57:49">close</name></name><argument_list pos:start="57:50" pos:end="57:51">()</argument_list></call></expr>;</expr_stmt>
				</block_content>}</block></if></if_stmt>
			</block_content>}</block> <catch pos:start="59:27" pos:end="61:25">catch <parameter_list pos:start="59:33" pos:end="59:45">(<parameter pos:start="59:34" pos:end="59:44"><decl pos:start="59:34" pos:end="59:44"><type pos:start="59:34" pos:end="59:44"><name pos:start="59:34" pos:end="59:42">Exception</name></type> <name pos:start="59:44" pos:end="59:44">e</name></decl></parameter>)</parameter_list> <block pos:start="59:47" pos:end="61:25">{<block_content pos:start="60:33" pos:end="60:48">
				<expr_stmt pos:start="60:33" pos:end="60:48"><expr pos:start="60:33" pos:end="60:47"><call pos:start="60:33" pos:end="60:47"><name pos:start="60:33" pos:end="60:44"><name pos:start="60:33" pos:end="60:38">LOGGER</name><operator pos:start="60:39" pos:end="60:39">.</operator><name pos:start="60:40" pos:end="60:44">error</name></name><argument_list pos:start="60:45" pos:end="60:47">(<argument pos:start="60:46" pos:end="60:46"><expr pos:start="60:46" pos:end="60:46"><name pos:start="60:46" pos:end="60:46">e</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			</block_content>}</block></catch></try>
		</block_content>}</block></finally></try>
	</block_content>}</block></function>

	<function pos:start="65:9" pos:end="87:9"><type pos:start="65:9" pos:end="65:36"><specifier pos:start="65:9" pos:end="65:15">private</specifier> <name pos:start="65:17" pos:end="65:36">IUAVTypeRegistration</name></type> <name pos:start="65:38" pos:end="65:59">loadedCompressedStream</name><parameter_list pos:start="65:60" pos:end="65:76">(<parameter pos:start="65:61" pos:end="65:75"><decl pos:start="65:61" pos:end="65:75"><type pos:start="65:61" pos:end="65:71"><name pos:start="65:61" pos:end="65:71">InputStream</name></type> <name pos:start="65:73" pos:end="65:75">fin</name></decl></parameter>)</parameter_list> <throws pos:start="65:78" pos:end="65:104">throws <argument pos:start="65:85" pos:end="65:104"><expr pos:start="65:85" pos:end="65:104"><name pos:start="65:85" pos:end="65:104">PersistenceException</name></expr></argument></throws> <block pos:start="65:106" pos:end="87:9">{<block_content pos:start="66:17" pos:end="86:17">
		<decl_stmt pos:start="66:17" pos:end="66:39"><decl pos:start="66:17" pos:end="66:38"><type pos:start="66:17" pos:end="66:27"><name pos:start="66:17" pos:end="66:27">InputStream</name></type> <name pos:start="66:29" pos:end="66:31">zIn</name> <init pos:start="66:33" pos:end="66:38">= <expr pos:start="66:35" pos:end="66:38"><literal type="null" pos:start="66:35" pos:end="66:38">null</literal></expr></init></decl>;</decl_stmt>
		<try pos:start="67:17" pos:end="86:17">try <block pos:start="67:21" pos:end="72:17">{<block_content pos:start="68:25" pos:end="71:60">
			<expr_stmt pos:start="68:25" pos:end="68:55"><expr pos:start="68:25" pos:end="68:54"><name pos:start="68:25" pos:end="68:27">zIn</name> <operator pos:start="68:29" pos:end="68:29">=</operator> <operator pos:start="68:31" pos:end="68:33">new</operator> <call pos:start="68:35" pos:end="68:54"><name pos:start="68:35" pos:end="68:49">GZIPInputStream</name><argument_list pos:start="68:50" pos:end="68:54">(<argument pos:start="68:51" pos:end="68:53"><expr pos:start="68:51" pos:end="68:53"><name pos:start="68:51" pos:end="68:53">fin</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<decl_stmt pos:start="69:25" pos:end="69:112"><decl pos:start="69:25" pos:end="69:111"><type pos:start="69:25" pos:end="69:30"><name pos:start="69:25" pos:end="69:30">Object</name></type> <name pos:start="69:32" pos:end="69:36">model</name> <init pos:start="69:38" pos:end="69:111">= <expr pos:start="69:40" pos:end="69:111"><call pos:start="69:40" pos:end="69:111"><name pos:start="69:40" pos:end="69:54"><name pos:start="69:40" pos:end="69:46">xstream</name><operator pos:start="69:47" pos:end="69:47">.</operator><name pos:start="69:48" pos:end="69:54">fromXML</name></name><argument_list pos:start="69:55" pos:end="69:111">(<argument pos:start="69:56" pos:end="69:110"><expr pos:start="69:56" pos:end="69:110"><operator pos:start="69:56" pos:end="69:58">new</operator> <call pos:start="69:60" pos:end="69:110"><name pos:start="69:60" pos:end="69:73">BufferedReader</name><argument_list pos:start="69:74" pos:end="69:110">(<argument pos:start="69:75" pos:end="69:109"><expr pos:start="69:75" pos:end="69:109"><operator pos:start="69:75" pos:end="69:77">new</operator> <call pos:start="69:79" pos:end="69:109"><name pos:start="69:79" pos:end="69:95">InputStreamReader</name><argument_list pos:start="69:96" pos:end="69:109">(<argument pos:start="69:97" pos:end="69:99"><expr pos:start="69:97" pos:end="69:99"><name pos:start="69:97" pos:end="69:99">zIn</name></expr></argument>, <argument pos:start="69:102" pos:end="69:108"><expr pos:start="69:102" pos:end="69:108"><literal type="string" pos:start="69:102" pos:end="69:108">"UTF-8"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

			<return pos:start="71:25" pos:end="71:60">return <expr pos:start="71:32" pos:end="71:59"><operator pos:start="71:32" pos:end="71:32">(</operator><name pos:start="71:33" pos:end="71:52">IUAVTypeRegistration</name><operator pos:start="71:53" pos:end="71:53">)</operator> <name pos:start="71:55" pos:end="71:59">model</name></expr>;</return>
		</block_content>}</block> <catch pos:start="72:19" pos:end="74:17">catch <parameter_list pos:start="72:25" pos:end="72:39">(<parameter pos:start="72:26" pos:end="72:38"><decl pos:start="72:26" pos:end="72:38"><type pos:start="72:26" pos:end="72:38"><name pos:start="72:26" pos:end="72:36">IOException</name></type> <name pos:start="72:38" pos:end="72:38">e</name></decl></parameter>)</parameter_list> <block pos:start="72:41" pos:end="74:17">{<block_content pos:start="73:25" pos:end="73:58">
			<throw pos:start="73:25" pos:end="73:58">throw <expr pos:start="73:31" pos:end="73:57"><operator pos:start="73:31" pos:end="73:33">new</operator> <call pos:start="73:35" pos:end="73:57"><name pos:start="73:35" pos:end="73:54">PersistenceException</name><argument_list pos:start="73:55" pos:end="73:57">(<argument pos:start="73:56" pos:end="73:56"><expr pos:start="73:56" pos:end="73:56"><name pos:start="73:56" pos:end="73:56">e</name></expr></argument>)</argument_list></call></expr>;</throw>
		</block_content>}</block></catch> <finally pos:start="74:19" pos:end="86:17">finally <block pos:start="74:27" pos:end="86:17">{<block_content pos:start="75:25" pos:end="84:25">
			<try pos:start="75:25" pos:end="84:25">try <block pos:start="75:29" pos:end="82:25">{<block_content pos:start="76:33" pos:end="81:33">
				<if_stmt pos:start="76:33" pos:end="78:33"><if pos:start="76:33" pos:end="78:33">if <condition pos:start="76:36" pos:end="76:48">(<expr pos:start="76:37" pos:end="76:47"><name pos:start="76:37" pos:end="76:39">zIn</name> <operator pos:start="76:41" pos:end="76:42">!=</operator> <literal type="null" pos:start="76:44" pos:end="76:47">null</literal></expr>)</condition> <block pos:start="76:50" pos:end="78:33">{<block_content pos:start="77:41" pos:end="77:52">
					<expr_stmt pos:start="77:41" pos:end="77:52"><expr pos:start="77:41" pos:end="77:51"><call pos:start="77:41" pos:end="77:51"><name pos:start="77:41" pos:end="77:49"><name pos:start="77:41" pos:end="77:43">zIn</name><operator pos:start="77:44" pos:end="77:44">.</operator><name pos:start="77:45" pos:end="77:49">close</name></name><argument_list pos:start="77:50" pos:end="77:51">()</argument_list></call></expr>;</expr_stmt>
				</block_content>}</block></if></if_stmt>
				<if_stmt pos:start="79:33" pos:end="81:33"><if pos:start="79:33" pos:end="81:33">if <condition pos:start="79:36" pos:end="79:48">(<expr pos:start="79:37" pos:end="79:47"><name pos:start="79:37" pos:end="79:39">fin</name> <operator pos:start="79:41" pos:end="79:42">!=</operator> <literal type="null" pos:start="79:44" pos:end="79:47">null</literal></expr>)</condition> <block pos:start="79:50" pos:end="81:33">{<block_content pos:start="80:41" pos:end="80:52">
					<expr_stmt pos:start="80:41" pos:end="80:52"><expr pos:start="80:41" pos:end="80:51"><call pos:start="80:41" pos:end="80:51"><name pos:start="80:41" pos:end="80:49"><name pos:start="80:41" pos:end="80:43">fin</name><operator pos:start="80:44" pos:end="80:44">.</operator><name pos:start="80:45" pos:end="80:49">close</name></name><argument_list pos:start="80:50" pos:end="80:51">()</argument_list></call></expr>;</expr_stmt>
				</block_content>}</block></if></if_stmt>
			</block_content>}</block> <catch pos:start="82:27" pos:end="84:25">catch <parameter_list pos:start="82:33" pos:end="82:45">(<parameter pos:start="82:34" pos:end="82:44"><decl pos:start="82:34" pos:end="82:44"><type pos:start="82:34" pos:end="82:44"><name pos:start="82:34" pos:end="82:42">Exception</name></type> <name pos:start="82:44" pos:end="82:44">e</name></decl></parameter>)</parameter_list> <block pos:start="82:47" pos:end="84:25">{<block_content pos:start="83:33" pos:end="83:48">
				<expr_stmt pos:start="83:33" pos:end="83:48"><expr pos:start="83:33" pos:end="83:47"><call pos:start="83:33" pos:end="83:47"><name pos:start="83:33" pos:end="83:44"><name pos:start="83:33" pos:end="83:38">LOGGER</name><operator pos:start="83:39" pos:end="83:39">.</operator><name pos:start="83:40" pos:end="83:44">error</name></name><argument_list pos:start="83:45" pos:end="83:47">(<argument pos:start="83:46" pos:end="83:46"><expr pos:start="83:46" pos:end="83:46"><name pos:start="83:46" pos:end="83:46">e</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			</block_content>}</block></catch></try>

		</block_content>}</block></finally></try>
	</block_content>}</block></function>
 
	<function pos:start="89:9" pos:end="102:9"><annotation pos:start="89:9" pos:end="89:17">@<name pos:start="89:10" pos:end="89:17">Override</name></annotation>
	<type pos:start="90:9" pos:end="90:22"><specifier pos:start="90:9" pos:end="90:14">public</specifier> <name pos:start="90:16" pos:end="90:22">boolean</name></type> <name pos:start="90:24" pos:end="90:27">save</name><parameter_list pos:start="90:28" pos:end="90:70">(<parameter pos:start="90:29" pos:end="90:50"><decl pos:start="90:29" pos:end="90:50"><type pos:start="90:29" pos:end="90:50"><name pos:start="90:29" pos:end="90:48">IUAVTypeRegistration</name></type> <name pos:start="90:50" pos:end="90:50">o</name></decl></parameter>, <parameter pos:start="90:53" pos:end="90:69"><decl pos:start="90:53" pos:end="90:69"><type pos:start="90:53" pos:end="90:69"><name pos:start="90:53" pos:end="90:64">OutputStream</name></type> <name pos:start="90:66" pos:end="90:69">fout</name></decl></parameter>)</parameter_list> <throws pos:start="90:72" pos:end="90:98">throws <argument pos:start="90:79" pos:end="90:98"><expr pos:start="90:79" pos:end="90:98"><name pos:start="90:79" pos:end="90:98">PersistenceException</name></expr></argument></throws> <block pos:start="90:100" pos:end="102:9">{<block_content pos:start="91:17" pos:end="100:17">
		<expr_stmt pos:start="91:17" pos:end="91:67"><expr pos:start="91:17" pos:end="91:66"><call pos:start="91:17" pos:end="91:66"><name pos:start="91:17" pos:end="91:57"><name pos:start="91:17" pos:end="91:40">DronologyPersistenceUtil</name><operator pos:start="91:41" pos:end="91:41">.</operator><name pos:start="91:42" pos:end="91:57">preprocessStream</name></name><argument_list pos:start="91:58" pos:end="91:66">(<argument pos:start="91:59" pos:end="91:65"><expr pos:start="91:59" pos:end="91:65"><name pos:start="91:59" pos:end="91:65">xstream</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<comment type="line" pos:start="92:17" pos:end="92:58">// xstream.setMode(XStream.ID_REFERENCES);</comment>
		<comment type="line" pos:start="93:17" pos:end="93:88">// xstream.addImplicitCollection(ImplMMEArtifactType.class, "children");</comment>
		<comment type="line" pos:start="94:17" pos:end="94:114">// xstream.addImplicitMap(ImplMEEvent.class, "relatedEvents", ImplMEEvent.class, "relatedEvents");</comment>

		<if_stmt pos:start="96:17" pos:end="100:17"><if pos:start="96:17" pos:end="98:17">if <condition pos:start="96:20" pos:end="96:35">(<expr pos:start="96:21" pos:end="96:34"><name pos:start="96:21" pos:end="96:34">useCompression</name></expr>)</condition> <block pos:start="96:37" pos:end="98:17">{<block_content pos:start="97:25" pos:end="97:61">
			<return pos:start="97:25" pos:end="97:61">return <expr pos:start="97:32" pos:end="97:60"><call pos:start="97:32" pos:end="97:60"><name pos:start="97:32" pos:end="97:51">saveCompressedStream</name><argument_list pos:start="97:52" pos:end="97:60">(<argument pos:start="97:53" pos:end="97:53"><expr pos:start="97:53" pos:end="97:53"><name pos:start="97:53" pos:end="97:53">o</name></expr></argument>, <argument pos:start="97:56" pos:end="97:59"><expr pos:start="97:56" pos:end="97:59"><name pos:start="97:56" pos:end="97:59">fout</name></expr></argument>)</argument_list></call></expr>;</return>
		</block_content>}</block></if> <else pos:start="98:19" pos:end="100:17">else <block pos:start="98:24" pos:end="100:17">{<block_content pos:start="99:25" pos:end="99:63">
			<return pos:start="99:25" pos:end="99:63">return <expr pos:start="99:32" pos:end="99:62"><call pos:start="99:32" pos:end="99:62"><name pos:start="99:32" pos:end="99:53">saveUncompressedStream</name><argument_list pos:start="99:54" pos:end="99:62">(<argument pos:start="99:55" pos:end="99:55"><expr pos:start="99:55" pos:end="99:55"><name pos:start="99:55" pos:end="99:55">o</name></expr></argument>, <argument pos:start="99:58" pos:end="99:61"><expr pos:start="99:58" pos:end="99:61"><name pos:start="99:58" pos:end="99:61">fout</name></expr></argument>)</argument_list></call></expr>;</return>
		</block_content>}</block></else></if_stmt>

	</block_content>}</block></function>

	<function pos:start="104:9" pos:end="125:9"><type pos:start="104:9" pos:end="104:23"><specifier pos:start="104:9" pos:end="104:15">private</specifier> <name pos:start="104:17" pos:end="104:23">boolean</name></type> <name pos:start="104:25" pos:end="104:46">saveUncompressedStream</name><parameter_list pos:start="104:47" pos:end="104:89">(<parameter pos:start="104:48" pos:end="104:69"><decl pos:start="104:48" pos:end="104:69"><type pos:start="104:48" pos:end="104:69"><name pos:start="104:48" pos:end="104:67">IUAVTypeRegistration</name></type> <name pos:start="104:69" pos:end="104:69">o</name></decl></parameter>, <parameter pos:start="104:72" pos:end="104:88"><decl pos:start="104:72" pos:end="104:88"><type pos:start="104:72" pos:end="104:88"><name pos:start="104:72" pos:end="104:83">OutputStream</name></type> <name pos:start="104:85" pos:end="104:88">fout</name></decl></parameter>)</parameter_list> <throws pos:start="104:91" pos:end="104:117">throws <argument pos:start="104:98" pos:end="104:117"><expr pos:start="104:98" pos:end="104:117"><name pos:start="104:98" pos:end="104:117">PersistenceException</name></expr></argument></throws> <block pos:start="104:119" pos:end="125:9">{<block_content pos:start="105:17" pos:end="123:17">
		<decl_stmt pos:start="105:17" pos:end="105:49"><decl pos:start="105:17" pos:end="105:48"><type pos:start="105:17" pos:end="105:34"><name pos:start="105:17" pos:end="105:34">OutputStreamWriter</name></type> <name pos:start="105:36" pos:end="105:41">writer</name> <init pos:start="105:43" pos:end="105:48">= <expr pos:start="105:45" pos:end="105:48"><literal type="null" pos:start="105:45" pos:end="105:48">null</literal></expr></init></decl>;</decl_stmt>
		<try pos:start="106:17" pos:end="123:17">try <block pos:start="106:21" pos:end="110:17">{<block_content pos:start="107:25" pos:end="109:36">
			<expr_stmt pos:start="107:25" pos:end="107:114"><expr pos:start="107:25" pos:end="107:113"><name pos:start="107:25" pos:end="107:30">writer</name> <operator pos:start="107:32" pos:end="107:32">=</operator> <operator pos:start="107:34" pos:end="107:36">new</operator> <call pos:start="107:38" pos:end="107:113"><name pos:start="107:38" pos:end="107:55">OutputStreamWriter</name><argument_list pos:start="107:56" pos:end="107:113">(<argument pos:start="107:57" pos:end="107:86"><expr pos:start="107:57" pos:end="107:86"><operator pos:start="107:57" pos:end="107:59">new</operator> <call pos:start="107:61" pos:end="107:86"><name pos:start="107:61" pos:end="107:80">BufferedOutputStream</name><argument_list pos:start="107:81" pos:end="107:86">(<argument pos:start="107:82" pos:end="107:85"><expr pos:start="107:82" pos:end="107:85"><name pos:start="107:82" pos:end="107:85">fout</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="107:89" pos:end="107:112"><expr pos:start="107:89" pos:end="107:112"><call pos:start="107:89" pos:end="107:112"><name pos:start="107:89" pos:end="107:103"><name pos:start="107:89" pos:end="107:95">Charset</name><operator pos:start="107:96" pos:end="107:96">.</operator><name pos:start="107:97" pos:end="107:103">forName</name></name><argument_list pos:start="107:104" pos:end="107:112">(<argument pos:start="107:105" pos:end="107:111"><expr pos:start="107:105" pos:end="107:111"><literal type="string" pos:start="107:105" pos:end="107:111">"UTF-8"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt pos:start="108:25" pos:end="108:49"><expr pos:start="108:25" pos:end="108:48"><call pos:start="108:25" pos:end="108:48"><name pos:start="108:25" pos:end="108:37"><name pos:start="108:25" pos:end="108:31">xstream</name><operator pos:start="108:32" pos:end="108:32">.</operator><name pos:start="108:33" pos:end="108:37">toXML</name></name><argument_list pos:start="108:38" pos:end="108:48">(<argument pos:start="108:39" pos:end="108:39"><expr pos:start="108:39" pos:end="108:39"><name pos:start="108:39" pos:end="108:39">o</name></expr></argument>, <argument pos:start="108:42" pos:end="108:47"><expr pos:start="108:42" pos:end="108:47"><name pos:start="108:42" pos:end="108:47">writer</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<return pos:start="109:25" pos:end="109:36">return <expr pos:start="109:32" pos:end="109:35"><literal type="boolean" pos:start="109:32" pos:end="109:35">true</literal></expr>;</return>
		</block_content>}</block> <catch pos:start="110:19" pos:end="112:17">catch <parameter_list pos:start="110:25" pos:end="110:37">(<parameter pos:start="110:26" pos:end="110:36"><decl pos:start="110:26" pos:end="110:36"><type pos:start="110:26" pos:end="110:36"><name pos:start="110:26" pos:end="110:34">Exception</name></type> <name pos:start="110:36" pos:end="110:36">e</name></decl></parameter>)</parameter_list> <block pos:start="110:39" pos:end="112:17">{<block_content pos:start="111:25" pos:end="111:58">
			<throw pos:start="111:25" pos:end="111:58">throw <expr pos:start="111:31" pos:end="111:57"><operator pos:start="111:31" pos:end="111:33">new</operator> <call pos:start="111:35" pos:end="111:57"><name pos:start="111:35" pos:end="111:54">PersistenceException</name><argument_list pos:start="111:55" pos:end="111:57">(<argument pos:start="111:56" pos:end="111:56"><expr pos:start="111:56" pos:end="111:56"><name pos:start="111:56" pos:end="111:56">e</name></expr></argument>)</argument_list></call></expr>;</throw>
		</block_content>}</block></catch> <finally pos:start="112:19" pos:end="123:17">finally <block pos:start="112:27" pos:end="123:17">{<block_content pos:start="113:25" pos:end="122:25">
			<try pos:start="113:25" pos:end="122:25">try <block pos:start="113:29" pos:end="120:25">{<block_content pos:start="114:33" pos:end="119:33">
				<if_stmt pos:start="114:33" pos:end="116:33"><if pos:start="114:33" pos:end="116:33">if <condition pos:start="114:36" pos:end="114:51">(<expr pos:start="114:37" pos:end="114:50"><name pos:start="114:37" pos:end="114:42">writer</name> <operator pos:start="114:44" pos:end="114:45">!=</operator> <literal type="null" pos:start="114:47" pos:end="114:50">null</literal></expr>)</condition> <block pos:start="114:53" pos:end="116:33">{<block_content pos:start="115:41" pos:end="115:55">
					<expr_stmt pos:start="115:41" pos:end="115:55"><expr pos:start="115:41" pos:end="115:54"><call pos:start="115:41" pos:end="115:54"><name pos:start="115:41" pos:end="115:52"><name pos:start="115:41" pos:end="115:46">writer</name><operator pos:start="115:47" pos:end="115:47">.</operator><name pos:start="115:48" pos:end="115:52">close</name></name><argument_list pos:start="115:53" pos:end="115:54">()</argument_list></call></expr>;</expr_stmt>
				</block_content>}</block></if></if_stmt>
				<if_stmt pos:start="117:33" pos:end="119:33"><if pos:start="117:33" pos:end="119:33">if <condition pos:start="117:36" pos:end="117:49">(<expr pos:start="117:37" pos:end="117:48"><name pos:start="117:37" pos:end="117:40">fout</name> <operator pos:start="117:42" pos:end="117:43">!=</operator> <literal type="null" pos:start="117:45" pos:end="117:48">null</literal></expr>)</condition> <block pos:start="117:51" pos:end="119:33">{<block_content pos:start="118:41" pos:end="118:53">
					<expr_stmt pos:start="118:41" pos:end="118:53"><expr pos:start="118:41" pos:end="118:52"><call pos:start="118:41" pos:end="118:52"><name pos:start="118:41" pos:end="118:50"><name pos:start="118:41" pos:end="118:44">fout</name><operator pos:start="118:45" pos:end="118:45">.</operator><name pos:start="118:46" pos:end="118:50">close</name></name><argument_list pos:start="118:51" pos:end="118:52">()</argument_list></call></expr>;</expr_stmt>
				</block_content>}</block></if></if_stmt>
			</block_content>}</block> <catch pos:start="120:27" pos:end="122:25">catch <parameter_list pos:start="120:33" pos:end="120:47">(<parameter pos:start="120:34" pos:end="120:46"><decl pos:start="120:34" pos:end="120:46"><type pos:start="120:34" pos:end="120:46"><name pos:start="120:34" pos:end="120:44">IOException</name></type> <name pos:start="120:46" pos:end="120:46">e</name></decl></parameter>)</parameter_list> <block pos:start="120:49" pos:end="122:25">{<block_content pos:start="121:33" pos:end="121:48">
				<expr_stmt pos:start="121:33" pos:end="121:48"><expr pos:start="121:33" pos:end="121:47"><call pos:start="121:33" pos:end="121:47"><name pos:start="121:33" pos:end="121:44"><name pos:start="121:33" pos:end="121:38">LOGGER</name><operator pos:start="121:39" pos:end="121:39">.</operator><name pos:start="121:40" pos:end="121:44">error</name></name><argument_list pos:start="121:45" pos:end="121:47">(<argument pos:start="121:46" pos:end="121:46"><expr pos:start="121:46" pos:end="121:46"><name pos:start="121:46" pos:end="121:46">e</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			</block_content>}</block></catch></try>
		</block_content>}</block></finally></try>

	</block_content>}</block></function>

	<function pos:start="127:9" pos:end="139:9"><type pos:start="127:9" pos:end="127:23"><specifier pos:start="127:9" pos:end="127:15">private</specifier> <name pos:start="127:17" pos:end="127:23">boolean</name></type> <name pos:start="127:25" pos:end="127:44">saveCompressedStream</name><parameter_list pos:start="127:45" pos:end="127:87">(<parameter pos:start="127:46" pos:end="127:67"><decl pos:start="127:46" pos:end="127:67"><type pos:start="127:46" pos:end="127:67"><name pos:start="127:46" pos:end="127:65">IUAVTypeRegistration</name></type> <name pos:start="127:67" pos:end="127:67">o</name></decl></parameter>, <parameter pos:start="127:70" pos:end="127:86"><decl pos:start="127:70" pos:end="127:86"><type pos:start="127:70" pos:end="127:86"><name pos:start="127:70" pos:end="127:81">OutputStream</name></type> <name pos:start="127:83" pos:end="127:86">fout</name></decl></parameter>)</parameter_list> <throws pos:start="127:89" pos:end="127:115">throws <argument pos:start="127:96" pos:end="127:115"><expr pos:start="127:96" pos:end="127:115"><name pos:start="127:96" pos:end="127:115">PersistenceException</name></expr></argument></throws> <block pos:start="127:117" pos:end="139:9">{<block_content pos:start="128:17" pos:end="138:17">
		<try pos:start="128:17" pos:end="138:17">try <block pos:start="128:21" pos:end="136:17">{<block_content pos:start="129:25" pos:end="135:36">
			<decl_stmt pos:start="129:25" pos:end="129:75"><decl pos:start="129:25" pos:end="129:74"><type pos:start="129:25" pos:end="129:40"><name pos:start="129:25" pos:end="129:40">GZIPOutputStream</name></type> <name pos:start="129:42" pos:end="129:45">zOut</name> <init pos:start="129:47" pos:end="129:74">= <expr pos:start="129:49" pos:end="129:74"><operator pos:start="129:49" pos:end="129:51">new</operator> <call pos:start="129:53" pos:end="129:74"><name pos:start="129:53" pos:end="129:68">GZIPOutputStream</name><argument_list pos:start="129:69" pos:end="129:74">(<argument pos:start="129:70" pos:end="129:73"><expr pos:start="129:70" pos:end="129:73"><name pos:start="129:70" pos:end="129:73">fout</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<expr_stmt pos:start="130:25" pos:end="130:100"><expr pos:start="130:25" pos:end="130:99"><call pos:start="130:25" pos:end="130:99"><name pos:start="130:25" pos:end="130:37"><name pos:start="130:25" pos:end="130:31">xstream</name><operator pos:start="130:32" pos:end="130:32">.</operator><name pos:start="130:33" pos:end="130:37">toXML</name></name><argument_list pos:start="130:38" pos:end="130:99">(<argument pos:start="130:39" pos:end="130:39"><expr pos:start="130:39" pos:end="130:39"><name pos:start="130:39" pos:end="130:39">o</name></expr></argument>, <argument pos:start="130:42" pos:end="130:98"><expr pos:start="130:42" pos:end="130:98"><operator pos:start="130:42" pos:end="130:44">new</operator> <call pos:start="130:46" pos:end="130:98"><name pos:start="130:46" pos:end="130:59">BufferedWriter</name><argument_list pos:start="130:60" pos:end="130:98">(<argument pos:start="130:61" pos:end="130:97"><expr pos:start="130:61" pos:end="130:97"><operator pos:start="130:61" pos:end="130:63">new</operator> <call pos:start="130:65" pos:end="130:97"><name pos:start="130:65" pos:end="130:82">OutputStreamWriter</name><argument_list pos:start="130:83" pos:end="130:97">(<argument pos:start="130:84" pos:end="130:87"><expr pos:start="130:84" pos:end="130:87"><name pos:start="130:84" pos:end="130:87">zOut</name></expr></argument>, <argument pos:start="130:90" pos:end="130:96"><expr pos:start="130:90" pos:end="130:96"><literal type="string" pos:start="130:90" pos:end="130:96">"UTF-8"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

			<expr_stmt pos:start="132:25" pos:end="132:37"><expr pos:start="132:25" pos:end="132:36"><call pos:start="132:25" pos:end="132:36"><name pos:start="132:25" pos:end="132:34"><name pos:start="132:25" pos:end="132:28">zOut</name><operator pos:start="132:29" pos:end="132:29">.</operator><name pos:start="132:30" pos:end="132:34">close</name></name><argument_list pos:start="132:35" pos:end="132:36">()</argument_list></call></expr>;</expr_stmt>
			<expr_stmt pos:start="133:25" pos:end="133:37"><expr pos:start="133:25" pos:end="133:36"><call pos:start="133:25" pos:end="133:36"><name pos:start="133:25" pos:end="133:34"><name pos:start="133:25" pos:end="133:28">fout</name><operator pos:start="133:29" pos:end="133:29">.</operator><name pos:start="133:30" pos:end="133:34">close</name></name><argument_list pos:start="133:35" pos:end="133:36">()</argument_list></call></expr>;</expr_stmt>

			<return pos:start="135:25" pos:end="135:36">return <expr pos:start="135:32" pos:end="135:35"><literal type="boolean" pos:start="135:32" pos:end="135:35">true</literal></expr>;</return>
		</block_content>}</block> <catch pos:start="136:19" pos:end="138:17">catch <parameter_list pos:start="136:25" pos:end="136:37">(<parameter pos:start="136:26" pos:end="136:36"><decl pos:start="136:26" pos:end="136:36"><type pos:start="136:26" pos:end="136:36"><name pos:start="136:26" pos:end="136:34">Exception</name></type> <name pos:start="136:36" pos:end="136:36">e</name></decl></parameter>)</parameter_list> <block pos:start="136:39" pos:end="138:17">{<block_content pos:start="137:25" pos:end="137:58">
			<throw pos:start="137:25" pos:end="137:58">throw <expr pos:start="137:31" pos:end="137:57"><operator pos:start="137:31" pos:end="137:33">new</operator> <call pos:start="137:35" pos:end="137:57"><name pos:start="137:35" pos:end="137:54">PersistenceException</name><argument_list pos:start="137:55" pos:end="137:57">(<argument pos:start="137:56" pos:end="137:56"><expr pos:start="137:56" pos:end="137:56"><name pos:start="137:56" pos:end="137:56">e</name></expr></argument>)</argument_list></call></expr>;</throw>
		</block_content>}</block></catch></try>
	</block_content>}</block></function>

}</block></class>
</unit>
