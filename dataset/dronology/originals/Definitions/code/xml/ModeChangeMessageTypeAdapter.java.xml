<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="Java" filename="flatCode/ModeChangeMessageTypeAdapter.java" pos:tabs="8"><package pos:start="1:1" pos:end="1:53">package <name pos:start="1:9" pos:end="1:52"><name pos:start="1:9" pos:end="1:11">edu</name><operator pos:start="1:12" pos:end="1:12">.</operator><name pos:start="1:13" pos:end="1:14">nd</name><operator pos:start="1:15" pos:end="1:15">.</operator><name pos:start="1:16" pos:end="1:24">dronology</name><operator pos:start="1:25" pos:end="1:25">.</operator><name pos:start="1:26" pos:end="1:33">gstation</name><operator pos:start="1:34" pos:end="1:34">.</operator><name pos:start="1:35" pos:end="1:43">connector</name><operator pos:start="1:44" pos:end="1:44">.</operator><name pos:start="1:45" pos:end="1:52">messages</name></name>;</package>

<import pos:start="3:1" pos:end="3:30">import <name pos:start="3:8" pos:end="3:29"><name pos:start="3:8" pos:end="3:11">java</name><operator pos:start="3:12" pos:end="3:12">.</operator><name pos:start="3:13" pos:end="3:16">lang</name><operator pos:start="3:17" pos:end="3:17">.</operator><name pos:start="3:18" pos:end="3:24">reflect</name><operator pos:start="3:25" pos:end="3:25">.</operator><name pos:start="3:26" pos:end="3:29">Type</name></name>;</import>

<import pos:start="5:1" pos:end="5:50">import <name pos:start="5:8" pos:end="5:49"><name pos:start="5:8" pos:end="5:10">com</name><operator pos:start="5:11" pos:end="5:11">.</operator><name pos:start="5:12" pos:end="5:17">google</name><operator pos:start="5:18" pos:end="5:18">.</operator><name pos:start="5:19" pos:end="5:22">gson</name><operator pos:start="5:23" pos:end="5:23">.</operator><name pos:start="5:24" pos:end="5:49">JsonDeserializationContext</name></name>;</import>
<import pos:start="6:1" pos:end="6:40">import <name pos:start="6:8" pos:end="6:39"><name pos:start="6:8" pos:end="6:10">com</name><operator pos:start="6:11" pos:end="6:11">.</operator><name pos:start="6:12" pos:end="6:17">google</name><operator pos:start="6:18" pos:end="6:18">.</operator><name pos:start="6:19" pos:end="6:22">gson</name><operator pos:start="6:23" pos:end="6:23">.</operator><name pos:start="6:24" pos:end="6:39">JsonDeserializer</name></name>;</import>
<import pos:start="7:1" pos:end="7:35">import <name pos:start="7:8" pos:end="7:34"><name pos:start="7:8" pos:end="7:10">com</name><operator pos:start="7:11" pos:end="7:11">.</operator><name pos:start="7:12" pos:end="7:17">google</name><operator pos:start="7:18" pos:end="7:18">.</operator><name pos:start="7:19" pos:end="7:22">gson</name><operator pos:start="7:23" pos:end="7:23">.</operator><name pos:start="7:24" pos:end="7:34">JsonElement</name></name>;</import>
<import pos:start="8:1" pos:end="8:34">import <name pos:start="8:8" pos:end="8:33"><name pos:start="8:8" pos:end="8:10">com</name><operator pos:start="8:11" pos:end="8:11">.</operator><name pos:start="8:12" pos:end="8:17">google</name><operator pos:start="8:18" pos:end="8:18">.</operator><name pos:start="8:19" pos:end="8:22">gson</name><operator pos:start="8:23" pos:end="8:23">.</operator><name pos:start="8:24" pos:end="8:33">JsonObject</name></name>;</import>
<import pos:start="9:1" pos:end="9:42">import <name pos:start="9:8" pos:end="9:41"><name pos:start="9:8" pos:end="9:10">com</name><operator pos:start="9:11" pos:end="9:11">.</operator><name pos:start="9:12" pos:end="9:17">google</name><operator pos:start="9:18" pos:end="9:18">.</operator><name pos:start="9:19" pos:end="9:22">gson</name><operator pos:start="9:23" pos:end="9:23">.</operator><name pos:start="9:24" pos:end="9:41">JsonParseException</name></name>;</import>

<import pos:start="11:1" pos:end="11:72">import <name pos:start="11:8" pos:end="11:71"><name pos:start="11:8" pos:end="11:10">edu</name><operator pos:start="11:11" pos:end="11:11">.</operator><name pos:start="11:12" pos:end="11:13">nd</name><operator pos:start="11:14" pos:end="11:14">.</operator><name pos:start="11:15" pos:end="11:23">dronology</name><operator pos:start="11:24" pos:end="11:24">.</operator><name pos:start="11:25" pos:end="11:28">core</name><operator pos:start="11:29" pos:end="11:29">.</operator><name pos:start="11:30" pos:end="11:36">vehicle</name><operator pos:start="11:37" pos:end="11:37">.</operator><name pos:start="11:38" pos:end="11:60">DroneFlightStateManager</name><operator pos:start="11:61" pos:end="11:61">.</operator><name pos:start="11:62" pos:end="11:71">FlightMode</name></name>;</import>
<import pos:start="12:1" pos:end="12:30">import <name pos:start="12:8" pos:end="12:29"><name pos:start="12:8" pos:end="12:10">net</name><operator pos:start="12:11" pos:end="12:11">.</operator><name pos:start="12:12" pos:end="12:13">mv</name><operator pos:start="12:14" pos:end="12:14">.</operator><name pos:start="12:15" pos:end="12:21">logging</name><operator pos:start="12:22" pos:end="12:22">.</operator><name pos:start="12:23" pos:end="12:29">ILogger</name></name>;</import>
<import pos:start="13:1" pos:end="13:37">import <name pos:start="13:8" pos:end="13:36"><name pos:start="13:8" pos:end="13:10">net</name><operator pos:start="13:11" pos:end="13:11">.</operator><name pos:start="13:12" pos:end="13:13">mv</name><operator pos:start="13:14" pos:end="13:14">.</operator><name pos:start="13:15" pos:end="13:21">logging</name><operator pos:start="13:22" pos:end="13:22">.</operator><name pos:start="13:23" pos:end="13:36">LoggerProvider</name></name>;</import>

<class pos:start="15:1" pos:end="48:1"><specifier pos:start="15:1" pos:end="15:6">public</specifier> class <name pos:start="15:14" pos:end="15:41">ModeChangeMessageTypeAdapter</name> <super_list pos:start="15:43" pos:end="15:91"><implements pos:start="15:43" pos:end="15:91">implements <super pos:start="15:54" pos:end="15:91"><name pos:start="15:54" pos:end="15:91"><name pos:start="15:54" pos:end="15:69">JsonDeserializer</name><argument_list type="generic" pos:start="15:70" pos:end="15:91">&lt;<argument pos:start="15:71" pos:end="15:90"><name pos:start="15:71" pos:end="15:90">UAVModeChangeMessage</name></argument>&gt;</argument_list></name></super></implements></super_list> <block pos:start="15:93" pos:end="48:1">{

	<decl_stmt pos:start="17:9" pos:end="17:107"><decl pos:start="17:9" pos:end="17:106"><type pos:start="17:9" pos:end="17:36"><specifier pos:start="17:9" pos:end="17:15">private</specifier> <specifier pos:start="17:17" pos:end="17:22">static</specifier> <specifier pos:start="17:24" pos:end="17:28">final</specifier> <name pos:start="17:30" pos:end="17:36">ILogger</name></type> <name pos:start="17:38" pos:end="17:43">LOGGER</name> <init pos:start="17:45" pos:end="17:106">= <expr pos:start="17:47" pos:end="17:106"><call pos:start="17:47" pos:end="17:106"><name pos:start="17:47" pos:end="17:70"><name pos:start="17:47" pos:end="17:60">LoggerProvider</name><operator pos:start="17:61" pos:end="17:61">.</operator><name pos:start="17:62" pos:end="17:70">getLogger</name></name><argument_list pos:start="17:71" pos:end="17:106">(<argument pos:start="17:72" pos:end="17:105"><expr pos:start="17:72" pos:end="17:105"><name pos:start="17:72" pos:end="17:105"><name pos:start="17:72" pos:end="17:99">ModeChangeMessageTypeAdapter</name><operator pos:start="17:100" pos:end="17:100">.</operator><name pos:start="17:101" pos:end="17:105">class</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

	<function pos:start="19:9" pos:end="46:9"><annotation pos:start="19:9" pos:end="19:17">@<name pos:start="19:10" pos:end="19:17">Override</name></annotation>
	<type pos:start="20:9" pos:end="20:35"><specifier pos:start="20:9" pos:end="20:14">public</specifier> <name pos:start="20:16" pos:end="20:35">UAVModeChangeMessage</name></type> <name pos:start="20:37" pos:end="20:47">deserialize</name><parameter_list pos:start="20:48" pos:end="20:115">(<parameter pos:start="20:49" pos:end="20:67"><decl pos:start="20:49" pos:end="20:67"><type pos:start="20:49" pos:end="20:67"><name pos:start="20:49" pos:end="20:59">JsonElement</name></type> <name pos:start="20:61" pos:end="20:67">element</name></decl></parameter>, <parameter pos:start="20:70" pos:end="20:81"><decl pos:start="20:70" pos:end="20:81"><type pos:start="20:70" pos:end="20:81"><name pos:start="20:70" pos:end="20:73">Type</name></type> <name pos:start="20:75" pos:end="20:81">mapType</name></decl></parameter>, <parameter pos:start="20:84" pos:end="20:114"><decl pos:start="20:84" pos:end="20:114"><type pos:start="20:84" pos:end="20:114"><name pos:start="20:84" pos:end="20:109">JsonDeserializationContext</name></type> <name pos:start="20:111" pos:end="20:114">arg2</name></decl></parameter>)</parameter_list>
			<throws pos:start="21:25" pos:end="21:49">throws <argument pos:start="21:32" pos:end="21:49"><expr pos:start="21:32" pos:end="21:49"><name pos:start="21:32" pos:end="21:49">JsonParseException</name></expr></argument></throws> <block pos:start="21:51" pos:end="46:9">{<block_content pos:start="22:17" pos:end="45:31">
		<decl_stmt pos:start="22:17" pos:end="22:65"><decl pos:start="22:17" pos:end="22:64"><type pos:start="22:17" pos:end="22:26"><name pos:start="22:17" pos:end="22:26">JsonObject</name></type> <name pos:start="22:28" pos:end="22:36">mapObject</name> <init pos:start="22:38" pos:end="22:64">= <expr pos:start="22:40" pos:end="22:64"><call pos:start="22:40" pos:end="22:64"><name pos:start="22:40" pos:end="22:62"><name pos:start="22:40" pos:end="22:46">element</name><operator pos:start="22:47" pos:end="22:47">.</operator><name pos:start="22:48" pos:end="22:62">getAsJsonObject</name></name><argument_list pos:start="22:63" pos:end="22:64">()</argument_list></call></expr></init></decl>;</decl_stmt>
		<decl_stmt pos:start="23:17" pos:end="23:88"><decl pos:start="23:17" pos:end="23:87"><type pos:start="23:17" pos:end="23:22"><name pos:start="23:17" pos:end="23:22">String</name></type> <name pos:start="23:24" pos:end="23:28">uavid</name> <init pos:start="23:30" pos:end="23:87">= <expr pos:start="23:32" pos:end="23:87"><call pos:start="23:32" pos:end="23:73"><name pos:start="23:32" pos:end="23:44"><name pos:start="23:32" pos:end="23:40">mapObject</name><operator pos:start="23:41" pos:end="23:41">.</operator><name pos:start="23:42" pos:end="23:44">get</name></name><argument_list pos:start="23:45" pos:end="23:73">(<argument pos:start="23:46" pos:end="23:72"><expr pos:start="23:46" pos:end="23:72"><name pos:start="23:46" pos:end="23:72"><name pos:start="23:46" pos:end="23:65">UAVModeChangeMessage</name><operator pos:start="23:66" pos:end="23:66">.</operator><name pos:start="23:67" pos:end="23:72">UAV_ID</name></name></expr></argument>)</argument_list></call><operator pos:start="23:74" pos:end="23:74">.</operator><call pos:start="23:75" pos:end="23:87"><name pos:start="23:75" pos:end="23:85">getAsString</name><argument_list pos:start="23:86" pos:end="23:87">()</argument_list></call></expr></init></decl>;</decl_stmt>
		<decl_stmt pos:start="24:17" pos:end="24:86"><decl pos:start="24:17" pos:end="24:85"><type pos:start="24:17" pos:end="24:22"><name pos:start="24:17" pos:end="24:22">String</name></type> <name pos:start="24:24" pos:end="24:27">gsid</name> <init pos:start="24:29" pos:end="24:85">= <expr pos:start="24:31" pos:end="24:85"><call pos:start="24:31" pos:end="24:71"><name pos:start="24:31" pos:end="24:43"><name pos:start="24:31" pos:end="24:39">mapObject</name><operator pos:start="24:40" pos:end="24:40">.</operator><name pos:start="24:41" pos:end="24:43">get</name></name><argument_list pos:start="24:44" pos:end="24:71">(<argument pos:start="24:45" pos:end="24:70"><expr pos:start="24:45" pos:end="24:70"><name pos:start="24:45" pos:end="24:70"><name pos:start="24:45" pos:end="24:64">UAVModeChangeMessage</name><operator pos:start="24:65" pos:end="24:65">.</operator><name pos:start="24:66" pos:end="24:70">GS_ID</name></name></expr></argument>)</argument_list></call><operator pos:start="24:72" pos:end="24:72">.</operator><call pos:start="24:73" pos:end="24:85"><name pos:start="24:73" pos:end="24:83">getAsString</name><argument_list pos:start="24:84" pos:end="24:85">()</argument_list></call></expr></init></decl>;</decl_stmt>
		<decl_stmt pos:start="25:17" pos:end="25:68"><decl pos:start="25:17" pos:end="25:67"><type pos:start="25:17" pos:end="25:26"><name pos:start="25:17" pos:end="25:26">JsonObject</name></type> <name pos:start="25:28" pos:end="25:31">data</name> <init pos:start="25:33" pos:end="25:67">= <expr pos:start="25:35" pos:end="25:67"><call pos:start="25:35" pos:end="25:67"><name pos:start="25:35" pos:end="25:59"><name pos:start="25:35" pos:end="25:43">mapObject</name><operator pos:start="25:44" pos:end="25:44">.</operator><name pos:start="25:45" pos:end="25:59">getAsJsonObject</name></name><argument_list pos:start="25:60" pos:end="25:67">(<argument pos:start="25:61" pos:end="25:66"><expr pos:start="25:61" pos:end="25:66"><literal type="string" pos:start="25:61" pos:end="25:66">"data"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

		<decl_stmt pos:start="27:17" pos:end="27:80"><decl pos:start="27:17" pos:end="27:79"><type pos:start="27:17" pos:end="27:22"><name pos:start="27:17" pos:end="27:22">String</name></type> <name pos:start="27:24" pos:end="27:27">mode</name> <init pos:start="27:29" pos:end="27:79">= <expr pos:start="27:31" pos:end="27:79"><call pos:start="27:31" pos:end="27:65"><name pos:start="27:31" pos:end="27:38"><name pos:start="27:31" pos:end="27:34">data</name><operator pos:start="27:35" pos:end="27:35">.</operator><name pos:start="27:36" pos:end="27:38">get</name></name><argument_list pos:start="27:39" pos:end="27:65">(<argument pos:start="27:40" pos:end="27:64"><expr pos:start="27:40" pos:end="27:64"><name pos:start="27:40" pos:end="27:64"><name pos:start="27:40" pos:end="27:59">UAVModeChangeMessage</name><operator pos:start="27:60" pos:end="27:60">.</operator><name pos:start="27:61" pos:end="27:64">MODE</name></name></expr></argument>)</argument_list></call><operator pos:start="27:66" pos:end="27:66">.</operator><call pos:start="27:67" pos:end="27:79"><name pos:start="27:67" pos:end="27:77">getAsString</name><argument_list pos:start="27:78" pos:end="27:79">()</argument_list></call></expr></init></decl>;</decl_stmt>

		<decl_stmt pos:start="29:17" pos:end="29:69"><decl pos:start="29:17" pos:end="29:68"><type pos:start="29:17" pos:end="29:22"><name pos:start="29:17" pos:end="29:22">String</name></type> <name pos:start="29:24" pos:end="29:28">dMode</name> <init pos:start="29:30" pos:end="29:68">= <expr pos:start="29:32" pos:end="29:68"><call pos:start="29:32" pos:end="29:68"><name pos:start="29:32" pos:end="29:66"><name pos:start="29:32" pos:end="29:41">FlightMode</name><operator pos:start="29:42" pos:end="29:42">.</operator><name pos:start="29:43" pos:end="29:57">USER_CONTROLLED</name><operator pos:start="29:58" pos:end="29:58">.</operator><name pos:start="29:59" pos:end="29:66">toString</name></name><argument_list pos:start="29:67" pos:end="29:68">()</argument_list></call></expr></init></decl>;</decl_stmt>

		<if_stmt pos:start="31:17" pos:end="41:17"><if pos:start="31:17" pos:end="33:17">if <condition pos:start="31:20" pos:end="31:42">(<expr pos:start="31:21" pos:end="31:41"><literal type="string" pos:start="31:21" pos:end="31:28">"LOITER"</literal><operator pos:start="31:29" pos:end="31:29">.</operator><call pos:start="31:30" pos:end="31:41"><name pos:start="31:30" pos:end="31:35">equals</name><argument_list pos:start="31:36" pos:end="31:41">(<argument pos:start="31:37" pos:end="31:40"><expr pos:start="31:37" pos:end="31:40"><name pos:start="31:37" pos:end="31:40">mode</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="31:44" pos:end="33:17">{<block_content pos:start="32:25" pos:end="32:70">
			<expr_stmt pos:start="32:25" pos:end="32:70"><expr pos:start="32:25" pos:end="32:69"><name pos:start="32:25" pos:end="32:29">dMode</name> <operator pos:start="32:31" pos:end="32:31">=</operator> <call pos:start="32:33" pos:end="32:69"><name pos:start="32:33" pos:end="32:67"><name pos:start="32:33" pos:end="32:42">FlightMode</name><operator pos:start="32:43" pos:end="32:43">.</operator><name pos:start="32:44" pos:end="32:58">USER_CONTROLLED</name><operator pos:start="32:59" pos:end="32:59">.</operator><name pos:start="32:60" pos:end="32:67">toString</name></name><argument_list pos:start="32:68" pos:end="32:69">()</argument_list></call></expr>;</expr_stmt>
		</block_content>}</block></if> <if type="elseif" pos:start="33:19" pos:end="35:17">else if <condition pos:start="33:27" pos:end="33:52">(<expr pos:start="33:28" pos:end="33:51"><literal type="string" pos:start="33:28" pos:end="33:38">"STABILIZE"</literal><operator pos:start="33:39" pos:end="33:39">.</operator><call pos:start="33:40" pos:end="33:51"><name pos:start="33:40" pos:end="33:45">equals</name><argument_list pos:start="33:46" pos:end="33:51">(<argument pos:start="33:47" pos:end="33:50"><expr pos:start="33:47" pos:end="33:50"><name pos:start="33:47" pos:end="33:50">mode</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="33:54" pos:end="35:17">{<block_content pos:start="34:25" pos:end="34:61">
			<expr_stmt pos:start="34:25" pos:end="34:61"><expr pos:start="34:25" pos:end="34:60"><name pos:start="34:25" pos:end="34:29">dMode</name> <operator pos:start="34:31" pos:end="34:31">=</operator> <call pos:start="34:33" pos:end="34:60"><name pos:start="34:33" pos:end="34:58"><name pos:start="34:33" pos:end="34:42">FlightMode</name><operator pos:start="34:43" pos:end="34:43">.</operator><name pos:start="34:44" pos:end="34:49">IN_AIR</name><operator pos:start="34:50" pos:end="34:50">.</operator><name pos:start="34:51" pos:end="34:58">toString</name></name><argument_list pos:start="34:59" pos:end="34:60">()</argument_list></call></expr>;</expr_stmt>
		</block_content>}</block></if> <if type="elseif" pos:start="35:19" pos:end="37:17">else if <condition pos:start="35:27" pos:end="35:49">(<expr pos:start="35:28" pos:end="35:48"><literal type="string" pos:start="35:28" pos:end="35:35">"GUIDED"</literal><operator pos:start="35:36" pos:end="35:36">.</operator><call pos:start="35:37" pos:end="35:48"><name pos:start="35:37" pos:end="35:42">equals</name><argument_list pos:start="35:43" pos:end="35:48">(<argument pos:start="35:44" pos:end="35:47"><expr pos:start="35:44" pos:end="35:47"><name pos:start="35:44" pos:end="35:47">mode</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="35:51" pos:end="37:17">{<block_content pos:start="36:25" pos:end="36:61">
			<expr_stmt pos:start="36:25" pos:end="36:61"><expr pos:start="36:25" pos:end="36:60"><name pos:start="36:25" pos:end="36:29">dMode</name> <operator pos:start="36:31" pos:end="36:31">=</operator> <call pos:start="36:33" pos:end="36:60"><name pos:start="36:33" pos:end="36:58"><name pos:start="36:33" pos:end="36:42">FlightMode</name><operator pos:start="36:43" pos:end="36:43">.</operator><name pos:start="36:44" pos:end="36:49">IN_AIR</name><operator pos:start="36:50" pos:end="36:50">.</operator><name pos:start="36:51" pos:end="36:58">toString</name></name><argument_list pos:start="36:59" pos:end="36:60">()</argument_list></call></expr>;</expr_stmt>
		</block_content>}</block></if> <if type="elseif" pos:start="37:19" pos:end="39:17">else if <condition pos:start="37:27" pos:end="37:47">(<expr pos:start="37:28" pos:end="37:46"><literal type="string" pos:start="37:28" pos:end="37:33">"LAND"</literal><operator pos:start="37:34" pos:end="37:34">.</operator><call pos:start="37:35" pos:end="37:46"><name pos:start="37:35" pos:end="37:40">equals</name><argument_list pos:start="37:41" pos:end="37:46">(<argument pos:start="37:42" pos:end="37:45"><expr pos:start="37:42" pos:end="37:45"><name pos:start="37:42" pos:end="37:45">mode</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="37:49" pos:end="39:17">{<block_content pos:start="38:25" pos:end="38:61">
			<expr_stmt pos:start="38:25" pos:end="38:61"><expr pos:start="38:25" pos:end="38:60"><name pos:start="38:25" pos:end="38:29">dMode</name> <operator pos:start="38:31" pos:end="38:31">=</operator> <call pos:start="38:33" pos:end="38:60"><name pos:start="38:33" pos:end="38:58"><name pos:start="38:33" pos:end="38:42">FlightMode</name><operator pos:start="38:43" pos:end="38:43">.</operator><name pos:start="38:44" pos:end="38:49">IN_AIR</name><operator pos:start="38:50" pos:end="38:50">.</operator><name pos:start="38:51" pos:end="38:58">toString</name></name><argument_list pos:start="38:59" pos:end="38:60">()</argument_list></call></expr>;</expr_stmt>
		</block_content>}</block></if> <else pos:start="39:19" pos:end="41:17">else <block pos:start="39:24" pos:end="41:17">{<block_content pos:start="40:25" pos:end="40:78">
			<expr_stmt pos:start="40:25" pos:end="40:78"><expr pos:start="40:25" pos:end="40:77"><call pos:start="40:25" pos:end="40:77"><name pos:start="40:25" pos:end="40:38"><name pos:start="40:25" pos:end="40:30">LOGGER</name><operator pos:start="40:31" pos:end="40:31">.</operator><name pos:start="40:32" pos:end="40:38">hwFatal</name></name><argument_list pos:start="40:39" pos:end="40:77">(<argument pos:start="40:40" pos:end="40:76"><expr pos:start="40:40" pos:end="40:76"><literal type="string" pos:start="40:40" pos:end="40:47">"Mode '"</literal> <operator pos:start="40:49" pos:end="40:49">+</operator> <name pos:start="40:51" pos:end="40:54">mode</name> <operator pos:start="40:56" pos:end="40:56">+</operator> <literal type="string" pos:start="40:58" pos:end="40:76">"' not recognized!"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		</block_content>}</block></else></if_stmt>

		<decl_stmt pos:start="43:17" pos:end="43:92"><decl pos:start="43:17" pos:end="43:91"><type pos:start="43:17" pos:end="43:36"><name pos:start="43:17" pos:end="43:36">UAVModeChangeMessage</name></type> <name pos:start="43:38" pos:end="43:44">message</name> <init pos:start="43:46" pos:end="43:91">= <expr pos:start="43:48" pos:end="43:91"><operator pos:start="43:48" pos:end="43:50">new</operator> <call pos:start="43:52" pos:end="43:91"><name pos:start="43:52" pos:end="43:71">UAVModeChangeMessage</name><argument_list pos:start="43:72" pos:end="43:91">(<argument pos:start="43:73" pos:end="43:76"><expr pos:start="43:73" pos:end="43:76"><name pos:start="43:73" pos:end="43:76">gsid</name></expr></argument>, <argument pos:start="43:79" pos:end="43:83"><expr pos:start="43:79" pos:end="43:83"><name pos:start="43:79" pos:end="43:83">uavid</name></expr></argument>, <argument pos:start="43:86" pos:end="43:90"><expr pos:start="43:86" pos:end="43:90"><name pos:start="43:86" pos:end="43:90">dMode</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

		<return pos:start="45:17" pos:end="45:31">return <expr pos:start="45:24" pos:end="45:30"><name pos:start="45:24" pos:end="45:30">message</name></expr>;</return>
	</block_content>}</block></function>

}</block></class>
</unit>
