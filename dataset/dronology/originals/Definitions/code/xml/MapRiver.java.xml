<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="Java" filename="flatCode/MapRiver.java" pos:tabs="8"><package pos:start="1:1" pos:end="1:66">package <name pos:start="1:9" pos:end="1:65"><name pos:start="1:9" pos:end="1:11">edu</name><operator pos:start="1:12" pos:end="1:12">.</operator><name pos:start="1:13" pos:end="1:14">nd</name><operator pos:start="1:15" pos:end="1:15">.</operator><name pos:start="1:16" pos:end="1:24">dronology</name><operator pos:start="1:25" pos:end="1:25">.</operator><name pos:start="1:26" pos:end="1:33">services</name><operator pos:start="1:34" pos:end="1:34">.</operator><name pos:start="1:35" pos:end="1:44">extensions</name><operator pos:start="1:45" pos:end="1:45">.</operator><name pos:start="1:46" pos:end="1:56">areamapping</name><operator pos:start="1:57" pos:end="1:57">.</operator><name pos:start="1:58" pos:end="1:65">creation</name></name>;</package>

<import pos:start="3:1" pos:end="3:41">import <name pos:start="3:8" pos:end="3:40"><name pos:start="3:8" pos:end="3:10">com</name><operator pos:start="3:11" pos:end="3:11">.</operator><name pos:start="3:12" pos:end="3:17">google</name><operator pos:start="3:18" pos:end="3:18">.</operator><name pos:start="3:19" pos:end="3:22">gson</name><operator pos:start="3:23" pos:end="3:23">.</operator><name pos:start="3:24" pos:end="3:40">FieldNamingPolicy</name></name>;</import>

<import pos:start="5:1" pos:end="5:28">import <name pos:start="5:8" pos:end="5:27"><name pos:start="5:8" pos:end="5:10">com</name><operator pos:start="5:11" pos:end="5:11">.</operator><name pos:start="5:12" pos:end="5:17">google</name><operator pos:start="5:18" pos:end="5:18">.</operator><name pos:start="5:19" pos:end="5:22">gson</name><operator pos:start="5:23" pos:end="5:23">.</operator><name pos:start="5:24" pos:end="5:27">Gson</name></name>;</import>
<import pos:start="6:1" pos:end="6:35">import <name pos:start="6:8" pos:end="6:34"><name pos:start="6:8" pos:end="6:10">com</name><operator pos:start="6:11" pos:end="6:11">.</operator><name pos:start="6:12" pos:end="6:17">google</name><operator pos:start="6:18" pos:end="6:18">.</operator><name pos:start="6:19" pos:end="6:22">gson</name><operator pos:start="6:23" pos:end="6:23">.</operator><name pos:start="6:24" pos:end="6:34">GsonBuilder</name></name>;</import>

<import pos:start="8:1" pos:end="8:23">import <name pos:start="8:8" pos:end="8:22"><name pos:start="8:8" pos:end="8:11">java</name><operator pos:start="8:12" pos:end="8:12">.</operator><name pos:start="8:13" pos:end="8:15">awt</name><operator pos:start="8:16" pos:end="8:16">.</operator><name pos:start="8:17" pos:end="8:20">geom</name><operator pos:start="8:21" pos:end="8:21">.</operator><name pos:start="8:22" pos:end="8:22">*</name></name>;</import>
<import pos:start="9:1" pos:end="9:27">import <name pos:start="9:8" pos:end="9:26"><name pos:start="9:8" pos:end="9:11">java</name><operator pos:start="9:12" pos:end="9:12">.</operator><name pos:start="9:13" pos:end="9:14">io</name><operator pos:start="9:15" pos:end="9:15">.</operator><name pos:start="9:16" pos:end="9:26">IOException</name></name>;</import>
<import pos:start="10:1" pos:end="10:27">import <name pos:start="10:8" pos:end="10:26"><name pos:start="10:8" pos:end="10:11">java</name><operator pos:start="10:12" pos:end="10:12">.</operator><name pos:start="10:13" pos:end="10:15">nio</name><operator pos:start="10:16" pos:end="10:16">.</operator><name pos:start="10:17" pos:end="10:20">file</name><operator pos:start="10:21" pos:end="10:21">.</operator><name pos:start="10:22" pos:end="10:26">Paths</name></name>;</import>
<import pos:start="11:1" pos:end="11:27">import <name pos:start="11:8" pos:end="11:26"><name pos:start="11:8" pos:end="11:11">java</name><operator pos:start="11:12" pos:end="11:12">.</operator><name pos:start="11:13" pos:end="11:16">util</name><operator pos:start="11:17" pos:end="11:17">.</operator><name pos:start="11:18" pos:end="11:26">ArrayList</name></name>;</import>
<import pos:start="12:1" pos:end="12:22">import <name pos:start="12:8" pos:end="12:21"><name pos:start="12:8" pos:end="12:11">java</name><operator pos:start="12:12" pos:end="12:12">.</operator><name pos:start="12:13" pos:end="12:16">util</name><operator pos:start="12:17" pos:end="12:17">.</operator><name pos:start="12:18" pos:end="12:21">List</name></name>;</import>
<import pos:start="13:1" pos:end="13:24">import <name pos:start="13:8" pos:end="13:23"><name pos:start="13:8" pos:end="13:11">java</name><operator pos:start="13:12" pos:end="13:12">.</operator><name pos:start="13:13" pos:end="13:16">util</name><operator pos:start="13:17" pos:end="13:17">.</operator><name pos:start="13:18" pos:end="13:23">Vector</name></name>;</import>

<import pos:start="15:1" pos:end="15:28">import <name pos:start="15:8" pos:end="15:27"><name pos:start="15:8" pos:end="15:12">javax</name><operator pos:start="15:13" pos:end="15:13">.</operator><name pos:start="15:14" pos:end="15:16">rmi</name><operator pos:start="15:17" pos:end="15:17">.</operator><name pos:start="15:18" pos:end="15:22">CORBA</name><operator pos:start="15:23" pos:end="15:23">.</operator><name pos:start="15:24" pos:end="15:27">Util</name></name>;</import>
<import pos:start="16:1" pos:end="16:34">import <name pos:start="16:8" pos:end="16:33"><name pos:start="16:8" pos:end="16:12">javax</name><operator pos:start="16:13" pos:end="16:13">.</operator><name pos:start="16:14" pos:end="16:16">xml</name><operator pos:start="16:17" pos:end="16:17">.</operator><name pos:start="16:18" pos:end="16:26">transform</name><operator pos:start="16:27" pos:end="16:27">.</operator><name pos:start="16:28" pos:end="16:33">Source</name></name>;</import>

<import pos:start="18:1" pos:end="18:43">import <name pos:start="18:8" pos:end="18:42"><name pos:start="18:8" pos:end="18:10">org</name><operator pos:start="18:11" pos:end="18:11">.</operator><name pos:start="18:12" pos:end="18:17">apache</name><operator pos:start="18:18" pos:end="18:18">.</operator><name pos:start="18:19" pos:end="18:25">commons</name><operator pos:start="18:26" pos:end="18:26">.</operator><name pos:start="18:27" pos:end="18:38">collections4</name><operator pos:start="18:39" pos:end="18:39">.</operator><name pos:start="18:40" pos:end="18:42">Get</name></name>;</import>

<import pos:start="20:1" pos:end="20:23">import <name pos:start="20:8" pos:end="20:22"><name pos:start="20:8" pos:end="20:11">java</name><operator pos:start="20:12" pos:end="20:12">.</operator><name pos:start="20:13" pos:end="20:15">rmi</name><operator pos:start="20:16" pos:end="20:16">.</operator><name pos:start="20:17" pos:end="20:22">Naming</name></name>;</import>

<import pos:start="22:1" pos:end="22:54">import <name pos:start="22:8" pos:end="22:53"><name pos:start="22:8" pos:end="22:10">edu</name><operator pos:start="22:11" pos:end="22:11">.</operator><name pos:start="22:12" pos:end="22:13">nd</name><operator pos:start="22:14" pos:end="22:14">.</operator><name pos:start="22:15" pos:end="22:23">dronology</name><operator pos:start="22:24" pos:end="22:24">.</operator><name pos:start="22:25" pos:end="22:28">core</name><operator pos:start="22:29" pos:end="22:29">.</operator><name pos:start="22:30" pos:end="22:39">coordinate</name><operator pos:start="22:40" pos:end="22:40">.</operator><name pos:start="22:41" pos:end="22:53">LlaCoordinate</name></name>;</import>
<import pos:start="23:1" pos:end="23:43">import <name pos:start="23:8" pos:end="23:42"><name pos:start="23:8" pos:end="23:10">edu</name><operator pos:start="23:11" pos:end="23:11">.</operator><name pos:start="23:12" pos:end="23:13">nd</name><operator pos:start="23:14" pos:end="23:14">.</operator><name pos:start="23:15" pos:end="23:23">dronology</name><operator pos:start="23:24" pos:end="23:24">.</operator><name pos:start="23:25" pos:end="23:28">core</name><operator pos:start="23:29" pos:end="23:29">.</operator><name pos:start="23:30" pos:end="23:33">util</name><operator pos:start="23:34" pos:end="23:34">.</operator><name pos:start="23:35" pos:end="23:42">Waypoint</name></name>;</import>
<import pos:start="24:1" pos:end="24:73">import <name pos:start="24:8" pos:end="24:72"><name pos:start="24:8" pos:end="24:10">edu</name><operator pos:start="24:11" pos:end="24:11">.</operator><name pos:start="24:12" pos:end="24:13">nd</name><operator pos:start="24:14" pos:end="24:14">.</operator><name pos:start="24:15" pos:end="24:23">dronology</name><operator pos:start="24:24" pos:end="24:24">.</operator><name pos:start="24:25" pos:end="24:32">services</name><operator pos:start="24:33" pos:end="24:33">.</operator><name pos:start="24:34" pos:end="24:37">core</name><operator pos:start="24:38" pos:end="24:38">.</operator><name pos:start="24:39" pos:end="24:44">remote</name><operator pos:start="24:45" pos:end="24:45">.</operator><name pos:start="24:46" pos:end="24:72">IFlightManagerRemoteService</name></name>;</import>
<import pos:start="25:1" pos:end="25:60">import <name pos:start="25:8" pos:end="25:59"><name pos:start="25:8" pos:end="25:10">edu</name><operator pos:start="25:11" pos:end="25:11">.</operator><name pos:start="25:12" pos:end="25:13">nd</name><operator pos:start="25:14" pos:end="25:14">.</operator><name pos:start="25:15" pos:end="25:23">dronology</name><operator pos:start="25:24" pos:end="25:24">.</operator><name pos:start="25:25" pos:end="25:32">services</name><operator pos:start="25:33" pos:end="25:33">.</operator><name pos:start="25:34" pos:end="25:37">core</name><operator pos:start="25:38" pos:end="25:38">.</operator><name pos:start="25:39" pos:end="25:44">remote</name><operator pos:start="25:45" pos:end="25:45">.</operator><name pos:start="25:46" pos:end="25:59">IRemoteManager</name></name>;</import>
<import pos:start="26:1" pos:end="26:94">import <name pos:start="26:8" pos:end="26:93"><name pos:start="26:8" pos:end="26:10">edu</name><operator pos:start="26:11" pos:end="26:11">.</operator><name pos:start="26:12" pos:end="26:13">nd</name><operator pos:start="26:14" pos:end="26:14">.</operator><name pos:start="26:15" pos:end="26:23">dronology</name><operator pos:start="26:24" pos:end="26:24">.</operator><name pos:start="26:25" pos:end="26:32">services</name><operator pos:start="26:33" pos:end="26:33">.</operator><name pos:start="26:34" pos:end="26:43">extensions</name><operator pos:start="26:44" pos:end="26:44">.</operator><name pos:start="26:45" pos:end="26:55">areamapping</name><operator pos:start="26:56" pos:end="26:56">.</operator><name pos:start="26:57" pos:end="26:64">internal</name><operator pos:start="26:65" pos:end="26:65">.</operator><name pos:start="26:66" pos:end="26:93">AdaptedCreepingLinePrimitive</name></name>;</import>
<import pos:start="27:1" pos:end="27:74">import <name pos:start="27:8" pos:end="27:73"><name pos:start="27:8" pos:end="27:10">edu</name><operator pos:start="27:11" pos:end="27:11">.</operator><name pos:start="27:12" pos:end="27:13">nd</name><operator pos:start="27:14" pos:end="27:14">.</operator><name pos:start="27:15" pos:end="27:23">dronology</name><operator pos:start="27:24" pos:end="27:24">.</operator><name pos:start="27:25" pos:end="27:32">services</name><operator pos:start="27:33" pos:end="27:33">.</operator><name pos:start="27:34" pos:end="27:43">extensions</name><operator pos:start="27:44" pos:end="27:44">.</operator><name pos:start="27:45" pos:end="27:55">areamapping</name><operator pos:start="27:56" pos:end="27:56">.</operator><name pos:start="27:57" pos:end="27:64">internal</name><operator pos:start="27:65" pos:end="27:65">.</operator><name pos:start="27:66" pos:end="27:73">Geometry</name></name>;</import>
<import pos:start="28:1" pos:end="28:90">import <name pos:start="28:8" pos:end="28:89"><name pos:start="28:8" pos:end="28:10">edu</name><operator pos:start="28:11" pos:end="28:11">.</operator><name pos:start="28:12" pos:end="28:13">nd</name><operator pos:start="28:14" pos:end="28:14">.</operator><name pos:start="28:15" pos:end="28:23">dronology</name><operator pos:start="28:24" pos:end="28:24">.</operator><name pos:start="28:25" pos:end="28:32">services</name><operator pos:start="28:33" pos:end="28:33">.</operator><name pos:start="28:34" pos:end="28:43">extensions</name><operator pos:start="28:44" pos:end="28:44">.</operator><name pos:start="28:45" pos:end="28:55">areamapping</name><operator pos:start="28:56" pos:end="28:56">.</operator><name pos:start="28:57" pos:end="28:64">internal</name><operator pos:start="28:65" pos:end="28:65">.</operator><name pos:start="28:66" pos:end="28:89">PriorityPolygonPrimitive</name></name>;</import>
<import pos:start="29:1" pos:end="29:75">import <name pos:start="29:8" pos:end="29:74"><name pos:start="29:8" pos:end="29:10">edu</name><operator pos:start="29:11" pos:end="29:11">.</operator><name pos:start="29:12" pos:end="29:13">nd</name><operator pos:start="29:14" pos:end="29:14">.</operator><name pos:start="29:15" pos:end="29:23">dronology</name><operator pos:start="29:24" pos:end="29:24">.</operator><name pos:start="29:25" pos:end="29:32">services</name><operator pos:start="29:33" pos:end="29:33">.</operator><name pos:start="29:34" pos:end="29:43">extensions</name><operator pos:start="29:44" pos:end="29:44">.</operator><name pos:start="29:45" pos:end="29:55">areamapping</name><operator pos:start="29:56" pos:end="29:56">.</operator><name pos:start="29:57" pos:end="29:64">internal</name><operator pos:start="29:65" pos:end="29:65">.</operator><name pos:start="29:66" pos:end="29:74">RiverBank</name></name>;</import>
<import pos:start="30:1" pos:end="30:84">import <name pos:start="30:8" pos:end="30:83"><name pos:start="30:8" pos:end="30:10">edu</name><operator pos:start="30:11" pos:end="30:11">.</operator><name pos:start="30:12" pos:end="30:13">nd</name><operator pos:start="30:14" pos:end="30:14">.</operator><name pos:start="30:15" pos:end="30:23">dronology</name><operator pos:start="30:24" pos:end="30:24">.</operator><name pos:start="30:25" pos:end="30:32">services</name><operator pos:start="30:33" pos:end="30:33">.</operator><name pos:start="30:34" pos:end="30:43">extensions</name><operator pos:start="30:44" pos:end="30:44">.</operator><name pos:start="30:45" pos:end="30:55">areamapping</name><operator pos:start="30:56" pos:end="30:56">.</operator><name pos:start="30:57" pos:end="30:64">internal</name><operator pos:start="30:65" pos:end="30:65">.</operator><name pos:start="30:66" pos:end="30:83">RiverBankPrimitive</name></name>;</import>
<import pos:start="31:1" pos:end="31:75">import <name pos:start="31:8" pos:end="31:74"><name pos:start="31:8" pos:end="31:10">edu</name><operator pos:start="31:11" pos:end="31:11">.</operator><name pos:start="31:12" pos:end="31:13">nd</name><operator pos:start="31:14" pos:end="31:14">.</operator><name pos:start="31:15" pos:end="31:23">dronology</name><operator pos:start="31:24" pos:end="31:24">.</operator><name pos:start="31:25" pos:end="31:32">services</name><operator pos:start="31:33" pos:end="31:33">.</operator><name pos:start="31:34" pos:end="31:43">extensions</name><operator pos:start="31:44" pos:end="31:44">.</operator><name pos:start="31:45" pos:end="31:55">areamapping</name><operator pos:start="31:56" pos:end="31:56">.</operator><name pos:start="31:57" pos:end="31:64">internal</name><operator pos:start="31:65" pos:end="31:65">.</operator><name pos:start="31:66" pos:end="31:74">RiverList</name></name>;</import>
<import pos:start="32:1" pos:end="32:87">import <name pos:start="32:8" pos:end="32:86"><name pos:start="32:8" pos:end="32:10">edu</name><operator pos:start="32:11" pos:end="32:11">.</operator><name pos:start="32:12" pos:end="32:13">nd</name><operator pos:start="32:14" pos:end="32:14">.</operator><name pos:start="32:15" pos:end="32:23">dronology</name><operator pos:start="32:24" pos:end="32:24">.</operator><name pos:start="32:25" pos:end="32:32">services</name><operator pos:start="32:33" pos:end="32:33">.</operator><name pos:start="32:34" pos:end="32:43">extensions</name><operator pos:start="32:44" pos:end="32:44">.</operator><name pos:start="32:45" pos:end="32:55">areamapping</name><operator pos:start="32:56" pos:end="32:56">.</operator><name pos:start="32:57" pos:end="32:64">internal</name><operator pos:start="32:65" pos:end="32:65">.</operator><name pos:start="32:66" pos:end="32:86">SearchPatternStrategy</name></name>;</import>
<import pos:start="33:1" pos:end="33:78">import <name pos:start="33:8" pos:end="33:77"><name pos:start="33:8" pos:end="33:10">edu</name><operator pos:start="33:11" pos:end="33:11">.</operator><name pos:start="33:12" pos:end="33:13">nd</name><operator pos:start="33:14" pos:end="33:14">.</operator><name pos:start="33:15" pos:end="33:23">dronology</name><operator pos:start="33:24" pos:end="33:24">.</operator><name pos:start="33:25" pos:end="33:32">services</name><operator pos:start="33:33" pos:end="33:33">.</operator><name pos:start="33:34" pos:end="33:43">extensions</name><operator pos:start="33:44" pos:end="33:44">.</operator><name pos:start="33:45" pos:end="33:55">areamapping</name><operator pos:start="33:56" pos:end="33:56">.</operator><name pos:start="33:57" pos:end="33:64">internal</name><operator pos:start="33:65" pos:end="33:65">.</operator><name pos:start="33:66" pos:end="33:77">SourcePoints</name></name>;</import>
<import pos:start="34:1" pos:end="34:78">import <name pos:start="34:8" pos:end="34:77"><name pos:start="34:8" pos:end="34:10">edu</name><operator pos:start="34:11" pos:end="34:11">.</operator><name pos:start="34:12" pos:end="34:13">nd</name><operator pos:start="34:14" pos:end="34:14">.</operator><name pos:start="34:15" pos:end="34:23">dronology</name><operator pos:start="34:24" pos:end="34:24">.</operator><name pos:start="34:25" pos:end="34:32">services</name><operator pos:start="34:33" pos:end="34:33">.</operator><name pos:start="34:34" pos:end="34:43">extensions</name><operator pos:start="34:44" pos:end="34:44">.</operator><name pos:start="34:45" pos:end="34:55">areamapping</name><operator pos:start="34:56" pos:end="34:56">.</operator><name pos:start="34:57" pos:end="34:63">metrics</name><operator pos:start="34:64" pos:end="34:64">.</operator><name pos:start="34:65" pos:end="34:77">MetricsRunner</name></name>;</import>
<import pos:start="35:1" pos:end="35:78">import <name pos:start="35:8" pos:end="35:77"><name pos:start="35:8" pos:end="35:10">edu</name><operator pos:start="35:11" pos:end="35:11">.</operator><name pos:start="35:12" pos:end="35:13">nd</name><operator pos:start="35:14" pos:end="35:14">.</operator><name pos:start="35:15" pos:end="35:23">dronology</name><operator pos:start="35:24" pos:end="35:24">.</operator><name pos:start="35:25" pos:end="35:32">services</name><operator pos:start="35:33" pos:end="35:33">.</operator><name pos:start="35:34" pos:end="35:43">extensions</name><operator pos:start="35:44" pos:end="35:44">.</operator><name pos:start="35:45" pos:end="35:55">areamapping</name><operator pos:start="35:56" pos:end="35:56">.</operator><name pos:start="35:57" pos:end="35:61">model</name><operator pos:start="35:62" pos:end="35:62">.</operator><name pos:start="35:63" pos:end="35:77">RiverSubsegment</name></name>;</import>
<import pos:start="36:1" pos:end="36:77">import <name pos:start="36:8" pos:end="36:76"><name pos:start="36:8" pos:end="36:10">edu</name><operator pos:start="36:11" pos:end="36:11">.</operator><name pos:start="36:12" pos:end="36:13">nd</name><operator pos:start="36:14" pos:end="36:14">.</operator><name pos:start="36:15" pos:end="36:23">dronology</name><operator pos:start="36:24" pos:end="36:24">.</operator><name pos:start="36:25" pos:end="36:32">services</name><operator pos:start="36:33" pos:end="36:33">.</operator><name pos:start="36:34" pos:end="36:43">extensions</name><operator pos:start="36:44" pos:end="36:44">.</operator><name pos:start="36:45" pos:end="36:55">areamapping</name><operator pos:start="36:56" pos:end="36:56">.</operator><name pos:start="36:57" pos:end="36:61">model</name><operator pos:start="36:62" pos:end="36:62">.</operator><name pos:start="36:63" pos:end="36:76">RoutePrimitive</name></name>;</import>
<import pos:start="37:1" pos:end="37:87">import <name pos:start="37:8" pos:end="37:86"><name pos:start="37:8" pos:end="37:10">edu</name><operator pos:start="37:11" pos:end="37:11">.</operator><name pos:start="37:12" pos:end="37:13">nd</name><operator pos:start="37:14" pos:end="37:14">.</operator><name pos:start="37:15" pos:end="37:23">dronology</name><operator pos:start="37:24" pos:end="37:24">.</operator><name pos:start="37:25" pos:end="37:32">services</name><operator pos:start="37:33" pos:end="37:33">.</operator><name pos:start="37:34" pos:end="37:43">extensions</name><operator pos:start="37:44" pos:end="37:44">.</operator><name pos:start="37:45" pos:end="37:55">areamapping</name><operator pos:start="37:56" pos:end="37:56">.</operator><name pos:start="37:57" pos:end="37:61">model</name><operator pos:start="37:62" pos:end="37:62">.</operator><name pos:start="37:63" pos:end="37:76">RoutePrimitive</name><operator pos:start="37:77" pos:end="37:77">.</operator><name pos:start="37:78" pos:end="37:86">RouteType</name></name>;</import>
<import pos:start="38:1" pos:end="38:71">import <name pos:start="38:8" pos:end="38:70"><name pos:start="38:8" pos:end="38:10">edu</name><operator pos:start="38:11" pos:end="38:11">.</operator><name pos:start="38:12" pos:end="38:13">nd</name><operator pos:start="38:14" pos:end="38:14">.</operator><name pos:start="38:15" pos:end="38:23">dronology</name><operator pos:start="38:24" pos:end="38:24">.</operator><name pos:start="38:25" pos:end="38:32">services</name><operator pos:start="38:33" pos:end="38:33">.</operator><name pos:start="38:34" pos:end="38:43">extensions</name><operator pos:start="38:44" pos:end="38:44">.</operator><name pos:start="38:45" pos:end="38:55">areamapping</name><operator pos:start="38:56" pos:end="38:56">.</operator><name pos:start="38:57" pos:end="38:60">util</name><operator pos:start="38:61" pos:end="38:61">.</operator><name pos:start="38:62" pos:end="38:70">Utilities</name></name>;</import>
<import pos:start="39:1" pos:end="39:58">import <name pos:start="39:8" pos:end="39:57"><name pos:start="39:8" pos:end="39:10">edu</name><operator pos:start="39:11" pos:end="39:11">.</operator><name pos:start="39:12" pos:end="39:13">nd</name><operator pos:start="39:14" pos:end="39:14">.</operator><name pos:start="39:15" pos:end="39:23">dronology</name><operator pos:start="39:24" pos:end="39:24">.</operator><name pos:start="39:25" pos:end="39:32">services</name><operator pos:start="39:33" pos:end="39:33">.</operator><name pos:start="39:34" pos:end="39:37">core</name><operator pos:start="39:38" pos:end="39:38">.</operator><name pos:start="39:39" pos:end="39:49">areamapping</name><operator pos:start="39:50" pos:end="39:50">.</operator><name pos:start="39:51" pos:end="39:57">EdgeLla</name></name>;</import>
<import pos:start="40:1" pos:end="40:57">import <name pos:start="40:8" pos:end="40:56"><name pos:start="40:8" pos:end="40:10">edu</name><operator pos:start="40:11" pos:end="40:11">.</operator><name pos:start="40:12" pos:end="40:13">nd</name><operator pos:start="40:14" pos:end="40:14">.</operator><name pos:start="40:15" pos:end="40:23">dronology</name><operator pos:start="40:24" pos:end="40:24">.</operator><name pos:start="40:25" pos:end="40:32">services</name><operator pos:start="40:33" pos:end="40:33">.</operator><name pos:start="40:34" pos:end="40:37">core</name><operator pos:start="40:38" pos:end="40:38">.</operator><name pos:start="40:39" pos:end="40:43">items</name><operator pos:start="40:44" pos:end="40:44">.</operator><name pos:start="40:45" pos:end="40:56">IAreaMapping</name></name>;</import>
<import pos:start="41:1" pos:end="41:56">import <name pos:start="41:8" pos:end="41:55"><name pos:start="41:8" pos:end="41:10">edu</name><operator pos:start="41:11" pos:end="41:11">.</operator><name pos:start="41:12" pos:end="41:13">nd</name><operator pos:start="41:14" pos:end="41:14">.</operator><name pos:start="41:15" pos:end="41:23">dronology</name><operator pos:start="41:24" pos:end="41:24">.</operator><name pos:start="41:25" pos:end="41:32">services</name><operator pos:start="41:33" pos:end="41:33">.</operator><name pos:start="41:34" pos:end="41:37">core</name><operator pos:start="41:38" pos:end="41:38">.</operator><name pos:start="41:39" pos:end="41:43">items</name><operator pos:start="41:44" pos:end="41:44">.</operator><name pos:start="41:45" pos:end="41:55">IMappedItem</name></name>;</import>
<import pos:start="42:1" pos:end="42:57">import <name pos:start="42:8" pos:end="42:56"><name pos:start="42:8" pos:end="42:10">edu</name><operator pos:start="42:11" pos:end="42:11">.</operator><name pos:start="42:12" pos:end="42:13">nd</name><operator pos:start="42:14" pos:end="42:14">.</operator><name pos:start="42:15" pos:end="42:23">dronology</name><operator pos:start="42:24" pos:end="42:24">.</operator><name pos:start="42:25" pos:end="42:32">services</name><operator pos:start="42:33" pos:end="42:33">.</operator><name pos:start="42:34" pos:end="42:37">core</name><operator pos:start="42:38" pos:end="42:38">.</operator><name pos:start="42:39" pos:end="42:43">items</name><operator pos:start="42:44" pos:end="42:44">.</operator><name pos:start="42:45" pos:end="42:56">PriorityArea</name></name>;</import>


<class pos:start="45:1" pos:end="232:1"><specifier pos:start="45:1" pos:end="45:6">public</specifier> class <name pos:start="45:14" pos:end="45:21">MapRiver</name> <super_list pos:start="45:23" pos:end="45:46"><implements pos:start="45:23" pos:end="45:46">implements <super pos:start="45:34" pos:end="45:46"><name pos:start="45:34" pos:end="45:46">IRouteCreator</name></super></implements></super_list><block pos:start="45:47" pos:end="232:1">{
	<comment type="block" pos:start="46:9" pos:end="49:11">/*
	 * ASSUMPTIONS: APERATURE_WIDTH shall be measured in meters. MAX_RIVER_WIDTH
	 * assumed to be 1000 meters.
	 */</comment>
	<decl_stmt pos:start="50:9" pos:end="50:49"><decl pos:start="50:9" pos:end="50:48"><type pos:start="50:9" pos:end="50:27"><specifier pos:start="50:9" pos:end="50:13">final</specifier> <specifier pos:start="50:15" pos:end="50:20">static</specifier> <name pos:start="50:22" pos:end="50:27">double</name></type> <name pos:start="50:29" pos:end="50:42">OVERLAP_FACTOR</name> <init pos:start="50:44" pos:end="50:48">= <expr pos:start="50:46" pos:end="50:48"><literal type="number" pos:start="50:46" pos:end="50:48">0.7</literal></expr></init></decl>;</decl_stmt>
	<decl_stmt pos:start="51:9" pos:end="51:49"><decl pos:start="51:9" pos:end="51:48"><type pos:start="51:9" pos:end="51:27"><specifier pos:start="51:9" pos:end="51:13">final</specifier> <specifier pos:start="51:15" pos:end="51:20">static</specifier> <name pos:start="51:22" pos:end="51:27">double</name></type> <name pos:start="51:29" pos:end="51:43">APERATURE_WIDTH</name> <init pos:start="51:45" pos:end="51:48">= <expr pos:start="51:47" pos:end="51:48"><literal type="number" pos:start="51:47" pos:end="51:48">10</literal></expr></init></decl>;</decl_stmt>
	<decl_stmt pos:start="52:9" pos:end="52:67"><decl pos:start="52:9" pos:end="52:66"><type pos:start="52:9" pos:end="52:27"><specifier pos:start="52:9" pos:end="52:13">final</specifier> <specifier pos:start="52:15" pos:end="52:20">static</specifier> <name pos:start="52:22" pos:end="52:27">double</name></type> <name pos:start="52:29" pos:end="52:44">APERATURE_HEIGHT</name> <init pos:start="52:46" pos:end="52:66">= <expr pos:start="52:48" pos:end="52:66"><name pos:start="52:48" pos:end="52:62">APERATURE_WIDTH</name><operator pos:start="52:63" pos:end="52:63">*</operator><literal type="number" pos:start="52:64" pos:end="52:66">0.8</literal></expr></init></decl>;</decl_stmt>
	<decl_stmt pos:start="53:9" pos:end="53:52"><decl pos:start="53:9" pos:end="53:51"><type pos:start="53:9" pos:end="53:27"><specifier pos:start="53:9" pos:end="53:13">final</specifier> <specifier pos:start="53:15" pos:end="53:20">static</specifier> <name pos:start="53:22" pos:end="53:27">double</name></type> <name pos:start="53:29" pos:end="53:43">MAX_RIVER_WIDTH</name> <init pos:start="53:45" pos:end="53:51">= <expr pos:start="53:47" pos:end="53:51"><literal type="number" pos:start="53:47" pos:end="53:51">10000</literal></expr></init></decl>;</decl_stmt>
	<decl_stmt pos:start="54:9" pos:end="54:42"><decl pos:start="54:9" pos:end="54:41"><type pos:start="54:9" pos:end="54:26"><specifier pos:start="54:9" pos:end="54:15">private</specifier> <specifier pos:start="54:17" pos:end="54:22">static</specifier> <name pos:start="54:24" pos:end="54:26">int</name></type> <name pos:start="54:28" pos:end="54:36">dronesNum</name> <init pos:start="54:38" pos:end="54:41">= <expr pos:start="54:40" pos:end="54:41"><literal type="number" pos:start="54:40" pos:end="54:41">10</literal></expr></init></decl>;</decl_stmt>
	<decl_stmt pos:start="55:9" pos:end="55:74"><decl pos:start="55:9" pos:end="55:73"><type pos:start="55:9" pos:end="55:35"><specifier pos:start="55:9" pos:end="55:15">private</specifier> <specifier pos:start="55:17" pos:end="55:22">static</specifier> <specifier pos:start="55:24" pos:end="55:28">final</specifier> <name pos:start="55:30" pos:end="55:35">String</name></type> <name pos:start="55:37" pos:end="55:50">ADDRESS_SCHEME</name> <init pos:start="55:52" pos:end="55:73">= <expr pos:start="55:54" pos:end="55:73"><literal type="string" pos:start="55:54" pos:end="55:73">"rmi://%s:%s/Remote"</literal></expr></init></decl>;</decl_stmt>
	<decl_stmt pos:start="56:9" pos:end="56:46"><decl pos:start="56:9" pos:end="56:45"><type pos:start="56:9" pos:end="56:30"><specifier pos:start="56:9" pos:end="56:15">private</specifier> <name pos:start="56:17" pos:end="56:30"><name pos:start="56:17" pos:end="56:22">Vector</name><argument_list type="generic" pos:start="56:23" pos:end="56:30">&lt;<argument pos:start="56:24" pos:end="56:29"><name pos:start="56:24" pos:end="56:29">Double</name></argument>&gt;</argument_list></name></type> <name pos:start="56:32" pos:end="56:45">latitudeBounds</name></decl>;</decl_stmt>
	<decl_stmt pos:start="57:9" pos:end="57:41"><decl pos:start="57:9" pos:end="57:40"><type pos:start="57:9" pos:end="57:31"><specifier pos:start="57:9" pos:end="57:15">private</specifier> <name pos:start="57:17" pos:end="57:31"><name pos:start="57:17" pos:end="57:20">List</name><argument_list type="generic" pos:start="57:21" pos:end="57:31">&lt;<argument pos:start="57:22" pos:end="57:30"><name pos:start="57:22" pos:end="57:30">RiverBank</name></argument>&gt;</argument_list></name></type> <name pos:start="57:33" pos:end="57:40">bankList</name></decl>;</decl_stmt>
	<decl_stmt pos:start="58:9" pos:end="58:48"><decl pos:start="58:9" pos:end="58:47"><type pos:start="58:9" pos:end="58:29"><specifier pos:start="58:9" pos:end="58:15">private</specifier> <name pos:start="58:17" pos:end="58:29"><name pos:start="58:17" pos:end="58:22">Path2D</name><operator pos:start="58:23" pos:end="58:23">.</operator><name pos:start="58:24" pos:end="58:29">Double</name></name></type> <name pos:start="58:31" pos:end="58:47">totalRiverSegment</name></decl>;</decl_stmt>
	<decl_stmt pos:start="59:9" pos:end="59:38"><decl pos:start="59:9" pos:end="59:37"><type pos:start="59:9" pos:end="59:25"><specifier pos:start="59:9" pos:end="59:15">private</specifier> <name pos:start="59:17" pos:end="59:25">RiverList</name></type> <name pos:start="59:27" pos:end="59:37">bankMapping</name></decl>;</decl_stmt>
	<decl_stmt pos:start="60:9" pos:end="60:49"><decl pos:start="60:9" pos:end="60:48"><type pos:start="60:9" pos:end="60:34"><specifier pos:start="60:9" pos:end="60:15">private</specifier> <name pos:start="60:17" pos:end="60:34"><name pos:start="60:17" pos:end="60:20">List</name><argument_list type="generic" pos:start="60:21" pos:end="60:34">&lt;<argument pos:start="60:22" pos:end="60:33"><name pos:start="60:22" pos:end="60:33">SourcePoints</name></argument>&gt;</argument_list></name></type> <name pos:start="60:36" pos:end="60:48">priorityAreas</name></decl>;</decl_stmt>

	<constructor pos:start="62:9" pos:end="67:9"><annotation pos:start="62:9" pos:end="62:19">@<name pos:start="62:10" pos:end="62:19">Deprecated</name></annotation>
	<specifier pos:start="63:9" pos:end="63:14">public</specifier> <name pos:start="63:16" pos:end="63:23">MapRiver</name><parameter_list pos:start="63:24" pos:end="63:25">()</parameter_list> <block pos:start="63:27" pos:end="67:9">{<block_content pos:start="64:17" pos:end="66:50">
		<expr_stmt pos:start="64:17" pos:end="64:28"><expr pos:start="64:17" pos:end="64:27"><call pos:start="64:17" pos:end="64:27"><name pos:start="64:17" pos:end="64:25">parseJSON</name><argument_list pos:start="64:26" pos:end="64:27">()</argument_list></call></expr>;</expr_stmt>
		<expr_stmt pos:start="65:17" pos:end="65:48"><expr pos:start="65:17" pos:end="65:47"><name pos:start="65:17" pos:end="65:30">latitudeBounds</name> <operator pos:start="65:32" pos:end="65:32">=</operator> <operator pos:start="65:34" pos:end="65:36">new</operator> <call pos:start="65:38" pos:end="65:47"><name pos:start="65:38" pos:end="65:45"><name pos:start="65:38" pos:end="65:43">Vector</name><argument_list type="generic" pos:start="65:44" pos:end="65:45">&lt;&gt;</argument_list></name><argument_list pos:start="65:46" pos:end="65:47">()</argument_list></call></expr>;</expr_stmt>
		<expr_stmt pos:start="66:17" pos:end="66:50"><expr pos:start="66:17" pos:end="66:49"><call pos:start="66:17" pos:end="66:49"><name pos:start="66:17" pos:end="66:36">preprocessRiverBanks</name><argument_list pos:start="66:37" pos:end="66:49">(<argument pos:start="66:38" pos:end="66:48"><expr pos:start="66:38" pos:end="66:48"><name pos:start="66:38" pos:end="66:48">bankMapping</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	</block_content>}</block></constructor>
	
	<constructor pos:start="69:9" pos:end="78:9"><specifier pos:start="69:9" pos:end="69:14">public</specifier> <name pos:start="69:16" pos:end="69:23">MapRiver</name><parameter_list pos:start="69:24" pos:end="69:45">(<parameter pos:start="69:25" pos:end="69:44"><decl pos:start="69:25" pos:end="69:44"><type pos:start="69:25" pos:end="69:36"><name pos:start="69:25" pos:end="69:36">IAreaMapping</name></type> <name pos:start="69:38" pos:end="69:44">mapping</name></decl></parameter>)</parameter_list> <block pos:start="69:47" pos:end="78:9">{<block_content pos:start="70:17" pos:end="77:17">
		<expr_stmt pos:start="70:17" pos:end="70:48"><expr pos:start="70:17" pos:end="70:47"><name pos:start="70:17" pos:end="70:30">latitudeBounds</name> <operator pos:start="70:32" pos:end="70:32">=</operator> <operator pos:start="70:34" pos:end="70:36">new</operator> <call pos:start="70:38" pos:end="70:47"><name pos:start="70:38" pos:end="70:45"><name pos:start="70:38" pos:end="70:43">Vector</name><argument_list type="generic" pos:start="70:44" pos:end="70:45">&lt;&gt;</argument_list></name><argument_list pos:start="70:46" pos:end="70:47">()</argument_list></call></expr>;</expr_stmt>
		<expr_stmt pos:start="71:17" pos:end="71:50"><expr pos:start="71:17" pos:end="71:49"><name pos:start="71:17" pos:end="71:29">priorityAreas</name> <operator pos:start="71:31" pos:end="71:31">=</operator> <operator pos:start="71:33" pos:end="71:35">new</operator> <call pos:start="71:37" pos:end="71:49"><name pos:start="71:37" pos:end="71:47"><name pos:start="71:37" pos:end="71:45">ArrayList</name><argument_list type="generic" pos:start="71:46" pos:end="71:47">&lt;&gt;</argument_list></name><argument_list pos:start="71:48" pos:end="71:49">()</argument_list></call></expr>;</expr_stmt>
		<expr_stmt pos:start="72:17" pos:end="72:191"><expr pos:start="72:17" pos:end="72:190"><name pos:start="72:17" pos:end="72:24">bankList</name> <operator pos:start="72:26" pos:end="72:26">=</operator> <call pos:start="72:28" pos:end="72:190"><name pos:start="72:28" pos:end="72:58"><name pos:start="72:28" pos:end="72:36">Utilities</name><operator pos:start="72:37" pos:end="72:37">.</operator><name pos:start="72:38" pos:end="72:58">processDronologyInput</name></name><argument_list pos:start="72:59" pos:end="72:190">(<argument pos:start="72:60" pos:end="72:115"><expr pos:start="72:60" pos:end="72:115"><call pos:start="72:60" pos:end="72:115"><name pos:start="72:60" pos:end="72:87"><name pos:start="72:60" pos:end="72:68">Utilities</name><operator pos:start="72:69" pos:end="72:69">.</operator><name pos:start="72:70" pos:end="72:87">edgeLlaToRiverBank</name></name><argument_list pos:start="72:88" pos:end="72:115">(<argument pos:start="72:89" pos:end="72:114"><expr pos:start="72:89" pos:end="72:114"><call pos:start="72:89" pos:end="72:114"><name pos:start="72:89" pos:end="72:111"><name pos:start="72:89" pos:end="72:95">mapping</name><operator pos:start="72:96" pos:end="72:96">.</operator><name pos:start="72:97" pos:end="72:111">getMappedPoints</name></name><argument_list pos:start="72:112" pos:end="72:114">(<argument pos:start="72:113" pos:end="72:113"><expr pos:start="72:113" pos:end="72:113"><literal type="number" pos:start="72:113" pos:end="72:113">0</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="72:118" pos:end="72:173"><expr pos:start="72:118" pos:end="72:173"><call pos:start="72:118" pos:end="72:173"><name pos:start="72:118" pos:end="72:145"><name pos:start="72:118" pos:end="72:126">Utilities</name><operator pos:start="72:127" pos:end="72:127">.</operator><name pos:start="72:128" pos:end="72:145">edgeLlaToRiverBank</name></name><argument_list pos:start="72:146" pos:end="72:173">(<argument pos:start="72:147" pos:end="72:172"><expr pos:start="72:147" pos:end="72:172"><call pos:start="72:147" pos:end="72:172"><name pos:start="72:147" pos:end="72:169"><name pos:start="72:147" pos:end="72:153">mapping</name><operator pos:start="72:154" pos:end="72:154">.</operator><name pos:start="72:155" pos:end="72:169">getMappedPoints</name></name><argument_list pos:start="72:170" pos:end="72:172">(<argument pos:start="72:171" pos:end="72:171"><expr pos:start="72:171" pos:end="72:171"><literal type="number" pos:start="72:171" pos:end="72:171">1</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="72:176" pos:end="72:189"><expr pos:start="72:176" pos:end="72:189"><name pos:start="72:176" pos:end="72:189">latitudeBounds</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt pos:start="73:17" pos:end="73:77"><expr pos:start="73:17" pos:end="73:76"><call pos:start="73:17" pos:end="73:76"><name pos:start="73:17" pos:end="73:42"><name pos:start="73:17" pos:end="73:25">Utilities</name><operator pos:start="73:26" pos:end="73:26">.</operator><name pos:start="73:27" pos:end="73:42">verifyInputOrder</name></name><argument_list pos:start="73:43" pos:end="73:76">(<argument pos:start="73:44" pos:end="73:58"><expr pos:start="73:44" pos:end="73:58"><call pos:start="73:44" pos:end="73:58"><name pos:start="73:44" pos:end="73:55"><name pos:start="73:44" pos:end="73:51">bankList</name><operator pos:start="73:52" pos:end="73:52">.</operator><name pos:start="73:53" pos:end="73:55">get</name></name><argument_list pos:start="73:56" pos:end="73:58">(<argument pos:start="73:57" pos:end="73:57"><expr pos:start="73:57" pos:end="73:57"><literal type="number" pos:start="73:57" pos:end="73:57">0</literal></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="73:61" pos:end="73:75"><expr pos:start="73:61" pos:end="73:75"><call pos:start="73:61" pos:end="73:75"><name pos:start="73:61" pos:end="73:72"><name pos:start="73:61" pos:end="73:68">bankList</name><operator pos:start="73:69" pos:end="73:69">.</operator><name pos:start="73:70" pos:end="73:72">get</name></name><argument_list pos:start="73:73" pos:end="73:75">(<argument pos:start="73:74" pos:end="73:74"><expr pos:start="73:74" pos:end="73:74"><literal type="number" pos:start="73:74" pos:end="73:74">1</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<decl_stmt pos:start="74:17" pos:end="74:80"><decl pos:start="74:17" pos:end="74:79"><type pos:start="74:17" pos:end="74:33"><name pos:start="74:17" pos:end="74:33"><name pos:start="74:17" pos:end="74:20">List</name><argument_list type="generic" pos:start="74:21" pos:end="74:33">&lt;<argument pos:start="74:22" pos:end="74:32"><name pos:start="74:22" pos:end="74:32">IMappedItem</name></argument>&gt;</argument_list></name></type> <name pos:start="74:35" pos:end="74:47">prioritySpots</name> <init pos:start="74:49" pos:end="74:79">= <expr pos:start="74:51" pos:end="74:79"><call pos:start="74:51" pos:end="74:79"><name pos:start="74:51" pos:end="74:77"><name pos:start="74:51" pos:end="74:57">mapping</name><operator pos:start="74:58" pos:end="74:58">.</operator><name pos:start="74:59" pos:end="74:77">getLocationMappings</name></name><argument_list pos:start="74:78" pos:end="74:79">()</argument_list></call></expr></init></decl>;</decl_stmt>
		<for pos:start="75:17" pos:end="77:17">for<control pos:start="75:20" pos:end="75:53">(<init pos:start="75:21" pos:end="75:52"><decl pos:start="75:21" pos:end="75:52"><type pos:start="75:21" pos:end="75:31"><name pos:start="75:21" pos:end="75:31">IMappedItem</name></type> <name pos:start="75:33" pos:end="75:36">area</name> <range pos:start="75:38" pos:end="75:52">: <expr pos:start="75:40" pos:end="75:52"><name pos:start="75:40" pos:end="75:52">prioritySpots</name></expr></range></decl></init>)</control> <block pos:start="75:55" pos:end="77:17">{<block_content pos:start="76:25" pos:end="76:103">
			<expr_stmt pos:start="76:25" pos:end="76:103"><expr pos:start="76:25" pos:end="76:102"><call pos:start="76:25" pos:end="76:102"><name pos:start="76:25" pos:end="76:41"><name pos:start="76:25" pos:end="76:37">priorityAreas</name><operator pos:start="76:38" pos:end="76:38">.</operator><name pos:start="76:39" pos:end="76:41">add</name></name><argument_list pos:start="76:42" pos:end="76:102">(<argument pos:start="76:43" pos:end="76:101"><expr pos:start="76:43" pos:end="76:101"><call pos:start="76:43" pos:end="76:101"><name pos:start="76:43" pos:end="76:73"><name pos:start="76:43" pos:end="76:51">Utilities</name><operator pos:start="76:52" pos:end="76:52">.</operator><name pos:start="76:53" pos:end="76:73">transformPriorityArea</name></name><argument_list pos:start="76:74" pos:end="76:101">(<argument pos:start="76:75" pos:end="76:78"><expr pos:start="76:75" pos:end="76:78"><name pos:start="76:75" pos:end="76:78">area</name></expr></argument>, <argument pos:start="76:81" pos:end="76:100"><expr pos:start="76:81" pos:end="76:100"><call pos:start="76:81" pos:end="76:100"><name pos:start="76:81" pos:end="76:98">getAverageLatitude</name><argument_list pos:start="76:99" pos:end="76:100">()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		</block_content>}</block></for>
	</block_content>}</block></constructor>
	
	<function pos:start="80:9" pos:end="83:9"><annotation pos:start="80:9" pos:end="80:17">@<name pos:start="80:10" pos:end="80:17">Override</name></annotation>
	<type pos:start="81:9" pos:end="81:30"><specifier pos:start="81:9" pos:end="81:14">public</specifier> <name pos:start="81:16" pos:end="81:30"><name pos:start="81:16" pos:end="81:19">List</name><argument_list type="generic" pos:start="81:20" pos:end="81:30">&lt;<argument pos:start="81:21" pos:end="81:29"><name pos:start="81:21" pos:end="81:29">RiverBank</name></argument>&gt;</argument_list></name></type> <name pos:start="81:32" pos:end="81:42">getBankList</name><parameter_list pos:start="81:43" pos:end="81:44">()</parameter_list><block pos:start="81:45" pos:end="83:9">{<block_content pos:start="82:17" pos:end="82:32">
		<return pos:start="82:17" pos:end="82:32">return <expr pos:start="82:24" pos:end="82:31"><name pos:start="82:24" pos:end="82:31">bankList</name></expr>;</return>
	</block_content>}</block></function>
	
	<function pos:start="85:9" pos:end="88:9"><annotation pos:start="85:9" pos:end="85:17">@<name pos:start="85:10" pos:end="85:17">Override</name></annotation>
	<type pos:start="86:9" pos:end="86:28"><specifier pos:start="86:9" pos:end="86:14">public</specifier> <name pos:start="86:16" pos:end="86:28"><name pos:start="86:16" pos:end="86:21">Path2D</name><operator pos:start="86:22" pos:end="86:22">.</operator><name pos:start="86:23" pos:end="86:28">Double</name></name></type> <name pos:start="86:30" pos:end="86:49">getTotalRiverSegment</name><parameter_list pos:start="86:50" pos:end="86:51">()</parameter_list><block pos:start="86:52" pos:end="88:9">{<block_content pos:start="87:17" pos:end="87:41">
		<return pos:start="87:17" pos:end="87:41">return <expr pos:start="87:24" pos:end="87:40"><name pos:start="87:24" pos:end="87:40">totalRiverSegment</name></expr>;</return>
	</block_content>}</block></function>
	
	<function pos:start="90:9" pos:end="93:9"><annotation pos:start="90:9" pos:end="90:17">@<name pos:start="90:10" pos:end="90:17">Override</name></annotation>
	<type pos:start="91:9" pos:end="91:21"><specifier pos:start="91:9" pos:end="91:14">public</specifier> <name pos:start="91:16" pos:end="91:21">double</name></type> <name pos:start="91:23" pos:end="91:40">getAverageLatitude</name><parameter_list pos:start="91:41" pos:end="91:42">()</parameter_list> <block pos:start="91:44" pos:end="93:9">{<block_content pos:start="92:17" pos:end="92:94">
		<return pos:start="92:17" pos:end="92:94">return <expr pos:start="92:24" pos:end="92:93"><call pos:start="92:24" pos:end="92:93"><name pos:start="92:24" pos:end="92:47"><name pos:start="92:24" pos:end="92:32">Utilities</name><operator pos:start="92:33" pos:end="92:33">.</operator><name pos:start="92:34" pos:end="92:47">getAvgLatitude</name></name><argument_list pos:start="92:48" pos:end="92:93">(<argument pos:start="92:49" pos:end="92:69"><expr pos:start="92:49" pos:end="92:69"><call pos:start="92:49" pos:end="92:69"><name pos:start="92:49" pos:end="92:66"><name pos:start="92:49" pos:end="92:62">latitudeBounds</name><operator pos:start="92:63" pos:end="92:63">.</operator><name pos:start="92:64" pos:end="92:66">get</name></name><argument_list pos:start="92:67" pos:end="92:69">(<argument pos:start="92:68" pos:end="92:68"><expr pos:start="92:68" pos:end="92:68"><literal type="number" pos:start="92:68" pos:end="92:68">0</literal></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="92:72" pos:end="92:92"><expr pos:start="92:72" pos:end="92:92"><call pos:start="92:72" pos:end="92:92"><name pos:start="92:72" pos:end="92:89"><name pos:start="92:72" pos:end="92:85">latitudeBounds</name><operator pos:start="92:86" pos:end="92:86">.</operator><name pos:start="92:87" pos:end="92:89">get</name></name><argument_list pos:start="92:90" pos:end="92:92">(<argument pos:start="92:91" pos:end="92:91"><expr pos:start="92:91" pos:end="92:91"><literal type="number" pos:start="92:91" pos:end="92:91">1</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
	</block_content>}</block></function>
	
	<comment type="block" format="javadoc" pos:start="95:9" pos:end="97:11">/**
	 * This method uses the GSON library to automatically parse the riverbank JSON file
	 */</comment>
	<function pos:start="98:9" pos:end="116:9"><type pos:start="98:9" pos:end="98:20"><specifier pos:start="98:9" pos:end="98:15">private</specifier> <name pos:start="98:17" pos:end="98:20">void</name></type> <name pos:start="98:22" pos:end="98:30">parseJSON</name><parameter_list pos:start="98:31" pos:end="98:32">()</parameter_list> <block pos:start="98:34" pos:end="116:9">{<block_content pos:start="99:17" pos:end="115:17">
		<decl_stmt pos:start="99:17" pos:end="101:42"><decl pos:start="99:17" pos:end="101:41"><type pos:start="99:17" pos:end="99:20"><name pos:start="99:17" pos:end="99:20">Gson</name></type> <name pos:start="99:22" pos:end="99:25">GSON</name> <init pos:start="99:27" pos:end="101:41">= <expr pos:start="99:29" pos:end="101:41"><operator pos:start="99:29" pos:end="99:31">new</operator> <call pos:start="99:33" pos:end="99:45"><name pos:start="99:33" pos:end="99:43">GsonBuilder</name><argument_list pos:start="99:44" pos:end="99:45">()</argument_list></call><operator pos:start="99:46" pos:end="99:46">.</operator><call pos:start="99:47" pos:end="99:80"><name pos:start="99:47" pos:end="99:78">enableComplexMapKeySerialization</name><argument_list pos:start="99:79" pos:end="99:80">()</argument_list></call>
				<operator pos:start="100:33" pos:end="100:33">.</operator><call pos:start="100:34" pos:end="100:95"><name pos:start="100:34" pos:end="100:53">setFieldNamingPolicy</name><argument_list pos:start="100:54" pos:end="100:95">(<argument pos:start="100:55" pos:end="100:94"><expr pos:start="100:55" pos:end="100:94"><name pos:start="100:55" pos:end="100:94"><name pos:start="100:55" pos:end="100:71">FieldNamingPolicy</name><operator pos:start="100:72" pos:end="100:72">.</operator><name pos:start="100:73" pos:end="100:94">LOWER_CASE_WITH_DASHES</name></name></expr></argument>)</argument_list></call><operator pos:start="100:96" pos:end="100:96">.</operator><call pos:start="100:97" pos:end="100:133"><name pos:start="100:97" pos:end="100:131">serializeSpecialFloatingPointValues</name><argument_list pos:start="100:132" pos:end="100:133">()</argument_list></call>
				<operator pos:start="101:33" pos:end="101:33">.</operator><call pos:start="101:34" pos:end="101:41"><name pos:start="101:34" pos:end="101:39">create</name><argument_list pos:start="101:40" pos:end="101:41">()</argument_list></call></expr></init></decl>;</decl_stmt>

		<try pos:start="103:17" pos:end="115:17">try <block pos:start="103:21" pos:end="113:17">{<block_content pos:start="105:25" pos:end="112:84">
			<comment type="line" pos:start="104:25" pos:end="104:46">// Importing JSON file</comment>
			<decl_stmt pos:start="105:25" pos:end="106:124"><decl pos:start="105:25" pos:end="106:123"><type pos:start="105:25" pos:end="105:36"><name pos:start="105:25" pos:end="105:36"><name pos:start="105:25" pos:end="105:28">List</name><argument_list type="generic" pos:start="105:29" pos:end="105:36">&lt;<argument pos:start="105:30" pos:end="105:35"><name pos:start="105:30" pos:end="105:35">String</name></argument>&gt;</argument_list></name></type> <name pos:start="105:38" pos:end="105:47">jsonString</name> <init pos:start="105:49" pos:end="106:123">= <expr pos:start="105:51" pos:end="106:123"><call pos:start="105:51" pos:end="106:123"><name pos:start="105:51" pos:end="105:82"><name pos:start="105:51" pos:end="105:54">java</name><operator pos:start="105:55" pos:end="105:55">.</operator><name pos:start="105:56" pos:end="105:58">nio</name><operator pos:start="105:59" pos:end="105:59">.</operator><name pos:start="105:60" pos:end="105:63">file</name><operator pos:start="105:64" pos:end="105:64">.</operator><name pos:start="105:65" pos:end="105:69">Files</name><operator pos:start="105:70" pos:end="105:70">.</operator><name pos:start="105:71" pos:end="105:82">readAllLines</name></name><argument_list pos:start="105:83" pos:end="106:123">(<argument pos:start="105:84" pos:end="106:122"><expr pos:start="105:84" pos:end="106:122"><call pos:start="105:84" pos:end="106:122"><name pos:start="105:84" pos:end="105:92"><name pos:start="105:84" pos:end="105:88">Paths</name><operator pos:start="105:89" pos:end="105:89">.</operator><name pos:start="105:90" pos:end="105:92">get</name></name><argument_list pos:start="105:93" pos:end="106:122">(<argument pos:start="105:94" pos:end="106:121"><expr pos:start="105:94" pos:end="106:121"><call pos:start="105:94" pos:end="105:123"><name pos:start="105:94" pos:end="105:111"><name pos:start="105:94" pos:end="105:99">System</name><operator pos:start="105:100" pos:end="105:100">.</operator><name pos:start="105:101" pos:end="105:111">getProperty</name></name><argument_list pos:start="105:112" pos:end="105:123">(<argument pos:start="105:113" pos:end="105:122"><expr pos:start="105:113" pos:end="105:122"><literal type="string" pos:start="105:113" pos:end="105:122">"user.dir"</literal></expr></argument>)</argument_list></call>
					<operator pos:start="106:41" pos:end="106:41">+</operator> <literal type="string" pos:start="106:43" pos:end="106:121">"/src/edu/nd/dronology/services/extensions/areamapping/json/riverSegment1.json"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<decl_stmt pos:start="107:25" pos:end="107:63"><decl pos:start="107:25" pos:end="107:62"><type pos:start="107:25" pos:end="107:37"><name pos:start="107:25" pos:end="107:37">StringBuilder</name></type> <name pos:start="107:39" pos:end="107:40">sb</name> <init pos:start="107:42" pos:end="107:62">= <expr pos:start="107:44" pos:end="107:62"><operator pos:start="107:44" pos:end="107:46">new</operator> <call pos:start="107:48" pos:end="107:62"><name pos:start="107:48" pos:end="107:60">StringBuilder</name><argument_list pos:start="107:61" pos:end="107:62">()</argument_list></call></expr></init></decl>;</decl_stmt>
			<for pos:start="108:25" pos:end="110:25">for <control pos:start="108:29" pos:end="108:51">(<init pos:start="108:30" pos:end="108:50"><decl pos:start="108:30" pos:end="108:50"><type pos:start="108:30" pos:end="108:35"><name pos:start="108:30" pos:end="108:35">String</name></type> <name pos:start="108:37" pos:end="108:37">s</name> <range pos:start="108:39" pos:end="108:50">: <expr pos:start="108:41" pos:end="108:50"><name pos:start="108:41" pos:end="108:50">jsonString</name></expr></range></decl></init>)</control> <block pos:start="108:53" pos:end="110:25">{<block_content pos:start="109:33" pos:end="109:45">
				<expr_stmt pos:start="109:33" pos:end="109:45"><expr pos:start="109:33" pos:end="109:44"><call pos:start="109:33" pos:end="109:44"><name pos:start="109:33" pos:end="109:41"><name pos:start="109:33" pos:end="109:34">sb</name><operator pos:start="109:35" pos:end="109:35">.</operator><name pos:start="109:36" pos:end="109:41">append</name></name><argument_list pos:start="109:42" pos:end="109:44">(<argument pos:start="109:43" pos:end="109:43"><expr pos:start="109:43" pos:end="109:43"><name pos:start="109:43" pos:end="109:43">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			</block_content>}</block></for>
			<comment type="line" pos:start="111:25" pos:end="111:75">// Automatic parsing of JSON file with GSON library</comment>
			<expr_stmt pos:start="112:25" pos:end="112:84"><expr pos:start="112:25" pos:end="112:83"><name pos:start="112:25" pos:end="112:35">bankMapping</name> <operator pos:start="112:37" pos:end="112:37">=</operator> <call pos:start="112:39" pos:end="112:83"><name pos:start="112:39" pos:end="112:51"><name pos:start="112:39" pos:end="112:42">GSON</name><operator pos:start="112:43" pos:end="112:43">.</operator><name pos:start="112:44" pos:end="112:51">fromJson</name></name><argument_list pos:start="112:52" pos:end="112:83">(<argument pos:start="112:53" pos:end="112:65"><expr pos:start="112:53" pos:end="112:65"><call pos:start="112:53" pos:end="112:65"><name pos:start="112:53" pos:end="112:63"><name pos:start="112:53" pos:end="112:54">sb</name><operator pos:start="112:55" pos:end="112:55">.</operator><name pos:start="112:56" pos:end="112:63">toString</name></name><argument_list pos:start="112:64" pos:end="112:65">()</argument_list></call></expr></argument>, <argument pos:start="112:68" pos:end="112:82"><expr pos:start="112:68" pos:end="112:82"><name pos:start="112:68" pos:end="112:82"><name pos:start="112:68" pos:end="112:76">RiverList</name><operator pos:start="112:77" pos:end="112:77">.</operator><name pos:start="112:78" pos:end="112:82">class</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		</block_content>}</block> <catch pos:start="113:19" pos:end="115:17">catch <parameter_list pos:start="113:25" pos:end="113:39">(<parameter pos:start="113:26" pos:end="113:38"><decl pos:start="113:26" pos:end="113:38"><type pos:start="113:26" pos:end="113:38"><name pos:start="113:26" pos:end="113:36">IOException</name></type> <name pos:start="113:38" pos:end="113:38">e</name></decl></parameter>)</parameter_list> <block pos:start="113:41" pos:end="115:17">{<block_content pos:start="114:25" pos:end="114:44">
			<expr_stmt pos:start="114:25" pos:end="114:44"><expr pos:start="114:25" pos:end="114:43"><call pos:start="114:25" pos:end="114:43"><name pos:start="114:25" pos:end="114:41"><name pos:start="114:25" pos:end="114:25">e</name><operator pos:start="114:26" pos:end="114:26">.</operator><name pos:start="114:27" pos:end="114:41">printStackTrace</name></name><argument_list pos:start="114:42" pos:end="114:43">()</argument_list></call></expr>;</expr_stmt>
		</block_content>}</block></catch></try>
	</block_content>}</block></function>
	
	<comment type="block" pos:start="118:9" pos:end="120:11">/*private void parseAreaMapping(AreaMapping mappedRiverSegment) {
		
	}*/</comment>
	
	<comment type="block" format="javadoc" pos:start="122:9" pos:end="126:11">/**
	 * This method preprocesses the riverbank nodes to ensure that they are in the necessary order for the route generation algorithms.
	 * @param bankMapping
	 * @return river banks in the required order
	 */</comment>
	<function pos:start="127:9" pos:end="130:9"><type pos:start="127:9" pos:end="127:20"><specifier pos:start="127:9" pos:end="127:15">private</specifier> <name pos:start="127:17" pos:end="127:20">void</name></type> <name pos:start="127:22" pos:end="127:41">preprocessRiverBanks</name><parameter_list pos:start="127:42" pos:end="127:64">(<parameter pos:start="127:43" pos:end="127:63"><decl pos:start="127:43" pos:end="127:63"><type pos:start="127:43" pos:end="127:51"><name pos:start="127:43" pos:end="127:51">RiverList</name></type> <name pos:start="127:53" pos:end="127:63">bankMapping</name></decl></parameter>)</parameter_list> <block pos:start="127:66" pos:end="130:9">{<block_content pos:start="128:17" pos:end="129:77">
		<expr_stmt pos:start="128:17" pos:end="128:82"><expr pos:start="128:17" pos:end="128:81"><name pos:start="128:17" pos:end="128:24">bankList</name> <operator pos:start="128:26" pos:end="128:26">=</operator> <call pos:start="128:28" pos:end="128:81"><name pos:start="128:28" pos:end="128:52"><name pos:start="128:28" pos:end="128:36">Utilities</name><operator pos:start="128:37" pos:end="128:37">.</operator><name pos:start="128:38" pos:end="128:52">makeBankVectors</name></name><argument_list pos:start="128:53" pos:end="128:81">(<argument pos:start="128:54" pos:end="128:64"><expr pos:start="128:54" pos:end="128:64"><name pos:start="128:54" pos:end="128:64">bankMapping</name></expr></argument>, <argument pos:start="128:67" pos:end="128:80"><expr pos:start="128:67" pos:end="128:80"><name pos:start="128:67" pos:end="128:80">latitudeBounds</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt pos:start="129:17" pos:end="129:77"><expr pos:start="129:17" pos:end="129:76"><call pos:start="129:17" pos:end="129:76"><name pos:start="129:17" pos:end="129:42"><name pos:start="129:17" pos:end="129:25">Utilities</name><operator pos:start="129:26" pos:end="129:26">.</operator><name pos:start="129:27" pos:end="129:42">verifyInputOrder</name></name><argument_list pos:start="129:43" pos:end="129:76">(<argument pos:start="129:44" pos:end="129:58"><expr pos:start="129:44" pos:end="129:58"><call pos:start="129:44" pos:end="129:58"><name pos:start="129:44" pos:end="129:55"><name pos:start="129:44" pos:end="129:51">bankList</name><operator pos:start="129:52" pos:end="129:52">.</operator><name pos:start="129:53" pos:end="129:55">get</name></name><argument_list pos:start="129:56" pos:end="129:58">(<argument pos:start="129:57" pos:end="129:57"><expr pos:start="129:57" pos:end="129:57"><literal type="number" pos:start="129:57" pos:end="129:57">0</literal></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="129:61" pos:end="129:75"><expr pos:start="129:61" pos:end="129:75"><call pos:start="129:61" pos:end="129:75"><name pos:start="129:61" pos:end="129:72"><name pos:start="129:61" pos:end="129:68">bankList</name><operator pos:start="129:69" pos:end="129:69">.</operator><name pos:start="129:70" pos:end="129:72">get</name></name><argument_list pos:start="129:73" pos:end="129:75">(<argument pos:start="129:74" pos:end="129:74"><expr pos:start="129:74" pos:end="129:74"><literal type="number" pos:start="129:74" pos:end="129:74">1</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	</block_content>}</block></function>
	
	<comment type="line" pos:start="132:9" pos:end="132:64">// Connect to dronology and send search routes to drones</comment>
	<comment type="block" format="javadoc" pos:start="133:9" pos:end="136:11">/**
	 * This method exports the routes to the drones
	 * @param routes
	 */</comment>
	<function pos:start="137:9" pos:end="161:9"><type pos:start="137:9" pos:end="137:19"><specifier pos:start="137:9" pos:end="137:14">public</specifier> <name pos:start="137:16" pos:end="137:19">void</name></type> <name pos:start="137:21" pos:end="137:32">exportRoutes</name><parameter_list pos:start="137:33" pos:end="137:61">(<parameter pos:start="137:34" pos:end="137:60"><decl pos:start="137:34" pos:end="137:60"><type pos:start="137:34" pos:end="137:53"><name pos:start="137:34" pos:end="137:53"><name pos:start="137:34" pos:end="137:37">List</name><argument_list type="generic" pos:start="137:38" pos:end="137:53">&lt;<argument pos:start="137:39" pos:end="137:52"><name pos:start="137:39" pos:end="137:52">RoutePrimitive</name></argument>&gt;</argument_list></name></type> <name pos:start="137:55" pos:end="137:60">routes</name></decl></parameter>)</parameter_list> <block pos:start="137:63" pos:end="161:9">{<block_content pos:start="138:17" pos:end="160:17">
		<for pos:start="138:17" pos:end="140:17">for <control pos:start="138:21" pos:end="138:55">(<init pos:start="138:22" pos:end="138:31"><decl pos:start="138:22" pos:end="138:30"><type pos:start="138:22" pos:end="138:24"><name pos:start="138:22" pos:end="138:24">int</name></type> <name pos:start="138:26" pos:end="138:26">i</name> <init pos:start="138:28" pos:end="138:30">= <expr pos:start="138:30" pos:end="138:30"><literal type="number" pos:start="138:30" pos:end="138:30">0</literal></expr></init></decl>;</init> <condition pos:start="138:33" pos:end="138:50"><expr pos:start="138:33" pos:end="138:49"><name pos:start="138:33" pos:end="138:33">i</name> <operator pos:start="138:35" pos:end="138:35">&lt;</operator> <call pos:start="138:37" pos:end="138:49"><name pos:start="138:37" pos:end="138:47"><name pos:start="138:37" pos:end="138:42">routes</name><operator pos:start="138:43" pos:end="138:43">.</operator><name pos:start="138:44" pos:end="138:47">size</name></name><argument_list pos:start="138:48" pos:end="138:49">()</argument_list></call></expr>;</condition> <incr pos:start="138:52" pos:end="138:54"><expr pos:start="138:52" pos:end="138:54"><name pos:start="138:52" pos:end="138:52">i</name><operator pos:start="138:53" pos:end="138:54">++</operator></expr></incr>)</control> <block pos:start="138:57" pos:end="140:17">{<block_content pos:start="139:25" pos:end="139:161">
			<expr_stmt pos:start="139:25" pos:end="139:161"><expr pos:start="139:25" pos:end="139:160"><call pos:start="139:25" pos:end="139:160"><name pos:start="139:25" pos:end="139:34"><name pos:start="139:25" pos:end="139:30">routes</name><operator pos:start="139:31" pos:end="139:31">.</operator><name pos:start="139:32" pos:end="139:34">set</name></name><argument_list pos:start="139:35" pos:end="139:160">(<argument pos:start="139:36" pos:end="139:36"><expr pos:start="139:36" pos:end="139:36"><name pos:start="139:36" pos:end="139:36">i</name></expr></argument>, <argument pos:start="139:39" pos:end="139:159"><expr pos:start="139:39" pos:end="139:159"><call pos:start="139:39" pos:end="139:159"><name pos:start="139:39" pos:end="139:72"><name pos:start="139:39" pos:end="139:47">Utilities</name><operator pos:start="139:48" pos:end="139:48">.</operator><name pos:start="139:49" pos:end="139:72">cartesianRouteToGpsRoute</name></name><argument_list pos:start="139:73" pos:end="139:159">(<argument pos:start="139:74" pos:end="139:86"><expr pos:start="139:74" pos:end="139:86"><call pos:start="139:74" pos:end="139:86"><name pos:start="139:74" pos:end="139:83"><name pos:start="139:74" pos:end="139:79">routes</name><operator pos:start="139:80" pos:end="139:80">.</operator><name pos:start="139:81" pos:end="139:83">get</name></name><argument_list pos:start="139:84" pos:end="139:86">(<argument pos:start="139:85" pos:end="139:85"><expr pos:start="139:85" pos:end="139:85"><name pos:start="139:85" pos:end="139:85">i</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="139:89" pos:end="139:158"><expr pos:start="139:89" pos:end="139:158"><call pos:start="139:89" pos:end="139:158"><name pos:start="139:89" pos:end="139:112"><name pos:start="139:89" pos:end="139:97">Utilities</name><operator pos:start="139:98" pos:end="139:98">.</operator><name pos:start="139:99" pos:end="139:112">getAvgLatitude</name></name><argument_list pos:start="139:113" pos:end="139:158">(<argument pos:start="139:114" pos:end="139:134"><expr pos:start="139:114" pos:end="139:134"><call pos:start="139:114" pos:end="139:134"><name pos:start="139:114" pos:end="139:131"><name pos:start="139:114" pos:end="139:127">latitudeBounds</name><operator pos:start="139:128" pos:end="139:128">.</operator><name pos:start="139:129" pos:end="139:131">get</name></name><argument_list pos:start="139:132" pos:end="139:134">(<argument pos:start="139:133" pos:end="139:133"><expr pos:start="139:133" pos:end="139:133"><literal type="number" pos:start="139:133" pos:end="139:133">0</literal></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="139:137" pos:end="139:157"><expr pos:start="139:137" pos:end="139:157"><call pos:start="139:137" pos:end="139:157"><name pos:start="139:137" pos:end="139:154"><name pos:start="139:137" pos:end="139:150">latitudeBounds</name><operator pos:start="139:151" pos:end="139:151">.</operator><name pos:start="139:152" pos:end="139:154">get</name></name><argument_list pos:start="139:155" pos:end="139:157">(<argument pos:start="139:156" pos:end="139:156"><expr pos:start="139:156" pos:end="139:156"><literal type="number" pos:start="139:156" pos:end="139:156">1</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		</block_content>}</block></for>
		<try pos:start="141:17" pos:end="160:17">try <block pos:start="141:21" pos:end="158:17">{<block_content pos:start="142:25" pos:end="155:94">
			<decl_stmt pos:start="142:25" pos:end="143:98"><decl pos:start="142:25" pos:end="143:97"><type pos:start="142:25" pos:end="142:38"><name pos:start="142:25" pos:end="142:38">IRemoteManager</name></type> <name pos:start="142:40" pos:end="142:46">manager</name> <init pos:start="142:48" pos:end="143:97">= <expr pos:start="142:50" pos:end="143:97"><operator pos:start="142:50" pos:end="142:50">(</operator><name pos:start="142:51" pos:end="142:64">IRemoteManager</name><operator pos:start="142:65" pos:end="142:65">)</operator> <call pos:start="142:67" pos:end="143:97"><name pos:start="142:67" pos:end="143:47"><name pos:start="142:67" pos:end="142:72">Naming</name>
					<operator pos:start="143:41" pos:end="143:41">.</operator><name pos:start="143:42" pos:end="143:47">lookup</name></name><argument_list pos:start="143:48" pos:end="143:97">(<argument pos:start="143:49" pos:end="143:96"><expr pos:start="143:49" pos:end="143:96"><call pos:start="143:49" pos:end="143:96"><name pos:start="143:49" pos:end="143:61"><name pos:start="143:49" pos:end="143:54">String</name><operator pos:start="143:55" pos:end="143:55">.</operator><name pos:start="143:56" pos:end="143:61">format</name></name><argument_list pos:start="143:62" pos:end="143:96">(<argument pos:start="143:63" pos:end="143:76"><expr pos:start="143:63" pos:end="143:76"><name pos:start="143:63" pos:end="143:76">ADDRESS_SCHEME</name></expr></argument>, <argument pos:start="143:79" pos:end="143:89"><expr pos:start="143:79" pos:end="143:89"><literal type="string" pos:start="143:79" pos:end="143:89">"127.0.0.1"</literal></expr></argument>, <argument pos:start="143:92" pos:end="143:95"><expr pos:start="143:92" pos:end="143:95"><literal type="number" pos:start="143:92" pos:end="143:95">9779</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<decl_stmt pos:start="144:25" pos:end="145:87"><decl pos:start="144:25" pos:end="145:86"><type pos:start="144:25" pos:end="144:51"><name pos:start="144:25" pos:end="144:51">IFlightManagerRemoteService</name></type> <name pos:start="144:53" pos:end="144:66">managerService</name> <init pos:start="144:68" pos:end="145:86">= <expr pos:start="144:70" pos:end="145:86"><operator pos:start="144:70" pos:end="144:70">(</operator><name pos:start="144:71" pos:end="144:97">IFlightManagerRemoteService</name><operator pos:start="144:98" pos:end="144:98">)</operator> <call pos:start="144:100" pos:end="145:86"><name pos:start="144:100" pos:end="145:51"><name pos:start="144:100" pos:end="144:106">manager</name>
					<operator pos:start="145:41" pos:end="145:41">.</operator><name pos:start="145:42" pos:end="145:51">getService</name></name><argument_list pos:start="145:52" pos:end="145:86">(<argument pos:start="145:53" pos:end="145:85"><expr pos:start="145:53" pos:end="145:85"><name pos:start="145:53" pos:end="145:85"><name pos:start="145:53" pos:end="145:79">IFlightManagerRemoteService</name><operator pos:start="145:80" pos:end="145:80">.</operator><name pos:start="145:81" pos:end="145:85">class</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<decl_stmt pos:start="146:25" pos:end="146:78"><decl pos:start="146:25" pos:end="146:77"><type pos:start="146:25" pos:end="146:44"><name pos:start="146:25" pos:end="146:44"><name pos:start="146:25" pos:end="146:28">List</name><argument_list type="generic" pos:start="146:29" pos:end="146:44">&lt;<argument pos:start="146:30" pos:end="146:43"><name pos:start="146:30" pos:end="146:43"><name pos:start="146:30" pos:end="146:33">List</name><argument_list type="generic" pos:start="146:34" pos:end="146:43">&lt;<argument pos:start="146:35" pos:end="146:42"><name pos:start="146:35" pos:end="146:42">Waypoint</name></argument>&gt;</argument_list></name></argument>&gt;</argument_list></name></type> <name pos:start="146:46" pos:end="146:57">waypointList</name> <init pos:start="146:59" pos:end="146:77">= <expr pos:start="146:61" pos:end="146:77"><operator pos:start="146:61" pos:end="146:63">new</operator> <call pos:start="146:65" pos:end="146:77"><name pos:start="146:65" pos:end="146:75"><name pos:start="146:65" pos:end="146:73">ArrayList</name><argument_list type="generic" pos:start="146:74" pos:end="146:75">&lt;&gt;</argument_list></name><argument_list pos:start="146:76" pos:end="146:77">()</argument_list></call></expr></init></decl>;</decl_stmt>
			<for pos:start="147:25" pos:end="153:25">for <control pos:start="147:29" pos:end="147:59">(<init pos:start="147:30" pos:end="147:58"><decl pos:start="147:30" pos:end="147:58"><type pos:start="147:30" pos:end="147:43"><name pos:start="147:30" pos:end="147:43">RoutePrimitive</name></type> <name pos:start="147:45" pos:end="147:49">rlist</name> <range pos:start="147:51" pos:end="147:58">: <expr pos:start="147:53" pos:end="147:58"><name pos:start="147:53" pos:end="147:58">routes</name></expr></range></decl></init>)</control> <block pos:start="147:61" pos:end="153:25">{<block_content pos:start="148:33" pos:end="152:57">
				<decl_stmt pos:start="148:33" pos:end="148:74"><decl pos:start="148:33" pos:end="148:73"><type pos:start="148:33" pos:end="148:46"><name pos:start="148:33" pos:end="148:46"><name pos:start="148:33" pos:end="148:36">List</name><argument_list type="generic" pos:start="148:37" pos:end="148:46">&lt;<argument pos:start="148:38" pos:end="148:45"><name pos:start="148:38" pos:end="148:45">Waypoint</name></argument>&gt;</argument_list></name></type> <name pos:start="148:48" pos:end="148:53">route1</name> <init pos:start="148:55" pos:end="148:73">= <expr pos:start="148:57" pos:end="148:73"><operator pos:start="148:57" pos:end="148:59">new</operator> <call pos:start="148:61" pos:end="148:73"><name pos:start="148:61" pos:end="148:71"><name pos:start="148:61" pos:end="148:69">ArrayList</name><argument_list type="generic" pos:start="148:70" pos:end="148:71">&lt;&gt;</argument_list></name><argument_list pos:start="148:72" pos:end="148:73">()</argument_list></call></expr></init></decl>;</decl_stmt>
				<for pos:start="149:33" pos:end="151:33">for <control pos:start="149:37" pos:end="149:77">(<init pos:start="149:38" pos:end="149:76"><decl pos:start="149:38" pos:end="149:76"><type pos:start="149:38" pos:end="149:51"><name pos:start="149:38" pos:end="149:51"><name pos:start="149:38" pos:end="149:44">Point2D</name><operator pos:start="149:45" pos:end="149:45">.</operator><name pos:start="149:46" pos:end="149:51">Double</name></name></type> <name pos:start="149:53" pos:end="149:57">entry</name> <range pos:start="149:59" pos:end="149:76">: <expr pos:start="149:61" pos:end="149:76"><call pos:start="149:61" pos:end="149:76"><name pos:start="149:61" pos:end="149:74"><name pos:start="149:61" pos:end="149:65">rlist</name><operator pos:start="149:66" pos:end="149:66">.</operator><name pos:start="149:67" pos:end="149:74">getRoute</name></name><argument_list pos:start="149:75" pos:end="149:76">()</argument_list></call></expr></range></decl></init>)</control> <block pos:start="149:79" pos:end="151:33">{<block_content pos:start="150:41" pos:end="150:116">
					<expr_stmt pos:start="150:41" pos:end="150:116"><expr pos:start="150:41" pos:end="150:115"><call pos:start="150:41" pos:end="150:115"><name pos:start="150:41" pos:end="150:50"><name pos:start="150:41" pos:end="150:46">route1</name><operator pos:start="150:47" pos:end="150:47">.</operator><name pos:start="150:48" pos:end="150:50">add</name></name><argument_list pos:start="150:51" pos:end="150:115">(<argument pos:start="150:52" pos:end="150:114"><expr pos:start="150:52" pos:end="150:114"><operator pos:start="150:52" pos:end="150:54">new</operator> <call pos:start="150:56" pos:end="150:114"><name pos:start="150:56" pos:end="150:63">Waypoint</name><argument_list pos:start="150:64" pos:end="150:114">(<argument pos:start="150:65" pos:end="150:113"><expr pos:start="150:65" pos:end="150:113"><operator pos:start="150:65" pos:end="150:67">new</operator> <call pos:start="150:69" pos:end="150:113"><name pos:start="150:69" pos:end="150:81">LlaCoordinate</name><argument_list pos:start="150:82" pos:end="150:113">(<argument pos:start="150:83" pos:end="150:94"><expr pos:start="150:83" pos:end="150:94"><call pos:start="150:83" pos:end="150:94"><name pos:start="150:83" pos:end="150:92"><name pos:start="150:83" pos:end="150:87">entry</name><operator pos:start="150:88" pos:end="150:88">.</operator><name pos:start="150:89" pos:end="150:92">getX</name></name><argument_list pos:start="150:93" pos:end="150:94">()</argument_list></call></expr></argument>, <argument pos:start="150:97" pos:end="150:108"><expr pos:start="150:97" pos:end="150:108"><call pos:start="150:97" pos:end="150:108"><name pos:start="150:97" pos:end="150:106"><name pos:start="150:97" pos:end="150:101">entry</name><operator pos:start="150:102" pos:end="150:102">.</operator><name pos:start="150:103" pos:end="150:106">getY</name></name><argument_list pos:start="150:107" pos:end="150:108">()</argument_list></call></expr></argument>, <argument pos:start="150:111" pos:end="150:112"><expr pos:start="150:111" pos:end="150:112"><literal type="number" pos:start="150:111" pos:end="150:112">10</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				</block_content>}</block></for>
				<expr_stmt pos:start="152:33" pos:end="152:57"><expr pos:start="152:33" pos:end="152:56"><call pos:start="152:33" pos:end="152:56"><name pos:start="152:33" pos:end="152:48"><name pos:start="152:33" pos:end="152:44">waypointList</name><operator pos:start="152:45" pos:end="152:45">.</operator><name pos:start="152:46" pos:end="152:48">add</name></name><argument_list pos:start="152:49" pos:end="152:56">(<argument pos:start="152:50" pos:end="152:55"><expr pos:start="152:50" pos:end="152:55"><name pos:start="152:50" pos:end="152:55">route1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			</block_content>}</block></for>
			<expr_stmt pos:start="154:25" pos:end="154:77"><expr pos:start="154:25" pos:end="154:76"><call pos:start="154:25" pos:end="154:76"><name pos:start="154:25" pos:end="154:42"><name pos:start="154:25" pos:end="154:30">System</name><operator pos:start="154:31" pos:end="154:31">.</operator><name pos:start="154:32" pos:end="154:34">out</name><operator pos:start="154:35" pos:end="154:35">.</operator><name pos:start="154:36" pos:end="154:42">println</name></name><argument_list pos:start="154:43" pos:end="154:76">(<argument pos:start="154:44" pos:end="154:75"><expr pos:start="154:44" pos:end="154:75"><literal type="string" pos:start="154:44" pos:end="154:53">"route1: "</literal> <operator pos:start="154:55" pos:end="154:55">+</operator> <call pos:start="154:57" pos:end="154:75"><name pos:start="154:57" pos:end="154:72"><name pos:start="154:57" pos:end="154:68">waypointList</name><operator pos:start="154:69" pos:end="154:69">.</operator><name pos:start="154:70" pos:end="154:72">get</name></name><argument_list pos:start="154:73" pos:end="154:75">(<argument pos:start="154:74" pos:end="154:74"><expr pos:start="154:74" pos:end="154:74"><literal type="number" pos:start="154:74" pos:end="154:74">0</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt pos:start="155:25" pos:end="155:94"><expr pos:start="155:25" pos:end="155:93"><call pos:start="155:25" pos:end="155:93"><name pos:start="155:25" pos:end="155:49"><name pos:start="155:25" pos:end="155:38">managerService</name><operator pos:start="155:39" pos:end="155:39">.</operator><name pos:start="155:40" pos:end="155:49">planFlight</name></name><argument_list pos:start="155:50" pos:end="155:93">(<argument pos:start="155:51" pos:end="155:57"><expr pos:start="155:51" pos:end="155:57"><literal type="string" pos:start="155:51" pos:end="155:57">"VRTL0"</literal></expr></argument>, <argument pos:start="155:60" pos:end="155:71"><expr pos:start="155:60" pos:end="155:71"><literal type="string" pos:start="155:60" pos:end="155:71">"TestRoute1"</literal></expr></argument>, <argument pos:start="155:74" pos:end="155:92"><expr pos:start="155:74" pos:end="155:92"><call pos:start="155:74" pos:end="155:92"><name pos:start="155:74" pos:end="155:89"><name pos:start="155:74" pos:end="155:85">waypointList</name><operator pos:start="155:86" pos:end="155:86">.</operator><name pos:start="155:87" pos:end="155:89">get</name></name><argument_list pos:start="155:90" pos:end="155:92">(<argument pos:start="155:91" pos:end="155:91"><expr pos:start="155:91" pos:end="155:91"><literal type="number" pos:start="155:91" pos:end="155:91">0</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<comment type="line" pos:start="156:25" pos:end="156:96">//managerService.planFlight("VRTL1", "TestRoute2", waypointList.get(1));</comment>
			<comment type="line" pos:start="157:25" pos:end="157:96">// managerService.planFlight("ND-3", "TestRoute3", waypointList.get(2));</comment>
		</block_content>}</block> <catch pos:start="158:19" pos:end="160:17">catch <parameter_list pos:start="158:25" pos:end="158:37">(<parameter pos:start="158:26" pos:end="158:36"><decl pos:start="158:26" pos:end="158:36"><type pos:start="158:26" pos:end="158:36"><name pos:start="158:26" pos:end="158:34">Exception</name></type> <name pos:start="158:36" pos:end="158:36">e</name></decl></parameter>)</parameter_list> <block pos:start="158:39" pos:end="160:17">{<block_content pos:start="159:25" pos:end="159:44">
			<expr_stmt pos:start="159:25" pos:end="159:44"><expr pos:start="159:25" pos:end="159:43"><call pos:start="159:25" pos:end="159:43"><name pos:start="159:25" pos:end="159:41"><name pos:start="159:25" pos:end="159:25">e</name><operator pos:start="159:26" pos:end="159:26">.</operator><name pos:start="159:27" pos:end="159:41">printStackTrace</name></name><argument_list pos:start="159:42" pos:end="159:43">()</argument_list></call></expr>;</expr_stmt>
		</block_content>}</block></catch></try>	
	</block_content>}</block></function>
	
	
	<comment type="block" format="javadoc" pos:start="164:9" pos:end="167:11">/**
	 * This method generates a variety of route primitive options for selection.
	 * @return route primitives
	 */</comment>
	<function pos:start="168:9" pos:end="217:9"><annotation pos:start="168:9" pos:end="168:17">@<name pos:start="168:10" pos:end="168:17">Override</name></annotation>
	<type pos:start="169:9" pos:end="169:35"><specifier pos:start="169:9" pos:end="169:14">public</specifier> <name pos:start="169:16" pos:end="169:35"><name pos:start="169:16" pos:end="169:19">List</name><argument_list type="generic" pos:start="169:20" pos:end="169:35">&lt;<argument pos:start="169:21" pos:end="169:34"><name pos:start="169:21" pos:end="169:34">RoutePrimitive</name></argument>&gt;</argument_list></name></type> <name pos:start="169:37" pos:end="169:59">generateRoutePrimitives</name><parameter_list pos:start="169:60" pos:end="169:61">()</parameter_list> <block pos:start="169:63" pos:end="217:9">{<block_content pos:start="171:25" pos:end="216:38">
			<comment type="line" pos:start="170:25" pos:end="170:59">// Generate search route primitives</comment>
			<decl_stmt pos:start="171:25" pos:end="171:76"><decl pos:start="171:25" pos:end="171:75"><type pos:start="171:25" pos:end="171:42"><name pos:start="171:25" pos:end="171:42"><name pos:start="171:25" pos:end="171:28">List</name><argument_list type="generic" pos:start="171:29" pos:end="171:42">&lt;<argument pos:start="171:30" pos:end="171:41"><name pos:start="171:30" pos:end="171:41">SourcePoints</name></argument>&gt;</argument_list></name></type> <name pos:start="171:44" pos:end="171:55">sourcePoints</name> <init pos:start="171:57" pos:end="171:75">= <expr pos:start="171:59" pos:end="171:75"><operator pos:start="171:59" pos:end="171:61">new</operator> <call pos:start="171:63" pos:end="171:75"><name pos:start="171:63" pos:end="171:73"><name pos:start="171:63" pos:end="171:71">ArrayList</name><argument_list type="generic" pos:start="171:72" pos:end="171:73">&lt;&gt;</argument_list></name><argument_list pos:start="171:74" pos:end="171:75">()</argument_list></call></expr></init></decl>;</decl_stmt>
			<decl_stmt pos:start="172:25" pos:end="172:72"><decl pos:start="172:25" pos:end="172:71"><type pos:start="172:25" pos:end="172:44"><name pos:start="172:25" pos:end="172:44"><name pos:start="172:25" pos:end="172:28">List</name><argument_list type="generic" pos:start="172:29" pos:end="172:44">&lt;<argument pos:start="172:30" pos:end="172:43"><name pos:start="172:30" pos:end="172:43">RoutePrimitive</name></argument>&gt;</argument_list></name></type> <name pos:start="172:46" pos:end="172:51">routes</name> <init pos:start="172:53" pos:end="172:71">= <expr pos:start="172:55" pos:end="172:71"><operator pos:start="172:55" pos:end="172:57">new</operator> <call pos:start="172:59" pos:end="172:71"><name pos:start="172:59" pos:end="172:69"><name pos:start="172:59" pos:end="172:67">ArrayList</name><argument_list type="generic" pos:start="172:68" pos:end="172:69">&lt;&gt;</argument_list></name><argument_list pos:start="172:70" pos:end="172:71">()</argument_list></call></expr></init></decl>;</decl_stmt>

			
			<comment type="line" pos:start="175:25" pos:end="175:85">//just for getting home location for drones in metrics runner</comment>
			<expr_stmt pos:start="176:25" pos:end="176:131"><expr pos:start="176:25" pos:end="176:130"><call pos:start="176:25" pos:end="176:130"><name pos:start="176:25" pos:end="176:42"><name pos:start="176:25" pos:end="176:30">System</name><operator pos:start="176:31" pos:end="176:31">.</operator><name pos:start="176:32" pos:end="176:34">out</name><operator pos:start="176:35" pos:end="176:35">.</operator><name pos:start="176:36" pos:end="176:42">println</name></name><argument_list pos:start="176:43" pos:end="176:130">(<argument pos:start="176:44" pos:end="176:129"><expr pos:start="176:44" pos:end="176:129"><call pos:start="176:44" pos:end="176:58"><name pos:start="176:44" pos:end="176:55"><name pos:start="176:44" pos:end="176:51">bankList</name><operator pos:start="176:52" pos:end="176:52">.</operator><name pos:start="176:53" pos:end="176:55">get</name></name><argument_list pos:start="176:56" pos:end="176:58">(<argument pos:start="176:57" pos:end="176:57"><expr pos:start="176:57" pos:end="176:57"><literal type="number" pos:start="176:57" pos:end="176:57">0</literal></expr></argument>)</argument_list></call><operator pos:start="176:59" pos:end="176:59">.</operator><call pos:start="176:60" pos:end="176:65"><name pos:start="176:60" pos:end="176:62">get</name><argument_list pos:start="176:63" pos:end="176:65">(<argument pos:start="176:64" pos:end="176:64"><expr pos:start="176:64" pos:end="176:64"><literal type="number" pos:start="176:64" pos:end="176:64">0</literal></expr></argument>)</argument_list></call> <operator pos:start="176:67" pos:end="176:67">+</operator> <literal type="string" pos:start="176:69" pos:end="176:72">", "</literal> <operator pos:start="176:74" pos:end="176:74">+</operator> <call pos:start="176:76" pos:end="176:90"><name pos:start="176:76" pos:end="176:87"><name pos:start="176:76" pos:end="176:83">bankList</name><operator pos:start="176:84" pos:end="176:84">.</operator><name pos:start="176:85" pos:end="176:87">get</name></name><argument_list pos:start="176:88" pos:end="176:90">(<argument pos:start="176:89" pos:end="176:89"><expr pos:start="176:89" pos:end="176:89"><literal type="number" pos:start="176:89" pos:end="176:89">0</literal></expr></argument>)</argument_list></call><operator pos:start="176:91" pos:end="176:91">.</operator><call pos:start="176:92" pos:end="176:97"><name pos:start="176:92" pos:end="176:94">get</name><argument_list pos:start="176:95" pos:end="176:97">(<argument pos:start="176:96" pos:end="176:96"><expr pos:start="176:96" pos:end="176:96"><literal type="number" pos:start="176:96" pos:end="176:96">1</literal></expr></argument>)</argument_list></call> <operator pos:start="176:99" pos:end="176:99">+</operator> <literal type="string" pos:start="176:101" pos:end="176:104">", "</literal> <operator pos:start="176:106" pos:end="176:106">+</operator> <call pos:start="176:108" pos:end="176:122"><name pos:start="176:108" pos:end="176:119"><name pos:start="176:108" pos:end="176:115">bankList</name><operator pos:start="176:116" pos:end="176:116">.</operator><name pos:start="176:117" pos:end="176:119">get</name></name><argument_list pos:start="176:120" pos:end="176:122">(<argument pos:start="176:121" pos:end="176:121"><expr pos:start="176:121" pos:end="176:121"><literal type="number" pos:start="176:121" pos:end="176:121">0</literal></expr></argument>)</argument_list></call><operator pos:start="176:123" pos:end="176:123">.</operator><call pos:start="176:124" pos:end="176:129"><name pos:start="176:124" pos:end="176:126">get</name><argument_list pos:start="176:127" pos:end="176:129">(<argument pos:start="176:128" pos:end="176:128"><expr pos:start="176:128" pos:end="176:128"><literal type="number" pos:start="176:128" pos:end="176:128">2</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			
			<comment type="line" pos:start="178:25" pos:end="178:47">//used for the printout</comment>
			<decl_stmt pos:start="179:25" pos:end="179:78"><decl pos:start="179:25" pos:end="179:77"><type pos:start="179:25" pos:end="179:47"><name pos:start="179:25" pos:end="179:47"><name pos:start="179:25" pos:end="179:30">Vector</name><argument_list type="generic" pos:start="179:31" pos:end="179:47">&lt;<argument pos:start="179:32" pos:end="179:46"><name pos:start="179:32" pos:end="179:46">RiverSubsegment</name></argument>&gt;</argument_list></name></type> <name pos:start="179:49" pos:end="179:60">riverVectors</name> <init pos:start="179:62" pos:end="179:77">= <expr pos:start="179:64" pos:end="179:77"><operator pos:start="179:64" pos:end="179:66">new</operator> <call pos:start="179:68" pos:end="179:77"><name pos:start="179:68" pos:end="179:75"><name pos:start="179:68" pos:end="179:73">Vector</name><argument_list type="generic" pos:start="179:74" pos:end="179:75">&lt;&gt;</argument_list></name><argument_list pos:start="179:76" pos:end="179:77">()</argument_list></call></expr></init></decl>;</decl_stmt>
			<expr_stmt pos:start="180:25" pos:end="180:95"><expr pos:start="180:25" pos:end="180:94"><call pos:start="180:25" pos:end="180:94"><name pos:start="180:25" pos:end="180:40"><name pos:start="180:25" pos:end="180:36">riverVectors</name><operator pos:start="180:37" pos:end="180:37">.</operator><name pos:start="180:38" pos:end="180:40">add</name></name><argument_list pos:start="180:41" pos:end="180:94">(<argument pos:start="180:42" pos:end="180:93"><expr pos:start="180:42" pos:end="180:93"><operator pos:start="180:42" pos:end="180:44">new</operator> <call pos:start="180:46" pos:end="180:93"><name pos:start="180:46" pos:end="180:60">RiverSubsegment</name><argument_list pos:start="180:61" pos:end="180:93">(<argument pos:start="180:62" pos:end="180:76"><expr pos:start="180:62" pos:end="180:76"><call pos:start="180:62" pos:end="180:76"><name pos:start="180:62" pos:end="180:73"><name pos:start="180:62" pos:end="180:69">bankList</name><operator pos:start="180:70" pos:end="180:70">.</operator><name pos:start="180:71" pos:end="180:73">get</name></name><argument_list pos:start="180:74" pos:end="180:76">(<argument pos:start="180:75" pos:end="180:75"><expr pos:start="180:75" pos:end="180:75"><literal type="number" pos:start="180:75" pos:end="180:75">0</literal></expr></argument>)</argument_list></call></expr></argument>,<argument pos:start="180:78" pos:end="180:92"><expr pos:start="180:78" pos:end="180:92"><call pos:start="180:78" pos:end="180:92"><name pos:start="180:78" pos:end="180:89"><name pos:start="180:78" pos:end="180:85">bankList</name><operator pos:start="180:86" pos:end="180:86">.</operator><name pos:start="180:87" pos:end="180:89">get</name></name><argument_list pos:start="180:90" pos:end="180:92">(<argument pos:start="180:91" pos:end="180:91"><expr pos:start="180:91" pos:end="180:91"><literal type="number" pos:start="180:91" pos:end="180:91">1</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			
			<expr_stmt pos:start="182:25" pos:end="182:137"><expr pos:start="182:25" pos:end="182:136"><name pos:start="182:25" pos:end="182:36">sourcePoints</name> <operator pos:start="182:38" pos:end="182:38">=</operator> <call pos:start="182:40" pos:end="182:136"><name pos:start="182:40" pos:end="182:68"><name pos:start="182:40" pos:end="182:47">Geometry</name><operator pos:start="182:48" pos:end="182:48">.</operator><name pos:start="182:49" pos:end="182:68">generateSourcePoints</name></name><argument_list pos:start="182:69" pos:end="182:136">(<argument pos:start="182:70" pos:end="182:84"><expr pos:start="182:70" pos:end="182:84"><name pos:start="182:70" pos:end="182:84">APERATURE_WIDTH</name></expr></argument>, <argument pos:start="182:87" pos:end="182:102"><expr pos:start="182:87" pos:end="182:102"><name pos:start="182:87" pos:end="182:102">APERATURE_HEIGHT</name></expr></argument>, <argument pos:start="182:105" pos:end="182:118"><expr pos:start="182:105" pos:end="182:118"><name pos:start="182:105" pos:end="182:118">OVERLAP_FACTOR</name></expr></argument>, <argument pos:start="182:121" pos:end="182:128"><expr pos:start="182:121" pos:end="182:128"><name pos:start="182:121" pos:end="182:128">bankList</name></expr></argument>, <argument pos:start="182:131" pos:end="182:135"><expr pos:start="182:131" pos:end="182:135"><literal type="boolean" pos:start="182:131" pos:end="182:135">false</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<decl_stmt pos:start="183:25" pos:end="183:84"><decl pos:start="183:25" pos:end="183:83"><type pos:start="183:25" pos:end="183:45"><name pos:start="183:25" pos:end="183:45">SearchPatternStrategy</name></type> <name pos:start="183:47" pos:end="183:56">bankRoutes</name> <init pos:start="183:58" pos:end="183:83">= <expr pos:start="183:60" pos:end="183:83"><operator pos:start="183:60" pos:end="183:62">new</operator> <call pos:start="183:64" pos:end="183:83"><name pos:start="183:64" pos:end="183:81">RiverBankPrimitive</name><argument_list pos:start="183:82" pos:end="183:83">()</argument_list></call></expr></init></decl>;</decl_stmt>
			<expr_stmt pos:start="184:25" pos:end="184:65"><expr pos:start="184:25" pos:end="184:64"><call pos:start="184:25" pos:end="184:64"><name pos:start="184:25" pos:end="184:50"><name pos:start="184:25" pos:end="184:34">bankRoutes</name><operator pos:start="184:35" pos:end="184:35">.</operator><name pos:start="184:36" pos:end="184:50">setSourcePoints</name></name><argument_list pos:start="184:51" pos:end="184:64">(<argument pos:start="184:52" pos:end="184:63"><expr pos:start="184:52" pos:end="184:63"><name pos:start="184:52" pos:end="184:63">sourcePoints</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt pos:start="185:25" pos:end="185:69"><expr pos:start="185:25" pos:end="185:68"><call pos:start="185:25" pos:end="185:68"><name pos:start="185:25" pos:end="185:47"><name pos:start="185:25" pos:end="185:34">bankRoutes</name><operator pos:start="185:35" pos:end="185:35">.</operator><name pos:start="185:36" pos:end="185:47">setRouteType</name></name><argument_list pos:start="185:48" pos:end="185:68">(<argument pos:start="185:49" pos:end="185:67"><expr pos:start="185:49" pos:end="185:67"><name pos:start="185:49" pos:end="185:67"><name pos:start="185:49" pos:end="185:57">RouteType</name><operator pos:start="185:58" pos:end="185:58">.</operator><name pos:start="185:59" pos:end="185:67">RIVERBANK</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt pos:start="186:25" pos:end="186:107"><expr pos:start="186:25" pos:end="186:106"><call pos:start="186:25" pos:end="186:106"><name pos:start="186:25" pos:end="186:37"><name pos:start="186:25" pos:end="186:30">routes</name><operator pos:start="186:31" pos:end="186:31">.</operator><name pos:start="186:32" pos:end="186:37">addAll</name></name><argument_list pos:start="186:38" pos:end="186:106">(<argument pos:start="186:39" pos:end="186:105"><expr pos:start="186:39" pos:end="186:105"><call pos:start="186:39" pos:end="186:105"><name pos:start="186:39" pos:end="186:71"><name pos:start="186:39" pos:end="186:48">bankRoutes</name><operator pos:start="186:49" pos:end="186:49">.</operator><name pos:start="186:50" pos:end="186:71">generateRoutePrimitive</name></name><argument_list pos:start="186:72" pos:end="186:105">(<argument pos:start="186:73" pos:end="186:88"><expr pos:start="186:73" pos:end="186:88"><name pos:start="186:73" pos:end="186:88">APERATURE_HEIGHT</name></expr></argument>, <argument pos:start="186:91" pos:end="186:104"><expr pos:start="186:91" pos:end="186:104"><name pos:start="186:91" pos:end="186:104">OVERLAP_FACTOR</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt pos:start="187:25" pos:end="187:70"><expr pos:start="187:25" pos:end="187:69"><call pos:start="187:25" pos:end="187:69"><name pos:start="187:25" pos:end="187:47"><name pos:start="187:25" pos:end="187:33">Utilities</name><operator pos:start="187:34" pos:end="187:34">.</operator><name pos:start="187:35" pos:end="187:47">debugPrintOut</name></name><argument_list pos:start="187:48" pos:end="187:69">(<argument pos:start="187:49" pos:end="187:60"><expr pos:start="187:49" pos:end="187:60"><name pos:start="187:49" pos:end="187:60">riverVectors</name></expr></argument>, <argument pos:start="187:63" pos:end="187:68"><expr pos:start="187:63" pos:end="187:68"><name pos:start="187:63" pos:end="187:68">routes</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			
			<decl_stmt pos:start="189:25" pos:end="189:96"><decl pos:start="189:25" pos:end="189:95"><type pos:start="189:25" pos:end="189:45"><name pos:start="189:25" pos:end="189:45">SearchPatternStrategy</name></type> <name pos:start="189:47" pos:end="189:58">creepingLine</name> <init pos:start="189:60" pos:end="189:95">= <expr pos:start="189:62" pos:end="189:95"><operator pos:start="189:62" pos:end="189:64">new</operator> <call pos:start="189:66" pos:end="189:95"><name pos:start="189:66" pos:end="189:93">AdaptedCreepingLinePrimitive</name><argument_list pos:start="189:94" pos:end="189:95">()</argument_list></call></expr></init></decl>;</decl_stmt>
			<expr_stmt pos:start="190:25" pos:end="190:67"><expr pos:start="190:25" pos:end="190:66"><call pos:start="190:25" pos:end="190:66"><name pos:start="190:25" pos:end="190:52"><name pos:start="190:25" pos:end="190:36">creepingLine</name><operator pos:start="190:37" pos:end="190:37">.</operator><name pos:start="190:38" pos:end="190:52">setSourcePoints</name></name><argument_list pos:start="190:53" pos:end="190:66">(<argument pos:start="190:54" pos:end="190:65"><expr pos:start="190:54" pos:end="190:65"><name pos:start="190:54" pos:end="190:65">sourcePoints</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt pos:start="191:25" pos:end="191:72"><expr pos:start="191:25" pos:end="191:71"><call pos:start="191:25" pos:end="191:71"><name pos:start="191:25" pos:end="191:49"><name pos:start="191:25" pos:end="191:36">creepingLine</name><operator pos:start="191:37" pos:end="191:37">.</operator><name pos:start="191:38" pos:end="191:49">setRouteType</name></name><argument_list pos:start="191:50" pos:end="191:71">(<argument pos:start="191:51" pos:end="191:70"><expr pos:start="191:51" pos:end="191:70"><name pos:start="191:51" pos:end="191:70"><name pos:start="191:51" pos:end="191:59">RouteType</name><operator pos:start="191:60" pos:end="191:60">.</operator><name pos:start="191:61" pos:end="191:70">CRISSCROSS</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt pos:start="192:25" pos:end="192:109"><expr pos:start="192:25" pos:end="192:108"><call pos:start="192:25" pos:end="192:108"><name pos:start="192:25" pos:end="192:37"><name pos:start="192:25" pos:end="192:30">routes</name><operator pos:start="192:31" pos:end="192:31">.</operator><name pos:start="192:32" pos:end="192:37">addAll</name></name><argument_list pos:start="192:38" pos:end="192:108">(<argument pos:start="192:39" pos:end="192:107"><expr pos:start="192:39" pos:end="192:107"><call pos:start="192:39" pos:end="192:107"><name pos:start="192:39" pos:end="192:73"><name pos:start="192:39" pos:end="192:50">creepingLine</name><operator pos:start="192:51" pos:end="192:51">.</operator><name pos:start="192:52" pos:end="192:73">generateRoutePrimitive</name></name><argument_list pos:start="192:74" pos:end="192:107">(<argument pos:start="192:75" pos:end="192:90"><expr pos:start="192:75" pos:end="192:90"><name pos:start="192:75" pos:end="192:90">APERATURE_HEIGHT</name></expr></argument>, <argument pos:start="192:93" pos:end="192:106"><expr pos:start="192:93" pos:end="192:106"><name pos:start="192:93" pos:end="192:106">OVERLAP_FACTOR</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			
			<expr_stmt pos:start="194:25" pos:end="194:136"><expr pos:start="194:25" pos:end="194:135"><name pos:start="194:25" pos:end="194:36">sourcePoints</name> <operator pos:start="194:38" pos:end="194:38">=</operator> <call pos:start="194:40" pos:end="194:135"><name pos:start="194:40" pos:end="194:68"><name pos:start="194:40" pos:end="194:47">Geometry</name><operator pos:start="194:48" pos:end="194:48">.</operator><name pos:start="194:49" pos:end="194:68">generateSourcePoints</name></name><argument_list pos:start="194:69" pos:end="194:135">(<argument pos:start="194:70" pos:end="194:84"><expr pos:start="194:70" pos:end="194:84"><name pos:start="194:70" pos:end="194:84">APERATURE_WIDTH</name></expr></argument>, <argument pos:start="194:87" pos:end="194:102"><expr pos:start="194:87" pos:end="194:102"><name pos:start="194:87" pos:end="194:102">APERATURE_HEIGHT</name></expr></argument>, <argument pos:start="194:105" pos:end="194:118"><expr pos:start="194:105" pos:end="194:118"><name pos:start="194:105" pos:end="194:118">OVERLAP_FACTOR</name></expr></argument>, <argument pos:start="194:121" pos:end="194:128"><expr pos:start="194:121" pos:end="194:128"><name pos:start="194:121" pos:end="194:128">bankList</name></expr></argument>, <argument pos:start="194:131" pos:end="194:134"><expr pos:start="194:131" pos:end="194:134"><literal type="boolean" pos:start="194:131" pos:end="194:134">true</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<decl_stmt pos:start="195:25" pos:end="195:101"><decl pos:start="195:25" pos:end="195:100"><type pos:start="195:25" pos:end="195:45"><name pos:start="195:25" pos:end="195:45">SearchPatternStrategy</name></type> <name pos:start="195:47" pos:end="195:63">innerCreepingLine</name> <init pos:start="195:65" pos:end="195:100">= <expr pos:start="195:67" pos:end="195:100"><operator pos:start="195:67" pos:end="195:69">new</operator> <call pos:start="195:71" pos:end="195:100"><name pos:start="195:71" pos:end="195:98">AdaptedCreepingLinePrimitive</name><argument_list pos:start="195:99" pos:end="195:100">()</argument_list></call></expr></init></decl>;</decl_stmt>
			<expr_stmt pos:start="196:25" pos:end="196:72"><expr pos:start="196:25" pos:end="196:71"><call pos:start="196:25" pos:end="196:71"><name pos:start="196:25" pos:end="196:57"><name pos:start="196:25" pos:end="196:41">innerCreepingLine</name><operator pos:start="196:42" pos:end="196:42">.</operator><name pos:start="196:43" pos:end="196:57">setSourcePoints</name></name><argument_list pos:start="196:58" pos:end="196:71">(<argument pos:start="196:59" pos:end="196:70"><expr pos:start="196:59" pos:end="196:70"><name pos:start="196:59" pos:end="196:70">sourcePoints</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt pos:start="197:25" pos:end="197:83"><expr pos:start="197:25" pos:end="197:82"><call pos:start="197:25" pos:end="197:82"><name pos:start="197:25" pos:end="197:54"><name pos:start="197:25" pos:end="197:41">innerCreepingLine</name><operator pos:start="197:42" pos:end="197:42">.</operator><name pos:start="197:43" pos:end="197:54">setRouteType</name></name><argument_list pos:start="197:55" pos:end="197:82">(<argument pos:start="197:56" pos:end="197:81"><expr pos:start="197:56" pos:end="197:81"><name pos:start="197:56" pos:end="197:81"><name pos:start="197:56" pos:end="197:64">RouteType</name><operator pos:start="197:65" pos:end="197:65">.</operator><name pos:start="197:66" pos:end="197:81">INNER_CRISSCROSS</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt pos:start="198:25" pos:end="198:114"><expr pos:start="198:25" pos:end="198:113"><call pos:start="198:25" pos:end="198:113"><name pos:start="198:25" pos:end="198:37"><name pos:start="198:25" pos:end="198:30">routes</name><operator pos:start="198:31" pos:end="198:31">.</operator><name pos:start="198:32" pos:end="198:37">addAll</name></name><argument_list pos:start="198:38" pos:end="198:113">(<argument pos:start="198:39" pos:end="198:112"><expr pos:start="198:39" pos:end="198:112"><call pos:start="198:39" pos:end="198:112"><name pos:start="198:39" pos:end="198:78"><name pos:start="198:39" pos:end="198:55">innerCreepingLine</name><operator pos:start="198:56" pos:end="198:56">.</operator><name pos:start="198:57" pos:end="198:78">generateRoutePrimitive</name></name><argument_list pos:start="198:79" pos:end="198:112">(<argument pos:start="198:80" pos:end="198:95"><expr pos:start="198:80" pos:end="198:95"><name pos:start="198:80" pos:end="198:95">APERATURE_HEIGHT</name></expr></argument>, <argument pos:start="198:98" pos:end="198:111"><expr pos:start="198:98" pos:end="198:111"><name pos:start="198:98" pos:end="198:111">OVERLAP_FACTOR</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			
			<expr_stmt pos:start="200:25" pos:end="200:70"><expr pos:start="200:25" pos:end="200:69"><call pos:start="200:25" pos:end="200:69"><name pos:start="200:25" pos:end="200:47"><name pos:start="200:25" pos:end="200:33">Utilities</name><operator pos:start="200:34" pos:end="200:34">.</operator><name pos:start="200:35" pos:end="200:47">debugPrintOut</name></name><argument_list pos:start="200:48" pos:end="200:69">(<argument pos:start="200:49" pos:end="200:60"><expr pos:start="200:49" pos:end="200:60"><name pos:start="200:49" pos:end="200:60">riverVectors</name></expr></argument>, <argument pos:start="200:63" pos:end="200:68"><expr pos:start="200:63" pos:end="200:68"><name pos:start="200:63" pos:end="200:68">routes</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			
			<expr_stmt pos:start="202:25" pos:end="202:86"><expr pos:start="202:25" pos:end="202:85"><name pos:start="202:25" pos:end="202:41">totalRiverSegment</name> <operator pos:start="202:43" pos:end="202:43">=</operator> <call pos:start="202:45" pos:end="202:85"><name pos:start="202:45" pos:end="202:75"><name pos:start="202:45" pos:end="202:53">Utilities</name><operator pos:start="202:54" pos:end="202:54">.</operator><name pos:start="202:55" pos:end="202:75">makeTotalRiverSegment</name></name><argument_list pos:start="202:76" pos:end="202:85">(<argument pos:start="202:77" pos:end="202:84"><expr pos:start="202:77" pos:end="202:84"><name pos:start="202:77" pos:end="202:84">bankList</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

			<comment type="line" pos:start="204:25" pos:end="204:119">//routes = Utilities.splitRoutePrimitives(routes, dronesNum, APERATURE_HEIGHT, OVERLAP_FACTOR);</comment>
			<expr_stmt pos:start="205:25" pos:end="205:70"><expr pos:start="205:25" pos:end="205:69"><call pos:start="205:25" pos:end="205:69"><name pos:start="205:25" pos:end="205:47"><name pos:start="205:25" pos:end="205:33">Utilities</name><operator pos:start="205:34" pos:end="205:34">.</operator><name pos:start="205:35" pos:end="205:47">debugPrintOut</name></name><argument_list pos:start="205:48" pos:end="205:69">(<argument pos:start="205:49" pos:end="205:60"><expr pos:start="205:49" pos:end="205:60"><name pos:start="205:49" pos:end="205:60">riverVectors</name></expr></argument>, <argument pos:start="205:63" pos:end="205:68"><expr pos:start="205:63" pos:end="205:68"><name pos:start="205:63" pos:end="205:68">routes</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			
			
			<decl_stmt pos:start="208:25" pos:end="208:92"><decl pos:start="208:25" pos:end="208:91"><type pos:start="208:25" pos:end="208:45"><name pos:start="208:25" pos:end="208:45">SearchPatternStrategy</name></type> <name pos:start="208:47" pos:end="208:58">priorityArea</name> <init pos:start="208:60" pos:end="208:91">= <expr pos:start="208:62" pos:end="208:91"><operator pos:start="208:62" pos:end="208:64">new</operator> <call pos:start="208:66" pos:end="208:91"><name pos:start="208:66" pos:end="208:89">PriorityPolygonPrimitive</name><argument_list pos:start="208:90" pos:end="208:91">()</argument_list></call></expr></init></decl>;</decl_stmt>
			<comment type="line" pos:start="209:25" pos:end="209:96">//priorityArea.generateRoutePrimitive(APERATURE_HEIGHT, OVERLAP_FACTOR);</comment>
			<expr_stmt pos:start="210:25" pos:end="210:68"><expr pos:start="210:25" pos:end="210:67"><call pos:start="210:25" pos:end="210:67"><name pos:start="210:25" pos:end="210:52"><name pos:start="210:25" pos:end="210:36">priorityArea</name><operator pos:start="210:37" pos:end="210:37">.</operator><name pos:start="210:38" pos:end="210:52">setSourcePoints</name></name><argument_list pos:start="210:53" pos:end="210:67">(<argument pos:start="210:54" pos:end="210:66"><expr pos:start="210:54" pos:end="210:66"><name pos:start="210:54" pos:end="210:66">priorityAreas</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt pos:start="211:25" pos:end="211:74"><expr pos:start="211:25" pos:end="211:73"><call pos:start="211:25" pos:end="211:73"><name pos:start="211:25" pos:end="211:49"><name pos:start="211:25" pos:end="211:36">priorityArea</name><operator pos:start="211:37" pos:end="211:37">.</operator><name pos:start="211:38" pos:end="211:49">setRouteType</name></name><argument_list pos:start="211:50" pos:end="211:73">(<argument pos:start="211:51" pos:end="211:72"><expr pos:start="211:51" pos:end="211:72"><name pos:start="211:51" pos:end="211:72"><name pos:start="211:51" pos:end="211:59">RouteType</name><operator pos:start="211:60" pos:end="211:60">.</operator><name pos:start="211:61" pos:end="211:72">PRIORITYAREA</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt pos:start="212:25" pos:end="212:109"><expr pos:start="212:25" pos:end="212:108"><call pos:start="212:25" pos:end="212:108"><name pos:start="212:25" pos:end="212:37"><name pos:start="212:25" pos:end="212:30">routes</name><operator pos:start="212:31" pos:end="212:31">.</operator><name pos:start="212:32" pos:end="212:37">addAll</name></name><argument_list pos:start="212:38" pos:end="212:108">(<argument pos:start="212:39" pos:end="212:107"><expr pos:start="212:39" pos:end="212:107"><call pos:start="212:39" pos:end="212:107"><name pos:start="212:39" pos:end="212:73"><name pos:start="212:39" pos:end="212:50">priorityArea</name><operator pos:start="212:51" pos:end="212:51">.</operator><name pos:start="212:52" pos:end="212:73">generateRoutePrimitive</name></name><argument_list pos:start="212:74" pos:end="212:107">(<argument pos:start="212:75" pos:end="212:90"><expr pos:start="212:75" pos:end="212:90"><name pos:start="212:75" pos:end="212:90">APERATURE_HEIGHT</name></expr></argument>, <argument pos:start="212:93" pos:end="212:106"><expr pos:start="212:93" pos:end="212:106"><name pos:start="212:93" pos:end="212:106">OVERLAP_FACTOR</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<for pos:start="213:25" pos:end="215:25">for<control pos:start="213:28" pos:end="213:67">(<init pos:start="213:29" pos:end="213:66"><decl pos:start="213:29" pos:end="213:66"><type pos:start="213:29" pos:end="213:42"><name pos:start="213:29" pos:end="213:42">RoutePrimitive</name></type> <name pos:start="213:44" pos:end="213:57">routePrimitive</name> <range pos:start="213:59" pos:end="213:66">: <expr pos:start="213:61" pos:end="213:66"><name pos:start="213:61" pos:end="213:66">routes</name></expr></range></decl></init>)</control> <block pos:start="213:69" pos:end="215:25">{<block_content pos:start="214:33" pos:end="214:99">
				<expr_stmt pos:start="214:33" pos:end="214:99"><expr pos:start="214:33" pos:end="214:98"><call pos:start="214:33" pos:end="214:98"><name pos:start="214:33" pos:end="214:50"><name pos:start="214:33" pos:end="214:38">System</name><operator pos:start="214:39" pos:end="214:39">.</operator><name pos:start="214:40" pos:end="214:42">out</name><operator pos:start="214:43" pos:end="214:43">.</operator><name pos:start="214:44" pos:end="214:50">println</name></name><argument_list pos:start="214:51" pos:end="214:98">(<argument pos:start="214:52" pos:end="214:97"><expr pos:start="214:52" pos:end="214:97"><literal type="string" pos:start="214:52" pos:end="214:65">"route type: "</literal> <operator pos:start="214:67" pos:end="214:67">+</operator> <call pos:start="214:69" pos:end="214:97"><name pos:start="214:69" pos:end="214:95"><name pos:start="214:69" pos:end="214:82">routePrimitive</name><operator pos:start="214:83" pos:end="214:83">.</operator><name pos:start="214:84" pos:end="214:95">getRouteType</name></name><argument_list pos:start="214:96" pos:end="214:97">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			</block_content>}</block></for>
			<return pos:start="216:25" pos:end="216:38">return <expr pos:start="216:32" pos:end="216:37"><name pos:start="216:32" pos:end="216:37">routes</name></expr>;</return>
	</block_content>}</block></function>

	<function pos:start="219:9" pos:end="230:9"><type pos:start="219:9" pos:end="219:26"><specifier pos:start="219:9" pos:end="219:14">public</specifier> <specifier pos:start="219:16" pos:end="219:21">static</specifier> <name pos:start="219:23" pos:end="219:26">void</name></type> <name pos:start="219:28" pos:end="219:31">main</name><parameter_list pos:start="219:32" pos:end="219:46">(<parameter pos:start="219:33" pos:end="219:45"><decl pos:start="219:33" pos:end="219:45"><type pos:start="219:33" pos:end="219:40"><name pos:start="219:33" pos:end="219:40"><name pos:start="219:33" pos:end="219:38">String</name><index pos:start="219:39" pos:end="219:40">[]</index></name></type> <name pos:start="219:42" pos:end="219:45">args</name></decl></parameter>)</parameter_list> <block pos:start="219:48" pos:end="230:9">{<block_content pos:start="220:17" pos:end="228:91">
		<decl_stmt pos:start="220:17" pos:end="220:51"><decl pos:start="220:17" pos:end="220:50"><type pos:start="220:17" pos:end="220:24"><name pos:start="220:17" pos:end="220:24">MapRiver</name></type> <name pos:start="220:26" pos:end="220:33">runRoute</name> <init pos:start="220:35" pos:end="220:50">= <expr pos:start="220:37" pos:end="220:50"><operator pos:start="220:37" pos:end="220:39">new</operator> <call pos:start="220:41" pos:end="220:50"><name pos:start="220:41" pos:end="220:48">MapRiver</name><argument_list pos:start="220:49" pos:end="220:50">()</argument_list></call></expr></init></decl>;</decl_stmt>
		<decl_stmt pos:start="221:17" pos:end="221:81"><decl pos:start="221:17" pos:end="221:80"><type pos:start="221:17" pos:end="221:36"><name pos:start="221:17" pos:end="221:36"><name pos:start="221:17" pos:end="221:20">List</name><argument_list type="generic" pos:start="221:21" pos:end="221:36">&lt;<argument pos:start="221:22" pos:end="221:35"><name pos:start="221:22" pos:end="221:35">RoutePrimitive</name></argument>&gt;</argument_list></name></type> <name pos:start="221:38" pos:end="221:43">routes</name> <init pos:start="221:45" pos:end="221:80">= <expr pos:start="221:47" pos:end="221:80"><call pos:start="221:47" pos:end="221:80"><name pos:start="221:47" pos:end="221:78"><name pos:start="221:47" pos:end="221:54">runRoute</name><operator pos:start="221:55" pos:end="221:55">.</operator><name pos:start="221:56" pos:end="221:78">generateRoutePrimitives</name></name><argument_list pos:start="221:79" pos:end="221:80">()</argument_list></call></expr></init></decl>;</decl_stmt>
		<comment type="line" pos:start="222:17" pos:end="222:156">//MetricsRunner metricsRunner = new MetricsRunner(routes, runRoute.totalRiverSegment, runRoute.bankList, APERATURE_WIDTH, APERATURE_HEIGHT);</comment>
		<decl_stmt pos:start="223:17" pos:end="223:60"><decl pos:start="223:17" pos:end="223:59"><type pos:start="223:17" pos:end="223:20"><name pos:start="223:17" pos:end="223:20">long</name></type> <name pos:start="223:22" pos:end="223:30">startTime</name> <init pos:start="223:32" pos:end="223:59">= <expr pos:start="223:34" pos:end="223:59"><call pos:start="223:34" pos:end="223:59"><name pos:start="223:34" pos:end="223:57"><name pos:start="223:34" pos:end="223:39">System</name><operator pos:start="223:40" pos:end="223:40">.</operator><name pos:start="223:41" pos:end="223:57">currentTimeMillis</name></name><argument_list pos:start="223:58" pos:end="223:59">()</argument_list></call></expr></init></decl>;</decl_stmt>
		<for pos:start="224:17" pos:end="226:17">for<control pos:start="224:20" pos:end="224:43">(<init pos:start="224:21" pos:end="224:30"><decl pos:start="224:21" pos:end="224:29"><type pos:start="224:21" pos:end="224:23"><name pos:start="224:21" pos:end="224:23">int</name></type> <name pos:start="224:25" pos:end="224:25">i</name> <init pos:start="224:27" pos:end="224:29">= <expr pos:start="224:29" pos:end="224:29"><literal type="number" pos:start="224:29" pos:end="224:29">0</literal></expr></init></decl>;</init> <condition pos:start="224:32" pos:end="224:37"><expr pos:start="224:32" pos:end="224:36"><name pos:start="224:32" pos:end="224:32">i</name> <operator pos:start="224:34" pos:end="224:34">&lt;</operator> <literal type="number" pos:start="224:36" pos:end="224:36">1</literal></expr>;</condition> <incr pos:start="224:39" pos:end="224:42"><expr pos:start="224:39" pos:end="224:42"><name pos:start="224:39" pos:end="224:39">i</name> <operator pos:start="224:41" pos:end="224:42">++</operator></expr></incr>)</control> <block pos:start="224:45" pos:end="226:17">{<block_content>
			<comment type="line" pos:start="225:25" pos:end="225:53">//metricsRunner.runMetrics();</comment>
		</block_content>}</block></for>
		<decl_stmt pos:start="227:17" pos:end="227:58"><decl pos:start="227:17" pos:end="227:57"><type pos:start="227:17" pos:end="227:20"><name pos:start="227:17" pos:end="227:20">long</name></type> <name pos:start="227:22" pos:end="227:28">endTime</name> <init pos:start="227:30" pos:end="227:57">= <expr pos:start="227:32" pos:end="227:57"><call pos:start="227:32" pos:end="227:57"><name pos:start="227:32" pos:end="227:55"><name pos:start="227:32" pos:end="227:37">System</name><operator pos:start="227:38" pos:end="227:38">.</operator><name pos:start="227:39" pos:end="227:55">currentTimeMillis</name></name><argument_list pos:start="227:56" pos:end="227:57">()</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt pos:start="228:17" pos:end="228:91"><expr pos:start="228:17" pos:end="228:90"><call pos:start="228:17" pos:end="228:90"><name pos:start="228:17" pos:end="228:34"><name pos:start="228:17" pos:end="228:22">System</name><operator pos:start="228:23" pos:end="228:23">.</operator><name pos:start="228:24" pos:end="228:26">out</name><operator pos:start="228:27" pos:end="228:27">.</operator><name pos:start="228:28" pos:end="228:34">println</name></name><argument_list pos:start="228:35" pos:end="228:90">(<argument pos:start="228:36" pos:end="228:89"><expr pos:start="228:36" pos:end="228:89"><literal type="string" pos:start="228:36" pos:end="228:47">"That took "</literal> <operator pos:start="228:49" pos:end="228:49">+</operator> <operator pos:start="228:51" pos:end="228:51">(</operator><name pos:start="228:52" pos:end="228:58">endTime</name> <operator pos:start="228:60" pos:end="228:60">-</operator> <name pos:start="228:62" pos:end="228:70">startTime</name><operator pos:start="228:71" pos:end="228:71">)</operator> <operator pos:start="228:73" pos:end="228:73">+</operator> <literal type="string" pos:start="228:75" pos:end="228:89">" milliseconds"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<comment type="line" pos:start="229:17" pos:end="229:48">//runRoute.exportRoutes(routes);</comment>
	</block_content>}</block></function>

}</block></class></unit>
