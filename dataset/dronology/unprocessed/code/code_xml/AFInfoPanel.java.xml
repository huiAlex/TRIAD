<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="Java" filename="src/AFInfoPanel.java" pos:tabs="8"><package pos:start="1:1" pos:end="1:49">package <name pos:start="1:9" pos:end="1:48"><name pos:start="1:9" pos:end="1:11">edu</name><operator pos:start="1:12" pos:end="1:12">.</operator><name pos:start="1:13" pos:end="1:14">nd</name><operator pos:start="1:15" pos:end="1:15">.</operator><name pos:start="1:16" pos:end="1:24">dronology</name><operator pos:start="1:25" pos:end="1:25">.</operator><name pos:start="1:26" pos:end="1:27">ui</name><operator pos:start="1:28" pos:end="1:28">.</operator><name pos:start="1:29" pos:end="1:34">vaadin</name><operator pos:start="1:35" pos:end="1:35">.</operator><name pos:start="1:36" pos:end="1:48">activeflights</name></name>;</package>

<import pos:start="3:1" pos:end="3:32">import <name pos:start="3:8" pos:end="3:31"><name pos:start="3:8" pos:end="3:11">java</name><operator pos:start="3:12" pos:end="3:12">.</operator><name pos:start="3:13" pos:end="3:15">rmi</name><operator pos:start="3:16" pos:end="3:16">.</operator><name pos:start="3:17" pos:end="3:31">RemoteException</name></name>;</import>
<import pos:start="4:1" pos:end="4:27">import <name pos:start="4:8" pos:end="4:26"><name pos:start="4:8" pos:end="4:11">java</name><operator pos:start="4:12" pos:end="4:12">.</operator><name pos:start="4:13" pos:end="4:16">util</name><operator pos:start="4:17" pos:end="4:17">.</operator><name pos:start="4:18" pos:end="4:26">ArrayList</name></name>;</import>
<import pos:start="5:1" pos:end="5:28">import <name pos:start="5:8" pos:end="5:27"><name pos:start="5:8" pos:end="5:11">java</name><operator pos:start="5:12" pos:end="5:12">.</operator><name pos:start="5:13" pos:end="5:16">util</name><operator pos:start="5:17" pos:end="5:17">.</operator><name pos:start="5:18" pos:end="5:27">Collection</name></name>;</import>
<import pos:start="6:1" pos:end="6:29">import <name pos:start="6:8" pos:end="6:28"><name pos:start="6:8" pos:end="6:11">java</name><operator pos:start="6:12" pos:end="6:12">.</operator><name pos:start="6:13" pos:end="6:16">util</name><operator pos:start="6:17" pos:end="6:17">.</operator><name pos:start="6:18" pos:end="6:28">Collections</name></name>;</import>
<import pos:start="7:1" pos:end="7:22">import <name pos:start="7:8" pos:end="7:21"><name pos:start="7:8" pos:end="7:11">java</name><operator pos:start="7:12" pos:end="7:12">.</operator><name pos:start="7:13" pos:end="7:16">util</name><operator pos:start="7:17" pos:end="7:17">.</operator><name pos:start="7:18" pos:end="7:21">List</name></name>;</import>
<import pos:start="8:1" pos:end="8:21">import <name pos:start="8:8" pos:end="8:20"><name pos:start="8:8" pos:end="8:11">java</name><operator pos:start="8:12" pos:end="8:12">.</operator><name pos:start="8:13" pos:end="8:16">util</name><operator pos:start="8:17" pos:end="8:17">.</operator><name pos:start="8:18" pos:end="8:20">Map</name></name>;</import>
<import pos:start="9:1" pos:end="9:27">import <name pos:start="9:8" pos:end="9:26"><name pos:start="9:8" pos:end="9:11">java</name><operator pos:start="9:12" pos:end="9:12">.</operator><name pos:start="9:13" pos:end="9:16">util</name><operator pos:start="9:17" pos:end="9:17">.</operator><name pos:start="9:18" pos:end="9:20">Map</name><operator pos:start="9:21" pos:end="9:21">.</operator><name pos:start="9:22" pos:end="9:26">Entry</name></name>;</import>

<import pos:start="11:1" pos:end="11:28">import <name pos:start="11:8" pos:end="11:27"><name pos:start="11:8" pos:end="11:10">com</name><operator pos:start="11:11" pos:end="11:11">.</operator><name pos:start="11:12" pos:end="11:17">vaadin</name><operator pos:start="11:18" pos:end="11:18">.</operator><name pos:start="11:19" pos:end="11:20">ui</name><operator pos:start="11:21" pos:end="11:21">.</operator><name pos:start="11:22" pos:end="11:27">Button</name></name>;</import>
<import pos:start="12:1" pos:end="12:31">import <name pos:start="12:8" pos:end="12:30"><name pos:start="12:8" pos:end="12:10">com</name><operator pos:start="12:11" pos:end="12:11">.</operator><name pos:start="12:12" pos:end="12:17">vaadin</name><operator pos:start="12:18" pos:end="12:18">.</operator><name pos:start="12:19" pos:end="12:20">ui</name><operator pos:start="12:21" pos:end="12:21">.</operator><name pos:start="12:22" pos:end="12:30">Component</name></name>;</import>
<import pos:start="13:1" pos:end="13:37">import <name pos:start="13:8" pos:end="13:36"><name pos:start="13:8" pos:end="13:10">com</name><operator pos:start="13:11" pos:end="13:11">.</operator><name pos:start="13:12" pos:end="13:17">vaadin</name><operator pos:start="13:18" pos:end="13:18">.</operator><name pos:start="13:19" pos:end="13:20">ui</name><operator pos:start="13:21" pos:end="13:21">.</operator><name pos:start="13:22" pos:end="13:36">CustomComponent</name></name>;</import>
<import pos:start="14:1" pos:end="14:38">import <name pos:start="14:8" pos:end="14:37"><name pos:start="14:8" pos:end="14:10">com</name><operator pos:start="14:11" pos:end="14:11">.</operator><name pos:start="14:12" pos:end="14:17">vaadin</name><operator pos:start="14:18" pos:end="14:18">.</operator><name pos:start="14:19" pos:end="14:20">ui</name><operator pos:start="14:21" pos:end="14:21">.</operator><name pos:start="14:22" pos:end="14:37">HorizontalLayout</name></name>;</import>
<import pos:start="15:1" pos:end="15:27">import <name pos:start="15:8" pos:end="15:26"><name pos:start="15:8" pos:end="15:10">com</name><operator pos:start="15:11" pos:end="15:11">.</operator><name pos:start="15:12" pos:end="15:17">vaadin</name><operator pos:start="15:18" pos:end="15:18">.</operator><name pos:start="15:19" pos:end="15:20">ui</name><operator pos:start="15:21" pos:end="15:21">.</operator><name pos:start="15:22" pos:end="15:26">Label</name></name>;</import>
<import pos:start="16:1" pos:end="16:34">import <name pos:start="16:8" pos:end="16:33"><name pos:start="16:8" pos:end="16:10">com</name><operator pos:start="16:11" pos:end="16:11">.</operator><name pos:start="16:12" pos:end="16:17">vaadin</name><operator pos:start="16:18" pos:end="16:18">.</operator><name pos:start="16:19" pos:end="16:20">ui</name><operator pos:start="16:21" pos:end="16:21">.</operator><name pos:start="16:22" pos:end="16:33">Notification</name></name>;</import>
<import pos:start="17:1" pos:end="17:27">import <name pos:start="17:8" pos:end="17:26"><name pos:start="17:8" pos:end="17:10">com</name><operator pos:start="17:11" pos:end="17:11">.</operator><name pos:start="17:12" pos:end="17:17">vaadin</name><operator pos:start="17:18" pos:end="17:18">.</operator><name pos:start="17:19" pos:end="17:20">ui</name><operator pos:start="17:21" pos:end="17:21">.</operator><name pos:start="17:22" pos:end="17:26">Panel</name></name>;</import>
<import pos:start="18:1" pos:end="18:24">import <name pos:start="18:8" pos:end="18:23"><name pos:start="18:8" pos:end="18:10">com</name><operator pos:start="18:11" pos:end="18:11">.</operator><name pos:start="18:12" pos:end="18:17">vaadin</name><operator pos:start="18:18" pos:end="18:18">.</operator><name pos:start="18:19" pos:end="18:20">ui</name><operator pos:start="18:21" pos:end="18:21">.</operator><name pos:start="18:22" pos:end="18:23">UI</name></name>;</import>
<import pos:start="19:1" pos:end="19:36">import <name pos:start="19:8" pos:end="19:35"><name pos:start="19:8" pos:end="19:10">com</name><operator pos:start="19:11" pos:end="19:11">.</operator><name pos:start="19:12" pos:end="19:17">vaadin</name><operator pos:start="19:18" pos:end="19:18">.</operator><name pos:start="19:19" pos:end="19:20">ui</name><operator pos:start="19:21" pos:end="19:21">.</operator><name pos:start="19:22" pos:end="19:35">VerticalLayout</name></name>;</import>
<import pos:start="20:1" pos:end="20:28">import <name pos:start="20:8" pos:end="20:27"><name pos:start="20:8" pos:end="20:10">com</name><operator pos:start="20:11" pos:end="20:11">.</operator><name pos:start="20:12" pos:end="20:17">vaadin</name><operator pos:start="20:18" pos:end="20:18">.</operator><name pos:start="20:19" pos:end="20:20">ui</name><operator pos:start="20:21" pos:end="20:21">.</operator><name pos:start="20:22" pos:end="20:27">Window</name></name>;</import>
<import pos:start="21:1" pos:end="21:38">import <name pos:start="21:8" pos:end="21:37"><name pos:start="21:8" pos:end="21:10">com</name><operator pos:start="21:11" pos:end="21:11">.</operator><name pos:start="21:12" pos:end="21:17">vaadin</name><operator pos:start="21:18" pos:end="21:18">.</operator><name pos:start="21:19" pos:end="21:20">ui</name><operator pos:start="21:21" pos:end="21:21">.</operator><name pos:start="21:22" pos:end="21:27">themes</name><operator pos:start="21:28" pos:end="21:28">.</operator><name pos:start="21:29" pos:end="21:37">ValoTheme</name></name>;</import>

<import pos:start="23:1" pos:end="23:47">import <name pos:start="23:8" pos:end="23:46"><name pos:start="23:8" pos:end="23:10">edu</name><operator pos:start="23:11" pos:end="23:11">.</operator><name pos:start="23:12" pos:end="23:13">nd</name><operator pos:start="23:14" pos:end="23:14">.</operator><name pos:start="23:15" pos:end="23:23">dronology</name><operator pos:start="23:24" pos:end="23:24">.</operator><name pos:start="23:25" pos:end="23:28">core</name><operator pos:start="23:29" pos:end="23:29">.</operator><name pos:start="23:30" pos:end="23:36">vehicle</name><operator pos:start="23:37" pos:end="23:37">.</operator><name pos:start="23:38" pos:end="23:46">IUAVProxy</name></name>;</import>
<import pos:start="24:1" pos:end="24:70">import <name pos:start="24:8" pos:end="24:69"><name pos:start="24:8" pos:end="24:10">edu</name><operator pos:start="24:11" pos:end="24:11">.</operator><name pos:start="24:12" pos:end="24:13">nd</name><operator pos:start="24:14" pos:end="24:14">.</operator><name pos:start="24:15" pos:end="24:23">dronology</name><operator pos:start="24:24" pos:end="24:24">.</operator><name pos:start="24:25" pos:end="24:32">services</name><operator pos:start="24:33" pos:end="24:33">.</operator><name pos:start="24:34" pos:end="24:37">core</name><operator pos:start="24:38" pos:end="24:38">.</operator><name pos:start="24:39" pos:end="24:44">remote</name><operator pos:start="24:45" pos:end="24:45">.</operator><name pos:start="24:46" pos:end="24:69">IDroneSetupRemoteService</name></name>;</import>
<import pos:start="25:1" pos:end="25:73">import <name pos:start="25:8" pos:end="25:72"><name pos:start="25:8" pos:end="25:10">edu</name><operator pos:start="25:11" pos:end="25:11">.</operator><name pos:start="25:12" pos:end="25:13">nd</name><operator pos:start="25:14" pos:end="25:14">.</operator><name pos:start="25:15" pos:end="25:23">dronology</name><operator pos:start="25:24" pos:end="25:24">.</operator><name pos:start="25:25" pos:end="25:32">services</name><operator pos:start="25:33" pos:end="25:33">.</operator><name pos:start="25:34" pos:end="25:37">core</name><operator pos:start="25:38" pos:end="25:38">.</operator><name pos:start="25:39" pos:end="25:44">remote</name><operator pos:start="25:45" pos:end="25:45">.</operator><name pos:start="25:46" pos:end="25:72">IFlightManagerRemoteService</name></name>;</import>
<import pos:start="26:1" pos:end="26:69">import <name pos:start="26:8" pos:end="26:68"><name pos:start="26:8" pos:end="26:10">edu</name><operator pos:start="26:11" pos:end="26:11">.</operator><name pos:start="26:12" pos:end="26:13">nd</name><operator pos:start="26:14" pos:end="26:14">.</operator><name pos:start="26:15" pos:end="26:23">dronology</name><operator pos:start="26:24" pos:end="26:24">.</operator><name pos:start="26:25" pos:end="26:32">services</name><operator pos:start="26:33" pos:end="26:33">.</operator><name pos:start="26:34" pos:end="26:37">core</name><operator pos:start="26:38" pos:end="26:38">.</operator><name pos:start="26:39" pos:end="26:42">util</name><operator pos:start="26:43" pos:end="26:43">.</operator><name pos:start="26:44" pos:end="26:68">DronologyServiceException</name></name>;</import>
<import pos:start="27:1" pos:end="27:64">import <name pos:start="27:8" pos:end="27:63"><name pos:start="27:8" pos:end="27:10">edu</name><operator pos:start="27:11" pos:end="27:11">.</operator><name pos:start="27:12" pos:end="27:13">nd</name><operator pos:start="27:14" pos:end="27:14">.</operator><name pos:start="27:15" pos:end="27:23">dronology</name><operator pos:start="27:24" pos:end="27:24">.</operator><name pos:start="27:25" pos:end="27:26">ui</name><operator pos:start="27:27" pos:end="27:27">.</operator><name pos:start="27:28" pos:end="27:33">vaadin</name><operator pos:start="27:34" pos:end="27:34">.</operator><name pos:start="27:35" pos:end="27:43">connector</name><operator pos:start="27:44" pos:end="27:44">.</operator><name pos:start="27:45" pos:end="27:63">BaseServiceProvider</name></name>;</import>
<import pos:start="28:1" pos:end="28:45">import <name pos:start="28:8" pos:end="28:44"><name pos:start="28:8" pos:end="28:10">edu</name><operator pos:start="28:11" pos:end="28:11">.</operator><name pos:start="28:12" pos:end="28:13">nd</name><operator pos:start="28:14" pos:end="28:14">.</operator><name pos:start="28:15" pos:end="28:23">dronology</name><operator pos:start="28:24" pos:end="28:24">.</operator><name pos:start="28:25" pos:end="28:26">ui</name><operator pos:start="28:27" pos:end="28:27">.</operator><name pos:start="28:28" pos:end="28:33">vaadin</name><operator pos:start="28:34" pos:end="28:34">.</operator><name pos:start="28:35" pos:end="28:39">start</name><operator pos:start="28:40" pos:end="28:40">.</operator><name pos:start="28:41" pos:end="28:44">MyUI</name></name>;</import>
<import pos:start="29:1" pos:end="29:55">import <name pos:start="29:8" pos:end="29:54"><name pos:start="29:8" pos:end="29:10">edu</name><operator pos:start="29:11" pos:end="29:11">.</operator><name pos:start="29:12" pos:end="29:13">nd</name><operator pos:start="29:14" pos:end="29:14">.</operator><name pos:start="29:15" pos:end="29:23">dronology</name><operator pos:start="29:24" pos:end="29:24">.</operator><name pos:start="29:25" pos:end="29:26">ui</name><operator pos:start="29:27" pos:end="29:27">.</operator><name pos:start="29:28" pos:end="29:33">vaadin</name><operator pos:start="29:34" pos:end="29:34">.</operator><name pos:start="29:35" pos:end="29:39">utils</name><operator pos:start="29:40" pos:end="29:40">.</operator><name pos:start="29:41" pos:end="29:54">StyleConstants</name></name>;</import>
<import pos:start="30:1" pos:end="30:30">import <name pos:start="30:8" pos:end="30:29"><name pos:start="30:8" pos:end="30:10">net</name><operator pos:start="30:11" pos:end="30:11">.</operator><name pos:start="30:12" pos:end="30:13">mv</name><operator pos:start="30:14" pos:end="30:14">.</operator><name pos:start="30:15" pos:end="30:21">logging</name><operator pos:start="30:22" pos:end="30:22">.</operator><name pos:start="30:23" pos:end="30:29">ILogger</name></name>;</import>
<import pos:start="31:1" pos:end="31:37">import <name pos:start="31:8" pos:end="31:36"><name pos:start="31:8" pos:end="31:10">net</name><operator pos:start="31:11" pos:end="31:11">.</operator><name pos:start="31:12" pos:end="31:13">mv</name><operator pos:start="31:14" pos:end="31:14">.</operator><name pos:start="31:15" pos:end="31:21">logging</name><operator pos:start="31:22" pos:end="31:22">.</operator><name pos:start="31:23" pos:end="31:36">LoggerProvider</name></name>;</import>

<comment type="block" format="javadoc" pos:start="33:1" pos:end="38:3">/**
 * This is the side panel that contains the AFInfoBoxes with the UAV information
 * 
 * @author Patrick Falvey
 *
 */</comment>

<class pos:start="40:1" pos:end="499:1"><specifier pos:start="40:1" pos:end="40:6">public</specifier> class <name pos:start="40:14" pos:end="40:24">AFInfoPanel</name> <super_list pos:start="40:26" pos:end="40:48"><extends pos:start="40:26" pos:end="40:48">extends <super pos:start="40:34" pos:end="40:48"><name pos:start="40:34" pos:end="40:48">CustomComponent</name></super></extends></super_list> <block pos:start="40:50" pos:end="499:1">{
	<decl_stmt pos:start="41:9" pos:end="41:75"><decl pos:start="41:9" pos:end="41:74"><type pos:start="41:9" pos:end="41:33"><specifier pos:start="41:9" pos:end="41:15">private</specifier> <specifier pos:start="41:17" pos:end="41:22">static</specifier> <specifier pos:start="41:24" pos:end="41:28">final</specifier> <name pos:start="41:30" pos:end="41:33">long</name></type> <name pos:start="41:35" pos:end="41:50">serialVersionUID</name> <init pos:start="41:52" pos:end="41:74">= <expr pos:start="41:54" pos:end="41:74"><operator pos:start="41:54" pos:end="41:54">-</operator><literal type="number" pos:start="41:55" pos:end="41:74">3663049148276256302L</literal></expr></init></decl>;</decl_stmt>
	<decl_stmt pos:start="42:9" pos:end="42:42"><decl pos:start="42:9" pos:end="42:41"><type pos:start="42:9" pos:end="42:21"><specifier pos:start="42:9" pos:end="42:15">private</specifier> <name pos:start="42:17" pos:end="42:21">Panel</name></type> <name pos:start="42:23" pos:end="42:27">panel</name> <init pos:start="42:29" pos:end="42:41">= <expr pos:start="42:31" pos:end="42:41"><operator pos:start="42:31" pos:end="42:33">new</operator> <call pos:start="42:35" pos:end="42:41"><name pos:start="42:35" pos:end="42:39">Panel</name><argument_list pos:start="42:40" pos:end="42:41">()</argument_list></call></expr></init></decl>;</decl_stmt>
	<decl_stmt pos:start="43:9" pos:end="43:63"><decl pos:start="43:9" pos:end="43:62"><type pos:start="43:9" pos:end="43:22"><specifier pos:start="43:9" pos:end="43:15">private</specifier> <name pos:start="43:17" pos:end="43:22">Button</name></type> <name pos:start="43:24" pos:end="43:35">selectButton</name> <init pos:start="43:37" pos:end="43:62">= <expr pos:start="43:39" pos:end="43:62"><operator pos:start="43:39" pos:end="43:41">new</operator> <call pos:start="43:43" pos:end="43:62"><name pos:start="43:43" pos:end="43:48">Button</name><argument_list pos:start="43:49" pos:end="43:62">(<argument pos:start="43:50" pos:end="43:61"><expr pos:start="43:50" pos:end="43:61"><literal type="string" pos:start="43:50" pos:end="43:61">"Select all"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<decl_stmt pos:start="44:9" pos:end="44:64"><decl pos:start="44:9" pos:end="44:63"><type pos:start="44:9" pos:end="44:22"><specifier pos:start="44:9" pos:end="44:15">private</specifier> <name pos:start="44:17" pos:end="44:22">Button</name></type> <name pos:start="44:24" pos:end="44:36">visibleButton</name> <init pos:start="44:38" pos:end="44:63">= <expr pos:start="44:40" pos:end="44:63"><operator pos:start="44:40" pos:end="44:42">new</operator> <call pos:start="44:44" pos:end="44:63"><name pos:start="44:44" pos:end="44:49">Button</name><argument_list pos:start="44:50" pos:end="44:63">(<argument pos:start="44:51" pos:end="44:62"><expr pos:start="44:51" pos:end="44:62"><literal type="string" pos:start="44:51" pos:end="44:62">"Expand all"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<decl_stmt pos:start="45:9" pos:end="45:62"><decl pos:start="45:9" pos:end="45:61"><type pos:start="45:9" pos:end="45:30"><specifier pos:start="45:9" pos:end="45:15">private</specifier> <name pos:start="45:17" pos:end="45:30">VerticalLayout</name></type> <name pos:start="45:32" pos:end="45:38">content</name> <init pos:start="45:40" pos:end="45:61">= <expr pos:start="45:42" pos:end="45:61"><operator pos:start="45:42" pos:end="45:44">new</operator> <call pos:start="45:46" pos:end="45:61"><name pos:start="45:46" pos:end="45:59">VerticalLayout</name><argument_list pos:start="45:60" pos:end="45:61">()</argument_list></call></expr></init></decl>;</decl_stmt>
	<decl_stmt pos:start="46:9" pos:end="46:32"><decl pos:start="46:9" pos:end="46:31"><type pos:start="46:9" pos:end="46:19"><specifier pos:start="46:9" pos:end="46:15">private</specifier> <name pos:start="46:17" pos:end="46:19">int</name></type> <name pos:start="46:21" pos:end="46:27">numUAVs</name> <init pos:start="46:29" pos:end="46:31">= <expr pos:start="46:31" pos:end="46:31"><literal type="number" pos:start="46:31" pos:end="46:31">0</literal></expr></init></decl>;</decl_stmt>
	<decl_stmt pos:start="47:9" pos:end="47:41"><decl pos:start="47:9" pos:end="47:40"><type pos:start="47:9" pos:end="47:23"><specifier pos:start="47:9" pos:end="47:15">private</specifier> <name pos:start="47:17" pos:end="47:23">boolean</name></type> <name pos:start="47:25" pos:end="47:33">selectAll</name> <init pos:start="47:35" pos:end="47:40">= <expr pos:start="47:37" pos:end="47:40"><literal type="boolean" pos:start="47:37" pos:end="47:40">true</literal></expr></init></decl>;</decl_stmt>
	<decl_stmt pos:start="48:9" pos:end="48:40"><decl pos:start="48:9" pos:end="48:39"><type pos:start="48:9" pos:end="48:23"><specifier pos:start="48:9" pos:end="48:15">private</specifier> <name pos:start="48:17" pos:end="48:23">boolean</name></type> <name pos:start="48:25" pos:end="48:31">visible</name> <init pos:start="48:33" pos:end="48:39">= <expr pos:start="48:35" pos:end="48:39"><literal type="boolean" pos:start="48:35" pos:end="48:39">false</literal></expr></init></decl>;</decl_stmt>
	<decl_stmt pos:start="49:9" pos:end="49:36"><decl pos:start="49:9" pos:end="49:35"><type pos:start="49:9" pos:end="49:22"><specifier pos:start="49:9" pos:end="49:15">private</specifier> <name pos:start="49:17" pos:end="49:22">String</name></type> <name pos:start="49:24" pos:end="49:30">focused</name> <init pos:start="49:32" pos:end="49:35">= <expr pos:start="49:34" pos:end="49:35"><literal type="string" pos:start="49:34" pos:end="49:35">""</literal></expr></init></decl>;</decl_stmt>
	<decl_stmt pos:start="50:9" pos:end="50:72"><decl pos:start="50:9" pos:end="50:71"><type pos:start="50:9" pos:end="50:35"><specifier pos:start="50:9" pos:end="50:15">private</specifier> <name pos:start="50:17" pos:end="50:35">AFMapViewOperations</name></type> <name pos:start="50:37" pos:end="50:43">mapView</name> <init pos:start="50:45" pos:end="50:71">= <expr pos:start="50:47" pos:end="50:71"><operator pos:start="50:47" pos:end="50:49">new</operator> <call pos:start="50:51" pos:end="50:71"><name pos:start="50:51" pos:end="50:69">AFMapViewOperations</name><argument_list pos:start="50:70" pos:end="50:71">()</argument_list></call></expr></init></decl>;</decl_stmt>
	<decl_stmt pos:start="51:9" pos:end="51:45"><decl pos:start="51:9" pos:end="51:44"><type pos:start="51:9" pos:end="51:37"><specifier pos:start="51:9" pos:end="51:15">private</specifier> <name pos:start="51:17" pos:end="51:37"><name pos:start="51:17" pos:end="51:26">Collection</name><argument_list type="generic" pos:start="51:27" pos:end="51:37">&lt;<argument pos:start="51:28" pos:end="51:36"><name pos:start="51:28" pos:end="51:36">IUAVProxy</name></argument>&gt;</argument_list></name></type> <name pos:start="51:39" pos:end="51:44">drones</name></decl>;</decl_stmt>
	<decl_stmt pos:start="52:9" pos:end="52:49"><decl pos:start="52:9" pos:end="52:48"><type pos:start="52:9" pos:end="52:40"><specifier pos:start="52:9" pos:end="52:15">private</specifier> <name pos:start="52:17" pos:end="52:40">IDroneSetupRemoteService</name></type> <name pos:start="52:42" pos:end="52:48">service</name></decl>;</decl_stmt>
	<decl_stmt pos:start="53:9" pos:end="53:66"><decl pos:start="53:9" pos:end="53:65"><type pos:start="53:9" pos:end="53:35"><specifier pos:start="53:9" pos:end="53:15">private</specifier> <name pos:start="53:17" pos:end="53:35">BaseServiceProvider</name></type> <name pos:start="53:37" pos:end="53:44">provider</name> <init pos:start="53:46" pos:end="53:65">= <expr pos:start="53:48" pos:end="53:65"><call pos:start="53:48" pos:end="53:65"><name pos:start="53:48" pos:end="53:63"><name pos:start="53:48" pos:end="53:51">MyUI</name><operator pos:start="53:52" pos:end="53:52">.</operator><name pos:start="53:53" pos:end="53:63">getProvider</name></name><argument_list pos:start="53:64" pos:end="53:65">()</argument_list></call></expr></init></decl>;</decl_stmt>
	<decl_stmt pos:start="54:9" pos:end="54:80"><decl pos:start="54:9" pos:end="54:79"><type pos:start="54:9" pos:end="54:35"><specifier pos:start="54:9" pos:end="54:15">private</specifier> <name pos:start="54:17" pos:end="54:35">AFMissionOperations</name></type> <name pos:start="54:37" pos:end="54:47">missionView</name> <init pos:start="54:49" pos:end="54:79">= <expr pos:start="54:51" pos:end="54:79"><operator pos:start="54:51" pos:end="54:53">new</operator> <call pos:start="54:55" pos:end="54:79"><name pos:start="54:55" pos:end="54:73">AFMissionOperations</name><argument_list pos:start="54:74" pos:end="54:79">(<argument pos:start="54:75" pos:end="54:78"><expr pos:start="54:75" pos:end="54:78"><name pos:start="54:75" pos:end="54:78">this</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<decl_stmt pos:start="55:9" pos:end="55:90"><decl pos:start="55:9" pos:end="55:89"><type pos:start="55:9" pos:end="55:36"><specifier pos:start="55:9" pos:end="55:15">private</specifier> <specifier pos:start="55:17" pos:end="55:22">static</specifier> <specifier pos:start="55:24" pos:end="55:28">final</specifier> <name pos:start="55:30" pos:end="55:36">ILogger</name></type> <name pos:start="55:38" pos:end="55:43">LOGGER</name> <init pos:start="55:45" pos:end="55:89">= <expr pos:start="55:47" pos:end="55:89"><call pos:start="55:47" pos:end="55:89"><name pos:start="55:47" pos:end="55:70"><name pos:start="55:47" pos:end="55:60">LoggerProvider</name><operator pos:start="55:61" pos:end="55:61">.</operator><name pos:start="55:62" pos:end="55:70">getLogger</name></name><argument_list pos:start="55:71" pos:end="55:89">(<argument pos:start="55:72" pos:end="55:88"><expr pos:start="55:72" pos:end="55:88"><name pos:start="55:72" pos:end="55:88"><name pos:start="55:72" pos:end="55:82">AFInfoPanel</name><operator pos:start="55:83" pos:end="55:83">.</operator><name pos:start="55:84" pos:end="55:88">class</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

	<constructor pos:start="57:9" pos:end="228:9"><specifier pos:start="57:9" pos:end="57:14">public</specifier> <name pos:start="57:16" pos:end="57:26">AFInfoPanel</name><parameter_list pos:start="57:27" pos:end="57:28">()</parameter_list> <block pos:start="57:30" pos:end="228:9">{<block_content pos:start="59:17" pos:end="226:17"> 

		<expr_stmt pos:start="59:17" pos:end="59:77"><expr pos:start="59:17" pos:end="59:76"><call pos:start="59:17" pos:end="59:76"><name pos:start="59:17" pos:end="59:32"><name pos:start="59:17" pos:end="59:21">panel</name><operator pos:start="59:22" pos:end="59:22">.</operator><name pos:start="59:23" pos:end="59:32">setCaption</name></name><argument_list pos:start="59:33" pos:end="59:76">(<argument pos:start="59:34" pos:end="59:75"><expr pos:start="59:34" pos:end="59:75"><call pos:start="59:34" pos:end="59:58"><name pos:start="59:34" pos:end="59:49"><name pos:start="59:34" pos:end="59:40">Integer</name><operator pos:start="59:41" pos:end="59:41">.</operator><name pos:start="59:42" pos:end="59:49">toString</name></name><argument_list pos:start="59:50" pos:end="59:58">(<argument pos:start="59:51" pos:end="59:57"><expr pos:start="59:51" pos:end="59:57"><name pos:start="59:51" pos:end="59:57">numUAVs</name></expr></argument>)</argument_list></call> <operator pos:start="59:60" pos:end="59:60">+</operator> <literal type="string" pos:start="59:62" pos:end="59:75">" Active UAVs"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt pos:start="60:17" pos:end="60:42"><expr pos:start="60:17" pos:end="60:41"><call pos:start="60:17" pos:end="60:41"><name pos:start="60:17" pos:end="60:32"><name pos:start="60:17" pos:end="60:21">panel</name><operator pos:start="60:22" pos:end="60:22">.</operator><name pos:start="60:23" pos:end="60:32">setContent</name></name><argument_list pos:start="60:33" pos:end="60:41">(<argument pos:start="60:34" pos:end="60:40"><expr pos:start="60:34" pos:end="60:40"><name pos:start="60:34" pos:end="60:40">content</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt pos:start="61:17" pos:end="61:65"><expr pos:start="61:17" pos:end="61:64"><call pos:start="61:17" pos:end="61:64"><name pos:start="61:17" pos:end="61:34"><name pos:start="61:17" pos:end="61:21">panel</name><operator pos:start="61:22" pos:end="61:22">.</operator><name pos:start="61:23" pos:end="61:34">addStyleName</name></name><argument_list pos:start="61:35" pos:end="61:64">(<argument pos:start="61:36" pos:end="61:63"><expr pos:start="61:36" pos:end="61:63"><name pos:start="61:36" pos:end="61:63"><name pos:start="61:36" pos:end="61:49">StyleConstants</name><operator pos:start="61:50" pos:end="61:50">.</operator><name pos:start="61:51" pos:end="61:63">AF_INFO_PANEL</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt pos:start="62:17" pos:end="62:65"><expr pos:start="62:17" pos:end="62:64"><call pos:start="62:17" pos:end="62:64"><name pos:start="62:17" pos:end="62:34"><name pos:start="62:17" pos:end="62:21">panel</name><operator pos:start="62:22" pos:end="62:22">.</operator><name pos:start="62:23" pos:end="62:34">addStyleName</name></name><argument_list pos:start="62:35" pos:end="62:64">(<argument pos:start="62:36" pos:end="62:63"><expr pos:start="62:36" pos:end="62:63"><name pos:start="62:36" pos:end="62:63"><name pos:start="62:36" pos:end="62:49">StyleConstants</name><operator pos:start="62:50" pos:end="62:50">.</operator><name pos:start="62:51" pos:end="62:63">CONTROL_PANEL</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		<decl_stmt pos:start="64:17" pos:end="64:66"><decl pos:start="64:17" pos:end="64:65"><type pos:start="64:17" pos:end="64:32"><name pos:start="64:17" pos:end="64:32">HorizontalLayout</name></type> <name pos:start="64:34" pos:end="64:40">buttons</name> <init pos:start="64:42" pos:end="64:65">= <expr pos:start="64:44" pos:end="64:65"><operator pos:start="64:44" pos:end="64:46">new</operator> <call pos:start="64:48" pos:end="64:65"><name pos:start="64:48" pos:end="64:63">HorizontalLayout</name><argument_list pos:start="64:64" pos:end="64:65">()</argument_list></call></expr></init></decl>;</decl_stmt>
		<decl_stmt pos:start="65:17" pos:end="65:62"><decl pos:start="65:17" pos:end="65:61"><type pos:start="65:17" pos:end="65:30"><name pos:start="65:17" pos:end="65:30">VerticalLayout</name></type> <name pos:start="65:32" pos:end="65:38">sideBar</name> <init pos:start="65:40" pos:end="65:61">= <expr pos:start="65:42" pos:end="65:61"><operator pos:start="65:42" pos:end="65:44">new</operator> <call pos:start="65:46" pos:end="65:61"><name pos:start="65:46" pos:end="65:59">VerticalLayout</name><argument_list pos:start="65:60" pos:end="65:61">()</argument_list></call></expr></init></decl>;</decl_stmt>

		<decl_stmt pos:start="67:17" pos:end="67:76"><decl pos:start="67:17" pos:end="67:75"><type pos:start="67:17" pos:end="67:36"><name pos:start="67:17" pos:end="67:36">AFEmergencyComponent</name></type> <name pos:start="67:38" pos:end="67:46">emergency</name> <init pos:start="67:48" pos:end="67:75">= <expr pos:start="67:50" pos:end="67:75"><operator pos:start="67:50" pos:end="67:52">new</operator> <call pos:start="67:54" pos:end="67:75"><name pos:start="67:54" pos:end="67:73">AFEmergencyComponent</name><argument_list pos:start="67:74" pos:end="67:75">()</argument_list></call></expr></init></decl>;</decl_stmt>

		<expr_stmt pos:start="69:17" pos:end="151:19"><expr pos:start="69:17" pos:end="151:18"><call pos:start="69:17" pos:end="69:35"><name pos:start="69:17" pos:end="69:33"><name pos:start="69:17" pos:end="69:25">emergency</name><operator pos:start="69:26" pos:end="69:26">.</operator><name pos:start="69:27" pos:end="69:33">getHome</name></name><argument_list pos:start="69:34" pos:end="69:35">()</argument_list></call><operator pos:start="69:36" pos:end="69:36">.</operator><call pos:start="69:37" pos:end="151:18"><name pos:start="69:37" pos:end="69:52">addClickListener</name><argument_list pos:start="69:53" pos:end="151:18">(<argument pos:start="69:54" pos:end="151:17"><expr pos:start="69:54" pos:end="151:17"><lambda pos:start="69:54" pos:end="151:17"><parameter_list type="pseudo" pos:start="69:54" pos:end="69:54"><parameter pos:start="69:54" pos:end="69:54"><decl pos:start="69:54" pos:end="69:54"><name pos:start="69:54" pos:end="69:54">e</name></decl></parameter></parameter_list> -&gt; <block pos:start="69:59" pos:end="151:17">{<block_content pos:start="70:25" pos:end="149:67"> <comment type="line" pos:start="69:61" pos:end="69:114">// sends all UAVs (or all checked UAVs) to their homes</comment>
			<decl_stmt pos:start="70:25" pos:end="70:65"><decl pos:start="70:25" pos:end="70:64"><type pos:start="70:25" pos:end="70:36"><name pos:start="70:25" pos:end="70:36"><name pos:start="70:25" pos:end="70:28">List</name><argument_list type="generic" pos:start="70:29" pos:end="70:36">&lt;<argument pos:start="70:30" pos:end="70:35"><name pos:start="70:30" pos:end="70:35">String</name></argument>&gt;</argument_list></name></type> <name pos:start="70:38" pos:end="70:44">checked</name> <init pos:start="70:46" pos:end="70:64">= <expr pos:start="70:48" pos:end="70:64"><call pos:start="70:48" pos:end="70:64"><name pos:start="70:48" pos:end="70:62"><name pos:start="70:48" pos:end="70:51">this</name><operator pos:start="70:52" pos:end="70:52">.</operator><name pos:start="70:53" pos:end="70:62">getChecked</name></name><argument_list pos:start="70:63" pos:end="70:64">()</argument_list></call></expr></init></decl>;</decl_stmt>
			<decl_stmt pos:start="71:25" pos:end="71:44"><decl pos:start="71:25" pos:end="71:43"><type pos:start="71:25" pos:end="71:30"><name pos:start="71:25" pos:end="71:30">String</name></type> <name pos:start="71:32" pos:end="71:38">message</name> <init pos:start="71:40" pos:end="71:43">= <expr pos:start="71:42" pos:end="71:43"><literal type="string" pos:start="71:42" pos:end="71:43">""</literal></expr></init></decl>;</decl_stmt>
			<decl_stmt pos:start="72:25" pos:end="72:48"><decl pos:start="72:25" pos:end="72:47"><type pos:start="72:25" pos:end="72:31"><name pos:start="72:25" pos:end="72:31">boolean</name></type> <name pos:start="72:33" pos:end="72:40">sendHome</name> <init pos:start="72:42" pos:end="72:47">= <expr pos:start="72:44" pos:end="72:47"><literal type="boolean" pos:start="72:44" pos:end="72:47">true</literal></expr></init></decl>;</decl_stmt>
			<if_stmt pos:start="73:25" pos:end="97:25"><if pos:start="73:25" pos:end="95:25">if <condition pos:start="73:28" pos:end="73:47">(<expr pos:start="73:29" pos:end="73:46"><call pos:start="73:29" pos:end="73:42"><name pos:start="73:29" pos:end="73:40"><name pos:start="73:29" pos:end="73:35">checked</name><operator pos:start="73:36" pos:end="73:36">.</operator><name pos:start="73:37" pos:end="73:40">size</name></name><argument_list pos:start="73:41" pos:end="73:42">()</argument_list></call> <operator pos:start="73:44" pos:end="73:44">&gt;</operator> <literal type="number" pos:start="73:46" pos:end="73:46">0</literal></expr>)</condition> <block pos:start="73:49" pos:end="95:25">{<block_content pos:start="74:33" pos:end="94:33">
				<if_stmt pos:start="74:33" pos:end="94:33"><if pos:start="74:33" pos:end="87:33">if <condition pos:start="74:36" pos:end="74:56">(<expr pos:start="74:37" pos:end="74:55"><call pos:start="74:37" pos:end="74:50"><name pos:start="74:37" pos:end="74:48"><name pos:start="74:37" pos:end="74:43">checked</name><operator pos:start="74:44" pos:end="74:44">.</operator><name pos:start="74:45" pos:end="74:48">size</name></name><argument_list pos:start="74:49" pos:end="74:50">()</argument_list></call> <operator pos:start="74:52" pos:end="74:53">==</operator> <literal type="number" pos:start="74:55" pos:end="74:55">1</literal></expr>)</condition> <block pos:start="74:58" pos:end="87:33">{<block_content pos:start="75:41" pos:end="85:41">
					<for pos:start="75:41" pos:end="85:41">for <control pos:start="75:45" pos:end="75:77">(<init pos:start="75:46" pos:end="75:55"><decl pos:start="75:46" pos:end="75:54"><type pos:start="75:46" pos:end="75:48"><name pos:start="75:46" pos:end="75:48">int</name></type> <name pos:start="75:50" pos:end="75:50">i</name> <init pos:start="75:52" pos:end="75:54">= <expr pos:start="75:54" pos:end="75:54"><literal type="number" pos:start="75:54" pos:end="75:54">1</literal></expr></init></decl>;</init> <condition pos:start="75:57" pos:end="75:72"><expr pos:start="75:57" pos:end="75:71"><name pos:start="75:57" pos:end="75:57">i</name> <operator pos:start="75:59" pos:end="75:59">&lt;</operator> <name pos:start="75:61" pos:end="75:67">numUAVs</name> <operator pos:start="75:69" pos:end="75:69">+</operator> <literal type="number" pos:start="75:71" pos:end="75:71">1</literal></expr>;</condition> <incr pos:start="75:74" pos:end="75:76"><expr pos:start="75:74" pos:end="75:76"><name pos:start="75:74" pos:end="75:74">i</name><operator pos:start="75:75" pos:end="75:76">++</operator></expr></incr>)</control> <block pos:start="75:79" pos:end="85:41">{<block_content pos:start="76:49" pos:end="84:49">
						<decl_stmt pos:start="76:49" pos:end="76:100"><decl pos:start="76:49" pos:end="76:99"><type pos:start="76:49" pos:end="76:57"><name pos:start="76:49" pos:end="76:57">AFInfoBox</name></type> <name pos:start="76:59" pos:end="76:61">box</name> <init pos:start="76:63" pos:end="76:99">= <expr pos:start="76:65" pos:end="76:99"><operator pos:start="76:65" pos:end="76:65">(</operator><name pos:start="76:66" pos:end="76:74">AFInfoBox</name><operator pos:start="76:75" pos:end="76:75">)</operator> <call pos:start="76:77" pos:end="76:99"><name pos:start="76:77" pos:end="76:96"><name pos:start="76:77" pos:end="76:83">content</name><operator pos:start="76:84" pos:end="76:84">.</operator><name pos:start="76:85" pos:end="76:96">getComponent</name></name><argument_list pos:start="76:97" pos:end="76:99">(<argument pos:start="76:98" pos:end="76:98"><expr pos:start="76:98" pos:end="76:98"><name pos:start="76:98" pos:end="76:98">i</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
						<if_stmt pos:start="77:49" pos:end="84:49"><if pos:start="77:49" pos:end="84:49">if <condition pos:start="77:52" pos:end="77:89">(<expr pos:start="77:53" pos:end="77:88"><call pos:start="77:53" pos:end="77:65"><name pos:start="77:53" pos:end="77:63"><name pos:start="77:53" pos:end="77:55">box</name><operator pos:start="77:56" pos:end="77:56">.</operator><name pos:start="77:57" pos:end="77:63">getName</name></name><argument_list pos:start="77:64" pos:end="77:65">()</argument_list></call><operator pos:start="77:66" pos:end="77:66">.</operator><call pos:start="77:67" pos:end="77:88"><name pos:start="77:67" pos:end="77:72">equals</name><argument_list pos:start="77:73" pos:end="77:88">(<argument pos:start="77:74" pos:end="77:87"><expr pos:start="77:74" pos:end="77:87"><call pos:start="77:74" pos:end="77:87"><name pos:start="77:74" pos:end="77:84"><name pos:start="77:74" pos:end="77:80">checked</name><operator pos:start="77:81" pos:end="77:81">.</operator><name pos:start="77:82" pos:end="77:84">get</name></name><argument_list pos:start="77:85" pos:end="77:87">(<argument pos:start="77:86" pos:end="77:86"><expr pos:start="77:86" pos:end="77:86"><literal type="number" pos:start="77:86" pos:end="77:86">0</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="77:91" pos:end="84:49">{<block_content pos:start="78:57" pos:end="83:57">
							<if_stmt pos:start="78:57" pos:end="83:57"><if pos:start="78:57" pos:end="81:57">if <condition pos:start="78:60" pos:end="78:96">(<expr pos:start="78:61" pos:end="78:95"><call pos:start="78:61" pos:end="78:75"><name pos:start="78:61" pos:end="78:73"><name pos:start="78:61" pos:end="78:63">box</name><operator pos:start="78:64" pos:end="78:64">.</operator><name pos:start="78:65" pos:end="78:73">getStatus</name></name><argument_list pos:start="78:74" pos:end="78:75">()</argument_list></call><operator pos:start="78:76" pos:end="78:76">.</operator><call pos:start="78:77" pos:end="78:95"><name pos:start="78:77" pos:end="78:82">equals</name><argument_list pos:start="78:83" pos:end="78:95">(<argument pos:start="78:84" pos:end="78:94"><expr pos:start="78:84" pos:end="78:94"><literal type="string" pos:start="78:84" pos:end="78:94">"ON_GROUND"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="78:98" pos:end="81:57">{<block_content pos:start="79:65" pos:end="80:81">
								<expr_stmt pos:start="79:65" pos:end="79:120"><expr pos:start="79:65" pos:end="79:119"><call pos:start="79:65" pos:end="79:119"><name pos:start="79:65" pos:end="79:81"><name pos:start="79:65" pos:end="79:76">Notification</name><operator pos:start="79:77" pos:end="79:77">.</operator><name pos:start="79:78" pos:end="79:81">show</name></name><argument_list pos:start="79:82" pos:end="79:119">(<argument pos:start="79:83" pos:end="79:118"><expr pos:start="79:83" pos:end="79:118"><call pos:start="79:83" pos:end="79:96"><name pos:start="79:83" pos:end="79:93"><name pos:start="79:83" pos:end="79:89">checked</name><operator pos:start="79:90" pos:end="79:90">.</operator><name pos:start="79:91" pos:end="79:93">get</name></name><argument_list pos:start="79:94" pos:end="79:96">(<argument pos:start="79:95" pos:end="79:95"><expr pos:start="79:95" pos:end="79:95"><literal type="number" pos:start="79:95" pos:end="79:95">0</literal></expr></argument>)</argument_list></call> <operator pos:start="79:98" pos:end="79:98">+</operator> <literal type="string" pos:start="79:100" pos:end="79:118">" is already home."</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
								<expr_stmt pos:start="80:65" pos:end="80:81"><expr pos:start="80:65" pos:end="80:80"><name pos:start="80:65" pos:end="80:72">sendHome</name> <operator pos:start="80:74" pos:end="80:74">=</operator> <literal type="boolean" pos:start="80:76" pos:end="80:80">false</literal></expr>;</expr_stmt>
							</block_content>}</block></if> <else pos:start="81:59" pos:end="83:57">else <block pos:start="81:64" pos:end="83:57">{<block_content pos:start="82:65" pos:end="82:142">
								<expr_stmt pos:start="82:65" pos:end="82:142"><expr pos:start="82:65" pos:end="82:141"><name pos:start="82:65" pos:end="82:71">message</name> <operator pos:start="82:73" pos:end="82:73">=</operator> <literal type="string" pos:start="82:75" pos:end="82:106">"Are you sure you want to send "</literal> <operator pos:start="82:108" pos:end="82:108">+</operator> <call pos:start="82:110" pos:end="82:123"><name pos:start="82:110" pos:end="82:120"><name pos:start="82:110" pos:end="82:116">checked</name><operator pos:start="82:117" pos:end="82:117">.</operator><name pos:start="82:118" pos:end="82:120">get</name></name><argument_list pos:start="82:121" pos:end="82:123">(<argument pos:start="82:122" pos:end="82:122"><expr pos:start="82:122" pos:end="82:122"><literal type="number" pos:start="82:122" pos:end="82:122">0</literal></expr></argument>)</argument_list></call> <operator pos:start="82:125" pos:end="82:125">+</operator> <literal type="string" pos:start="82:127" pos:end="82:141">" to its home?"</literal></expr>;</expr_stmt>
							</block_content>}</block></else></if_stmt>
						</block_content>}</block></if></if_stmt>
					</block_content>}</block></for>

				</block_content>}</block></if> <else pos:start="87:35" pos:end="94:33">else <block pos:start="87:40" pos:end="94:33">{<block_content pos:start="88:41" pos:end="93:77">
					<decl_stmt pos:start="88:41" pos:end="88:59"><decl pos:start="88:41" pos:end="88:58"><type pos:start="88:41" pos:end="88:46"><name pos:start="88:41" pos:end="88:46">String</name></type> <name pos:start="88:48" pos:end="88:53">drones</name> <init pos:start="88:55" pos:end="88:58">= <expr pos:start="88:57" pos:end="88:58"><literal type="string" pos:start="88:57" pos:end="88:58">""</literal></expr></init></decl>;</decl_stmt>
					<for pos:start="89:41" pos:end="91:41">for <control pos:start="89:45" pos:end="89:84">(<init pos:start="89:46" pos:end="89:55"><decl pos:start="89:46" pos:end="89:54"><type pos:start="89:46" pos:end="89:48"><name pos:start="89:46" pos:end="89:48">int</name></type> <name pos:start="89:50" pos:end="89:50">i</name> <init pos:start="89:52" pos:end="89:54">= <expr pos:start="89:54" pos:end="89:54"><literal type="number" pos:start="89:54" pos:end="89:54">0</literal></expr></init></decl>;</init> <condition pos:start="89:57" pos:end="89:79"><expr pos:start="89:57" pos:end="89:78"><name pos:start="89:57" pos:end="89:57">i</name> <operator pos:start="89:59" pos:end="89:59">&lt;</operator> <call pos:start="89:61" pos:end="89:74"><name pos:start="89:61" pos:end="89:72"><name pos:start="89:61" pos:end="89:67">checked</name><operator pos:start="89:68" pos:end="89:68">.</operator><name pos:start="89:69" pos:end="89:72">size</name></name><argument_list pos:start="89:73" pos:end="89:74">()</argument_list></call> <operator pos:start="89:76" pos:end="89:76">-</operator> <literal type="number" pos:start="89:78" pos:end="89:78">1</literal></expr>;</condition> <incr pos:start="89:81" pos:end="89:83"><expr pos:start="89:81" pos:end="89:83"><name pos:start="89:81" pos:end="89:81">i</name><operator pos:start="89:82" pos:end="89:83">++</operator></expr></incr>)</control> <block pos:start="89:86" pos:end="91:41">{<block_content pos:start="90:49" pos:end="90:80">
						<expr_stmt pos:start="90:49" pos:end="90:80"><expr pos:start="90:49" pos:end="90:79"><name pos:start="90:49" pos:end="90:54">drones</name> <operator pos:start="90:56" pos:end="90:57">+=</operator> <call pos:start="90:59" pos:end="90:72"><name pos:start="90:59" pos:end="90:69"><name pos:start="90:59" pos:end="90:65">checked</name><operator pos:start="90:66" pos:end="90:66">.</operator><name pos:start="90:67" pos:end="90:69">get</name></name><argument_list pos:start="90:70" pos:end="90:72">(<argument pos:start="90:71" pos:end="90:71"><expr pos:start="90:71" pos:end="90:71"><name pos:start="90:71" pos:end="90:71">i</name></expr></argument>)</argument_list></call> <operator pos:start="90:74" pos:end="90:74">+</operator> <literal type="string" pos:start="90:76" pos:end="90:79">", "</literal></expr>;</expr_stmt>
					</block_content>}</block></for>
					<expr_stmt pos:start="92:41" pos:end="93:77"><expr pos:start="92:41" pos:end="93:76"><name pos:start="92:41" pos:end="92:47">message</name> <operator pos:start="92:49" pos:end="92:49">=</operator> <literal type="string" pos:start="92:51" pos:end="92:82">"Are you sure you want to send "</literal> <operator pos:start="92:84" pos:end="92:84">+</operator> <name pos:start="92:86" pos:end="92:91">drones</name> <operator pos:start="92:93" pos:end="92:93">+</operator> <literal type="string" pos:start="92:95" pos:end="92:100">"and "</literal> <operator pos:start="92:102" pos:end="92:102">+</operator> <call pos:start="92:104" pos:end="92:134"><name pos:start="92:104" pos:end="92:114"><name pos:start="92:104" pos:end="92:110">checked</name><operator pos:start="92:111" pos:end="92:111">.</operator><name pos:start="92:112" pos:end="92:114">get</name></name><argument_list pos:start="92:115" pos:end="92:134">(<argument pos:start="92:116" pos:end="92:133"><expr pos:start="92:116" pos:end="92:133"><call pos:start="92:116" pos:end="92:129"><name pos:start="92:116" pos:end="92:127"><name pos:start="92:116" pos:end="92:122">checked</name><operator pos:start="92:123" pos:end="92:123">.</operator><name pos:start="92:124" pos:end="92:127">size</name></name><argument_list pos:start="92:128" pos:end="92:129">()</argument_list></call> <operator pos:start="92:131" pos:end="92:131">-</operator> <literal type="number" pos:start="92:133" pos:end="92:133">1</literal></expr></argument>)</argument_list></call>
							<operator pos:start="93:57" pos:end="93:57">+</operator> <literal type="string" pos:start="93:59" pos:end="93:76">" to their homes?"</literal></expr>;</expr_stmt>
				</block_content>}</block></else></if_stmt>
			</block_content>}</block></if> <else pos:start="95:27" pos:end="97:25">else <block pos:start="95:32" pos:end="97:25">{<block_content pos:start="96:33" pos:end="96:90">
				<expr_stmt pos:start="96:33" pos:end="96:90"><expr pos:start="96:33" pos:end="96:89"><name pos:start="96:33" pos:end="96:39">message</name> <operator pos:start="96:41" pos:end="96:41">=</operator> <literal type="string" pos:start="96:43" pos:end="96:89">"Are you sure to send all UAVs to their homes?"</literal></expr>;</expr_stmt>
			</block_content>}</block></else></if_stmt>
			<decl_stmt pos:start="98:25" pos:end="98:63"><decl pos:start="98:25" pos:end="98:62"><type pos:start="98:25" pos:end="98:30"><name pos:start="98:25" pos:end="98:30">Window</name></type> <name pos:start="98:32" pos:end="98:38">confirm</name> <init pos:start="98:40" pos:end="98:62">= <expr pos:start="98:42" pos:end="98:62"><operator pos:start="98:42" pos:end="98:44">new</operator> <call pos:start="98:46" pos:end="98:62"><name pos:start="98:46" pos:end="98:51">Window</name><argument_list pos:start="98:52" pos:end="98:62">(<argument pos:start="98:53" pos:end="98:61"><expr pos:start="98:53" pos:end="98:61"><literal type="string" pos:start="98:53" pos:end="98:61">"Confirm"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<expr_stmt pos:start="99:25" pos:end="99:63"><expr pos:start="99:25" pos:end="99:62"><call pos:start="99:25" pos:end="99:62"><name pos:start="99:25" pos:end="99:44"><name pos:start="99:25" pos:end="99:31">confirm</name><operator pos:start="99:32" pos:end="99:32">.</operator><name pos:start="99:33" pos:end="99:44">addStyleName</name></name><argument_list pos:start="99:45" pos:end="99:62">(<argument pos:start="99:46" pos:end="99:61"><expr pos:start="99:46" pos:end="99:61"><literal type="string" pos:start="99:46" pos:end="99:61">"confirm_window"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<decl_stmt pos:start="100:25" pos:end="100:73"><decl pos:start="100:25" pos:end="100:72"><type pos:start="100:25" pos:end="100:38"><name pos:start="100:25" pos:end="100:38">VerticalLayout</name></type> <name pos:start="100:40" pos:end="100:49">subContent</name> <init pos:start="100:51" pos:end="100:72">= <expr pos:start="100:53" pos:end="100:72"><operator pos:start="100:53" pos:end="100:55">new</operator> <call pos:start="100:57" pos:end="100:72"><name pos:start="100:57" pos:end="100:70">VerticalLayout</name><argument_list pos:start="100:71" pos:end="100:72">()</argument_list></call></expr></init></decl>;</decl_stmt>
			<decl_stmt pos:start="101:25" pos:end="101:77"><decl pos:start="101:25" pos:end="101:76"><type pos:start="101:25" pos:end="101:40"><name pos:start="101:25" pos:end="101:40">HorizontalLayout</name></type> <name pos:start="101:42" pos:end="101:51">subButtons</name> <init pos:start="101:53" pos:end="101:76">= <expr pos:start="101:55" pos:end="101:76"><operator pos:start="101:55" pos:end="101:57">new</operator> <call pos:start="101:59" pos:end="101:76"><name pos:start="101:59" pos:end="101:74">HorizontalLayout</name><argument_list pos:start="101:75" pos:end="101:76">()</argument_list></call></expr></init></decl>;</decl_stmt>
			<expr_stmt pos:start="102:25" pos:end="102:71"><expr pos:start="102:25" pos:end="102:70"><call pos:start="102:25" pos:end="102:70"><name pos:start="102:25" pos:end="102:47"><name pos:start="102:25" pos:end="102:34">subButtons</name><operator pos:start="102:35" pos:end="102:35">.</operator><name pos:start="102:36" pos:end="102:47">addStyleName</name></name><argument_list pos:start="102:48" pos:end="102:70">(<argument pos:start="102:49" pos:end="102:69"><expr pos:start="102:49" pos:end="102:69"><literal type="string" pos:start="102:49" pos:end="102:69">"confirm_button_area"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<decl_stmt pos:start="103:25" pos:end="103:57"><decl pos:start="103:25" pos:end="103:56"><type pos:start="103:25" pos:end="103:29"><name pos:start="103:25" pos:end="103:29">Label</name></type> <name pos:start="103:31" pos:end="103:35">label</name> <init pos:start="103:37" pos:end="103:56">= <expr pos:start="103:39" pos:end="103:56"><operator pos:start="103:39" pos:end="103:41">new</operator> <call pos:start="103:43" pos:end="103:56"><name pos:start="103:43" pos:end="103:47">Label</name><argument_list pos:start="103:48" pos:end="103:56">(<argument pos:start="103:49" pos:end="103:55"><expr pos:start="103:49" pos:end="103:55"><name pos:start="103:49" pos:end="103:55">message</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<decl_stmt pos:start="104:25" pos:end="104:55"><decl pos:start="104:25" pos:end="104:54"><type pos:start="104:25" pos:end="104:30"><name pos:start="104:25" pos:end="104:30">Button</name></type> <name pos:start="104:32" pos:end="104:34">yes</name> <init pos:start="104:36" pos:end="104:54">= <expr pos:start="104:38" pos:end="104:54"><operator pos:start="104:38" pos:end="104:40">new</operator> <call pos:start="104:42" pos:end="104:54"><name pos:start="104:42" pos:end="104:47">Button</name><argument_list pos:start="104:48" pos:end="104:54">(<argument pos:start="104:49" pos:end="104:53"><expr pos:start="104:49" pos:end="104:53"><literal type="string" pos:start="104:49" pos:end="104:53">"Yes"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<expr_stmt pos:start="105:25" pos:end="105:55"><expr pos:start="105:25" pos:end="105:54"><call pos:start="105:25" pos:end="105:54"><name pos:start="105:25" pos:end="105:40"><name pos:start="105:25" pos:end="105:27">yes</name><operator pos:start="105:28" pos:end="105:28">.</operator><name pos:start="105:29" pos:end="105:40">addStyleName</name></name><argument_list pos:start="105:41" pos:end="105:54">(<argument pos:start="105:42" pos:end="105:53"><expr pos:start="105:42" pos:end="105:53"><literal type="string" pos:start="105:42" pos:end="105:53">"btn-danger"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<decl_stmt pos:start="106:25" pos:end="106:53"><decl pos:start="106:25" pos:end="106:52"><type pos:start="106:25" pos:end="106:30"><name pos:start="106:25" pos:end="106:30">Button</name></type> <name pos:start="106:32" pos:end="106:33">no</name> <init pos:start="106:35" pos:end="106:52">= <expr pos:start="106:37" pos:end="106:52"><operator pos:start="106:37" pos:end="106:39">new</operator> <call pos:start="106:41" pos:end="106:52"><name pos:start="106:41" pos:end="106:46">Button</name><argument_list pos:start="106:47" pos:end="106:52">(<argument pos:start="106:48" pos:end="106:51"><expr pos:start="106:48" pos:end="106:51"><literal type="string" pos:start="106:48" pos:end="106:51">"No"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

			<expr_stmt pos:start="108:25" pos:end="136:27"><expr pos:start="108:25" pos:end="136:26"><call pos:start="108:25" pos:end="136:26"><name pos:start="108:25" pos:end="108:44"><name pos:start="108:25" pos:end="108:27">yes</name><operator pos:start="108:28" pos:end="108:28">.</operator><name pos:start="108:29" pos:end="108:44">addClickListener</name></name><argument_list pos:start="108:45" pos:end="136:26">(<argument pos:start="108:46" pos:end="136:25"><expr pos:start="108:46" pos:end="136:25"><lambda pos:start="108:46" pos:end="136:25"><parameter_list type="pseudo" pos:start="108:46" pos:end="108:53"><parameter pos:start="108:46" pos:end="108:53"><decl pos:start="108:46" pos:end="108:53"><name pos:start="108:46" pos:end="108:53">subEvent</name></decl></parameter></parameter_list> -&gt; <block pos:start="108:58" pos:end="136:25">{<block_content pos:start="109:33" pos:end="134:33">
				<expr_stmt pos:start="109:33" pos:end="109:70"><expr pos:start="109:33" pos:end="109:69"><call pos:start="109:33" pos:end="109:47"><name pos:start="109:33" pos:end="109:45"><name pos:start="109:33" pos:end="109:34">UI</name><operator pos:start="109:35" pos:end="109:35">.</operator><name pos:start="109:36" pos:end="109:45">getCurrent</name></name><argument_list pos:start="109:46" pos:end="109:47">()</argument_list></call><operator pos:start="109:48" pos:end="109:48">.</operator><call pos:start="109:49" pos:end="109:69"><name pos:start="109:49" pos:end="109:60">removeWindow</name><argument_list pos:start="109:61" pos:end="109:69">(<argument pos:start="109:62" pos:end="109:68"><expr pos:start="109:62" pos:end="109:68"><name pos:start="109:62" pos:end="109:68">confirm</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<decl_stmt pos:start="110:33" pos:end="110:68"><decl pos:start="110:33" pos:end="110:67"><type pos:start="110:33" pos:end="110:59"><name pos:start="110:33" pos:end="110:59">IFlightManagerRemoteService</name></type> <name pos:start="110:61" pos:end="110:67">service</name></decl>;</decl_stmt>
				<try pos:start="111:33" pos:end="134:33">try <block pos:start="111:37" pos:end="132:33">{<block_content pos:start="112:41" pos:end="131:41">
					<expr_stmt pos:start="112:41" pos:end="113:103"><expr pos:start="112:41" pos:end="113:102"><name pos:start="112:41" pos:end="112:47">service</name> <operator pos:start="112:49" pos:end="112:49">=</operator> <operator pos:start="112:51" pos:end="112:51">(</operator><name pos:start="112:52" pos:end="112:78">IFlightManagerRemoteService</name><operator pos:start="112:79" pos:end="112:79">)</operator> <call pos:start="112:81" pos:end="112:107"><name pos:start="112:81" pos:end="112:105"><name pos:start="112:81" pos:end="112:88">provider</name><operator pos:start="112:89" pos:end="112:89">.</operator><name pos:start="112:90" pos:end="112:105">getRemoteManager</name></name><argument_list pos:start="112:106" pos:end="112:107">()</argument_list></call>
							<operator pos:start="113:57" pos:end="113:57">.</operator><call pos:start="113:58" pos:end="113:102"><name pos:start="113:58" pos:end="113:67">getService</name><argument_list pos:start="113:68" pos:end="113:102">(<argument pos:start="113:69" pos:end="113:101"><expr pos:start="113:69" pos:end="113:101"><name pos:start="113:69" pos:end="113:101"><name pos:start="113:69" pos:end="113:95">IFlightManagerRemoteService</name><operator pos:start="113:96" pos:end="113:96">.</operator><name pos:start="113:97" pos:end="113:101">class</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<if_stmt pos:start="114:41" pos:end="131:41"><if pos:start="114:41" pos:end="125:41">if <condition pos:start="114:44" pos:end="114:63">(<expr pos:start="114:45" pos:end="114:62"><call pos:start="114:45" pos:end="114:58"><name pos:start="114:45" pos:end="114:56"><name pos:start="114:45" pos:end="114:51">checked</name><operator pos:start="114:52" pos:end="114:52">.</operator><name pos:start="114:53" pos:end="114:56">size</name></name><argument_list pos:start="114:57" pos:end="114:58">()</argument_list></call> <operator pos:start="114:60" pos:end="114:60">&gt;</operator> <literal type="number" pos:start="114:62" pos:end="114:62">0</literal></expr>)</condition> <block pos:start="114:65" pos:end="125:41">{<block_content pos:start="115:49" pos:end="124:49">
						<for pos:start="115:49" pos:end="124:49">for <control pos:start="115:53" pos:end="115:88">(<init pos:start="115:54" pos:end="115:63"><decl pos:start="115:54" pos:end="115:62"><type pos:start="115:54" pos:end="115:56"><name pos:start="115:54" pos:end="115:56">int</name></type> <name pos:start="115:58" pos:end="115:58">i</name> <init pos:start="115:60" pos:end="115:62">= <expr pos:start="115:62" pos:end="115:62"><literal type="number" pos:start="115:62" pos:end="115:62">0</literal></expr></init></decl>;</init> <condition pos:start="115:65" pos:end="115:83"><expr pos:start="115:65" pos:end="115:82"><name pos:start="115:65" pos:end="115:65">i</name> <operator pos:start="115:67" pos:end="115:67">&lt;</operator> <call pos:start="115:69" pos:end="115:82"><name pos:start="115:69" pos:end="115:80"><name pos:start="115:69" pos:end="115:75">checked</name><operator pos:start="115:76" pos:end="115:76">.</operator><name pos:start="115:77" pos:end="115:80">size</name></name><argument_list pos:start="115:81" pos:end="115:82">()</argument_list></call></expr>;</condition> <incr pos:start="115:85" pos:end="115:87"><expr pos:start="115:85" pos:end="115:87"><name pos:start="115:85" pos:end="115:85">i</name><operator pos:start="115:86" pos:end="115:87">++</operator></expr></incr>)</control> <block pos:start="115:90" pos:end="124:49">{<block_content pos:start="116:57" pos:end="123:57">
							<for pos:start="116:57" pos:end="123:57">for <control pos:start="116:61" pos:end="116:93">(<init pos:start="116:62" pos:end="116:71"><decl pos:start="116:62" pos:end="116:70"><type pos:start="116:62" pos:end="116:64"><name pos:start="116:62" pos:end="116:64">int</name></type> <name pos:start="116:66" pos:end="116:66">j</name> <init pos:start="116:68" pos:end="116:70">= <expr pos:start="116:70" pos:end="116:70"><literal type="number" pos:start="116:70" pos:end="116:70">1</literal></expr></init></decl>;</init> <condition pos:start="116:73" pos:end="116:88"><expr pos:start="116:73" pos:end="116:87"><name pos:start="116:73" pos:end="116:73">j</name> <operator pos:start="116:75" pos:end="116:75">&lt;</operator> <name pos:start="116:77" pos:end="116:83">numUAVs</name> <operator pos:start="116:85" pos:end="116:85">+</operator> <literal type="number" pos:start="116:87" pos:end="116:87">1</literal></expr>;</condition> <incr pos:start="116:90" pos:end="116:92"><expr pos:start="116:90" pos:end="116:92"><name pos:start="116:90" pos:end="116:90">j</name><operator pos:start="116:91" pos:end="116:92">++</operator></expr></incr>)</control> <block pos:start="116:95" pos:end="123:57">{<block_content pos:start="117:65" pos:end="122:65">
								<decl_stmt pos:start="117:65" pos:end="117:116"><decl pos:start="117:65" pos:end="117:115"><type pos:start="117:65" pos:end="117:73"><name pos:start="117:65" pos:end="117:73">AFInfoBox</name></type> <name pos:start="117:75" pos:end="117:77">box</name> <init pos:start="117:79" pos:end="117:115">= <expr pos:start="117:81" pos:end="117:115"><operator pos:start="117:81" pos:end="117:81">(</operator><name pos:start="117:82" pos:end="117:90">AFInfoBox</name><operator pos:start="117:91" pos:end="117:91">)</operator> <call pos:start="117:93" pos:end="117:115"><name pos:start="117:93" pos:end="117:112"><name pos:start="117:93" pos:end="117:99">content</name><operator pos:start="117:100" pos:end="117:100">.</operator><name pos:start="117:101" pos:end="117:112">getComponent</name></name><argument_list pos:start="117:113" pos:end="117:115">(<argument pos:start="117:114" pos:end="117:114"><expr pos:start="117:114" pos:end="117:114"><name pos:start="117:114" pos:end="117:114">j</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
								<if_stmt pos:start="118:65" pos:end="122:65"><if pos:start="118:65" pos:end="122:65">if <condition pos:start="118:68" pos:end="118:105">(<expr pos:start="118:69" pos:end="118:104"><call pos:start="118:69" pos:end="118:81"><name pos:start="118:69" pos:end="118:79"><name pos:start="118:69" pos:end="118:71">box</name><operator pos:start="118:72" pos:end="118:72">.</operator><name pos:start="118:73" pos:end="118:79">getName</name></name><argument_list pos:start="118:80" pos:end="118:81">()</argument_list></call><operator pos:start="118:82" pos:end="118:82">.</operator><call pos:start="118:83" pos:end="118:104"><name pos:start="118:83" pos:end="118:88">equals</name><argument_list pos:start="118:89" pos:end="118:104">(<argument pos:start="118:90" pos:end="118:103"><expr pos:start="118:90" pos:end="118:103"><call pos:start="118:90" pos:end="118:103"><name pos:start="118:90" pos:end="118:100"><name pos:start="118:90" pos:end="118:96">checked</name><operator pos:start="118:97" pos:end="118:97">.</operator><name pos:start="118:98" pos:end="118:100">get</name></name><argument_list pos:start="118:101" pos:end="118:103">(<argument pos:start="118:102" pos:end="118:102"><expr pos:start="118:102" pos:end="118:102"><name pos:start="118:102" pos:end="118:102">i</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="118:107" pos:end="122:65">{<block_content pos:start="119:73" pos:end="121:73">
									<if_stmt pos:start="119:73" pos:end="121:73"><if pos:start="119:73" pos:end="121:73">if <condition pos:start="119:76" pos:end="119:113">(<expr pos:start="119:77" pos:end="119:112"><operator pos:start="119:77" pos:end="119:77">!</operator><call pos:start="119:78" pos:end="119:92"><name pos:start="119:78" pos:end="119:90"><name pos:start="119:78" pos:end="119:80">box</name><operator pos:start="119:81" pos:end="119:81">.</operator><name pos:start="119:82" pos:end="119:90">getStatus</name></name><argument_list pos:start="119:91" pos:end="119:92">()</argument_list></call><operator pos:start="119:93" pos:end="119:93">.</operator><call pos:start="119:94" pos:end="119:112"><name pos:start="119:94" pos:end="119:99">equals</name><argument_list pos:start="119:100" pos:end="119:112">(<argument pos:start="119:101" pos:end="119:111"><expr pos:start="119:101" pos:end="119:111"><literal type="string" pos:start="119:101" pos:end="119:111">"ON_GROUND"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="119:115" pos:end="121:73">{<block_content pos:start="120:81" pos:end="120:117">
										<expr_stmt pos:start="120:81" pos:end="120:117"><expr pos:start="120:81" pos:end="120:116"><call pos:start="120:81" pos:end="120:116"><name pos:start="120:81" pos:end="120:100"><name pos:start="120:81" pos:end="120:87">service</name><operator pos:start="120:88" pos:end="120:88">.</operator><name pos:start="120:89" pos:end="120:100">returnToHome</name></name><argument_list pos:start="120:101" pos:end="120:116">(<argument pos:start="120:102" pos:end="120:115"><expr pos:start="120:102" pos:end="120:115"><call pos:start="120:102" pos:end="120:115"><name pos:start="120:102" pos:end="120:112"><name pos:start="120:102" pos:end="120:108">checked</name><operator pos:start="120:109" pos:end="120:109">.</operator><name pos:start="120:110" pos:end="120:112">get</name></name><argument_list pos:start="120:113" pos:end="120:115">(<argument pos:start="120:114" pos:end="120:114"><expr pos:start="120:114" pos:end="120:114"><name pos:start="120:114" pos:end="120:114">i</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
									</block_content>}</block></if></if_stmt>
								</block_content>}</block></if></if_stmt>
							</block_content>}</block></for>
						</block_content>}</block></for>
					</block_content>}</block></if> <else pos:start="125:43" pos:end="131:41">else <block pos:start="125:48" pos:end="131:41">{<block_content pos:start="126:49" pos:end="130:49">
						<for pos:start="126:49" pos:end="130:49">for <control pos:start="126:53" pos:end="126:85">(<init pos:start="126:54" pos:end="126:63"><decl pos:start="126:54" pos:end="126:62"><type pos:start="126:54" pos:end="126:56"><name pos:start="126:54" pos:end="126:56">int</name></type> <name pos:start="126:58" pos:end="126:58">i</name> <init pos:start="126:60" pos:end="126:62">= <expr pos:start="126:62" pos:end="126:62"><literal type="number" pos:start="126:62" pos:end="126:62">1</literal></expr></init></decl>;</init> <condition pos:start="126:65" pos:end="126:80"><expr pos:start="126:65" pos:end="126:79"><name pos:start="126:65" pos:end="126:65">i</name> <operator pos:start="126:67" pos:end="126:67">&lt;</operator> <name pos:start="126:69" pos:end="126:75">numUAVs</name> <operator pos:start="126:77" pos:end="126:77">+</operator> <literal type="number" pos:start="126:79" pos:end="126:79">1</literal></expr>;</condition> <incr pos:start="126:82" pos:end="126:84"><expr pos:start="126:82" pos:end="126:84"><name pos:start="126:82" pos:end="126:82">i</name><operator pos:start="126:83" pos:end="126:84">++</operator></expr></incr>)</control> <block pos:start="126:87" pos:end="130:49">{<block_content pos:start="127:57" pos:end="129:100">
							<decl_stmt pos:start="127:57" pos:end="127:108"><decl pos:start="127:57" pos:end="127:107"><type pos:start="127:57" pos:end="127:65"><name pos:start="127:57" pos:end="127:65">AFInfoBox</name></type> <name pos:start="127:67" pos:end="127:69">box</name> <init pos:start="127:71" pos:end="127:107">= <expr pos:start="127:73" pos:end="127:107"><operator pos:start="127:73" pos:end="127:73">(</operator><name pos:start="127:74" pos:end="127:82">AFInfoBox</name><operator pos:start="127:83" pos:end="127:83">)</operator> <call pos:start="127:85" pos:end="127:107"><name pos:start="127:85" pos:end="127:104"><name pos:start="127:85" pos:end="127:91">content</name><operator pos:start="127:92" pos:end="127:92">.</operator><name pos:start="127:93" pos:end="127:104">getComponent</name></name><argument_list pos:start="127:105" pos:end="127:107">(<argument pos:start="127:106" pos:end="127:106"><expr pos:start="127:106" pos:end="127:106"><name pos:start="127:106" pos:end="127:106">i</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
							<if_stmt pos:start="128:57" pos:end="129:100"><if pos:start="128:57" pos:end="129:100">if <condition pos:start="128:60" pos:end="128:97">(<expr pos:start="128:61" pos:end="128:96"><operator pos:start="128:61" pos:end="128:61">!</operator><call pos:start="128:62" pos:end="128:76"><name pos:start="128:62" pos:end="128:74"><name pos:start="128:62" pos:end="128:64">box</name><operator pos:start="128:65" pos:end="128:65">.</operator><name pos:start="128:66" pos:end="128:74">getStatus</name></name><argument_list pos:start="128:75" pos:end="128:76">()</argument_list></call><operator pos:start="128:77" pos:end="128:77">.</operator><call pos:start="128:78" pos:end="128:96"><name pos:start="128:78" pos:end="128:83">equals</name><argument_list pos:start="128:84" pos:end="128:96">(<argument pos:start="128:85" pos:end="128:95"><expr pos:start="128:85" pos:end="128:95"><literal type="string" pos:start="128:85" pos:end="128:95">"ON_GROUND"</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="129:65" pos:end="129:100"><block_content pos:start="129:65" pos:end="129:100">
								<expr_stmt pos:start="129:65" pos:end="129:100"><expr pos:start="129:65" pos:end="129:99"><call pos:start="129:65" pos:end="129:99"><name pos:start="129:65" pos:end="129:84"><name pos:start="129:65" pos:end="129:71">service</name><operator pos:start="129:72" pos:end="129:72">.</operator><name pos:start="129:73" pos:end="129:84">returnToHome</name></name><argument_list pos:start="129:85" pos:end="129:99">(<argument pos:start="129:86" pos:end="129:98"><expr pos:start="129:86" pos:end="129:98"><call pos:start="129:86" pos:end="129:98"><name pos:start="129:86" pos:end="129:96"><name pos:start="129:86" pos:end="129:88">box</name><operator pos:start="129:89" pos:end="129:89">.</operator><name pos:start="129:90" pos:end="129:96">getName</name></name><argument_list pos:start="129:97" pos:end="129:98">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
						</block_content>}</block></for>
					</block_content>}</block></else></if_stmt>
				</block_content>}</block> <catch pos:start="132:35" pos:end="134:33">catch <parameter_list pos:start="132:41" pos:end="132:55">(<parameter pos:start="132:42" pos:end="132:54"><decl pos:start="132:42" pos:end="132:54"><type pos:start="132:42" pos:end="132:54"><name pos:start="132:42" pos:end="132:50">Exception</name></type> <name pos:start="132:52" pos:end="132:54">exc</name></decl></parameter>)</parameter_list> <block pos:start="132:57" pos:end="134:33">{<block_content pos:start="133:41" pos:end="133:62">
					<expr_stmt pos:start="133:41" pos:end="133:62"><expr pos:start="133:41" pos:end="133:61"><call pos:start="133:41" pos:end="133:61"><name pos:start="133:41" pos:end="133:59"><name pos:start="133:41" pos:end="133:43">exc</name><operator pos:start="133:44" pos:end="133:44">.</operator><name pos:start="133:45" pos:end="133:59">printStackTrace</name></name><argument_list pos:start="133:60" pos:end="133:61">()</argument_list></call></expr>;</expr_stmt>
				</block_content>}</block></catch></try>

			</block_content>}</block></lambda></expr></argument>)</argument_list></call></expr>;</expr_stmt>

			<expr_stmt pos:start="138:25" pos:end="140:27"><expr pos:start="138:25" pos:end="140:26"><call pos:start="138:25" pos:end="140:26"><name pos:start="138:25" pos:end="138:43"><name pos:start="138:25" pos:end="138:26">no</name><operator pos:start="138:27" pos:end="138:27">.</operator><name pos:start="138:28" pos:end="138:43">addClickListener</name></name><argument_list pos:start="138:44" pos:end="140:26">(<argument pos:start="138:45" pos:end="140:25"><expr pos:start="138:45" pos:end="140:25"><lambda pos:start="138:45" pos:end="140:25"><parameter_list type="pseudo" pos:start="138:45" pos:end="138:52"><parameter pos:start="138:45" pos:end="138:52"><decl pos:start="138:45" pos:end="138:52"><name pos:start="138:45" pos:end="138:52">subEvent</name></decl></parameter></parameter_list> -&gt; <block pos:start="138:57" pos:end="140:25">{<block_content pos:start="139:33" pos:end="139:70">
				<expr_stmt pos:start="139:33" pos:end="139:70"><expr pos:start="139:33" pos:end="139:69"><call pos:start="139:33" pos:end="139:47"><name pos:start="139:33" pos:end="139:45"><name pos:start="139:33" pos:end="139:34">UI</name><operator pos:start="139:35" pos:end="139:35">.</operator><name pos:start="139:36" pos:end="139:45">getCurrent</name></name><argument_list pos:start="139:46" pos:end="139:47">()</argument_list></call><operator pos:start="139:48" pos:end="139:48">.</operator><call pos:start="139:49" pos:end="139:69"><name pos:start="139:49" pos:end="139:60">removeWindow</name><argument_list pos:start="139:61" pos:end="139:69">(<argument pos:start="139:62" pos:end="139:68"><expr pos:start="139:62" pos:end="139:68"><name pos:start="139:62" pos:end="139:68">confirm</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			</block_content>}</block></lambda></expr></argument>)</argument_list></call></expr>;</expr_stmt>

			<expr_stmt pos:start="142:25" pos:end="142:58"><expr pos:start="142:25" pos:end="142:57"><call pos:start="142:25" pos:end="142:57"><name pos:start="142:25" pos:end="142:48"><name pos:start="142:25" pos:end="142:34">subButtons</name><operator pos:start="142:35" pos:end="142:35">.</operator><name pos:start="142:36" pos:end="142:48">addComponents</name></name><argument_list pos:start="142:49" pos:end="142:57">(<argument pos:start="142:50" pos:end="142:52"><expr pos:start="142:50" pos:end="142:52"><name pos:start="142:50" pos:end="142:52">yes</name></expr></argument>, <argument pos:start="142:55" pos:end="142:56"><expr pos:start="142:55" pos:end="142:56"><name pos:start="142:55" pos:end="142:56">no</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt pos:start="143:25" pos:end="143:68"><expr pos:start="143:25" pos:end="143:67"><call pos:start="143:25" pos:end="143:67"><name pos:start="143:25" pos:end="143:48"><name pos:start="143:25" pos:end="143:34">subContent</name><operator pos:start="143:35" pos:end="143:35">.</operator><name pos:start="143:36" pos:end="143:48">addComponents</name></name><argument_list pos:start="143:49" pos:end="143:67">(<argument pos:start="143:50" pos:end="143:54"><expr pos:start="143:50" pos:end="143:54"><name pos:start="143:50" pos:end="143:54">label</name></expr></argument>, <argument pos:start="143:57" pos:end="143:66"><expr pos:start="143:57" pos:end="143:66"><name pos:start="143:57" pos:end="143:66">subButtons</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt pos:start="144:25" pos:end="144:55"><expr pos:start="144:25" pos:end="144:54"><call pos:start="144:25" pos:end="144:54"><name pos:start="144:25" pos:end="144:42"><name pos:start="144:25" pos:end="144:31">confirm</name><operator pos:start="144:32" pos:end="144:32">.</operator><name pos:start="144:33" pos:end="144:42">setContent</name></name><argument_list pos:start="144:43" pos:end="144:54">(<argument pos:start="144:44" pos:end="144:53"><expr pos:start="144:44" pos:end="144:53"><name pos:start="144:44" pos:end="144:53">subContent</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt pos:start="145:25" pos:end="145:47"><expr pos:start="145:25" pos:end="145:46"><call pos:start="145:25" pos:end="145:46"><name pos:start="145:25" pos:end="145:40"><name pos:start="145:25" pos:end="145:31">confirm</name><operator pos:start="145:32" pos:end="145:32">.</operator><name pos:start="145:33" pos:end="145:40">setModal</name></name><argument_list pos:start="145:41" pos:end="145:46">(<argument pos:start="145:42" pos:end="145:45"><expr pos:start="145:42" pos:end="145:45"><literal type="boolean" pos:start="145:42" pos:end="145:45">true</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt pos:start="146:25" pos:end="146:52"><expr pos:start="146:25" pos:end="146:51"><call pos:start="146:25" pos:end="146:51"><name pos:start="146:25" pos:end="146:44"><name pos:start="146:25" pos:end="146:31">confirm</name><operator pos:start="146:32" pos:end="146:32">.</operator><name pos:start="146:33" pos:end="146:44">setResizable</name></name><argument_list pos:start="146:45" pos:end="146:51">(<argument pos:start="146:46" pos:end="146:50"><expr pos:start="146:46" pos:end="146:50"><literal type="boolean" pos:start="146:46" pos:end="146:50">false</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt pos:start="147:25" pos:end="147:41"><expr pos:start="147:25" pos:end="147:40"><call pos:start="147:25" pos:end="147:40"><name pos:start="147:25" pos:end="147:38"><name pos:start="147:25" pos:end="147:31">confirm</name><operator pos:start="147:32" pos:end="147:32">.</operator><name pos:start="147:33" pos:end="147:38">center</name></name><argument_list pos:start="147:39" pos:end="147:40">()</argument_list></call></expr>;</expr_stmt>
			<if_stmt pos:start="148:25" pos:end="149:67"><if pos:start="148:25" pos:end="149:67">if <condition pos:start="148:28" pos:end="148:37">(<expr pos:start="148:29" pos:end="148:36"><name pos:start="148:29" pos:end="148:36">sendHome</name></expr>)</condition><block type="pseudo" pos:start="149:33" pos:end="149:67"><block_content pos:start="149:33" pos:end="149:67">
				<expr_stmt pos:start="149:33" pos:end="149:67"><expr pos:start="149:33" pos:end="149:66"><call pos:start="149:33" pos:end="149:47"><name pos:start="149:33" pos:end="149:45"><name pos:start="149:33" pos:end="149:34">UI</name><operator pos:start="149:35" pos:end="149:35">.</operator><name pos:start="149:36" pos:end="149:45">getCurrent</name></name><argument_list pos:start="149:46" pos:end="149:47">()</argument_list></call><operator pos:start="149:48" pos:end="149:48">.</operator><call pos:start="149:49" pos:end="149:66"><name pos:start="149:49" pos:end="149:57">addWindow</name><argument_list pos:start="149:58" pos:end="149:66">(<argument pos:start="149:59" pos:end="149:65"><expr pos:start="149:59" pos:end="149:65"><name pos:start="149:59" pos:end="149:65">confirm</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

		</block_content>}</block></lambda></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		<expr_stmt pos:start="153:17" pos:end="175:19"><expr pos:start="153:17" pos:end="175:18"><call pos:start="153:17" pos:end="175:18"><name pos:start="153:17" pos:end="153:46"><name pos:start="153:17" pos:end="153:23">content</name><operator pos:start="153:24" pos:end="153:24">.</operator><name pos:start="153:25" pos:end="153:46">addLayoutClickListener</name></name><argument_list pos:start="153:47" pos:end="175:18">(<argument pos:start="153:48" pos:end="175:17"><expr pos:start="153:48" pos:end="175:17"><lambda pos:start="153:48" pos:end="175:17"><parameter_list type="pseudo" pos:start="153:48" pos:end="153:48"><parameter pos:start="153:48" pos:end="153:48"><decl pos:start="153:48" pos:end="153:48"><name pos:start="153:48" pos:end="153:48">e</name></decl></parameter></parameter_list> -&gt; <block pos:start="153:53" pos:end="175:17">{<block_content pos:start="154:25" pos:end="174:25"> <comment type="line" pos:start="153:55" pos:end="153:95">// determines if a box should be in focus</comment>
			<decl_stmt pos:start="154:25" pos:end="154:68"><decl pos:start="154:25" pos:end="154:67"><type pos:start="154:25" pos:end="154:33"><name pos:start="154:25" pos:end="154:33">Component</name></type> <name pos:start="154:35" pos:end="154:43">testChild</name> <init pos:start="154:45" pos:end="154:67">= <expr pos:start="154:47" pos:end="154:67"><call pos:start="154:47" pos:end="154:67"><name pos:start="154:47" pos:end="154:65"><name pos:start="154:47" pos:end="154:47">e</name><operator pos:start="154:48" pos:end="154:48">.</operator><name pos:start="154:49" pos:end="154:65">getChildComponent</name></name><argument_list pos:start="154:66" pos:end="154:67">()</argument_list></call></expr></init></decl>;</decl_stmt>
			<if_stmt pos:start="155:25" pos:end="174:25"><if pos:start="155:25" pos:end="174:25">if <condition pos:start="155:28" pos:end="155:68">(<expr pos:start="155:29" pos:end="155:67"><call pos:start="155:29" pos:end="155:48"><name pos:start="155:29" pos:end="155:46"><name pos:start="155:29" pos:end="155:37">testChild</name><operator pos:start="155:38" pos:end="155:38">.</operator><name pos:start="155:39" pos:end="155:46">getClass</name></name><argument_list pos:start="155:47" pos:end="155:48">()</argument_list></call> <operator pos:start="155:50" pos:end="155:51">==</operator> <name pos:start="155:53" pos:end="155:67"><name pos:start="155:53" pos:end="155:61">AFInfoBox</name><operator pos:start="155:62" pos:end="155:62">.</operator><name pos:start="155:63" pos:end="155:67">class</name></name></expr>)</condition> <block pos:start="155:70" pos:end="174:25">{<block_content pos:start="156:33" pos:end="173:33">
				<decl_stmt pos:start="156:33" pos:end="156:84"><decl pos:start="156:33" pos:end="156:83"><type pos:start="156:33" pos:end="156:41"><name pos:start="156:33" pos:end="156:41">AFInfoBox</name></type> <name pos:start="156:43" pos:end="156:47">child</name> <init pos:start="156:49" pos:end="156:83">= <expr pos:start="156:51" pos:end="156:83"><operator pos:start="156:51" pos:end="156:51">(</operator><name pos:start="156:52" pos:end="156:60">AFInfoBox</name><operator pos:start="156:61" pos:end="156:61">)</operator> <call pos:start="156:63" pos:end="156:83"><name pos:start="156:63" pos:end="156:81"><name pos:start="156:63" pos:end="156:63">e</name><operator pos:start="156:64" pos:end="156:64">.</operator><name pos:start="156:65" pos:end="156:81">getChildComponent</name></name><argument_list pos:start="156:82" pos:end="156:83">()</argument_list></call></expr></init></decl>;</decl_stmt>
				<if_stmt pos:start="157:33" pos:end="173:33"><if pos:start="157:33" pos:end="169:33">if <condition pos:start="157:36" pos:end="157:59">(<expr pos:start="157:37" pos:end="157:58"><operator pos:start="157:37" pos:end="157:37">!</operator><call pos:start="157:38" pos:end="157:58"><name pos:start="157:38" pos:end="157:56"><name pos:start="157:38" pos:end="157:42">child</name><operator pos:start="157:43" pos:end="157:43">.</operator><name pos:start="157:44" pos:end="157:56">getCheckClick</name></name><argument_list pos:start="157:57" pos:end="157:58">()</argument_list></call></expr>)</condition> <block pos:start="157:61" pos:end="169:33">{<block_content pos:start="158:41" pos:end="168:41"> <comment type="line" pos:start="157:63" pos:end="157:108">// if the box was clicked but not the checkbox</comment>
					<expr_stmt pos:start="158:41" pos:end="158:77"><expr pos:start="158:41" pos:end="158:76"><call pos:start="158:41" pos:end="158:76"><name pos:start="158:41" pos:end="158:58"><name pos:start="158:41" pos:end="158:45">child</name><operator pos:start="158:46" pos:end="158:46">.</operator><name pos:start="158:47" pos:end="158:58">addStyleName</name></name><argument_list pos:start="158:59" pos:end="158:76">(<argument pos:start="158:60" pos:end="158:75"><expr pos:start="158:60" pos:end="158:75"><literal type="string" pos:start="158:60" pos:end="158:75">"info_box_focus"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<expr_stmt pos:start="159:41" pos:end="159:65"><expr pos:start="159:41" pos:end="159:64"><call pos:start="159:41" pos:end="159:64"><name pos:start="159:41" pos:end="159:58"><name pos:start="159:41" pos:end="159:45">child</name><operator pos:start="159:46" pos:end="159:46">.</operator><name pos:start="159:47" pos:end="159:58">setIsChecked</name></name><argument_list pos:start="159:59" pos:end="159:64">(<argument pos:start="159:60" pos:end="159:63"><expr pos:start="159:60" pos:end="159:63"><literal type="boolean" pos:start="159:60" pos:end="159:63">true</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<expr_stmt pos:start="160:41" pos:end="160:66"><expr pos:start="160:41" pos:end="160:65"><name pos:start="160:41" pos:end="160:47">focused</name> <operator pos:start="160:49" pos:end="160:49">=</operator> <call pos:start="160:51" pos:end="160:65"><name pos:start="160:51" pos:end="160:63"><name pos:start="160:51" pos:end="160:55">child</name><operator pos:start="160:56" pos:end="160:56">.</operator><name pos:start="160:57" pos:end="160:63">getName</name></name><argument_list pos:start="160:64" pos:end="160:65">()</argument_list></call></expr>;</expr_stmt>
					<for pos:start="161:41" pos:end="168:41">for <control pos:start="161:45" pos:end="161:77">(<init pos:start="161:46" pos:end="161:55"><decl pos:start="161:46" pos:end="161:54"><type pos:start="161:46" pos:end="161:48"><name pos:start="161:46" pos:end="161:48">int</name></type> <name pos:start="161:50" pos:end="161:50">i</name> <init pos:start="161:52" pos:end="161:54">= <expr pos:start="161:54" pos:end="161:54"><literal type="number" pos:start="161:54" pos:end="161:54">1</literal></expr></init></decl>;</init> <condition pos:start="161:57" pos:end="161:72"><expr pos:start="161:57" pos:end="161:71"><name pos:start="161:57" pos:end="161:57">i</name> <operator pos:start="161:59" pos:end="161:59">&lt;</operator> <name pos:start="161:61" pos:end="161:67">numUAVs</name> <operator pos:start="161:69" pos:end="161:69">+</operator> <literal type="number" pos:start="161:71" pos:end="161:71">1</literal></expr>;</condition> <incr pos:start="161:74" pos:end="161:76"><expr pos:start="161:74" pos:end="161:76"><name pos:start="161:74" pos:end="161:74">i</name><operator pos:start="161:75" pos:end="161:76">++</operator></expr></incr>)</control> <block pos:start="161:79" pos:end="168:41">{<block_content pos:start="162:49" pos:end="167:49">
						<decl_stmt pos:start="162:49" pos:end="162:100"><decl pos:start="162:49" pos:end="162:99"><type pos:start="162:49" pos:end="162:57"><name pos:start="162:49" pos:end="162:57">AFInfoBox</name></type> <name pos:start="162:59" pos:end="162:61">box</name> <init pos:start="162:63" pos:end="162:99">= <expr pos:start="162:65" pos:end="162:99"><operator pos:start="162:65" pos:end="162:65">(</operator><name pos:start="162:66" pos:end="162:74">AFInfoBox</name><operator pos:start="162:75" pos:end="162:75">)</operator> <call pos:start="162:77" pos:end="162:99"><name pos:start="162:77" pos:end="162:96"><name pos:start="162:77" pos:end="162:83">content</name><operator pos:start="162:84" pos:end="162:84">.</operator><name pos:start="162:85" pos:end="162:96">getComponent</name></name><argument_list pos:start="162:97" pos:end="162:99">(<argument pos:start="162:98" pos:end="162:98"><expr pos:start="162:98" pos:end="162:98"><name pos:start="162:98" pos:end="162:98">i</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
						<if_stmt pos:start="163:49" pos:end="167:49"><if pos:start="163:49" pos:end="167:49">if <condition pos:start="163:52" pos:end="163:91">(<expr pos:start="163:53" pos:end="163:90"><operator pos:start="163:53" pos:end="163:53">!</operator><call pos:start="163:54" pos:end="163:66"><name pos:start="163:54" pos:end="163:64"><name pos:start="163:54" pos:end="163:56">box</name><operator pos:start="163:57" pos:end="163:57">.</operator><name pos:start="163:58" pos:end="163:64">getName</name></name><argument_list pos:start="163:65" pos:end="163:66">()</argument_list></call><operator pos:start="163:67" pos:end="163:67">.</operator><call pos:start="163:68" pos:end="163:90"><name pos:start="163:68" pos:end="163:73">equals</name><argument_list pos:start="163:74" pos:end="163:90">(<argument pos:start="163:75" pos:end="163:89"><expr pos:start="163:75" pos:end="163:89"><call pos:start="163:75" pos:end="163:89"><name pos:start="163:75" pos:end="163:87"><name pos:start="163:75" pos:end="163:79">child</name><operator pos:start="163:80" pos:end="163:80">.</operator><name pos:start="163:81" pos:end="163:87">getName</name></name><argument_list pos:start="163:88" pos:end="163:89">()</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="163:93" pos:end="167:49">{<block_content pos:start="164:57" pos:end="166:81">
							<expr_stmt pos:start="164:57" pos:end="164:94"><expr pos:start="164:57" pos:end="164:93"><call pos:start="164:57" pos:end="164:93"><name pos:start="164:57" pos:end="164:75"><name pos:start="164:57" pos:end="164:59">box</name><operator pos:start="164:60" pos:end="164:60">.</operator><name pos:start="164:61" pos:end="164:75">removeStyleName</name></name><argument_list pos:start="164:76" pos:end="164:93">(<argument pos:start="164:77" pos:end="164:92"><expr pos:start="164:77" pos:end="164:92"><literal type="string" pos:start="164:77" pos:end="164:92">"info_box_focus"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
							<expr_stmt pos:start="165:57" pos:end="165:80"><expr pos:start="165:57" pos:end="165:79"><call pos:start="165:57" pos:end="165:79"><name pos:start="165:57" pos:end="165:72"><name pos:start="165:57" pos:end="165:59">box</name><operator pos:start="165:60" pos:end="165:60">.</operator><name pos:start="165:61" pos:end="165:72">setIsChecked</name></name><argument_list pos:start="165:73" pos:end="165:79">(<argument pos:start="165:74" pos:end="165:78"><expr pos:start="165:74" pos:end="165:78"><literal type="boolean" pos:start="165:74" pos:end="165:78">false</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
							<expr_stmt pos:start="166:57" pos:end="166:81"><expr pos:start="166:57" pos:end="166:80"><call pos:start="166:57" pos:end="166:80"><name pos:start="166:57" pos:end="166:73"><name pos:start="166:57" pos:end="166:59">box</name><operator pos:start="166:60" pos:end="166:60">.</operator><name pos:start="166:61" pos:end="166:73">setCheckClick</name></name><argument_list pos:start="166:74" pos:end="166:80">(<argument pos:start="166:75" pos:end="166:79"><expr pos:start="166:75" pos:end="166:79"><literal type="boolean" pos:start="166:75" pos:end="166:79">false</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
						</block_content>}</block></if></if_stmt>
					</block_content>}</block></for>
				</block_content>}</block></if> <else pos:start="169:35" pos:end="173:33">else <block pos:start="169:40" pos:end="173:33">{<block_content pos:start="170:41" pos:end="172:61">
					<expr_stmt pos:start="170:41" pos:end="170:80"><expr pos:start="170:41" pos:end="170:79"><call pos:start="170:41" pos:end="170:79"><name pos:start="170:41" pos:end="170:61"><name pos:start="170:41" pos:end="170:45">child</name><operator pos:start="170:46" pos:end="170:46">.</operator><name pos:start="170:47" pos:end="170:61">removeStyleName</name></name><argument_list pos:start="170:62" pos:end="170:79">(<argument pos:start="170:63" pos:end="170:78"><expr pos:start="170:63" pos:end="170:78"><literal type="string" pos:start="170:63" pos:end="170:78">"info_box_focus"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<if_stmt pos:start="171:41" pos:end="172:61"><if pos:start="171:41" pos:end="172:61">if <condition pos:start="171:44" pos:end="171:76">(<expr pos:start="171:45" pos:end="171:75"><call pos:start="171:45" pos:end="171:75"><name pos:start="171:45" pos:end="171:58"><name pos:start="171:45" pos:end="171:51">focused</name><operator pos:start="171:52" pos:end="171:52">.</operator><name pos:start="171:53" pos:end="171:58">equals</name></name><argument_list pos:start="171:59" pos:end="171:75">(<argument pos:start="171:60" pos:end="171:74"><expr pos:start="171:60" pos:end="171:74"><call pos:start="171:60" pos:end="171:74"><name pos:start="171:60" pos:end="171:72"><name pos:start="171:60" pos:end="171:64">child</name><operator pos:start="171:65" pos:end="171:65">.</operator><name pos:start="171:66" pos:end="171:72">getName</name></name><argument_list pos:start="171:73" pos:end="171:74">()</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="172:49" pos:end="172:61"><block_content pos:start="172:49" pos:end="172:61">
						<expr_stmt pos:start="172:49" pos:end="172:61"><expr pos:start="172:49" pos:end="172:60"><name pos:start="172:49" pos:end="172:55">focused</name> <operator pos:start="172:57" pos:end="172:57">=</operator> <literal type="string" pos:start="172:59" pos:end="172:60">""</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>
				</block_content>}</block></else></if_stmt>
			</block_content>}</block></if></if_stmt>
		</block_content>}</block></lambda></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		<expr_stmt pos:start="177:17" pos:end="177:78"><expr pos:start="177:17" pos:end="177:77"><call pos:start="177:17" pos:end="177:77"><name pos:start="177:17" pos:end="177:37"><name pos:start="177:17" pos:end="177:23">sideBar</name><operator pos:start="177:24" pos:end="177:24">.</operator><name pos:start="177:25" pos:end="177:37">addComponents</name></name><argument_list pos:start="177:38" pos:end="177:77">(<argument pos:start="177:39" pos:end="177:43"><expr pos:start="177:39" pos:end="177:43"><name pos:start="177:39" pos:end="177:43">panel</name></expr></argument>, <argument pos:start="177:46" pos:end="177:52"><expr pos:start="177:46" pos:end="177:52"><name pos:start="177:46" pos:end="177:52">mapView</name></expr></argument>, <argument pos:start="177:55" pos:end="177:65"><expr pos:start="177:55" pos:end="177:65"><name pos:start="177:55" pos:end="177:65">missionView</name></expr></argument>, <argument pos:start="177:68" pos:end="177:76"><expr pos:start="177:68" pos:end="177:76"><name pos:start="177:68" pos:end="177:76">emergency</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt pos:start="178:17" pos:end="178:44"><expr pos:start="178:17" pos:end="178:43"><call pos:start="178:17" pos:end="178:43"><name pos:start="178:17" pos:end="178:34">setCompositionRoot</name><argument_list pos:start="178:35" pos:end="178:43">(<argument pos:start="178:36" pos:end="178:42"><expr pos:start="178:36" pos:end="178:42"><name pos:start="178:36" pos:end="178:42">sideBar</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		<expr_stmt pos:start="180:17" pos:end="180:65"><expr pos:start="180:17" pos:end="180:64"><call pos:start="180:17" pos:end="180:64"><name pos:start="180:17" pos:end="180:41"><name pos:start="180:17" pos:end="180:28">selectButton</name><operator pos:start="180:29" pos:end="180:29">.</operator><name pos:start="180:30" pos:end="180:41">addStyleName</name></name><argument_list pos:start="180:42" pos:end="180:64">(<argument pos:start="180:43" pos:end="180:63"><expr pos:start="180:43" pos:end="180:63"><name pos:start="180:43" pos:end="180:63"><name pos:start="180:43" pos:end="180:51">ValoTheme</name><operator pos:start="180:52" pos:end="180:52">.</operator><name pos:start="180:53" pos:end="180:63">BUTTON_LINK</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt pos:start="181:17" pos:end="181:76"><expr pos:start="181:17" pos:end="181:75"><call pos:start="181:17" pos:end="181:75"><name pos:start="181:17" pos:end="181:41"><name pos:start="181:17" pos:end="181:28">selectButton</name><operator pos:start="181:29" pos:end="181:29">.</operator><name pos:start="181:30" pos:end="181:41">addStyleName</name></name><argument_list pos:start="181:42" pos:end="181:75">(<argument pos:start="181:43" pos:end="181:74"><expr pos:start="181:43" pos:end="181:74"><name pos:start="181:43" pos:end="181:74"><name pos:start="181:43" pos:end="181:56">StyleConstants</name><operator pos:start="181:57" pos:end="181:57">.</operator><name pos:start="181:58" pos:end="181:74">SMALL_BUTTON_LINK</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt pos:start="182:17" pos:end="182:66"><expr pos:start="182:17" pos:end="182:65"><call pos:start="182:17" pos:end="182:65"><name pos:start="182:17" pos:end="182:42"><name pos:start="182:17" pos:end="182:29">visibleButton</name><operator pos:start="182:30" pos:end="182:30">.</operator><name pos:start="182:31" pos:end="182:42">addStyleName</name></name><argument_list pos:start="182:43" pos:end="182:65">(<argument pos:start="182:44" pos:end="182:64"><expr pos:start="182:44" pos:end="182:64"><name pos:start="182:44" pos:end="182:64"><name pos:start="182:44" pos:end="182:52">ValoTheme</name><operator pos:start="182:53" pos:end="182:53">.</operator><name pos:start="182:54" pos:end="182:64">BUTTON_LINK</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt pos:start="183:17" pos:end="183:77"><expr pos:start="183:17" pos:end="183:76"><call pos:start="183:17" pos:end="183:76"><name pos:start="183:17" pos:end="183:42"><name pos:start="183:17" pos:end="183:29">visibleButton</name><operator pos:start="183:30" pos:end="183:30">.</operator><name pos:start="183:31" pos:end="183:42">addStyleName</name></name><argument_list pos:start="183:43" pos:end="183:76">(<argument pos:start="183:44" pos:end="183:75"><expr pos:start="183:44" pos:end="183:75"><name pos:start="183:44" pos:end="183:75"><name pos:start="183:44" pos:end="183:57">StyleConstants</name><operator pos:start="183:58" pos:end="183:58">.</operator><name pos:start="183:59" pos:end="183:75">SMALL_BUTTON_LINK</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		<expr_stmt pos:start="185:17" pos:end="185:67"><expr pos:start="185:17" pos:end="185:66"><call pos:start="185:17" pos:end="185:66"><name pos:start="185:17" pos:end="185:37"><name pos:start="185:17" pos:end="185:23">buttons</name><operator pos:start="185:24" pos:end="185:24">.</operator><name pos:start="185:25" pos:end="185:37">addComponents</name></name><argument_list pos:start="185:38" pos:end="185:66">(<argument pos:start="185:39" pos:end="185:50"><expr pos:start="185:39" pos:end="185:50"><name pos:start="185:39" pos:end="185:50">selectButton</name></expr></argument>, <argument pos:start="185:53" pos:end="185:65"><expr pos:start="185:53" pos:end="185:65"><name pos:start="185:53" pos:end="185:65">visibleButton</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt pos:start="186:17" pos:end="186:61"><expr pos:start="186:17" pos:end="186:60"><call pos:start="186:17" pos:end="186:60"><name pos:start="186:17" pos:end="186:36"><name pos:start="186:17" pos:end="186:23">buttons</name><operator pos:start="186:24" pos:end="186:24">.</operator><name pos:start="186:25" pos:end="186:36">addStyleName</name></name><argument_list pos:start="186:37" pos:end="186:60">(<argument pos:start="186:38" pos:end="186:59"><expr pos:start="186:38" pos:end="186:59"><literal type="string" pos:start="186:38" pos:end="186:59">"af_uav_list_controls"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		<expr_stmt pos:start="188:17" pos:end="198:19"><expr pos:start="188:17" pos:end="198:18"><call pos:start="188:17" pos:end="198:18"><name pos:start="188:17" pos:end="188:45"><name pos:start="188:17" pos:end="188:28">selectButton</name><operator pos:start="188:29" pos:end="188:29">.</operator><name pos:start="188:30" pos:end="188:45">addClickListener</name></name><argument_list pos:start="188:46" pos:end="198:18">(<argument pos:start="188:47" pos:end="198:17"><expr pos:start="188:47" pos:end="198:17"><lambda pos:start="188:47" pos:end="198:17"><parameter_list type="pseudo" pos:start="188:47" pos:end="188:47"><parameter pos:start="188:47" pos:end="188:47"><decl pos:start="188:47" pos:end="188:47"><name pos:start="188:47" pos:end="188:47">e</name></decl></parameter></parameter_list> -&gt; <block pos:start="188:52" pos:end="198:17">{<block_content pos:start="189:25" pos:end="197:25">
			<if_stmt pos:start="189:25" pos:end="197:25"><if pos:start="189:25" pos:end="193:25">if <condition pos:start="189:28" pos:end="189:38">(<expr pos:start="189:29" pos:end="189:37"><name pos:start="189:29" pos:end="189:37">selectAll</name></expr>)</condition> <block pos:start="189:40" pos:end="193:25">{<block_content pos:start="190:33" pos:end="192:50">
				<expr_stmt pos:start="190:33" pos:end="190:48"><expr pos:start="190:33" pos:end="190:47"><call pos:start="190:33" pos:end="190:47"><name pos:start="190:33" pos:end="190:41">selectAll</name><argument_list pos:start="190:42" pos:end="190:47">(<argument pos:start="190:43" pos:end="190:46"><expr pos:start="190:43" pos:end="190:46"><literal type="boolean" pos:start="190:43" pos:end="190:46">true</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<expr_stmt pos:start="191:33" pos:end="191:72"><expr pos:start="191:33" pos:end="191:71"><call pos:start="191:33" pos:end="191:71"><name pos:start="191:33" pos:end="191:55"><name pos:start="191:33" pos:end="191:44">selectButton</name><operator pos:start="191:45" pos:end="191:45">.</operator><name pos:start="191:46" pos:end="191:55">setCaption</name></name><argument_list pos:start="191:56" pos:end="191:71">(<argument pos:start="191:57" pos:end="191:70"><expr pos:start="191:57" pos:end="191:70"><literal type="string" pos:start="191:57" pos:end="191:70">"Deselect all"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<expr_stmt pos:start="192:33" pos:end="192:50"><expr pos:start="192:33" pos:end="192:49"><name pos:start="192:33" pos:end="192:41">selectAll</name> <operator pos:start="192:43" pos:end="192:43">=</operator> <literal type="boolean" pos:start="192:45" pos:end="192:49">false</literal></expr>;</expr_stmt>
			</block_content>}</block></if> <else pos:start="193:27" pos:end="197:25">else <block pos:start="193:32" pos:end="197:25">{<block_content pos:start="194:33" pos:end="196:49">
				<expr_stmt pos:start="194:33" pos:end="194:49"><expr pos:start="194:33" pos:end="194:48"><call pos:start="194:33" pos:end="194:48"><name pos:start="194:33" pos:end="194:41">selectAll</name><argument_list pos:start="194:42" pos:end="194:48">(<argument pos:start="194:43" pos:end="194:47"><expr pos:start="194:43" pos:end="194:47"><literal type="boolean" pos:start="194:43" pos:end="194:47">false</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<expr_stmt pos:start="195:33" pos:end="195:70"><expr pos:start="195:33" pos:end="195:69"><call pos:start="195:33" pos:end="195:69"><name pos:start="195:33" pos:end="195:55"><name pos:start="195:33" pos:end="195:44">selectButton</name><operator pos:start="195:45" pos:end="195:45">.</operator><name pos:start="195:46" pos:end="195:55">setCaption</name></name><argument_list pos:start="195:56" pos:end="195:69">(<argument pos:start="195:57" pos:end="195:68"><expr pos:start="195:57" pos:end="195:68"><literal type="string" pos:start="195:57" pos:end="195:68">"Select all"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<expr_stmt pos:start="196:33" pos:end="196:49"><expr pos:start="196:33" pos:end="196:48"><name pos:start="196:33" pos:end="196:41">selectAll</name> <operator pos:start="196:43" pos:end="196:43">=</operator> <literal type="boolean" pos:start="196:45" pos:end="196:48">true</literal></expr>;</expr_stmt>
			</block_content>}</block></else></if_stmt>
		</block_content>}</block></lambda></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		<expr_stmt pos:start="200:17" pos:end="210:19"><expr pos:start="200:17" pos:end="210:18"><call pos:start="200:17" pos:end="210:18"><name pos:start="200:17" pos:end="200:46"><name pos:start="200:17" pos:end="200:29">visibleButton</name><operator pos:start="200:30" pos:end="200:30">.</operator><name pos:start="200:31" pos:end="200:46">addClickListener</name></name><argument_list pos:start="200:47" pos:end="210:18">(<argument pos:start="200:48" pos:end="210:17"><expr pos:start="200:48" pos:end="210:17"><lambda pos:start="200:48" pos:end="210:17"><parameter_list type="pseudo" pos:start="200:48" pos:end="200:48"><parameter pos:start="200:48" pos:end="200:48"><decl pos:start="200:48" pos:end="200:48"><name pos:start="200:48" pos:end="200:48">e</name></decl></parameter></parameter_list> -&gt; <block pos:start="200:53" pos:end="210:17">{<block_content pos:start="201:25" pos:end="209:25">
			<if_stmt pos:start="201:25" pos:end="209:25"><if pos:start="201:25" pos:end="205:25">if <condition pos:start="201:28" pos:end="201:36">(<expr pos:start="201:29" pos:end="201:35"><name pos:start="201:29" pos:end="201:35">visible</name></expr>)</condition> <block pos:start="201:38" pos:end="205:25">{<block_content pos:start="202:33" pos:end="204:71">
				<expr_stmt pos:start="202:33" pos:end="202:48"><expr pos:start="202:33" pos:end="202:47"><name pos:start="202:33" pos:end="202:39">visible</name> <operator pos:start="202:41" pos:end="202:41">=</operator> <literal type="boolean" pos:start="202:43" pos:end="202:47">false</literal></expr>;</expr_stmt>
				<expr_stmt pos:start="203:33" pos:end="203:52"><expr pos:start="203:33" pos:end="203:51"><call pos:start="203:33" pos:end="203:51"><name pos:start="203:33" pos:end="203:45">setVisibility</name><argument_list pos:start="203:46" pos:end="203:51">(<argument pos:start="203:47" pos:end="203:50"><expr pos:start="203:47" pos:end="203:50"><literal type="boolean" pos:start="203:47" pos:end="203:50">true</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<expr_stmt pos:start="204:33" pos:end="204:71"><expr pos:start="204:33" pos:end="204:70"><call pos:start="204:33" pos:end="204:70"><name pos:start="204:33" pos:end="204:56"><name pos:start="204:33" pos:end="204:45">visibleButton</name><operator pos:start="204:46" pos:end="204:46">.</operator><name pos:start="204:47" pos:end="204:56">setCaption</name></name><argument_list pos:start="204:57" pos:end="204:70">(<argument pos:start="204:58" pos:end="204:69"><expr pos:start="204:58" pos:end="204:69"><literal type="string" pos:start="204:58" pos:end="204:69">"Expand all"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			</block_content>}</block></if> <else pos:start="205:27" pos:end="209:25">else <block pos:start="205:32" pos:end="209:25">{<block_content pos:start="206:33" pos:end="208:73">
				<expr_stmt pos:start="206:33" pos:end="206:47"><expr pos:start="206:33" pos:end="206:46"><name pos:start="206:33" pos:end="206:39">visible</name> <operator pos:start="206:41" pos:end="206:41">=</operator> <literal type="boolean" pos:start="206:43" pos:end="206:46">true</literal></expr>;</expr_stmt>
				<expr_stmt pos:start="207:33" pos:end="207:53"><expr pos:start="207:33" pos:end="207:52"><call pos:start="207:33" pos:end="207:52"><name pos:start="207:33" pos:end="207:45">setVisibility</name><argument_list pos:start="207:46" pos:end="207:52">(<argument pos:start="207:47" pos:end="207:51"><expr pos:start="207:47" pos:end="207:51"><literal type="boolean" pos:start="207:47" pos:end="207:51">false</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<expr_stmt pos:start="208:33" pos:end="208:73"><expr pos:start="208:33" pos:end="208:72"><call pos:start="208:33" pos:end="208:72"><name pos:start="208:33" pos:end="208:56"><name pos:start="208:33" pos:end="208:45">visibleButton</name><operator pos:start="208:46" pos:end="208:46">.</operator><name pos:start="208:47" pos:end="208:56">setCaption</name></name><argument_list pos:start="208:57" pos:end="208:72">(<argument pos:start="208:58" pos:end="208:71"><expr pos:start="208:58" pos:end="208:71"><literal type="string" pos:start="208:58" pos:end="208:71">"Collapse all"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			</block_content>}</block></else></if_stmt>
		</block_content>}</block></lambda></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		<expr_stmt pos:start="212:17" pos:end="212:46"><expr pos:start="212:17" pos:end="212:45"><call pos:start="212:17" pos:end="212:45"><name pos:start="212:17" pos:end="212:36"><name pos:start="212:17" pos:end="212:23">content</name><operator pos:start="212:24" pos:end="212:24">.</operator><name pos:start="212:25" pos:end="212:36">addComponent</name></name><argument_list pos:start="212:37" pos:end="212:45">(<argument pos:start="212:38" pos:end="212:44"><expr pos:start="212:38" pos:end="212:44"><name pos:start="212:38" pos:end="212:44">buttons</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt pos:start="213:17" pos:end="213:58"><expr pos:start="213:17" pos:end="213:57"><name pos:start="213:17" pos:end="213:23">numUAVs</name> <operator pos:start="213:25" pos:end="213:25">=</operator> <call pos:start="213:27" pos:end="213:53"><name pos:start="213:27" pos:end="213:51"><name pos:start="213:27" pos:end="213:33">content</name><operator pos:start="213:34" pos:end="213:34">.</operator><name pos:start="213:35" pos:end="213:51">getComponentCount</name></name><argument_list pos:start="213:52" pos:end="213:53">()</argument_list></call> <operator pos:start="213:55" pos:end="213:55">-</operator> <literal type="number" pos:start="213:57" pos:end="213:57">1</literal></expr>;</expr_stmt>

		<try pos:start="215:17" pos:end="226:17">try <block pos:start="215:21" pos:end="223:17">{<block_content pos:start="216:25" pos:end="222:25">
			<expr_stmt pos:start="216:25" pos:end="216:132"><expr pos:start="216:25" pos:end="216:131"><name pos:start="216:25" pos:end="216:31">service</name> <operator pos:start="216:33" pos:end="216:33">=</operator> <operator pos:start="216:35" pos:end="216:35">(</operator><name pos:start="216:36" pos:end="216:59">IDroneSetupRemoteService</name><operator pos:start="216:60" pos:end="216:60">)</operator> <call pos:start="216:62" pos:end="216:88"><name pos:start="216:62" pos:end="216:86"><name pos:start="216:62" pos:end="216:69">provider</name><operator pos:start="216:70" pos:end="216:70">.</operator><name pos:start="216:71" pos:end="216:86">getRemoteManager</name></name><argument_list pos:start="216:87" pos:end="216:88">()</argument_list></call><operator pos:start="216:89" pos:end="216:89">.</operator><call pos:start="216:90" pos:end="216:131"><name pos:start="216:90" pos:end="216:99">getService</name><argument_list pos:start="216:100" pos:end="216:131">(<argument pos:start="216:101" pos:end="216:130"><expr pos:start="216:101" pos:end="216:130"><name pos:start="216:101" pos:end="216:130"><name pos:start="216:101" pos:end="216:124">IDroneSetupRemoteService</name><operator pos:start="216:125" pos:end="216:125">.</operator><name pos:start="216:126" pos:end="216:130">class</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<decl_stmt pos:start="217:25" pos:end="217:85"><decl pos:start="217:25" pos:end="217:84"><type pos:start="217:25" pos:end="217:45"><name pos:start="217:25" pos:end="217:45"><name pos:start="217:25" pos:end="217:34">Collection</name><argument_list type="generic" pos:start="217:35" pos:end="217:45">&lt;<argument pos:start="217:36" pos:end="217:44"><name pos:start="217:36" pos:end="217:44">IUAVProxy</name></argument>&gt;</argument_list></name></type> <name pos:start="217:47" pos:end="217:58">activeDrones</name> <init pos:start="217:60" pos:end="217:84">= <expr pos:start="217:62" pos:end="217:84"><call pos:start="217:62" pos:end="217:84"><name pos:start="217:62" pos:end="217:82"><name pos:start="217:62" pos:end="217:68">service</name><operator pos:start="217:69" pos:end="217:69">.</operator><name pos:start="217:70" pos:end="217:82">getActiveUAVs</name></name><argument_list pos:start="217:83" pos:end="217:84">()</argument_list></call></expr></init></decl>;</decl_stmt>
			<expr_stmt pos:start="218:25" pos:end="218:63"><expr pos:start="218:25" pos:end="218:62"><name pos:start="218:25" pos:end="218:30">drones</name> <operator pos:start="218:32" pos:end="218:32">=</operator> <operator pos:start="218:34" pos:end="218:36">new</operator> <call pos:start="218:38" pos:end="218:62"><name pos:start="218:38" pos:end="218:48"><name pos:start="218:38" pos:end="218:46">ArrayList</name><argument_list type="generic" pos:start="218:47" pos:end="218:48">&lt;&gt;</argument_list></name><argument_list pos:start="218:49" pos:end="218:62">(<argument pos:start="218:50" pos:end="218:61"><expr pos:start="218:50" pos:end="218:61"><name pos:start="218:50" pos:end="218:61">activeDrones</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<comment type="line" pos:start="219:25" pos:end="219:52">// Collections.sort(drones);</comment>
			<for pos:start="220:25" pos:end="222:25">for <control pos:start="220:29" pos:end="220:50">(<init pos:start="220:30" pos:end="220:49"><decl pos:start="220:30" pos:end="220:49"><type pos:start="220:30" pos:end="220:38"><name pos:start="220:30" pos:end="220:38">IUAVProxy</name></type> <name pos:start="220:40" pos:end="220:40">e</name> <range pos:start="220:42" pos:end="220:49">: <expr pos:start="220:44" pos:end="220:49"><name pos:start="220:44" pos:end="220:49">drones</name></expr></range></decl></init>)</control> <block pos:start="220:52" pos:end="222:25">{<block_content pos:start="221:33" pos:end="221:78">
				<expr_stmt pos:start="221:33" pos:end="221:78"><expr pos:start="221:33" pos:end="221:77"><call pos:start="221:33" pos:end="221:77"><name pos:start="221:33" pos:end="221:38">addBox</name><argument_list pos:start="221:39" pos:end="221:77">(<argument pos:start="221:40" pos:end="221:44"><expr pos:start="221:40" pos:end="221:44"><literal type="boolean" pos:start="221:40" pos:end="221:44">false</literal></expr></argument>, <argument pos:start="221:47" pos:end="221:69"><expr pos:start="221:47" pos:end="221:69"><operator pos:start="221:47" pos:end="221:49">new</operator> <call pos:start="221:51" pos:end="221:69"><name pos:start="221:51" pos:end="221:66">UAVStatusWrapper</name><argument_list pos:start="221:67" pos:end="221:69">(<argument pos:start="221:68" pos:end="221:68"><expr pos:start="221:68" pos:end="221:68"><name pos:start="221:68" pos:end="221:68">e</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="221:72" pos:end="221:76"><expr pos:start="221:72" pos:end="221:76"><literal type="boolean" pos:start="221:72" pos:end="221:76">false</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			</block_content>}</block></for>
		</block_content>}</block> <catch pos:start="223:19" pos:end="226:17">catch <parameter_list pos:start="223:25" pos:end="223:72">(<parameter pos:start="223:26" pos:end="223:71"><decl pos:start="223:26" pos:end="223:71"><type pos:start="223:26" pos:end="223:50"><name pos:start="223:26" pos:end="223:50">DronologyServiceException</name></type> | <type pos:start="223:54" pos:end="223:71"><name pos:start="223:54" pos:end="223:68">RemoteException</name></type> <name pos:start="223:70" pos:end="223:71">e1</name></decl></parameter>)</parameter_list> <block pos:start="223:74" pos:end="226:17">{<block_content pos:start="224:25" pos:end="225:41">
			<expr_stmt pos:start="224:25" pos:end="224:49"><expr pos:start="224:25" pos:end="224:48"><call pos:start="224:25" pos:end="224:48"><name pos:start="224:25" pos:end="224:41"><name pos:start="224:25" pos:end="224:28">MyUI</name><operator pos:start="224:29" pos:end="224:29">.</operator><name pos:start="224:30" pos:end="224:41">setConnected</name></name><argument_list pos:start="224:42" pos:end="224:48">(<argument pos:start="224:43" pos:end="224:47"><expr pos:start="224:43" pos:end="224:47"><literal type="boolean" pos:start="224:43" pos:end="224:47">false</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt pos:start="225:25" pos:end="225:41"><expr pos:start="225:25" pos:end="225:40"><call pos:start="225:25" pos:end="225:40"><name pos:start="225:25" pos:end="225:36"><name pos:start="225:25" pos:end="225:30">LOGGER</name><operator pos:start="225:31" pos:end="225:31">.</operator><name pos:start="225:32" pos:end="225:36">error</name></name><argument_list pos:start="225:37" pos:end="225:40">(<argument pos:start="225:38" pos:end="225:39"><expr pos:start="225:38" pos:end="225:39"><name pos:start="225:38" pos:end="225:39">e1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		</block_content>}</block></catch></try>

	</block_content>}</block></constructor>

	<function pos:start="230:9" pos:end="232:9"><type pos:start="230:9" pos:end="230:34"><specifier pos:start="230:9" pos:end="230:14">public</specifier> <name pos:start="230:16" pos:end="230:34">AFMapViewOperations</name></type> <name pos:start="230:36" pos:end="230:45">getMapView</name><parameter_list pos:start="230:46" pos:end="230:47">()</parameter_list> <block pos:start="230:49" pos:end="232:9">{<block_content pos:start="231:17" pos:end="231:31">
		<return pos:start="231:17" pos:end="231:31">return <expr pos:start="231:24" pos:end="231:30"><name pos:start="231:24" pos:end="231:30">mapView</name></expr>;</return>
	</block_content>}</block></function>

	<function pos:start="234:9" pos:end="236:9"><type pos:start="234:9" pos:end="234:21"><specifier pos:start="234:9" pos:end="234:14">public</specifier> <name pos:start="234:16" pos:end="234:21">String</name></type> <name pos:start="234:23" pos:end="234:36">getFocusedName</name><parameter_list pos:start="234:37" pos:end="234:38">()</parameter_list> <block pos:start="234:40" pos:end="236:9">{<block_content pos:start="235:17" pos:end="235:31">
		<return pos:start="235:17" pos:end="235:31">return <expr pos:start="235:24" pos:end="235:30"><name pos:start="235:24" pos:end="235:30">focused</name></expr>;</return>
	</block_content>}</block></function>

	<comment type="block" format="javadoc" pos:start="238:9" pos:end="251:11">/**
	 * Adds a box to the panel
	 * 
	 * @param isChecked
	 * @param name
	 * @param status
	 * @param batteryLife
	 * @param healthColor
	 * @param lat
	 * @param lon
	 * @param alt
	 * @param speed
	 * @param hoverInPlace
	 */</comment>
	<function pos:start="252:9" pos:end="258:9"><type pos:start="252:9" pos:end="252:19"><specifier pos:start="252:9" pos:end="252:14">public</specifier> <name pos:start="252:16" pos:end="252:19">void</name></type> <name pos:start="252:21" pos:end="252:26">addBox</name><parameter_list pos:start="252:27" pos:end="252:95">(<parameter pos:start="252:28" pos:end="252:44"><decl pos:start="252:28" pos:end="252:44"><type pos:start="252:28" pos:end="252:44"><name pos:start="252:28" pos:end="252:34">boolean</name></type> <name pos:start="252:36" pos:end="252:44">isChecked</name></decl></parameter>, <parameter pos:start="252:47" pos:end="252:72"><decl pos:start="252:47" pos:end="252:72"><type pos:start="252:47" pos:end="252:72"><name pos:start="252:47" pos:end="252:62">UAVStatusWrapper</name></type> <name pos:start="252:64" pos:end="252:72">uavStatus</name></decl></parameter>, <parameter pos:start="252:75" pos:end="252:94"><decl pos:start="252:75" pos:end="252:94"><type pos:start="252:75" pos:end="252:94"><name pos:start="252:75" pos:end="252:81">boolean</name></type> <name pos:start="252:83" pos:end="252:94">hoverInPlace</name></decl></parameter>)</parameter_list> <block pos:start="252:97" pos:end="258:9">{<block_content pos:start="253:17" pos:end="257:77">
		<decl_stmt pos:start="253:17" pos:end="253:82"><decl pos:start="253:17" pos:end="253:81"><type pos:start="253:17" pos:end="253:25"><name pos:start="253:17" pos:end="253:25">AFInfoBox</name></type> <name pos:start="253:27" pos:end="253:29">box</name> <init pos:start="253:31" pos:end="253:81">= <expr pos:start="253:33" pos:end="253:81"><operator pos:start="253:33" pos:end="253:35">new</operator> <call pos:start="253:37" pos:end="253:81"><name pos:start="253:37" pos:end="253:45">AFInfoBox</name><argument_list pos:start="253:46" pos:end="253:81">(<argument pos:start="253:47" pos:end="253:55"><expr pos:start="253:47" pos:end="253:55"><name pos:start="253:47" pos:end="253:55">isChecked</name></expr></argument>, <argument pos:start="253:58" pos:end="253:66"><expr pos:start="253:58" pos:end="253:66"><name pos:start="253:58" pos:end="253:66">uavStatus</name></expr></argument>, <argument pos:start="253:69" pos:end="253:80"><expr pos:start="253:69" pos:end="253:80"><name pos:start="253:69" pos:end="253:80">hoverInPlace</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt pos:start="254:17" pos:end="254:37"><expr pos:start="254:17" pos:end="254:36"><call pos:start="254:17" pos:end="254:36"><name pos:start="254:17" pos:end="254:34"><name pos:start="254:17" pos:end="254:19">box</name><operator pos:start="254:20" pos:end="254:20">.</operator><name pos:start="254:21" pos:end="254:34">createContents</name></name><argument_list pos:start="254:35" pos:end="254:36">()</argument_list></call></expr>;</expr_stmt>
		<expr_stmt pos:start="255:17" pos:end="255:42"><expr pos:start="255:17" pos:end="255:41"><call pos:start="255:17" pos:end="255:41"><name pos:start="255:17" pos:end="255:36"><name pos:start="255:17" pos:end="255:23">content</name><operator pos:start="255:24" pos:end="255:24">.</operator><name pos:start="255:25" pos:end="255:36">addComponent</name></name><argument_list pos:start="255:37" pos:end="255:41">(<argument pos:start="255:38" pos:end="255:40"><expr pos:start="255:38" pos:end="255:40"><name pos:start="255:38" pos:end="255:40">box</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt pos:start="256:17" pos:end="256:58"><expr pos:start="256:17" pos:end="256:57"><name pos:start="256:17" pos:end="256:23">numUAVs</name> <operator pos:start="256:25" pos:end="256:25">=</operator> <call pos:start="256:27" pos:end="256:53"><name pos:start="256:27" pos:end="256:51"><name pos:start="256:27" pos:end="256:33">content</name><operator pos:start="256:34" pos:end="256:34">.</operator><name pos:start="256:35" pos:end="256:51">getComponentCount</name></name><argument_list pos:start="256:52" pos:end="256:53">()</argument_list></call> <operator pos:start="256:55" pos:end="256:55">-</operator> <literal type="number" pos:start="256:57" pos:end="256:57">1</literal></expr>;</expr_stmt>
		<expr_stmt pos:start="257:17" pos:end="257:77"><expr pos:start="257:17" pos:end="257:76"><call pos:start="257:17" pos:end="257:76"><name pos:start="257:17" pos:end="257:32"><name pos:start="257:17" pos:end="257:21">panel</name><operator pos:start="257:22" pos:end="257:22">.</operator><name pos:start="257:23" pos:end="257:32">setCaption</name></name><argument_list pos:start="257:33" pos:end="257:76">(<argument pos:start="257:34" pos:end="257:75"><expr pos:start="257:34" pos:end="257:75"><call pos:start="257:34" pos:end="257:58"><name pos:start="257:34" pos:end="257:49"><name pos:start="257:34" pos:end="257:40">Integer</name><operator pos:start="257:41" pos:end="257:41">.</operator><name pos:start="257:42" pos:end="257:49">toString</name></name><argument_list pos:start="257:50" pos:end="257:58">(<argument pos:start="257:51" pos:end="257:57"><expr pos:start="257:51" pos:end="257:57"><name pos:start="257:51" pos:end="257:57">numUAVs</name></expr></argument>)</argument_list></call> <operator pos:start="257:60" pos:end="257:60">+</operator> <literal type="string" pos:start="257:62" pos:end="257:75">" Active UAVs"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	</block_content>}</block></function>

	<function pos:start="260:9" pos:end="265:9"><type pos:start="260:9" pos:end="260:19"><specifier pos:start="260:9" pos:end="260:14">public</specifier> <name pos:start="260:16" pos:end="260:19">void</name></type> <name pos:start="260:21" pos:end="260:26">addBox</name><parameter_list pos:start="260:27" pos:end="260:28">()</parameter_list> <block pos:start="260:30" pos:end="265:9">{<block_content pos:start="261:17" pos:end="264:77">
		<decl_stmt pos:start="261:17" pos:end="261:48"><decl pos:start="261:17" pos:end="261:47"><type pos:start="261:17" pos:end="261:25"><name pos:start="261:17" pos:end="261:25">AFInfoBox</name></type> <name pos:start="261:27" pos:end="261:29">box</name> <init pos:start="261:31" pos:end="261:47">= <expr pos:start="261:33" pos:end="261:47"><operator pos:start="261:33" pos:end="261:35">new</operator> <call pos:start="261:37" pos:end="261:47"><name pos:start="261:37" pos:end="261:45">AFInfoBox</name><argument_list pos:start="261:46" pos:end="261:47">()</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt pos:start="262:17" pos:end="262:42"><expr pos:start="262:17" pos:end="262:41"><call pos:start="262:17" pos:end="262:41"><name pos:start="262:17" pos:end="262:36"><name pos:start="262:17" pos:end="262:23">content</name><operator pos:start="262:24" pos:end="262:24">.</operator><name pos:start="262:25" pos:end="262:36">addComponent</name></name><argument_list pos:start="262:37" pos:end="262:41">(<argument pos:start="262:38" pos:end="262:40"><expr pos:start="262:38" pos:end="262:40"><name pos:start="262:38" pos:end="262:40">box</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt pos:start="263:17" pos:end="263:58"><expr pos:start="263:17" pos:end="263:57"><name pos:start="263:17" pos:end="263:23">numUAVs</name> <operator pos:start="263:25" pos:end="263:25">=</operator> <call pos:start="263:27" pos:end="263:53"><name pos:start="263:27" pos:end="263:51"><name pos:start="263:27" pos:end="263:33">content</name><operator pos:start="263:34" pos:end="263:34">.</operator><name pos:start="263:35" pos:end="263:51">getComponentCount</name></name><argument_list pos:start="263:52" pos:end="263:53">()</argument_list></call> <operator pos:start="263:55" pos:end="263:55">-</operator> <literal type="number" pos:start="263:57" pos:end="263:57">1</literal></expr>;</expr_stmt>
		<expr_stmt pos:start="264:17" pos:end="264:77"><expr pos:start="264:17" pos:end="264:76"><call pos:start="264:17" pos:end="264:76"><name pos:start="264:17" pos:end="264:32"><name pos:start="264:17" pos:end="264:21">panel</name><operator pos:start="264:22" pos:end="264:22">.</operator><name pos:start="264:23" pos:end="264:32">setCaption</name></name><argument_list pos:start="264:33" pos:end="264:76">(<argument pos:start="264:34" pos:end="264:75"><expr pos:start="264:34" pos:end="264:75"><call pos:start="264:34" pos:end="264:58"><name pos:start="264:34" pos:end="264:49"><name pos:start="264:34" pos:end="264:40">Integer</name><operator pos:start="264:41" pos:end="264:41">.</operator><name pos:start="264:42" pos:end="264:49">toString</name></name><argument_list pos:start="264:50" pos:end="264:58">(<argument pos:start="264:51" pos:end="264:57"><expr pos:start="264:51" pos:end="264:57"><name pos:start="264:51" pos:end="264:57">numUAVs</name></expr></argument>)</argument_list></call> <operator pos:start="264:60" pos:end="264:60">+</operator> <literal type="string" pos:start="264:62" pos:end="264:75">" Active UAVs"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	</block_content>}</block></function>

	<comment type="block" format="javadoc" pos:start="267:9" pos:end="273:11">/**
	 * Removes a box from the panel
	 * 
	 * @param name
	 *          the name/ID of the drone
	 * @return returns true if successful. returns false if failed
	 */</comment>
	<function pos:start="274:9" pos:end="285:9"><type pos:start="274:9" pos:end="274:22"><specifier pos:start="274:9" pos:end="274:14">public</specifier> <name pos:start="274:16" pos:end="274:22">boolean</name></type> <name pos:start="274:24" pos:end="274:32">removeBox</name><parameter_list pos:start="274:33" pos:end="274:45">(<parameter pos:start="274:34" pos:end="274:44"><decl pos:start="274:34" pos:end="274:44"><type pos:start="274:34" pos:end="274:39"><name pos:start="274:34" pos:end="274:39">String</name></type> <name pos:start="274:41" pos:end="274:44">name</name></decl></parameter>)</parameter_list> <block pos:start="274:47" pos:end="285:9">{<block_content pos:start="275:17" pos:end="284:29">
		<for pos:start="275:17" pos:end="283:17">for <control pos:start="275:21" pos:end="275:53">(<init pos:start="275:22" pos:end="275:31"><decl pos:start="275:22" pos:end="275:30"><type pos:start="275:22" pos:end="275:24"><name pos:start="275:22" pos:end="275:24">int</name></type> <name pos:start="275:26" pos:end="275:26">i</name> <init pos:start="275:28" pos:end="275:30">= <expr pos:start="275:30" pos:end="275:30"><literal type="number" pos:start="275:30" pos:end="275:30">1</literal></expr></init></decl>;</init> <condition pos:start="275:33" pos:end="275:48"><expr pos:start="275:33" pos:end="275:47"><name pos:start="275:33" pos:end="275:33">i</name> <operator pos:start="275:35" pos:end="275:35">&lt;</operator> <name pos:start="275:37" pos:end="275:43">numUAVs</name> <operator pos:start="275:45" pos:end="275:45">+</operator> <literal type="number" pos:start="275:47" pos:end="275:47">1</literal></expr>;</condition> <incr pos:start="275:50" pos:end="275:52"><expr pos:start="275:50" pos:end="275:52"><name pos:start="275:50" pos:end="275:50">i</name><operator pos:start="275:51" pos:end="275:52">++</operator></expr></incr>)</control> <block pos:start="275:55" pos:end="283:17">{<block_content pos:start="276:25" pos:end="282:25">
			<decl_stmt pos:start="276:25" pos:end="276:76"><decl pos:start="276:25" pos:end="276:75"><type pos:start="276:25" pos:end="276:33"><name pos:start="276:25" pos:end="276:33">AFInfoBox</name></type> <name pos:start="276:35" pos:end="276:37">box</name> <init pos:start="276:39" pos:end="276:75">= <expr pos:start="276:41" pos:end="276:75"><operator pos:start="276:41" pos:end="276:41">(</operator><name pos:start="276:42" pos:end="276:50">AFInfoBox</name><operator pos:start="276:51" pos:end="276:51">)</operator> <call pos:start="276:53" pos:end="276:75"><name pos:start="276:53" pos:end="276:72"><name pos:start="276:53" pos:end="276:59">content</name><operator pos:start="276:60" pos:end="276:60">.</operator><name pos:start="276:61" pos:end="276:72">getComponent</name></name><argument_list pos:start="276:73" pos:end="276:75">(<argument pos:start="276:74" pos:end="276:74"><expr pos:start="276:74" pos:end="276:74"><name pos:start="276:74" pos:end="276:74">i</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<if_stmt pos:start="277:25" pos:end="282:25"><if pos:start="277:25" pos:end="282:25">if <condition pos:start="277:28" pos:end="277:55">(<expr pos:start="277:29" pos:end="277:54"><call pos:start="277:29" pos:end="277:41"><name pos:start="277:29" pos:end="277:39"><name pos:start="277:29" pos:end="277:31">box</name><operator pos:start="277:32" pos:end="277:32">.</operator><name pos:start="277:33" pos:end="277:39">getName</name></name><argument_list pos:start="277:40" pos:end="277:41">()</argument_list></call><operator pos:start="277:42" pos:end="277:42">.</operator><call pos:start="277:43" pos:end="277:54"><name pos:start="277:43" pos:end="277:48">equals</name><argument_list pos:start="277:49" pos:end="277:54">(<argument pos:start="277:50" pos:end="277:53"><expr pos:start="277:50" pos:end="277:53"><name pos:start="277:50" pos:end="277:53">name</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="277:57" pos:end="282:25">{<block_content pos:start="278:33" pos:end="281:44">
				<expr_stmt pos:start="278:33" pos:end="278:61"><expr pos:start="278:33" pos:end="278:60"><call pos:start="278:33" pos:end="278:60"><name pos:start="278:33" pos:end="278:55"><name pos:start="278:33" pos:end="278:39">content</name><operator pos:start="278:40" pos:end="278:40">.</operator><name pos:start="278:41" pos:end="278:55">removeComponent</name></name><argument_list pos:start="278:56" pos:end="278:60">(<argument pos:start="278:57" pos:end="278:59"><expr pos:start="278:57" pos:end="278:59"><name pos:start="278:57" pos:end="278:59">box</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<expr_stmt pos:start="279:33" pos:end="279:74"><expr pos:start="279:33" pos:end="279:73"><name pos:start="279:33" pos:end="279:39">numUAVs</name> <operator pos:start="279:41" pos:end="279:41">=</operator> <call pos:start="279:43" pos:end="279:69"><name pos:start="279:43" pos:end="279:67"><name pos:start="279:43" pos:end="279:49">content</name><operator pos:start="279:50" pos:end="279:50">.</operator><name pos:start="279:51" pos:end="279:67">getComponentCount</name></name><argument_list pos:start="279:68" pos:end="279:69">()</argument_list></call> <operator pos:start="279:71" pos:end="279:71">-</operator> <literal type="number" pos:start="279:73" pos:end="279:73">1</literal></expr>;</expr_stmt>
				<expr_stmt pos:start="280:33" pos:end="280:93"><expr pos:start="280:33" pos:end="280:92"><call pos:start="280:33" pos:end="280:92"><name pos:start="280:33" pos:end="280:48"><name pos:start="280:33" pos:end="280:37">panel</name><operator pos:start="280:38" pos:end="280:38">.</operator><name pos:start="280:39" pos:end="280:48">setCaption</name></name><argument_list pos:start="280:49" pos:end="280:92">(<argument pos:start="280:50" pos:end="280:91"><expr pos:start="280:50" pos:end="280:91"><call pos:start="280:50" pos:end="280:74"><name pos:start="280:50" pos:end="280:65"><name pos:start="280:50" pos:end="280:56">Integer</name><operator pos:start="280:57" pos:end="280:57">.</operator><name pos:start="280:58" pos:end="280:65">toString</name></name><argument_list pos:start="280:66" pos:end="280:74">(<argument pos:start="280:67" pos:end="280:73"><expr pos:start="280:67" pos:end="280:73"><name pos:start="280:67" pos:end="280:73">numUAVs</name></expr></argument>)</argument_list></call> <operator pos:start="280:76" pos:end="280:76">+</operator> <literal type="string" pos:start="280:78" pos:end="280:91">" Active UAVs"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<return pos:start="281:33" pos:end="281:44">return <expr pos:start="281:40" pos:end="281:43"><literal type="boolean" pos:start="281:40" pos:end="281:43">true</literal></expr>;</return>
			</block_content>}</block></if></if_stmt>
		</block_content>}</block></for>
		<return pos:start="284:17" pos:end="284:29">return <expr pos:start="284:24" pos:end="284:28"><literal type="boolean" pos:start="284:24" pos:end="284:28">false</literal></expr>;</return>
	</block_content>}</block></function>

	<function pos:start="287:9" pos:end="297:9"><type pos:start="287:9" pos:end="287:19"><specifier pos:start="287:9" pos:end="287:14">public</specifier> <name pos:start="287:16" pos:end="287:19">void</name></type> <name pos:start="287:21" pos:end="287:29">selectAll</name><parameter_list pos:start="287:30" pos:end="287:45">(<parameter pos:start="287:31" pos:end="287:44"><decl pos:start="287:31" pos:end="287:44"><type pos:start="287:31" pos:end="287:37"><name pos:start="287:31" pos:end="287:37">boolean</name></type> <name pos:start="287:39" pos:end="287:44">select</name></decl></parameter>)</parameter_list> <block pos:start="287:47" pos:end="297:9">{<block_content pos:start="288:17" pos:end="296:17">
		<for pos:start="288:17" pos:end="296:17">for <control pos:start="288:21" pos:end="288:53">(<init pos:start="288:22" pos:end="288:31"><decl pos:start="288:22" pos:end="288:30"><type pos:start="288:22" pos:end="288:24"><name pos:start="288:22" pos:end="288:24">int</name></type> <name pos:start="288:26" pos:end="288:26">i</name> <init pos:start="288:28" pos:end="288:30">= <expr pos:start="288:30" pos:end="288:30"><literal type="number" pos:start="288:30" pos:end="288:30">1</literal></expr></init></decl>;</init> <condition pos:start="288:33" pos:end="288:48"><expr pos:start="288:33" pos:end="288:47"><name pos:start="288:33" pos:end="288:33">i</name> <operator pos:start="288:35" pos:end="288:35">&lt;</operator> <name pos:start="288:37" pos:end="288:43">numUAVs</name> <operator pos:start="288:45" pos:end="288:45">+</operator> <literal type="number" pos:start="288:47" pos:end="288:47">1</literal></expr>;</condition> <incr pos:start="288:50" pos:end="288:52"><expr pos:start="288:50" pos:end="288:52"><name pos:start="288:50" pos:end="288:50">i</name><operator pos:start="288:51" pos:end="288:52">++</operator></expr></incr>)</control> <block pos:start="288:55" pos:end="296:17">{<block_content pos:start="289:25" pos:end="295:25">
			<decl_stmt pos:start="289:25" pos:end="289:76"><decl pos:start="289:25" pos:end="289:75"><type pos:start="289:25" pos:end="289:33"><name pos:start="289:25" pos:end="289:33">AFInfoBox</name></type> <name pos:start="289:35" pos:end="289:37">box</name> <init pos:start="289:39" pos:end="289:75">= <expr pos:start="289:41" pos:end="289:75"><operator pos:start="289:41" pos:end="289:41">(</operator><name pos:start="289:42" pos:end="289:50">AFInfoBox</name><operator pos:start="289:51" pos:end="289:51">)</operator> <call pos:start="289:53" pos:end="289:75"><name pos:start="289:53" pos:end="289:72"><name pos:start="289:53" pos:end="289:59">content</name><operator pos:start="289:60" pos:end="289:60">.</operator><name pos:start="289:61" pos:end="289:72">getComponent</name></name><argument_list pos:start="289:73" pos:end="289:75">(<argument pos:start="289:74" pos:end="289:74"><expr pos:start="289:74" pos:end="289:74"><name pos:start="289:74" pos:end="289:74">i</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<expr_stmt pos:start="290:25" pos:end="290:49"><expr pos:start="290:25" pos:end="290:48"><call pos:start="290:25" pos:end="290:48"><name pos:start="290:25" pos:end="290:40"><name pos:start="290:25" pos:end="290:27">box</name><operator pos:start="290:28" pos:end="290:28">.</operator><name pos:start="290:29" pos:end="290:40">setIsChecked</name></name><argument_list pos:start="290:41" pos:end="290:48">(<argument pos:start="290:42" pos:end="290:47"><expr pos:start="290:42" pos:end="290:47"><name pos:start="290:42" pos:end="290:47">select</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<if_stmt pos:start="291:25" pos:end="295:25"><if pos:start="291:25" pos:end="295:25">if <condition pos:start="291:28" pos:end="291:69">(<expr pos:start="291:29" pos:end="291:68"><operator pos:start="291:29" pos:end="291:29">!</operator><name pos:start="291:30" pos:end="291:35">select</name> <operator pos:start="291:37" pos:end="291:38">&amp;&amp;</operator> <call pos:start="291:40" pos:end="291:68"><name pos:start="291:40" pos:end="291:53"><name pos:start="291:40" pos:end="291:46">focused</name><operator pos:start="291:47" pos:end="291:47">.</operator><name pos:start="291:48" pos:end="291:53">equals</name></name><argument_list pos:start="291:54" pos:end="291:68">(<argument pos:start="291:55" pos:end="291:67"><expr pos:start="291:55" pos:end="291:67"><call pos:start="291:55" pos:end="291:67"><name pos:start="291:55" pos:end="291:65"><name pos:start="291:55" pos:end="291:57">box</name><operator pos:start="291:58" pos:end="291:58">.</operator><name pos:start="291:59" pos:end="291:65">getName</name></name><argument_list pos:start="291:66" pos:end="291:67">()</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="291:71" pos:end="295:25">{<block_content pos:start="292:33" pos:end="294:45">
				<expr_stmt pos:start="292:33" pos:end="292:70"><expr pos:start="292:33" pos:end="292:69"><call pos:start="292:33" pos:end="292:69"><name pos:start="292:33" pos:end="292:51"><name pos:start="292:33" pos:end="292:35">box</name><operator pos:start="292:36" pos:end="292:36">.</operator><name pos:start="292:37" pos:end="292:51">removeStyleName</name></name><argument_list pos:start="292:52" pos:end="292:69">(<argument pos:start="292:53" pos:end="292:68"><expr pos:start="292:53" pos:end="292:68"><literal type="string" pos:start="292:53" pos:end="292:68">"info_box_focus"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<expr_stmt pos:start="293:33" pos:end="293:57"><expr pos:start="293:33" pos:end="293:56"><call pos:start="293:33" pos:end="293:56"><name pos:start="293:33" pos:end="293:49"><name pos:start="293:33" pos:end="293:35">box</name><operator pos:start="293:36" pos:end="293:36">.</operator><name pos:start="293:37" pos:end="293:49">setCheckClick</name></name><argument_list pos:start="293:50" pos:end="293:56">(<argument pos:start="293:51" pos:end="293:55"><expr pos:start="293:51" pos:end="293:55"><literal type="boolean" pos:start="293:51" pos:end="293:55">false</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<expr_stmt pos:start="294:33" pos:end="294:45"><expr pos:start="294:33" pos:end="294:44"><name pos:start="294:33" pos:end="294:39">focused</name> <operator pos:start="294:41" pos:end="294:41">=</operator> <literal type="string" pos:start="294:43" pos:end="294:44">""</literal></expr>;</expr_stmt>
			</block_content>}</block></if></if_stmt>
		</block_content>}</block></for>
	</block_content>}</block></function>

	<comment type="block" format="javadoc" pos:start="299:9" pos:end="302:11">/**
	 * 
	 * @return a list of all drones that have their checkbox checked
	 */</comment>
	<function pos:start="303:9" pos:end="311:9"><type pos:start="303:9" pos:end="303:27"><specifier pos:start="303:9" pos:end="303:14">public</specifier> <name pos:start="303:16" pos:end="303:27"><name pos:start="303:16" pos:end="303:19">List</name><argument_list type="generic" pos:start="303:20" pos:end="303:27">&lt;<argument pos:start="303:21" pos:end="303:26"><name pos:start="303:21" pos:end="303:26">String</name></argument>&gt;</argument_list></name></type> <name pos:start="303:29" pos:end="303:38">getChecked</name><parameter_list pos:start="303:39" pos:end="303:40">()</parameter_list> <block pos:start="303:42" pos:end="311:9">{<block_content pos:start="304:17" pos:end="310:29">
		<decl_stmt pos:start="304:17" pos:end="304:55"><decl pos:start="304:17" pos:end="304:54"><type pos:start="304:17" pos:end="304:28"><name pos:start="304:17" pos:end="304:28"><name pos:start="304:17" pos:end="304:20">List</name><argument_list type="generic" pos:start="304:21" pos:end="304:28">&lt;<argument pos:start="304:22" pos:end="304:27"><name pos:start="304:22" pos:end="304:27">String</name></argument>&gt;</argument_list></name></type> <name pos:start="304:30" pos:end="304:34">names</name> <init pos:start="304:36" pos:end="304:54">= <expr pos:start="304:38" pos:end="304:54"><operator pos:start="304:38" pos:end="304:40">new</operator> <call pos:start="304:42" pos:end="304:54"><name pos:start="304:42" pos:end="304:52"><name pos:start="304:42" pos:end="304:50">ArrayList</name><argument_list type="generic" pos:start="304:51" pos:end="304:52">&lt;&gt;</argument_list></name><argument_list pos:start="304:53" pos:end="304:54">()</argument_list></call></expr></init></decl>;</decl_stmt>
		<for pos:start="305:17" pos:end="309:17">for <control pos:start="305:21" pos:end="305:53">(<init pos:start="305:22" pos:end="305:31"><decl pos:start="305:22" pos:end="305:30"><type pos:start="305:22" pos:end="305:24"><name pos:start="305:22" pos:end="305:24">int</name></type> <name pos:start="305:26" pos:end="305:26">i</name> <init pos:start="305:28" pos:end="305:30">= <expr pos:start="305:30" pos:end="305:30"><literal type="number" pos:start="305:30" pos:end="305:30">1</literal></expr></init></decl>;</init> <condition pos:start="305:33" pos:end="305:48"><expr pos:start="305:33" pos:end="305:47"><name pos:start="305:33" pos:end="305:33">i</name> <operator pos:start="305:35" pos:end="305:35">&lt;</operator> <name pos:start="305:37" pos:end="305:43">numUAVs</name> <operator pos:start="305:45" pos:end="305:45">+</operator> <literal type="number" pos:start="305:47" pos:end="305:47">1</literal></expr>;</condition> <incr pos:start="305:50" pos:end="305:52"><expr pos:start="305:50" pos:end="305:52"><name pos:start="305:50" pos:end="305:50">i</name><operator pos:start="305:51" pos:end="305:52">++</operator></expr></incr>)</control> <block pos:start="305:55" pos:end="309:17">{<block_content pos:start="306:25" pos:end="308:57">
			<decl_stmt pos:start="306:25" pos:end="306:76"><decl pos:start="306:25" pos:end="306:75"><type pos:start="306:25" pos:end="306:33"><name pos:start="306:25" pos:end="306:33">AFInfoBox</name></type> <name pos:start="306:35" pos:end="306:37">box</name> <init pos:start="306:39" pos:end="306:75">= <expr pos:start="306:41" pos:end="306:75"><operator pos:start="306:41" pos:end="306:41">(</operator><name pos:start="306:42" pos:end="306:50">AFInfoBox</name><operator pos:start="306:51" pos:end="306:51">)</operator> <call pos:start="306:53" pos:end="306:75"><name pos:start="306:53" pos:end="306:72"><name pos:start="306:53" pos:end="306:59">content</name><operator pos:start="306:60" pos:end="306:60">.</operator><name pos:start="306:61" pos:end="306:72">getComponent</name></name><argument_list pos:start="306:73" pos:end="306:75">(<argument pos:start="306:74" pos:end="306:74"><expr pos:start="306:74" pos:end="306:74"><name pos:start="306:74" pos:end="306:74">i</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<if_stmt pos:start="307:25" pos:end="308:57"><if pos:start="307:25" pos:end="308:57">if <condition pos:start="307:28" pos:end="307:47">(<expr pos:start="307:29" pos:end="307:46"><call pos:start="307:29" pos:end="307:46"><name pos:start="307:29" pos:end="307:44"><name pos:start="307:29" pos:end="307:31">box</name><operator pos:start="307:32" pos:end="307:32">.</operator><name pos:start="307:33" pos:end="307:44">getIsChecked</name></name><argument_list pos:start="307:45" pos:end="307:46">()</argument_list></call></expr>)</condition><block type="pseudo" pos:start="308:33" pos:end="308:57"><block_content pos:start="308:33" pos:end="308:57">
				<expr_stmt pos:start="308:33" pos:end="308:57"><expr pos:start="308:33" pos:end="308:56"><call pos:start="308:33" pos:end="308:56"><name pos:start="308:33" pos:end="308:41"><name pos:start="308:33" pos:end="308:37">names</name><operator pos:start="308:38" pos:end="308:38">.</operator><name pos:start="308:39" pos:end="308:41">add</name></name><argument_list pos:start="308:42" pos:end="308:56">(<argument pos:start="308:43" pos:end="308:55"><expr pos:start="308:43" pos:end="308:55"><call pos:start="308:43" pos:end="308:55"><name pos:start="308:43" pos:end="308:53"><name pos:start="308:43" pos:end="308:45">box</name><operator pos:start="308:46" pos:end="308:46">.</operator><name pos:start="308:47" pos:end="308:53">getName</name></name><argument_list pos:start="308:54" pos:end="308:55">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
		</block_content>}</block></for>
		<return pos:start="310:17" pos:end="310:29">return <expr pos:start="310:24" pos:end="310:28"><name pos:start="310:24" pos:end="310:28">names</name></expr>;</return>
	</block_content>}</block></function>

	<comment type="block" format="javadoc" pos:start="313:9" pos:end="316:11">/**
	 * 
	 * @return true if all the drones are checked
	 */</comment>
	<function pos:start="317:9" pos:end="325:9"><type pos:start="317:9" pos:end="317:23"><specifier pos:start="317:9" pos:end="317:15">private</specifier> <name pos:start="317:17" pos:end="317:23">boolean</name></type> <name pos:start="317:25" pos:end="317:37">getAllChecked</name><parameter_list pos:start="317:38" pos:end="317:39">()</parameter_list> <block pos:start="317:41" pos:end="325:9">{<block_content pos:start="318:17" pos:end="324:31">
		<decl_stmt pos:start="318:17" pos:end="318:39"><decl pos:start="318:17" pos:end="318:38"><type pos:start="318:17" pos:end="318:23"><name pos:start="318:17" pos:end="318:23">boolean</name></type> <name pos:start="318:25" pos:end="318:31">checked</name> <init pos:start="318:33" pos:end="318:38">= <expr pos:start="318:35" pos:end="318:38"><literal type="boolean" pos:start="318:35" pos:end="318:38">true</literal></expr></init></decl>;</decl_stmt>
		<for pos:start="319:17" pos:end="323:17">for <control pos:start="319:21" pos:end="319:53">(<init pos:start="319:22" pos:end="319:31"><decl pos:start="319:22" pos:end="319:30"><type pos:start="319:22" pos:end="319:24"><name pos:start="319:22" pos:end="319:24">int</name></type> <name pos:start="319:26" pos:end="319:26">i</name> <init pos:start="319:28" pos:end="319:30">= <expr pos:start="319:30" pos:end="319:30"><literal type="number" pos:start="319:30" pos:end="319:30">1</literal></expr></init></decl>;</init> <condition pos:start="319:33" pos:end="319:48"><expr pos:start="319:33" pos:end="319:47"><name pos:start="319:33" pos:end="319:33">i</name> <operator pos:start="319:35" pos:end="319:35">&lt;</operator> <name pos:start="319:37" pos:end="319:43">numUAVs</name> <operator pos:start="319:45" pos:end="319:45">+</operator> <literal type="number" pos:start="319:47" pos:end="319:47">1</literal></expr>;</condition> <incr pos:start="319:50" pos:end="319:52"><expr pos:start="319:50" pos:end="319:52"><name pos:start="319:50" pos:end="319:50">i</name><operator pos:start="319:51" pos:end="319:52">++</operator></expr></incr>)</control> <block pos:start="319:55" pos:end="323:17">{<block_content pos:start="320:25" pos:end="322:48">
			<decl_stmt pos:start="320:25" pos:end="320:76"><decl pos:start="320:25" pos:end="320:75"><type pos:start="320:25" pos:end="320:33"><name pos:start="320:25" pos:end="320:33">AFInfoBox</name></type> <name pos:start="320:35" pos:end="320:37">box</name> <init pos:start="320:39" pos:end="320:75">= <expr pos:start="320:41" pos:end="320:75"><operator pos:start="320:41" pos:end="320:41">(</operator><name pos:start="320:42" pos:end="320:50">AFInfoBox</name><operator pos:start="320:51" pos:end="320:51">)</operator> <call pos:start="320:53" pos:end="320:75"><name pos:start="320:53" pos:end="320:72"><name pos:start="320:53" pos:end="320:59">content</name><operator pos:start="320:60" pos:end="320:60">.</operator><name pos:start="320:61" pos:end="320:72">getComponent</name></name><argument_list pos:start="320:73" pos:end="320:75">(<argument pos:start="320:74" pos:end="320:74"><expr pos:start="320:74" pos:end="320:74"><name pos:start="320:74" pos:end="320:74">i</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<if_stmt pos:start="321:25" pos:end="322:48"><if pos:start="321:25" pos:end="322:48">if <condition pos:start="321:28" pos:end="321:48">(<expr pos:start="321:29" pos:end="321:47"><operator pos:start="321:29" pos:end="321:29">!</operator><call pos:start="321:30" pos:end="321:47"><name pos:start="321:30" pos:end="321:45"><name pos:start="321:30" pos:end="321:32">box</name><operator pos:start="321:33" pos:end="321:33">.</operator><name pos:start="321:34" pos:end="321:45">getIsChecked</name></name><argument_list pos:start="321:46" pos:end="321:47">()</argument_list></call></expr>)</condition><block type="pseudo" pos:start="322:33" pos:end="322:48"><block_content pos:start="322:33" pos:end="322:48">
				<expr_stmt pos:start="322:33" pos:end="322:48"><expr pos:start="322:33" pos:end="322:47"><name pos:start="322:33" pos:end="322:39">checked</name> <operator pos:start="322:41" pos:end="322:41">=</operator> <literal type="boolean" pos:start="322:43" pos:end="322:47">false</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>
		</block_content>}</block></for>
		<return pos:start="324:17" pos:end="324:31">return <expr pos:start="324:24" pos:end="324:30"><name pos:start="324:24" pos:end="324:30">checked</name></expr>;</return>
	</block_content>}</block></function>

	<comment type="block" format="javadoc" pos:start="327:9" pos:end="330:11">/**
	 * 
	 * @return true if all drones are not checked
	 */</comment>
	<function pos:start="331:9" pos:end="339:9"><type pos:start="331:9" pos:end="331:23"><specifier pos:start="331:9" pos:end="331:15">private</specifier> <name pos:start="331:17" pos:end="331:23">boolean</name></type> <name pos:start="331:25" pos:end="331:40">getAllNotChecked</name><parameter_list pos:start="331:41" pos:end="331:42">()</parameter_list> <block pos:start="331:44" pos:end="339:9">{<block_content pos:start="332:17" pos:end="338:34">
		<decl_stmt pos:start="332:17" pos:end="332:42"><decl pos:start="332:17" pos:end="332:41"><type pos:start="332:17" pos:end="332:23"><name pos:start="332:17" pos:end="332:23">boolean</name></type> <name pos:start="332:25" pos:end="332:34">notChecked</name> <init pos:start="332:36" pos:end="332:41">= <expr pos:start="332:38" pos:end="332:41"><literal type="boolean" pos:start="332:38" pos:end="332:41">true</literal></expr></init></decl>;</decl_stmt>
		<for pos:start="333:17" pos:end="337:17">for <control pos:start="333:21" pos:end="333:53">(<init pos:start="333:22" pos:end="333:31"><decl pos:start="333:22" pos:end="333:30"><type pos:start="333:22" pos:end="333:24"><name pos:start="333:22" pos:end="333:24">int</name></type> <name pos:start="333:26" pos:end="333:26">i</name> <init pos:start="333:28" pos:end="333:30">= <expr pos:start="333:30" pos:end="333:30"><literal type="number" pos:start="333:30" pos:end="333:30">1</literal></expr></init></decl>;</init> <condition pos:start="333:33" pos:end="333:48"><expr pos:start="333:33" pos:end="333:47"><name pos:start="333:33" pos:end="333:33">i</name> <operator pos:start="333:35" pos:end="333:35">&lt;</operator> <name pos:start="333:37" pos:end="333:43">numUAVs</name> <operator pos:start="333:45" pos:end="333:45">+</operator> <literal type="number" pos:start="333:47" pos:end="333:47">1</literal></expr>;</condition> <incr pos:start="333:50" pos:end="333:52"><expr pos:start="333:50" pos:end="333:52"><name pos:start="333:50" pos:end="333:50">i</name><operator pos:start="333:51" pos:end="333:52">++</operator></expr></incr>)</control> <block pos:start="333:55" pos:end="337:17">{<block_content pos:start="334:25" pos:end="336:51">
			<decl_stmt pos:start="334:25" pos:end="334:76"><decl pos:start="334:25" pos:end="334:75"><type pos:start="334:25" pos:end="334:33"><name pos:start="334:25" pos:end="334:33">AFInfoBox</name></type> <name pos:start="334:35" pos:end="334:37">box</name> <init pos:start="334:39" pos:end="334:75">= <expr pos:start="334:41" pos:end="334:75"><operator pos:start="334:41" pos:end="334:41">(</operator><name pos:start="334:42" pos:end="334:50">AFInfoBox</name><operator pos:start="334:51" pos:end="334:51">)</operator> <call pos:start="334:53" pos:end="334:75"><name pos:start="334:53" pos:end="334:72"><name pos:start="334:53" pos:end="334:59">content</name><operator pos:start="334:60" pos:end="334:60">.</operator><name pos:start="334:61" pos:end="334:72">getComponent</name></name><argument_list pos:start="334:73" pos:end="334:75">(<argument pos:start="334:74" pos:end="334:74"><expr pos:start="334:74" pos:end="334:74"><name pos:start="334:74" pos:end="334:74">i</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<if_stmt pos:start="335:25" pos:end="336:51"><if pos:start="335:25" pos:end="336:51">if <condition pos:start="335:28" pos:end="335:47">(<expr pos:start="335:29" pos:end="335:46"><call pos:start="335:29" pos:end="335:46"><name pos:start="335:29" pos:end="335:44"><name pos:start="335:29" pos:end="335:31">box</name><operator pos:start="335:32" pos:end="335:32">.</operator><name pos:start="335:33" pos:end="335:44">getIsChecked</name></name><argument_list pos:start="335:45" pos:end="335:46">()</argument_list></call></expr>)</condition><block type="pseudo" pos:start="336:33" pos:end="336:51"><block_content pos:start="336:33" pos:end="336:51">
				<expr_stmt pos:start="336:33" pos:end="336:51"><expr pos:start="336:33" pos:end="336:50"><name pos:start="336:33" pos:end="336:42">notChecked</name> <operator pos:start="336:44" pos:end="336:44">=</operator> <literal type="boolean" pos:start="336:46" pos:end="336:50">false</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>
		</block_content>}</block></for>
		<return pos:start="338:17" pos:end="338:34">return <expr pos:start="338:24" pos:end="338:33"><name pos:start="338:24" pos:end="338:33">notChecked</name></expr>;</return>
	</block_content>}</block></function>

	<comment type="block" format="javadoc" pos:start="341:9" pos:end="345:11">/**
	 * Expands or collapses all the boxes
	 * 
	 * @param visible
	 */</comment>
	<function pos:start="346:9" pos:end="351:9"><type pos:start="346:9" pos:end="346:19"><specifier pos:start="346:9" pos:end="346:14">public</specifier> <name pos:start="346:16" pos:end="346:19">void</name></type> <name pos:start="346:21" pos:end="346:33">setVisibility</name><parameter_list pos:start="346:34" pos:end="346:50">(<parameter pos:start="346:35" pos:end="346:49"><decl pos:start="346:35" pos:end="346:49"><type pos:start="346:35" pos:end="346:41"><name pos:start="346:35" pos:end="346:41">boolean</name></type> <name pos:start="346:43" pos:end="346:49">visible</name></decl></parameter>)</parameter_list> <block pos:start="346:52" pos:end="351:9">{<block_content pos:start="347:17" pos:end="350:17">
		<for pos:start="347:17" pos:end="350:17">for <control pos:start="347:21" pos:end="347:53">(<init pos:start="347:22" pos:end="347:31"><decl pos:start="347:22" pos:end="347:30"><type pos:start="347:22" pos:end="347:24"><name pos:start="347:22" pos:end="347:24">int</name></type> <name pos:start="347:26" pos:end="347:26">i</name> <init pos:start="347:28" pos:end="347:30">= <expr pos:start="347:30" pos:end="347:30"><literal type="number" pos:start="347:30" pos:end="347:30">1</literal></expr></init></decl>;</init> <condition pos:start="347:33" pos:end="347:48"><expr pos:start="347:33" pos:end="347:47"><name pos:start="347:33" pos:end="347:33">i</name> <operator pos:start="347:35" pos:end="347:35">&lt;</operator> <name pos:start="347:37" pos:end="347:43">numUAVs</name> <operator pos:start="347:45" pos:end="347:45">+</operator> <literal type="number" pos:start="347:47" pos:end="347:47">1</literal></expr>;</condition> <incr pos:start="347:50" pos:end="347:52"><expr pos:start="347:50" pos:end="347:52"><name pos:start="347:50" pos:end="347:50">i</name><operator pos:start="347:51" pos:end="347:52">++</operator></expr></incr>)</control> <block pos:start="347:55" pos:end="350:17">{<block_content pos:start="348:25" pos:end="349:51">
			<decl_stmt pos:start="348:25" pos:end="348:76"><decl pos:start="348:25" pos:end="348:75"><type pos:start="348:25" pos:end="348:33"><name pos:start="348:25" pos:end="348:33">AFInfoBox</name></type> <name pos:start="348:35" pos:end="348:37">box</name> <init pos:start="348:39" pos:end="348:75">= <expr pos:start="348:41" pos:end="348:75"><operator pos:start="348:41" pos:end="348:41">(</operator><name pos:start="348:42" pos:end="348:50">AFInfoBox</name><operator pos:start="348:51" pos:end="348:51">)</operator> <call pos:start="348:53" pos:end="348:75"><name pos:start="348:53" pos:end="348:72"><name pos:start="348:53" pos:end="348:59">content</name><operator pos:start="348:60" pos:end="348:60">.</operator><name pos:start="348:61" pos:end="348:72">getComponent</name></name><argument_list pos:start="348:73" pos:end="348:75">(<argument pos:start="348:74" pos:end="348:74"><expr pos:start="348:74" pos:end="348:74"><name pos:start="348:74" pos:end="348:74">i</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<expr_stmt pos:start="349:25" pos:end="349:51"><expr pos:start="349:25" pos:end="349:50"><call pos:start="349:25" pos:end="349:50"><name pos:start="349:25" pos:end="349:41"><name pos:start="349:25" pos:end="349:27">box</name><operator pos:start="349:28" pos:end="349:28">.</operator><name pos:start="349:29" pos:end="349:41">setBoxVisible</name></name><argument_list pos:start="349:42" pos:end="349:50">(<argument pos:start="349:43" pos:end="349:49"><expr pos:start="349:43" pos:end="349:49"><name pos:start="349:43" pos:end="349:49">visible</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		</block_content>}</block></for>
	</block_content>}</block></function>

	<comment type="block" format="javadoc" pos:start="353:9" pos:end="356:11">/**
	 * 
	 * @return true if all boxes are expanded
	 */</comment>
	<function pos:start="357:9" pos:end="365:9"><type pos:start="357:9" pos:end="357:23"><specifier pos:start="357:9" pos:end="357:15">private</specifier> <name pos:start="357:17" pos:end="357:23">boolean</name></type> <name pos:start="357:25" pos:end="357:37">getAllVisible</name><parameter_list pos:start="357:38" pos:end="357:39">()</parameter_list> <block pos:start="357:41" pos:end="365:9">{<block_content pos:start="358:17" pos:end="364:31">
		<decl_stmt pos:start="358:17" pos:end="358:39"><decl pos:start="358:17" pos:end="358:38"><type pos:start="358:17" pos:end="358:23"><name pos:start="358:17" pos:end="358:23">boolean</name></type> <name pos:start="358:25" pos:end="358:31">visible</name> <init pos:start="358:33" pos:end="358:38">= <expr pos:start="358:35" pos:end="358:38"><literal type="boolean" pos:start="358:35" pos:end="358:38">true</literal></expr></init></decl>;</decl_stmt>
		<for pos:start="359:17" pos:end="363:17">for <control pos:start="359:21" pos:end="359:53">(<init pos:start="359:22" pos:end="359:31"><decl pos:start="359:22" pos:end="359:30"><type pos:start="359:22" pos:end="359:24"><name pos:start="359:22" pos:end="359:24">int</name></type> <name pos:start="359:26" pos:end="359:26">i</name> <init pos:start="359:28" pos:end="359:30">= <expr pos:start="359:30" pos:end="359:30"><literal type="number" pos:start="359:30" pos:end="359:30">1</literal></expr></init></decl>;</init> <condition pos:start="359:33" pos:end="359:48"><expr pos:start="359:33" pos:end="359:47"><name pos:start="359:33" pos:end="359:33">i</name> <operator pos:start="359:35" pos:end="359:35">&lt;</operator> <name pos:start="359:37" pos:end="359:43">numUAVs</name> <operator pos:start="359:45" pos:end="359:45">+</operator> <literal type="number" pos:start="359:47" pos:end="359:47">1</literal></expr>;</condition> <incr pos:start="359:50" pos:end="359:52"><expr pos:start="359:50" pos:end="359:52"><name pos:start="359:50" pos:end="359:50">i</name><operator pos:start="359:51" pos:end="359:52">++</operator></expr></incr>)</control> <block pos:start="359:55" pos:end="363:17">{<block_content pos:start="360:25" pos:end="362:48">
			<decl_stmt pos:start="360:25" pos:end="360:76"><decl pos:start="360:25" pos:end="360:75"><type pos:start="360:25" pos:end="360:33"><name pos:start="360:25" pos:end="360:33">AFInfoBox</name></type> <name pos:start="360:35" pos:end="360:37">box</name> <init pos:start="360:39" pos:end="360:75">= <expr pos:start="360:41" pos:end="360:75"><operator pos:start="360:41" pos:end="360:41">(</operator><name pos:start="360:42" pos:end="360:50">AFInfoBox</name><operator pos:start="360:51" pos:end="360:51">)</operator> <call pos:start="360:53" pos:end="360:75"><name pos:start="360:53" pos:end="360:72"><name pos:start="360:53" pos:end="360:59">content</name><operator pos:start="360:60" pos:end="360:60">.</operator><name pos:start="360:61" pos:end="360:72">getComponent</name></name><argument_list pos:start="360:73" pos:end="360:75">(<argument pos:start="360:74" pos:end="360:74"><expr pos:start="360:74" pos:end="360:74"><name pos:start="360:74" pos:end="360:74">i</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<if_stmt pos:start="361:25" pos:end="362:48"><if pos:start="361:25" pos:end="362:48">if <condition pos:start="361:28" pos:end="361:49">(<expr pos:start="361:29" pos:end="361:48"><operator pos:start="361:29" pos:end="361:29">!</operator><call pos:start="361:30" pos:end="361:48"><name pos:start="361:30" pos:end="361:46"><name pos:start="361:30" pos:end="361:32">box</name><operator pos:start="361:33" pos:end="361:33">.</operator><name pos:start="361:34" pos:end="361:46">getBoxVisible</name></name><argument_list pos:start="361:47" pos:end="361:48">()</argument_list></call></expr>)</condition><block type="pseudo" pos:start="362:33" pos:end="362:48"><block_content pos:start="362:33" pos:end="362:48">
				<expr_stmt pos:start="362:33" pos:end="362:48"><expr pos:start="362:33" pos:end="362:47"><name pos:start="362:33" pos:end="362:39">visible</name> <operator pos:start="362:41" pos:end="362:41">=</operator> <literal type="boolean" pos:start="362:43" pos:end="362:47">false</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>
		</block_content>}</block></for>
		<return pos:start="364:17" pos:end="364:31">return <expr pos:start="364:24" pos:end="364:30"><name pos:start="364:24" pos:end="364:30">visible</name></expr>;</return>
	</block_content>}</block></function>

	<comment type="block" format="javadoc" pos:start="367:9" pos:end="370:11">/**
	 * 
	 * @return true if all boxes are collapsed
	 */</comment>
	<function pos:start="371:9" pos:end="379:9"><type pos:start="371:9" pos:end="371:23"><specifier pos:start="371:9" pos:end="371:15">private</specifier> <name pos:start="371:17" pos:end="371:23">boolean</name></type> <name pos:start="371:25" pos:end="371:40">getAllNotVisible</name><parameter_list pos:start="371:41" pos:end="371:42">()</parameter_list> <block pos:start="371:44" pos:end="379:9">{<block_content pos:start="372:17" pos:end="378:34">
		<decl_stmt pos:start="372:17" pos:end="372:42"><decl pos:start="372:17" pos:end="372:41"><type pos:start="372:17" pos:end="372:23"><name pos:start="372:17" pos:end="372:23">boolean</name></type> <name pos:start="372:25" pos:end="372:34">notVisible</name> <init pos:start="372:36" pos:end="372:41">= <expr pos:start="372:38" pos:end="372:41"><literal type="boolean" pos:start="372:38" pos:end="372:41">true</literal></expr></init></decl>;</decl_stmt>
		<for pos:start="373:17" pos:end="377:17">for <control pos:start="373:21" pos:end="373:53">(<init pos:start="373:22" pos:end="373:31"><decl pos:start="373:22" pos:end="373:30"><type pos:start="373:22" pos:end="373:24"><name pos:start="373:22" pos:end="373:24">int</name></type> <name pos:start="373:26" pos:end="373:26">i</name> <init pos:start="373:28" pos:end="373:30">= <expr pos:start="373:30" pos:end="373:30"><literal type="number" pos:start="373:30" pos:end="373:30">1</literal></expr></init></decl>;</init> <condition pos:start="373:33" pos:end="373:48"><expr pos:start="373:33" pos:end="373:47"><name pos:start="373:33" pos:end="373:33">i</name> <operator pos:start="373:35" pos:end="373:35">&lt;</operator> <name pos:start="373:37" pos:end="373:43">numUAVs</name> <operator pos:start="373:45" pos:end="373:45">+</operator> <literal type="number" pos:start="373:47" pos:end="373:47">1</literal></expr>;</condition> <incr pos:start="373:50" pos:end="373:52"><expr pos:start="373:50" pos:end="373:52"><name pos:start="373:50" pos:end="373:50">i</name><operator pos:start="373:51" pos:end="373:52">++</operator></expr></incr>)</control> <block pos:start="373:55" pos:end="377:17">{<block_content pos:start="374:25" pos:end="376:51">
			<decl_stmt pos:start="374:25" pos:end="374:76"><decl pos:start="374:25" pos:end="374:75"><type pos:start="374:25" pos:end="374:33"><name pos:start="374:25" pos:end="374:33">AFInfoBox</name></type> <name pos:start="374:35" pos:end="374:37">box</name> <init pos:start="374:39" pos:end="374:75">= <expr pos:start="374:41" pos:end="374:75"><operator pos:start="374:41" pos:end="374:41">(</operator><name pos:start="374:42" pos:end="374:50">AFInfoBox</name><operator pos:start="374:51" pos:end="374:51">)</operator> <call pos:start="374:53" pos:end="374:75"><name pos:start="374:53" pos:end="374:72"><name pos:start="374:53" pos:end="374:59">content</name><operator pos:start="374:60" pos:end="374:60">.</operator><name pos:start="374:61" pos:end="374:72">getComponent</name></name><argument_list pos:start="374:73" pos:end="374:75">(<argument pos:start="374:74" pos:end="374:74"><expr pos:start="374:74" pos:end="374:74"><name pos:start="374:74" pos:end="374:74">i</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<if_stmt pos:start="375:25" pos:end="376:51"><if pos:start="375:25" pos:end="376:51">if <condition pos:start="375:28" pos:end="375:48">(<expr pos:start="375:29" pos:end="375:47"><call pos:start="375:29" pos:end="375:47"><name pos:start="375:29" pos:end="375:45"><name pos:start="375:29" pos:end="375:31">box</name><operator pos:start="375:32" pos:end="375:32">.</operator><name pos:start="375:33" pos:end="375:45">getBoxVisible</name></name><argument_list pos:start="375:46" pos:end="375:47">()</argument_list></call></expr>)</condition><block type="pseudo" pos:start="376:33" pos:end="376:51"><block_content pos:start="376:33" pos:end="376:51">
				<expr_stmt pos:start="376:33" pos:end="376:51"><expr pos:start="376:33" pos:end="376:50"><name pos:start="376:33" pos:end="376:42">notVisible</name> <operator pos:start="376:44" pos:end="376:44">=</operator> <literal type="boolean" pos:start="376:46" pos:end="376:50">false</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>
		</block_content>}</block></for>
		<return pos:start="378:17" pos:end="378:34">return <expr pos:start="378:24" pos:end="378:33"><name pos:start="378:24" pos:end="378:33">notVisible</name></expr>;</return>
	</block_content>}</block></function>

	<function pos:start="381:9" pos:end="386:9"><type pos:start="381:9" pos:end="381:19"><specifier pos:start="381:9" pos:end="381:14">public</specifier> <name pos:start="381:16" pos:end="381:19">void</name></type> <name pos:start="381:21" pos:end="381:33">setAllToHover</name><parameter_list pos:start="381:34" pos:end="381:35">()</parameter_list> <block pos:start="381:37" pos:end="386:9">{<block_content pos:start="382:17" pos:end="385:17">
		<for pos:start="382:17" pos:end="385:17">for <control pos:start="382:21" pos:end="382:53">(<init pos:start="382:22" pos:end="382:31"><decl pos:start="382:22" pos:end="382:30"><type pos:start="382:22" pos:end="382:24"><name pos:start="382:22" pos:end="382:24">int</name></type> <name pos:start="382:26" pos:end="382:26">i</name> <init pos:start="382:28" pos:end="382:30">= <expr pos:start="382:30" pos:end="382:30"><literal type="number" pos:start="382:30" pos:end="382:30">1</literal></expr></init></decl>;</init> <condition pos:start="382:33" pos:end="382:48"><expr pos:start="382:33" pos:end="382:47"><name pos:start="382:33" pos:end="382:33">i</name> <operator pos:start="382:35" pos:end="382:35">&lt;</operator> <name pos:start="382:37" pos:end="382:43">numUAVs</name> <operator pos:start="382:45" pos:end="382:45">+</operator> <literal type="number" pos:start="382:47" pos:end="382:47">1</literal></expr>;</condition> <incr pos:start="382:50" pos:end="382:52"><expr pos:start="382:50" pos:end="382:52"><name pos:start="382:50" pos:end="382:50">i</name><operator pos:start="382:51" pos:end="382:52">++</operator></expr></incr>)</control> <block pos:start="382:55" pos:end="385:17">{<block_content pos:start="383:25" pos:end="384:50">
			<decl_stmt pos:start="383:25" pos:end="383:76"><decl pos:start="383:25" pos:end="383:75"><type pos:start="383:25" pos:end="383:33"><name pos:start="383:25" pos:end="383:33">AFInfoBox</name></type> <name pos:start="383:35" pos:end="383:37">box</name> <init pos:start="383:39" pos:end="383:75">= <expr pos:start="383:41" pos:end="383:75"><operator pos:start="383:41" pos:end="383:41">(</operator><name pos:start="383:42" pos:end="383:50">AFInfoBox</name><operator pos:start="383:51" pos:end="383:51">)</operator> <call pos:start="383:53" pos:end="383:75"><name pos:start="383:53" pos:end="383:72"><name pos:start="383:53" pos:end="383:59">content</name><operator pos:start="383:60" pos:end="383:60">.</operator><name pos:start="383:61" pos:end="383:72">getComponent</name></name><argument_list pos:start="383:73" pos:end="383:75">(<argument pos:start="383:74" pos:end="383:74"><expr pos:start="383:74" pos:end="383:74"><name pos:start="383:74" pos:end="383:74">i</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<expr_stmt pos:start="384:25" pos:end="384:50"><expr pos:start="384:25" pos:end="384:49"><call pos:start="384:25" pos:end="384:49"><name pos:start="384:25" pos:end="384:43"><name pos:start="384:25" pos:end="384:27">box</name><operator pos:start="384:28" pos:end="384:28">.</operator><name pos:start="384:29" pos:end="384:43">setHoverInPlace</name></name><argument_list pos:start="384:44" pos:end="384:49">(<argument pos:start="384:45" pos:end="384:48"><expr pos:start="384:45" pos:end="384:48"><literal type="boolean" pos:start="384:45" pos:end="384:48">true</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		</block_content>}</block></for>
	</block_content>}</block></function>

	<function pos:start="388:9" pos:end="390:9"><type pos:start="388:9" pos:end="388:29"><specifier pos:start="388:9" pos:end="388:14">public</specifier> <name pos:start="388:16" pos:end="388:29">VerticalLayout</name></type> <name pos:start="388:31" pos:end="388:38">getBoxes</name><parameter_list pos:start="388:39" pos:end="388:40">()</parameter_list> <block pos:start="388:42" pos:end="390:9">{<block_content pos:start="389:17" pos:end="389:31">
		<return pos:start="389:17" pos:end="389:31">return <expr pos:start="389:24" pos:end="389:30"><name pos:start="389:24" pos:end="389:30">content</name></expr>;</return>
	</block_content>}</block></function>

	<function pos:start="392:9" pos:end="394:9"><type pos:start="392:9" pos:end="392:18"><specifier pos:start="392:9" pos:end="392:14">public</specifier> <name pos:start="392:16" pos:end="392:18">int</name></type> <name pos:start="392:20" pos:end="392:29">getNumUAVS</name><parameter_list pos:start="392:30" pos:end="392:31">()</parameter_list> <block pos:start="392:33" pos:end="394:9">{<block_content pos:start="393:17" pos:end="393:31">
		<return pos:start="393:17" pos:end="393:31">return <expr pos:start="393:24" pos:end="393:30"><name pos:start="393:24" pos:end="393:30">numUAVs</name></expr>;</return>
	</block_content>}</block></function>

	<comment type="block" format="javadoc" pos:start="396:9" pos:end="398:11">/**
	 * gets updated information from dronology about the UAV's location information and status. adds any new drones to the panel and removes any drones that were deactivated
	 */</comment>
	<function pos:start="399:9" pos:end="492:9"><annotation pos:start="399:9" pos:end="399:40">@<name pos:start="399:10" pos:end="399:25">SuppressWarnings</name><argument_list pos:start="399:26" pos:end="399:40">(<argument pos:start="399:27" pos:end="399:39"><expr pos:start="399:27" pos:end="399:39"><literal type="string" pos:start="399:27" pos:end="399:39">"deprecation"</literal></expr></argument>)</argument_list></annotation> 
	<type pos:start="400:9" pos:end="400:19"><specifier pos:start="400:9" pos:end="400:14">public</specifier> <name pos:start="400:16" pos:end="400:19">void</name></type> <name pos:start="400:21" pos:end="400:33">refreshDrones</name><parameter_list pos:start="400:34" pos:end="400:35">()</parameter_list> <block pos:start="400:37" pos:end="492:9">{<block_content pos:start="402:17" pos:end="491:17">
		<comment type="line" pos:start="401:17" pos:end="401:52">// update select/deselect all button</comment>
		<if_stmt pos:start="402:17" pos:end="408:17"><if pos:start="402:17" pos:end="405:17">if <condition pos:start="402:20" pos:end="402:107">(<expr pos:start="402:21" pos:end="402:106"><call pos:start="402:21" pos:end="402:40"><name pos:start="402:21" pos:end="402:38"><name pos:start="402:21" pos:end="402:24">this</name><operator pos:start="402:25" pos:end="402:25">.</operator><name pos:start="402:26" pos:end="402:38">getAllChecked</name></name><argument_list pos:start="402:39" pos:end="402:40">()</argument_list></call> <operator pos:start="402:42" pos:end="402:43">&amp;&amp;</operator> <call pos:start="402:45" pos:end="402:69"><name pos:start="402:45" pos:end="402:67"><name pos:start="402:45" pos:end="402:56">selectButton</name><operator pos:start="402:57" pos:end="402:57">.</operator><name pos:start="402:58" pos:end="402:67">getCaption</name></name><argument_list pos:start="402:68" pos:end="402:69">()</argument_list></call><operator pos:start="402:70" pos:end="402:70">.</operator><call pos:start="402:71" pos:end="402:90"><name pos:start="402:71" pos:end="402:76">equals</name><argument_list pos:start="402:77" pos:end="402:90">(<argument pos:start="402:78" pos:end="402:89"><expr pos:start="402:78" pos:end="402:89"><literal type="string" pos:start="402:78" pos:end="402:89">"Select all"</literal></expr></argument>)</argument_list></call> <operator pos:start="402:92" pos:end="402:93">&amp;&amp;</operator> <name pos:start="402:95" pos:end="402:101">numUAVs</name> <operator pos:start="402:103" pos:end="402:104">!=</operator> <literal type="number" pos:start="402:106" pos:end="402:106">0</literal></expr>)</condition> <block pos:start="402:109" pos:end="405:17">{<block_content pos:start="403:25" pos:end="404:42">
			<expr_stmt pos:start="403:25" pos:end="403:64"><expr pos:start="403:25" pos:end="403:63"><call pos:start="403:25" pos:end="403:63"><name pos:start="403:25" pos:end="403:47"><name pos:start="403:25" pos:end="403:36">selectButton</name><operator pos:start="403:37" pos:end="403:37">.</operator><name pos:start="403:38" pos:end="403:47">setCaption</name></name><argument_list pos:start="403:48" pos:end="403:63">(<argument pos:start="403:49" pos:end="403:62"><expr pos:start="403:49" pos:end="403:62"><literal type="string" pos:start="403:49" pos:end="403:62">"Deselect all"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt pos:start="404:25" pos:end="404:42"><expr pos:start="404:25" pos:end="404:41"><name pos:start="404:25" pos:end="404:33">selectAll</name> <operator pos:start="404:35" pos:end="404:35">=</operator> <literal type="boolean" pos:start="404:37" pos:end="404:41">false</literal></expr>;</expr_stmt>
		</block_content>}</block></if> <if type="elseif" pos:start="405:19" pos:end="408:17">else if <condition pos:start="405:27" pos:end="405:119">(<expr pos:start="405:28" pos:end="405:118"><call pos:start="405:28" pos:end="405:50"><name pos:start="405:28" pos:end="405:48"><name pos:start="405:28" pos:end="405:31">this</name><operator pos:start="405:32" pos:end="405:32">.</operator><name pos:start="405:33" pos:end="405:48">getAllNotChecked</name></name><argument_list pos:start="405:49" pos:end="405:50">()</argument_list></call> <operator pos:start="405:52" pos:end="405:53">&amp;&amp;</operator> <call pos:start="405:55" pos:end="405:79"><name pos:start="405:55" pos:end="405:77"><name pos:start="405:55" pos:end="405:66">selectButton</name><operator pos:start="405:67" pos:end="405:67">.</operator><name pos:start="405:68" pos:end="405:77">getCaption</name></name><argument_list pos:start="405:78" pos:end="405:79">()</argument_list></call><operator pos:start="405:80" pos:end="405:80">.</operator><call pos:start="405:81" pos:end="405:102"><name pos:start="405:81" pos:end="405:86">equals</name><argument_list pos:start="405:87" pos:end="405:102">(<argument pos:start="405:88" pos:end="405:101"><expr pos:start="405:88" pos:end="405:101"><literal type="string" pos:start="405:88" pos:end="405:101">"Deselect all"</literal></expr></argument>)</argument_list></call> <operator pos:start="405:104" pos:end="405:105">&amp;&amp;</operator> <name pos:start="405:107" pos:end="405:113">numUAVs</name> <operator pos:start="405:115" pos:end="405:116">!=</operator> <literal type="number" pos:start="405:118" pos:end="405:118">0</literal></expr>)</condition> <block pos:start="405:121" pos:end="408:17">{<block_content pos:start="406:25" pos:end="407:41">
			<expr_stmt pos:start="406:25" pos:end="406:62"><expr pos:start="406:25" pos:end="406:61"><call pos:start="406:25" pos:end="406:61"><name pos:start="406:25" pos:end="406:47"><name pos:start="406:25" pos:end="406:36">selectButton</name><operator pos:start="406:37" pos:end="406:37">.</operator><name pos:start="406:38" pos:end="406:47">setCaption</name></name><argument_list pos:start="406:48" pos:end="406:61">(<argument pos:start="406:49" pos:end="406:60"><expr pos:start="406:49" pos:end="406:60"><literal type="string" pos:start="406:49" pos:end="406:60">"Select all"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt pos:start="407:25" pos:end="407:41"><expr pos:start="407:25" pos:end="407:40"><name pos:start="407:25" pos:end="407:33">selectAll</name> <operator pos:start="407:35" pos:end="407:35">=</operator> <literal type="boolean" pos:start="407:37" pos:end="407:40">true</literal></expr>;</expr_stmt>
		</block_content>}</block></if></if_stmt>
		<comment type="line" pos:start="409:17" pos:end="409:52">// update expand/collapse all button</comment>
		<if_stmt pos:start="410:17" pos:end="416:17"><if pos:start="410:17" pos:end="413:17">if <condition pos:start="410:20" pos:end="410:108">(<expr pos:start="410:21" pos:end="410:107"><call pos:start="410:21" pos:end="410:40"><name pos:start="410:21" pos:end="410:38"><name pos:start="410:21" pos:end="410:24">this</name><operator pos:start="410:25" pos:end="410:25">.</operator><name pos:start="410:26" pos:end="410:38">getAllVisible</name></name><argument_list pos:start="410:39" pos:end="410:40">()</argument_list></call> <operator pos:start="410:42" pos:end="410:43">&amp;&amp;</operator> <call pos:start="410:45" pos:end="410:70"><name pos:start="410:45" pos:end="410:68"><name pos:start="410:45" pos:end="410:57">visibleButton</name><operator pos:start="410:58" pos:end="410:58">.</operator><name pos:start="410:59" pos:end="410:68">getCaption</name></name><argument_list pos:start="410:69" pos:end="410:70">()</argument_list></call><operator pos:start="410:71" pos:end="410:71">.</operator><call pos:start="410:72" pos:end="410:91"><name pos:start="410:72" pos:end="410:77">equals</name><argument_list pos:start="410:78" pos:end="410:91">(<argument pos:start="410:79" pos:end="410:90"><expr pos:start="410:79" pos:end="410:90"><literal type="string" pos:start="410:79" pos:end="410:90">"Expand all"</literal></expr></argument>)</argument_list></call> <operator pos:start="410:93" pos:end="410:94">&amp;&amp;</operator> <name pos:start="410:96" pos:end="410:102">numUAVs</name> <operator pos:start="410:104" pos:end="410:105">!=</operator> <literal type="number" pos:start="410:107" pos:end="410:107">0</literal></expr>)</condition> <block pos:start="410:110" pos:end="413:17">{<block_content pos:start="411:25" pos:end="412:39">
			<expr_stmt pos:start="411:25" pos:end="411:65"><expr pos:start="411:25" pos:end="411:64"><call pos:start="411:25" pos:end="411:64"><name pos:start="411:25" pos:end="411:48"><name pos:start="411:25" pos:end="411:37">visibleButton</name><operator pos:start="411:38" pos:end="411:38">.</operator><name pos:start="411:39" pos:end="411:48">setCaption</name></name><argument_list pos:start="411:49" pos:end="411:64">(<argument pos:start="411:50" pos:end="411:63"><expr pos:start="411:50" pos:end="411:63"><literal type="string" pos:start="411:50" pos:end="411:63">"Collapse all"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt pos:start="412:25" pos:end="412:39"><expr pos:start="412:25" pos:end="412:38"><name pos:start="412:25" pos:end="412:31">visible</name> <operator pos:start="412:33" pos:end="412:33">=</operator> <literal type="boolean" pos:start="412:35" pos:end="412:38">true</literal></expr>;</expr_stmt>
		</block_content>}</block></if> <if type="elseif" pos:start="413:19" pos:end="416:17">else if <condition pos:start="413:27" pos:end="413:120">(<expr pos:start="413:28" pos:end="413:119"><call pos:start="413:28" pos:end="413:50"><name pos:start="413:28" pos:end="413:48"><name pos:start="413:28" pos:end="413:31">this</name><operator pos:start="413:32" pos:end="413:32">.</operator><name pos:start="413:33" pos:end="413:48">getAllNotVisible</name></name><argument_list pos:start="413:49" pos:end="413:50">()</argument_list></call> <operator pos:start="413:52" pos:end="413:53">&amp;&amp;</operator> <call pos:start="413:55" pos:end="413:80"><name pos:start="413:55" pos:end="413:78"><name pos:start="413:55" pos:end="413:67">visibleButton</name><operator pos:start="413:68" pos:end="413:68">.</operator><name pos:start="413:69" pos:end="413:78">getCaption</name></name><argument_list pos:start="413:79" pos:end="413:80">()</argument_list></call><operator pos:start="413:81" pos:end="413:81">.</operator><call pos:start="413:82" pos:end="413:103"><name pos:start="413:82" pos:end="413:87">equals</name><argument_list pos:start="413:88" pos:end="413:103">(<argument pos:start="413:89" pos:end="413:102"><expr pos:start="413:89" pos:end="413:102"><literal type="string" pos:start="413:89" pos:end="413:102">"Collapse all"</literal></expr></argument>)</argument_list></call> <operator pos:start="413:105" pos:end="413:106">&amp;&amp;</operator> <name pos:start="413:108" pos:end="413:114">numUAVs</name> <operator pos:start="413:116" pos:end="413:117">!=</operator> <literal type="number" pos:start="413:119" pos:end="413:119">0</literal></expr>)</condition> <block pos:start="413:122" pos:end="416:17">{<block_content pos:start="414:25" pos:end="415:40">
			<expr_stmt pos:start="414:25" pos:end="414:63"><expr pos:start="414:25" pos:end="414:62"><call pos:start="414:25" pos:end="414:62"><name pos:start="414:25" pos:end="414:48"><name pos:start="414:25" pos:end="414:37">visibleButton</name><operator pos:start="414:38" pos:end="414:38">.</operator><name pos:start="414:39" pos:end="414:48">setCaption</name></name><argument_list pos:start="414:49" pos:end="414:62">(<argument pos:start="414:50" pos:end="414:61"><expr pos:start="414:50" pos:end="414:61"><literal type="string" pos:start="414:50" pos:end="414:61">"Expand all"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt pos:start="415:25" pos:end="415:40"><expr pos:start="415:25" pos:end="415:39"><name pos:start="415:25" pos:end="415:31">visible</name> <operator pos:start="415:33" pos:end="415:33">=</operator> <literal type="boolean" pos:start="415:35" pos:end="415:39">false</literal></expr>;</expr_stmt>
		</block_content>}</block></if></if_stmt>
		<try pos:start="417:17" pos:end="466:17">try <block pos:start="417:21" pos:end="455:17">{<block_content pos:start="419:25" pos:end="454:25">

			<decl_stmt pos:start="419:25" pos:end="419:82"><decl pos:start="419:25" pos:end="419:81"><type pos:start="419:25" pos:end="419:45"><name pos:start="419:25" pos:end="419:45"><name pos:start="419:25" pos:end="419:34">Collection</name><argument_list type="generic" pos:start="419:35" pos:end="419:45">&lt;<argument pos:start="419:36" pos:end="419:44"><name pos:start="419:36" pos:end="419:44">IUAVProxy</name></argument>&gt;</argument_list></name></type> <name pos:start="419:47" pos:end="419:55">newDrones</name> <init pos:start="419:57" pos:end="419:81">= <expr pos:start="419:59" pos:end="419:81"><call pos:start="419:59" pos:end="419:81"><name pos:start="419:59" pos:end="419:79"><name pos:start="419:59" pos:end="419:65">service</name><operator pos:start="419:66" pos:end="419:66">.</operator><name pos:start="419:67" pos:end="419:79">getActiveUAVs</name></name><argument_list pos:start="419:80" pos:end="419:81">()</argument_list></call></expr></init></decl>;</decl_stmt>
			<comment type="block" format="javadoc" pos:start="420:25" pos:end="422:27">/**
			 * add new drones to the panel
			 */</comment>
			<if_stmt pos:start="423:25" pos:end="435:25"><if pos:start="423:25" pos:end="435:25">if <condition pos:start="423:28" pos:end="423:61">(<expr pos:start="423:29" pos:end="423:60"><call pos:start="423:29" pos:end="423:44"><name pos:start="423:29" pos:end="423:42"><name pos:start="423:29" pos:end="423:37">newDrones</name><operator pos:start="423:38" pos:end="423:38">.</operator><name pos:start="423:39" pos:end="423:42">size</name></name><argument_list pos:start="423:43" pos:end="423:44">()</argument_list></call> <operator pos:start="423:46" pos:end="423:46">&gt;</operator> <call pos:start="423:48" pos:end="423:60"><name pos:start="423:48" pos:end="423:58"><name pos:start="423:48" pos:end="423:53">drones</name><operator pos:start="423:54" pos:end="423:54">.</operator><name pos:start="423:55" pos:end="423:58">size</name></name><argument_list pos:start="423:59" pos:end="423:60">()</argument_list></call></expr>)</condition> <block pos:start="423:63" pos:end="435:25">{<block_content pos:start="424:33" pos:end="434:33">
				<for pos:start="424:33" pos:end="434:33">for <control pos:start="424:37" pos:end="424:62">(<init pos:start="424:38" pos:end="424:61"><decl pos:start="424:38" pos:end="424:61"><type pos:start="424:38" pos:end="424:46"><name pos:start="424:38" pos:end="424:46">IUAVProxy</name></type> <name pos:start="424:48" pos:end="424:49">e1</name> <range pos:start="424:51" pos:end="424:61">: <expr pos:start="424:53" pos:end="424:61"><name pos:start="424:53" pos:end="424:61">newDrones</name></expr></range></decl></init>)</control> <block pos:start="424:64" pos:end="434:33">{<block_content pos:start="425:41" pos:end="433:41">
					<decl_stmt pos:start="425:41" pos:end="425:66"><decl pos:start="425:41" pos:end="425:65"><type pos:start="425:41" pos:end="425:47"><name pos:start="425:41" pos:end="425:47">boolean</name></type> <name pos:start="425:49" pos:end="425:57">nameMatch</name> <init pos:start="425:59" pos:end="425:65">= <expr pos:start="425:61" pos:end="425:65"><literal type="boolean" pos:start="425:61" pos:end="425:65">false</literal></expr></init></decl>;</decl_stmt>
					<for pos:start="426:41" pos:end="430:41">for <control pos:start="426:45" pos:end="426:67">(<init pos:start="426:46" pos:end="426:66"><decl pos:start="426:46" pos:end="426:66"><type pos:start="426:46" pos:end="426:54"><name pos:start="426:46" pos:end="426:54">IUAVProxy</name></type> <name pos:start="426:56" pos:end="426:57">e2</name> <range pos:start="426:59" pos:end="426:66">: <expr pos:start="426:61" pos:end="426:66"><name pos:start="426:61" pos:end="426:66">drones</name></expr></range></decl></init>)</control> <block pos:start="426:69" pos:end="430:41">{<block_content pos:start="427:49" pos:end="429:49">
						<if_stmt pos:start="427:49" pos:end="429:49"><if pos:start="427:49" pos:end="429:49">if <condition pos:start="427:52" pos:end="427:82">(<expr pos:start="427:53" pos:end="427:81"><call pos:start="427:53" pos:end="427:62"><name pos:start="427:53" pos:end="427:60"><name pos:start="427:53" pos:end="427:54">e1</name><operator pos:start="427:55" pos:end="427:55">.</operator><name pos:start="427:56" pos:end="427:60">getID</name></name><argument_list pos:start="427:61" pos:end="427:62">()</argument_list></call><operator pos:start="427:63" pos:end="427:63">.</operator><call pos:start="427:64" pos:end="427:81"><name pos:start="427:64" pos:end="427:69">equals</name><argument_list pos:start="427:70" pos:end="427:81">(<argument pos:start="427:71" pos:end="427:80"><expr pos:start="427:71" pos:end="427:80"><call pos:start="427:71" pos:end="427:80"><name pos:start="427:71" pos:end="427:78"><name pos:start="427:71" pos:end="427:72">e2</name><operator pos:start="427:73" pos:end="427:73">.</operator><name pos:start="427:74" pos:end="427:78">getID</name></name><argument_list pos:start="427:79" pos:end="427:80">()</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="427:84" pos:end="429:49">{<block_content pos:start="428:57" pos:end="428:73">
							<expr_stmt pos:start="428:57" pos:end="428:73"><expr pos:start="428:57" pos:end="428:72"><name pos:start="428:57" pos:end="428:65">nameMatch</name> <operator pos:start="428:67" pos:end="428:67">=</operator> <literal type="boolean" pos:start="428:69" pos:end="428:72">true</literal></expr>;</expr_stmt>
						</block_content>}</block></if></if_stmt>
					</block_content>}</block></for>
					<if_stmt pos:start="431:41" pos:end="433:41"><if pos:start="431:41" pos:end="433:41">if <condition pos:start="431:44" pos:end="431:55">(<expr pos:start="431:45" pos:end="431:54"><operator pos:start="431:45" pos:end="431:45">!</operator><name pos:start="431:46" pos:end="431:54">nameMatch</name></expr>)</condition> <block pos:start="431:57" pos:end="433:41">{<block_content pos:start="432:49" pos:end="432:100">
						<expr_stmt pos:start="432:49" pos:end="432:100"><expr pos:start="432:49" pos:end="432:99"><call pos:start="432:49" pos:end="432:99"><name pos:start="432:49" pos:end="432:59"><name pos:start="432:49" pos:end="432:52">this</name><operator pos:start="432:53" pos:end="432:53">.</operator><name pos:start="432:54" pos:end="432:59">addBox</name></name><argument_list pos:start="432:60" pos:end="432:99">(<argument pos:start="432:61" pos:end="432:65"><expr pos:start="432:61" pos:end="432:65"><literal type="boolean" pos:start="432:61" pos:end="432:65">false</literal></expr></argument>, <argument pos:start="432:68" pos:end="432:91"><expr pos:start="432:68" pos:end="432:91"><operator pos:start="432:68" pos:end="432:70">new</operator> <call pos:start="432:72" pos:end="432:91"><name pos:start="432:72" pos:end="432:87">UAVStatusWrapper</name><argument_list pos:start="432:88" pos:end="432:91">(<argument pos:start="432:89" pos:end="432:90"><expr pos:start="432:89" pos:end="432:90"><name pos:start="432:89" pos:end="432:90">e1</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="432:94" pos:end="432:98"><expr pos:start="432:94" pos:end="432:98"><literal type="boolean" pos:start="432:94" pos:end="432:98">false</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					</block_content>}</block></if></if_stmt>
				</block_content>}</block></for>
			</block_content>}</block></if></if_stmt>
			<comment type="block" format="javadoc" pos:start="436:25" pos:end="438:27">/**
			 * delete old drones from the panel
			 */</comment>
			<if_stmt pos:start="439:25" pos:end="454:25"><if pos:start="439:25" pos:end="454:25">if <condition pos:start="439:28" pos:end="439:61">(<expr pos:start="439:29" pos:end="439:60"><call pos:start="439:29" pos:end="439:44"><name pos:start="439:29" pos:end="439:42"><name pos:start="439:29" pos:end="439:37">newDrones</name><operator pos:start="439:38" pos:end="439:38">.</operator><name pos:start="439:39" pos:end="439:42">size</name></name><argument_list pos:start="439:43" pos:end="439:44">()</argument_list></call> <operator pos:start="439:46" pos:end="439:46">&lt;</operator> <call pos:start="439:48" pos:end="439:60"><name pos:start="439:48" pos:end="439:58"><name pos:start="439:48" pos:end="439:53">drones</name><operator pos:start="439:54" pos:end="439:54">.</operator><name pos:start="439:55" pos:end="439:58">size</name></name><argument_list pos:start="439:59" pos:end="439:60">()</argument_list></call></expr>)</condition> <block pos:start="439:63" pos:end="454:25">{<block_content pos:start="440:33" pos:end="453:33">
				<for pos:start="440:33" pos:end="453:33">for <control pos:start="440:37" pos:end="440:60">(<init pos:start="440:38" pos:end="440:59"><decl pos:start="440:38" pos:end="440:59"><type pos:start="440:38" pos:end="440:46"><name pos:start="440:38" pos:end="440:46">IUAVProxy</name></type> <name pos:start="440:48" pos:end="440:50">old</name> <range pos:start="440:52" pos:end="440:59">: <expr pos:start="440:54" pos:end="440:59"><name pos:start="440:54" pos:end="440:59">drones</name></expr></range></decl></init>)</control> <block pos:start="440:62" pos:end="453:33">{<block_content pos:start="441:41" pos:end="452:41">
					<decl_stmt pos:start="441:41" pos:end="441:63"><decl pos:start="441:41" pos:end="441:62"><type pos:start="441:41" pos:end="441:47"><name pos:start="441:41" pos:end="441:47">boolean</name></type> <name pos:start="441:49" pos:end="441:54">exists</name> <init pos:start="441:56" pos:end="441:62">= <expr pos:start="441:58" pos:end="441:62"><literal type="boolean" pos:start="441:58" pos:end="441:62">false</literal></expr></init></decl>;</decl_stmt>
					<for pos:start="442:41" pos:end="445:41">for <control pos:start="442:45" pos:end="442:75">(<init pos:start="442:46" pos:end="442:74"><decl pos:start="442:46" pos:end="442:74"><type pos:start="442:46" pos:end="442:54"><name pos:start="442:46" pos:end="442:54">IUAVProxy</name></type> <name pos:start="442:56" pos:end="442:62">current</name> <range pos:start="442:64" pos:end="442:74">: <expr pos:start="442:66" pos:end="442:74"><name pos:start="442:66" pos:end="442:74">newDrones</name></expr></range></decl></init>)</control> <block pos:start="442:77" pos:end="445:41">{<block_content pos:start="443:49" pos:end="444:70">
						<if_stmt pos:start="443:49" pos:end="444:70"><if pos:start="443:49" pos:end="444:70">if <condition pos:start="443:52" pos:end="443:88">(<expr pos:start="443:53" pos:end="443:87"><call pos:start="443:53" pos:end="443:63"><name pos:start="443:53" pos:end="443:61"><name pos:start="443:53" pos:end="443:55">old</name><operator pos:start="443:56" pos:end="443:56">.</operator><name pos:start="443:57" pos:end="443:61">getID</name></name><argument_list pos:start="443:62" pos:end="443:63">()</argument_list></call><operator pos:start="443:64" pos:end="443:64">.</operator><call pos:start="443:65" pos:end="443:87"><name pos:start="443:65" pos:end="443:70">equals</name><argument_list pos:start="443:71" pos:end="443:87">(<argument pos:start="443:72" pos:end="443:86"><expr pos:start="443:72" pos:end="443:86"><call pos:start="443:72" pos:end="443:86"><name pos:start="443:72" pos:end="443:84"><name pos:start="443:72" pos:end="443:78">current</name><operator pos:start="443:79" pos:end="443:79">.</operator><name pos:start="443:80" pos:end="443:84">getID</name></name><argument_list pos:start="443:85" pos:end="443:86">()</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="444:57" pos:end="444:70"><block_content pos:start="444:57" pos:end="444:70">
							<expr_stmt pos:start="444:57" pos:end="444:70"><expr pos:start="444:57" pos:end="444:69"><name pos:start="444:57" pos:end="444:62">exists</name> <operator pos:start="444:64" pos:end="444:64">=</operator> <literal type="boolean" pos:start="444:66" pos:end="444:69">true</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>
					</block_content>}</block></for>
					<if_stmt pos:start="446:41" pos:end="452:41"><if pos:start="446:41" pos:end="452:41">if <condition pos:start="446:44" pos:end="446:52">(<expr pos:start="446:45" pos:end="446:51"><operator pos:start="446:45" pos:end="446:45">!</operator><name pos:start="446:46" pos:end="446:51">exists</name></expr>)</condition> <block pos:start="446:54" pos:end="452:41">{<block_content pos:start="447:49" pos:end="451:49">
						<for pos:start="447:49" pos:end="451:49">for <control pos:start="447:53" pos:end="447:85">(<init pos:start="447:54" pos:end="447:63"><decl pos:start="447:54" pos:end="447:62"><type pos:start="447:54" pos:end="447:56"><name pos:start="447:54" pos:end="447:56">int</name></type> <name pos:start="447:58" pos:end="447:58">i</name> <init pos:start="447:60" pos:end="447:62">= <expr pos:start="447:62" pos:end="447:62"><literal type="number" pos:start="447:62" pos:end="447:62">1</literal></expr></init></decl>;</init> <condition pos:start="447:65" pos:end="447:80"><expr pos:start="447:65" pos:end="447:79"><name pos:start="447:65" pos:end="447:65">i</name> <operator pos:start="447:67" pos:end="447:67">&lt;</operator> <name pos:start="447:69" pos:end="447:75">numUAVs</name> <operator pos:start="447:77" pos:end="447:77">+</operator> <literal type="number" pos:start="447:79" pos:end="447:79">1</literal></expr>;</condition> <incr pos:start="447:82" pos:end="447:84"><expr pos:start="447:82" pos:end="447:84"><name pos:start="447:82" pos:end="447:82">i</name><operator pos:start="447:83" pos:end="447:84">++</operator></expr></incr>)</control> <block pos:start="447:87" pos:end="451:49">{<block_content pos:start="448:57" pos:end="450:94">
							<decl_stmt pos:start="448:57" pos:end="448:108"><decl pos:start="448:57" pos:end="448:107"><type pos:start="448:57" pos:end="448:65"><name pos:start="448:57" pos:end="448:65">AFInfoBox</name></type> <name pos:start="448:67" pos:end="448:69">box</name> <init pos:start="448:71" pos:end="448:107">= <expr pos:start="448:73" pos:end="448:107"><operator pos:start="448:73" pos:end="448:73">(</operator><name pos:start="448:74" pos:end="448:82">AFInfoBox</name><operator pos:start="448:83" pos:end="448:83">)</operator> <call pos:start="448:85" pos:end="448:107"><name pos:start="448:85" pos:end="448:104"><name pos:start="448:85" pos:end="448:91">content</name><operator pos:start="448:92" pos:end="448:92">.</operator><name pos:start="448:93" pos:end="448:104">getComponent</name></name><argument_list pos:start="448:105" pos:end="448:107">(<argument pos:start="448:106" pos:end="448:106"><expr pos:start="448:106" pos:end="448:106"><name pos:start="448:106" pos:end="448:106">i</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
							<if_stmt pos:start="449:57" pos:end="450:94"><if pos:start="449:57" pos:end="450:94">if <condition pos:start="449:60" pos:end="449:94">(<expr pos:start="449:61" pos:end="449:93"><call pos:start="449:61" pos:end="449:71"><name pos:start="449:61" pos:end="449:69"><name pos:start="449:61" pos:end="449:63">old</name><operator pos:start="449:64" pos:end="449:64">.</operator><name pos:start="449:65" pos:end="449:69">getID</name></name><argument_list pos:start="449:70" pos:end="449:71">()</argument_list></call><operator pos:start="449:72" pos:end="449:72">.</operator><call pos:start="449:73" pos:end="449:93"><name pos:start="449:73" pos:end="449:78">equals</name><argument_list pos:start="449:79" pos:end="449:93">(<argument pos:start="449:80" pos:end="449:92"><expr pos:start="449:80" pos:end="449:92"><call pos:start="449:80" pos:end="449:92"><name pos:start="449:80" pos:end="449:90"><name pos:start="449:80" pos:end="449:82">box</name><operator pos:start="449:83" pos:end="449:83">.</operator><name pos:start="449:84" pos:end="449:90">getName</name></name><argument_list pos:start="449:91" pos:end="449:92">()</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="450:65" pos:end="450:94"><block_content pos:start="450:65" pos:end="450:94">
								<expr_stmt pos:start="450:65" pos:end="450:94"><expr pos:start="450:65" pos:end="450:93"><call pos:start="450:65" pos:end="450:93"><name pos:start="450:65" pos:end="450:78"><name pos:start="450:65" pos:end="450:68">this</name><operator pos:start="450:69" pos:end="450:69">.</operator><name pos:start="450:70" pos:end="450:78">removeBox</name></name><argument_list pos:start="450:79" pos:end="450:93">(<argument pos:start="450:80" pos:end="450:92"><expr pos:start="450:80" pos:end="450:92"><call pos:start="450:80" pos:end="450:92"><name pos:start="450:80" pos:end="450:90"><name pos:start="450:80" pos:end="450:82">box</name><operator pos:start="450:83" pos:end="450:83">.</operator><name pos:start="450:84" pos:end="450:90">getName</name></name><argument_list pos:start="450:91" pos:end="450:92">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
						</block_content>}</block></for>
					</block_content>}</block></if></if_stmt>
				</block_content>}</block></for>
			</block_content>}</block></if></if_stmt>
		</block_content>}</block> <catch pos:start="455:19" pos:end="466:17">catch <parameter_list pos:start="455:25" pos:end="455:44">(<parameter pos:start="455:26" pos:end="455:43"><decl pos:start="455:26" pos:end="455:43"><type pos:start="455:26" pos:end="455:43"><name pos:start="455:26" pos:end="455:40">RemoteException</name></type> <name pos:start="455:42" pos:end="455:43">e1</name></decl></parameter>)</parameter_list> <block pos:start="455:46" pos:end="466:17">{<block_content pos:start="456:25" pos:end="465:36">
			<try pos:start="456:25" pos:end="462:25">try <block pos:start="456:29" pos:end="459:25">{<block_content pos:start="457:33" pos:end="458:140">
				<expr_stmt pos:start="457:33" pos:end="457:69"><expr pos:start="457:33" pos:end="457:68"><call pos:start="457:33" pos:end="457:68"><name pos:start="457:33" pos:end="457:49"><name pos:start="457:33" pos:end="457:44">Notification</name><operator pos:start="457:45" pos:end="457:45">.</operator><name pos:start="457:46" pos:end="457:49">show</name></name><argument_list pos:start="457:50" pos:end="457:68">(<argument pos:start="457:51" pos:end="457:67"><expr pos:start="457:51" pos:end="457:67"><literal type="string" pos:start="457:51" pos:end="457:67">"Reconnecting..."</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<expr_stmt pos:start="458:33" pos:end="458:140"><expr pos:start="458:33" pos:end="458:139"><name pos:start="458:33" pos:end="458:39">service</name> <operator pos:start="458:41" pos:end="458:41">=</operator> <operator pos:start="458:43" pos:end="458:43">(</operator><name pos:start="458:44" pos:end="458:67">IDroneSetupRemoteService</name><operator pos:start="458:68" pos:end="458:68">)</operator> <call pos:start="458:70" pos:end="458:96"><name pos:start="458:70" pos:end="458:94"><name pos:start="458:70" pos:end="458:77">provider</name><operator pos:start="458:78" pos:end="458:78">.</operator><name pos:start="458:79" pos:end="458:94">getRemoteManager</name></name><argument_list pos:start="458:95" pos:end="458:96">()</argument_list></call><operator pos:start="458:97" pos:end="458:97">.</operator><call pos:start="458:98" pos:end="458:139"><name pos:start="458:98" pos:end="458:107">getService</name><argument_list pos:start="458:108" pos:end="458:139">(<argument pos:start="458:109" pos:end="458:138"><expr pos:start="458:109" pos:end="458:138"><name pos:start="458:109" pos:end="458:138"><name pos:start="458:109" pos:end="458:132">IDroneSetupRemoteService</name><operator pos:start="458:133" pos:end="458:133">.</operator><name pos:start="458:134" pos:end="458:138">class</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			</block_content>}</block> <catch pos:start="459:27" pos:end="462:25">catch <parameter_list pos:start="459:33" pos:end="459:79">(<parameter pos:start="459:34" pos:end="459:78"><decl pos:start="459:34" pos:end="459:78"><type pos:start="459:34" pos:end="459:48"><name pos:start="459:34" pos:end="459:48">RemoteException</name></type> | <type pos:start="459:52" pos:end="459:78"><name pos:start="459:52" pos:end="459:76">DronologyServiceException</name></type> <name pos:start="459:78" pos:end="459:78">e</name></decl></parameter>)</parameter_list> <block pos:start="459:81" pos:end="462:25">{<block_content pos:start="460:33" pos:end="461:69">
				<expr_stmt pos:start="460:33" pos:end="460:57"><expr pos:start="460:33" pos:end="460:56"><call pos:start="460:33" pos:end="460:56"><name pos:start="460:33" pos:end="460:49"><name pos:start="460:33" pos:end="460:36">MyUI</name><operator pos:start="460:37" pos:end="460:37">.</operator><name pos:start="460:38" pos:end="460:49">setConnected</name></name><argument_list pos:start="460:50" pos:end="460:56">(<argument pos:start="460:51" pos:end="460:55"><expr pos:start="460:51" pos:end="460:55"><literal type="boolean" pos:start="460:51" pos:end="460:55">false</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<expr_stmt pos:start="461:33" pos:end="461:69"><expr pos:start="461:33" pos:end="461:68"><call pos:start="461:33" pos:end="461:68"><name pos:start="461:33" pos:end="461:49"><name pos:start="461:33" pos:end="461:44">Notification</name><operator pos:start="461:45" pos:end="461:45">.</operator><name pos:start="461:46" pos:end="461:49">show</name></name><argument_list pos:start="461:50" pos:end="461:68">(<argument pos:start="461:51" pos:end="461:67"><expr pos:start="461:51" pos:end="461:67"><literal type="string" pos:start="461:51" pos:end="461:67">"Reconnecting..."</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			</block_content>}</block></catch></try>
			<expr_stmt pos:start="463:25" pos:end="463:61"><expr pos:start="463:25" pos:end="463:60"><call pos:start="463:25" pos:end="463:60"><name pos:start="463:25" pos:end="463:41"><name pos:start="463:25" pos:end="463:36">Notification</name><operator pos:start="463:37" pos:end="463:37">.</operator><name pos:start="463:38" pos:end="463:41">show</name></name><argument_list pos:start="463:42" pos:end="463:60">(<argument pos:start="463:43" pos:end="463:59"><expr pos:start="463:43" pos:end="463:59"><literal type="string" pos:start="463:43" pos:end="463:59">"Reconnecting..."</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt pos:start="464:25" pos:end="464:54"><expr pos:start="464:25" pos:end="464:53"><call pos:start="464:25" pos:end="464:53"><name pos:start="464:25" pos:end="464:51"><name pos:start="464:25" pos:end="464:31">content</name><operator pos:start="464:32" pos:end="464:32">.</operator><name pos:start="464:33" pos:end="464:51">removeAllComponents</name></name><argument_list pos:start="464:52" pos:end="464:53">()</argument_list></call></expr>;</expr_stmt>
			<expr_stmt pos:start="465:25" pos:end="465:36"><expr pos:start="465:25" pos:end="465:35"><name pos:start="465:25" pos:end="465:31">numUAVs</name> <operator pos:start="465:33" pos:end="465:33">=</operator> <literal type="number" pos:start="465:35" pos:end="465:35">0</literal></expr>;</expr_stmt>
		</block_content>}</block></catch></try>
		<comment type="block" format="javadoc" pos:start="467:17" pos:end="469:19">/**
		 * update current drones' status
		 */</comment>
		<try pos:start="470:17" pos:end="491:17">try <block pos:start="470:21" pos:end="481:17">{<block_content pos:start="471:25" pos:end="480:25">
			<expr_stmt pos:start="471:25" pos:end="471:57"><expr pos:start="471:25" pos:end="471:56"><name pos:start="471:25" pos:end="471:30">drones</name> <operator pos:start="471:32" pos:end="471:32">=</operator> <call pos:start="471:34" pos:end="471:56"><name pos:start="471:34" pos:end="471:54"><name pos:start="471:34" pos:end="471:40">service</name><operator pos:start="471:41" pos:end="471:41">.</operator><name pos:start="471:42" pos:end="471:54">getActiveUAVs</name></name><argument_list pos:start="471:55" pos:end="471:56">()</argument_list></call></expr>;</expr_stmt>
			<for pos:start="472:25" pos:end="480:25">for <control pos:start="472:29" pos:end="472:50">(<init pos:start="472:30" pos:end="472:49"><decl pos:start="472:30" pos:end="472:49"><type pos:start="472:30" pos:end="472:38"><name pos:start="472:30" pos:end="472:38">IUAVProxy</name></type> <name pos:start="472:40" pos:end="472:40">e</name> <range pos:start="472:42" pos:end="472:49">: <expr pos:start="472:44" pos:end="472:49"><name pos:start="472:44" pos:end="472:49">drones</name></expr></range></decl></init>)</control> <block pos:start="472:52" pos:end="480:25">{<block_content pos:start="473:33" pos:end="479:33">
				<for pos:start="473:33" pos:end="479:33">for <control pos:start="473:37" pos:end="473:69">(<init pos:start="473:38" pos:end="473:47"><decl pos:start="473:38" pos:end="473:46"><type pos:start="473:38" pos:end="473:40"><name pos:start="473:38" pos:end="473:40">int</name></type> <name pos:start="473:42" pos:end="473:42">i</name> <init pos:start="473:44" pos:end="473:46">= <expr pos:start="473:46" pos:end="473:46"><literal type="number" pos:start="473:46" pos:end="473:46">1</literal></expr></init></decl>;</init> <condition pos:start="473:49" pos:end="473:64"><expr pos:start="473:49" pos:end="473:63"><name pos:start="473:49" pos:end="473:49">i</name> <operator pos:start="473:51" pos:end="473:51">&lt;</operator> <name pos:start="473:53" pos:end="473:59">numUAVs</name> <operator pos:start="473:61" pos:end="473:61">+</operator> <literal type="number" pos:start="473:63" pos:end="473:63">1</literal></expr>;</condition> <incr pos:start="473:66" pos:end="473:68"><expr pos:start="473:66" pos:end="473:68"><name pos:start="473:66" pos:end="473:66">i</name><operator pos:start="473:67" pos:end="473:68">++</operator></expr></incr>)</control> <block pos:start="473:71" pos:end="479:33">{<block_content pos:start="474:41" pos:end="478:41">
					<decl_stmt pos:start="474:41" pos:end="474:92"><decl pos:start="474:41" pos:end="474:91"><type pos:start="474:41" pos:end="474:49"><name pos:start="474:41" pos:end="474:49">AFInfoBox</name></type> <name pos:start="474:51" pos:end="474:53">box</name> <init pos:start="474:55" pos:end="474:91">= <expr pos:start="474:57" pos:end="474:91"><operator pos:start="474:57" pos:end="474:57">(</operator><name pos:start="474:58" pos:end="474:66">AFInfoBox</name><operator pos:start="474:67" pos:end="474:67">)</operator> <call pos:start="474:69" pos:end="474:91"><name pos:start="474:69" pos:end="474:88"><name pos:start="474:69" pos:end="474:75">content</name><operator pos:start="474:76" pos:end="474:76">.</operator><name pos:start="474:77" pos:end="474:88">getComponent</name></name><argument_list pos:start="474:89" pos:end="474:91">(<argument pos:start="474:90" pos:end="474:90"><expr pos:start="474:90" pos:end="474:90"><name pos:start="474:90" pos:end="474:90">i</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
					<if_stmt pos:start="475:41" pos:end="478:41"><if pos:start="475:41" pos:end="478:41">if <condition pos:start="475:44" pos:end="475:76">(<expr pos:start="475:45" pos:end="475:75"><call pos:start="475:45" pos:end="475:53"><name pos:start="475:45" pos:end="475:51"><name pos:start="475:45" pos:end="475:45">e</name><operator pos:start="475:46" pos:end="475:46">.</operator><name pos:start="475:47" pos:end="475:51">getID</name></name><argument_list pos:start="475:52" pos:end="475:53">()</argument_list></call><operator pos:start="475:54" pos:end="475:54">.</operator><call pos:start="475:55" pos:end="475:75"><name pos:start="475:55" pos:end="475:60">equals</name><argument_list pos:start="475:61" pos:end="475:75">(<argument pos:start="475:62" pos:end="475:74"><expr pos:start="475:62" pos:end="475:74"><call pos:start="475:62" pos:end="475:74"><name pos:start="475:62" pos:end="475:72"><name pos:start="475:62" pos:end="475:64">box</name><operator pos:start="475:65" pos:end="475:65">.</operator><name pos:start="475:66" pos:end="475:72">getName</name></name><argument_list pos:start="475:73" pos:end="475:74">()</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="475:78" pos:end="478:41">{<block_content pos:start="476:49" pos:end="476:84">
						<expr_stmt pos:start="476:49" pos:end="476:84"><expr pos:start="476:49" pos:end="476:83"><call pos:start="476:49" pos:end="476:83"><name pos:start="476:49" pos:end="476:58"><name pos:start="476:49" pos:end="476:51">box</name><operator pos:start="476:52" pos:end="476:52">.</operator><name pos:start="476:53" pos:end="476:58">update</name></name><argument_list pos:start="476:59" pos:end="476:83">(<argument pos:start="476:60" pos:end="476:82"><expr pos:start="476:60" pos:end="476:82"><operator pos:start="476:60" pos:end="476:62">new</operator> <call pos:start="476:64" pos:end="476:82"><name pos:start="476:64" pos:end="476:79">UAVStatusWrapper</name><argument_list pos:start="476:80" pos:end="476:82">(<argument pos:start="476:81" pos:end="476:81"><expr pos:start="476:81" pos:end="476:81"><name pos:start="476:81" pos:end="476:81">e</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

					</block_content>}</block></if></if_stmt>
				</block_content>}</block></for>
			</block_content>}</block></for>
		</block_content>}</block> <catch pos:start="481:19" pos:end="491:17">catch <parameter_list pos:start="481:25" pos:end="481:44">(<parameter pos:start="481:26" pos:end="481:43"><decl pos:start="481:26" pos:end="481:43"><type pos:start="481:26" pos:end="481:43"><name pos:start="481:26" pos:end="481:40">RemoteException</name></type> <name pos:start="481:42" pos:end="481:43">e1</name></decl></parameter>)</parameter_list> <block pos:start="481:46" pos:end="491:17">{<block_content pos:start="482:25" pos:end="490:36">
			<try pos:start="482:25" pos:end="487:25">try <block pos:start="482:29" pos:end="485:25">{<block_content pos:start="483:33" pos:end="484:140">
				<expr_stmt pos:start="483:33" pos:end="483:69"><expr pos:start="483:33" pos:end="483:68"><call pos:start="483:33" pos:end="483:68"><name pos:start="483:33" pos:end="483:49"><name pos:start="483:33" pos:end="483:44">Notification</name><operator pos:start="483:45" pos:end="483:45">.</operator><name pos:start="483:46" pos:end="483:49">show</name></name><argument_list pos:start="483:50" pos:end="483:68">(<argument pos:start="483:51" pos:end="483:67"><expr pos:start="483:51" pos:end="483:67"><literal type="string" pos:start="483:51" pos:end="483:67">"Reconnecting..."</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<expr_stmt pos:start="484:33" pos:end="484:140"><expr pos:start="484:33" pos:end="484:139"><name pos:start="484:33" pos:end="484:39">service</name> <operator pos:start="484:41" pos:end="484:41">=</operator> <operator pos:start="484:43" pos:end="484:43">(</operator><name pos:start="484:44" pos:end="484:67">IDroneSetupRemoteService</name><operator pos:start="484:68" pos:end="484:68">)</operator> <call pos:start="484:70" pos:end="484:96"><name pos:start="484:70" pos:end="484:94"><name pos:start="484:70" pos:end="484:77">provider</name><operator pos:start="484:78" pos:end="484:78">.</operator><name pos:start="484:79" pos:end="484:94">getRemoteManager</name></name><argument_list pos:start="484:95" pos:end="484:96">()</argument_list></call><operator pos:start="484:97" pos:end="484:97">.</operator><call pos:start="484:98" pos:end="484:139"><name pos:start="484:98" pos:end="484:107">getService</name><argument_list pos:start="484:108" pos:end="484:139">(<argument pos:start="484:109" pos:end="484:138"><expr pos:start="484:109" pos:end="484:138"><name pos:start="484:109" pos:end="484:138"><name pos:start="484:109" pos:end="484:132">IDroneSetupRemoteService</name><operator pos:start="484:133" pos:end="484:133">.</operator><name pos:start="484:134" pos:end="484:138">class</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			</block_content>}</block> <catch pos:start="485:27" pos:end="487:25">catch <parameter_list pos:start="485:33" pos:end="485:79">(<parameter pos:start="485:34" pos:end="485:78"><decl pos:start="485:34" pos:end="485:78"><type pos:start="485:34" pos:end="485:48"><name pos:start="485:34" pos:end="485:48">RemoteException</name></type> | <type pos:start="485:52" pos:end="485:78"><name pos:start="485:52" pos:end="485:76">DronologyServiceException</name></type> <name pos:start="485:78" pos:end="485:78">e</name></decl></parameter>)</parameter_list> <block pos:start="485:81" pos:end="487:25">{<block_content pos:start="486:33" pos:end="486:69">
				<expr_stmt pos:start="486:33" pos:end="486:69"><expr pos:start="486:33" pos:end="486:68"><call pos:start="486:33" pos:end="486:68"><name pos:start="486:33" pos:end="486:49"><name pos:start="486:33" pos:end="486:44">Notification</name><operator pos:start="486:45" pos:end="486:45">.</operator><name pos:start="486:46" pos:end="486:49">show</name></name><argument_list pos:start="486:50" pos:end="486:68">(<argument pos:start="486:51" pos:end="486:67"><expr pos:start="486:51" pos:end="486:67"><literal type="string" pos:start="486:51" pos:end="486:67">"Reconnecting..."</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			</block_content>}</block></catch></try>
			<expr_stmt pos:start="488:25" pos:end="488:61"><expr pos:start="488:25" pos:end="488:60"><call pos:start="488:25" pos:end="488:60"><name pos:start="488:25" pos:end="488:41"><name pos:start="488:25" pos:end="488:36">Notification</name><operator pos:start="488:37" pos:end="488:37">.</operator><name pos:start="488:38" pos:end="488:41">show</name></name><argument_list pos:start="488:42" pos:end="488:60">(<argument pos:start="488:43" pos:end="488:59"><expr pos:start="488:43" pos:end="488:59"><literal type="string" pos:start="488:43" pos:end="488:59">"Reconnecting..."</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt pos:start="489:25" pos:end="489:54"><expr pos:start="489:25" pos:end="489:53"><call pos:start="489:25" pos:end="489:53"><name pos:start="489:25" pos:end="489:51"><name pos:start="489:25" pos:end="489:31">content</name><operator pos:start="489:32" pos:end="489:32">.</operator><name pos:start="489:33" pos:end="489:51">removeAllComponents</name></name><argument_list pos:start="489:52" pos:end="489:53">()</argument_list></call></expr>;</expr_stmt>
			<expr_stmt pos:start="490:25" pos:end="490:36"><expr pos:start="490:25" pos:end="490:35"><name pos:start="490:25" pos:end="490:31">numUAVs</name> <operator pos:start="490:33" pos:end="490:33">=</operator> <literal type="number" pos:start="490:35" pos:end="490:35">0</literal></expr>;</expr_stmt>
		</block_content>}</block></catch></try>
	</block_content>}</block></function>

	<function pos:start="494:9" pos:end="497:9"><type pos:start="494:9" pos:end="494:19"><specifier pos:start="494:9" pos:end="494:14">public</specifier> <name pos:start="494:16" pos:end="494:19">void</name></type> <name pos:start="494:21" pos:end="494:34">createContents</name><parameter_list pos:start="494:35" pos:end="494:36">()</parameter_list> <block pos:start="494:38" pos:end="497:9">{<block_content>
		<comment type="line" pos:start="495:17" pos:end="495:50">// TODO Auto-generated method stub</comment>

	</block_content>}</block></function>

}</block></class>
</unit>
