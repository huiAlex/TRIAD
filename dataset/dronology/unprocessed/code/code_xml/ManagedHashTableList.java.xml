<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="Java" filename="src/ManagedHashTableList.java" pos:tabs="8"><package pos:start="1:1" pos:end="1:35">package <name pos:start="1:9" pos:end="1:34"><name pos:start="1:9" pos:end="1:11">edu</name><operator pos:start="1:12" pos:end="1:12">.</operator><name pos:start="1:13" pos:end="1:14">nd</name><operator pos:start="1:15" pos:end="1:15">.</operator><name pos:start="1:16" pos:end="1:24">dronology</name><operator pos:start="1:25" pos:end="1:25">.</operator><name pos:start="1:26" pos:end="1:29">core</name><operator pos:start="1:30" pos:end="1:30">.</operator><name pos:start="1:31" pos:end="1:34">util</name></name>;</package>


<import pos:start="4:1" pos:end="4:27">import <name pos:start="4:8" pos:end="4:26"><name pos:start="4:8" pos:end="4:11">java</name><operator pos:start="4:12" pos:end="4:12">.</operator><name pos:start="4:13" pos:end="4:16">util</name><operator pos:start="4:17" pos:end="4:17">.</operator><name pos:start="4:18" pos:end="4:26">ArrayList</name></name>;</import>
<import pos:start="5:1" pos:end="5:29">import <name pos:start="5:8" pos:end="5:28"><name pos:start="5:8" pos:end="5:11">java</name><operator pos:start="5:12" pos:end="5:12">.</operator><name pos:start="5:13" pos:end="5:16">util</name><operator pos:start="5:17" pos:end="5:17">.</operator><name pos:start="5:18" pos:end="5:28">Collections</name></name>;</import>
<import pos:start="6:1" pos:end="6:27">import <name pos:start="6:8" pos:end="6:26"><name pos:start="6:8" pos:end="6:11">java</name><operator pos:start="6:12" pos:end="6:12">.</operator><name pos:start="6:13" pos:end="6:16">util</name><operator pos:start="6:17" pos:end="6:17">.</operator><name pos:start="6:18" pos:end="6:26">Hashtable</name></name>;</import>
<import pos:start="7:1" pos:end="7:22">import <name pos:start="7:8" pos:end="7:21"><name pos:start="7:8" pos:end="7:11">java</name><operator pos:start="7:12" pos:end="7:12">.</operator><name pos:start="7:13" pos:end="7:16">util</name><operator pos:start="7:17" pos:end="7:17">.</operator><name pos:start="7:18" pos:end="7:21">List</name></name>;</import>

<comment type="block" format="javadoc" pos:start="9:1" pos:end="20:3">/**
 * 
 * Managed Hashtable: stores a key and a list as value -&gt; a query on the hashtable never returns null but an empty list. The list does not need to be created initially
 * 
 * 
 * @author Michael Vierhauser
 * @param &lt;K&gt;
 *          Key type.
 * @param &lt;V&gt;
 *          Value type.
 * 
 */</comment>
<class pos:start="21:1" pos:end="55:1"><specifier pos:start="21:1" pos:end="21:6">public</specifier> class <name pos:start="21:14" pos:end="21:39"><name pos:start="21:14" pos:end="21:33">ManagedHashTableList</name><parameter_list pos:start="21:34" pos:end="21:39">&lt;<parameter pos:start="21:35" pos:end="21:35"><name pos:start="21:35" pos:end="21:35">K</name></parameter>, <parameter pos:start="21:38" pos:end="21:38"><name pos:start="21:38" pos:end="21:38">V</name></parameter>&gt;</parameter_list></name> <super_list pos:start="21:41" pos:end="21:69"><extends pos:start="21:41" pos:end="21:69">extends <super pos:start="21:49" pos:end="21:69"><name pos:start="21:49" pos:end="21:69"><name pos:start="21:49" pos:end="21:57">Hashtable</name><argument_list type="generic" pos:start="21:58" pos:end="21:69">&lt;<argument pos:start="21:59" pos:end="21:59"><name pos:start="21:59" pos:end="21:59">K</name></argument>, <argument pos:start="21:62" pos:end="21:68"><name pos:start="21:62" pos:end="21:68"><name pos:start="21:62" pos:end="21:65">List</name><argument_list type="generic" pos:start="21:66" pos:end="21:68">&lt;<argument pos:start="21:67" pos:end="21:67"><name pos:start="21:67" pos:end="21:67">V</name></argument>&gt;</argument_list></name></argument>&gt;</argument_list></name></super></extends></super_list> <block pos:start="21:71" pos:end="55:1">{

	<decl_stmt pos:start="23:9" pos:end="23:75"><decl pos:start="23:9" pos:end="23:74"><type pos:start="23:9" pos:end="23:33"><specifier pos:start="23:9" pos:end="23:15">private</specifier> <specifier pos:start="23:17" pos:end="23:22">static</specifier> <specifier pos:start="23:24" pos:end="23:28">final</specifier> <name pos:start="23:30" pos:end="23:33">long</name></type> <name pos:start="23:35" pos:end="23:50">serialVersionUID</name> <init pos:start="23:52" pos:end="23:74">= <expr pos:start="23:54" pos:end="23:74"><operator pos:start="23:54" pos:end="23:54">-</operator><literal type="number" pos:start="23:55" pos:end="23:74">5755802656779154509L</literal></expr></init></decl>;</decl_stmt>

	<function pos:start="25:9" pos:end="32:9"><type pos:start="25:9" pos:end="25:35"><specifier pos:start="25:9" pos:end="25:14">public</specifier> <specifier pos:start="25:16" pos:end="25:27">synchronized</specifier> <name pos:start="25:29" pos:end="25:35">boolean</name></type> <name pos:start="25:37" pos:end="25:45">removeAll</name><parameter_list pos:start="25:46" pos:end="25:52">(<parameter pos:start="25:47" pos:end="25:51"><decl pos:start="25:47" pos:end="25:51"><type pos:start="25:47" pos:end="25:47"><name pos:start="25:47" pos:end="25:47">K</name></type> <name pos:start="25:49" pos:end="25:51">key</name></decl></parameter>)</parameter_list> <block pos:start="25:54" pos:end="32:9">{<block_content pos:start="26:17" pos:end="31:29">
		<decl_stmt pos:start="26:17" pos:end="26:46"><decl pos:start="26:17" pos:end="26:45"><type pos:start="26:17" pos:end="26:23"><name pos:start="26:17" pos:end="26:23"><name pos:start="26:17" pos:end="26:20">List</name><argument_list type="generic" pos:start="26:21" pos:end="26:23">&lt;<argument pos:start="26:22" pos:end="26:22"><name pos:start="26:22" pos:end="26:22">V</name></argument>&gt;</argument_list></name></type> <name pos:start="26:25" pos:end="26:28">list</name> <init pos:start="26:30" pos:end="26:45">= <expr pos:start="26:32" pos:end="26:45"><call pos:start="26:32" pos:end="26:45"><name pos:start="26:32" pos:end="26:40"><name pos:start="26:32" pos:end="26:36">super</name><operator pos:start="26:37" pos:end="26:37">.</operator><name pos:start="26:38" pos:end="26:40">get</name></name><argument_list pos:start="26:41" pos:end="26:45">(<argument pos:start="26:42" pos:end="26:44"><expr pos:start="26:42" pos:end="26:44"><name pos:start="26:42" pos:end="26:44">key</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<if_stmt pos:start="27:17" pos:end="30:17"><if pos:start="27:17" pos:end="30:17">if<condition pos:start="27:19" pos:end="27:47">(<expr pos:start="27:20" pos:end="27:46"><name pos:start="27:20" pos:end="27:23">list</name><operator pos:start="27:24" pos:end="27:25">!=</operator><literal type="null" pos:start="27:26" pos:end="27:29">null</literal> <operator pos:start="27:31" pos:end="27:32">&amp;&amp;</operator> <call pos:start="27:34" pos:end="27:44"><name pos:start="27:34" pos:end="27:42"><name pos:start="27:34" pos:end="27:37">list</name><operator pos:start="27:38" pos:end="27:38">.</operator><name pos:start="27:39" pos:end="27:42">size</name></name><argument_list pos:start="27:43" pos:end="27:44">()</argument_list></call><operator pos:start="27:45" pos:end="27:45">&gt;</operator><literal type="number" pos:start="27:46" pos:end="27:46">0</literal></expr>)</condition><block pos:start="27:48" pos:end="30:17">{<block_content pos:start="28:25" pos:end="29:44">
			<expr_stmt pos:start="28:25" pos:end="28:37"><expr pos:start="28:25" pos:end="28:36"><call pos:start="28:25" pos:end="28:36"><name pos:start="28:25" pos:end="28:34"><name pos:start="28:25" pos:end="28:28">list</name><operator pos:start="28:29" pos:end="28:29">.</operator><name pos:start="28:30" pos:end="28:34">clear</name></name><argument_list pos:start="28:35" pos:end="28:36">()</argument_list></call></expr>;</expr_stmt>
				<return pos:start="29:33" pos:end="29:44">return <expr pos:start="29:40" pos:end="29:43"><literal type="boolean" pos:start="29:40" pos:end="29:43">true</literal></expr>;</return>
		</block_content>}</block></if></if_stmt>
		<return pos:start="31:17" pos:end="31:29">return <expr pos:start="31:24" pos:end="31:28"><literal type="boolean" pos:start="31:24" pos:end="31:28">false</literal></expr>;</return>
	</block_content>}</block></function>

	<function pos:start="34:9" pos:end="41:9"><annotation pos:start="34:9" pos:end="34:17">@<name pos:start="34:10" pos:end="34:17">Override</name></annotation>
	<type pos:start="35:9" pos:end="35:35"><specifier pos:start="35:9" pos:end="35:14">public</specifier> <specifier pos:start="35:16" pos:end="35:27">synchronized</specifier> <name pos:start="35:29" pos:end="35:35"><name pos:start="35:29" pos:end="35:32">List</name><argument_list type="generic" pos:start="35:33" pos:end="35:35">&lt;<argument pos:start="35:34" pos:end="35:34"><name pos:start="35:34" pos:end="35:34">V</name></argument>&gt;</argument_list></name></type> <name pos:start="35:37" pos:end="35:39">get</name><parameter_list pos:start="35:40" pos:end="35:51">(<parameter pos:start="35:41" pos:end="35:50"><decl pos:start="35:41" pos:end="35:50"><type pos:start="35:41" pos:end="35:46"><name pos:start="35:41" pos:end="35:46">Object</name></type> <name pos:start="35:48" pos:end="35:50">key</name></decl></parameter>)</parameter_list> <block pos:start="35:53" pos:end="41:9">{<block_content pos:start="36:17" pos:end="40:17">
		<if_stmt pos:start="36:17" pos:end="40:17"><if pos:start="36:17" pos:end="38:17">if <condition pos:start="36:20" pos:end="36:43">(<expr pos:start="36:21" pos:end="36:42"><call pos:start="36:21" pos:end="36:34"><name pos:start="36:21" pos:end="36:29"><name pos:start="36:21" pos:end="36:25">super</name><operator pos:start="36:26" pos:end="36:26">.</operator><name pos:start="36:27" pos:end="36:29">get</name></name><argument_list pos:start="36:30" pos:end="36:34">(<argument pos:start="36:31" pos:end="36:33"><expr pos:start="36:31" pos:end="36:33"><name pos:start="36:31" pos:end="36:33">key</name></expr></argument>)</argument_list></call> <operator pos:start="36:36" pos:end="36:37">==</operator> <literal type="null" pos:start="36:39" pos:end="36:42">null</literal></expr>)</condition> <block pos:start="36:45" pos:end="38:17">{<block_content pos:start="37:25" pos:end="37:55">
			<return pos:start="37:25" pos:end="37:55">return <expr pos:start="37:32" pos:end="37:54"><call pos:start="37:32" pos:end="37:54"><name pos:start="37:32" pos:end="37:52"><name pos:start="37:32" pos:end="37:42">Collections</name><operator pos:start="37:43" pos:end="37:43">.</operator><name pos:start="37:44" pos:end="37:52">emptyList</name></name><argument_list pos:start="37:53" pos:end="37:54">()</argument_list></call></expr>;</return>
		</block_content>}</block></if> <else pos:start="38:19" pos:end="40:17">else <block pos:start="38:24" pos:end="40:17">{<block_content pos:start="39:25" pos:end="39:46">
			<return pos:start="39:25" pos:end="39:46">return <expr pos:start="39:32" pos:end="39:45"><call pos:start="39:32" pos:end="39:45"><name pos:start="39:32" pos:end="39:40"><name pos:start="39:32" pos:end="39:36">super</name><operator pos:start="39:37" pos:end="39:37">.</operator><name pos:start="39:38" pos:end="39:40">get</name></name><argument_list pos:start="39:41" pos:end="39:45">(<argument pos:start="39:42" pos:end="39:44"><expr pos:start="39:42" pos:end="39:44"><name pos:start="39:42" pos:end="39:44">key</name></expr></argument>)</argument_list></call></expr>;</return>
		</block_content>}</block></else></if_stmt>
	</block_content>}</block></function>

	<function pos:start="43:9" pos:end="54:9"><type pos:start="43:9" pos:end="43:32"><specifier pos:start="43:9" pos:end="43:14">public</specifier> <specifier pos:start="43:16" pos:end="43:27">synchronized</specifier> <name pos:start="43:29" pos:end="43:32">void</name></type> <name pos:start="43:34" pos:end="43:36">add</name><parameter_list pos:start="43:37" pos:end="43:56">(<parameter pos:start="43:38" pos:end="43:47"><decl pos:start="43:38" pos:end="43:47"><type pos:start="43:38" pos:end="43:47"><name pos:start="43:38" pos:end="43:38">K</name></type> <name pos:start="43:40" pos:end="43:47">hashCode</name></decl></parameter>, <parameter pos:start="43:50" pos:end="43:55"><decl pos:start="43:50" pos:end="43:55"><type pos:start="43:50" pos:end="43:55"><name pos:start="43:50" pos:end="43:50">V</name></type> <name pos:start="43:52" pos:end="43:55">elem</name></decl></parameter>)</parameter_list> <block pos:start="43:58" pos:end="54:9">{<block_content pos:start="44:17" pos:end="52:17">
		<if_stmt pos:start="44:17" pos:end="52:17"><if pos:start="44:17" pos:end="48:17">if <condition pos:start="44:20" pos:end="44:48">(<expr pos:start="44:21" pos:end="44:47"><call pos:start="44:21" pos:end="44:39"><name pos:start="44:21" pos:end="44:29"><name pos:start="44:21" pos:end="44:25">super</name><operator pos:start="44:26" pos:end="44:26">.</operator><name pos:start="44:27" pos:end="44:29">get</name></name><argument_list pos:start="44:30" pos:end="44:39">(<argument pos:start="44:31" pos:end="44:38"><expr pos:start="44:31" pos:end="44:38"><name pos:start="44:31" pos:end="44:38">hashCode</name></expr></argument>)</argument_list></call> <operator pos:start="44:41" pos:end="44:42">==</operator> <literal type="null" pos:start="44:44" pos:end="44:47">null</literal></expr>)</condition> <block pos:start="44:50" pos:end="48:17">{<block_content pos:start="45:25" pos:end="47:47">
			<decl_stmt pos:start="45:25" pos:end="45:54"><decl pos:start="45:25" pos:end="45:53"><type pos:start="45:25" pos:end="45:31"><name pos:start="45:25" pos:end="45:31"><name pos:start="45:25" pos:end="45:28">List</name><argument_list type="generic" pos:start="45:29" pos:end="45:31">&lt;<argument pos:start="45:30" pos:end="45:30"><name pos:start="45:30" pos:end="45:30">V</name></argument>&gt;</argument_list></name></type> <name pos:start="45:33" pos:end="45:33">l</name> <init pos:start="45:35" pos:end="45:53">= <expr pos:start="45:37" pos:end="45:53"><operator pos:start="45:37" pos:end="45:39">new</operator> <call pos:start="45:41" pos:end="45:53"><name pos:start="45:41" pos:end="45:51"><name pos:start="45:41" pos:end="45:49">ArrayList</name><argument_list type="generic" pos:start="45:50" pos:end="45:51">&lt;&gt;</argument_list></name><argument_list pos:start="45:52" pos:end="45:53">()</argument_list></call></expr></init></decl>;</decl_stmt>
			<expr_stmt pos:start="46:25" pos:end="46:36"><expr pos:start="46:25" pos:end="46:35"><call pos:start="46:25" pos:end="46:35"><name pos:start="46:25" pos:end="46:29"><name pos:start="46:25" pos:end="46:25">l</name><operator pos:start="46:26" pos:end="46:26">.</operator><name pos:start="46:27" pos:end="46:29">add</name></name><argument_list pos:start="46:30" pos:end="46:35">(<argument pos:start="46:31" pos:end="46:34"><expr pos:start="46:31" pos:end="46:34"><name pos:start="46:31" pos:end="46:34">elem</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt pos:start="47:25" pos:end="47:47"><expr pos:start="47:25" pos:end="47:46"><call pos:start="47:25" pos:end="47:46"><name pos:start="47:25" pos:end="47:33"><name pos:start="47:25" pos:end="47:29">super</name><operator pos:start="47:30" pos:end="47:30">.</operator><name pos:start="47:31" pos:end="47:33">put</name></name><argument_list pos:start="47:34" pos:end="47:46">(<argument pos:start="47:35" pos:end="47:42"><expr pos:start="47:35" pos:end="47:42"><name pos:start="47:35" pos:end="47:42">hashCode</name></expr></argument>, <argument pos:start="47:45" pos:end="47:45"><expr pos:start="47:45" pos:end="47:45"><name pos:start="47:45" pos:end="47:45">l</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		</block_content>}</block></if> <else pos:start="48:19" pos:end="52:17">else <block pos:start="48:24" pos:end="52:17">{<block_content pos:start="49:25" pos:end="50:36">
			<decl_stmt pos:start="49:25" pos:end="49:56"><decl pos:start="49:25" pos:end="49:55"><type pos:start="49:25" pos:end="49:31"><name pos:start="49:25" pos:end="49:31"><name pos:start="49:25" pos:end="49:28">List</name><argument_list type="generic" pos:start="49:29" pos:end="49:31">&lt;<argument pos:start="49:30" pos:end="49:30"><name pos:start="49:30" pos:end="49:30">V</name></argument>&gt;</argument_list></name></type> <name pos:start="49:33" pos:end="49:33">l</name> <init pos:start="49:35" pos:end="49:55">= <expr pos:start="49:37" pos:end="49:55"><call pos:start="49:37" pos:end="49:55"><name pos:start="49:37" pos:end="49:45"><name pos:start="49:37" pos:end="49:41">super</name><operator pos:start="49:42" pos:end="49:42">.</operator><name pos:start="49:43" pos:end="49:45">get</name></name><argument_list pos:start="49:46" pos:end="49:55">(<argument pos:start="49:47" pos:end="49:54"><expr pos:start="49:47" pos:end="49:54"><name pos:start="49:47" pos:end="49:54">hashCode</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<expr_stmt pos:start="50:25" pos:end="50:36"><expr pos:start="50:25" pos:end="50:35"><call pos:start="50:25" pos:end="50:35"><name pos:start="50:25" pos:end="50:29"><name pos:start="50:25" pos:end="50:25">l</name><operator pos:start="50:26" pos:end="50:26">.</operator><name pos:start="50:27" pos:end="50:29">add</name></name><argument_list pos:start="50:30" pos:end="50:35">(<argument pos:start="50:31" pos:end="50:34"><expr pos:start="50:31" pos:end="50:34"><name pos:start="50:31" pos:end="50:34">elem</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<comment type="line" pos:start="51:25" pos:end="51:50">// super.put(hashCode, l);</comment>
		</block_content>}</block></else></if_stmt>

	</block_content>}</block></function>
}</block></class>
</unit>
