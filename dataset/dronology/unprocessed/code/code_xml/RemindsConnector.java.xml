<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="Java" filename="src/RemindsConnector.java" pos:tabs="8"><package pos:start="1:1" pos:end="1:44">package <name pos:start="1:9" pos:end="1:43"><name pos:start="1:9" pos:end="1:11">edu</name><operator pos:start="1:12" pos:end="1:12">.</operator><name pos:start="1:13" pos:end="1:14">nd</name><operator pos:start="1:15" pos:end="1:15">.</operator><name pos:start="1:16" pos:end="1:24">dronology</name><operator pos:start="1:25" pos:end="1:25">.</operator><name pos:start="1:26" pos:end="1:35">monitoring</name><operator pos:start="1:36" pos:end="1:36">.</operator><name pos:start="1:37" pos:end="1:43">reminds</name></name>;</package>

<import pos:start="3:1" pos:end="3:28">import <name pos:start="3:8" pos:end="3:27"><name pos:start="3:8" pos:end="3:11">java</name><operator pos:start="3:12" pos:end="3:12">.</operator><name pos:start="3:13" pos:end="3:16">text</name><operator pos:start="3:17" pos:end="3:17">.</operator><name pos:start="3:18" pos:end="3:27">DateFormat</name></name>;</import>
<import pos:start="4:1" pos:end="4:21">import <name pos:start="4:8" pos:end="4:20"><name pos:start="4:8" pos:end="4:11">java</name><operator pos:start="4:12" pos:end="4:12">.</operator><name pos:start="4:13" pos:end="4:16">util</name><operator pos:start="4:17" pos:end="4:17">.</operator><name pos:start="4:18" pos:end="4:20">Map</name></name>;</import>
<import pos:start="5:1" pos:end="5:46">import <name pos:start="5:8" pos:end="5:45"><name pos:start="5:8" pos:end="5:11">java</name><operator pos:start="5:12" pos:end="5:12">.</operator><name pos:start="5:13" pos:end="5:16">util</name><operator pos:start="5:17" pos:end="5:17">.</operator><name pos:start="5:18" pos:end="5:27">concurrent</name><operator pos:start="5:28" pos:end="5:28">.</operator><name pos:start="5:29" pos:end="5:45">ConcurrentHashMap</name></name>;</import>
<import pos:start="6:1" pos:end="6:41">import <name pos:start="6:8" pos:end="6:40"><name pos:start="6:8" pos:end="6:10">com</name><operator pos:start="6:11" pos:end="6:11">.</operator><name pos:start="6:12" pos:end="6:17">google</name><operator pos:start="6:18" pos:end="6:18">.</operator><name pos:start="6:19" pos:end="6:22">gson</name><operator pos:start="6:23" pos:end="6:23">.</operator><name pos:start="6:24" pos:end="6:40">FieldNamingPolicy</name></name>;</import>
<import pos:start="7:1" pos:end="7:28">import <name pos:start="7:8" pos:end="7:27"><name pos:start="7:8" pos:end="7:10">com</name><operator pos:start="7:11" pos:end="7:11">.</operator><name pos:start="7:12" pos:end="7:17">google</name><operator pos:start="7:18" pos:end="7:18">.</operator><name pos:start="7:19" pos:end="7:22">gson</name><operator pos:start="7:23" pos:end="7:23">.</operator><name pos:start="7:24" pos:end="7:27">Gson</name></name>;</import>
<import pos:start="8:1" pos:end="8:35">import <name pos:start="8:8" pos:end="8:34"><name pos:start="8:8" pos:end="8:10">com</name><operator pos:start="8:11" pos:end="8:11">.</operator><name pos:start="8:12" pos:end="8:17">google</name><operator pos:start="8:18" pos:end="8:18">.</operator><name pos:start="8:19" pos:end="8:22">gson</name><operator pos:start="8:23" pos:end="8:23">.</operator><name pos:start="8:24" pos:end="8:34">GsonBuilder</name></name>;</import>
<import pos:start="9:1" pos:end="9:76">import <name pos:start="9:8" pos:end="9:75"><name pos:start="9:8" pos:end="9:9">at</name><operator pos:start="9:10" pos:end="9:10">.</operator><name pos:start="9:11" pos:end="9:13">jku</name><operator pos:start="9:14" pos:end="9:14">.</operator><name pos:start="9:15" pos:end="9:19">mevss</name><operator pos:start="9:20" pos:end="9:20">.</operator><name pos:start="9:21" pos:end="9:36">eventdistributor</name><operator pos:start="9:37" pos:end="9:37">.</operator><name pos:start="9:38" pos:end="9:41">core</name><operator pos:start="9:42" pos:end="9:42">.</operator><name pos:start="9:43" pos:end="9:50">transmit</name><operator pos:start="9:51" pos:end="9:51">.</operator><name pos:start="9:52" pos:end="9:75">TransmittableEventObject</name></name>;</import>
<import pos:start="10:1" pos:end="10:78">import <name pos:start="10:8" pos:end="10:77"><name pos:start="10:8" pos:end="10:9">at</name><operator pos:start="10:10" pos:end="10:10">.</operator><name pos:start="10:11" pos:end="10:13">jku</name><operator pos:start="10:14" pos:end="10:14">.</operator><name pos:start="10:15" pos:end="10:19">mevss</name><operator pos:start="10:20" pos:end="10:20">.</operator><name pos:start="10:21" pos:end="10:36">eventdistributor</name><operator pos:start="10:37" pos:end="10:37">.</operator><name pos:start="10:38" pos:end="10:41">core</name><operator pos:start="10:42" pos:end="10:42">.</operator><name pos:start="10:43" pos:end="10:50">transmit</name><operator pos:start="10:51" pos:end="10:51">.</operator><name pos:start="10:52" pos:end="10:77">TransmittableObjectFactory</name></name>;</import>
<import pos:start="11:1" pos:end="11:59">import <name pos:start="11:8" pos:end="11:58"><name pos:start="11:8" pos:end="11:9">at</name><operator pos:start="11:10" pos:end="11:10">.</operator><name pos:start="11:11" pos:end="11:13">jku</name><operator pos:start="11:14" pos:end="11:14">.</operator><name pos:start="11:15" pos:end="11:19">mevss</name><operator pos:start="11:20" pos:end="11:20">.</operator><name pos:start="11:21" pos:end="11:34">eventpublisher</name><operator pos:start="11:35" pos:end="11:35">.</operator><name pos:start="11:36" pos:end="11:39">core</name><operator pos:start="11:40" pos:end="11:40">.</operator><name pos:start="11:41" pos:end="11:48">internal</name><operator pos:start="11:49" pos:end="11:49">.</operator><name pos:start="11:50" pos:end="11:58">Publisher</name></name>;</import>
<import pos:start="12:1" pos:end="12:48">import <name pos:start="12:8" pos:end="12:47"><name pos:start="12:8" pos:end="12:9">at</name><operator pos:start="12:10" pos:end="12:10">.</operator><name pos:start="12:11" pos:end="12:13">jku</name><operator pos:start="12:14" pos:end="12:14">.</operator><name pos:start="12:15" pos:end="12:19">mevss</name><operator pos:start="12:20" pos:end="12:20">.</operator><name pos:start="12:21" pos:end="12:24">util</name><operator pos:start="12:25" pos:end="12:25">.</operator><name pos:start="12:26" pos:end="12:30">utils</name><operator pos:start="12:31" pos:end="12:31">.</operator><name pos:start="12:32" pos:end="12:47">PreciseTimestamp</name></name>;</import>
<import pos:start="13:1" pos:end="13:71">import <name pos:start="13:8" pos:end="13:70"><name pos:start="13:8" pos:end="13:10">edu</name><operator pos:start="13:11" pos:end="13:11">.</operator><name pos:start="13:12" pos:end="13:13">nd</name><operator pos:start="13:14" pos:end="13:14">.</operator><name pos:start="13:15" pos:end="13:23">dronology</name><operator pos:start="13:24" pos:end="13:24">.</operator><name pos:start="13:25" pos:end="13:28">core</name><operator pos:start="13:29" pos:end="13:29">.</operator><name pos:start="13:30" pos:end="13:39">monitoring</name><operator pos:start="13:40" pos:end="13:40">.</operator><name pos:start="13:41" pos:end="13:48">messages</name><operator pos:start="13:49" pos:end="13:49">.</operator><name pos:start="13:50" pos:end="13:70">UAVMonitorableMessage</name></name>;</import>
<import pos:start="14:1" pos:end="14:73">import <name pos:start="14:8" pos:end="14:72"><name pos:start="14:8" pos:end="14:10">edu</name><operator pos:start="14:11" pos:end="14:11">.</operator><name pos:start="14:12" pos:end="14:13">nd</name><operator pos:start="14:14" pos:end="14:14">.</operator><name pos:start="14:15" pos:end="14:23">dronology</name><operator pos:start="14:24" pos:end="14:24">.</operator><name pos:start="14:25" pos:end="14:32">gstation</name><operator pos:start="14:33" pos:end="14:33">.</operator><name pos:start="14:34" pos:end="14:42">connector</name><operator pos:start="14:43" pos:end="14:43">.</operator><name pos:start="14:44" pos:end="14:51">messages</name><operator pos:start="14:52" pos:end="14:52">.</operator><name pos:start="14:53" pos:end="14:72">UAVMonitoringMessage</name></name>;</import>
<import pos:start="15:1" pos:end="15:68">import <name pos:start="15:8" pos:end="15:67"><name pos:start="15:8" pos:end="15:10">edu</name><operator pos:start="15:11" pos:end="15:11">.</operator><name pos:start="15:12" pos:end="15:13">nd</name><operator pos:start="15:14" pos:end="15:14">.</operator><name pos:start="15:15" pos:end="15:23">dronology</name><operator pos:start="15:24" pos:end="15:24">.</operator><name pos:start="15:25" pos:end="15:32">gstation</name><operator pos:start="15:33" pos:end="15:33">.</operator><name pos:start="15:34" pos:end="15:42">connector</name><operator pos:start="15:43" pos:end="15:43">.</operator><name pos:start="15:44" pos:end="15:51">messages</name><operator pos:start="15:52" pos:end="15:52">.</operator><name pos:start="15:53" pos:end="15:67">UAVStateMessage</name></name>;</import>

<class pos:start="17:1" pos:end="215:1"><specifier pos:start="17:1" pos:end="17:6">public</specifier> class <name pos:start="17:14" pos:end="17:29">RemindsConnector</name> <block pos:start="17:31" pos:end="215:1">{
	<decl_stmt pos:start="18:9" pos:end="20:72"><decl pos:start="18:9" pos:end="20:71"><type pos:start="18:9" pos:end="18:19"><specifier pos:start="18:9" pos:end="18:14">static</specifier> <name pos:start="18:16" pos:end="18:19">Gson</name></type> <name pos:start="18:21" pos:end="18:24">gson</name> <init pos:start="18:26" pos:end="20:71">= <expr pos:start="18:28" pos:end="20:71"><operator pos:start="18:28" pos:end="18:30">new</operator> <call pos:start="18:32" pos:end="18:44"><name pos:start="18:32" pos:end="18:42">GsonBuilder</name><argument_list pos:start="18:43" pos:end="18:44">()</argument_list></call><operator pos:start="18:45" pos:end="18:45">.</operator><call pos:start="18:46" pos:end="18:79"><name pos:start="18:46" pos:end="18:77">enableComplexMapKeySerialization</name><argument_list pos:start="18:78" pos:end="18:79">()</argument_list></call><operator pos:start="18:80" pos:end="18:80">.</operator><call pos:start="18:81" pos:end="18:96"><name pos:start="18:81" pos:end="18:94">serializeNulls</name><argument_list pos:start="18:95" pos:end="18:96">()</argument_list></call>
			<operator pos:start="19:25" pos:end="19:25">.</operator><call pos:start="19:26" pos:end="19:55"><name pos:start="19:26" pos:end="19:38">setDateFormat</name><argument_list pos:start="19:39" pos:end="19:55">(<argument pos:start="19:40" pos:end="19:54"><expr pos:start="19:40" pos:end="19:54"><name pos:start="19:40" pos:end="19:54"><name pos:start="19:40" pos:end="19:49">DateFormat</name><operator pos:start="19:50" pos:end="19:50">.</operator><name pos:start="19:51" pos:end="19:54">LONG</name></name></expr></argument>)</argument_list></call><operator pos:start="19:56" pos:end="19:56">.</operator><call pos:start="19:57" pos:end="19:112"><name pos:start="19:57" pos:end="19:76">setFieldNamingPolicy</name><argument_list pos:start="19:77" pos:end="19:112">(<argument pos:start="19:78" pos:end="19:111"><expr pos:start="19:78" pos:end="19:111"><name pos:start="19:78" pos:end="19:111"><name pos:start="19:78" pos:end="19:94">FieldNamingPolicy</name><operator pos:start="19:95" pos:end="19:95">.</operator><name pos:start="19:96" pos:end="19:111">UPPER_CAMEL_CASE</name></name></expr></argument>)</argument_list></call><operator pos:start="19:113" pos:end="19:113">.</operator><call pos:start="19:114" pos:end="19:128"><name pos:start="19:114" pos:end="19:123">setVersion</name><argument_list pos:start="19:124" pos:end="19:128">(<argument pos:start="19:125" pos:end="19:127"><expr pos:start="19:125" pos:end="19:127"><literal type="number" pos:start="19:125" pos:end="19:127">1.0</literal></expr></argument>)</argument_list></call>
			<operator pos:start="20:25" pos:end="20:25">.</operator><call pos:start="20:26" pos:end="20:62"><name pos:start="20:26" pos:end="20:60">serializeSpecialFloatingPointValues</name><argument_list pos:start="20:61" pos:end="20:62">()</argument_list></call><operator pos:start="20:63" pos:end="20:63">.</operator><call pos:start="20:64" pos:end="20:71"><name pos:start="20:64" pos:end="20:69">create</name><argument_list pos:start="20:70" pos:end="20:71">()</argument_list></call></expr></init></decl>;</decl_stmt>
	<decl_stmt pos:start="21:9" pos:end="21:86"><decl pos:start="21:9" pos:end="21:85"><type pos:start="21:9" pos:end="21:47"><specifier pos:start="21:9" pos:end="21:15">private</specifier> <specifier pos:start="21:17" pos:end="21:22">static</specifier> <name pos:start="21:24" pos:end="21:47"><name pos:start="21:24" pos:end="21:26">Map</name><argument_list type="generic" pos:start="21:27" pos:end="21:47">&lt;<argument pos:start="21:28" pos:end="21:33"><name pos:start="21:28" pos:end="21:33">String</name></argument>, <argument pos:start="21:36" pos:end="21:46"><name pos:start="21:36" pos:end="21:46">MockupProbe</name></argument>&gt;</argument_list></name></type> <name pos:start="21:49" pos:end="21:59">stateProbes</name> <init pos:start="21:61" pos:end="21:85">= <expr pos:start="21:63" pos:end="21:85"><operator pos:start="21:63" pos:end="21:65">new</operator> <call pos:start="21:67" pos:end="21:85"><name pos:start="21:67" pos:end="21:83">ConcurrentHashMap</name><argument_list pos:start="21:84" pos:end="21:85">()</argument_list></call></expr></init></decl>;</decl_stmt>
	<decl_stmt pos:start="22:9" pos:end="22:92"><decl pos:start="22:9" pos:end="22:91"><type pos:start="22:9" pos:end="22:47"><specifier pos:start="22:9" pos:end="22:15">private</specifier> <specifier pos:start="22:17" pos:end="22:22">static</specifier> <name pos:start="22:24" pos:end="22:47"><name pos:start="22:24" pos:end="22:26">Map</name><argument_list type="generic" pos:start="22:27" pos:end="22:47">&lt;<argument pos:start="22:28" pos:end="22:33"><name pos:start="22:28" pos:end="22:33">String</name></argument>, <argument pos:start="22:36" pos:end="22:46"><name pos:start="22:36" pos:end="22:46">MockupProbe</name></argument>&gt;</argument_list></name></type> <name pos:start="22:49" pos:end="22:63">dronologyProbes</name> <init pos:start="22:65" pos:end="22:91">= <expr pos:start="22:67" pos:end="22:91"><operator pos:start="22:67" pos:end="22:69">new</operator> <call pos:start="22:71" pos:end="22:91"><name pos:start="22:71" pos:end="22:89"><name pos:start="22:71" pos:end="22:87">ConcurrentHashMap</name><argument_list type="generic" pos:start="22:88" pos:end="22:89">&lt;&gt;</argument_list></name><argument_list pos:start="22:90" pos:end="22:91">()</argument_list></call></expr></init></decl>;</decl_stmt>
	<decl_stmt pos:start="23:9" pos:end="23:93"><decl pos:start="23:9" pos:end="23:92"><type pos:start="23:9" pos:end="23:47"><specifier pos:start="23:9" pos:end="23:15">private</specifier> <specifier pos:start="23:17" pos:end="23:22">static</specifier> <name pos:start="23:24" pos:end="23:47"><name pos:start="23:24" pos:end="23:26">Map</name><argument_list type="generic" pos:start="23:27" pos:end="23:47">&lt;<argument pos:start="23:28" pos:end="23:33"><name pos:start="23:28" pos:end="23:33">String</name></argument>, <argument pos:start="23:36" pos:end="23:46"><name pos:start="23:36" pos:end="23:46">MockupProbe</name></argument>&gt;</argument_list></name></type> <name pos:start="23:49" pos:end="23:64">monitoringProbes</name> <init pos:start="23:66" pos:end="23:92">= <expr pos:start="23:68" pos:end="23:92"><operator pos:start="23:68" pos:end="23:70">new</operator> <call pos:start="23:72" pos:end="23:92"><name pos:start="23:72" pos:end="23:90"><name pos:start="23:72" pos:end="23:88">ConcurrentHashMap</name><argument_list type="generic" pos:start="23:89" pos:end="23:90">&lt;&gt;</argument_list></name><argument_list pos:start="23:91" pos:end="23:92">()</argument_list></call></expr></init></decl>;</decl_stmt>
	<static pos:start="24:9" pos:end="30:9">static <block pos:start="24:16" pos:end="30:9">{<block_content pos:start="25:17" pos:end="29:17">
		<try pos:start="25:17" pos:end="29:17">try <block pos:start="25:21" pos:end="27:17">{<block_content pos:start="26:25" pos:end="26:67">
			<expr_stmt pos:start="26:25" pos:end="26:67"><expr pos:start="26:25" pos:end="26:66"><call pos:start="26:25" pos:end="26:66"><name pos:start="26:25" pos:end="26:41"><name pos:start="26:25" pos:end="26:33">Publisher</name><operator pos:start="26:34" pos:end="26:34">.</operator><name pos:start="26:35" pos:end="26:41">setMode</name></name><argument_list pos:start="26:42" pos:end="26:66">(<argument pos:start="26:43" pos:end="26:65"><expr pos:start="26:43" pos:end="26:65"><name pos:start="26:43" pos:end="26:65"><name pos:start="26:43" pos:end="26:51">Publisher</name><operator pos:start="26:52" pos:end="26:52">.</operator><name pos:start="26:53" pos:end="26:56">Mode</name><operator pos:start="26:57" pos:end="26:57">.</operator><name pos:start="26:58" pos:end="26:65">M_SOCKET</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		</block_content>}</block> <catch pos:start="27:19" pos:end="29:17">catch <parameter_list pos:start="27:25" pos:end="27:37">(<parameter pos:start="27:26" pos:end="27:36"><decl pos:start="27:26" pos:end="27:36"><type pos:start="27:26" pos:end="27:36"><name pos:start="27:26" pos:end="27:34">Throwable</name></type> <name pos:start="27:36" pos:end="27:36">e</name></decl></parameter>)</parameter_list> <block pos:start="27:39" pos:end="29:17">{<block_content pos:start="28:25" pos:end="28:44">
			<expr_stmt pos:start="28:25" pos:end="28:44"><expr pos:start="28:25" pos:end="28:43"><call pos:start="28:25" pos:end="28:43"><name pos:start="28:25" pos:end="28:41"><name pos:start="28:25" pos:end="28:25">e</name><operator pos:start="28:26" pos:end="28:26">.</operator><name pos:start="28:27" pos:end="28:41">printStackTrace</name></name><argument_list pos:start="28:42" pos:end="28:43">()</argument_list></call></expr>;</expr_stmt>
		</block_content>}</block></catch></try>
	</block_content>}</block></static>

	<function pos:start="32:9" pos:end="41:9"><type pos:start="32:9" pos:end="32:39"><specifier pos:start="32:9" pos:end="32:14">public</specifier> <specifier pos:start="32:16" pos:end="32:21">static</specifier> <specifier pos:start="32:23" pos:end="32:34">synchronized</specifier> <name pos:start="32:36" pos:end="32:39">void</name></type> <name pos:start="32:41" pos:end="32:46">notify</name><parameter_list pos:start="32:47" pos:end="32:71">(<parameter pos:start="32:48" pos:end="32:70"><decl pos:start="32:48" pos:end="32:70"><type pos:start="32:48" pos:end="32:62"><name pos:start="32:48" pos:end="32:62">UAVStateMessage</name></type> <name pos:start="32:64" pos:end="32:70">message</name></decl></parameter>)</parameter_list> <block pos:start="32:73" pos:end="41:9">{<block_content pos:start="33:17" pos:end="40:17">
		<decl_stmt pos:start="33:17" pos:end="33:75"><decl pos:start="33:17" pos:end="33:74"><type pos:start="33:17" pos:end="33:27"><name pos:start="33:17" pos:end="33:27">MockupProbe</name></type> <name pos:start="33:29" pos:end="33:38">probePoint</name> <init pos:start="33:40" pos:end="33:74">= <expr pos:start="33:42" pos:end="33:74"><call pos:start="33:42" pos:end="33:74"><name pos:start="33:42" pos:end="33:54">getStateProbe</name><argument_list pos:start="33:55" pos:end="33:74">(<argument pos:start="33:56" pos:end="33:73"><expr pos:start="33:56" pos:end="33:73"><call pos:start="33:56" pos:end="33:73"><name pos:start="33:56" pos:end="33:71"><name pos:start="33:56" pos:end="33:62">message</name><operator pos:start="33:63" pos:end="33:63">.</operator><name pos:start="33:64" pos:end="33:71">getUavid</name></name><argument_list pos:start="33:72" pos:end="33:73">()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<comment type="line" pos:start="34:17" pos:end="34:31">// p.publish();</comment>
		<decl_stmt pos:start="35:17" pos:end="35:68"><decl pos:start="35:17" pos:end="35:67"><type pos:start="35:17" pos:end="35:40"><name pos:start="35:17" pos:end="35:40">TransmittableEventObject</name></type> <name pos:start="35:42" pos:end="35:46">event</name> <init pos:start="35:48" pos:end="35:67">= <expr pos:start="35:50" pos:end="35:67"><call pos:start="35:50" pos:end="35:67"><name pos:start="35:50" pos:end="35:58">transform</name><argument_list pos:start="35:59" pos:end="35:67">(<argument pos:start="35:60" pos:end="35:66"><expr pos:start="35:60" pos:end="35:66"><name pos:start="35:60" pos:end="35:66">message</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<try pos:start="36:17" pos:end="40:17">try <block pos:start="36:21" pos:end="38:17">{<block_content pos:start="37:25" pos:end="37:51">
			<expr_stmt pos:start="37:25" pos:end="37:51"><expr pos:start="37:25" pos:end="37:50"><call pos:start="37:25" pos:end="37:50"><name pos:start="37:25" pos:end="37:43"><name pos:start="37:25" pos:end="37:34">probePoint</name><operator pos:start="37:35" pos:end="37:35">.</operator><name pos:start="37:36" pos:end="37:43">sendData</name></name><argument_list pos:start="37:44" pos:end="37:50">(<argument pos:start="37:45" pos:end="37:49"><expr pos:start="37:45" pos:end="37:49"><name pos:start="37:45" pos:end="37:49">event</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		</block_content>}</block> <catch pos:start="38:19" pos:end="40:17">catch <parameter_list pos:start="38:25" pos:end="38:37">(<parameter pos:start="38:26" pos:end="38:36"><decl pos:start="38:26" pos:end="38:36"><type pos:start="38:26" pos:end="38:36"><name pos:start="38:26" pos:end="38:34">Throwable</name></type> <name pos:start="38:36" pos:end="38:36">t</name></decl></parameter>)</parameter_list> <block pos:start="38:39" pos:end="40:17">{<block_content pos:start="39:25" pos:end="39:44">
			<expr_stmt pos:start="39:25" pos:end="39:44"><expr pos:start="39:25" pos:end="39:43"><call pos:start="39:25" pos:end="39:43"><name pos:start="39:25" pos:end="39:41"><name pos:start="39:25" pos:end="39:25">t</name><operator pos:start="39:26" pos:end="39:26">.</operator><name pos:start="39:27" pos:end="39:41">printStackTrace</name></name><argument_list pos:start="39:42" pos:end="39:43">()</argument_list></call></expr>;</expr_stmt>
		</block_content>}</block></catch></try>
	</block_content>}</block></function>

	<function pos:start="43:9" pos:end="52:9"><type pos:start="43:9" pos:end="43:39"><specifier pos:start="43:9" pos:end="43:14">public</specifier> <specifier pos:start="43:16" pos:end="43:21">static</specifier> <specifier pos:start="43:23" pos:end="43:34">synchronized</specifier> <name pos:start="43:36" pos:end="43:39">void</name></type> <name pos:start="43:41" pos:end="43:46">notify</name><parameter_list pos:start="43:47" pos:end="43:76">(<parameter pos:start="43:48" pos:end="43:75"><decl pos:start="43:48" pos:end="43:75"><type pos:start="43:48" pos:end="43:67"><name pos:start="43:48" pos:end="43:67">UAVMonitoringMessage</name></type> <name pos:start="43:69" pos:end="43:75">message</name></decl></parameter>)</parameter_list> <block pos:start="43:78" pos:end="52:9">{<block_content pos:start="44:17" pos:end="51:17">
		<decl_stmt pos:start="44:17" pos:end="44:81"><decl pos:start="44:17" pos:end="44:80"><type pos:start="44:17" pos:end="44:27"><name pos:start="44:17" pos:end="44:27">MockupProbe</name></type> <name pos:start="44:29" pos:end="44:38">probePoint</name> <init pos:start="44:40" pos:end="44:80">= <expr pos:start="44:42" pos:end="44:80"><call pos:start="44:42" pos:end="44:80"><name pos:start="44:42" pos:end="44:60">getMonitoringProbes</name><argument_list pos:start="44:61" pos:end="44:80">(<argument pos:start="44:62" pos:end="44:79"><expr pos:start="44:62" pos:end="44:79"><call pos:start="44:62" pos:end="44:79"><name pos:start="44:62" pos:end="44:77"><name pos:start="44:62" pos:end="44:68">message</name><operator pos:start="44:69" pos:end="44:69">.</operator><name pos:start="44:70" pos:end="44:77">getUavid</name></name><argument_list pos:start="44:78" pos:end="44:79">()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<comment type="line" pos:start="45:17" pos:end="45:31">// p.publish();</comment>
		<decl_stmt pos:start="46:17" pos:end="46:68"><decl pos:start="46:17" pos:end="46:67"><type pos:start="46:17" pos:end="46:40"><name pos:start="46:17" pos:end="46:40">TransmittableEventObject</name></type> <name pos:start="46:42" pos:end="46:46">event</name> <init pos:start="46:48" pos:end="46:67">= <expr pos:start="46:50" pos:end="46:67"><call pos:start="46:50" pos:end="46:67"><name pos:start="46:50" pos:end="46:58">transform</name><argument_list pos:start="46:59" pos:end="46:67">(<argument pos:start="46:60" pos:end="46:66"><expr pos:start="46:60" pos:end="46:66"><name pos:start="46:60" pos:end="46:66">message</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<try pos:start="47:17" pos:end="51:17">try <block pos:start="47:21" pos:end="49:17">{<block_content pos:start="48:25" pos:end="48:51">
			<expr_stmt pos:start="48:25" pos:end="48:51"><expr pos:start="48:25" pos:end="48:50"><call pos:start="48:25" pos:end="48:50"><name pos:start="48:25" pos:end="48:43"><name pos:start="48:25" pos:end="48:34">probePoint</name><operator pos:start="48:35" pos:end="48:35">.</operator><name pos:start="48:36" pos:end="48:43">sendData</name></name><argument_list pos:start="48:44" pos:end="48:50">(<argument pos:start="48:45" pos:end="48:49"><expr pos:start="48:45" pos:end="48:49"><name pos:start="48:45" pos:end="48:49">event</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		</block_content>}</block> <catch pos:start="49:19" pos:end="51:17">catch <parameter_list pos:start="49:25" pos:end="49:37">(<parameter pos:start="49:26" pos:end="49:36"><decl pos:start="49:26" pos:end="49:36"><type pos:start="49:26" pos:end="49:36"><name pos:start="49:26" pos:end="49:34">Throwable</name></type> <name pos:start="49:36" pos:end="49:36">t</name></decl></parameter>)</parameter_list> <block pos:start="49:39" pos:end="51:17">{<block_content pos:start="50:25" pos:end="50:44">
			<expr_stmt pos:start="50:25" pos:end="50:44"><expr pos:start="50:25" pos:end="50:43"><call pos:start="50:25" pos:end="50:43"><name pos:start="50:25" pos:end="50:41"><name pos:start="50:25" pos:end="50:25">t</name><operator pos:start="50:26" pos:end="50:26">.</operator><name pos:start="50:27" pos:end="50:41">printStackTrace</name></name><argument_list pos:start="50:42" pos:end="50:43">()</argument_list></call></expr>;</expr_stmt>
		</block_content>}</block></catch></try>
	</block_content>}</block></function>

	<comment type="line" pos:start="54:9" pos:end="54:69">// public static void notify(UAVStateChangeMessage message) {</comment>
	<comment type="line" pos:start="55:9" pos:end="55:10">//</comment>
	<comment type="line" pos:start="56:9" pos:end="56:80">// MockupProbe probePoint = getDronologyProbes(message.getType().name(),</comment>
	<comment type="line" pos:start="57:9" pos:end="57:31">// message.getUavid());</comment>
	<comment type="line" pos:start="58:9" pos:end="58:26">// // p.publish();</comment>
	<comment type="line" pos:start="59:9" pos:end="59:63">// TransmittableEventObject event = transform(message);</comment>
	<comment type="line" pos:start="60:9" pos:end="60:16">// try {</comment>
	<comment type="line" pos:start="61:9" pos:end="61:38">// probePoint.sendData(event);</comment>
	<comment type="line" pos:start="62:9" pos:end="62:34">// } catch (Throwable t) {</comment>
	<comment type="line" pos:start="63:9" pos:end="63:31">// t.printStackTrace();</comment>
	<comment type="line" pos:start="64:9" pos:end="64:12">// }</comment>
	<comment type="line" pos:start="65:9" pos:end="65:12">// }</comment>
	<function pos:start="66:9" pos:end="75:9"><type pos:start="66:9" pos:end="66:26"><specifier pos:start="66:9" pos:end="66:14">public</specifier> <specifier pos:start="66:16" pos:end="66:21">static</specifier> <name pos:start="66:23" pos:end="66:26">void</name></type> <name pos:start="66:28" pos:end="66:33">notify</name><parameter_list pos:start="66:34" pos:end="66:64">(<parameter pos:start="66:35" pos:end="66:63"><decl pos:start="66:35" pos:end="66:63"><type pos:start="66:35" pos:end="66:55"><name pos:start="66:35" pos:end="66:55">UAVMonitorableMessage</name></type> <name pos:start="66:57" pos:end="66:63">message</name></decl></parameter>)</parameter_list> <block pos:start="66:66" pos:end="75:9">{<block_content pos:start="67:17" pos:end="74:17">
		<decl_stmt pos:start="67:17" pos:end="67:59"><decl pos:start="67:17" pos:end="67:58"><type pos:start="67:17" pos:end="67:27"><name pos:start="67:17" pos:end="67:27">MockupProbe</name></type> <name pos:start="67:29" pos:end="67:38">probePoint</name> <init pos:start="67:40" pos:end="67:58">= <expr pos:start="67:42" pos:end="67:58"><call pos:start="67:42" pos:end="67:58"><name pos:start="67:42" pos:end="67:49">getProbe</name><argument_list pos:start="67:50" pos:end="67:58">(<argument pos:start="67:51" pos:end="67:57"><expr pos:start="67:51" pos:end="67:57"><name pos:start="67:51" pos:end="67:57">message</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<comment type="line" pos:start="68:17" pos:end="68:31">// p.publish();</comment>
		<decl_stmt pos:start="69:17" pos:end="69:68"><decl pos:start="69:17" pos:end="69:67"><type pos:start="69:17" pos:end="69:40"><name pos:start="69:17" pos:end="69:40">TransmittableEventObject</name></type> <name pos:start="69:42" pos:end="69:46">event</name> <init pos:start="69:48" pos:end="69:67">= <expr pos:start="69:50" pos:end="69:67"><call pos:start="69:50" pos:end="69:67"><name pos:start="69:50" pos:end="69:58">transform</name><argument_list pos:start="69:59" pos:end="69:67">(<argument pos:start="69:60" pos:end="69:66"><expr pos:start="69:60" pos:end="69:66"><name pos:start="69:60" pos:end="69:66">message</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<try pos:start="70:17" pos:end="74:17">try <block pos:start="70:21" pos:end="72:17">{<block_content pos:start="71:25" pos:end="71:51">
			<expr_stmt pos:start="71:25" pos:end="71:51"><expr pos:start="71:25" pos:end="71:50"><call pos:start="71:25" pos:end="71:50"><name pos:start="71:25" pos:end="71:43"><name pos:start="71:25" pos:end="71:34">probePoint</name><operator pos:start="71:35" pos:end="71:35">.</operator><name pos:start="71:36" pos:end="71:43">sendData</name></name><argument_list pos:start="71:44" pos:end="71:50">(<argument pos:start="71:45" pos:end="71:49"><expr pos:start="71:45" pos:end="71:49"><name pos:start="71:45" pos:end="71:49">event</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		</block_content>}</block> <catch pos:start="72:19" pos:end="74:17">catch <parameter_list pos:start="72:25" pos:end="72:37">(<parameter pos:start="72:26" pos:end="72:36"><decl pos:start="72:26" pos:end="72:36"><type pos:start="72:26" pos:end="72:36"><name pos:start="72:26" pos:end="72:34">Throwable</name></type> <name pos:start="72:36" pos:end="72:36">t</name></decl></parameter>)</parameter_list> <block pos:start="72:39" pos:end="74:17">{<block_content pos:start="73:25" pos:end="73:44">
			<expr_stmt pos:start="73:25" pos:end="73:44"><expr pos:start="73:25" pos:end="73:43"><call pos:start="73:25" pos:end="73:43"><name pos:start="73:25" pos:end="73:41"><name pos:start="73:25" pos:end="73:25">t</name><operator pos:start="73:26" pos:end="73:26">.</operator><name pos:start="73:27" pos:end="73:41">printStackTrace</name></name><argument_list pos:start="73:42" pos:end="73:43">()</argument_list></call></expr>;</expr_stmt>
		</block_content>}</block></catch></try>
	</block_content>}</block></function>

	<function pos:start="77:9" pos:end="105:9"><type pos:start="77:9" pos:end="77:34"><specifier pos:start="77:9" pos:end="77:15">private</specifier> <specifier pos:start="77:17" pos:end="77:22">static</specifier> <name pos:start="77:24" pos:end="77:34">MockupProbe</name></type> <name pos:start="77:36" pos:end="77:43">getProbe</name><parameter_list pos:start="77:44" pos:end="77:74">(<parameter pos:start="77:45" pos:end="77:73"><decl pos:start="77:45" pos:end="77:73"><type pos:start="77:45" pos:end="77:65"><name pos:start="77:45" pos:end="77:65">UAVMonitorableMessage</name></type> <name pos:start="77:67" pos:end="77:73">message</name></decl></parameter>)</parameter_list> <block pos:start="77:76" pos:end="105:9">{<block_content pos:start="78:17" pos:end="104:26">
		<decl_stmt pos:start="78:17" pos:end="78:50"><decl pos:start="78:17" pos:end="78:49"><type pos:start="78:17" pos:end="78:22"><name pos:start="78:17" pos:end="78:22">String</name></type> <name pos:start="78:24" pos:end="78:28">uavid</name> <init pos:start="78:30" pos:end="78:49">= <expr pos:start="78:32" pos:end="78:49"><call pos:start="78:32" pos:end="78:49"><name pos:start="78:32" pos:end="78:47"><name pos:start="78:32" pos:end="78:38">message</name><operator pos:start="78:39" pos:end="78:39">.</operator><name pos:start="78:40" pos:end="78:47">getUavid</name></name><argument_list pos:start="78:48" pos:end="78:49">()</argument_list></call></expr></init></decl>;</decl_stmt>
		<decl_stmt pos:start="79:17" pos:end="79:110"><decl pos:start="79:17" pos:end="79:109"><type pos:start="79:17" pos:end="79:22"><name pos:start="79:17" pos:end="79:22">String</name></type> <name pos:start="79:24" pos:end="79:30">msgType</name> <init pos:start="79:32" pos:end="79:109">= <expr pos:start="79:34" pos:end="79:109"><ternary pos:start="79:34" pos:end="79:109"><condition pos:start="79:34" pos:end="79:60"><expr pos:start="79:34" pos:end="79:58"><call pos:start="79:34" pos:end="79:50"><name pos:start="79:34" pos:end="79:48"><name pos:start="79:34" pos:end="79:40">message</name><operator pos:start="79:41" pos:end="79:41">.</operator><name pos:start="79:42" pos:end="79:48">getData</name></name><argument_list pos:start="79:49" pos:end="79:50">()</argument_list></call> <operator pos:start="79:52" pos:end="79:53">!=</operator> <literal type="null" pos:start="79:55" pos:end="79:58">null</literal></expr> ?</condition><then pos:start="79:62" pos:end="79:82"> <expr pos:start="79:62" pos:end="79:82"><call pos:start="79:62" pos:end="79:82"><name pos:start="79:62" pos:end="79:80"><name pos:start="79:62" pos:end="79:68">message</name><operator pos:start="79:69" pos:end="79:69">.</operator><name pos:start="79:70" pos:end="79:80">getDataType</name></name><argument_list pos:start="79:81" pos:end="79:82">()</argument_list></call></expr> </then><else pos:start="79:84" pos:end="79:109">: <expr pos:start="79:86" pos:end="79:109"><call pos:start="79:86" pos:end="79:102"><name pos:start="79:86" pos:end="79:100"><name pos:start="79:86" pos:end="79:92">message</name><operator pos:start="79:93" pos:end="79:93">.</operator><name pos:start="79:94" pos:end="79:100">getType</name></name><argument_list pos:start="79:101" pos:end="79:102">()</argument_list></call><operator pos:start="79:103" pos:end="79:103">.</operator><call pos:start="79:104" pos:end="79:109"><name pos:start="79:104" pos:end="79:107">name</name><argument_list pos:start="79:108" pos:end="79:109">()</argument_list></call></expr></else></ternary></expr></init></decl>;</decl_stmt>
		<if_stmt pos:start="80:17" pos:end="95:17"><if pos:start="80:17" pos:end="83:17">if <condition pos:start="80:20" pos:end="81:68">(<expr pos:start="80:21" pos:end="81:67"><call pos:start="80:21" pos:end="80:49"><name pos:start="80:21" pos:end="80:34"><name pos:start="80:21" pos:end="80:27">msgType</name><operator pos:start="80:28" pos:end="80:28">.</operator><name pos:start="80:29" pos:end="80:34">equals</name></name><argument_list pos:start="80:35" pos:end="80:49">(<argument pos:start="80:36" pos:end="80:48"><expr pos:start="80:36" pos:end="80:48"><literal type="string" pos:start="80:36" pos:end="80:48">"GoToCommand"</literal></expr></argument>)</argument_list></call> <operator pos:start="80:51" pos:end="80:52">||</operator> <call pos:start="80:54" pos:end="80:85"><name pos:start="80:54" pos:end="80:67"><name pos:start="80:54" pos:end="80:60">msgType</name><operator pos:start="80:61" pos:end="80:61">.</operator><name pos:start="80:62" pos:end="80:67">equals</name></name><argument_list pos:start="80:68" pos:end="80:85">(<argument pos:start="80:69" pos:end="80:84"><expr pos:start="80:69" pos:end="80:84"><literal type="string" pos:start="80:69" pos:end="80:84">"TakeoffCommand"</literal></expr></argument>)</argument_list></call> <operator pos:start="80:87" pos:end="80:88">||</operator> <call pos:start="80:90" pos:end="80:128"><name pos:start="80:90" pos:end="80:103"><name pos:start="80:90" pos:end="80:96">msgType</name><operator pos:start="80:97" pos:end="80:97">.</operator><name pos:start="80:98" pos:end="80:103">equals</name></name><argument_list pos:start="80:104" pos:end="80:128">(<argument pos:start="80:105" pos:end="80:127"><expr pos:start="80:105" pos:end="80:127"><literal type="string" pos:start="80:105" pos:end="80:127">"SetGroundSpeedCommand"</literal></expr></argument>)</argument_list></call>
				<operator pos:start="81:33" pos:end="81:34">||</operator> <call pos:start="81:36" pos:end="81:67"><name pos:start="81:36" pos:end="81:49"><name pos:start="81:36" pos:end="81:42">msgType</name><operator pos:start="81:43" pos:end="81:43">.</operator><name pos:start="81:44" pos:end="81:49">equals</name></name><argument_list pos:start="81:50" pos:end="81:67">(<argument pos:start="81:51" pos:end="81:66"><expr pos:start="81:51" pos:end="81:66"><literal type="string" pos:start="81:51" pos:end="81:66">"SetModeCommand"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="81:70" pos:end="83:17">{<block_content pos:start="82:25" pos:end="82:50">
			<expr_stmt pos:start="82:25" pos:end="82:50"><expr pos:start="82:25" pos:end="82:49"><name pos:start="82:25" pos:end="82:31">msgType</name> <operator pos:start="82:33" pos:end="82:33">=</operator> <literal type="string" pos:start="82:35" pos:end="82:49">"flightcontrol"</literal></expr>;</expr_stmt>
		</block_content>}</block></if> <if type="elseif" pos:start="83:19" pos:end="86:17">else if <condition pos:start="83:27" pos:end="84:87">(<expr pos:start="83:28" pos:end="84:86"><call pos:start="83:28" pos:end="83:48"><name pos:start="83:28" pos:end="83:46"><name pos:start="83:28" pos:end="83:34">message</name><operator pos:start="83:35" pos:end="83:35">.</operator><name pos:start="83:36" pos:end="83:46">getDataType</name></name><argument_list pos:start="83:47" pos:end="83:48">()</argument_list></call><operator pos:start="83:49" pos:end="83:49">.</operator><call pos:start="83:50" pos:end="83:71"><name pos:start="83:50" pos:end="83:55">equals</name><argument_list pos:start="83:56" pos:end="83:71">(<argument pos:start="83:57" pos:end="83:70"><expr pos:start="83:57" pos:end="83:70"><literal type="string" pos:start="83:57" pos:end="83:70">"STATE_CHANGE"</literal></expr></argument>)</argument_list></call>
				<operator pos:start="84:33" pos:end="84:34">||</operator> <call pos:start="84:36" pos:end="84:52"><name pos:start="84:36" pos:end="84:50"><name pos:start="84:36" pos:end="84:42">message</name><operator pos:start="84:43" pos:end="84:43">.</operator><name pos:start="84:44" pos:end="84:50">getType</name></name><argument_list pos:start="84:51" pos:end="84:52">()</argument_list></call><operator pos:start="84:53" pos:end="84:53">.</operator><call pos:start="84:54" pos:end="84:63"><name pos:start="84:54" pos:end="84:61">toString</name><argument_list pos:start="84:62" pos:end="84:63">()</argument_list></call><operator pos:start="84:64" pos:end="84:64">.</operator><call pos:start="84:65" pos:end="84:86"><name pos:start="84:65" pos:end="84:70">equals</name><argument_list pos:start="84:71" pos:end="84:86">(<argument pos:start="84:72" pos:end="84:85"><expr pos:start="84:72" pos:end="84:85"><literal type="string" pos:start="84:72" pos:end="84:85">"STATE_CHANGE"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="84:89" pos:end="86:17">{<block_content pos:start="85:25" pos:end="85:47">
			<expr_stmt pos:start="85:25" pos:end="85:47"><expr pos:start="85:25" pos:end="85:46"><name pos:start="85:25" pos:end="85:31">msgType</name> <operator pos:start="85:33" pos:end="85:33">=</operator> <literal type="string" pos:start="85:35" pos:end="85:46">"uavcontrol"</literal></expr>;</expr_stmt>
		</block_content>}</block></if>

		<if type="elseif" pos:start="88:17" pos:end="91:17">else if <condition pos:start="88:25" pos:end="89:108">(<expr pos:start="88:26" pos:end="89:107"><call pos:start="88:26" pos:end="88:53"><name pos:start="88:26" pos:end="88:39"><name pos:start="88:26" pos:end="88:32">msgType</name><operator pos:start="88:33" pos:end="88:33">.</operator><name pos:start="88:34" pos:end="88:39">equals</name></name><argument_list pos:start="88:40" pos:end="88:53">(<argument pos:start="88:41" pos:end="88:52"><expr pos:start="88:41" pos:end="88:52"><literal type="string" pos:start="88:41" pos:end="88:52">"planchange"</literal></expr></argument>)</argument_list></call> <operator pos:start="88:55" pos:end="88:56">||</operator> <call pos:start="88:58" pos:end="88:74"><name pos:start="88:58" pos:end="88:72"><name pos:start="88:58" pos:end="88:64">message</name><operator pos:start="88:65" pos:end="88:65">.</operator><name pos:start="88:66" pos:end="88:72">getType</name></name><argument_list pos:start="88:73" pos:end="88:74">()</argument_list></call><operator pos:start="88:75" pos:end="88:75">.</operator><call pos:start="88:76" pos:end="88:85"><name pos:start="88:76" pos:end="88:83">toString</name><argument_list pos:start="88:84" pos:end="88:85">()</argument_list></call><operator pos:start="88:86" pos:end="88:86">.</operator><call pos:start="88:87" pos:end="88:112"><name pos:start="88:87" pos:end="88:92">equals</name><argument_list pos:start="88:93" pos:end="88:112">(<argument pos:start="88:94" pos:end="88:111"><expr pos:start="88:94" pos:end="88:111"><literal type="string" pos:start="88:94" pos:end="88:111">"WAYPOINT_REACHED"</literal></expr></argument>)</argument_list></call>
				<operator pos:start="89:33" pos:end="89:34">||</operator> <call pos:start="89:36" pos:end="89:63"><name pos:start="89:36" pos:end="89:49"><name pos:start="89:36" pos:end="89:42">msgType</name><operator pos:start="89:43" pos:end="89:43">.</operator><name pos:start="89:44" pos:end="89:49">equals</name></name><argument_list pos:start="89:50" pos:end="89:63">(<argument pos:start="89:51" pos:end="89:62"><expr pos:start="89:51" pos:end="89:62"><literal type="string" pos:start="89:51" pos:end="89:62">"FlightPlan"</literal></expr></argument>)</argument_list></call><operator pos:start="89:64" pos:end="89:65">||</operator> <call pos:start="89:67" pos:end="89:107"><name pos:start="89:67" pos:end="89:80"><name pos:start="89:67" pos:end="89:73">msgType</name><operator pos:start="89:74" pos:end="89:74">.</operator><name pos:start="89:75" pos:end="89:80">equals</name></name><argument_list pos:start="89:81" pos:end="89:107">(<argument pos:start="89:82" pos:end="89:106"><expr pos:start="89:82" pos:end="89:106"><literal type="string" pos:start="89:82" pos:end="89:106">"SimpleTakeoffFlightPlan"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="89:110" pos:end="91:17">{<block_content pos:start="90:25" pos:end="90:50">
			<expr_stmt pos:start="90:25" pos:end="90:50"><expr pos:start="90:25" pos:end="90:49"><name pos:start="90:25" pos:end="90:31">msgType</name> <operator pos:start="90:33" pos:end="90:33">=</operator> <literal type="string" pos:start="90:35" pos:end="90:49">"routeplanning"</literal></expr>;</expr_stmt>
		</block_content>}</block></if> <if type="elseif" pos:start="91:19" pos:end="93:17">else if <condition pos:start="91:27" pos:end="91:135">(<expr pos:start="91:28" pos:end="91:134"><call pos:start="91:28" pos:end="91:44"><name pos:start="91:28" pos:end="91:42"><name pos:start="91:28" pos:end="91:34">message</name><operator pos:start="91:35" pos:end="91:35">.</operator><name pos:start="91:36" pos:end="91:42">getType</name></name><argument_list pos:start="91:43" pos:end="91:44">()</argument_list></call><operator pos:start="91:45" pos:end="91:45">.</operator><call pos:start="91:46" pos:end="91:55"><name pos:start="91:46" pos:end="91:53">toString</name><argument_list pos:start="91:54" pos:end="91:55">()</argument_list></call><operator pos:start="91:56" pos:end="91:56">.</operator><call pos:start="91:57" pos:end="91:88"><name pos:start="91:57" pos:end="91:62">equals</name><argument_list pos:start="91:63" pos:end="91:88">(<argument pos:start="91:64" pos:end="91:87"><expr pos:start="91:64" pos:end="91:87"><literal type="string" pos:start="91:64" pos:end="91:87">"PHYSICAL_UAV_ACTIVATED"</literal></expr></argument>)</argument_list></call> <operator pos:start="91:90" pos:end="91:91">||</operator> <call pos:start="91:93" pos:end="91:113"><name pos:start="91:93" pos:end="91:111"><name pos:start="91:93" pos:end="91:99">message</name><operator pos:start="91:100" pos:end="91:100">.</operator><name pos:start="91:101" pos:end="91:111">getDataType</name></name><argument_list pos:start="91:112" pos:end="91:113">()</argument_list></call><operator pos:start="91:114" pos:end="91:114">.</operator><call pos:start="91:115" pos:end="91:134"><name pos:start="91:115" pos:end="91:120">equals</name><argument_list pos:start="91:121" pos:end="91:134">(<argument pos:start="91:122" pos:end="91:133"><expr pos:start="91:122" pos:end="91:133"><literal type="string" pos:start="91:122" pos:end="91:133">"FlightMode"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="91:137" pos:end="93:17">{<block_content pos:start="92:25" pos:end="92:47">
			<expr_stmt pos:start="92:25" pos:end="92:47"><expr pos:start="92:25" pos:end="92:46"><name pos:start="92:25" pos:end="92:31">msgType</name> <operator pos:start="92:33" pos:end="92:33">=</operator> <literal type="string" pos:start="92:35" pos:end="92:46">"uavcontrol"</literal></expr>;</expr_stmt>
		</block_content>}</block></if> <else pos:start="93:19" pos:end="95:17">else <block pos:start="93:24" pos:end="95:17">{<block_content pos:start="94:25" pos:end="94:106">
			<expr_stmt pos:start="94:25" pos:end="94:106"><expr pos:start="94:25" pos:end="94:105"><call pos:start="94:25" pos:end="94:105"><name pos:start="94:25" pos:end="94:42"><name pos:start="94:25" pos:end="94:30">System</name><operator pos:start="94:31" pos:end="94:31">.</operator><name pos:start="94:32" pos:end="94:34">out</name><operator pos:start="94:35" pos:end="94:35">.</operator><name pos:start="94:36" pos:end="94:42">println</name></name><argument_list pos:start="94:43" pos:end="94:105">(<argument pos:start="94:44" pos:end="94:104"><expr pos:start="94:44" pos:end="94:104"><literal type="string" pos:start="94:44" pos:end="94:54">"&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;"</literal> <operator pos:start="94:56" pos:end="94:56">+</operator> <call pos:start="94:58" pos:end="94:75"><name pos:start="94:58" pos:end="94:73"><name pos:start="94:58" pos:end="94:64">message</name><operator pos:start="94:65" pos:end="94:65">.</operator><name pos:start="94:66" pos:end="94:73">toString</name></name><argument_list pos:start="94:74" pos:end="94:75">()</argument_list></call> <operator pos:start="94:77" pos:end="94:77">+</operator> <literal type="string" pos:start="94:79" pos:end="94:84">"::::"</literal> <operator pos:start="94:86" pos:end="94:86">+</operator> <call pos:start="94:88" pos:end="94:104"><name pos:start="94:88" pos:end="94:102"><name pos:start="94:88" pos:end="94:94">message</name><operator pos:start="94:95" pos:end="94:95">.</operator><name pos:start="94:96" pos:end="94:102">getData</name></name><argument_list pos:start="94:103" pos:end="94:104">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		</block_content>}</block></else></if_stmt>
		<decl_stmt pos:start="96:17" pos:end="96:65"><decl pos:start="96:17" pos:end="96:64"><type pos:start="96:17" pos:end="96:22"><name pos:start="96:17" pos:end="96:22">String</name></type> <name pos:start="96:24" pos:end="96:25">id</name> <init pos:start="96:27" pos:end="96:64">= <expr pos:start="96:29" pos:end="96:64"><literal type="string" pos:start="96:29" pos:end="96:40">"dronology."</literal> <operator pos:start="96:42" pos:end="96:42">+</operator> <name pos:start="96:44" pos:end="96:50">msgType</name> <operator pos:start="96:52" pos:end="96:52">+</operator> <literal type="string" pos:start="96:54" pos:end="96:56">"."</literal> <operator pos:start="96:58" pos:end="96:58">+</operator> <name pos:start="96:60" pos:end="96:64">uavid</name></expr></init></decl>;</decl_stmt>
		<if_stmt pos:start="97:17" pos:end="99:17"><if pos:start="97:17" pos:end="99:17">if <condition pos:start="97:20" pos:end="97:52">(<expr pos:start="97:21" pos:end="97:51"><call pos:start="97:21" pos:end="97:51"><name pos:start="97:21" pos:end="97:47"><name pos:start="97:21" pos:end="97:35">dronologyProbes</name><operator pos:start="97:36" pos:end="97:36">.</operator><name pos:start="97:37" pos:end="97:47">containsKey</name></name><argument_list pos:start="97:48" pos:end="97:51">(<argument pos:start="97:49" pos:end="97:50"><expr pos:start="97:49" pos:end="97:50"><name pos:start="97:49" pos:end="97:50">id</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="97:54" pos:end="99:17">{<block_content pos:start="98:25" pos:end="98:55">
			<return pos:start="98:25" pos:end="98:55">return <expr pos:start="98:32" pos:end="98:54"><call pos:start="98:32" pos:end="98:54"><name pos:start="98:32" pos:end="98:50"><name pos:start="98:32" pos:end="98:46">dronologyProbes</name><operator pos:start="98:47" pos:end="98:47">.</operator><name pos:start="98:48" pos:end="98:50">get</name></name><argument_list pos:start="98:51" pos:end="98:54">(<argument pos:start="98:52" pos:end="98:53"><expr pos:start="98:52" pos:end="98:53"><name pos:start="98:52" pos:end="98:53">id</name></expr></argument>)</argument_list></call></expr>;</return>
		</block_content>}</block></if></if_stmt>
		<decl_stmt pos:start="100:17" pos:end="100:56"><decl pos:start="100:17" pos:end="100:55"><type pos:start="100:17" pos:end="100:22"><name pos:start="100:17" pos:end="100:22">String</name></type> <name pos:start="100:24" pos:end="100:28">scope</name> <init pos:start="100:30" pos:end="100:55">= <expr pos:start="100:32" pos:end="100:55"><operator pos:start="100:32" pos:end="100:32">(</operator><literal type="string" pos:start="100:33" pos:end="100:44">"dronology."</literal> <operator pos:start="100:46" pos:end="100:46">+</operator> <name pos:start="100:48" pos:end="100:54">msgType</name><operator pos:start="100:55" pos:end="100:55">)</operator></expr></init></decl>;</decl_stmt>
		<comment type="line" pos:start="101:17" pos:end="101:63">// String probename = id + "-dronologymessage";</comment>
		<decl_stmt pos:start="102:17" pos:end="102:82"><decl pos:start="102:17" pos:end="102:81"><type pos:start="102:17" pos:end="102:27"><name pos:start="102:17" pos:end="102:27">MockupProbe</name></type> <name pos:start="102:29" pos:end="102:30">pp</name> <init pos:start="102:32" pos:end="102:81">= <expr pos:start="102:34" pos:end="102:81"><operator pos:start="102:34" pos:end="102:36">new</operator> <call pos:start="102:38" pos:end="102:81"><name pos:start="102:38" pos:end="102:48">MockupProbe</name><argument_list pos:start="102:49" pos:end="102:81">(<argument pos:start="102:50" pos:end="102:51"><expr pos:start="102:50" pos:end="102:51"><name pos:start="102:50" pos:end="102:51">id</name></expr></argument>, <argument pos:start="102:54" pos:end="102:73"><expr pos:start="102:54" pos:end="102:73"><literal type="string" pos:start="102:54" pos:end="102:73">"DRONOLOGY_INTERNAL"</literal></expr></argument>, <argument pos:start="102:76" pos:end="102:80"><expr pos:start="102:76" pos:end="102:80"><name pos:start="102:76" pos:end="102:80">scope</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt pos:start="103:17" pos:end="103:44"><expr pos:start="103:17" pos:end="103:43"><call pos:start="103:17" pos:end="103:43"><name pos:start="103:17" pos:end="103:35"><name pos:start="103:17" pos:end="103:31">dronologyProbes</name><operator pos:start="103:32" pos:end="103:32">.</operator><name pos:start="103:33" pos:end="103:35">put</name></name><argument_list pos:start="103:36" pos:end="103:43">(<argument pos:start="103:37" pos:end="103:38"><expr pos:start="103:37" pos:end="103:38"><name pos:start="103:37" pos:end="103:38">id</name></expr></argument>, <argument pos:start="103:41" pos:end="103:42"><expr pos:start="103:41" pos:end="103:42"><name pos:start="103:41" pos:end="103:42">pp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<return pos:start="104:17" pos:end="104:26">return <expr pos:start="104:24" pos:end="104:25"><name pos:start="104:24" pos:end="104:25">pp</name></expr>;</return>
	</block_content>}</block></function>

	<comment type="line" pos:start="107:9" pos:end="107:68">// public static void notify(UAVPlanChangeMessage message) {</comment>
	<comment type="line" pos:start="108:9" pos:end="108:10">//</comment>
	<comment type="line" pos:start="109:9" pos:end="109:70">// MockupProbe probePoint = getProbe(message.getType().name(),</comment>
	<comment type="line" pos:start="110:9" pos:end="110:31">// message.getUavid());</comment>
	<comment type="line" pos:start="111:9" pos:end="111:26">// // p.publish();</comment>
	<comment type="line" pos:start="112:9" pos:end="112:63">// TransmittableEventObject event = transform(message);</comment>
	<comment type="line" pos:start="113:9" pos:end="113:16">// try {</comment>
	<comment type="line" pos:start="114:9" pos:end="114:38">// probePoint.sendData(event);</comment>
	<comment type="line" pos:start="115:9" pos:end="115:34">// } catch (Throwable t) {</comment>
	<comment type="line" pos:start="116:9" pos:end="116:31">// t.printStackTrace();</comment>
	<comment type="line" pos:start="117:9" pos:end="117:12">// }</comment>
	<comment type="line" pos:start="118:9" pos:end="118:12">// }</comment>
	<function pos:start="119:9" pos:end="128:9"><type pos:start="119:9" pos:end="119:47"><specifier pos:start="119:9" pos:end="119:15">private</specifier> <specifier pos:start="119:17" pos:end="119:22">static</specifier> <specifier pos:start="119:24" pos:end="119:35">synchronized</specifier> <name pos:start="119:37" pos:end="119:47">MockupProbe</name></type> <name pos:start="119:49" pos:end="119:61">getStateProbe</name><parameter_list pos:start="119:62" pos:end="119:75">(<parameter pos:start="119:63" pos:end="119:74"><decl pos:start="119:63" pos:end="119:74"><type pos:start="119:63" pos:end="119:68"><name pos:start="119:63" pos:end="119:68">String</name></type> <name pos:start="119:70" pos:end="119:74">uavid</name></decl></parameter>)</parameter_list> <block pos:start="119:77" pos:end="128:9">{<block_content pos:start="120:17" pos:end="127:26">
		<if_stmt pos:start="120:17" pos:end="122:17"><if pos:start="120:17" pos:end="122:17">if <condition pos:start="120:20" pos:end="120:51">(<expr pos:start="120:21" pos:end="120:50"><call pos:start="120:21" pos:end="120:50"><name pos:start="120:21" pos:end="120:43"><name pos:start="120:21" pos:end="120:31">stateProbes</name><operator pos:start="120:32" pos:end="120:32">.</operator><name pos:start="120:33" pos:end="120:43">containsKey</name></name><argument_list pos:start="120:44" pos:end="120:50">(<argument pos:start="120:45" pos:end="120:49"><expr pos:start="120:45" pos:end="120:49"><name pos:start="120:45" pos:end="120:49">uavid</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="120:53" pos:end="122:17">{<block_content pos:start="121:25" pos:end="121:54">
			<return pos:start="121:25" pos:end="121:54">return <expr pos:start="121:32" pos:end="121:53"><call pos:start="121:32" pos:end="121:53"><name pos:start="121:32" pos:end="121:46"><name pos:start="121:32" pos:end="121:42">stateProbes</name><operator pos:start="121:43" pos:end="121:43">.</operator><name pos:start="121:44" pos:end="121:46">get</name></name><argument_list pos:start="121:47" pos:end="121:53">(<argument pos:start="121:48" pos:end="121:52"><expr pos:start="121:48" pos:end="121:52"><name pos:start="121:48" pos:end="121:52">uavid</name></expr></argument>)</argument_list></call></expr>;</return>
		</block_content>}</block></if></if_stmt>
		<decl_stmt pos:start="123:17" pos:end="123:63"><decl pos:start="123:17" pos:end="123:62"><type pos:start="123:17" pos:end="123:22"><name pos:start="123:17" pos:end="123:22">String</name></type> <name pos:start="123:24" pos:end="123:28">scope</name> <init pos:start="123:30" pos:end="123:62">= <expr pos:start="123:32" pos:end="123:62"><operator pos:start="123:32" pos:end="123:32">(</operator><literal type="string" pos:start="123:33" pos:end="123:53">"dronology.gcs1.uav@"</literal> <operator pos:start="123:55" pos:end="123:55">+</operator> <name pos:start="123:57" pos:end="123:61">uavid</name><operator pos:start="123:62" pos:end="123:62">)</operator></expr></init></decl>;</decl_stmt>
		<decl_stmt pos:start="124:17" pos:end="124:60"><decl pos:start="124:17" pos:end="124:59"><type pos:start="124:17" pos:end="124:22"><name pos:start="124:17" pos:end="124:22">String</name></type> <name pos:start="124:24" pos:end="124:32">probename</name> <init pos:start="124:34" pos:end="124:59">= <expr pos:start="124:36" pos:end="124:59"><name pos:start="124:36" pos:end="124:40">uavid</name> <operator pos:start="124:42" pos:end="124:42">+</operator> <literal type="string" pos:start="124:44" pos:end="124:59">"-statemessages"</literal></expr></init></decl>;</decl_stmt>
		<decl_stmt pos:start="125:17" pos:end="125:73"><decl pos:start="125:17" pos:end="125:72"><type pos:start="125:17" pos:end="125:27"><name pos:start="125:17" pos:end="125:27">MockupProbe</name></type> <name pos:start="125:29" pos:end="125:30">pp</name> <init pos:start="125:32" pos:end="125:72">= <expr pos:start="125:34" pos:end="125:72"><operator pos:start="125:34" pos:end="125:36">new</operator> <call pos:start="125:38" pos:end="125:72"><name pos:start="125:38" pos:end="125:48">MockupProbe</name><argument_list pos:start="125:49" pos:end="125:72">(<argument pos:start="125:50" pos:end="125:58"><expr pos:start="125:50" pos:end="125:58"><name pos:start="125:50" pos:end="125:58">probename</name></expr></argument>, <argument pos:start="125:61" pos:end="125:64"><expr pos:start="125:61" pos:end="125:64"><literal type="string" pos:start="125:61" pos:end="125:64">"CS"</literal></expr></argument>, <argument pos:start="125:67" pos:end="125:71"><expr pos:start="125:67" pos:end="125:71"><name pos:start="125:67" pos:end="125:71">scope</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt pos:start="126:17" pos:end="126:43"><expr pos:start="126:17" pos:end="126:42"><call pos:start="126:17" pos:end="126:42"><name pos:start="126:17" pos:end="126:31"><name pos:start="126:17" pos:end="126:27">stateProbes</name><operator pos:start="126:28" pos:end="126:28">.</operator><name pos:start="126:29" pos:end="126:31">put</name></name><argument_list pos:start="126:32" pos:end="126:42">(<argument pos:start="126:33" pos:end="126:37"><expr pos:start="126:33" pos:end="126:37"><name pos:start="126:33" pos:end="126:37">uavid</name></expr></argument>, <argument pos:start="126:40" pos:end="126:41"><expr pos:start="126:40" pos:end="126:41"><name pos:start="126:40" pos:end="126:41">pp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<return pos:start="127:17" pos:end="127:26">return <expr pos:start="127:24" pos:end="127:25"><name pos:start="127:24" pos:end="127:25">pp</name></expr>;</return>
	</block_content>}</block></function>

	<comment type="line" pos:start="130:9" pos:end="130:76">// private static synchronized MockupProbe getDronologyProbes(String</comment>
	<comment type="line" pos:start="131:9" pos:end="131:39">// messageType, String uavid) {</comment>
	<comment type="line" pos:start="132:9" pos:end="132:64">// String id = "dronology." + messageType + "." + uavid;</comment>
	<comment type="line" pos:start="133:9" pos:end="133:49">// if (dronologyProbes.containsKey(id)) {</comment>
	<comment type="line" pos:start="134:9" pos:end="134:42">// return dronologyProbes.get(id);</comment>
	<comment type="line" pos:start="135:9" pos:end="135:12">// }</comment>
	<comment type="line" pos:start="136:9" pos:end="136:55">// String scope = ("dronology." + messageType);</comment>
	<comment type="line" pos:start="137:9" pos:end="137:58">// // String probename = id + "-dronologymessage";</comment>
	<comment type="line" pos:start="138:9" pos:end="138:77">// MockupProbe pp = new MockupProbe(id, "DRONOLOGY_INTERNAL", scope);</comment>
	<comment type="line" pos:start="139:9" pos:end="139:39">// dronologyProbes.put(id, pp);</comment>
	<comment type="line" pos:start="140:9" pos:end="140:21">// return pp;</comment>
	<comment type="line" pos:start="141:9" pos:end="141:12">// }</comment>
	<function pos:start="142:9" pos:end="151:9"><type pos:start="142:9" pos:end="142:47"><specifier pos:start="142:9" pos:end="142:15">private</specifier> <specifier pos:start="142:17" pos:end="142:22">static</specifier> <specifier pos:start="142:24" pos:end="142:35">synchronized</specifier> <name pos:start="142:37" pos:end="142:47">MockupProbe</name></type> <name pos:start="142:49" pos:end="142:67">getMonitoringProbes</name><parameter_list pos:start="142:68" pos:end="142:81">(<parameter pos:start="142:69" pos:end="142:80"><decl pos:start="142:69" pos:end="142:80"><type pos:start="142:69" pos:end="142:74"><name pos:start="142:69" pos:end="142:74">String</name></type> <name pos:start="142:76" pos:end="142:80">uavid</name></decl></parameter>)</parameter_list> <block pos:start="142:83" pos:end="151:9">{<block_content pos:start="143:17" pos:end="150:26">
		<if_stmt pos:start="143:17" pos:end="145:17"><if pos:start="143:17" pos:end="145:17">if <condition pos:start="143:20" pos:end="143:56">(<expr pos:start="143:21" pos:end="143:55"><call pos:start="143:21" pos:end="143:55"><name pos:start="143:21" pos:end="143:48"><name pos:start="143:21" pos:end="143:36">monitoringProbes</name><operator pos:start="143:37" pos:end="143:37">.</operator><name pos:start="143:38" pos:end="143:48">containsKey</name></name><argument_list pos:start="143:49" pos:end="143:55">(<argument pos:start="143:50" pos:end="143:54"><expr pos:start="143:50" pos:end="143:54"><name pos:start="143:50" pos:end="143:54">uavid</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="143:58" pos:end="145:17">{<block_content pos:start="144:25" pos:end="144:59">
			<return pos:start="144:25" pos:end="144:59">return <expr pos:start="144:32" pos:end="144:58"><call pos:start="144:32" pos:end="144:58"><name pos:start="144:32" pos:end="144:51"><name pos:start="144:32" pos:end="144:47">monitoringProbes</name><operator pos:start="144:48" pos:end="144:48">.</operator><name pos:start="144:49" pos:end="144:51">get</name></name><argument_list pos:start="144:52" pos:end="144:58">(<argument pos:start="144:53" pos:end="144:57"><expr pos:start="144:53" pos:end="144:57"><name pos:start="144:53" pos:end="144:57">uavid</name></expr></argument>)</argument_list></call></expr>;</return>
		</block_content>}</block></if></if_stmt>
		<decl_stmt pos:start="146:17" pos:end="146:63"><decl pos:start="146:17" pos:end="146:62"><type pos:start="146:17" pos:end="146:22"><name pos:start="146:17" pos:end="146:22">String</name></type> <name pos:start="146:24" pos:end="146:28">scope</name> <init pos:start="146:30" pos:end="146:62">= <expr pos:start="146:32" pos:end="146:62"><operator pos:start="146:32" pos:end="146:32">(</operator><literal type="string" pos:start="146:33" pos:end="146:53">"dronology.gcs1.uav@"</literal> <operator pos:start="146:55" pos:end="146:55">+</operator> <name pos:start="146:57" pos:end="146:61">uavid</name><operator pos:start="146:62" pos:end="146:62">)</operator></expr></init></decl>;</decl_stmt>
		<decl_stmt pos:start="147:17" pos:end="147:64"><decl pos:start="147:17" pos:end="147:63"><type pos:start="147:17" pos:end="147:22"><name pos:start="147:17" pos:end="147:22">String</name></type> <name pos:start="147:24" pos:end="147:32">probename</name> <init pos:start="147:34" pos:end="147:63">= <expr pos:start="147:36" pos:end="147:63"><name pos:start="147:36" pos:end="147:40">uavid</name> <operator pos:start="147:42" pos:end="147:42">+</operator> <literal type="string" pos:start="147:44" pos:end="147:63">"-monitoringmessage"</literal></expr></init></decl>;</decl_stmt>
		<decl_stmt pos:start="148:17" pos:end="148:73"><decl pos:start="148:17" pos:end="148:72"><type pos:start="148:17" pos:end="148:27"><name pos:start="148:17" pos:end="148:27">MockupProbe</name></type> <name pos:start="148:29" pos:end="148:30">pp</name> <init pos:start="148:32" pos:end="148:72">= <expr pos:start="148:34" pos:end="148:72"><operator pos:start="148:34" pos:end="148:36">new</operator> <call pos:start="148:38" pos:end="148:72"><name pos:start="148:38" pos:end="148:48">MockupProbe</name><argument_list pos:start="148:49" pos:end="148:72">(<argument pos:start="148:50" pos:end="148:58"><expr pos:start="148:50" pos:end="148:58"><name pos:start="148:50" pos:end="148:58">probename</name></expr></argument>, <argument pos:start="148:61" pos:end="148:64"><expr pos:start="148:61" pos:end="148:64"><literal type="string" pos:start="148:61" pos:end="148:64">"CS"</literal></expr></argument>, <argument pos:start="148:67" pos:end="148:71"><expr pos:start="148:67" pos:end="148:71"><name pos:start="148:67" pos:end="148:71">scope</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt pos:start="149:17" pos:end="149:48"><expr pos:start="149:17" pos:end="149:47"><call pos:start="149:17" pos:end="149:47"><name pos:start="149:17" pos:end="149:36"><name pos:start="149:17" pos:end="149:32">monitoringProbes</name><operator pos:start="149:33" pos:end="149:33">.</operator><name pos:start="149:34" pos:end="149:36">put</name></name><argument_list pos:start="149:37" pos:end="149:47">(<argument pos:start="149:38" pos:end="149:42"><expr pos:start="149:38" pos:end="149:42"><name pos:start="149:38" pos:end="149:42">uavid</name></expr></argument>, <argument pos:start="149:45" pos:end="149:46"><expr pos:start="149:45" pos:end="149:46"><name pos:start="149:45" pos:end="149:46">pp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<return pos:start="150:17" pos:end="150:26">return <expr pos:start="150:24" pos:end="150:25"><name pos:start="150:24" pos:end="150:25">pp</name></expr>;</return>
	</block_content>}</block></function>

	<function pos:start="153:9" pos:end="158:9"><type pos:start="153:9" pos:end="153:47"><specifier pos:start="153:9" pos:end="153:15">private</specifier> <specifier pos:start="153:17" pos:end="153:22">static</specifier> <name pos:start="153:24" pos:end="153:47">TransmittableEventObject</name></type> <name pos:start="153:49" pos:end="153:57">transform</name><parameter_list pos:start="153:58" pos:end="153:82">(<parameter pos:start="153:59" pos:end="153:81"><decl pos:start="153:59" pos:end="153:81"><type pos:start="153:59" pos:end="153:73"><name pos:start="153:59" pos:end="153:73">UAVStateMessage</name></type> <name pos:start="153:75" pos:end="153:81">message</name></decl></parameter>)</parameter_list> <block pos:start="153:84" pos:end="158:9">{<block_content pos:start="154:17" pos:end="157:29">
		<decl_stmt pos:start="154:17" pos:end="155:51"><decl pos:start="154:17" pos:end="155:50"><type pos:start="154:17" pos:end="154:40"><name pos:start="154:17" pos:end="154:40">TransmittableEventObject</name></type> <name pos:start="154:42" pos:end="154:46">event</name> <init pos:start="154:48" pos:end="155:50">= <expr pos:start="154:50" pos:end="155:50"><call pos:start="154:50" pos:end="155:50"><name pos:start="154:50" pos:end="154:93"><name pos:start="154:50" pos:end="154:75">TransmittableObjectFactory</name><operator pos:start="154:76" pos:end="154:76">.</operator><name pos:start="154:77" pos:end="154:93">createEventObject</name></name><argument_list pos:start="154:94" pos:end="155:50">(<argument pos:start="154:95" pos:end="154:119"><expr pos:start="154:95" pos:end="154:119"><call pos:start="154:95" pos:end="154:119"><name pos:start="154:95" pos:end="154:117"><name pos:start="154:95" pos:end="154:110">PreciseTimestamp</name><operator pos:start="154:111" pos:end="154:111">.</operator><name pos:start="154:112" pos:end="154:117">create</name></name><argument_list pos:start="154:118" pos:end="154:119">()</argument_list></call></expr></argument>,
				<argument pos:start="155:33" pos:end="155:49"><expr pos:start="155:33" pos:end="155:49"><literal type="string" pos:start="155:33" pos:end="155:49">"UAVStateMessage"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt pos:start="156:17" pos:end="156:105"><expr pos:start="156:17" pos:end="156:104"><call pos:start="156:17" pos:end="156:104"><name pos:start="156:17" pos:end="156:29"><name pos:start="156:17" pos:end="156:21">event</name><operator pos:start="156:22" pos:end="156:22">.</operator><name pos:start="156:23" pos:end="156:29">addData</name></name><argument_list pos:start="156:30" pos:end="156:104">(<argument pos:start="156:31" pos:end="156:103"><expr pos:start="156:31" pos:end="156:103"><call pos:start="156:31" pos:end="156:103"><name pos:start="156:31" pos:end="156:72"><name pos:start="156:31" pos:end="156:56">TransmittableObjectFactory</name><operator pos:start="156:57" pos:end="156:57">.</operator><name pos:start="156:58" pos:end="156:72">createEventData</name></name><argument_list pos:start="156:73" pos:end="156:103">(<argument pos:start="156:74" pos:end="156:93"><expr pos:start="156:74" pos:end="156:93"><call pos:start="156:74" pos:end="156:93"><name pos:start="156:74" pos:end="156:84"><name pos:start="156:74" pos:end="156:77">gson</name><operator pos:start="156:78" pos:end="156:78">.</operator><name pos:start="156:79" pos:end="156:84">toJson</name></name><argument_list pos:start="156:85" pos:end="156:93">(<argument pos:start="156:86" pos:end="156:92"><expr pos:start="156:86" pos:end="156:92"><name pos:start="156:86" pos:end="156:92">message</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="156:96" pos:end="156:102"><expr pos:start="156:96" pos:end="156:102"><literal type="string" pos:start="156:96" pos:end="156:102">"state"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<return pos:start="157:17" pos:end="157:29">return <expr pos:start="157:24" pos:end="157:28"><name pos:start="157:24" pos:end="157:28">event</name></expr>;</return>
	</block_content>}</block></function>

	<function pos:start="160:9" pos:end="165:9"><type pos:start="160:9" pos:end="160:47"><specifier pos:start="160:9" pos:end="160:15">private</specifier> <specifier pos:start="160:17" pos:end="160:22">static</specifier> <name pos:start="160:24" pos:end="160:47">TransmittableEventObject</name></type> <name pos:start="160:49" pos:end="160:57">transform</name><parameter_list pos:start="160:58" pos:end="160:87">(<parameter pos:start="160:59" pos:end="160:86"><decl pos:start="160:59" pos:end="160:86"><type pos:start="160:59" pos:end="160:78"><name pos:start="160:59" pos:end="160:78">UAVMonitoringMessage</name></type> <name pos:start="160:80" pos:end="160:86">message</name></decl></parameter>)</parameter_list> <block pos:start="160:89" pos:end="165:9">{<block_content pos:start="161:17" pos:end="164:29">
		<decl_stmt pos:start="161:17" pos:end="162:56"><decl pos:start="161:17" pos:end="162:55"><type pos:start="161:17" pos:end="161:40"><name pos:start="161:17" pos:end="161:40">TransmittableEventObject</name></type> <name pos:start="161:42" pos:end="161:46">event</name> <init pos:start="161:48" pos:end="162:55">= <expr pos:start="161:50" pos:end="162:55"><call pos:start="161:50" pos:end="162:55"><name pos:start="161:50" pos:end="161:93"><name pos:start="161:50" pos:end="161:75">TransmittableObjectFactory</name><operator pos:start="161:76" pos:end="161:76">.</operator><name pos:start="161:77" pos:end="161:93">createEventObject</name></name><argument_list pos:start="161:94" pos:end="162:55">(<argument pos:start="161:95" pos:end="161:119"><expr pos:start="161:95" pos:end="161:119"><call pos:start="161:95" pos:end="161:119"><name pos:start="161:95" pos:end="161:117"><name pos:start="161:95" pos:end="161:110">PreciseTimestamp</name><operator pos:start="161:111" pos:end="161:111">.</operator><name pos:start="161:112" pos:end="161:117">create</name></name><argument_list pos:start="161:118" pos:end="161:119">()</argument_list></call></expr></argument>,
				<argument pos:start="162:33" pos:end="162:54"><expr pos:start="162:33" pos:end="162:54"><literal type="string" pos:start="162:33" pos:end="162:54">"UAVMonitoringMessage"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt pos:start="163:17" pos:end="163:110"><expr pos:start="163:17" pos:end="163:109"><call pos:start="163:17" pos:end="163:109"><name pos:start="163:17" pos:end="163:29"><name pos:start="163:17" pos:end="163:21">event</name><operator pos:start="163:22" pos:end="163:22">.</operator><name pos:start="163:23" pos:end="163:29">addData</name></name><argument_list pos:start="163:30" pos:end="163:109">(<argument pos:start="163:31" pos:end="163:108"><expr pos:start="163:31" pos:end="163:108"><call pos:start="163:31" pos:end="163:108"><name pos:start="163:31" pos:end="163:72"><name pos:start="163:31" pos:end="163:56">TransmittableObjectFactory</name><operator pos:start="163:57" pos:end="163:57">.</operator><name pos:start="163:58" pos:end="163:72">createEventData</name></name><argument_list pos:start="163:73" pos:end="163:108">(<argument pos:start="163:74" pos:end="163:93"><expr pos:start="163:74" pos:end="163:93"><call pos:start="163:74" pos:end="163:93"><name pos:start="163:74" pos:end="163:84"><name pos:start="163:74" pos:end="163:77">gson</name><operator pos:start="163:78" pos:end="163:78">.</operator><name pos:start="163:79" pos:end="163:84">toJson</name></name><argument_list pos:start="163:85" pos:end="163:93">(<argument pos:start="163:86" pos:end="163:92"><expr pos:start="163:86" pos:end="163:92"><name pos:start="163:86" pos:end="163:92">message</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="163:96" pos:end="163:107"><expr pos:start="163:96" pos:end="163:107"><literal type="string" pos:start="163:96" pos:end="163:107">"monitoring"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<return pos:start="164:17" pos:end="164:29">return <expr pos:start="164:24" pos:end="164:28"><name pos:start="164:24" pos:end="164:28">event</name></expr>;</return>
	</block_content>}</block></function>

	<comment type="line" pos:start="167:9" pos:end="167:82">// private static TransmittableEventObject transform(UAVStateChangeMessage</comment>
	<comment type="line" pos:start="168:9" pos:end="168:21">// message) {</comment>
	<comment type="line" pos:start="169:9" pos:end="169:43">// TransmittableEventObject event =</comment>
	<comment type="line" pos:start="170:9" pos:end="170:82">// TransmittableObjectFactory.createEventObject(PreciseTimestamp.create(),</comment>
	<comment type="line" pos:start="171:9" pos:end="171:36">// "UAVStateChangeMessage");</comment>
	<comment type="line" pos:start="172:9" pos:end="172:89">// event.addData(TransmittableObjectFactory.createEventData(gson.toJson(message),</comment>
	<comment type="line" pos:start="173:9" pos:end="173:27">// "statechange"));</comment>
	<comment type="line" pos:start="174:9" pos:end="174:24">// return event;</comment>
	<comment type="line" pos:start="175:9" pos:end="175:12">// }</comment>
	<comment type="line" pos:start="176:9" pos:end="176:10">//</comment>
	<comment type="line" pos:start="177:9" pos:end="177:81">// private static TransmittableEventObject transform(UAVPlanChangeMessage</comment>
	<comment type="line" pos:start="178:9" pos:end="178:21">// message) {</comment>
	<comment type="line" pos:start="179:9" pos:end="179:43">// TransmittableEventObject event =</comment>
	<comment type="line" pos:start="180:9" pos:end="180:82">// TransmittableObjectFactory.createEventObject(PreciseTimestamp.create(),</comment>
	<comment type="line" pos:start="181:9" pos:end="181:35">// "UAVPlanChangeMessage");</comment>
	<comment type="line" pos:start="182:9" pos:end="182:89">// event.addData(TransmittableObjectFactory.createEventData(gson.toJson(message),</comment>
	<comment type="line" pos:start="183:9" pos:end="183:26">// "planchange"));</comment>
	<comment type="line" pos:start="184:9" pos:end="184:24">// return event;</comment>
	<comment type="line" pos:start="185:9" pos:end="185:12">// }</comment>
	<function pos:start="186:9" pos:end="214:9"><type pos:start="186:9" pos:end="186:46"><specifier pos:start="186:9" pos:end="186:14">public</specifier> <specifier pos:start="186:16" pos:end="186:21">static</specifier> <name pos:start="186:23" pos:end="186:46">TransmittableEventObject</name></type> <name pos:start="186:48" pos:end="186:56">transform</name><parameter_list pos:start="186:57" pos:end="186:87">(<parameter pos:start="186:58" pos:end="186:86"><decl pos:start="186:58" pos:end="186:86"><type pos:start="186:58" pos:end="186:78"><name pos:start="186:58" pos:end="186:78">UAVMonitorableMessage</name></type> <name pos:start="186:80" pos:end="186:86">message</name></decl></parameter>)</parameter_list> <block pos:start="186:89" pos:end="214:9">{<block_content pos:start="187:17" pos:end="213:29">
		<decl_stmt pos:start="187:17" pos:end="187:110"><decl pos:start="187:17" pos:end="187:109"><type pos:start="187:17" pos:end="187:22"><name pos:start="187:17" pos:end="187:22">String</name></type> <name pos:start="187:24" pos:end="187:30">msgType</name> <init pos:start="187:32" pos:end="187:109">= <expr pos:start="187:34" pos:end="187:109"><ternary pos:start="187:34" pos:end="187:109"><condition pos:start="187:34" pos:end="187:60"><expr pos:start="187:34" pos:end="187:58"><call pos:start="187:34" pos:end="187:50"><name pos:start="187:34" pos:end="187:48"><name pos:start="187:34" pos:end="187:40">message</name><operator pos:start="187:41" pos:end="187:41">.</operator><name pos:start="187:42" pos:end="187:48">getData</name></name><argument_list pos:start="187:49" pos:end="187:50">()</argument_list></call> <operator pos:start="187:52" pos:end="187:53">!=</operator> <literal type="null" pos:start="187:55" pos:end="187:58">null</literal></expr> ?</condition><then pos:start="187:62" pos:end="187:82"> <expr pos:start="187:62" pos:end="187:82"><call pos:start="187:62" pos:end="187:82"><name pos:start="187:62" pos:end="187:80"><name pos:start="187:62" pos:end="187:68">message</name><operator pos:start="187:69" pos:end="187:69">.</operator><name pos:start="187:70" pos:end="187:80">getDataType</name></name><argument_list pos:start="187:81" pos:end="187:82">()</argument_list></call></expr> </then><else pos:start="187:84" pos:end="187:109">: <expr pos:start="187:86" pos:end="187:109"><call pos:start="187:86" pos:end="187:102"><name pos:start="187:86" pos:end="187:100"><name pos:start="187:86" pos:end="187:92">message</name><operator pos:start="187:93" pos:end="187:93">.</operator><name pos:start="187:94" pos:end="187:100">getType</name></name><argument_list pos:start="187:101" pos:end="187:102">()</argument_list></call><operator pos:start="187:103" pos:end="187:103">.</operator><call pos:start="187:104" pos:end="187:109"><name pos:start="187:104" pos:end="187:107">name</name><argument_list pos:start="187:108" pos:end="187:109">()</argument_list></call></expr></else></ternary></expr></init></decl>;</decl_stmt>
		<if_stmt pos:start="188:17" pos:end="190:17"><if pos:start="188:17" pos:end="190:17">if<condition pos:start="188:19" pos:end="188:75">(<expr pos:start="188:20" pos:end="188:74"><call pos:start="188:20" pos:end="188:36"><name pos:start="188:20" pos:end="188:34"><name pos:start="188:20" pos:end="188:26">message</name><operator pos:start="188:27" pos:end="188:27">.</operator><name pos:start="188:28" pos:end="188:34">getType</name></name><argument_list pos:start="188:35" pos:end="188:36">()</argument_list></call><operator pos:start="188:37" pos:end="188:37">.</operator><call pos:start="188:38" pos:end="188:47"><name pos:start="188:38" pos:end="188:45">toString</name><argument_list pos:start="188:46" pos:end="188:47">()</argument_list></call><operator pos:start="188:48" pos:end="188:48">.</operator><call pos:start="188:49" pos:end="188:74"><name pos:start="188:49" pos:end="188:54">equals</name><argument_list pos:start="188:55" pos:end="188:74">(<argument pos:start="188:56" pos:end="188:73"><expr pos:start="188:56" pos:end="188:73"><literal type="string" pos:start="188:56" pos:end="188:73">"WAYPOINT_REACHED"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="188:77" pos:end="190:17">{<block_content pos:start="189:25" pos:end="189:52">
			<expr_stmt pos:start="189:25" pos:end="189:52"><expr pos:start="189:25" pos:end="189:51"><name pos:start="189:25" pos:end="189:31">msgType</name> <operator pos:start="189:33" pos:end="189:33">=</operator> <literal type="string" pos:start="189:35" pos:end="189:51">"WaypointReached"</literal></expr>;</expr_stmt>
		</block_content>}</block></if></if_stmt>
		<if_stmt pos:start="191:17" pos:end="193:17"><if pos:start="191:17" pos:end="193:17">if<condition pos:start="191:19" pos:end="191:73">(<expr pos:start="191:20" pos:end="191:72"><call pos:start="191:20" pos:end="191:36"><name pos:start="191:20" pos:end="191:34"><name pos:start="191:20" pos:end="191:26">message</name><operator pos:start="191:27" pos:end="191:27">.</operator><name pos:start="191:28" pos:end="191:34">getType</name></name><argument_list pos:start="191:35" pos:end="191:36">()</argument_list></call><operator pos:start="191:37" pos:end="191:37">.</operator><call pos:start="191:38" pos:end="191:47"><name pos:start="191:38" pos:end="191:45">toString</name><argument_list pos:start="191:46" pos:end="191:47">()</argument_list></call><operator pos:start="191:48" pos:end="191:48">.</operator><call pos:start="191:49" pos:end="191:72"><name pos:start="191:49" pos:end="191:54">equals</name><argument_list pos:start="191:55" pos:end="191:72">(<argument pos:start="191:56" pos:end="191:71"><expr pos:start="191:56" pos:end="191:71"><literal type="string" pos:start="191:56" pos:end="191:71">"PLAN_ACTIVATED"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="191:75" pos:end="193:17">{<block_content pos:start="192:25" pos:end="192:56">
			<expr_stmt pos:start="192:25" pos:end="192:56"><expr pos:start="192:25" pos:end="192:55"><name pos:start="192:25" pos:end="192:31">msgType</name> <operator pos:start="192:33" pos:end="192:33">=</operator> <literal type="string" pos:start="192:35" pos:end="192:55">"FlightPlanActivated"</literal></expr>;</expr_stmt>
		</block_content>}</block></if></if_stmt>
		<if_stmt pos:start="194:17" pos:end="196:17"><if pos:start="194:17" pos:end="196:17">if<condition pos:start="194:19" pos:end="194:72">(<expr pos:start="194:20" pos:end="194:71"><call pos:start="194:20" pos:end="194:36"><name pos:start="194:20" pos:end="194:34"><name pos:start="194:20" pos:end="194:26">message</name><operator pos:start="194:27" pos:end="194:27">.</operator><name pos:start="194:28" pos:end="194:34">getType</name></name><argument_list pos:start="194:35" pos:end="194:36">()</argument_list></call><operator pos:start="194:37" pos:end="194:37">.</operator><call pos:start="194:38" pos:end="194:47"><name pos:start="194:38" pos:end="194:45">toString</name><argument_list pos:start="194:46" pos:end="194:47">()</argument_list></call><operator pos:start="194:48" pos:end="194:48">.</operator><call pos:start="194:49" pos:end="194:71"><name pos:start="194:49" pos:end="194:54">equals</name><argument_list pos:start="194:55" pos:end="194:71">(<argument pos:start="194:56" pos:end="194:70"><expr pos:start="194:56" pos:end="194:70"><literal type="string" pos:start="194:56" pos:end="194:70">"PLAN_COMPLETE"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="194:74" pos:end="196:17">{<block_content pos:start="195:25" pos:end="195:55">
			<expr_stmt pos:start="195:25" pos:end="195:55"><expr pos:start="195:25" pos:end="195:54"><name pos:start="195:25" pos:end="195:31">msgType</name> <operator pos:start="195:33" pos:end="195:33">=</operator> <literal type="string" pos:start="195:35" pos:end="195:54">"FlightPlanComplete"</literal></expr>;</expr_stmt>
		</block_content>}</block></if></if_stmt>
		<if_stmt pos:start="197:17" pos:end="199:17"><if pos:start="197:17" pos:end="199:17">if<condition pos:start="197:19" pos:end="197:81">(<expr pos:start="197:20" pos:end="197:80"><call pos:start="197:20" pos:end="197:36"><name pos:start="197:20" pos:end="197:34"><name pos:start="197:20" pos:end="197:26">message</name><operator pos:start="197:27" pos:end="197:27">.</operator><name pos:start="197:28" pos:end="197:34">getType</name></name><argument_list pos:start="197:35" pos:end="197:36">()</argument_list></call><operator pos:start="197:37" pos:end="197:37">.</operator><call pos:start="197:38" pos:end="197:47"><name pos:start="197:38" pos:end="197:45">toString</name><argument_list pos:start="197:46" pos:end="197:47">()</argument_list></call><operator pos:start="197:48" pos:end="197:48">.</operator><call pos:start="197:49" pos:end="197:80"><name pos:start="197:49" pos:end="197:54">equals</name><argument_list pos:start="197:55" pos:end="197:80">(<argument pos:start="197:56" pos:end="197:79"><expr pos:start="197:56" pos:end="197:79"><literal type="string" pos:start="197:56" pos:end="197:79">"PHYSICAL_UAV_ACTIVATED"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="197:83" pos:end="199:17">{<block_content pos:start="198:25" pos:end="198:50">
			<expr_stmt pos:start="198:25" pos:end="198:50"><expr pos:start="198:25" pos:end="198:49"><name pos:start="198:25" pos:end="198:31">msgType</name> <operator pos:start="198:33" pos:end="198:33">=</operator> <literal type="string" pos:start="198:35" pos:end="198:49">"UAVActivation"</literal></expr>;</expr_stmt>
		</block_content>}</block></if></if_stmt>
		<if_stmt pos:start="200:17" pos:end="202:17"><if pos:start="200:17" pos:end="202:17">if<condition pos:start="200:19" pos:end="200:71">(<expr pos:start="200:20" pos:end="200:70"><call pos:start="200:20" pos:end="200:36"><name pos:start="200:20" pos:end="200:34"><name pos:start="200:20" pos:end="200:26">message</name><operator pos:start="200:27" pos:end="200:27">.</operator><name pos:start="200:28" pos:end="200:34">getType</name></name><argument_list pos:start="200:35" pos:end="200:36">()</argument_list></call><operator pos:start="200:37" pos:end="200:37">.</operator><call pos:start="200:38" pos:end="200:47"><name pos:start="200:38" pos:end="200:45">toString</name><argument_list pos:start="200:46" pos:end="200:47">()</argument_list></call><operator pos:start="200:48" pos:end="200:48">.</operator><call pos:start="200:49" pos:end="200:70"><name pos:start="200:49" pos:end="200:54">equals</name><argument_list pos:start="200:55" pos:end="200:70">(<argument pos:start="200:56" pos:end="200:69"><expr pos:start="200:56" pos:end="200:69"><literal type="string" pos:start="200:56" pos:end="200:69">"STATE_CHANGE"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="200:73" pos:end="202:17">{<block_content pos:start="201:25" pos:end="201:48">
			<expr_stmt pos:start="201:25" pos:end="201:48"><expr pos:start="201:25" pos:end="201:47"><name pos:start="201:25" pos:end="201:31">msgType</name> <operator pos:start="201:33" pos:end="201:33">=</operator> <literal type="string" pos:start="201:35" pos:end="201:47">"StateChange"</literal></expr>;</expr_stmt>
		</block_content>}</block></if></if_stmt>
		
		
		<if_stmt pos:start="205:17" pos:end="207:17"><if pos:start="205:17" pos:end="207:17">if<condition pos:start="205:19" pos:end="205:48">(<expr pos:start="205:20" pos:end="205:47"><call pos:start="205:20" pos:end="205:47"><name pos:start="205:20" pos:end="205:33"><name pos:start="205:20" pos:end="205:26">msgType</name><operator pos:start="205:27" pos:end="205:27">.</operator><name pos:start="205:28" pos:end="205:33">equals</name></name><argument_list pos:start="205:34" pos:end="205:47">(<argument pos:start="205:35" pos:end="205:46"><expr pos:start="205:35" pos:end="205:46"><literal type="string" pos:start="205:35" pos:end="205:46">"FlightPlan"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="205:50" pos:end="207:17">{<block_content pos:start="206:25" pos:end="206:49">
			<expr_stmt pos:start="206:25" pos:end="206:49"><expr pos:start="206:25" pos:end="206:48"><call pos:start="206:25" pos:end="206:48"><name pos:start="206:25" pos:end="206:42"><name pos:start="206:25" pos:end="206:30">System</name><operator pos:start="206:31" pos:end="206:31">.</operator><name pos:start="206:32" pos:end="206:34">out</name><operator pos:start="206:35" pos:end="206:35">.</operator><name pos:start="206:36" pos:end="206:42">println</name></name><argument_list pos:start="206:43" pos:end="206:48">(<argument pos:start="206:44" pos:end="206:47"><expr pos:start="206:44" pos:end="206:47"><literal type="string" pos:start="206:44" pos:end="206:47">"xx"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		</block_content>}</block></if></if_stmt>
		<decl_stmt pos:start="208:17" pos:end="209:41"><decl pos:start="208:17" pos:end="209:40"><type pos:start="208:17" pos:end="208:40"><name pos:start="208:17" pos:end="208:40">TransmittableEventObject</name></type> <name pos:start="208:42" pos:end="208:46">event</name> <init pos:start="208:48" pos:end="209:40">= <expr pos:start="208:50" pos:end="209:40"><call pos:start="208:50" pos:end="209:40"><name pos:start="208:50" pos:end="208:93"><name pos:start="208:50" pos:end="208:75">TransmittableObjectFactory</name><operator pos:start="208:76" pos:end="208:76">.</operator><name pos:start="208:77" pos:end="208:93">createEventObject</name></name><argument_list pos:start="208:94" pos:end="209:40">(<argument pos:start="208:95" pos:end="208:119"><expr pos:start="208:95" pos:end="208:119"><call pos:start="208:95" pos:end="208:119"><name pos:start="208:95" pos:end="208:117"><name pos:start="208:95" pos:end="208:110">PreciseTimestamp</name><operator pos:start="208:111" pos:end="208:111">.</operator><name pos:start="208:112" pos:end="208:117">create</name></name><argument_list pos:start="208:118" pos:end="208:119">()</argument_list></call></expr></argument>,
				<argument pos:start="209:33" pos:end="209:39"><expr pos:start="209:33" pos:end="209:39"><name pos:start="209:33" pos:end="209:39">msgType</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<if_stmt pos:start="210:17" pos:end="212:17"><if pos:start="210:17" pos:end="212:17">if <condition pos:start="210:20" pos:end="210:46">(<expr pos:start="210:21" pos:end="210:45"><call pos:start="210:21" pos:end="210:37"><name pos:start="210:21" pos:end="210:35"><name pos:start="210:21" pos:end="210:27">message</name><operator pos:start="210:28" pos:end="210:28">.</operator><name pos:start="210:29" pos:end="210:35">getData</name></name><argument_list pos:start="210:36" pos:end="210:37">()</argument_list></call> <operator pos:start="210:39" pos:end="210:40">!=</operator> <literal type="null" pos:start="210:42" pos:end="210:45">null</literal></expr>)</condition> <block pos:start="210:48" pos:end="212:17">{<block_content pos:start="211:25" pos:end="211:109">
			<expr_stmt pos:start="211:25" pos:end="211:109"><expr pos:start="211:25" pos:end="211:108"><call pos:start="211:25" pos:end="211:108"><name pos:start="211:25" pos:end="211:37"><name pos:start="211:25" pos:end="211:29">event</name><operator pos:start="211:30" pos:end="211:30">.</operator><name pos:start="211:31" pos:end="211:37">addData</name></name><argument_list pos:start="211:38" pos:end="211:108">(<argument pos:start="211:39" pos:end="211:107"><expr pos:start="211:39" pos:end="211:107"><call pos:start="211:39" pos:end="211:107"><name pos:start="211:39" pos:end="211:80"><name pos:start="211:39" pos:end="211:64">TransmittableObjectFactory</name><operator pos:start="211:65" pos:end="211:65">.</operator><name pos:start="211:66" pos:end="211:80">createEventData</name></name><argument_list pos:start="211:81" pos:end="211:107">(<argument pos:start="211:82" pos:end="211:98"><expr pos:start="211:82" pos:end="211:98"><call pos:start="211:82" pos:end="211:98"><name pos:start="211:82" pos:end="211:96"><name pos:start="211:82" pos:end="211:88">message</name><operator pos:start="211:89" pos:end="211:89">.</operator><name pos:start="211:90" pos:end="211:96">getData</name></name><argument_list pos:start="211:97" pos:end="211:98">()</argument_list></call></expr></argument>, <argument pos:start="211:101" pos:end="211:106"><expr pos:start="211:101" pos:end="211:106"><literal type="string" pos:start="211:101" pos:end="211:106">"data"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		</block_content>}</block></if></if_stmt>
		<return pos:start="213:17" pos:end="213:29">return <expr pos:start="213:24" pos:end="213:28"><name pos:start="213:24" pos:end="213:28">event</name></expr>;</return>
	</block_content>}</block></function>
}</block></class></unit>
