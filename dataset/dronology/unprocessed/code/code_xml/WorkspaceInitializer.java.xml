<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="Java" filename="src/WorkspaceInitializer.java" pos:tabs="8"><package pos:start="1:1" pos:end="1:45">package <name pos:start="1:9" pos:end="1:44"><name pos:start="1:9" pos:end="1:11">edu</name><operator pos:start="1:12" pos:end="1:12">.</operator><name pos:start="1:13" pos:end="1:14">nd</name><operator pos:start="1:15" pos:end="1:15">.</operator><name pos:start="1:16" pos:end="1:24">dronology</name><operator pos:start="1:25" pos:end="1:25">.</operator><name pos:start="1:26" pos:end="1:33">services</name><operator pos:start="1:34" pos:end="1:34">.</operator><name pos:start="1:35" pos:end="1:44">supervisor</name></name>;</package>

<import pos:start="3:1" pos:end="3:20">import <name pos:start="3:8" pos:end="3:19"><name pos:start="3:8" pos:end="3:11">java</name><operator pos:start="3:12" pos:end="3:12">.</operator><name pos:start="3:13" pos:end="3:14">io</name><operator pos:start="3:15" pos:end="3:15">.</operator><name pos:start="3:16" pos:end="3:19">File</name></name>;</import>
<import pos:start="4:1" pos:end="4:32">import <name pos:start="4:8" pos:end="4:31"><name pos:start="4:8" pos:end="4:11">java</name><operator pos:start="4:12" pos:end="4:12">.</operator><name pos:start="4:13" pos:end="4:20">security</name><operator pos:start="4:21" pos:end="4:21">.</operator><name pos:start="4:22" pos:end="4:31">CodeSource</name></name>;</import>

<import pos:start="6:1" pos:end="6:62">import <name pos:start="6:8" pos:end="6:61"><name pos:start="6:8" pos:end="6:10">edu</name><operator pos:start="6:11" pos:end="6:11">.</operator><name pos:start="6:12" pos:end="6:13">nd</name><operator pos:start="6:14" pos:end="6:14">.</operator><name pos:start="6:15" pos:end="6:23">dronology</name><operator pos:start="6:24" pos:end="6:24">.</operator><name pos:start="6:25" pos:end="6:32">services</name><operator pos:start="6:33" pos:end="6:33">.</operator><name pos:start="6:34" pos:end="6:37">core</name><operator pos:start="6:38" pos:end="6:38">.</operator><name pos:start="6:39" pos:end="6:42">util</name><operator pos:start="6:43" pos:end="6:43">.</operator><name pos:start="6:44" pos:end="6:61">DronologyConstants</name></name>;</import>
<import pos:start="7:1" pos:end="7:69">import <name pos:start="7:8" pos:end="7:68"><name pos:start="7:8" pos:end="7:10">edu</name><operator pos:start="7:11" pos:end="7:11">.</operator><name pos:start="7:12" pos:end="7:13">nd</name><operator pos:start="7:14" pos:end="7:14">.</operator><name pos:start="7:15" pos:end="7:23">dronology</name><operator pos:start="7:24" pos:end="7:24">.</operator><name pos:start="7:25" pos:end="7:32">services</name><operator pos:start="7:33" pos:end="7:33">.</operator><name pos:start="7:34" pos:end="7:37">core</name><operator pos:start="7:38" pos:end="7:38">.</operator><name pos:start="7:39" pos:end="7:42">util</name><operator pos:start="7:43" pos:end="7:43">.</operator><name pos:start="7:44" pos:end="7:68">DronologyServiceException</name></name>;</import>
<import pos:start="8:1" pos:end="8:38">import <name pos:start="8:8" pos:end="8:37"><name pos:start="8:8" pos:end="8:10">edu</name><operator pos:start="8:11" pos:end="8:11">.</operator><name pos:start="8:12" pos:end="8:13">nd</name><operator pos:start="8:14" pos:end="8:14">.</operator><name pos:start="8:15" pos:end="8:23">dronology</name><operator pos:start="8:24" pos:end="8:24">.</operator><name pos:start="8:25" pos:end="8:28">util</name><operator pos:start="8:29" pos:end="8:29">.</operator><name pos:start="8:30" pos:end="8:37">FileUtil</name></name>;</import>
<import pos:start="9:1" pos:end="9:30">import <name pos:start="9:8" pos:end="9:29"><name pos:start="9:8" pos:end="9:10">net</name><operator pos:start="9:11" pos:end="9:11">.</operator><name pos:start="9:12" pos:end="9:13">mv</name><operator pos:start="9:14" pos:end="9:14">.</operator><name pos:start="9:15" pos:end="9:21">logging</name><operator pos:start="9:22" pos:end="9:22">.</operator><name pos:start="9:23" pos:end="9:29">ILogger</name></name>;</import>
<import pos:start="10:1" pos:end="10:37">import <name pos:start="10:8" pos:end="10:36"><name pos:start="10:8" pos:end="10:10">net</name><operator pos:start="10:11" pos:end="10:11">.</operator><name pos:start="10:12" pos:end="10:13">mv</name><operator pos:start="10:14" pos:end="10:14">.</operator><name pos:start="10:15" pos:end="10:21">logging</name><operator pos:start="10:22" pos:end="10:22">.</operator><name pos:start="10:23" pos:end="10:36">LoggerProvider</name></name>;</import>

<class pos:start="12:1" pos:end="170:1"><specifier pos:start="12:1" pos:end="12:6">public</specifier> class <name pos:start="12:14" pos:end="12:33">WorkspaceInitializer</name> <block pos:start="12:35" pos:end="170:1">{

	<decl_stmt pos:start="14:9" pos:end="14:99"><decl pos:start="14:9" pos:end="14:98"><type pos:start="14:9" pos:end="14:36"><specifier pos:start="14:9" pos:end="14:15">private</specifier> <specifier pos:start="14:17" pos:end="14:22">static</specifier> <specifier pos:start="14:24" pos:end="14:28">final</specifier> <name pos:start="14:30" pos:end="14:36">ILogger</name></type> <name pos:start="14:38" pos:end="14:43">LOGGER</name> <init pos:start="14:45" pos:end="14:98">= <expr pos:start="14:47" pos:end="14:98"><call pos:start="14:47" pos:end="14:98"><name pos:start="14:47" pos:end="14:70"><name pos:start="14:47" pos:end="14:60">LoggerProvider</name><operator pos:start="14:61" pos:end="14:61">.</operator><name pos:start="14:62" pos:end="14:70">getLogger</name></name><argument_list pos:start="14:71" pos:end="14:98">(<argument pos:start="14:72" pos:end="14:97"><expr pos:start="14:72" pos:end="14:97"><name pos:start="14:72" pos:end="14:97"><name pos:start="14:72" pos:end="14:91">WorkspaceInitializer</name><operator pos:start="14:92" pos:end="14:92">.</operator><name pos:start="14:93" pos:end="14:97">class</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<decl_stmt pos:start="15:9" pos:end="15:28"><decl pos:start="15:9" pos:end="15:27"><type pos:start="15:9" pos:end="15:22"><specifier pos:start="15:9" pos:end="15:15">private</specifier> <name pos:start="15:17" pos:end="15:22">String</name></type> <name pos:start="15:24" pos:end="15:27">root</name></decl>;</decl_stmt>
	<decl_stmt pos:start="16:9" pos:end="16:82"><decl pos:start="16:9" pos:end="16:81"><type pos:start="16:9" pos:end="16:43"><specifier pos:start="16:9" pos:end="16:15">private</specifier> <specifier pos:start="16:17" pos:end="16:22">static</specifier> <name pos:start="16:24" pos:end="16:43">WorkspaceInitializer</name></type> <name pos:start="16:45" pos:end="16:52">instance</name> <init pos:start="16:54" pos:end="16:81">= <expr pos:start="16:56" pos:end="16:81"><operator pos:start="16:56" pos:end="16:58">new</operator> <call pos:start="16:60" pos:end="16:81"><name pos:start="16:60" pos:end="16:79">WorkspaceInitializer</name><argument_list pos:start="16:80" pos:end="16:81">()</argument_list></call></expr></init></decl>;</decl_stmt>

	<function pos:start="18:9" pos:end="43:9"><type pos:start="18:9" pos:end="18:20"><specifier pos:start="18:9" pos:end="18:15">private</specifier> <name pos:start="18:17" pos:end="18:20">void</name></type> <name pos:start="18:22" pos:end="18:32">prepareRoot</name><parameter_list pos:start="18:33" pos:end="18:34">()</parameter_list> <throws pos:start="18:36" pos:end="18:67">throws <argument pos:start="18:43" pos:end="18:67"><expr pos:start="18:43" pos:end="18:67"><name pos:start="18:43" pos:end="18:67">DronologyServiceException</name></expr></argument></throws> <block pos:start="18:69" pos:end="43:9">{<block_content pos:start="19:17" pos:end="42:17">
		<if_stmt pos:start="19:17" pos:end="21:17"><if pos:start="19:17" pos:end="21:17">if <condition pos:start="19:20" pos:end="19:33">(<expr pos:start="19:21" pos:end="19:32"><name pos:start="19:21" pos:end="19:24">root</name> <operator pos:start="19:26" pos:end="19:27">==</operator> <literal type="null" pos:start="19:29" pos:end="19:32">null</literal></expr>)</condition> <block pos:start="19:35" pos:end="21:17">{<block_content pos:start="20:25" pos:end="20:54">
			<expr_stmt pos:start="20:25" pos:end="20:54"><expr pos:start="20:25" pos:end="20:53"><name pos:start="20:25" pos:end="20:28">root</name> <operator pos:start="20:30" pos:end="20:30">=</operator> <call pos:start="20:32" pos:end="20:53"><name pos:start="20:32" pos:end="20:51">getDefaultRootFolder</name><argument_list pos:start="20:52" pos:end="20:53">()</argument_list></call></expr>;</expr_stmt>
		</block_content>}</block></if></if_stmt>
		<if_stmt pos:start="22:17" pos:end="24:17"><if pos:start="22:17" pos:end="24:17">if <condition pos:start="22:20" pos:end="22:33">(<expr pos:start="22:21" pos:end="22:32"><name pos:start="22:21" pos:end="22:24">root</name> <operator pos:start="22:26" pos:end="22:27">==</operator> <literal type="null" pos:start="22:29" pos:end="22:32">null</literal></expr>)</condition> <block pos:start="22:35" pos:end="24:17">{<block_content pos:start="23:25" pos:end="23:70">
			<expr_stmt pos:start="23:25" pos:end="23:70"><expr pos:start="23:25" pos:end="23:69"><name pos:start="23:25" pos:end="23:28">root</name> <operator pos:start="23:30" pos:end="23:30">=</operator> <name pos:start="23:32" pos:end="23:69"><name pos:start="23:32" pos:end="23:49">DronologyConstants</name><operator pos:start="23:50" pos:end="23:50">.</operator><name pos:start="23:51" pos:end="23:69">DEFAULT_ROOT_FOLDER</name></name></expr>;</expr_stmt>
		</block_content>}</block></if></if_stmt>

		<comment type="line" pos:start="26:17" pos:end="26:47">// Replace file path in Windows</comment>
		<expr_stmt pos:start="27:17" pos:end="27:51"><expr pos:start="27:17" pos:end="27:50"><name pos:start="27:17" pos:end="27:20">root</name> <operator pos:start="27:22" pos:end="27:22">=</operator> <call pos:start="27:24" pos:end="27:50"><name pos:start="27:24" pos:end="27:35"><name pos:start="27:24" pos:end="27:27">root</name><operator pos:start="27:28" pos:end="27:28">.</operator><name pos:start="27:29" pos:end="27:35">replace</name></name><argument_list pos:start="27:36" pos:end="27:50">(<argument pos:start="27:37" pos:end="27:45"><expr pos:start="27:37" pos:end="27:45"><literal type="string" pos:start="27:37" pos:end="27:45">"file:\\"</literal></expr></argument>, <argument pos:start="27:48" pos:end="27:49"><expr pos:start="27:48" pos:end="27:49"><literal type="string" pos:start="27:48" pos:end="27:49">""</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<comment type="line" pos:start="28:17" pos:end="28:49">// Replace file path on Linux/MAC</comment>
		<expr_stmt pos:start="29:17" pos:end="29:51"><expr pos:start="29:17" pos:end="29:50"><name pos:start="29:17" pos:end="29:20">root</name> <operator pos:start="29:22" pos:end="29:22">=</operator> <call pos:start="29:24" pos:end="29:50"><name pos:start="29:24" pos:end="29:35"><name pos:start="29:24" pos:end="29:27">root</name><operator pos:start="29:28" pos:end="29:28">.</operator><name pos:start="29:29" pos:end="29:35">replace</name></name><argument_list pos:start="29:36" pos:end="29:50">(<argument pos:start="29:37" pos:end="29:44"><expr pos:start="29:37" pos:end="29:44"><literal type="string" pos:start="29:37" pos:end="29:44">"file:/"</literal></expr></argument>, <argument pos:start="29:47" pos:end="29:49"><expr pos:start="29:47" pos:end="29:49"><literal type="string" pos:start="29:47" pos:end="29:49">"/"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		<expr_stmt pos:start="31:17" pos:end="31:81"><expr pos:start="31:17" pos:end="31:80"><call pos:start="31:17" pos:end="31:80"><name pos:start="31:17" pos:end="31:27"><name pos:start="31:17" pos:end="31:22">LOGGER</name><operator pos:start="31:23" pos:end="31:23">.</operator><name pos:start="31:24" pos:end="31:27">info</name></name><argument_list pos:start="31:28" pos:end="31:80">(<argument pos:start="31:29" pos:end="31:79"><expr pos:start="31:29" pos:end="31:79"><literal type="string" pos:start="31:29" pos:end="31:66">"Server workspace root location is: '"</literal> <operator pos:start="31:68" pos:end="31:68">+</operator> <name pos:start="31:70" pos:end="31:73">root</name> <operator pos:start="31:75" pos:end="31:75">+</operator> <literal type="string" pos:start="31:77" pos:end="31:79">"'"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		<decl_stmt pos:start="33:17" pos:end="33:40"><decl pos:start="33:17" pos:end="33:39"><type pos:start="33:17" pos:end="33:20"><name pos:start="33:17" pos:end="33:20">File</name></type> <name pos:start="33:22" pos:end="33:22">f</name> <init pos:start="33:24" pos:end="33:39">= <expr pos:start="33:26" pos:end="33:39"><operator pos:start="33:26" pos:end="33:28">new</operator> <call pos:start="33:30" pos:end="33:39"><name pos:start="33:30" pos:end="33:33">File</name><argument_list pos:start="33:34" pos:end="33:39">(<argument pos:start="33:35" pos:end="33:38"><expr pos:start="33:35" pos:end="33:38"><name pos:start="33:35" pos:end="33:38">root</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt pos:start="34:17" pos:end="34:82"><expr pos:start="34:17" pos:end="34:81"><call pos:start="34:17" pos:end="34:81"><name pos:start="34:17" pos:end="34:27"><name pos:start="34:17" pos:end="34:22">LOGGER</name><operator pos:start="34:23" pos:end="34:23">.</operator><name pos:start="34:24" pos:end="34:27">info</name></name><argument_list pos:start="34:28" pos:end="34:81">(<argument pos:start="34:29" pos:end="34:80"><expr pos:start="34:29" pos:end="34:80"><literal type="string" pos:start="34:29" pos:end="34:49">"Absolute path is: '"</literal> <operator pos:start="34:51" pos:end="34:51">+</operator> <call pos:start="34:53" pos:end="34:63"><name pos:start="34:53" pos:end="34:61"><name pos:start="34:53" pos:end="34:53">f</name><operator pos:start="34:54" pos:end="34:54">.</operator><name pos:start="34:55" pos:end="34:61">getPath</name></name><argument_list pos:start="34:62" pos:end="34:63">()</argument_list></call><operator pos:start="34:64" pos:end="34:64">.</operator><call pos:start="34:65" pos:end="34:74"><name pos:start="34:65" pos:end="34:72">toString</name><argument_list pos:start="34:73" pos:end="34:74">()</argument_list></call> <operator pos:start="34:76" pos:end="34:76">+</operator> <literal type="string" pos:start="34:78" pos:end="34:80">"'"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<if_stmt pos:start="35:17" pos:end="37:17"><if pos:start="35:17" pos:end="37:17">if <condition pos:start="35:20" pos:end="35:32">(<expr pos:start="35:21" pos:end="35:31"><operator pos:start="35:21" pos:end="35:21">!</operator><call pos:start="35:22" pos:end="35:31"><name pos:start="35:22" pos:end="35:29"><name pos:start="35:22" pos:end="35:22">f</name><operator pos:start="35:23" pos:end="35:23">.</operator><name pos:start="35:24" pos:end="35:29">exists</name></name><argument_list pos:start="35:30" pos:end="35:31">()</argument_list></call></expr>)</condition> <block pos:start="35:34" pos:end="37:17">{<block_content pos:start="36:25" pos:end="36:35">
			<expr_stmt pos:start="36:25" pos:end="36:35"><expr pos:start="36:25" pos:end="36:34"><call pos:start="36:25" pos:end="36:34"><name pos:start="36:25" pos:end="36:32"><name pos:start="36:25" pos:end="36:25">f</name><operator pos:start="36:26" pos:end="36:26">.</operator><name pos:start="36:27" pos:end="36:32">mkdirs</name></name><argument_list pos:start="36:33" pos:end="36:34">()</argument_list></call></expr>;</expr_stmt>
		</block_content>}</block></if></if_stmt>
		<try pos:start="38:17" pos:end="42:17">try <block pos:start="38:21" pos:end="40:17">{<block_content pos:start="39:25" pos:end="39:43">
			<expr_stmt pos:start="39:25" pos:end="39:43"><expr pos:start="39:25" pos:end="39:42"><name pos:start="39:25" pos:end="39:28">root</name> <operator pos:start="39:30" pos:end="39:30">=</operator> <call pos:start="39:32" pos:end="39:42"><name pos:start="39:32" pos:end="39:40"><name pos:start="39:32" pos:end="39:32">f</name><operator pos:start="39:33" pos:end="39:33">.</operator><name pos:start="39:34" pos:end="39:40">getPath</name></name><argument_list pos:start="39:41" pos:end="39:42">()</argument_list></call></expr>;</expr_stmt>
		</block_content>}</block> <catch pos:start="40:19" pos:end="42:17">catch <parameter_list pos:start="40:25" pos:end="40:37">(<parameter pos:start="40:26" pos:end="40:36"><decl pos:start="40:26" pos:end="40:36"><type pos:start="40:26" pos:end="40:36"><name pos:start="40:26" pos:end="40:34">Exception</name></type> <name pos:start="40:36" pos:end="40:36">e</name></decl></parameter>)</parameter_list> <block pos:start="40:39" pos:end="42:17">{<block_content pos:start="41:25" pos:end="41:112">
			<throw pos:start="41:25" pos:end="41:112">throw <expr pos:start="41:31" pos:end="41:111"><operator pos:start="41:31" pos:end="41:33">new</operator> <call pos:start="41:35" pos:end="41:111"><name pos:start="41:35" pos:end="41:59">DronologyServiceException</name><argument_list pos:start="41:60" pos:end="41:111">(<argument pos:start="41:61" pos:end="41:110"><expr pos:start="41:61" pos:end="41:110"><literal type="string" pos:start="41:61" pos:end="41:97">"Error when setting workspace root '"</literal> <operator pos:start="41:99" pos:end="41:99">+</operator> <name pos:start="41:101" pos:end="41:104">root</name> <operator pos:start="41:106" pos:end="41:106">+</operator> <literal type="string" pos:start="41:108" pos:end="41:110">"'"</literal></expr></argument>)</argument_list></call></expr>;</throw>
		</block_content>}</block></catch></try>
	</block_content>}</block></function>

	<function pos:start="45:9" pos:end="59:9"><type pos:start="45:9" pos:end="45:22"><specifier pos:start="45:9" pos:end="45:15">private</specifier> <name pos:start="45:17" pos:end="45:22">String</name></type> <name pos:start="45:24" pos:end="45:43">getDefaultRootFolder</name><parameter_list pos:start="45:44" pos:end="45:45">()</parameter_list> <throws pos:start="45:47" pos:end="45:78">throws <argument pos:start="45:54" pos:end="45:78"><expr pos:start="45:54" pos:end="45:78"><name pos:start="45:54" pos:end="45:78">DronologyServiceException</name></expr></argument></throws> <block pos:start="45:80" pos:end="59:9">{<block_content pos:start="46:17" pos:end="58:96">
		<decl_stmt pos:start="46:17" pos:end="46:105"><decl pos:start="46:17" pos:end="46:104"><type pos:start="46:17" pos:end="46:26"><name pos:start="46:17" pos:end="46:26">CodeSource</name></type> <name pos:start="46:28" pos:end="46:37">codeSource</name> <init pos:start="46:39" pos:end="46:104">= <expr pos:start="46:41" pos:end="46:104"><call pos:start="46:41" pos:end="46:88"><name pos:start="46:41" pos:end="46:86"><name pos:start="46:41" pos:end="46:60">WorkspaceInitializer</name><operator pos:start="46:61" pos:end="46:61">.</operator><name pos:start="46:62" pos:end="46:86"><name pos:start="46:62" pos:end="46:66">class</name><operator pos:start="46:67" pos:end="46:67">.</operator><name pos:start="46:68" pos:end="46:86">getProtectionDomain</name></name></name><argument_list pos:start="46:87" pos:end="46:88">()</argument_list></call><operator pos:start="46:89" pos:end="46:89">.</operator><call pos:start="46:90" pos:end="46:104"><name pos:start="46:90" pos:end="46:102">getCodeSource</name><argument_list pos:start="46:103" pos:end="46:104">()</argument_list></call></expr></init></decl>;</decl_stmt>
		<decl_stmt pos:start="47:17" pos:end="47:32"><decl pos:start="47:17" pos:end="47:31"><type pos:start="47:17" pos:end="47:20"><name pos:start="47:17" pos:end="47:20">File</name></type> <name pos:start="47:22" pos:end="47:31">codeFolder</name></decl>;</decl_stmt>
		<expr_stmt pos:start="48:17" pos:end="48:81"><expr pos:start="48:17" pos:end="48:80"><name pos:start="48:17" pos:end="48:26">codeFolder</name> <operator pos:start="48:28" pos:end="48:28">=</operator> <operator pos:start="48:30" pos:end="48:32">new</operator> <call pos:start="48:34" pos:end="48:80"><name pos:start="48:34" pos:end="48:37">File</name><argument_list pos:start="48:38" pos:end="48:80">(<argument pos:start="48:39" pos:end="48:79"><expr pos:start="48:39" pos:end="48:79"><call pos:start="48:39" pos:end="48:62"><name pos:start="48:39" pos:end="48:60"><name pos:start="48:39" pos:end="48:48">codeSource</name><operator pos:start="48:49" pos:end="48:49">.</operator><name pos:start="48:50" pos:end="48:60">getLocation</name></name><argument_list pos:start="48:61" pos:end="48:62">()</argument_list></call><operator pos:start="48:63" pos:end="48:63">.</operator><call pos:start="48:64" pos:end="48:79"><name pos:start="48:64" pos:end="48:77">toExternalForm</name><argument_list pos:start="48:78" pos:end="48:79">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<decl_stmt pos:start="49:17" pos:end="49:57"><decl pos:start="49:17" pos:end="49:56"><type pos:start="49:17" pos:end="49:20"><name pos:start="49:17" pos:end="49:20">File</name></type> <name pos:start="49:22" pos:end="49:27">parent</name> <init pos:start="49:29" pos:end="49:56">= <expr pos:start="49:31" pos:end="49:56"><call pos:start="49:31" pos:end="49:56"><name pos:start="49:31" pos:end="49:54"><name pos:start="49:31" pos:end="49:40">codeFolder</name><operator pos:start="49:41" pos:end="49:41">.</operator><name pos:start="49:42" pos:end="49:54">getParentFile</name></name><argument_list pos:start="49:55" pos:end="49:56">()</argument_list></call></expr></init></decl>;</decl_stmt>
		<if_stmt pos:start="50:17" pos:end="52:17"><if pos:start="50:17" pos:end="52:17">if <condition pos:start="50:20" pos:end="50:35">(<expr pos:start="50:21" pos:end="50:34"><name pos:start="50:21" pos:end="50:26">parent</name> <operator pos:start="50:28" pos:end="50:29">==</operator> <literal type="null" pos:start="50:31" pos:end="50:34">null</literal></expr>)</condition> <block pos:start="50:37" pos:end="52:17">{<block_content pos:start="51:25" pos:end="51:36">
			<return pos:start="51:25" pos:end="51:36">return <expr pos:start="51:32" pos:end="51:35"><literal type="null" pos:start="51:32" pos:end="51:35">null</literal></expr>;</return>
		</block_content>}</block></if></if_stmt>
		<decl_stmt pos:start="53:17" pos:end="53:49"><decl pos:start="53:17" pos:end="53:48"><type pos:start="53:17" pos:end="53:20"><name pos:start="53:17" pos:end="53:20">File</name></type> <name pos:start="53:22" pos:end="53:23">ws</name> <init pos:start="53:25" pos:end="53:48">= <expr pos:start="53:27" pos:end="53:48"><call pos:start="53:27" pos:end="53:48"><name pos:start="53:27" pos:end="53:46"><name pos:start="53:27" pos:end="53:32">parent</name><operator pos:start="53:33" pos:end="53:33">.</operator><name pos:start="53:34" pos:end="53:46">getParentFile</name></name><argument_list pos:start="53:47" pos:end="53:48">()</argument_list></call></expr></init></decl>;</decl_stmt>
		<if_stmt pos:start="54:17" pos:end="56:17"><if pos:start="54:17" pos:end="56:17">if <condition pos:start="54:20" pos:end="54:31">(<expr pos:start="54:21" pos:end="54:30"><name pos:start="54:21" pos:end="54:22">ws</name> <operator pos:start="54:24" pos:end="54:25">==</operator> <literal type="null" pos:start="54:27" pos:end="54:30">null</literal></expr>)</condition> <block pos:start="54:33" pos:end="56:17">{<block_content pos:start="55:25" pos:end="55:36">
			<return pos:start="55:25" pos:end="55:36">return <expr pos:start="55:32" pos:end="55:35"><literal type="null" pos:start="55:32" pos:end="55:35">null</literal></expr>;</return>
		</block_content>}</block></if></if_stmt>

		<return pos:start="58:17" pos:end="58:96">return <expr pos:start="58:24" pos:end="58:95"><call pos:start="58:24" pos:end="58:35"><name pos:start="58:24" pos:end="58:33"><name pos:start="58:24" pos:end="58:25">ws</name><operator pos:start="58:26" pos:end="58:26">.</operator><name pos:start="58:27" pos:end="58:33">getPath</name></name><argument_list pos:start="58:34" pos:end="58:35">()</argument_list></call> <operator pos:start="58:37" pos:end="58:37">+</operator> <name pos:start="58:39" pos:end="58:52"><name pos:start="58:39" pos:end="58:42">File</name><operator pos:start="58:43" pos:end="58:43">.</operator><name pos:start="58:44" pos:end="58:52">separator</name></name> <operator pos:start="58:54" pos:end="58:54">+</operator> <name pos:start="58:56" pos:end="58:95"><name pos:start="58:56" pos:end="58:73">DronologyConstants</name><operator pos:start="58:74" pos:end="58:74">.</operator><name pos:start="58:75" pos:end="58:95">DRONOLOGY_ROOT_FOLDER</name></name></expr>;</return>
	</block_content>}</block></function>

	<function pos:start="61:9" pos:end="68:9"><type pos:start="61:9" pos:end="61:19"><specifier pos:start="61:9" pos:end="61:14">public</specifier> <name pos:start="61:16" pos:end="61:19">void</name></type> <name pos:start="61:21" pos:end="61:42">prepareServerWorkspace</name><parameter_list pos:start="61:43" pos:end="61:60">(<parameter pos:start="61:44" pos:end="61:59"><decl pos:start="61:44" pos:end="61:59"><type pos:start="61:44" pos:end="61:49"><name pos:start="61:44" pos:end="61:49">String</name></type> <name pos:start="61:51" pos:end="61:59">workspace</name></decl></parameter>)</parameter_list> <throws pos:start="61:62" pos:end="61:93">throws <argument pos:start="61:69" pos:end="61:93"><expr pos:start="61:69" pos:end="61:93"><name pos:start="61:69" pos:end="61:93">DronologyServiceException</name></expr></argument></throws> <block pos:start="61:95" pos:end="68:9">{<block_content pos:start="62:17" pos:end="67:50">
		<expr_stmt pos:start="62:17" pos:end="62:50"><expr pos:start="62:17" pos:end="62:49"><name pos:start="62:17" pos:end="62:25"><name pos:start="62:17" pos:end="62:20">this</name><operator pos:start="62:21" pos:end="62:21">.</operator><name pos:start="62:22" pos:end="62:25">root</name></name> <operator pos:start="62:27" pos:end="62:27">=</operator> <call pos:start="62:29" pos:end="62:49"><name pos:start="62:29" pos:end="62:38">formatPath</name><argument_list pos:start="62:39" pos:end="62:49">(<argument pos:start="62:40" pos:end="62:48"><expr pos:start="62:40" pos:end="62:48"><name pos:start="62:40" pos:end="62:48">workspace</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt pos:start="63:17" pos:end="63:30"><expr pos:start="63:17" pos:end="63:29"><call pos:start="63:17" pos:end="63:29"><name pos:start="63:17" pos:end="63:27">prepareRoot</name><argument_list pos:start="63:28" pos:end="63:29">()</argument_list></call></expr>;</expr_stmt>
		<expr_stmt pos:start="64:17" pos:end="64:45"><expr pos:start="64:17" pos:end="64:44"><call pos:start="64:17" pos:end="64:44"><name pos:start="64:17" pos:end="64:42">prepareFlightPathWorkspace</name><argument_list pos:start="64:43" pos:end="64:44">()</argument_list></call></expr>;</expr_stmt>
		<expr_stmt pos:start="65:17" pos:end="65:48"><expr pos:start="65:17" pos:end="65:47"><call pos:start="65:17" pos:end="65:47"><name pos:start="65:17" pos:end="65:45">prepareSpecificationWorkspace</name><argument_list pos:start="65:46" pos:end="65:47">()</argument_list></call></expr>;</expr_stmt>
		<expr_stmt pos:start="66:17" pos:end="66:46"><expr pos:start="66:17" pos:end="66:45"><call pos:start="66:17" pos:end="66:45"><name pos:start="66:17" pos:end="66:43">prepareAreaMappingWorkspace</name><argument_list pos:start="66:44" pos:end="66:45">()</argument_list></call></expr>;</expr_stmt>
		<expr_stmt pos:start="67:17" pos:end="67:50"><expr pos:start="67:17" pos:end="67:49"><call pos:start="67:17" pos:end="67:49"><name pos:start="67:17" pos:end="67:47">prepareMissionPlanningWorkspace</name><argument_list pos:start="67:48" pos:end="67:49">()</argument_list></call></expr>;</expr_stmt>
	</block_content>}</block></function>

	<function pos:start="70:9" pos:end="76:9"><type pos:start="70:9" pos:end="70:22"><specifier pos:start="70:9" pos:end="70:15">private</specifier> <name pos:start="70:17" pos:end="70:22">String</name></type> <name pos:start="70:24" pos:end="70:33">formatPath</name><parameter_list pos:start="70:34" pos:end="70:51">(<parameter pos:start="70:35" pos:end="70:50"><decl pos:start="70:35" pos:end="70:50"><type pos:start="70:35" pos:end="70:40"><name pos:start="70:35" pos:end="70:40">String</name></type> <name pos:start="70:42" pos:end="70:50">workspace</name></decl></parameter>)</parameter_list> <block pos:start="70:53" pos:end="76:9">{<block_content pos:start="71:17" pos:end="75:32">
		<if_stmt pos:start="71:17" pos:end="73:17"><if pos:start="71:17" pos:end="73:17">if <condition pos:start="71:20" pos:end="71:38">(<expr pos:start="71:21" pos:end="71:37"><name pos:start="71:21" pos:end="71:29">workspace</name> <operator pos:start="71:31" pos:end="71:32">==</operator> <literal type="null" pos:start="71:34" pos:end="71:37">null</literal></expr>)</condition> <block pos:start="71:40" pos:end="73:17">{<block_content pos:start="72:25" pos:end="72:36">
			<return pos:start="72:25" pos:end="72:36">return <expr pos:start="72:32" pos:end="72:35"><literal type="null" pos:start="72:32" pos:end="72:35">null</literal></expr>;</return>
		</block_content>}</block></if></if_stmt>
		<decl_stmt pos:start="74:17" pos:end="74:63"><decl pos:start="74:17" pos:end="74:62"><type pos:start="74:17" pos:end="74:22"><name pos:start="74:17" pos:end="74:22">String</name></type> <name pos:start="74:24" pos:end="74:31">formated</name> <init pos:start="74:33" pos:end="74:62">= <expr pos:start="74:35" pos:end="74:62"><call pos:start="74:35" pos:end="74:62"><name pos:start="74:35" pos:end="74:51"><name pos:start="74:35" pos:end="74:43">workspace</name><operator pos:start="74:44" pos:end="74:44">.</operator><name pos:start="74:45" pos:end="74:51">replace</name></name><argument_list pos:start="74:52" pos:end="74:62">(<argument pos:start="74:53" pos:end="74:55"><expr pos:start="74:53" pos:end="74:55"><literal type="string" pos:start="74:53" pos:end="74:55">"/"</literal></expr></argument>, <argument pos:start="74:58" pos:end="74:61"><expr pos:start="74:58" pos:end="74:61"><literal type="string" pos:start="74:58" pos:end="74:61">"\\"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<return pos:start="75:17" pos:end="75:32">return <expr pos:start="75:24" pos:end="75:31"><name pos:start="75:24" pos:end="75:31">formated</name></expr>;</return>
	</block_content>}</block></function>

	<function pos:start="78:9" pos:end="84:9"><type pos:start="78:9" pos:end="78:20"><specifier pos:start="78:9" pos:end="78:15">private</specifier> <name pos:start="78:17" pos:end="78:20">void</name></type> <name pos:start="78:22" pos:end="78:47">prepareFlightPathWorkspace</name><parameter_list pos:start="78:48" pos:end="78:49">()</parameter_list> <block pos:start="78:51" pos:end="84:9">{<block_content pos:start="79:17" pos:end="83:17">
		<decl_stmt pos:start="79:17" pos:end="79:61"><decl pos:start="79:17" pos:end="79:60"><type pos:start="79:17" pos:end="79:22"><name pos:start="79:17" pos:end="79:22">String</name></type> <name pos:start="79:24" pos:end="79:33">folderPath</name> <init pos:start="79:35" pos:end="79:60">= <expr pos:start="79:37" pos:end="79:60"><call pos:start="79:37" pos:end="79:60"><name pos:start="79:37" pos:end="79:58">getFlightRouteLocation</name><argument_list pos:start="79:59" pos:end="79:60">()</argument_list></call></expr></init></decl>;</decl_stmt>
		<decl_stmt pos:start="80:17" pos:end="80:46"><decl pos:start="80:17" pos:end="80:45"><type pos:start="80:17" pos:end="80:20"><name pos:start="80:17" pos:end="80:20">File</name></type> <name pos:start="80:22" pos:end="80:22">f</name> <init pos:start="80:24" pos:end="80:45">= <expr pos:start="80:26" pos:end="80:45"><operator pos:start="80:26" pos:end="80:28">new</operator> <call pos:start="80:30" pos:end="80:45"><name pos:start="80:30" pos:end="80:33">File</name><argument_list pos:start="80:34" pos:end="80:45">(<argument pos:start="80:35" pos:end="80:44"><expr pos:start="80:35" pos:end="80:44"><name pos:start="80:35" pos:end="80:44">folderPath</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<if_stmt pos:start="81:17" pos:end="83:17"><if pos:start="81:17" pos:end="83:17">if <condition pos:start="81:20" pos:end="81:32">(<expr pos:start="81:21" pos:end="81:31"><operator pos:start="81:21" pos:end="81:21">!</operator><call pos:start="81:22" pos:end="81:31"><name pos:start="81:22" pos:end="81:29"><name pos:start="81:22" pos:end="81:22">f</name><operator pos:start="81:23" pos:end="81:23">.</operator><name pos:start="81:24" pos:end="81:29">exists</name></name><argument_list pos:start="81:30" pos:end="81:31">()</argument_list></call></expr>)</condition> <block pos:start="81:34" pos:end="83:17">{<block_content pos:start="82:25" pos:end="82:35">
			<expr_stmt pos:start="82:25" pos:end="82:35"><expr pos:start="82:25" pos:end="82:34"><call pos:start="82:25" pos:end="82:34"><name pos:start="82:25" pos:end="82:32"><name pos:start="82:25" pos:end="82:25">f</name><operator pos:start="82:26" pos:end="82:26">.</operator><name pos:start="82:27" pos:end="82:32">mkdirs</name></name><argument_list pos:start="82:33" pos:end="82:34">()</argument_list></call></expr>;</expr_stmt>
		</block_content>}</block></if></if_stmt>
	</block_content>}</block></function>

	<function pos:start="86:9" pos:end="92:9"><type pos:start="86:9" pos:end="86:20"><specifier pos:start="86:9" pos:end="86:15">private</specifier> <name pos:start="86:17" pos:end="86:20">void</name></type> <name pos:start="86:22" pos:end="86:50">prepareSpecificationWorkspace</name><parameter_list pos:start="86:51" pos:end="86:52">()</parameter_list> <block pos:start="86:54" pos:end="92:9">{<block_content pos:start="87:17" pos:end="91:17">
		<decl_stmt pos:start="87:17" pos:end="87:68"><decl pos:start="87:17" pos:end="87:67"><type pos:start="87:17" pos:end="87:22"><name pos:start="87:17" pos:end="87:22">String</name></type> <name pos:start="87:24" pos:end="87:33">folderPath</name> <init pos:start="87:35" pos:end="87:67">= <expr pos:start="87:37" pos:end="87:67"><call pos:start="87:37" pos:end="87:67"><name pos:start="87:37" pos:end="87:65">getDroneSpecificationLocation</name><argument_list pos:start="87:66" pos:end="87:67">()</argument_list></call></expr></init></decl>;</decl_stmt>
		<decl_stmt pos:start="88:17" pos:end="88:46"><decl pos:start="88:17" pos:end="88:45"><type pos:start="88:17" pos:end="88:20"><name pos:start="88:17" pos:end="88:20">File</name></type> <name pos:start="88:22" pos:end="88:22">f</name> <init pos:start="88:24" pos:end="88:45">= <expr pos:start="88:26" pos:end="88:45"><operator pos:start="88:26" pos:end="88:28">new</operator> <call pos:start="88:30" pos:end="88:45"><name pos:start="88:30" pos:end="88:33">File</name><argument_list pos:start="88:34" pos:end="88:45">(<argument pos:start="88:35" pos:end="88:44"><expr pos:start="88:35" pos:end="88:44"><name pos:start="88:35" pos:end="88:44">folderPath</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<if_stmt pos:start="89:17" pos:end="91:17"><if pos:start="89:17" pos:end="91:17">if <condition pos:start="89:20" pos:end="89:32">(<expr pos:start="89:21" pos:end="89:31"><operator pos:start="89:21" pos:end="89:21">!</operator><call pos:start="89:22" pos:end="89:31"><name pos:start="89:22" pos:end="89:29"><name pos:start="89:22" pos:end="89:22">f</name><operator pos:start="89:23" pos:end="89:23">.</operator><name pos:start="89:24" pos:end="89:29">exists</name></name><argument_list pos:start="89:30" pos:end="89:31">()</argument_list></call></expr>)</condition> <block pos:start="89:34" pos:end="91:17">{<block_content pos:start="90:25" pos:end="90:35">
			<expr_stmt pos:start="90:25" pos:end="90:35"><expr pos:start="90:25" pos:end="90:34"><call pos:start="90:25" pos:end="90:34"><name pos:start="90:25" pos:end="90:32"><name pos:start="90:25" pos:end="90:25">f</name><operator pos:start="90:26" pos:end="90:26">.</operator><name pos:start="90:27" pos:end="90:32">mkdirs</name></name><argument_list pos:start="90:33" pos:end="90:34">()</argument_list></call></expr>;</expr_stmt>
		</block_content>}</block></if></if_stmt>
	</block_content>}</block></function>
	
	<function pos:start="94:9" pos:end="100:9"><type pos:start="94:9" pos:end="94:20"><specifier pos:start="94:9" pos:end="94:15">private</specifier> <name pos:start="94:17" pos:end="94:20">void</name></type> <name pos:start="94:22" pos:end="94:52">prepareMissionPlanningWorkspace</name><parameter_list pos:start="94:53" pos:end="94:54">()</parameter_list> <block pos:start="94:56" pos:end="100:9">{<block_content pos:start="95:17" pos:end="99:17">
		<decl_stmt pos:start="95:17" pos:end="95:65"><decl pos:start="95:17" pos:end="95:64"><type pos:start="95:17" pos:end="95:22"><name pos:start="95:17" pos:end="95:22">String</name></type> <name pos:start="95:24" pos:end="95:33">folderPath</name> <init pos:start="95:35" pos:end="95:64">= <expr pos:start="95:37" pos:end="95:64"><call pos:start="95:37" pos:end="95:64"><name pos:start="95:37" pos:end="95:62">getMissionPlanningLocation</name><argument_list pos:start="95:63" pos:end="95:64">()</argument_list></call></expr></init></decl>;</decl_stmt>
		<decl_stmt pos:start="96:17" pos:end="96:46"><decl pos:start="96:17" pos:end="96:45"><type pos:start="96:17" pos:end="96:20"><name pos:start="96:17" pos:end="96:20">File</name></type> <name pos:start="96:22" pos:end="96:22">f</name> <init pos:start="96:24" pos:end="96:45">= <expr pos:start="96:26" pos:end="96:45"><operator pos:start="96:26" pos:end="96:28">new</operator> <call pos:start="96:30" pos:end="96:45"><name pos:start="96:30" pos:end="96:33">File</name><argument_list pos:start="96:34" pos:end="96:45">(<argument pos:start="96:35" pos:end="96:44"><expr pos:start="96:35" pos:end="96:44"><name pos:start="96:35" pos:end="96:44">folderPath</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<if_stmt pos:start="97:17" pos:end="99:17"><if pos:start="97:17" pos:end="99:17">if <condition pos:start="97:20" pos:end="97:32">(<expr pos:start="97:21" pos:end="97:31"><operator pos:start="97:21" pos:end="97:21">!</operator><call pos:start="97:22" pos:end="97:31"><name pos:start="97:22" pos:end="97:29"><name pos:start="97:22" pos:end="97:22">f</name><operator pos:start="97:23" pos:end="97:23">.</operator><name pos:start="97:24" pos:end="97:29">exists</name></name><argument_list pos:start="97:30" pos:end="97:31">()</argument_list></call></expr>)</condition> <block pos:start="97:34" pos:end="99:17">{<block_content pos:start="98:25" pos:end="98:35">
			<expr_stmt pos:start="98:25" pos:end="98:35"><expr pos:start="98:25" pos:end="98:34"><call pos:start="98:25" pos:end="98:34"><name pos:start="98:25" pos:end="98:32"><name pos:start="98:25" pos:end="98:25">f</name><operator pos:start="98:26" pos:end="98:26">.</operator><name pos:start="98:27" pos:end="98:32">mkdirs</name></name><argument_list pos:start="98:33" pos:end="98:34">()</argument_list></call></expr>;</expr_stmt>
		</block_content>}</block></if></if_stmt>
	</block_content>}</block></function>
	
	<function pos:start="102:9" pos:end="108:9"><type pos:start="102:9" pos:end="102:20"><specifier pos:start="102:9" pos:end="102:15">private</specifier> <name pos:start="102:17" pos:end="102:20">void</name></type> <name pos:start="102:22" pos:end="102:48">prepareAreaMappingWorkspace</name><parameter_list pos:start="102:49" pos:end="102:50">()</parameter_list> <block pos:start="102:52" pos:end="108:9">{<block_content pos:start="103:17" pos:end="107:17">
		<decl_stmt pos:start="103:17" pos:end="103:61"><decl pos:start="103:17" pos:end="103:60"><type pos:start="103:17" pos:end="103:22"><name pos:start="103:17" pos:end="103:22">String</name></type> <name pos:start="103:24" pos:end="103:33">folderPath</name> <init pos:start="103:35" pos:end="103:60">= <expr pos:start="103:37" pos:end="103:60"><call pos:start="103:37" pos:end="103:60"><name pos:start="103:37" pos:end="103:58">getAreaMappingLocation</name><argument_list pos:start="103:59" pos:end="103:60">()</argument_list></call></expr></init></decl>;</decl_stmt>
		<decl_stmt pos:start="104:17" pos:end="104:46"><decl pos:start="104:17" pos:end="104:45"><type pos:start="104:17" pos:end="104:20"><name pos:start="104:17" pos:end="104:20">File</name></type> <name pos:start="104:22" pos:end="104:22">f</name> <init pos:start="104:24" pos:end="104:45">= <expr pos:start="104:26" pos:end="104:45"><operator pos:start="104:26" pos:end="104:28">new</operator> <call pos:start="104:30" pos:end="104:45"><name pos:start="104:30" pos:end="104:33">File</name><argument_list pos:start="104:34" pos:end="104:45">(<argument pos:start="104:35" pos:end="104:44"><expr pos:start="104:35" pos:end="104:44"><name pos:start="104:35" pos:end="104:44">folderPath</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<if_stmt pos:start="105:17" pos:end="107:17"><if pos:start="105:17" pos:end="107:17">if <condition pos:start="105:20" pos:end="105:32">(<expr pos:start="105:21" pos:end="105:31"><operator pos:start="105:21" pos:end="105:21">!</operator><call pos:start="105:22" pos:end="105:31"><name pos:start="105:22" pos:end="105:29"><name pos:start="105:22" pos:end="105:22">f</name><operator pos:start="105:23" pos:end="105:23">.</operator><name pos:start="105:24" pos:end="105:29">exists</name></name><argument_list pos:start="105:30" pos:end="105:31">()</argument_list></call></expr>)</condition> <block pos:start="105:34" pos:end="107:17">{<block_content pos:start="106:25" pos:end="106:35">
			<expr_stmt pos:start="106:25" pos:end="106:35"><expr pos:start="106:25" pos:end="106:34"><call pos:start="106:25" pos:end="106:34"><name pos:start="106:25" pos:end="106:32"><name pos:start="106:25" pos:end="106:25">f</name><operator pos:start="106:26" pos:end="106:26">.</operator><name pos:start="106:27" pos:end="106:32">mkdirs</name></name><argument_list pos:start="106:33" pos:end="106:34">()</argument_list></call></expr>;</expr_stmt>
		</block_content>}</block></if></if_stmt>
	</block_content>}</block></function>

	<function pos:start="110:9" pos:end="112:9"><type pos:start="110:9" pos:end="110:14"><name pos:start="110:9" pos:end="110:14">String</name></type> <name pos:start="110:16" pos:end="110:35">getWorkspaceLocation</name><parameter_list pos:start="110:36" pos:end="110:37">()</parameter_list> <block pos:start="110:39" pos:end="112:9">{<block_content pos:start="111:17" pos:end="111:28">
		<return pos:start="111:17" pos:end="111:28">return <expr pos:start="111:24" pos:end="111:27"><name pos:start="111:24" pos:end="111:27">root</name></expr>;</return>
	</block_content>}</block></function>

	<function pos:start="114:9" pos:end="116:9"><type pos:start="114:9" pos:end="114:14"><name pos:start="114:9" pos:end="114:14">String</name></type> <name pos:start="114:16" pos:end="114:37">getFlightRouteLocation</name><parameter_list pos:start="114:38" pos:end="114:39">()</parameter_list> <block pos:start="114:41" pos:end="116:9">{<block_content pos:start="115:17" pos:end="115:85">
		<return pos:start="115:17" pos:end="115:85">return <expr pos:start="115:24" pos:end="115:84"><name pos:start="115:24" pos:end="115:27">root</name> <operator pos:start="115:29" pos:end="115:29">+</operator> <name pos:start="115:31" pos:end="115:44"><name pos:start="115:31" pos:end="115:34">File</name><operator pos:start="115:35" pos:end="115:35">.</operator><name pos:start="115:36" pos:end="115:44">separator</name></name> <operator pos:start="115:46" pos:end="115:46">+</operator> <name pos:start="115:48" pos:end="115:84"><name pos:start="115:48" pos:end="115:65">DronologyConstants</name><operator pos:start="115:66" pos:end="115:66">.</operator><name pos:start="115:67" pos:end="115:84">FOLDER_FLIGHTROUTE</name></name></expr>;</return>
	</block_content>}</block></function>

	<function pos:start="118:9" pos:end="120:9"><type pos:start="118:9" pos:end="118:21"><specifier pos:start="118:9" pos:end="118:14">public</specifier> <name pos:start="118:16" pos:end="118:21">String</name></type> <name pos:start="118:23" pos:end="118:44">getSimScenarioLocation</name><parameter_list pos:start="118:45" pos:end="118:46">()</parameter_list> <block pos:start="118:48" pos:end="120:9">{<block_content pos:start="119:17" pos:end="119:87">
		<return pos:start="119:17" pos:end="119:87">return <expr pos:start="119:24" pos:end="119:86"><name pos:start="119:24" pos:end="119:27">root</name> <operator pos:start="119:29" pos:end="119:29">+</operator> <name pos:start="119:31" pos:end="119:44"><name pos:start="119:31" pos:end="119:34">File</name><operator pos:start="119:35" pos:end="119:35">.</operator><name pos:start="119:36" pos:end="119:44">separator</name></name> <operator pos:start="119:46" pos:end="119:46">+</operator> <name pos:start="119:48" pos:end="119:86"><name pos:start="119:48" pos:end="119:65">DronologyConstants</name><operator pos:start="119:66" pos:end="119:66">.</operator><name pos:start="119:67" pos:end="119:86">FOLDERN_SIM_SCENARIO</name></name></expr>;</return>
	</block_content>}</block></function>

	<function pos:start="122:9" pos:end="124:9"><type pos:start="122:9" pos:end="122:21"><specifier pos:start="122:9" pos:end="122:14">public</specifier> <name pos:start="122:16" pos:end="122:21">String</name></type> <name pos:start="122:23" pos:end="122:51">getDroneSpecificationLocation</name><parameter_list pos:start="122:52" pos:end="122:53">()</parameter_list> <block pos:start="122:55" pos:end="124:9">{<block_content pos:start="123:17" pos:end="123:86">
		<return pos:start="123:17" pos:end="123:86">return <expr pos:start="123:24" pos:end="123:85"><name pos:start="123:24" pos:end="123:27">root</name> <operator pos:start="123:29" pos:end="123:29">+</operator> <name pos:start="123:31" pos:end="123:44"><name pos:start="123:31" pos:end="123:34">File</name><operator pos:start="123:35" pos:end="123:35">.</operator><name pos:start="123:36" pos:end="123:44">separator</name></name> <operator pos:start="123:46" pos:end="123:46">+</operator> <name pos:start="123:48" pos:end="123:85"><name pos:start="123:48" pos:end="123:65">DronologyConstants</name><operator pos:start="123:66" pos:end="123:66">.</operator><name pos:start="123:67" pos:end="123:85">FOLDER_REGISTRATION</name></name></expr>;</return>
	</block_content>}</block></function>
	
	<function pos:start="126:9" pos:end="128:9"><type pos:start="126:9" pos:end="126:21"><specifier pos:start="126:9" pos:end="126:14">public</specifier> <name pos:start="126:16" pos:end="126:21">String</name></type> <name pos:start="126:23" pos:end="126:44">getAreaMappingLocation</name><parameter_list pos:start="126:45" pos:end="126:46">()</parameter_list> <block pos:start="126:48" pos:end="128:9">{<block_content pos:start="127:17" pos:end="127:85">
		<return pos:start="127:17" pos:end="127:85">return <expr pos:start="127:24" pos:end="127:84"><name pos:start="127:24" pos:end="127:27">root</name> <operator pos:start="127:29" pos:end="127:29">+</operator> <name pos:start="127:31" pos:end="127:44"><name pos:start="127:31" pos:end="127:34">File</name><operator pos:start="127:35" pos:end="127:35">.</operator><name pos:start="127:36" pos:end="127:44">separator</name></name> <operator pos:start="127:46" pos:end="127:46">+</operator> <name pos:start="127:48" pos:end="127:84"><name pos:start="127:48" pos:end="127:65">DronologyConstants</name><operator pos:start="127:66" pos:end="127:66">.</operator><name pos:start="127:67" pos:end="127:84">FOLDER_AREAMAPPING</name></name></expr>;</return>
	</block_content>}</block></function>

	<function pos:start="130:9" pos:end="132:9"><type pos:start="130:9" pos:end="130:21"><specifier pos:start="130:9" pos:end="130:14">public</specifier> <name pos:start="130:16" pos:end="130:21">String</name></type> <name pos:start="130:23" pos:end="130:48">getMissionPlanningLocation</name><parameter_list pos:start="130:49" pos:end="130:50">()</parameter_list> <block pos:start="130:52" pos:end="132:9">{<block_content pos:start="131:17" pos:end="131:89">
		<return pos:start="131:17" pos:end="131:89">return <expr pos:start="131:24" pos:end="131:88"><name pos:start="131:24" pos:end="131:27">root</name> <operator pos:start="131:29" pos:end="131:29">+</operator> <name pos:start="131:31" pos:end="131:44"><name pos:start="131:31" pos:end="131:34">File</name><operator pos:start="131:35" pos:end="131:35">.</operator><name pos:start="131:36" pos:end="131:44">separator</name></name> <operator pos:start="131:46" pos:end="131:46">+</operator> <name pos:start="131:48" pos:end="131:88"><name pos:start="131:48" pos:end="131:65">DronologyConstants</name><operator pos:start="131:66" pos:end="131:66">.</operator><name pos:start="131:67" pos:end="131:88">FOLDER_MISSIONPLANNING</name></name></expr>;</return>
	</block_content>}</block></function>

	<function pos:start="134:9" pos:end="136:9"><type pos:start="134:9" pos:end="134:42"><specifier pos:start="134:9" pos:end="134:14">public</specifier> <specifier pos:start="134:16" pos:end="134:21">static</specifier> <name pos:start="134:23" pos:end="134:42">WorkspaceInitializer</name></type> <name pos:start="134:44" pos:end="134:54">getInstance</name><parameter_list pos:start="134:55" pos:end="134:56">()</parameter_list> <block pos:start="134:58" pos:end="136:9">{<block_content pos:start="135:17" pos:end="135:32">
		<return pos:start="135:17" pos:end="135:32">return <expr pos:start="135:24" pos:end="135:31"><name pos:start="135:24" pos:end="135:31">instance</name></expr>;</return>
	</block_content>}</block></function>

	<function pos:start="138:9" pos:end="151:9"><type pos:start="138:9" pos:end="138:22"><specifier pos:start="138:9" pos:end="138:14">public</specifier> <name pos:start="138:16" pos:end="138:22">boolean</name></type> <name pos:start="138:24" pos:end="138:33">importItem</name><parameter_list pos:start="138:34" pos:end="138:87">(<parameter pos:start="138:35" pos:end="138:49"><decl pos:start="138:35" pos:end="138:49"><type pos:start="138:35" pos:end="138:49"><name pos:start="138:35" pos:end="138:40">String</name></type> <name pos:start="138:42" pos:end="138:49">fileName</name></decl></parameter>, <parameter pos:start="138:52" pos:end="138:67"><decl pos:start="138:52" pos:end="138:67"><type pos:start="138:52" pos:end="138:67"><name pos:start="138:52" pos:end="138:57"><name pos:start="138:52" pos:end="138:55">byte</name><index pos:start="138:56" pos:end="138:57">[]</index></name></type> <name pos:start="138:59" pos:end="138:67">byteArray</name></decl></parameter>, <parameter pos:start="138:70" pos:end="138:86"><decl pos:start="138:70" pos:end="138:86"><type pos:start="138:70" pos:end="138:86"><name pos:start="138:70" pos:end="138:76">boolean</name></type> <name pos:start="138:78" pos:end="138:86">overwrite</name></decl></parameter>)</parameter_list> <throws pos:start="138:89" pos:end="138:120">throws <argument pos:start="138:96" pos:end="138:120"><expr pos:start="138:96" pos:end="138:120"><name pos:start="138:96" pos:end="138:120">DronologyServiceException</name></expr></argument></throws> <block pos:start="138:122" pos:end="151:9">{<block_content pos:start="139:17" pos:end="150:17">
		<decl_stmt pos:start="139:17" pos:end="139:61"><decl pos:start="139:17" pos:end="139:60"><type pos:start="139:17" pos:end="139:22"><name pos:start="139:17" pos:end="139:22">String</name></type> <name pos:start="139:24" pos:end="139:26">ext</name> <init pos:start="139:28" pos:end="139:60">= <expr pos:start="139:30" pos:end="139:60"><call pos:start="139:30" pos:end="139:60"><name pos:start="139:30" pos:end="139:50"><name pos:start="139:30" pos:end="139:37">FileUtil</name><operator pos:start="139:38" pos:end="139:38">.</operator><name pos:start="139:39" pos:end="139:50">getExtension</name></name><argument_list pos:start="139:51" pos:end="139:60">(<argument pos:start="139:52" pos:end="139:59"><expr pos:start="139:52" pos:end="139:59"><name pos:start="139:52" pos:end="139:59">fileName</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<if_stmt pos:start="140:17" pos:end="143:17"><if pos:start="140:17" pos:end="143:17">if <condition pos:start="140:20" pos:end="140:32">(<expr pos:start="140:21" pos:end="140:31"><name pos:start="140:21" pos:end="140:23">ext</name> <operator pos:start="140:25" pos:end="140:26">==</operator> <literal type="null" pos:start="140:28" pos:end="140:31">null</literal></expr>)</condition> <block pos:start="140:34" pos:end="143:17">{<block_content pos:start="141:25" pos:end="142:37">
			<expr_stmt pos:start="141:25" pos:end="141:87"><expr pos:start="141:25" pos:end="141:86"><call pos:start="141:25" pos:end="141:86"><name pos:start="141:25" pos:end="141:35"><name pos:start="141:25" pos:end="141:30">LOGGER</name><operator pos:start="141:31" pos:end="141:31">.</operator><name pos:start="141:32" pos:end="141:35">warn</name></name><argument_list pos:start="141:36" pos:end="141:86">(<argument pos:start="141:37" pos:end="141:85"><expr pos:start="141:37" pos:end="141:85"><literal type="string" pos:start="141:37" pos:end="141:68">"File with no extension found '"</literal> <operator pos:start="141:70" pos:end="141:70">+</operator> <name pos:start="141:72" pos:end="141:79">fileName</name> <operator pos:start="141:81" pos:end="141:81">+</operator> <literal type="string" pos:start="141:83" pos:end="141:85">"'"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<return pos:start="142:25" pos:end="142:37">return <expr pos:start="142:32" pos:end="142:36"><literal type="boolean" pos:start="142:32" pos:end="142:36">false</literal></expr>;</return>
		</block_content>}</block></if></if_stmt>
		<switch pos:start="144:17" pos:end="150:17">switch <condition pos:start="144:24" pos:end="144:28">(<expr pos:start="144:25" pos:end="144:27"><name pos:start="144:25" pos:end="144:27">ext</name></expr>)</condition> <block pos:start="144:30" pos:end="150:17">{<block_content pos:start="145:17" pos:end="149:37">
		<case pos:start="145:17" pos:end="145:62">case <expr pos:start="145:22" pos:end="145:61"><name pos:start="145:22" pos:end="145:61"><name pos:start="145:22" pos:end="145:39">DronologyConstants</name><operator pos:start="145:40" pos:end="145:40">.</operator><name pos:start="145:41" pos:end="145:61">EXTENSION_FLIGHTROUTE</name></name></expr>:</case>
			<return pos:start="146:25" pos:end="146:80">return <expr pos:start="146:32" pos:end="146:79"><call pos:start="146:32" pos:end="146:79"><name pos:start="146:32" pos:end="146:47">importFlightPath</name><argument_list pos:start="146:48" pos:end="146:79">(<argument pos:start="146:49" pos:end="146:56"><expr pos:start="146:49" pos:end="146:56"><name pos:start="146:49" pos:end="146:56">fileName</name></expr></argument>, <argument pos:start="146:59" pos:end="146:67"><expr pos:start="146:59" pos:end="146:67"><name pos:start="146:59" pos:end="146:67">byteArray</name></expr></argument>, <argument pos:start="146:70" pos:end="146:78"><expr pos:start="146:70" pos:end="146:78"><name pos:start="146:70" pos:end="146:78">overwrite</name></expr></argument>)</argument_list></call></expr>;</return>
		<default pos:start="147:17" pos:end="147:24">default:</default>
			<expr_stmt pos:start="148:25" pos:end="148:117"><expr pos:start="148:25" pos:end="148:116"><call pos:start="148:25" pos:end="148:116"><name pos:start="148:25" pos:end="148:35"><name pos:start="148:25" pos:end="148:30">LOGGER</name><operator pos:start="148:31" pos:end="148:31">.</operator><name pos:start="148:32" pos:end="148:35">warn</name></name><argument_list pos:start="148:36" pos:end="148:116">(<argument pos:start="148:37" pos:end="148:115"><expr pos:start="148:37" pos:end="148:115"><literal type="string" pos:start="148:37" pos:end="148:59">"File with extension '"</literal> <operator pos:start="148:61" pos:end="148:61">+</operator> <call pos:start="148:63" pos:end="148:93"><name pos:start="148:63" pos:end="148:83"><name pos:start="148:63" pos:end="148:70">FileUtil</name><operator pos:start="148:71" pos:end="148:71">.</operator><name pos:start="148:72" pos:end="148:83">getExtension</name></name><argument_list pos:start="148:84" pos:end="148:93">(<argument pos:start="148:85" pos:end="148:92"><expr pos:start="148:85" pos:end="148:92"><name pos:start="148:85" pos:end="148:92">fileName</name></expr></argument>)</argument_list></call> <operator pos:start="148:95" pos:end="148:95">+</operator> <literal type="string" pos:start="148:97" pos:end="148:115">"' not processable"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<return pos:start="149:25" pos:end="149:37">return <expr pos:start="149:32" pos:end="149:36"><literal type="boolean" pos:start="149:32" pos:end="149:36">false</literal></expr>;</return>
		</block_content>}</block></switch>
	</block_content>}</block></function>

	<function pos:start="153:9" pos:end="158:9"><type pos:start="153:9" pos:end="153:23"><specifier pos:start="153:9" pos:end="153:15">private</specifier> <name pos:start="153:17" pos:end="153:23">boolean</name></type> <name pos:start="153:25" pos:end="153:40">importFlightPath</name><parameter_list pos:start="153:41" pos:end="153:92">(<parameter pos:start="153:42" pos:end="153:56"><decl pos:start="153:42" pos:end="153:56"><type pos:start="153:42" pos:end="153:56"><name pos:start="153:42" pos:end="153:47">String</name></type> <name pos:start="153:49" pos:end="153:56">fileName</name></decl></parameter>, <parameter pos:start="153:59" pos:end="153:72"><decl pos:start="153:59" pos:end="153:72"><type pos:start="153:59" pos:end="153:72"><name pos:start="153:59" pos:end="153:64"><name pos:start="153:59" pos:end="153:62">byte</name><index pos:start="153:63" pos:end="153:64">[]</index></name></type> <name pos:start="153:66" pos:end="153:72">content</name></decl></parameter>, <parameter pos:start="153:75" pos:end="153:91"><decl pos:start="153:75" pos:end="153:91"><type pos:start="153:75" pos:end="153:91"><name pos:start="153:75" pos:end="153:81">boolean</name></type> <name pos:start="153:83" pos:end="153:91">overwrite</name></decl></parameter>)</parameter_list> <block pos:start="153:94" pos:end="158:9">{<block_content pos:start="154:17" pos:end="156:61">
		<decl_stmt pos:start="154:17" pos:end="154:59"><decl pos:start="154:17" pos:end="154:58"><type pos:start="154:17" pos:end="154:22"><name pos:start="154:17" pos:end="154:22">String</name></type> <name pos:start="154:24" pos:end="154:31">location</name> <init pos:start="154:33" pos:end="154:58">= <expr pos:start="154:35" pos:end="154:58"><call pos:start="154:35" pos:end="154:58"><name pos:start="154:35" pos:end="154:56">getFlightRouteLocation</name><argument_list pos:start="154:57" pos:end="154:58">()</argument_list></call></expr></init></decl>;</decl_stmt>
		<decl_stmt pos:start="155:17" pos:end="155:68"><decl pos:start="155:17" pos:end="155:67"><type pos:start="155:17" pos:end="155:22"><name pos:start="155:17" pos:end="155:22">String</name></type> <name pos:start="155:24" pos:end="155:28">fName</name> <init pos:start="155:30" pos:end="155:67">= <expr pos:start="155:32" pos:end="155:67"><name pos:start="155:32" pos:end="155:39">location</name> <operator pos:start="155:41" pos:end="155:41">+</operator> <name pos:start="155:43" pos:end="155:56"><name pos:start="155:43" pos:end="155:46">File</name><operator pos:start="155:47" pos:end="155:47">.</operator><name pos:start="155:48" pos:end="155:56">separator</name></name> <operator pos:start="155:58" pos:end="155:58">+</operator> <name pos:start="155:60" pos:end="155:67">fileName</name></expr></init></decl>;</decl_stmt>
		<return pos:start="156:17" pos:end="156:61">return <expr pos:start="156:24" pos:end="156:60"><call pos:start="156:24" pos:end="156:60"><name pos:start="156:24" pos:end="156:33">importFile</name><argument_list pos:start="156:34" pos:end="156:60">(<argument pos:start="156:35" pos:end="156:39"><expr pos:start="156:35" pos:end="156:39"><name pos:start="156:35" pos:end="156:39">fName</name></expr></argument>, <argument pos:start="156:42" pos:end="156:48"><expr pos:start="156:42" pos:end="156:48"><name pos:start="156:42" pos:end="156:48">content</name></expr></argument>, <argument pos:start="156:51" pos:end="156:59"><expr pos:start="156:51" pos:end="156:59"><name pos:start="156:51" pos:end="156:59">overwrite</name></expr></argument>)</argument_list></call></expr>;</return>

	</block_content>}</block></function>

	<function pos:start="160:9" pos:end="166:9"><type pos:start="160:9" pos:end="160:23"><specifier pos:start="160:9" pos:end="160:15">private</specifier> <name pos:start="160:17" pos:end="160:23">boolean</name></type> <name pos:start="160:25" pos:end="160:34">importFile</name><parameter_list pos:start="160:35" pos:end="160:90">(<parameter pos:start="160:36" pos:end="160:54"><decl pos:start="160:36" pos:end="160:54"><type pos:start="160:36" pos:end="160:54"><name pos:start="160:36" pos:end="160:41">String</name></type> <name pos:start="160:43" pos:end="160:54">absolutePath</name></decl></parameter>, <parameter pos:start="160:57" pos:end="160:70"><decl pos:start="160:57" pos:end="160:70"><type pos:start="160:57" pos:end="160:70"><name pos:start="160:57" pos:end="160:62"><name pos:start="160:57" pos:end="160:60">byte</name><index pos:start="160:61" pos:end="160:62">[]</index></name></type> <name pos:start="160:64" pos:end="160:70">content</name></decl></parameter>, <parameter pos:start="160:73" pos:end="160:89"><decl pos:start="160:73" pos:end="160:89"><type pos:start="160:73" pos:end="160:89"><name pos:start="160:73" pos:end="160:79">boolean</name></type> <name pos:start="160:81" pos:end="160:89">overwrite</name></decl></parameter>)</parameter_list> <block pos:start="160:92" pos:end="166:9">{<block_content pos:start="161:17" pos:end="165:64">
		<decl_stmt pos:start="161:17" pos:end="161:48"><decl pos:start="161:17" pos:end="161:47"><type pos:start="161:17" pos:end="161:20"><name pos:start="161:17" pos:end="161:20">File</name></type> <name pos:start="161:22" pos:end="161:22">f</name> <init pos:start="161:24" pos:end="161:47">= <expr pos:start="161:26" pos:end="161:47"><operator pos:start="161:26" pos:end="161:28">new</operator> <call pos:start="161:30" pos:end="161:47"><name pos:start="161:30" pos:end="161:33">File</name><argument_list pos:start="161:34" pos:end="161:47">(<argument pos:start="161:35" pos:end="161:46"><expr pos:start="161:35" pos:end="161:46"><name pos:start="161:35" pos:end="161:46">absolutePath</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<if_stmt pos:start="162:17" pos:end="164:17"><if pos:start="162:17" pos:end="164:17">if <condition pos:start="162:20" pos:end="162:45">(<expr pos:start="162:21" pos:end="162:44"><call pos:start="162:21" pos:end="162:30"><name pos:start="162:21" pos:end="162:28"><name pos:start="162:21" pos:end="162:21">f</name><operator pos:start="162:22" pos:end="162:22">.</operator><name pos:start="162:23" pos:end="162:28">exists</name></name><argument_list pos:start="162:29" pos:end="162:30">()</argument_list></call> <operator pos:start="162:32" pos:end="162:33">&amp;&amp;</operator> <operator pos:start="162:35" pos:end="162:35">!</operator><name pos:start="162:36" pos:end="162:44">overwrite</name></expr>)</condition> <block pos:start="162:47" pos:end="164:17">{<block_content pos:start="163:25" pos:end="163:37">
			<return pos:start="163:25" pos:end="163:37">return <expr pos:start="163:32" pos:end="163:36"><literal type="boolean" pos:start="163:32" pos:end="163:36">false</literal></expr>;</return>
		</block_content>}</block></if></if_stmt>
		<return pos:start="165:17" pos:end="165:64">return <expr pos:start="165:24" pos:end="165:63"><call pos:start="165:24" pos:end="165:63"><name pos:start="165:24" pos:end="165:51"><name pos:start="165:24" pos:end="165:31">FileUtil</name><operator pos:start="165:32" pos:end="165:32">.</operator><name pos:start="165:33" pos:end="165:51">saveByteArrayToFile</name></name><argument_list pos:start="165:52" pos:end="165:63">(<argument pos:start="165:53" pos:end="165:53"><expr pos:start="165:53" pos:end="165:53"><name pos:start="165:53" pos:end="165:53">f</name></expr></argument>, <argument pos:start="165:56" pos:end="165:62"><expr pos:start="165:56" pos:end="165:62"><name pos:start="165:56" pos:end="165:62">content</name></expr></argument>)</argument_list></call></expr>;</return>
	</block_content>}</block></function>



}</block></class>
</unit>
