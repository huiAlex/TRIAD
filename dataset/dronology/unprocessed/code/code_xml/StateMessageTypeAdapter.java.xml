<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="Java" filename="src/StateMessageTypeAdapter.java" pos:tabs="8"><package pos:start="1:1" pos:end="1:53">package <name pos:start="1:9" pos:end="1:52"><name pos:start="1:9" pos:end="1:11">edu</name><operator pos:start="1:12" pos:end="1:12">.</operator><name pos:start="1:13" pos:end="1:14">nd</name><operator pos:start="1:15" pos:end="1:15">.</operator><name pos:start="1:16" pos:end="1:24">dronology</name><operator pos:start="1:25" pos:end="1:25">.</operator><name pos:start="1:26" pos:end="1:33">gstation</name><operator pos:start="1:34" pos:end="1:34">.</operator><name pos:start="1:35" pos:end="1:43">connector</name><operator pos:start="1:44" pos:end="1:44">.</operator><name pos:start="1:45" pos:end="1:52">messages</name></name>;</package>

<import pos:start="3:1" pos:end="3:30">import <name pos:start="3:8" pos:end="3:29"><name pos:start="3:8" pos:end="3:11">java</name><operator pos:start="3:12" pos:end="3:12">.</operator><name pos:start="3:13" pos:end="3:16">lang</name><operator pos:start="3:17" pos:end="3:17">.</operator><name pos:start="3:18" pos:end="3:24">reflect</name><operator pos:start="3:25" pos:end="3:25">.</operator><name pos:start="3:26" pos:end="3:29">Type</name></name>;</import>
<import pos:start="4:1" pos:end="4:25">import <name pos:start="4:8" pos:end="4:24"><name pos:start="4:8" pos:end="4:11">java</name><operator pos:start="4:12" pos:end="4:12">.</operator><name pos:start="4:13" pos:end="4:16">util</name><operator pos:start="4:17" pos:end="4:17">.</operator><name pos:start="4:18" pos:end="4:24">HashMap</name></name>;</import>
<import pos:start="5:1" pos:end="5:21">import <name pos:start="5:8" pos:end="5:20"><name pos:start="5:8" pos:end="5:11">java</name><operator pos:start="5:12" pos:end="5:12">.</operator><name pos:start="5:13" pos:end="5:16">util</name><operator pos:start="5:17" pos:end="5:17">.</operator><name pos:start="5:18" pos:end="5:20">Map</name></name>;</import>

<import pos:start="7:1" pos:end="7:50">import <name pos:start="7:8" pos:end="7:49"><name pos:start="7:8" pos:end="7:10">com</name><operator pos:start="7:11" pos:end="7:11">.</operator><name pos:start="7:12" pos:end="7:17">google</name><operator pos:start="7:18" pos:end="7:18">.</operator><name pos:start="7:19" pos:end="7:22">gson</name><operator pos:start="7:23" pos:end="7:23">.</operator><name pos:start="7:24" pos:end="7:49">JsonDeserializationContext</name></name>;</import>
<import pos:start="8:1" pos:end="8:40">import <name pos:start="8:8" pos:end="8:39"><name pos:start="8:8" pos:end="8:10">com</name><operator pos:start="8:11" pos:end="8:11">.</operator><name pos:start="8:12" pos:end="8:17">google</name><operator pos:start="8:18" pos:end="8:18">.</operator><name pos:start="8:19" pos:end="8:22">gson</name><operator pos:start="8:23" pos:end="8:23">.</operator><name pos:start="8:24" pos:end="8:39">JsonDeserializer</name></name>;</import>
<import pos:start="9:1" pos:end="9:35">import <name pos:start="9:8" pos:end="9:34"><name pos:start="9:8" pos:end="9:10">com</name><operator pos:start="9:11" pos:end="9:11">.</operator><name pos:start="9:12" pos:end="9:17">google</name><operator pos:start="9:18" pos:end="9:18">.</operator><name pos:start="9:19" pos:end="9:22">gson</name><operator pos:start="9:23" pos:end="9:23">.</operator><name pos:start="9:24" pos:end="9:34">JsonElement</name></name>;</import>
<import pos:start="10:1" pos:end="10:34">import <name pos:start="10:8" pos:end="10:33"><name pos:start="10:8" pos:end="10:10">com</name><operator pos:start="10:11" pos:end="10:11">.</operator><name pos:start="10:12" pos:end="10:17">google</name><operator pos:start="10:18" pos:end="10:18">.</operator><name pos:start="10:19" pos:end="10:22">gson</name><operator pos:start="10:23" pos:end="10:23">.</operator><name pos:start="10:24" pos:end="10:33">JsonObject</name></name>;</import>
<import pos:start="11:1" pos:end="11:42">import <name pos:start="11:8" pos:end="11:41"><name pos:start="11:8" pos:end="11:10">com</name><operator pos:start="11:11" pos:end="11:11">.</operator><name pos:start="11:12" pos:end="11:17">google</name><operator pos:start="11:18" pos:end="11:18">.</operator><name pos:start="11:19" pos:end="11:22">gson</name><operator pos:start="11:23" pos:end="11:23">.</operator><name pos:start="11:24" pos:end="11:41">JsonParseException</name></name>;</import>
<import pos:start="12:1" pos:end="12:37">import <name pos:start="12:8" pos:end="12:36"><name pos:start="12:8" pos:end="12:10">com</name><operator pos:start="12:11" pos:end="12:11">.</operator><name pos:start="12:12" pos:end="12:17">google</name><operator pos:start="12:18" pos:end="12:18">.</operator><name pos:start="12:19" pos:end="12:22">gson</name><operator pos:start="12:23" pos:end="12:23">.</operator><name pos:start="12:24" pos:end="12:36">JsonPrimitive</name></name>;</import>

<import pos:start="14:1" pos:end="14:54">import <name pos:start="14:8" pos:end="14:53"><name pos:start="14:8" pos:end="14:10">edu</name><operator pos:start="14:11" pos:end="14:11">.</operator><name pos:start="14:12" pos:end="14:13">nd</name><operator pos:start="14:14" pos:end="14:14">.</operator><name pos:start="14:15" pos:end="14:23">dronology</name><operator pos:start="14:24" pos:end="14:24">.</operator><name pos:start="14:25" pos:end="14:28">core</name><operator pos:start="14:29" pos:end="14:29">.</operator><name pos:start="14:30" pos:end="14:39">coordinate</name><operator pos:start="14:40" pos:end="14:40">.</operator><name pos:start="14:41" pos:end="14:53">LlaCoordinate</name></name>;</import>
<import pos:start="15:1" pos:end="15:82">import <name pos:start="15:8" pos:end="15:81"><name pos:start="15:8" pos:end="15:10">edu</name><operator pos:start="15:11" pos:end="15:11">.</operator><name pos:start="15:12" pos:end="15:13">nd</name><operator pos:start="15:14" pos:end="15:14">.</operator><name pos:start="15:15" pos:end="15:23">dronology</name><operator pos:start="15:24" pos:end="15:24">.</operator><name pos:start="15:25" pos:end="15:32">gstation</name><operator pos:start="15:33" pos:end="15:33">.</operator><name pos:start="15:34" pos:end="15:42">connector</name><operator pos:start="15:43" pos:end="15:43">.</operator><name pos:start="15:44" pos:end="15:51">messages</name><operator pos:start="15:52" pos:end="15:52">.</operator><name pos:start="15:53" pos:end="15:67">UAVStateMessage</name><operator pos:start="15:68" pos:end="15:68">.</operator><name pos:start="15:69" pos:end="15:81">BatteryStatus</name></name>;</import>
<import pos:start="16:1" pos:end="16:78">import <name pos:start="16:8" pos:end="16:77"><name pos:start="16:8" pos:end="16:10">edu</name><operator pos:start="16:11" pos:end="16:11">.</operator><name pos:start="16:12" pos:end="16:13">nd</name><operator pos:start="16:14" pos:end="16:14">.</operator><name pos:start="16:15" pos:end="16:23">dronology</name><operator pos:start="16:24" pos:end="16:24">.</operator><name pos:start="16:25" pos:end="16:32">gstation</name><operator pos:start="16:33" pos:end="16:33">.</operator><name pos:start="16:34" pos:end="16:42">connector</name><operator pos:start="16:43" pos:end="16:43">.</operator><name pos:start="16:44" pos:end="16:51">messages</name><operator pos:start="16:52" pos:end="16:52">.</operator><name pos:start="16:53" pos:end="16:67">UAVStateMessage</name><operator pos:start="16:68" pos:end="16:68">.</operator><name pos:start="16:69" pos:end="16:77">DroneMode</name></name>;</import>
<import pos:start="17:1" pos:end="17:80">import <name pos:start="17:8" pos:end="17:79"><name pos:start="17:8" pos:end="17:10">edu</name><operator pos:start="17:11" pos:end="17:11">.</operator><name pos:start="17:12" pos:end="17:13">nd</name><operator pos:start="17:14" pos:end="17:14">.</operator><name pos:start="17:15" pos:end="17:23">dronology</name><operator pos:start="17:24" pos:end="17:24">.</operator><name pos:start="17:25" pos:end="17:32">gstation</name><operator pos:start="17:33" pos:end="17:33">.</operator><name pos:start="17:34" pos:end="17:42">connector</name><operator pos:start="17:43" pos:end="17:43">.</operator><name pos:start="17:44" pos:end="17:51">messages</name><operator pos:start="17:52" pos:end="17:52">.</operator><name pos:start="17:53" pos:end="17:67">UAVStateMessage</name><operator pos:start="17:68" pos:end="17:68">.</operator><name pos:start="17:69" pos:end="17:79">DroneStatus</name></name>;</import>
<import pos:start="18:1" pos:end="18:67">import <name pos:start="18:8" pos:end="18:66"><name pos:start="18:8" pos:end="18:10">org</name><operator pos:start="18:11" pos:end="18:11">.</operator><name pos:start="18:12" pos:end="18:17">apache</name><operator pos:start="18:18" pos:end="18:18">.</operator><name pos:start="18:19" pos:end="18:25">commons</name><operator pos:start="18:26" pos:end="18:26">.</operator><name pos:start="18:27" pos:end="18:31">math3</name><operator pos:start="18:32" pos:end="18:32">.</operator><name pos:start="18:33" pos:end="18:40">geometry</name><operator pos:start="18:41" pos:end="18:41">.</operator><name pos:start="18:42" pos:end="18:50">euclidean</name><operator pos:start="18:51" pos:end="18:51">.</operator><name pos:start="18:52" pos:end="18:57">threed</name><operator pos:start="18:58" pos:end="18:58">.</operator><name pos:start="18:59" pos:end="18:66">Vector3D</name></name>;</import>
<import pos:start="19:1" pos:end="19:30">import <name pos:start="19:8" pos:end="19:29"><name pos:start="19:8" pos:end="19:10">net</name><operator pos:start="19:11" pos:end="19:11">.</operator><name pos:start="19:12" pos:end="19:13">mv</name><operator pos:start="19:14" pos:end="19:14">.</operator><name pos:start="19:15" pos:end="19:21">logging</name><operator pos:start="19:22" pos:end="19:22">.</operator><name pos:start="19:23" pos:end="19:29">ILogger</name></name>;</import>
<import pos:start="20:1" pos:end="20:37">import <name pos:start="20:8" pos:end="20:36"><name pos:start="20:8" pos:end="20:10">net</name><operator pos:start="20:11" pos:end="20:11">.</operator><name pos:start="20:12" pos:end="20:13">mv</name><operator pos:start="20:14" pos:end="20:14">.</operator><name pos:start="20:15" pos:end="20:21">logging</name><operator pos:start="20:22" pos:end="20:22">.</operator><name pos:start="20:23" pos:end="20:36">LoggerProvider</name></name>;</import>

<class pos:start="22:1" pos:end="129:1"><specifier pos:start="22:1" pos:end="22:6">public</specifier> class <name pos:start="22:14" pos:end="22:36">StateMessageTypeAdapter</name> <super_list pos:start="22:38" pos:end="22:69"><implements pos:start="22:38" pos:end="22:69">implements <super pos:start="22:49" pos:end="22:69"><name pos:start="22:49" pos:end="22:69"><name pos:start="22:49" pos:end="22:64">JsonDeserializer</name><argument_list type="generic" pos:start="22:65" pos:end="22:69">&lt;<argument pos:start="22:66" pos:end="22:68"><name pos:start="22:66" pos:end="22:68">Map</name></argument>&gt;</argument_list></name></super></implements></super_list> <block pos:start="22:71" pos:end="129:1">{

	<decl_stmt pos:start="24:9" pos:end="24:102"><decl pos:start="24:9" pos:end="24:101"><type pos:start="24:9" pos:end="24:36"><specifier pos:start="24:9" pos:end="24:15">private</specifier> <specifier pos:start="24:17" pos:end="24:22">static</specifier> <specifier pos:start="24:24" pos:end="24:28">final</specifier> <name pos:start="24:30" pos:end="24:36">ILogger</name></type> <name pos:start="24:38" pos:end="24:43">LOGGER</name> <init pos:start="24:45" pos:end="24:101">= <expr pos:start="24:47" pos:end="24:101"><call pos:start="24:47" pos:end="24:101"><name pos:start="24:47" pos:end="24:70"><name pos:start="24:47" pos:end="24:60">LoggerProvider</name><operator pos:start="24:61" pos:end="24:61">.</operator><name pos:start="24:62" pos:end="24:70">getLogger</name></name><argument_list pos:start="24:71" pos:end="24:101">(<argument pos:start="24:72" pos:end="24:100"><expr pos:start="24:72" pos:end="24:100"><name pos:start="24:72" pos:end="24:100"><name pos:start="24:72" pos:end="24:94">StateMessageTypeAdapter</name><operator pos:start="24:95" pos:end="24:95">.</operator><name pos:start="24:96" pos:end="24:100">class</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

	<function pos:start="26:9" pos:end="61:9"><annotation pos:start="26:9" pos:end="26:17">@<name pos:start="26:10" pos:end="26:17">Override</name></annotation>
	<type pos:start="27:9" pos:end="27:18"><specifier pos:start="27:9" pos:end="27:14">public</specifier> <name pos:start="27:16" pos:end="27:18">Map</name></type> <name pos:start="27:20" pos:end="27:30">deserialize</name><parameter_list pos:start="27:31" pos:end="27:98">(<parameter pos:start="27:32" pos:end="27:50"><decl pos:start="27:32" pos:end="27:50"><type pos:start="27:32" pos:end="27:50"><name pos:start="27:32" pos:end="27:42">JsonElement</name></type> <name pos:start="27:44" pos:end="27:50">element</name></decl></parameter>, <parameter pos:start="27:53" pos:end="27:64"><decl pos:start="27:53" pos:end="27:64"><type pos:start="27:53" pos:end="27:64"><name pos:start="27:53" pos:end="27:56">Type</name></type> <name pos:start="27:58" pos:end="27:64">mapType</name></decl></parameter>, <parameter pos:start="27:67" pos:end="27:97"><decl pos:start="27:67" pos:end="27:97"><type pos:start="27:67" pos:end="27:97"><name pos:start="27:67" pos:end="27:92">JsonDeserializationContext</name></type> <name pos:start="27:94" pos:end="27:97">arg2</name></decl></parameter>)</parameter_list>
			<throws pos:start="28:25" pos:end="28:49">throws <argument pos:start="28:32" pos:end="28:49"><expr pos:start="28:32" pos:end="28:49"><name pos:start="28:32" pos:end="28:49">JsonParseException</name></expr></argument></throws> <block pos:start="28:51" pos:end="61:9">{<block_content pos:start="29:17" pos:end="60:31">
		<decl_stmt pos:start="29:17" pos:end="29:62"><decl pos:start="29:17" pos:end="29:61"><type pos:start="29:17" pos:end="29:35"><name pos:start="29:17" pos:end="29:35"><name pos:start="29:17" pos:end="29:19">Map</name><argument_list type="generic" pos:start="29:20" pos:end="29:35">&lt;<argument pos:start="29:21" pos:end="29:26"><name pos:start="29:21" pos:end="29:26">String</name></argument>, <argument pos:start="29:29" pos:end="29:34"><name pos:start="29:29" pos:end="29:34">Object</name></argument>&gt;</argument_list></name></type> <name pos:start="29:37" pos:end="29:43">dataMap</name> <init pos:start="29:45" pos:end="29:61">= <expr pos:start="29:47" pos:end="29:61"><operator pos:start="29:47" pos:end="29:49">new</operator> <call pos:start="29:51" pos:end="29:61"><name pos:start="29:51" pos:end="29:59"><name pos:start="29:51" pos:end="29:57">HashMap</name><argument_list type="generic" pos:start="29:58" pos:end="29:59">&lt;&gt;</argument_list></name><argument_list pos:start="29:60" pos:end="29:61">()</argument_list></call></expr></init></decl>;</decl_stmt>
		<decl_stmt pos:start="30:17" pos:end="30:65"><decl pos:start="30:17" pos:end="30:64"><type pos:start="30:17" pos:end="30:26"><name pos:start="30:17" pos:end="30:26">JsonObject</name></type> <name pos:start="30:28" pos:end="30:36">mapObject</name> <init pos:start="30:38" pos:end="30:64">= <expr pos:start="30:40" pos:end="30:64"><call pos:start="30:40" pos:end="30:64"><name pos:start="30:40" pos:end="30:62"><name pos:start="30:40" pos:end="30:46">element</name><operator pos:start="30:47" pos:end="30:47">.</operator><name pos:start="30:48" pos:end="30:62">getAsJsonObject</name></name><argument_list pos:start="30:63" pos:end="30:64">()</argument_list></call></expr></init></decl>;</decl_stmt>

		<decl_stmt pos:start="32:17" pos:end="32:103"><decl pos:start="32:17" pos:end="32:102"><type pos:start="32:17" pos:end="32:29"><name pos:start="32:17" pos:end="32:29">LlaCoordinate</name></type> <name pos:start="32:31" pos:end="32:38">location</name> <init pos:start="32:40" pos:end="32:102">= <expr pos:start="32:42" pos:end="32:102"><call pos:start="32:42" pos:end="32:102"><name pos:start="32:42" pos:end="32:65">deserializeLLACoordinate</name><argument_list pos:start="32:66" pos:end="32:102">(<argument pos:start="32:67" pos:end="32:75"><expr pos:start="32:67" pos:end="32:75"><name pos:start="32:67" pos:end="32:75">mapObject</name></expr></argument>, <argument pos:start="32:78" pos:end="32:101"><expr pos:start="32:78" pos:end="32:101"><name pos:start="32:78" pos:end="32:101"><name pos:start="32:78" pos:end="32:92">UAVStateMessage</name><operator pos:start="32:93" pos:end="32:93">.</operator><name pos:start="32:94" pos:end="32:101">LOCATION</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt pos:start="33:17" pos:end="33:64"><expr pos:start="33:17" pos:end="33:63"><call pos:start="33:17" pos:end="33:63"><name pos:start="33:17" pos:end="33:27"><name pos:start="33:17" pos:end="33:23">dataMap</name><operator pos:start="33:24" pos:end="33:24">.</operator><name pos:start="33:25" pos:end="33:27">put</name></name><argument_list pos:start="33:28" pos:end="33:63">(<argument pos:start="33:29" pos:end="33:52"><expr pos:start="33:29" pos:end="33:52"><name pos:start="33:29" pos:end="33:52"><name pos:start="33:29" pos:end="33:43">UAVStateMessage</name><operator pos:start="33:44" pos:end="33:44">.</operator><name pos:start="33:45" pos:end="33:52">LOCATION</name></name></expr></argument>, <argument pos:start="33:55" pos:end="33:62"><expr pos:start="33:55" pos:end="33:62"><name pos:start="33:55" pos:end="33:62">location</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		<decl_stmt pos:start="35:17" pos:end="35:93"><decl pos:start="35:17" pos:end="35:92"><type pos:start="35:17" pos:end="35:24"><name pos:start="35:17" pos:end="35:24">Vector3D</name></type> <name pos:start="35:26" pos:end="35:33">attitude</name> <init pos:start="35:35" pos:end="35:92">= <expr pos:start="35:37" pos:end="35:92"><call pos:start="35:37" pos:end="35:92"><name pos:start="35:37" pos:end="35:55">deserializeVector3D</name><argument_list pos:start="35:56" pos:end="35:92">(<argument pos:start="35:57" pos:end="35:65"><expr pos:start="35:57" pos:end="35:65"><name pos:start="35:57" pos:end="35:65">mapObject</name></expr></argument>, <argument pos:start="35:68" pos:end="35:91"><expr pos:start="35:68" pos:end="35:91"><name pos:start="35:68" pos:end="35:91"><name pos:start="35:68" pos:end="35:82">UAVStateMessage</name><operator pos:start="35:83" pos:end="35:83">.</operator><name pos:start="35:84" pos:end="35:91">ATTITUDE</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt pos:start="36:17" pos:end="36:64"><expr pos:start="36:17" pos:end="36:63"><call pos:start="36:17" pos:end="36:63"><name pos:start="36:17" pos:end="36:27"><name pos:start="36:17" pos:end="36:23">dataMap</name><operator pos:start="36:24" pos:end="36:24">.</operator><name pos:start="36:25" pos:end="36:27">put</name></name><argument_list pos:start="36:28" pos:end="36:63">(<argument pos:start="36:29" pos:end="36:52"><expr pos:start="36:29" pos:end="36:52"><name pos:start="36:29" pos:end="36:52"><name pos:start="36:29" pos:end="36:43">UAVStateMessage</name><operator pos:start="36:44" pos:end="36:44">.</operator><name pos:start="36:45" pos:end="36:52">ATTITUDE</name></name></expr></argument>, <argument pos:start="36:55" pos:end="36:62"><expr pos:start="36:55" pos:end="36:62"><name pos:start="36:55" pos:end="36:62">attitude</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		<decl_stmt pos:start="38:17" pos:end="38:93"><decl pos:start="38:17" pos:end="38:92"><type pos:start="38:17" pos:end="38:24"><name pos:start="38:17" pos:end="38:24">Vector3D</name></type> <name pos:start="38:26" pos:end="38:33">velocity</name> <init pos:start="38:35" pos:end="38:92">= <expr pos:start="38:37" pos:end="38:92"><call pos:start="38:37" pos:end="38:92"><name pos:start="38:37" pos:end="38:55">deserializeVector3D</name><argument_list pos:start="38:56" pos:end="38:92">(<argument pos:start="38:57" pos:end="38:65"><expr pos:start="38:57" pos:end="38:65"><name pos:start="38:57" pos:end="38:65">mapObject</name></expr></argument>, <argument pos:start="38:68" pos:end="38:91"><expr pos:start="38:68" pos:end="38:91"><name pos:start="38:68" pos:end="38:91"><name pos:start="38:68" pos:end="38:82">UAVStateMessage</name><operator pos:start="38:83" pos:end="38:83">.</operator><name pos:start="38:84" pos:end="38:91">VELOCITY</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt pos:start="39:17" pos:end="39:64"><expr pos:start="39:17" pos:end="39:63"><call pos:start="39:17" pos:end="39:63"><name pos:start="39:17" pos:end="39:27"><name pos:start="39:17" pos:end="39:23">dataMap</name><operator pos:start="39:24" pos:end="39:24">.</operator><name pos:start="39:25" pos:end="39:27">put</name></name><argument_list pos:start="39:28" pos:end="39:63">(<argument pos:start="39:29" pos:end="39:52"><expr pos:start="39:29" pos:end="39:52"><name pos:start="39:29" pos:end="39:52"><name pos:start="39:29" pos:end="39:43">UAVStateMessage</name><operator pos:start="39:44" pos:end="39:44">.</operator><name pos:start="39:45" pos:end="39:52">VELOCITY</name></name></expr></argument>, <argument pos:start="39:55" pos:end="39:62"><expr pos:start="39:55" pos:end="39:62"><name pos:start="39:55" pos:end="39:62">velocity</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		<decl_stmt pos:start="41:17" pos:end="41:90"><decl pos:start="41:17" pos:end="41:89"><type pos:start="41:17" pos:end="41:22"><name pos:start="41:17" pos:end="41:22">String</name></type> <name pos:start="41:24" pos:end="41:35">statusString</name> <init pos:start="41:37" pos:end="41:89">= <expr pos:start="41:39" pos:end="41:89"><call pos:start="41:39" pos:end="41:75"><name pos:start="41:39" pos:end="41:51"><name pos:start="41:39" pos:end="41:47">mapObject</name><operator pos:start="41:48" pos:end="41:48">.</operator><name pos:start="41:49" pos:end="41:51">get</name></name><argument_list pos:start="41:52" pos:end="41:75">(<argument pos:start="41:53" pos:end="41:74"><expr pos:start="41:53" pos:end="41:74"><name pos:start="41:53" pos:end="41:74"><name pos:start="41:53" pos:end="41:67">UAVStateMessage</name><operator pos:start="41:68" pos:end="41:68">.</operator><name pos:start="41:69" pos:end="41:74">STATUS</name></name></expr></argument>)</argument_list></call><operator pos:start="41:76" pos:end="41:76">.</operator><call pos:start="41:77" pos:end="41:89"><name pos:start="41:77" pos:end="41:87">getAsString</name><argument_list pos:start="41:88" pos:end="41:89">()</argument_list></call></expr></init></decl>;</decl_stmt>
		<decl_stmt pos:start="42:17" pos:end="42:86"><decl pos:start="42:17" pos:end="42:85"><type pos:start="42:17" pos:end="42:22"><name pos:start="42:17" pos:end="42:22">String</name></type> <name pos:start="42:24" pos:end="42:33">modeString</name> <init pos:start="42:35" pos:end="42:85">= <expr pos:start="42:37" pos:end="42:85"><call pos:start="42:37" pos:end="42:71"><name pos:start="42:37" pos:end="42:49"><name pos:start="42:37" pos:end="42:45">mapObject</name><operator pos:start="42:46" pos:end="42:46">.</operator><name pos:start="42:47" pos:end="42:49">get</name></name><argument_list pos:start="42:50" pos:end="42:71">(<argument pos:start="42:51" pos:end="42:70"><expr pos:start="42:51" pos:end="42:70"><name pos:start="42:51" pos:end="42:70"><name pos:start="42:51" pos:end="42:65">UAVStateMessage</name><operator pos:start="42:66" pos:end="42:66">.</operator><name pos:start="42:67" pos:end="42:70">MODE</name></name></expr></argument>)</argument_list></call><operator pos:start="42:72" pos:end="42:72">.</operator><call pos:start="42:73" pos:end="42:85"><name pos:start="42:73" pos:end="42:83">getAsString</name><argument_list pos:start="42:84" pos:end="42:85">()</argument_list></call></expr></init></decl>;</decl_stmt>

		<expr_stmt pos:start="44:17" pos:end="44:87"><expr pos:start="44:17" pos:end="44:86"><call pos:start="44:17" pos:end="44:86"><name pos:start="44:17" pos:end="44:27"><name pos:start="44:17" pos:end="44:23">dataMap</name><operator pos:start="44:24" pos:end="44:24">.</operator><name pos:start="44:25" pos:end="44:27">put</name></name><argument_list pos:start="44:28" pos:end="44:86">(<argument pos:start="44:29" pos:end="44:50"><expr pos:start="44:29" pos:end="44:50"><name pos:start="44:29" pos:end="44:50"><name pos:start="44:29" pos:end="44:43">UAVStateMessage</name><operator pos:start="44:44" pos:end="44:44">.</operator><name pos:start="44:45" pos:end="44:50">STATUS</name></name></expr></argument>, <argument pos:start="44:53" pos:end="44:85"><expr pos:start="44:53" pos:end="44:85"><call pos:start="44:53" pos:end="44:85"><name pos:start="44:53" pos:end="44:71"><name pos:start="44:53" pos:end="44:63">DroneStatus</name><operator pos:start="44:64" pos:end="44:64">.</operator><name pos:start="44:65" pos:end="44:71">valueOf</name></name><argument_list pos:start="44:72" pos:end="44:85">(<argument pos:start="44:73" pos:end="44:84"><expr pos:start="44:73" pos:end="44:84"><name pos:start="44:73" pos:end="44:84">statusString</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt pos:start="45:17" pos:end="45:81"><expr pos:start="45:17" pos:end="45:80"><call pos:start="45:17" pos:end="45:80"><name pos:start="45:17" pos:end="45:27"><name pos:start="45:17" pos:end="45:23">dataMap</name><operator pos:start="45:24" pos:end="45:24">.</operator><name pos:start="45:25" pos:end="45:27">put</name></name><argument_list pos:start="45:28" pos:end="45:80">(<argument pos:start="45:29" pos:end="45:48"><expr pos:start="45:29" pos:end="45:48"><name pos:start="45:29" pos:end="45:48"><name pos:start="45:29" pos:end="45:43">UAVStateMessage</name><operator pos:start="45:44" pos:end="45:44">.</operator><name pos:start="45:45" pos:end="45:48">MODE</name></name></expr></argument>, <argument pos:start="45:51" pos:end="45:79"><expr pos:start="45:51" pos:end="45:79"><call pos:start="45:51" pos:end="45:79"><name pos:start="45:51" pos:end="45:67"><name pos:start="45:51" pos:end="45:59">DroneMode</name><operator pos:start="45:60" pos:end="45:60">.</operator><name pos:start="45:61" pos:end="45:67">valueOf</name></name><argument_list pos:start="45:68" pos:end="45:79">(<argument pos:start="45:69" pos:end="45:78"><expr pos:start="45:69" pos:end="45:78"><name pos:start="45:69" pos:end="45:78">modeString</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		<decl_stmt pos:start="47:17" pos:end="47:89"><decl pos:start="47:17" pos:end="47:88"><type pos:start="47:17" pos:end="47:23"><name pos:start="47:17" pos:end="47:23">boolean</name></type> <name pos:start="47:25" pos:end="47:34">armedValue</name> <init pos:start="47:36" pos:end="47:88">= <expr pos:start="47:38" pos:end="47:88"><call pos:start="47:38" pos:end="47:73"><name pos:start="47:38" pos:end="47:50"><name pos:start="47:38" pos:end="47:46">mapObject</name><operator pos:start="47:47" pos:end="47:47">.</operator><name pos:start="47:48" pos:end="47:50">get</name></name><argument_list pos:start="47:51" pos:end="47:73">(<argument pos:start="47:52" pos:end="47:72"><expr pos:start="47:52" pos:end="47:72"><name pos:start="47:52" pos:end="47:72"><name pos:start="47:52" pos:end="47:66">UAVStateMessage</name><operator pos:start="47:67" pos:end="47:67">.</operator><name pos:start="47:68" pos:end="47:72">ARMED</name></name></expr></argument>)</argument_list></call><operator pos:start="47:74" pos:end="47:74">.</operator><call pos:start="47:75" pos:end="47:88"><name pos:start="47:75" pos:end="47:86">getAsBoolean</name><argument_list pos:start="47:87" pos:end="47:88">()</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt pos:start="48:17" pos:end="48:80"><expr pos:start="48:17" pos:end="48:79"><call pos:start="48:17" pos:end="48:79"><name pos:start="48:17" pos:end="48:27"><name pos:start="48:17" pos:end="48:23">dataMap</name><operator pos:start="48:24" pos:end="48:24">.</operator><name pos:start="48:25" pos:end="48:27">put</name></name><argument_list pos:start="48:28" pos:end="48:79">(<argument pos:start="48:29" pos:end="48:49"><expr pos:start="48:29" pos:end="48:49"><name pos:start="48:29" pos:end="48:49"><name pos:start="48:29" pos:end="48:43">UAVStateMessage</name><operator pos:start="48:44" pos:end="48:44">.</operator><name pos:start="48:45" pos:end="48:49">ARMED</name></name></expr></argument>, <argument pos:start="48:52" pos:end="48:78"><expr pos:start="48:52" pos:end="48:78"><call pos:start="48:52" pos:end="48:78"><name pos:start="48:52" pos:end="48:66"><name pos:start="48:52" pos:end="48:58">Boolean</name><operator pos:start="48:59" pos:end="48:59">.</operator><name pos:start="48:60" pos:end="48:66">valueOf</name></name><argument_list pos:start="48:67" pos:end="48:78">(<argument pos:start="48:68" pos:end="48:77"><expr pos:start="48:68" pos:end="48:77"><name pos:start="48:68" pos:end="48:77">armedValue</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		<decl_stmt pos:start="50:17" pos:end="50:93"><decl pos:start="50:17" pos:end="50:92"><type pos:start="50:17" pos:end="50:23"><name pos:start="50:17" pos:end="50:23">boolean</name></type> <name pos:start="50:25" pos:end="50:36">armableValue</name> <init pos:start="50:38" pos:end="50:92">= <expr pos:start="50:40" pos:end="50:92"><call pos:start="50:40" pos:end="50:77"><name pos:start="50:40" pos:end="50:52"><name pos:start="50:40" pos:end="50:48">mapObject</name><operator pos:start="50:49" pos:end="50:49">.</operator><name pos:start="50:50" pos:end="50:52">get</name></name><argument_list pos:start="50:53" pos:end="50:77">(<argument pos:start="50:54" pos:end="50:76"><expr pos:start="50:54" pos:end="50:76"><name pos:start="50:54" pos:end="50:76"><name pos:start="50:54" pos:end="50:68">UAVStateMessage</name><operator pos:start="50:69" pos:end="50:69">.</operator><name pos:start="50:70" pos:end="50:76">ARMABLE</name></name></expr></argument>)</argument_list></call><operator pos:start="50:78" pos:end="50:78">.</operator><call pos:start="50:79" pos:end="50:92"><name pos:start="50:79" pos:end="50:90">getAsBoolean</name><argument_list pos:start="50:91" pos:end="50:92">()</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt pos:start="51:17" pos:end="51:84"><expr pos:start="51:17" pos:end="51:83"><call pos:start="51:17" pos:end="51:83"><name pos:start="51:17" pos:end="51:27"><name pos:start="51:17" pos:end="51:23">dataMap</name><operator pos:start="51:24" pos:end="51:24">.</operator><name pos:start="51:25" pos:end="51:27">put</name></name><argument_list pos:start="51:28" pos:end="51:83">(<argument pos:start="51:29" pos:end="51:51"><expr pos:start="51:29" pos:end="51:51"><name pos:start="51:29" pos:end="51:51"><name pos:start="51:29" pos:end="51:43">UAVStateMessage</name><operator pos:start="51:44" pos:end="51:44">.</operator><name pos:start="51:45" pos:end="51:51">ARMABLE</name></name></expr></argument>, <argument pos:start="51:54" pos:end="51:82"><expr pos:start="51:54" pos:end="51:82"><call pos:start="51:54" pos:end="51:82"><name pos:start="51:54" pos:end="51:68"><name pos:start="51:54" pos:end="51:60">Boolean</name><operator pos:start="51:61" pos:end="51:61">.</operator><name pos:start="51:62" pos:end="51:68">valueOf</name></name><argument_list pos:start="51:69" pos:end="51:82">(<argument pos:start="51:70" pos:end="51:81"><expr pos:start="51:70" pos:end="51:81"><name pos:start="51:70" pos:end="51:81">armableValue</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		<decl_stmt pos:start="53:17" pos:end="53:94"><decl pos:start="53:17" pos:end="53:93"><type pos:start="53:17" pos:end="53:22"><name pos:start="53:17" pos:end="53:22">double</name></type> <name pos:start="53:24" pos:end="53:34">groundspeed</name> <init pos:start="53:36" pos:end="53:93">= <expr pos:start="53:38" pos:end="53:93"><call pos:start="53:38" pos:end="53:79"><name pos:start="53:38" pos:end="53:50"><name pos:start="53:38" pos:end="53:46">mapObject</name><operator pos:start="53:47" pos:end="53:47">.</operator><name pos:start="53:48" pos:end="53:50">get</name></name><argument_list pos:start="53:51" pos:end="53:79">(<argument pos:start="53:52" pos:end="53:78"><expr pos:start="53:52" pos:end="53:78"><name pos:start="53:52" pos:end="53:78"><name pos:start="53:52" pos:end="53:66">UAVStateMessage</name><operator pos:start="53:67" pos:end="53:67">.</operator><name pos:start="53:68" pos:end="53:78">GROUNDSPEED</name></name></expr></argument>)</argument_list></call><operator pos:start="53:80" pos:end="53:80">.</operator><call pos:start="53:81" pos:end="53:93"><name pos:start="53:81" pos:end="53:91">getAsDouble</name><argument_list pos:start="53:92" pos:end="53:93">()</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt pos:start="54:17" pos:end="54:86"><expr pos:start="54:17" pos:end="54:85"><call pos:start="54:17" pos:end="54:85"><name pos:start="54:17" pos:end="54:27"><name pos:start="54:17" pos:end="54:23">dataMap</name><operator pos:start="54:24" pos:end="54:24">.</operator><name pos:start="54:25" pos:end="54:27">put</name></name><argument_list pos:start="54:28" pos:end="54:85">(<argument pos:start="54:29" pos:end="54:55"><expr pos:start="54:29" pos:end="54:55"><name pos:start="54:29" pos:end="54:55"><name pos:start="54:29" pos:end="54:43">UAVStateMessage</name><operator pos:start="54:44" pos:end="54:44">.</operator><name pos:start="54:45" pos:end="54:55">GROUNDSPEED</name></name></expr></argument>, <argument pos:start="54:58" pos:end="54:84"><expr pos:start="54:58" pos:end="54:84"><call pos:start="54:58" pos:end="54:84"><name pos:start="54:58" pos:end="54:71"><name pos:start="54:58" pos:end="54:63">Double</name><operator pos:start="54:64" pos:end="54:64">.</operator><name pos:start="54:65" pos:end="54:71">valueOf</name></name><argument_list pos:start="54:72" pos:end="54:84">(<argument pos:start="54:73" pos:end="54:83"><expr pos:start="54:73" pos:end="54:83"><name pos:start="54:73" pos:end="54:83">groundspeed</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		<decl_stmt pos:start="56:17" pos:end="56:113"><decl pos:start="56:17" pos:end="56:112"><type pos:start="56:17" pos:end="56:29"><name pos:start="56:17" pos:end="56:29">BatteryStatus</name></type> <name pos:start="56:31" pos:end="56:43">batteryStatus</name> <init pos:start="56:45" pos:end="56:112">= <expr pos:start="56:47" pos:end="56:112"><call pos:start="56:47" pos:end="56:112"><name pos:start="56:47" pos:end="56:70">deserializeBatteryStatus</name><argument_list pos:start="56:71" pos:end="56:112">(<argument pos:start="56:72" pos:end="56:80"><expr pos:start="56:72" pos:end="56:80"><name pos:start="56:72" pos:end="56:80">mapObject</name></expr></argument>, <argument pos:start="56:83" pos:end="56:111"><expr pos:start="56:83" pos:end="56:111"><name pos:start="56:83" pos:end="56:111"><name pos:start="56:83" pos:end="56:97">UAVStateMessage</name><operator pos:start="56:98" pos:end="56:98">.</operator><name pos:start="56:99" pos:end="56:111">BATTERYSTATUS</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt pos:start="57:17" pos:end="57:74"><expr pos:start="57:17" pos:end="57:73"><call pos:start="57:17" pos:end="57:73"><name pos:start="57:17" pos:end="57:27"><name pos:start="57:17" pos:end="57:23">dataMap</name><operator pos:start="57:24" pos:end="57:24">.</operator><name pos:start="57:25" pos:end="57:27">put</name></name><argument_list pos:start="57:28" pos:end="57:73">(<argument pos:start="57:29" pos:end="57:57"><expr pos:start="57:29" pos:end="57:57"><name pos:start="57:29" pos:end="57:57"><name pos:start="57:29" pos:end="57:43">UAVStateMessage</name><operator pos:start="57:44" pos:end="57:44">.</operator><name pos:start="57:45" pos:end="57:57">BATTERYSTATUS</name></name></expr></argument>, <argument pos:start="57:60" pos:end="57:72"><expr pos:start="57:60" pos:end="57:72"><name pos:start="57:60" pos:end="57:72">batteryStatus</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		<comment type="line" pos:start="59:17" pos:end="59:50">// TODO Auto-generated method stub</comment>
		<return pos:start="60:17" pos:end="60:31">return <expr pos:start="60:24" pos:end="60:30"><name pos:start="60:24" pos:end="60:30">dataMap</name></expr>;</return>
	</block_content>}</block></function>

	<function pos:start="63:9" pos:end="104:9"><type pos:start="63:9" pos:end="63:29"><specifier pos:start="63:9" pos:end="63:15">private</specifier> <name pos:start="63:17" pos:end="63:29">BatteryStatus</name></type> <name pos:start="63:31" pos:end="63:54">deserializeBatteryStatus</name><parameter_list pos:start="63:55" pos:end="63:93">(<parameter pos:start="63:56" pos:end="63:75"><decl pos:start="63:56" pos:end="63:75"><type pos:start="63:56" pos:end="63:75"><name pos:start="63:56" pos:end="63:65">JsonObject</name></type> <name pos:start="63:67" pos:end="63:75">mapObject</name></decl></parameter>, <parameter pos:start="63:78" pos:end="63:92"><decl pos:start="63:78" pos:end="63:92"><type pos:start="63:78" pos:end="63:92"><name pos:start="63:78" pos:end="63:83">String</name></type> <name pos:start="63:85" pos:end="63:92">itemname</name></decl></parameter>)</parameter_list> <block pos:start="63:95" pos:end="104:9">{<block_content pos:start="64:17" pos:end="103:69">
		<decl_stmt pos:start="64:17" pos:end="64:67"><decl pos:start="64:17" pos:end="64:66"><type pos:start="64:17" pos:end="64:27"><name pos:start="64:17" pos:end="64:27">JsonElement</name></type> <name pos:start="64:29" pos:end="64:40">locationElem</name> <init pos:start="64:42" pos:end="64:66">= <expr pos:start="64:44" pos:end="64:66"><call pos:start="64:44" pos:end="64:66"><name pos:start="64:44" pos:end="64:56"><name pos:start="64:44" pos:end="64:52">mapObject</name><operator pos:start="64:53" pos:end="64:53">.</operator><name pos:start="64:54" pos:end="64:56">get</name></name><argument_list pos:start="64:57" pos:end="64:66">(<argument pos:start="64:58" pos:end="64:65"><expr pos:start="64:58" pos:end="64:65"><name pos:start="64:58" pos:end="64:65">itemname</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<decl_stmt pos:start="65:17" pos:end="65:70"><decl pos:start="65:17" pos:end="65:69"><type pos:start="65:17" pos:end="65:26"><name pos:start="65:17" pos:end="65:26">JsonObject</name></type> <name pos:start="65:28" pos:end="65:36">locObject</name> <init pos:start="65:38" pos:end="65:69">= <expr pos:start="65:40" pos:end="65:69"><call pos:start="65:40" pos:end="65:69"><name pos:start="65:40" pos:end="65:67"><name pos:start="65:40" pos:end="65:51">locationElem</name><operator pos:start="65:52" pos:end="65:52">.</operator><name pos:start="65:53" pos:end="65:67">getAsJsonObject</name></name><argument_list pos:start="65:68" pos:end="65:69">()</argument_list></call></expr></init></decl>;</decl_stmt>

		<decl_stmt pos:start="67:17" pos:end="67:37"><decl pos:start="67:17" pos:end="67:36"><type pos:start="67:17" pos:end="67:22"><name pos:start="67:17" pos:end="67:22">double</name></type> <name pos:start="67:24" pos:end="67:31">bcurrent</name> <init pos:start="67:33" pos:end="67:36">= <expr pos:start="67:35" pos:end="67:36"><operator pos:start="67:35" pos:end="67:35">-</operator><literal type="number" pos:start="67:36" pos:end="67:36">1</literal></expr></init></decl>;</decl_stmt>
		<if_stmt pos:start="68:17" pos:end="77:17"><if pos:start="68:17" pos:end="77:17">if <condition pos:start="68:20" pos:end="68:45">(<expr pos:start="68:21" pos:end="68:44"><call pos:start="68:21" pos:end="68:44"><name pos:start="68:21" pos:end="68:33"><name pos:start="68:21" pos:end="68:29">locObject</name><operator pos:start="68:30" pos:end="68:30">.</operator><name pos:start="68:31" pos:end="68:33">has</name></name><argument_list pos:start="68:34" pos:end="68:44">(<argument pos:start="68:35" pos:end="68:43"><expr pos:start="68:35" pos:end="68:43"><literal type="string" pos:start="68:35" pos:end="68:43">"current"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="68:47" pos:end="77:17">{<block_content pos:start="69:25" pos:end="76:25">
			<try pos:start="69:25" pos:end="76:25">try <block pos:start="69:29" pos:end="72:25">{<block_content pos:start="70:33" pos:end="71:63">
				<decl_stmt pos:start="70:33" pos:end="70:94"><decl pos:start="70:33" pos:end="70:93"><type pos:start="70:33" pos:end="70:45"><name pos:start="70:33" pos:end="70:45">JsonPrimitive</name></type> <name pos:start="70:47" pos:end="70:51">level</name> <init pos:start="70:53" pos:end="70:93">= <expr pos:start="70:55" pos:end="70:93"><call pos:start="70:55" pos:end="70:93"><name pos:start="70:55" pos:end="70:82"><name pos:start="70:55" pos:end="70:63">locObject</name><operator pos:start="70:64" pos:end="70:64">.</operator><name pos:start="70:65" pos:end="70:82">getAsJsonPrimitive</name></name><argument_list pos:start="70:83" pos:end="70:93">(<argument pos:start="70:84" pos:end="70:92"><expr pos:start="70:84" pos:end="70:92"><literal type="string" pos:start="70:84" pos:end="70:92">"current"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
				<expr_stmt pos:start="71:33" pos:end="71:63"><expr pos:start="71:33" pos:end="71:62"><name pos:start="71:33" pos:end="71:40">bcurrent</name> <operator pos:start="71:42" pos:end="71:42">=</operator> <call pos:start="71:44" pos:end="71:62"><name pos:start="71:44" pos:end="71:60"><name pos:start="71:44" pos:end="71:48">level</name><operator pos:start="71:49" pos:end="71:49">.</operator><name pos:start="71:50" pos:end="71:60">getAsDouble</name></name><argument_list pos:start="71:61" pos:end="71:62">()</argument_list></call></expr>;</expr_stmt>
			</block_content>}</block> <catch pos:start="72:27" pos:end="74:25">catch <parameter_list pos:start="72:33" pos:end="72:54">(<parameter pos:start="72:34" pos:end="72:53"><decl pos:start="72:34" pos:end="72:53"><type pos:start="72:34" pos:end="72:53"><name pos:start="72:34" pos:end="72:51">ClassCastException</name></type> <name pos:start="72:53" pos:end="72:53">e</name></decl></parameter>)</parameter_list> <block pos:start="72:56" pos:end="74:25">{<block_content pos:start="73:33" pos:end="73:68">
				<expr_stmt pos:start="73:33" pos:end="73:68"><expr pos:start="73:33" pos:end="73:67"><call pos:start="73:33" pos:end="73:67"><name pos:start="73:33" pos:end="73:44"><name pos:start="73:33" pos:end="73:38">LOGGER</name><operator pos:start="73:39" pos:end="73:39">.</operator><name pos:start="73:40" pos:end="73:44">error</name></name><argument_list pos:start="73:45" pos:end="73:67">(<argument pos:start="73:46" pos:end="73:66"><expr pos:start="73:46" pos:end="73:66"><literal type="string" pos:start="73:46" pos:end="73:66">"Current not a value"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			</block_content>}</block></catch> <catch pos:start="74:27" pos:end="76:25">catch <parameter_list pos:start="74:33" pos:end="74:45">(<parameter pos:start="74:34" pos:end="74:44"><decl pos:start="74:34" pos:end="74:44"><type pos:start="74:34" pos:end="74:44"><name pos:start="74:34" pos:end="74:42">Exception</name></type> <name pos:start="74:44" pos:end="74:44">e</name></decl></parameter>)</parameter_list> <block pos:start="74:47" pos:end="76:25">{<block_content pos:start="75:33" pos:end="75:48">
				<expr_stmt pos:start="75:33" pos:end="75:48"><expr pos:start="75:33" pos:end="75:47"><call pos:start="75:33" pos:end="75:47"><name pos:start="75:33" pos:end="75:44"><name pos:start="75:33" pos:end="75:38">LOGGER</name><operator pos:start="75:39" pos:end="75:39">.</operator><name pos:start="75:40" pos:end="75:44">error</name></name><argument_list pos:start="75:45" pos:end="75:47">(<argument pos:start="75:46" pos:end="75:46"><expr pos:start="75:46" pos:end="75:46"><name pos:start="75:46" pos:end="75:46">e</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			</block_content>}</block></catch></try>
		</block_content>}</block></if></if_stmt>

		<decl_stmt pos:start="79:17" pos:end="79:35"><decl pos:start="79:17" pos:end="79:34"><type pos:start="79:17" pos:end="79:22"><name pos:start="79:17" pos:end="79:22">double</name></type> <name pos:start="79:24" pos:end="79:29">blevel</name> <init pos:start="79:31" pos:end="79:34">= <expr pos:start="79:33" pos:end="79:34"><operator pos:start="79:33" pos:end="79:33">-</operator><literal type="number" pos:start="79:34" pos:end="79:34">1</literal></expr></init></decl>;</decl_stmt>
		<if_stmt pos:start="80:17" pos:end="90:17"><if pos:start="80:17" pos:end="90:17">if <condition pos:start="80:20" pos:end="80:43">(<expr pos:start="80:21" pos:end="80:42"><call pos:start="80:21" pos:end="80:42"><name pos:start="80:21" pos:end="80:33"><name pos:start="80:21" pos:end="80:29">locObject</name><operator pos:start="80:30" pos:end="80:30">.</operator><name pos:start="80:31" pos:end="80:33">has</name></name><argument_list pos:start="80:34" pos:end="80:42">(<argument pos:start="80:35" pos:end="80:41"><expr pos:start="80:35" pos:end="80:41"><literal type="string" pos:start="80:35" pos:end="80:41">"level"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="80:45" pos:end="90:17">{<block_content pos:start="81:25" pos:end="88:25">
			<try pos:start="81:25" pos:end="88:25">try <block pos:start="81:29" pos:end="84:25">{<block_content pos:start="82:33" pos:end="83:61">
				<decl_stmt pos:start="82:33" pos:end="82:92"><decl pos:start="82:33" pos:end="82:91"><type pos:start="82:33" pos:end="82:45"><name pos:start="82:33" pos:end="82:45">JsonPrimitive</name></type> <name pos:start="82:47" pos:end="82:51">level</name> <init pos:start="82:53" pos:end="82:91">= <expr pos:start="82:55" pos:end="82:91"><call pos:start="82:55" pos:end="82:91"><name pos:start="82:55" pos:end="82:82"><name pos:start="82:55" pos:end="82:63">locObject</name><operator pos:start="82:64" pos:end="82:64">.</operator><name pos:start="82:65" pos:end="82:82">getAsJsonPrimitive</name></name><argument_list pos:start="82:83" pos:end="82:91">(<argument pos:start="82:84" pos:end="82:90"><expr pos:start="82:84" pos:end="82:90"><literal type="string" pos:start="82:84" pos:end="82:90">"level"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
				<expr_stmt pos:start="83:33" pos:end="83:61"><expr pos:start="83:33" pos:end="83:60"><name pos:start="83:33" pos:end="83:38">blevel</name> <operator pos:start="83:40" pos:end="83:40">=</operator> <call pos:start="83:42" pos:end="83:60"><name pos:start="83:42" pos:end="83:58"><name pos:start="83:42" pos:end="83:46">level</name><operator pos:start="83:47" pos:end="83:47">.</operator><name pos:start="83:48" pos:end="83:58">getAsDouble</name></name><argument_list pos:start="83:59" pos:end="83:60">()</argument_list></call></expr>;</expr_stmt>
			</block_content>}</block> <catch pos:start="84:27" pos:end="86:25">catch <parameter_list pos:start="84:33" pos:end="84:54">(<parameter pos:start="84:34" pos:end="84:53"><decl pos:start="84:34" pos:end="84:53"><type pos:start="84:34" pos:end="84:53"><name pos:start="84:34" pos:end="84:51">ClassCastException</name></type> <name pos:start="84:53" pos:end="84:53">e</name></decl></parameter>)</parameter_list> <block pos:start="84:56" pos:end="86:25">{<block_content pos:start="85:33" pos:end="85:66">
				<expr_stmt pos:start="85:33" pos:end="85:66"><expr pos:start="85:33" pos:end="85:65"><call pos:start="85:33" pos:end="85:65"><name pos:start="85:33" pos:end="85:44"><name pos:start="85:33" pos:end="85:38">LOGGER</name><operator pos:start="85:39" pos:end="85:39">.</operator><name pos:start="85:40" pos:end="85:44">error</name></name><argument_list pos:start="85:45" pos:end="85:65">(<argument pos:start="85:46" pos:end="85:64"><expr pos:start="85:46" pos:end="85:64"><literal type="string" pos:start="85:46" pos:end="85:64">"Level not a value"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			</block_content>}</block></catch> <catch pos:start="86:27" pos:end="88:25">catch <parameter_list pos:start="86:33" pos:end="86:45">(<parameter pos:start="86:34" pos:end="86:44"><decl pos:start="86:34" pos:end="86:44"><type pos:start="86:34" pos:end="86:44"><name pos:start="86:34" pos:end="86:42">Exception</name></type> <name pos:start="86:44" pos:end="86:44">e</name></decl></parameter>)</parameter_list> <block pos:start="86:47" pos:end="88:25">{<block_content pos:start="87:33" pos:end="87:48">
				<expr_stmt pos:start="87:33" pos:end="87:48"><expr pos:start="87:33" pos:end="87:47"><call pos:start="87:33" pos:end="87:47"><name pos:start="87:33" pos:end="87:44"><name pos:start="87:33" pos:end="87:38">LOGGER</name><operator pos:start="87:39" pos:end="87:39">.</operator><name pos:start="87:40" pos:end="87:44">error</name></name><argument_list pos:start="87:45" pos:end="87:47">(<argument pos:start="87:46" pos:end="87:46"><expr pos:start="87:46" pos:end="87:46"><name pos:start="87:46" pos:end="87:46">e</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			</block_content>}</block></catch></try>

		</block_content>}</block></if></if_stmt>

		<decl_stmt pos:start="92:17" pos:end="92:37"><decl pos:start="92:17" pos:end="92:36"><type pos:start="92:17" pos:end="92:22"><name pos:start="92:17" pos:end="92:22">double</name></type> <name pos:start="92:24" pos:end="92:31">bvoltage</name> <init pos:start="92:33" pos:end="92:36">= <expr pos:start="92:35" pos:end="92:36"><operator pos:start="92:35" pos:end="92:35">-</operator><literal type="number" pos:start="92:36" pos:end="92:36">1</literal></expr></init></decl>;</decl_stmt>
		<if_stmt pos:start="93:17" pos:end="102:17"><if pos:start="93:17" pos:end="102:17">if <condition pos:start="93:20" pos:end="93:45">(<expr pos:start="93:21" pos:end="93:44"><call pos:start="93:21" pos:end="93:44"><name pos:start="93:21" pos:end="93:33"><name pos:start="93:21" pos:end="93:29">locObject</name><operator pos:start="93:30" pos:end="93:30">.</operator><name pos:start="93:31" pos:end="93:33">has</name></name><argument_list pos:start="93:34" pos:end="93:44">(<argument pos:start="93:35" pos:end="93:43"><expr pos:start="93:35" pos:end="93:43"><literal type="string" pos:start="93:35" pos:end="93:43">"voltage"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="93:47" pos:end="102:17">{<block_content pos:start="94:25" pos:end="101:25">
			<try pos:start="94:25" pos:end="101:25">try <block pos:start="94:29" pos:end="97:25">{<block_content pos:start="95:33" pos:end="96:62">
				<decl_stmt pos:start="95:33" pos:end="95:93"><decl pos:start="95:33" pos:end="95:92"><type pos:start="95:33" pos:end="95:45"><name pos:start="95:33" pos:end="95:45">JsonPrimitive</name></type> <name pos:start="95:47" pos:end="95:50">volt</name> <init pos:start="95:52" pos:end="95:92">= <expr pos:start="95:54" pos:end="95:92"><call pos:start="95:54" pos:end="95:92"><name pos:start="95:54" pos:end="95:81"><name pos:start="95:54" pos:end="95:62">locObject</name><operator pos:start="95:63" pos:end="95:63">.</operator><name pos:start="95:64" pos:end="95:81">getAsJsonPrimitive</name></name><argument_list pos:start="95:82" pos:end="95:92">(<argument pos:start="95:83" pos:end="95:91"><expr pos:start="95:83" pos:end="95:91"><literal type="string" pos:start="95:83" pos:end="95:91">"voltage"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
				<expr_stmt pos:start="96:33" pos:end="96:62"><expr pos:start="96:33" pos:end="96:61"><name pos:start="96:33" pos:end="96:40">bvoltage</name> <operator pos:start="96:42" pos:end="96:42">=</operator> <call pos:start="96:44" pos:end="96:61"><name pos:start="96:44" pos:end="96:59"><name pos:start="96:44" pos:end="96:47">volt</name><operator pos:start="96:48" pos:end="96:48">.</operator><name pos:start="96:49" pos:end="96:59">getAsDouble</name></name><argument_list pos:start="96:60" pos:end="96:61">()</argument_list></call></expr>;</expr_stmt>
			</block_content>}</block> <catch pos:start="97:27" pos:end="99:25">catch <parameter_list pos:start="97:33" pos:end="97:54">(<parameter pos:start="97:34" pos:end="97:53"><decl pos:start="97:34" pos:end="97:53"><type pos:start="97:34" pos:end="97:53"><name pos:start="97:34" pos:end="97:51">ClassCastException</name></type> <name pos:start="97:53" pos:end="97:53">e</name></decl></parameter>)</parameter_list> <block pos:start="97:56" pos:end="99:25">{<block_content pos:start="98:33" pos:end="98:68">
				<expr_stmt pos:start="98:33" pos:end="98:68"><expr pos:start="98:33" pos:end="98:67"><call pos:start="98:33" pos:end="98:67"><name pos:start="98:33" pos:end="98:44"><name pos:start="98:33" pos:end="98:38">LOGGER</name><operator pos:start="98:39" pos:end="98:39">.</operator><name pos:start="98:40" pos:end="98:44">error</name></name><argument_list pos:start="98:45" pos:end="98:67">(<argument pos:start="98:46" pos:end="98:66"><expr pos:start="98:46" pos:end="98:66"><literal type="string" pos:start="98:46" pos:end="98:66">"Voltage not a value"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			</block_content>}</block></catch> <catch pos:start="99:27" pos:end="101:25">catch <parameter_list pos:start="99:33" pos:end="99:45">(<parameter pos:start="99:34" pos:end="99:44"><decl pos:start="99:34" pos:end="99:44"><type pos:start="99:34" pos:end="99:44"><name pos:start="99:34" pos:end="99:42">Exception</name></type> <name pos:start="99:44" pos:end="99:44">e</name></decl></parameter>)</parameter_list> <block pos:start="99:47" pos:end="101:25">{<block_content pos:start="100:33" pos:end="100:48">
				<expr_stmt pos:start="100:33" pos:end="100:48"><expr pos:start="100:33" pos:end="100:47"><call pos:start="100:33" pos:end="100:47"><name pos:start="100:33" pos:end="100:44"><name pos:start="100:33" pos:end="100:38">LOGGER</name><operator pos:start="100:39" pos:end="100:39">.</operator><name pos:start="100:40" pos:end="100:44">error</name></name><argument_list pos:start="100:45" pos:end="100:47">(<argument pos:start="100:46" pos:end="100:46"><expr pos:start="100:46" pos:end="100:46"><name pos:start="100:46" pos:end="100:46">e</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			</block_content>}</block></catch></try>
		</block_content>}</block></if></if_stmt>
		<return pos:start="103:17" pos:end="103:69">return <expr pos:start="103:24" pos:end="103:68"><operator pos:start="103:24" pos:end="103:26">new</operator> <call pos:start="103:28" pos:end="103:68"><name pos:start="103:28" pos:end="103:40">BatteryStatus</name><argument_list pos:start="103:41" pos:end="103:68">(<argument pos:start="103:42" pos:end="103:49"><expr pos:start="103:42" pos:end="103:49"><name pos:start="103:42" pos:end="103:49">bcurrent</name></expr></argument>, <argument pos:start="103:52" pos:end="103:59"><expr pos:start="103:52" pos:end="103:59"><name pos:start="103:52" pos:end="103:59">bvoltage</name></expr></argument>, <argument pos:start="103:62" pos:end="103:67"><expr pos:start="103:62" pos:end="103:67"><name pos:start="103:62" pos:end="103:67">blevel</name></expr></argument>)</argument_list></call></expr>;</return>
	</block_content>}</block></function>

	<function pos:start="106:9" pos:end="116:9"><type pos:start="106:9" pos:end="106:29"><specifier pos:start="106:9" pos:end="106:15">private</specifier> <name pos:start="106:17" pos:end="106:29">LlaCoordinate</name></type> <name pos:start="106:31" pos:end="106:54">deserializeLLACoordinate</name><parameter_list pos:start="106:55" pos:end="106:93">(<parameter pos:start="106:56" pos:end="106:75"><decl pos:start="106:56" pos:end="106:75"><type pos:start="106:56" pos:end="106:75"><name pos:start="106:56" pos:end="106:65">JsonObject</name></type> <name pos:start="106:67" pos:end="106:75">mapObject</name></decl></parameter>, <parameter pos:start="106:78" pos:end="106:92"><decl pos:start="106:78" pos:end="106:92"><type pos:start="106:78" pos:end="106:92"><name pos:start="106:78" pos:end="106:83">String</name></type> <name pos:start="106:85" pos:end="106:92">itemname</name></decl></parameter>)</parameter_list> <block pos:start="106:95" pos:end="116:9">{<block_content pos:start="107:17" pos:end="114:114">
		<decl_stmt pos:start="107:17" pos:end="107:67"><decl pos:start="107:17" pos:end="107:66"><type pos:start="107:17" pos:end="107:27"><name pos:start="107:17" pos:end="107:27">JsonElement</name></type> <name pos:start="107:29" pos:end="107:40">locationElem</name> <init pos:start="107:42" pos:end="107:66">= <expr pos:start="107:44" pos:end="107:66"><call pos:start="107:44" pos:end="107:66"><name pos:start="107:44" pos:end="107:56"><name pos:start="107:44" pos:end="107:52">mapObject</name><operator pos:start="107:53" pos:end="107:53">.</operator><name pos:start="107:54" pos:end="107:56">get</name></name><argument_list pos:start="107:57" pos:end="107:66">(<argument pos:start="107:58" pos:end="107:65"><expr pos:start="107:58" pos:end="107:65"><name pos:start="107:58" pos:end="107:65">itemname</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<decl_stmt pos:start="108:17" pos:end="108:70"><decl pos:start="108:17" pos:end="108:69"><type pos:start="108:17" pos:end="108:26"><name pos:start="108:17" pos:end="108:26">JsonObject</name></type> <name pos:start="108:28" pos:end="108:36">locObject</name> <init pos:start="108:38" pos:end="108:69">= <expr pos:start="108:40" pos:end="108:69"><call pos:start="108:40" pos:end="108:69"><name pos:start="108:40" pos:end="108:67"><name pos:start="108:40" pos:end="108:51">locationElem</name><operator pos:start="108:52" pos:end="108:52">.</operator><name pos:start="108:53" pos:end="108:67">getAsJsonObject</name></name><argument_list pos:start="108:68" pos:end="108:69">()</argument_list></call></expr></init></decl>;</decl_stmt>

		<decl_stmt pos:start="110:17" pos:end="110:75"><decl pos:start="110:17" pos:end="110:74"><type pos:start="110:17" pos:end="110:29"><name pos:start="110:17" pos:end="110:29">JsonPrimitive</name></type> <name pos:start="110:31" pos:end="110:38">latitude</name> <init pos:start="110:40" pos:end="110:74">= <expr pos:start="110:42" pos:end="110:74"><call pos:start="110:42" pos:end="110:74"><name pos:start="110:42" pos:end="110:69"><name pos:start="110:42" pos:end="110:50">locObject</name><operator pos:start="110:51" pos:end="110:51">.</operator><name pos:start="110:52" pos:end="110:69">getAsJsonPrimitive</name></name><argument_list pos:start="110:70" pos:end="110:74">(<argument pos:start="110:71" pos:end="110:73"><expr pos:start="110:71" pos:end="110:73"><literal type="string" pos:start="110:71" pos:end="110:73">"x"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<decl_stmt pos:start="111:17" pos:end="111:76"><decl pos:start="111:17" pos:end="111:75"><type pos:start="111:17" pos:end="111:29"><name pos:start="111:17" pos:end="111:29">JsonPrimitive</name></type> <name pos:start="111:31" pos:end="111:39">longitude</name> <init pos:start="111:41" pos:end="111:75">= <expr pos:start="111:43" pos:end="111:75"><call pos:start="111:43" pos:end="111:75"><name pos:start="111:43" pos:end="111:70"><name pos:start="111:43" pos:end="111:51">locObject</name><operator pos:start="111:52" pos:end="111:52">.</operator><name pos:start="111:53" pos:end="111:70">getAsJsonPrimitive</name></name><argument_list pos:start="111:71" pos:end="111:75">(<argument pos:start="111:72" pos:end="111:74"><expr pos:start="111:72" pos:end="111:74"><literal type="string" pos:start="111:72" pos:end="111:74">"y"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<decl_stmt pos:start="112:17" pos:end="112:75"><decl pos:start="112:17" pos:end="112:74"><type pos:start="112:17" pos:end="112:29"><name pos:start="112:17" pos:end="112:29">JsonPrimitive</name></type> <name pos:start="112:31" pos:end="112:38">altitude</name> <init pos:start="112:40" pos:end="112:74">= <expr pos:start="112:42" pos:end="112:74"><call pos:start="112:42" pos:end="112:74"><name pos:start="112:42" pos:end="112:69"><name pos:start="112:42" pos:end="112:50">locObject</name><operator pos:start="112:51" pos:end="112:51">.</operator><name pos:start="112:52" pos:end="112:69">getAsJsonPrimitive</name></name><argument_list pos:start="112:70" pos:end="112:74">(<argument pos:start="112:71" pos:end="112:73"><expr pos:start="112:71" pos:end="112:73"><literal type="string" pos:start="112:71" pos:end="112:73">"z"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

		<return pos:start="114:17" pos:end="114:114">return <expr pos:start="114:24" pos:end="114:113"><operator pos:start="114:24" pos:end="114:26">new</operator> <call pos:start="114:28" pos:end="114:113"><name pos:start="114:28" pos:end="114:40">LlaCoordinate</name><argument_list pos:start="114:41" pos:end="114:113">(<argument pos:start="114:42" pos:end="114:63"><expr pos:start="114:42" pos:end="114:63"><call pos:start="114:42" pos:end="114:63"><name pos:start="114:42" pos:end="114:61"><name pos:start="114:42" pos:end="114:49">latitude</name><operator pos:start="114:50" pos:end="114:50">.</operator><name pos:start="114:51" pos:end="114:61">getAsDouble</name></name><argument_list pos:start="114:62" pos:end="114:63">()</argument_list></call></expr></argument>, <argument pos:start="114:66" pos:end="114:88"><expr pos:start="114:66" pos:end="114:88"><call pos:start="114:66" pos:end="114:88"><name pos:start="114:66" pos:end="114:86"><name pos:start="114:66" pos:end="114:74">longitude</name><operator pos:start="114:75" pos:end="114:75">.</operator><name pos:start="114:76" pos:end="114:86">getAsDouble</name></name><argument_list pos:start="114:87" pos:end="114:88">()</argument_list></call></expr></argument>, <argument pos:start="114:91" pos:end="114:112"><expr pos:start="114:91" pos:end="114:112"><call pos:start="114:91" pos:end="114:112"><name pos:start="114:91" pos:end="114:110"><name pos:start="114:91" pos:end="114:98">altitude</name><operator pos:start="114:99" pos:end="114:99">.</operator><name pos:start="114:100" pos:end="114:110">getAsDouble</name></name><argument_list pos:start="114:111" pos:end="114:112">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>

	</block_content>}</block></function>

	<function pos:start="118:9" pos:end="127:9"><type pos:start="118:9" pos:end="118:24"><specifier pos:start="118:9" pos:end="118:15">private</specifier> <name pos:start="118:17" pos:end="118:24">Vector3D</name></type> <name pos:start="118:26" pos:end="118:44">deserializeVector3D</name><parameter_list pos:start="118:45" pos:end="118:83">(<parameter pos:start="118:46" pos:end="118:65"><decl pos:start="118:46" pos:end="118:65"><type pos:start="118:46" pos:end="118:65"><name pos:start="118:46" pos:end="118:55">JsonObject</name></type> <name pos:start="118:57" pos:end="118:65">mapObject</name></decl></parameter>, <parameter pos:start="118:68" pos:end="118:82"><decl pos:start="118:68" pos:end="118:82"><type pos:start="118:68" pos:end="118:82"><name pos:start="118:68" pos:end="118:73">String</name></type> <name pos:start="118:75" pos:end="118:82">itemname</name></decl></parameter>)</parameter_list> <block pos:start="118:85" pos:end="127:9">{<block_content pos:start="119:17" pos:end="126:87">
		<decl_stmt pos:start="119:17" pos:end="119:67"><decl pos:start="119:17" pos:end="119:66"><type pos:start="119:17" pos:end="119:27"><name pos:start="119:17" pos:end="119:27">JsonElement</name></type> <name pos:start="119:29" pos:end="119:40">locationElem</name> <init pos:start="119:42" pos:end="119:66">= <expr pos:start="119:44" pos:end="119:66"><call pos:start="119:44" pos:end="119:66"><name pos:start="119:44" pos:end="119:56"><name pos:start="119:44" pos:end="119:52">mapObject</name><operator pos:start="119:53" pos:end="119:53">.</operator><name pos:start="119:54" pos:end="119:56">get</name></name><argument_list pos:start="119:57" pos:end="119:66">(<argument pos:start="119:58" pos:end="119:65"><expr pos:start="119:58" pos:end="119:65"><name pos:start="119:58" pos:end="119:65">itemname</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<decl_stmt pos:start="120:17" pos:end="120:70"><decl pos:start="120:17" pos:end="120:69"><type pos:start="120:17" pos:end="120:26"><name pos:start="120:17" pos:end="120:26">JsonObject</name></type> <name pos:start="120:28" pos:end="120:36">locObject</name> <init pos:start="120:38" pos:end="120:69">= <expr pos:start="120:40" pos:end="120:69"><call pos:start="120:40" pos:end="120:69"><name pos:start="120:40" pos:end="120:67"><name pos:start="120:40" pos:end="120:51">locationElem</name><operator pos:start="120:52" pos:end="120:52">.</operator><name pos:start="120:53" pos:end="120:67">getAsJsonObject</name></name><argument_list pos:start="120:68" pos:end="120:69">()</argument_list></call></expr></init></decl>;</decl_stmt>

		<decl_stmt pos:start="122:17" pos:end="122:68"><decl pos:start="122:17" pos:end="122:67"><type pos:start="122:17" pos:end="122:29"><name pos:start="122:17" pos:end="122:29">JsonPrimitive</name></type> <name pos:start="122:31" pos:end="122:31">x</name> <init pos:start="122:33" pos:end="122:67">= <expr pos:start="122:35" pos:end="122:67"><call pos:start="122:35" pos:end="122:67"><name pos:start="122:35" pos:end="122:62"><name pos:start="122:35" pos:end="122:43">locObject</name><operator pos:start="122:44" pos:end="122:44">.</operator><name pos:start="122:45" pos:end="122:62">getAsJsonPrimitive</name></name><argument_list pos:start="122:63" pos:end="122:67">(<argument pos:start="122:64" pos:end="122:66"><expr pos:start="122:64" pos:end="122:66"><literal type="string" pos:start="122:64" pos:end="122:66">"x"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<decl_stmt pos:start="123:17" pos:end="123:68"><decl pos:start="123:17" pos:end="123:67"><type pos:start="123:17" pos:end="123:29"><name pos:start="123:17" pos:end="123:29">JsonPrimitive</name></type> <name pos:start="123:31" pos:end="123:31">y</name> <init pos:start="123:33" pos:end="123:67">= <expr pos:start="123:35" pos:end="123:67"><call pos:start="123:35" pos:end="123:67"><name pos:start="123:35" pos:end="123:62"><name pos:start="123:35" pos:end="123:43">locObject</name><operator pos:start="123:44" pos:end="123:44">.</operator><name pos:start="123:45" pos:end="123:62">getAsJsonPrimitive</name></name><argument_list pos:start="123:63" pos:end="123:67">(<argument pos:start="123:64" pos:end="123:66"><expr pos:start="123:64" pos:end="123:66"><literal type="string" pos:start="123:64" pos:end="123:66">"y"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<decl_stmt pos:start="124:17" pos:end="124:68"><decl pos:start="124:17" pos:end="124:67"><type pos:start="124:17" pos:end="124:29"><name pos:start="124:17" pos:end="124:29">JsonPrimitive</name></type> <name pos:start="124:31" pos:end="124:31">z</name> <init pos:start="124:33" pos:end="124:67">= <expr pos:start="124:35" pos:end="124:67"><call pos:start="124:35" pos:end="124:67"><name pos:start="124:35" pos:end="124:62"><name pos:start="124:35" pos:end="124:43">locObject</name><operator pos:start="124:44" pos:end="124:44">.</operator><name pos:start="124:45" pos:end="124:62">getAsJsonPrimitive</name></name><argument_list pos:start="124:63" pos:end="124:67">(<argument pos:start="124:64" pos:end="124:66"><expr pos:start="124:64" pos:end="124:66"><literal type="string" pos:start="124:64" pos:end="124:66">"z"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

		<return pos:start="126:17" pos:end="126:87">return <expr pos:start="126:24" pos:end="126:86"><operator pos:start="126:24" pos:end="126:26">new</operator> <call pos:start="126:28" pos:end="126:86"><name pos:start="126:28" pos:end="126:35">Vector3D</name><argument_list pos:start="126:36" pos:end="126:86">(<argument pos:start="126:37" pos:end="126:51"><expr pos:start="126:37" pos:end="126:51"><call pos:start="126:37" pos:end="126:51"><name pos:start="126:37" pos:end="126:49"><name pos:start="126:37" pos:end="126:37">x</name><operator pos:start="126:38" pos:end="126:38">.</operator><name pos:start="126:39" pos:end="126:49">getAsDouble</name></name><argument_list pos:start="126:50" pos:end="126:51">()</argument_list></call></expr></argument>, <argument pos:start="126:54" pos:end="126:68"><expr pos:start="126:54" pos:end="126:68"><call pos:start="126:54" pos:end="126:68"><name pos:start="126:54" pos:end="126:66"><name pos:start="126:54" pos:end="126:54">y</name><operator pos:start="126:55" pos:end="126:55">.</operator><name pos:start="126:56" pos:end="126:66">getAsDouble</name></name><argument_list pos:start="126:67" pos:end="126:68">()</argument_list></call></expr></argument>, <argument pos:start="126:71" pos:end="126:85"><expr pos:start="126:71" pos:end="126:85"><call pos:start="126:71" pos:end="126:85"><name pos:start="126:71" pos:end="126:83"><name pos:start="126:71" pos:end="126:71">z</name><operator pos:start="126:72" pos:end="126:72">.</operator><name pos:start="126:73" pos:end="126:83">getAsDouble</name></name><argument_list pos:start="126:84" pos:end="126:85">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
	</block_content>}</block></function>

}</block></class>
</unit>
