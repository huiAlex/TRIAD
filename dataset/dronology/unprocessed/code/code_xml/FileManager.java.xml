<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="Java" filename="src/FileManager.java" pos:tabs="8"><package pos:start="1:1" pos:end="1:44">package <name pos:start="1:9" pos:end="1:43"><name pos:start="1:9" pos:end="1:11">edu</name><operator pos:start="1:12" pos:end="1:12">.</operator><name pos:start="1:13" pos:end="1:14">nd</name><operator pos:start="1:15" pos:end="1:15">.</operator><name pos:start="1:16" pos:end="1:24">dronology</name><operator pos:start="1:25" pos:end="1:25">.</operator><name pos:start="1:26" pos:end="1:33">services</name><operator pos:start="1:34" pos:end="1:34">.</operator><name pos:start="1:35" pos:end="1:38">core</name><operator pos:start="1:39" pos:end="1:39">.</operator><name pos:start="1:40" pos:end="1:43">util</name></name>;</package>

<import pos:start="3:1" pos:end="3:20">import <name pos:start="3:8" pos:end="3:19"><name pos:start="3:8" pos:end="3:11">java</name><operator pos:start="3:12" pos:end="3:12">.</operator><name pos:start="3:13" pos:end="3:14">io</name><operator pos:start="3:15" pos:end="3:15">.</operator><name pos:start="3:16" pos:end="3:19">File</name></name>;</import>
<import pos:start="4:1" pos:end="4:32">import <name pos:start="4:8" pos:end="4:31"><name pos:start="4:8" pos:end="4:11">java</name><operator pos:start="4:12" pos:end="4:12">.</operator><name pos:start="4:13" pos:end="4:14">io</name><operator pos:start="4:15" pos:end="4:15">.</operator><name pos:start="4:16" pos:end="4:31">FileOutputStream</name></name>;</import>
<import pos:start="5:1" pos:end="5:30">import <name pos:start="5:8" pos:end="5:29"><name pos:start="5:8" pos:end="5:11">java</name><operator pos:start="5:12" pos:end="5:12">.</operator><name pos:start="5:13" pos:end="5:14">io</name><operator pos:start="5:15" pos:end="5:15">.</operator><name pos:start="5:16" pos:end="5:29">FilenameFilter</name></name>;</import>
<import pos:start="6:1" pos:end="6:44">import <name pos:start="6:8" pos:end="6:43"><name pos:start="6:8" pos:end="6:11">java</name><operator pos:start="6:12" pos:end="6:12">.</operator><name pos:start="6:13" pos:end="6:16">util</name><operator pos:start="6:17" pos:end="6:17">.</operator><name pos:start="6:18" pos:end="6:27">concurrent</name><operator pos:start="6:28" pos:end="6:28">.</operator><name pos:start="6:29" pos:end="6:43">ExecutorService</name></name>;</import>
<import pos:start="7:1" pos:end="7:38">import <name pos:start="7:8" pos:end="7:37"><name pos:start="7:8" pos:end="7:11">java</name><operator pos:start="7:12" pos:end="7:12">.</operator><name pos:start="7:13" pos:end="7:16">util</name><operator pos:start="7:17" pos:end="7:17">.</operator><name pos:start="7:18" pos:end="7:27">concurrent</name><operator pos:start="7:28" pos:end="7:28">.</operator><name pos:start="7:29" pos:end="7:37">Executors</name></name>;</import>

<import pos:start="9:1" pos:end="9:64">import <name pos:start="9:8" pos:end="9:63"><name pos:start="9:8" pos:end="9:10">edu</name><operator pos:start="9:11" pos:end="9:11">.</operator><name pos:start="9:12" pos:end="9:13">nd</name><operator pos:start="9:14" pos:end="9:14">.</operator><name pos:start="9:15" pos:end="9:23">dronology</name><operator pos:start="9:24" pos:end="9:24">.</operator><name pos:start="9:25" pos:end="9:32">services</name><operator pos:start="9:33" pos:end="9:33">.</operator><name pos:start="9:34" pos:end="9:37">core</name><operator pos:start="9:38" pos:end="9:38">.</operator><name pos:start="9:39" pos:end="9:41">api</name><operator pos:start="9:42" pos:end="9:42">.</operator><name pos:start="9:43" pos:end="9:63">IFileChangeNotifyable</name></name>;</import>
<import pos:start="10:1" pos:end="10:38">import <name pos:start="10:8" pos:end="10:37"><name pos:start="10:8" pos:end="10:10">edu</name><operator pos:start="10:11" pos:end="10:11">.</operator><name pos:start="10:12" pos:end="10:13">nd</name><operator pos:start="10:14" pos:end="10:14">.</operator><name pos:start="10:15" pos:end="10:23">dronology</name><operator pos:start="10:24" pos:end="10:24">.</operator><name pos:start="10:25" pos:end="10:28">util</name><operator pos:start="10:29" pos:end="10:29">.</operator><name pos:start="10:30" pos:end="10:37">FileUtil</name></name>;</import>
<import pos:start="11:1" pos:end="11:48">import <name pos:start="11:8" pos:end="11:47"><name pos:start="11:8" pos:end="11:10">edu</name><operator pos:start="11:11" pos:end="11:11">.</operator><name pos:start="11:12" pos:end="11:13">nd</name><operator pos:start="11:14" pos:end="11:14">.</operator><name pos:start="11:15" pos:end="11:23">dronology</name><operator pos:start="11:24" pos:end="11:24">.</operator><name pos:start="11:25" pos:end="11:28">util</name><operator pos:start="11:29" pos:end="11:29">.</operator><name pos:start="11:30" pos:end="11:47">NamedThreadFactory</name></name>;</import>
<import pos:start="12:1" pos:end="12:30">import <name pos:start="12:8" pos:end="12:29"><name pos:start="12:8" pos:end="12:10">net</name><operator pos:start="12:11" pos:end="12:11">.</operator><name pos:start="12:12" pos:end="12:13">mv</name><operator pos:start="12:14" pos:end="12:14">.</operator><name pos:start="12:15" pos:end="12:21">logging</name><operator pos:start="12:22" pos:end="12:22">.</operator><name pos:start="12:23" pos:end="12:29">ILogger</name></name>;</import>
<import pos:start="13:1" pos:end="13:37">import <name pos:start="13:8" pos:end="13:36"><name pos:start="13:8" pos:end="13:10">net</name><operator pos:start="13:11" pos:end="13:11">.</operator><name pos:start="13:12" pos:end="13:13">mv</name><operator pos:start="13:14" pos:end="13:14">.</operator><name pos:start="13:15" pos:end="13:21">logging</name><operator pos:start="13:22" pos:end="13:22">.</operator><name pos:start="13:23" pos:end="13:36">LoggerProvider</name></name>;</import>

<class pos:start="15:1" pos:end="103:1"><specifier pos:start="15:1" pos:end="15:6">public</specifier> class <name pos:start="15:14" pos:end="15:24">FileManager</name> <block pos:start="15:26" pos:end="103:1">{

	<decl_stmt pos:start="17:9" pos:end="17:90"><decl pos:start="17:9" pos:end="17:89"><type pos:start="17:9" pos:end="17:36"><specifier pos:start="17:9" pos:end="17:15">private</specifier> <specifier pos:start="17:17" pos:end="17:22">static</specifier> <specifier pos:start="17:24" pos:end="17:28">final</specifier> <name pos:start="17:30" pos:end="17:36">ILogger</name></type> <name pos:start="17:38" pos:end="17:43">LOGGER</name> <init pos:start="17:45" pos:end="17:89">= <expr pos:start="17:47" pos:end="17:89"><call pos:start="17:47" pos:end="17:89"><name pos:start="17:47" pos:end="17:70"><name pos:start="17:47" pos:end="17:60">LoggerProvider</name><operator pos:start="17:61" pos:end="17:61">.</operator><name pos:start="17:62" pos:end="17:70">getLogger</name></name><argument_list pos:start="17:71" pos:end="17:89">(<argument pos:start="17:72" pos:end="17:88"><expr pos:start="17:72" pos:end="17:88"><name pos:start="17:72" pos:end="17:88"><name pos:start="17:72" pos:end="17:82">FileManager</name><operator pos:start="17:83" pos:end="17:83">.</operator><name pos:start="17:84" pos:end="17:88">class</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<decl_stmt pos:start="18:9" pos:end="19:75"><decl pos:start="18:9" pos:end="19:74"><type pos:start="18:9" pos:end="18:44"><specifier pos:start="18:9" pos:end="18:15">private</specifier> <specifier pos:start="18:17" pos:end="18:22">static</specifier> <specifier pos:start="18:24" pos:end="18:28">final</specifier> <name pos:start="18:30" pos:end="18:44">ExecutorService</name></type> <name pos:start="18:46" pos:end="18:61">EXECUTOR_SERVICE</name> <init pos:start="18:63" pos:end="19:74">= <expr pos:start="18:65" pos:end="19:74"><call pos:start="18:65" pos:end="19:74"><name pos:start="18:65" pos:end="18:92"><name pos:start="18:65" pos:end="18:73">Executors</name><operator pos:start="18:74" pos:end="18:74">.</operator><name pos:start="18:75" pos:end="18:92">newFixedThreadPool</name></name><argument_list pos:start="18:93" pos:end="19:74">(<argument pos:start="18:94" pos:end="18:95"><expr pos:start="18:94" pos:end="18:95"><literal type="number" pos:start="18:94" pos:end="18:95">20</literal></expr></argument>,
			<argument pos:start="19:25" pos:end="19:73"><expr pos:start="19:25" pos:end="19:73"><operator pos:start="19:25" pos:end="19:27">new</operator> <call pos:start="19:29" pos:end="19:73"><name pos:start="19:29" pos:end="19:46">NamedThreadFactory</name><argument_list pos:start="19:47" pos:end="19:73">(<argument pos:start="19:48" pos:end="19:72"><expr pos:start="19:48" pos:end="19:72"><literal type="string" pos:start="19:48" pos:end="19:72">"Directory-WatchServices"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

	<decl_stmt pos:start="21:9" pos:end="21:52"><decl pos:start="21:9" pos:end="21:51"><type pos:start="21:9" pos:end="21:34"><specifier pos:start="21:9" pos:end="21:15">private</specifier> <name pos:start="21:17" pos:end="21:34">WatchServiceRunner</name></type> <name pos:start="21:36" pos:end="21:51">directoryWatcher</name></decl>;</decl_stmt>
	<decl_stmt pos:start="22:9" pos:end="22:33"><decl pos:start="22:9" pos:end="22:32"><type pos:start="22:9" pos:end="22:22"><specifier pos:start="22:9" pos:end="22:15">private</specifier> <name pos:start="22:17" pos:end="22:22">String</name></type> <name pos:start="22:24" pos:end="22:32">extension</name></decl>;</decl_stmt>
	<decl_stmt pos:start="23:9" pos:end="23:28"><decl pos:start="23:9" pos:end="23:27"><type pos:start="23:9" pos:end="23:22"><specifier pos:start="23:9" pos:end="23:15">private</specifier> <name pos:start="23:17" pos:end="23:22">String</name></type> <name pos:start="23:24" pos:end="23:27">path</name></decl>;</decl_stmt>

	<constructor pos:start="25:9" pos:end="33:9"><specifier pos:start="25:9" pos:end="25:14">public</specifier> <name pos:start="25:16" pos:end="25:26">FileManager</name><parameter_list pos:start="25:27" pos:end="25:95">(<parameter pos:start="25:28" pos:end="25:63"><decl pos:start="25:28" pos:end="25:63"><type pos:start="25:28" pos:end="25:63"><specifier pos:start="25:28" pos:end="25:32">final</specifier> <name pos:start="25:34" pos:end="25:54">IFileChangeNotifyable</name></type> <name pos:start="25:56" pos:end="25:63">instance</name></decl></parameter>, <parameter pos:start="25:66" pos:end="25:76"><decl pos:start="25:66" pos:end="25:76"><type pos:start="25:66" pos:end="25:76"><name pos:start="25:66" pos:end="25:71">String</name></type> <name pos:start="25:73" pos:end="25:76">path</name></decl></parameter>, <parameter pos:start="25:79" pos:end="25:94"><decl pos:start="25:79" pos:end="25:94"><type pos:start="25:79" pos:end="25:94"><name pos:start="25:79" pos:end="25:84">String</name></type> <name pos:start="25:86" pos:end="25:94">extension</name></decl></parameter>)</parameter_list> <block pos:start="25:97" pos:end="33:9">{<block_content pos:start="26:17" pos:end="31:58">
		<expr_stmt pos:start="26:17" pos:end="26:33"><expr pos:start="26:17" pos:end="26:32"><name pos:start="26:17" pos:end="26:25"><name pos:start="26:17" pos:end="26:20">this</name><operator pos:start="26:21" pos:end="26:21">.</operator><name pos:start="26:22" pos:end="26:25">path</name></name> <operator pos:start="26:27" pos:end="26:27">=</operator> <name pos:start="26:29" pos:end="26:32">path</name></expr>;</expr_stmt>
		<expr_stmt pos:start="27:17" pos:end="27:43"><expr pos:start="27:17" pos:end="27:42"><name pos:start="27:17" pos:end="27:30"><name pos:start="27:17" pos:end="27:20">this</name><operator pos:start="27:21" pos:end="27:21">.</operator><name pos:start="27:22" pos:end="27:30">extension</name></name> <operator pos:start="27:32" pos:end="27:32">=</operator> <name pos:start="27:34" pos:end="27:42">extension</name></expr>;</expr_stmt>
		<expr_stmt pos:start="28:17" pos:end="28:32"><expr pos:start="28:17" pos:end="28:31"><call pos:start="28:17" pos:end="28:31"><name pos:start="28:17" pos:end="28:29">initWorkspace</name><argument_list pos:start="28:30" pos:end="28:31">()</argument_list></call></expr>;</expr_stmt>

		<expr_stmt pos:start="30:17" pos:end="30:92"><expr pos:start="30:17" pos:end="30:91"><name pos:start="30:17" pos:end="30:32">directoryWatcher</name> <operator pos:start="30:34" pos:end="30:34">=</operator> <operator pos:start="30:36" pos:end="30:38">new</operator> <call pos:start="30:40" pos:end="30:91"><name pos:start="30:40" pos:end="30:57">WatchServiceRunner</name><argument_list pos:start="30:58" pos:end="30:91">(<argument pos:start="30:59" pos:end="30:62"><expr pos:start="30:59" pos:end="30:62"><name pos:start="30:59" pos:end="30:62">path</name></expr></argument>, <argument pos:start="30:65" pos:end="30:69"><expr pos:start="30:65" pos:end="30:69"><literal type="boolean" pos:start="30:65" pos:end="30:69">false</literal></expr></argument>, <argument pos:start="30:72" pos:end="30:79"><expr pos:start="30:72" pos:end="30:79"><name pos:start="30:72" pos:end="30:79">instance</name></expr></argument>, <argument pos:start="30:82" pos:end="30:90"><expr pos:start="30:82" pos:end="30:90"><name pos:start="30:82" pos:end="30:90">extension</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt pos:start="31:17" pos:end="31:58"><expr pos:start="31:17" pos:end="31:57"><call pos:start="31:17" pos:end="31:57"><name pos:start="31:17" pos:end="31:39"><name pos:start="31:17" pos:end="31:32">EXECUTOR_SERVICE</name><operator pos:start="31:33" pos:end="31:33">.</operator><name pos:start="31:34" pos:end="31:39">submit</name></name><argument_list pos:start="31:40" pos:end="31:57">(<argument pos:start="31:41" pos:end="31:56"><expr pos:start="31:41" pos:end="31:56"><name pos:start="31:41" pos:end="31:56">directoryWatcher</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	</block_content>}</block></constructor>

	<function pos:start="35:9" pos:end="41:9"><type pos:start="35:9" pos:end="35:20"><specifier pos:start="35:9" pos:end="35:15">private</specifier> <name pos:start="35:17" pos:end="35:20">void</name></type> <name pos:start="35:22" pos:end="35:34">initWorkspace</name><parameter_list pos:start="35:35" pos:end="35:36">()</parameter_list> <block pos:start="35:38" pos:end="41:9">{<block_content pos:start="36:17" pos:end="39:17">
		<decl_stmt pos:start="36:17" pos:end="36:40"><decl pos:start="36:17" pos:end="36:39"><type pos:start="36:17" pos:end="36:20"><name pos:start="36:17" pos:end="36:20">File</name></type> <name pos:start="36:22" pos:end="36:22">f</name> <init pos:start="36:24" pos:end="36:39">= <expr pos:start="36:26" pos:end="36:39"><operator pos:start="36:26" pos:end="36:28">new</operator> <call pos:start="36:30" pos:end="36:39"><name pos:start="36:30" pos:end="36:33">File</name><argument_list pos:start="36:34" pos:end="36:39">(<argument pos:start="36:35" pos:end="36:38"><expr pos:start="36:35" pos:end="36:38"><name pos:start="36:35" pos:end="36:38">path</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<if_stmt pos:start="37:17" pos:end="39:17"><if pos:start="37:17" pos:end="39:17">if <condition pos:start="37:20" pos:end="37:32">(<expr pos:start="37:21" pos:end="37:31"><operator pos:start="37:21" pos:end="37:21">!</operator><call pos:start="37:22" pos:end="37:31"><name pos:start="37:22" pos:end="37:29"><name pos:start="37:22" pos:end="37:22">f</name><operator pos:start="37:23" pos:end="37:23">.</operator><name pos:start="37:24" pos:end="37:29">exists</name></name><argument_list pos:start="37:30" pos:end="37:31">()</argument_list></call></expr>)</condition> <block pos:start="37:34" pos:end="39:17">{<block_content pos:start="38:25" pos:end="38:35">
			<expr_stmt pos:start="38:25" pos:end="38:35"><expr pos:start="38:25" pos:end="38:34"><call pos:start="38:25" pos:end="38:34"><name pos:start="38:25" pos:end="38:32"><name pos:start="38:25" pos:end="38:25">f</name><operator pos:start="38:26" pos:end="38:26">.</operator><name pos:start="38:27" pos:end="38:32">mkdirs</name></name><argument_list pos:start="38:33" pos:end="38:34">()</argument_list></call></expr>;</expr_stmt>
		</block_content>}</block></if></if_stmt>

	</block_content>}</block></function>

	<function pos:start="43:9" pos:end="58:9"><type pos:start="43:9" pos:end="43:21"><specifier pos:start="43:9" pos:end="43:14">public</specifier> <name pos:start="43:16" pos:end="43:21"><name pos:start="43:16" pos:end="43:19">byte</name><index pos:start="43:20" pos:end="43:21">[]</index></name></type> <name pos:start="43:23" pos:end="43:40">getFileAsByteArray</name><parameter_list pos:start="43:41" pos:end="43:55">(<parameter pos:start="43:42" pos:end="43:54"><decl pos:start="43:42" pos:end="43:54"><type pos:start="43:42" pos:end="43:47"><name pos:start="43:42" pos:end="43:47">String</name></type> <name pos:start="43:49" pos:end="43:54">fileId</name></decl></parameter>)</parameter_list> <throws pos:start="43:57" pos:end="43:88">throws <argument pos:start="43:64" pos:end="43:88"><expr pos:start="43:64" pos:end="43:88"><name pos:start="43:64" pos:end="43:88">DronologyServiceException</name></expr></argument></throws> <block pos:start="43:90" pos:end="58:9">{<block_content pos:start="44:17" pos:end="56:31">
		<expr_stmt pos:start="44:17" pos:end="44:63"><expr pos:start="44:17" pos:end="44:62"><call pos:start="44:17" pos:end="44:62"><name pos:start="44:17" pos:end="44:27"><name pos:start="44:17" pos:end="44:22">LOGGER</name><operator pos:start="44:23" pos:end="44:23">.</operator><name pos:start="44:24" pos:end="44:27">info</name></name><argument_list pos:start="44:28" pos:end="44:62">(<argument pos:start="44:29" pos:end="44:61"><expr pos:start="44:29" pos:end="44:61"><literal type="string" pos:start="44:29" pos:end="44:36">"File '"</literal> <operator pos:start="44:38" pos:end="44:38">+</operator> <name pos:start="44:40" pos:end="44:45">fileId</name> <operator pos:start="44:47" pos:end="44:47">+</operator> <literal type="string" pos:start="44:49" pos:end="44:61">"' requested"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		<decl_stmt pos:start="46:17" pos:end="46:87"><decl pos:start="46:17" pos:end="46:86"><type pos:start="46:17" pos:end="46:22"><name pos:start="46:17" pos:end="46:22">String</name></type> <name pos:start="46:24" pos:end="46:35">savelocation</name> <init pos:start="46:37" pos:end="46:86">= <expr pos:start="46:39" pos:end="46:86"><name pos:start="46:39" pos:end="46:42">path</name> <operator pos:start="46:44" pos:end="46:44">+</operator> <name pos:start="46:46" pos:end="46:59"><name pos:start="46:46" pos:end="46:49">File</name><operator pos:start="46:50" pos:end="46:50">.</operator><name pos:start="46:51" pos:end="46:59">separator</name></name> <operator pos:start="46:61" pos:end="46:61">+</operator> <name pos:start="46:63" pos:end="46:68">fileId</name> <operator pos:start="46:70" pos:end="46:70">+</operator> <literal type="string" pos:start="46:72" pos:end="46:74">"."</literal> <operator pos:start="46:76" pos:end="46:76">+</operator> <name pos:start="46:78" pos:end="46:86">extension</name></expr></init></decl>;</decl_stmt>
		<decl_stmt pos:start="47:17" pos:end="47:48"><decl pos:start="47:17" pos:end="47:47"><type pos:start="47:17" pos:end="47:20"><name pos:start="47:17" pos:end="47:20">File</name></type> <name pos:start="47:22" pos:end="47:22">f</name> <init pos:start="47:24" pos:end="47:47">= <expr pos:start="47:26" pos:end="47:47"><operator pos:start="47:26" pos:end="47:28">new</operator> <call pos:start="47:30" pos:end="47:47"><name pos:start="47:30" pos:end="47:33">File</name><argument_list pos:start="47:34" pos:end="47:47">(<argument pos:start="47:35" pos:end="47:46"><expr pos:start="47:35" pos:end="47:46"><name pos:start="47:35" pos:end="47:46">savelocation</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<if_stmt pos:start="48:17" pos:end="51:17"><if pos:start="48:17" pos:end="51:17">if <condition pos:start="48:20" pos:end="48:32">(<expr pos:start="48:21" pos:end="48:31"><operator pos:start="48:21" pos:end="48:21">!</operator><call pos:start="48:22" pos:end="48:31"><name pos:start="48:22" pos:end="48:29"><name pos:start="48:22" pos:end="48:22">f</name><operator pos:start="48:23" pos:end="48:23">.</operator><name pos:start="48:24" pos:end="48:29">exists</name></name><argument_list pos:start="48:30" pos:end="48:31">()</argument_list></call></expr>)</condition> <block pos:start="48:34" pos:end="51:17">{<block_content pos:start="49:25" pos:end="50:109">
			<expr_stmt pos:start="49:25" pos:end="49:71"><expr pos:start="49:25" pos:end="49:70"><call pos:start="49:25" pos:end="49:70"><name pos:start="49:25" pos:end="49:35"><name pos:start="49:25" pos:end="49:30">LOGGER</name><operator pos:start="49:31" pos:end="49:31">.</operator><name pos:start="49:32" pos:end="49:35">info</name></name><argument_list pos:start="49:36" pos:end="49:70">(<argument pos:start="49:37" pos:end="49:69"><expr pos:start="49:37" pos:end="49:69"><literal type="string" pos:start="49:37" pos:end="49:54">"File not found: "</literal> <operator pos:start="49:56" pos:end="49:56">+</operator> <name pos:start="49:58" pos:end="49:69">savelocation</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<throw pos:start="50:25" pos:end="50:109">throw <expr pos:start="50:31" pos:end="50:108"><operator pos:start="50:31" pos:end="50:33">new</operator> <call pos:start="50:35" pos:end="50:108"><name pos:start="50:35" pos:end="50:59">DronologyServiceException</name><argument_list pos:start="50:60" pos:end="50:108">(<argument pos:start="50:61" pos:end="50:107"><expr pos:start="50:61" pos:end="50:107"><literal type="string" pos:start="50:61" pos:end="50:67">"File "</literal> <operator pos:start="50:69" pos:end="50:69">+</operator> <name pos:start="50:71" pos:end="50:76">fileId</name> <operator pos:start="50:78" pos:end="50:78">+</operator> <literal type="string" pos:start="50:80" pos:end="50:107">" does not exist on server!"</literal></expr></argument>)</argument_list></call></expr>;</throw>
		</block_content>}</block></if></if_stmt>
		<decl_stmt pos:start="52:17" pos:end="52:57"><decl pos:start="52:17" pos:end="52:56"><type pos:start="52:17" pos:end="52:22"><name pos:start="52:17" pos:end="52:22"><name pos:start="52:17" pos:end="52:20">byte</name><index pos:start="52:21" pos:end="52:22">[]</index></name></type> <name pos:start="52:24" pos:end="52:30">content</name> <init pos:start="52:32" pos:end="52:56">= <expr pos:start="52:34" pos:end="52:56"><call pos:start="52:34" pos:end="52:56"><name pos:start="52:34" pos:end="52:53"><name pos:start="52:34" pos:end="52:41">FileUtil</name><operator pos:start="52:42" pos:end="52:42">.</operator><name pos:start="52:43" pos:end="52:53">toByteArray</name></name><argument_list pos:start="52:54" pos:end="52:56">(<argument pos:start="52:55" pos:end="52:55"><expr pos:start="52:55" pos:end="52:55"><name pos:start="52:55" pos:end="52:55">f</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<if_stmt pos:start="53:17" pos:end="55:17"><if pos:start="53:17" pos:end="55:17">if <condition pos:start="53:20" pos:end="53:40">(<expr pos:start="53:21" pos:end="53:39"><name pos:start="53:21" pos:end="53:34"><name pos:start="53:21" pos:end="53:27">content</name><operator pos:start="53:28" pos:end="53:28">.</operator><name pos:start="53:29" pos:end="53:34">length</name></name> <operator pos:start="53:36" pos:end="53:37">==</operator> <literal type="number" pos:start="53:39" pos:end="53:39">0</literal></expr>)</condition> <block pos:start="53:42" pos:end="55:17">{<block_content pos:start="54:25" pos:end="54:97">
			<throw pos:start="54:25" pos:end="54:97">throw <expr pos:start="54:31" pos:end="54:96"><operator pos:start="54:31" pos:end="54:33">new</operator> <call pos:start="54:35" pos:end="54:96"><name pos:start="54:35" pos:end="54:59">DronologyServiceException</name><argument_list pos:start="54:60" pos:end="54:96">(<argument pos:start="54:61" pos:end="54:95"><expr pos:start="54:61" pos:end="54:95"><literal type="string" pos:start="54:61" pos:end="54:86">"Error when reading file "</literal> <operator pos:start="54:88" pos:end="54:88">+</operator> <name pos:start="54:90" pos:end="54:95">fileId</name></expr></argument>)</argument_list></call></expr>;</throw>
		</block_content>}</block></if></if_stmt>
		<return pos:start="56:17" pos:end="56:31">return <expr pos:start="56:24" pos:end="56:30"><name pos:start="56:24" pos:end="56:30">content</name></expr>;</return>

	</block_content>}</block></function>

	<function pos:start="60:9" pos:end="70:9"><type pos:start="60:9" pos:end="60:19"><specifier pos:start="60:9" pos:end="60:14">public</specifier> <name pos:start="60:16" pos:end="60:19">File</name></type> <name pos:start="60:21" pos:end="60:27">getFile</name><parameter_list pos:start="60:28" pos:end="60:42">(<parameter pos:start="60:29" pos:end="60:41"><decl pos:start="60:29" pos:end="60:41"><type pos:start="60:29" pos:end="60:34"><name pos:start="60:29" pos:end="60:34">String</name></type> <name pos:start="60:36" pos:end="60:41">fileId</name></decl></parameter>)</parameter_list> <throws pos:start="60:44" pos:end="60:75">throws <argument pos:start="60:51" pos:end="60:75"><expr pos:start="60:51" pos:end="60:75"><name pos:start="60:51" pos:end="60:75">DronologyServiceException</name></expr></argument></throws> <block pos:start="60:77" pos:end="70:9">{<block_content pos:start="61:17" pos:end="69:25">
		<expr_stmt pos:start="61:17" pos:end="61:63"><expr pos:start="61:17" pos:end="61:62"><call pos:start="61:17" pos:end="61:62"><name pos:start="61:17" pos:end="61:27"><name pos:start="61:17" pos:end="61:22">LOGGER</name><operator pos:start="61:23" pos:end="61:23">.</operator><name pos:start="61:24" pos:end="61:27">info</name></name><argument_list pos:start="61:28" pos:end="61:62">(<argument pos:start="61:29" pos:end="61:61"><expr pos:start="61:29" pos:end="61:61"><literal type="string" pos:start="61:29" pos:end="61:36">"File '"</literal> <operator pos:start="61:38" pos:end="61:38">+</operator> <name pos:start="61:40" pos:end="61:45">fileId</name> <operator pos:start="61:47" pos:end="61:47">+</operator> <literal type="string" pos:start="61:49" pos:end="61:61">"' requested"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		<decl_stmt pos:start="63:17" pos:end="63:87"><decl pos:start="63:17" pos:end="63:86"><type pos:start="63:17" pos:end="63:22"><name pos:start="63:17" pos:end="63:22">String</name></type> <name pos:start="63:24" pos:end="63:35">savelocation</name> <init pos:start="63:37" pos:end="63:86">= <expr pos:start="63:39" pos:end="63:86"><name pos:start="63:39" pos:end="63:42">path</name> <operator pos:start="63:44" pos:end="63:44">+</operator> <name pos:start="63:46" pos:end="63:59"><name pos:start="63:46" pos:end="63:49">File</name><operator pos:start="63:50" pos:end="63:50">.</operator><name pos:start="63:51" pos:end="63:59">separator</name></name> <operator pos:start="63:61" pos:end="63:61">+</operator> <name pos:start="63:63" pos:end="63:68">fileId</name> <operator pos:start="63:70" pos:end="63:70">+</operator> <literal type="string" pos:start="63:72" pos:end="63:74">"."</literal> <operator pos:start="63:76" pos:end="63:76">+</operator> <name pos:start="63:78" pos:end="63:86">extension</name></expr></init></decl>;</decl_stmt>
		<decl_stmt pos:start="64:17" pos:end="64:48"><decl pos:start="64:17" pos:end="64:47"><type pos:start="64:17" pos:end="64:20"><name pos:start="64:17" pos:end="64:20">File</name></type> <name pos:start="64:22" pos:end="64:22">f</name> <init pos:start="64:24" pos:end="64:47">= <expr pos:start="64:26" pos:end="64:47"><operator pos:start="64:26" pos:end="64:28">new</operator> <call pos:start="64:30" pos:end="64:47"><name pos:start="64:30" pos:end="64:33">File</name><argument_list pos:start="64:34" pos:end="64:47">(<argument pos:start="64:35" pos:end="64:46"><expr pos:start="64:35" pos:end="64:46"><name pos:start="64:35" pos:end="64:46">savelocation</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<if_stmt pos:start="65:17" pos:end="68:17"><if pos:start="65:17" pos:end="68:17">if <condition pos:start="65:20" pos:end="65:32">(<expr pos:start="65:21" pos:end="65:31"><operator pos:start="65:21" pos:end="65:21">!</operator><call pos:start="65:22" pos:end="65:31"><name pos:start="65:22" pos:end="65:29"><name pos:start="65:22" pos:end="65:22">f</name><operator pos:start="65:23" pos:end="65:23">.</operator><name pos:start="65:24" pos:end="65:29">exists</name></name><argument_list pos:start="65:30" pos:end="65:31">()</argument_list></call></expr>)</condition> <block pos:start="65:34" pos:end="68:17">{<block_content pos:start="66:25" pos:end="67:109">
			<expr_stmt pos:start="66:25" pos:end="66:71"><expr pos:start="66:25" pos:end="66:70"><call pos:start="66:25" pos:end="66:70"><name pos:start="66:25" pos:end="66:35"><name pos:start="66:25" pos:end="66:30">LOGGER</name><operator pos:start="66:31" pos:end="66:31">.</operator><name pos:start="66:32" pos:end="66:35">info</name></name><argument_list pos:start="66:36" pos:end="66:70">(<argument pos:start="66:37" pos:end="66:69"><expr pos:start="66:37" pos:end="66:69"><literal type="string" pos:start="66:37" pos:end="66:54">"File not found: "</literal> <operator pos:start="66:56" pos:end="66:56">+</operator> <name pos:start="66:58" pos:end="66:69">savelocation</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<throw pos:start="67:25" pos:end="67:109">throw <expr pos:start="67:31" pos:end="67:108"><operator pos:start="67:31" pos:end="67:33">new</operator> <call pos:start="67:35" pos:end="67:108"><name pos:start="67:35" pos:end="67:59">DronologyServiceException</name><argument_list pos:start="67:60" pos:end="67:108">(<argument pos:start="67:61" pos:end="67:107"><expr pos:start="67:61" pos:end="67:107"><literal type="string" pos:start="67:61" pos:end="67:67">"File "</literal> <operator pos:start="67:69" pos:end="67:69">+</operator> <name pos:start="67:71" pos:end="67:76">fileId</name> <operator pos:start="67:78" pos:end="67:78">+</operator> <literal type="string" pos:start="67:80" pos:end="67:107">" does not exist on server!"</literal></expr></argument>)</argument_list></call></expr>;</throw>
		</block_content>}</block></if></if_stmt>
		<return pos:start="69:17" pos:end="69:25">return <expr pos:start="69:24" pos:end="69:24"><name pos:start="69:24" pos:end="69:24">f</name></expr>;</return>
	</block_content>}</block></function>

	<function pos:start="72:9" pos:end="83:9"><type pos:start="72:9" pos:end="72:22"><specifier pos:start="72:9" pos:end="72:14">public</specifier> <name pos:start="72:16" pos:end="72:22">boolean</name></type> <name pos:start="72:24" pos:end="72:42">saveByteArrayToFile</name><parameter_list pos:start="72:43" pos:end="72:69">(<parameter pos:start="72:44" pos:end="72:52"><decl pos:start="72:44" pos:end="72:52"><type pos:start="72:44" pos:end="72:52"><name pos:start="72:44" pos:end="72:49">String</name></type> <name pos:start="72:51" pos:end="72:52">id</name></decl></parameter>, <parameter pos:start="72:55" pos:end="72:68"><decl pos:start="72:55" pos:end="72:68"><type pos:start="72:55" pos:end="72:68"><name pos:start="72:55" pos:end="72:60"><name pos:start="72:55" pos:end="72:58">byte</name><index pos:start="72:59" pos:end="72:60">[]</index></name></type> <name pos:start="72:62" pos:end="72:68">content</name></decl></parameter>)</parameter_list> <block pos:start="72:71" pos:end="83:9">{<block_content pos:start="73:17" pos:end="81:64">
		<expr_stmt pos:start="73:17" pos:end="73:58"><expr pos:start="73:17" pos:end="73:57"><call pos:start="73:17" pos:end="73:57"><name pos:start="73:17" pos:end="73:27"><name pos:start="73:17" pos:end="73:22">LOGGER</name><operator pos:start="73:23" pos:end="73:23">.</operator><name pos:start="73:24" pos:end="73:27">info</name></name><argument_list pos:start="73:28" pos:end="73:57">(<argument pos:start="73:29" pos:end="73:56"><expr pos:start="73:29" pos:end="73:56"><literal type="string" pos:start="73:29" pos:end="73:36">"File '"</literal> <operator pos:start="73:38" pos:end="73:38">+</operator> <name pos:start="73:40" pos:end="73:41">id</name> <operator pos:start="73:43" pos:end="73:43">+</operator> <literal type="string" pos:start="73:45" pos:end="73:56">"' received"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<decl_stmt pos:start="74:17" pos:end="74:47"><decl pos:start="74:17" pos:end="74:46"><type pos:start="74:17" pos:end="74:32"><name pos:start="74:17" pos:end="74:32">FileOutputStream</name></type> <name pos:start="74:34" pos:end="74:39">stream</name> <init pos:start="74:41" pos:end="74:46">= <expr pos:start="74:43" pos:end="74:46"><literal type="null" pos:start="74:43" pos:end="74:46">null</literal></expr></init></decl>;</decl_stmt>
		<decl_stmt pos:start="75:17" pos:end="75:83"><decl pos:start="75:17" pos:end="75:82"><type pos:start="75:17" pos:end="75:22"><name pos:start="75:17" pos:end="75:22">String</name></type> <name pos:start="75:24" pos:end="75:35">savelocation</name> <init pos:start="75:37" pos:end="75:82">= <expr pos:start="75:39" pos:end="75:82"><name pos:start="75:39" pos:end="75:42">path</name> <operator pos:start="75:44" pos:end="75:44">+</operator> <name pos:start="75:46" pos:end="75:59"><name pos:start="75:46" pos:end="75:49">File</name><operator pos:start="75:50" pos:end="75:50">.</operator><name pos:start="75:51" pos:end="75:59">separator</name></name> <operator pos:start="75:61" pos:end="75:61">+</operator> <name pos:start="75:63" pos:end="75:64">id</name> <operator pos:start="75:66" pos:end="75:66">+</operator> <literal type="string" pos:start="75:68" pos:end="75:70">"."</literal> <operator pos:start="75:72" pos:end="75:72">+</operator> <name pos:start="75:74" pos:end="75:82">extension</name></expr></init></decl>;</decl_stmt>
		<decl_stmt pos:start="76:17" pos:end="76:48"><decl pos:start="76:17" pos:end="76:47"><type pos:start="76:17" pos:end="76:20"><name pos:start="76:17" pos:end="76:20">File</name></type> <name pos:start="76:22" pos:end="76:22">f</name> <init pos:start="76:24" pos:end="76:47">= <expr pos:start="76:26" pos:end="76:47"><operator pos:start="76:26" pos:end="76:28">new</operator> <call pos:start="76:30" pos:end="76:47"><name pos:start="76:30" pos:end="76:33">File</name><argument_list pos:start="76:34" pos:end="76:47">(<argument pos:start="76:35" pos:end="76:46"><expr pos:start="76:35" pos:end="76:46"><name pos:start="76:35" pos:end="76:46">savelocation</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<if_stmt pos:start="77:17" pos:end="80:17"><if pos:start="77:17" pos:end="80:17">if <condition pos:start="77:20" pos:end="77:31">(<expr pos:start="77:21" pos:end="77:30"><call pos:start="77:21" pos:end="77:30"><name pos:start="77:21" pos:end="77:28"><name pos:start="77:21" pos:end="77:21">f</name><operator pos:start="77:22" pos:end="77:22">.</operator><name pos:start="77:23" pos:end="77:28">exists</name></name><argument_list pos:start="77:29" pos:end="77:30">()</argument_list></call></expr>)</condition> <block pos:start="77:33" pos:end="80:17">{<block_content pos:start="78:25" pos:end="79:35">
			<expr_stmt pos:start="78:25" pos:end="78:57"><expr pos:start="78:25" pos:end="78:56"><call pos:start="78:25" pos:end="78:56"><name pos:start="78:25" pos:end="78:35"><name pos:start="78:25" pos:end="78:30">LOGGER</name><operator pos:start="78:31" pos:end="78:31">.</operator><name pos:start="78:32" pos:end="78:35">info</name></name><argument_list pos:start="78:36" pos:end="78:56">(<argument pos:start="78:37" pos:end="78:55"><expr pos:start="78:37" pos:end="78:55"><literal type="string" pos:start="78:37" pos:end="78:55">"Deleting old file"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt pos:start="79:25" pos:end="79:35"><expr pos:start="79:25" pos:end="79:34"><call pos:start="79:25" pos:end="79:34"><name pos:start="79:25" pos:end="79:32"><name pos:start="79:25" pos:end="79:25">f</name><operator pos:start="79:26" pos:end="79:26">.</operator><name pos:start="79:27" pos:end="79:32">delete</name></name><argument_list pos:start="79:33" pos:end="79:34">()</argument_list></call></expr>;</expr_stmt>
		</block_content>}</block></if></if_stmt>
		<return pos:start="81:17" pos:end="81:64">return <expr pos:start="81:24" pos:end="81:63"><call pos:start="81:24" pos:end="81:63"><name pos:start="81:24" pos:end="81:51"><name pos:start="81:24" pos:end="81:31">FileUtil</name><operator pos:start="81:32" pos:end="81:32">.</operator><name pos:start="81:33" pos:end="81:51">saveByteArrayToFile</name></name><argument_list pos:start="81:52" pos:end="81:63">(<argument pos:start="81:53" pos:end="81:53"><expr pos:start="81:53" pos:end="81:53"><name pos:start="81:53" pos:end="81:53">f</name></expr></argument>, <argument pos:start="81:56" pos:end="81:62"><expr pos:start="81:56" pos:end="81:62"><name pos:start="81:56" pos:end="81:62">content</name></expr></argument>)</argument_list></call></expr>;</return>

	</block_content>}</block></function>

	<function pos:start="85:9" pos:end="97:9"><type pos:start="85:9" pos:end="85:21"><specifier pos:start="85:9" pos:end="85:14">public</specifier> <name pos:start="85:16" pos:end="85:21"><name pos:start="85:16" pos:end="85:19">File</name><index pos:start="85:20" pos:end="85:21">[]</index></name></type> <name pos:start="85:23" pos:end="85:31">loadFiles</name><parameter_list pos:start="85:32" pos:end="85:33">()</parameter_list> <block pos:start="85:35" pos:end="97:9">{<block_content pos:start="86:17" pos:end="95:29">
		<expr_stmt pos:start="86:17" pos:end="86:98"><expr pos:start="86:17" pos:end="86:97"><call pos:start="86:17" pos:end="86:97"><name pos:start="86:17" pos:end="86:27"><name pos:start="86:17" pos:end="86:22">LOGGER</name><operator pos:start="86:23" pos:end="86:23">.</operator><name pos:start="86:24" pos:end="86:27">info</name></name><argument_list pos:start="86:28" pos:end="86:97">(<argument pos:start="86:29" pos:end="86:96"><expr pos:start="86:29" pos:end="86:96"><literal type="string" pos:start="86:29" pos:end="86:57">"Loading Files | extension:'"</literal> <operator pos:start="86:59" pos:end="86:59">+</operator> <name pos:start="86:61" pos:end="86:69">extension</name> <operator pos:start="86:71" pos:end="86:71">+</operator> <literal type="string" pos:start="86:73" pos:end="86:83">"' path: ["</literal> <operator pos:start="86:85" pos:end="86:85">+</operator> <name pos:start="86:87" pos:end="86:90">path</name> <operator pos:start="86:92" pos:end="86:92">+</operator> <literal type="string" pos:start="86:94" pos:end="86:96">"]"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<decl_stmt pos:start="87:17" pos:end="87:40"><decl pos:start="87:17" pos:end="87:39"><type pos:start="87:17" pos:end="87:20"><name pos:start="87:17" pos:end="87:20">File</name></type> <name pos:start="87:22" pos:end="87:22">f</name> <init pos:start="87:24" pos:end="87:39">= <expr pos:start="87:26" pos:end="87:39"><operator pos:start="87:26" pos:end="87:28">new</operator> <call pos:start="87:30" pos:end="87:39"><name pos:start="87:30" pos:end="87:33">File</name><argument_list pos:start="87:34" pos:end="87:39">(<argument pos:start="87:35" pos:end="87:38"><expr pos:start="87:35" pos:end="87:38"><name pos:start="87:35" pos:end="87:38">path</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<decl_stmt pos:start="88:17" pos:end="94:19"><decl pos:start="88:17" pos:end="94:18"><type pos:start="88:17" pos:end="88:22"><name pos:start="88:17" pos:end="88:22"><name pos:start="88:17" pos:end="88:20">File</name><index pos:start="88:21" pos:end="88:22">[]</index></name></type> <name pos:start="88:24" pos:end="88:28">files</name> <init pos:start="88:30" pos:end="94:18">= <expr pos:start="88:32" pos:end="94:18"><call pos:start="88:32" pos:end="94:18"><name pos:start="88:32" pos:end="88:42"><name pos:start="88:32" pos:end="88:32">f</name><operator pos:start="88:33" pos:end="88:33">.</operator><name pos:start="88:34" pos:end="88:42">listFiles</name></name><argument_list pos:start="88:43" pos:end="94:18">(<argument pos:start="88:44" pos:end="94:17"><expr pos:start="88:44" pos:end="94:17"><operator pos:start="88:44" pos:end="88:46">new</operator> <class pos:start="88:48" pos:end="94:17"><super pos:start="88:48" pos:end="88:61"><name pos:start="88:48" pos:end="88:61">FilenameFilter</name></super><argument_list pos:start="88:62" pos:end="88:63">()</argument_list> <block pos:start="88:65" pos:end="94:17">{

			<function pos:start="90:25" pos:end="93:25"><annotation pos:start="90:25" pos:end="90:33">@<name pos:start="90:26" pos:end="90:33">Override</name></annotation>
			<type pos:start="91:25" pos:end="91:38"><specifier pos:start="91:25" pos:end="91:30">public</specifier> <name pos:start="91:32" pos:end="91:38">boolean</name></type> <name pos:start="91:40" pos:end="91:45">accept</name><parameter_list pos:start="91:46" pos:end="91:69">(<parameter pos:start="91:47" pos:end="91:55"><decl pos:start="91:47" pos:end="91:55"><type pos:start="91:47" pos:end="91:55"><name pos:start="91:47" pos:end="91:50">File</name></type> <name pos:start="91:52" pos:end="91:55">arg0</name></decl></parameter>, <parameter pos:start="91:58" pos:end="91:68"><decl pos:start="91:58" pos:end="91:68"><type pos:start="91:58" pos:end="91:68"><name pos:start="91:58" pos:end="91:63">String</name></type> <name pos:start="91:65" pos:end="91:68">arg1</name></decl></parameter>)</parameter_list> <block pos:start="91:71" pos:end="93:25">{<block_content pos:start="92:33" pos:end="92:64">
				<return pos:start="92:33" pos:end="92:64">return <expr pos:start="92:40" pos:end="92:63"><call pos:start="92:40" pos:end="92:63"><name pos:start="92:40" pos:end="92:52"><name pos:start="92:40" pos:end="92:43">arg1</name><operator pos:start="92:44" pos:end="92:44">.</operator><name pos:start="92:45" pos:end="92:52">endsWith</name></name><argument_list pos:start="92:53" pos:end="92:63">(<argument pos:start="92:54" pos:end="92:62"><expr pos:start="92:54" pos:end="92:62"><name pos:start="92:54" pos:end="92:62">extension</name></expr></argument>)</argument_list></call></expr>;</return>
			</block_content>}</block></function>
		}</block></class></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<return pos:start="95:17" pos:end="95:29">return <expr pos:start="95:24" pos:end="95:28"><name pos:start="95:24" pos:end="95:28">files</name></expr>;</return>

	</block_content>}</block></function>

	<function pos:start="99:9" pos:end="101:9"><type pos:start="99:9" pos:end="99:19"><specifier pos:start="99:9" pos:end="99:14">public</specifier> <name pos:start="99:16" pos:end="99:19">void</name></type> <name pos:start="99:21" pos:end="99:28">tearDown</name><parameter_list pos:start="99:29" pos:end="99:30">()</parameter_list> <block pos:start="99:32" pos:end="101:9">{<block_content pos:start="100:17" pos:end="100:40">
		<expr_stmt pos:start="100:17" pos:end="100:40"><expr pos:start="100:17" pos:end="100:39"><call pos:start="100:17" pos:end="100:39"><name pos:start="100:17" pos:end="100:37"><name pos:start="100:17" pos:end="100:32">directoryWatcher</name><operator pos:start="100:33" pos:end="100:33">.</operator><name pos:start="100:34" pos:end="100:37">stop</name></name><argument_list pos:start="100:38" pos:end="100:39">()</argument_list></call></expr>;</expr_stmt>
	</block_content>}</block></function>

}</block></class>
</unit>
