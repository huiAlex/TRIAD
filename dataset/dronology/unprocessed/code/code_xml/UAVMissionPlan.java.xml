<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="Java" filename="src/UAVMissionPlan.java" pos:tabs="8"><package pos:start="1:1" pos:end="1:66">package <name pos:start="1:9" pos:end="1:65"><name pos:start="1:9" pos:end="1:11">edu</name><operator pos:start="1:12" pos:end="1:12">.</operator><name pos:start="1:13" pos:end="1:14">nd</name><operator pos:start="1:15" pos:end="1:15">.</operator><name pos:start="1:16" pos:end="1:24">dronology</name><operator pos:start="1:25" pos:end="1:25">.</operator><name pos:start="1:26" pos:end="1:33">services</name><operator pos:start="1:34" pos:end="1:34">.</operator><name pos:start="1:35" pos:end="1:44">extensions</name><operator pos:start="1:45" pos:end="1:45">.</operator><name pos:start="1:46" pos:end="1:60">missionplanning</name><operator pos:start="1:61" pos:end="1:61">.</operator><name pos:start="1:62" pos:end="1:65">plan</name></name>;</package>

<import pos:start="3:1" pos:end="3:27">import <name pos:start="3:8" pos:end="3:26"><name pos:start="3:8" pos:end="3:11">java</name><operator pos:start="3:12" pos:end="3:12">.</operator><name pos:start="3:13" pos:end="3:16">util</name><operator pos:start="3:17" pos:end="3:17">.</operator><name pos:start="3:18" pos:end="3:26">ArrayList</name></name>;</import>
<import pos:start="4:1" pos:end="4:28">import <name pos:start="4:8" pos:end="4:27"><name pos:start="4:8" pos:end="4:11">java</name><operator pos:start="4:12" pos:end="4:12">.</operator><name pos:start="4:13" pos:end="4:16">util</name><operator pos:start="4:17" pos:end="4:17">.</operator><name pos:start="4:18" pos:end="4:27">LinkedList</name></name>;</import>
<import pos:start="5:1" pos:end="5:22">import <name pos:start="5:8" pos:end="5:21"><name pos:start="5:8" pos:end="5:11">java</name><operator pos:start="5:12" pos:end="5:12">.</operator><name pos:start="5:13" pos:end="5:16">util</name><operator pos:start="5:17" pos:end="5:17">.</operator><name pos:start="5:18" pos:end="5:21">List</name></name>;</import>

<import pos:start="7:1" pos:end="7:54">import <name pos:start="7:8" pos:end="7:53"><name pos:start="7:8" pos:end="7:10">edu</name><operator pos:start="7:11" pos:end="7:11">.</operator><name pos:start="7:12" pos:end="7:13">nd</name><operator pos:start="7:14" pos:end="7:14">.</operator><name pos:start="7:15" pos:end="7:23">dronology</name><operator pos:start="7:24" pos:end="7:24">.</operator><name pos:start="7:25" pos:end="7:28">core</name><operator pos:start="7:29" pos:end="7:29">.</operator><name pos:start="7:30" pos:end="7:39">coordinate</name><operator pos:start="7:40" pos:end="7:40">.</operator><name pos:start="7:41" pos:end="7:53">LlaCoordinate</name></name>;</import>
<import pos:start="8:1" pos:end="8:54">import <name pos:start="8:8" pos:end="8:53"><name pos:start="8:8" pos:end="8:10">edu</name><operator pos:start="8:11" pos:end="8:11">.</operator><name pos:start="8:12" pos:end="8:13">nd</name><operator pos:start="8:14" pos:end="8:14">.</operator><name pos:start="8:15" pos:end="8:23">dronology</name><operator pos:start="8:24" pos:end="8:24">.</operator><name pos:start="8:25" pos:end="8:32">services</name><operator pos:start="8:33" pos:end="8:33">.</operator><name pos:start="8:34" pos:end="8:37">core</name><operator pos:start="8:38" pos:end="8:38">.</operator><name pos:start="8:39" pos:end="8:42">info</name><operator pos:start="8:43" pos:end="8:43">.</operator><name pos:start="8:44" pos:end="8:53">FlightInfo</name></name>;</import>
<import pos:start="9:1" pos:end="9:59">import <name pos:start="9:8" pos:end="9:58"><name pos:start="9:8" pos:end="9:10">edu</name><operator pos:start="9:11" pos:end="9:11">.</operator><name pos:start="9:12" pos:end="9:13">nd</name><operator pos:start="9:14" pos:end="9:14">.</operator><name pos:start="9:15" pos:end="9:23">dronology</name><operator pos:start="9:24" pos:end="9:24">.</operator><name pos:start="9:25" pos:end="9:32">services</name><operator pos:start="9:33" pos:end="9:33">.</operator><name pos:start="9:34" pos:end="9:37">core</name><operator pos:start="9:38" pos:end="9:38">.</operator><name pos:start="9:39" pos:end="9:42">info</name><operator pos:start="9:43" pos:end="9:43">.</operator><name pos:start="9:44" pos:end="9:58">FlightRouteInfo</name></name>;</import>
<import pos:start="10:1" pos:end="10:69">import <name pos:start="10:8" pos:end="10:68"><name pos:start="10:8" pos:end="10:10">edu</name><operator pos:start="10:11" pos:end="10:11">.</operator><name pos:start="10:12" pos:end="10:13">nd</name><operator pos:start="10:14" pos:end="10:14">.</operator><name pos:start="10:15" pos:end="10:23">dronology</name><operator pos:start="10:24" pos:end="10:24">.</operator><name pos:start="10:25" pos:end="10:32">services</name><operator pos:start="10:33" pos:end="10:33">.</operator><name pos:start="10:34" pos:end="10:37">core</name><operator pos:start="10:38" pos:end="10:38">.</operator><name pos:start="10:39" pos:end="10:42">util</name><operator pos:start="10:43" pos:end="10:43">.</operator><name pos:start="10:44" pos:end="10:68">DronologyServiceException</name></name>;</import>
<import pos:start="11:1" pos:end="11:86">import <name pos:start="11:8" pos:end="11:85"><name pos:start="11:8" pos:end="11:10">edu</name><operator pos:start="11:11" pos:end="11:11">.</operator><name pos:start="11:12" pos:end="11:13">nd</name><operator pos:start="11:14" pos:end="11:14">.</operator><name pos:start="11:15" pos:end="11:23">dronology</name><operator pos:start="11:24" pos:end="11:24">.</operator><name pos:start="11:25" pos:end="11:32">services</name><operator pos:start="11:33" pos:end="11:33">.</operator><name pos:start="11:34" pos:end="11:43">extensions</name><operator pos:start="11:44" pos:end="11:44">.</operator><name pos:start="11:45" pos:end="11:59">missionplanning</name><operator pos:start="11:60" pos:end="11:60">.</operator><name pos:start="11:61" pos:end="11:85">MissionExecutionException</name></name>;</import>
<import pos:start="12:1" pos:end="12:84">import <name pos:start="12:8" pos:end="12:83"><name pos:start="12:8" pos:end="12:10">edu</name><operator pos:start="12:11" pos:end="12:11">.</operator><name pos:start="12:12" pos:end="12:13">nd</name><operator pos:start="12:14" pos:end="12:14">.</operator><name pos:start="12:15" pos:end="12:23">dronology</name><operator pos:start="12:24" pos:end="12:24">.</operator><name pos:start="12:25" pos:end="12:32">services</name><operator pos:start="12:33" pos:end="12:33">.</operator><name pos:start="12:34" pos:end="12:43">extensions</name><operator pos:start="12:44" pos:end="12:44">.</operator><name pos:start="12:45" pos:end="12:59">missionplanning</name><operator pos:start="12:60" pos:end="12:60">.</operator><name pos:start="12:61" pos:end="12:68">patterns</name><operator pos:start="12:69" pos:end="12:69">.</operator><name pos:start="12:70" pos:end="12:83">IFlightPattern</name></name>;</import>
<import pos:start="13:1" pos:end="13:84">import <name pos:start="13:8" pos:end="13:83"><name pos:start="13:8" pos:end="13:10">edu</name><operator pos:start="13:11" pos:end="13:11">.</operator><name pos:start="13:12" pos:end="13:13">nd</name><operator pos:start="13:14" pos:end="13:14">.</operator><name pos:start="13:15" pos:end="13:23">dronology</name><operator pos:start="13:24" pos:end="13:24">.</operator><name pos:start="13:25" pos:end="13:32">services</name><operator pos:start="13:33" pos:end="13:33">.</operator><name pos:start="13:34" pos:end="13:43">extensions</name><operator pos:start="13:44" pos:end="13:44">.</operator><name pos:start="13:45" pos:end="13:59">missionplanning</name><operator pos:start="13:60" pos:end="13:60">.</operator><name pos:start="13:61" pos:end="13:68">patterns</name><operator pos:start="13:69" pos:end="13:69">.</operator><name pos:start="13:70" pos:end="13:83">PatternFactory</name></name>;</import>
<import pos:start="14:1" pos:end="14:96">import <name pos:start="14:8" pos:end="14:95"><name pos:start="14:8" pos:end="14:10">edu</name><operator pos:start="14:11" pos:end="14:11">.</operator><name pos:start="14:12" pos:end="14:13">nd</name><operator pos:start="14:14" pos:end="14:14">.</operator><name pos:start="14:15" pos:end="14:23">dronology</name><operator pos:start="14:24" pos:end="14:24">.</operator><name pos:start="14:25" pos:end="14:32">services</name><operator pos:start="14:33" pos:end="14:33">.</operator><name pos:start="14:34" pos:end="14:43">extensions</name><operator pos:start="14:44" pos:end="14:44">.</operator><name pos:start="14:45" pos:end="14:59">missionplanning</name><operator pos:start="14:60" pos:end="14:60">.</operator><name pos:start="14:61" pos:end="14:68">patterns</name><operator pos:start="14:69" pos:end="14:69">.</operator><name pos:start="14:70" pos:end="14:83">PatternFactory</name><operator pos:start="14:84" pos:end="14:84">.</operator><name pos:start="14:85" pos:end="14:95">PatternType</name></name>;</import>
<import pos:start="15:1" pos:end="15:78">import <name pos:start="15:8" pos:end="15:77"><name pos:start="15:8" pos:end="15:10">edu</name><operator pos:start="15:11" pos:end="15:11">.</operator><name pos:start="15:12" pos:end="15:13">nd</name><operator pos:start="15:14" pos:end="15:14">.</operator><name pos:start="15:15" pos:end="15:23">dronology</name><operator pos:start="15:24" pos:end="15:24">.</operator><name pos:start="15:25" pos:end="15:32">services</name><operator pos:start="15:33" pos:end="15:33">.</operator><name pos:start="15:34" pos:end="15:43">extensions</name><operator pos:start="15:44" pos:end="15:44">.</operator><name pos:start="15:45" pos:end="15:59">missionplanning</name><operator pos:start="15:60" pos:end="15:60">.</operator><name pos:start="15:61" pos:end="15:68">patterns</name><operator pos:start="15:69" pos:end="15:69">.</operator><name pos:start="15:70" pos:end="15:77">TaskList</name></name>;</import>
<import pos:start="16:1" pos:end="16:88">import <name pos:start="16:8" pos:end="16:87"><name pos:start="16:8" pos:end="16:10">edu</name><operator pos:start="16:11" pos:end="16:11">.</operator><name pos:start="16:12" pos:end="16:13">nd</name><operator pos:start="16:14" pos:end="16:14">.</operator><name pos:start="16:15" pos:end="16:23">dronology</name><operator pos:start="16:24" pos:end="16:24">.</operator><name pos:start="16:25" pos:end="16:32">services</name><operator pos:start="16:33" pos:end="16:33">.</operator><name pos:start="16:34" pos:end="16:43">extensions</name><operator pos:start="16:44" pos:end="16:44">.</operator><name pos:start="16:45" pos:end="16:59">missionplanning</name><operator pos:start="16:60" pos:end="16:60">.</operator><name pos:start="16:61" pos:end="16:64">sync</name><operator pos:start="16:65" pos:end="16:65">.</operator><name pos:start="16:66" pos:end="16:87">SynchronizationManager</name></name>;</import>
<import pos:start="17:1" pos:end="17:76">import <name pos:start="17:8" pos:end="17:75"><name pos:start="17:8" pos:end="17:10">edu</name><operator pos:start="17:11" pos:end="17:11">.</operator><name pos:start="17:12" pos:end="17:13">nd</name><operator pos:start="17:14" pos:end="17:14">.</operator><name pos:start="17:15" pos:end="17:23">dronology</name><operator pos:start="17:24" pos:end="17:24">.</operator><name pos:start="17:25" pos:end="17:32">services</name><operator pos:start="17:33" pos:end="17:33">.</operator><name pos:start="17:34" pos:end="17:43">extensions</name><operator pos:start="17:44" pos:end="17:44">.</operator><name pos:start="17:45" pos:end="17:59">missionplanning</name><operator pos:start="17:60" pos:end="17:60">.</operator><name pos:start="17:61" pos:end="17:65">tasks</name><operator pos:start="17:66" pos:end="17:66">.</operator><name pos:start="17:67" pos:end="17:75">DelayTask</name></name>;</import>
<import pos:start="18:1" pos:end="18:79">import <name pos:start="18:8" pos:end="18:78"><name pos:start="18:8" pos:end="18:10">edu</name><operator pos:start="18:11" pos:end="18:11">.</operator><name pos:start="18:12" pos:end="18:13">nd</name><operator pos:start="18:14" pos:end="18:14">.</operator><name pos:start="18:15" pos:end="18:23">dronology</name><operator pos:start="18:24" pos:end="18:24">.</operator><name pos:start="18:25" pos:end="18:32">services</name><operator pos:start="18:33" pos:end="18:33">.</operator><name pos:start="18:34" pos:end="18:43">extensions</name><operator pos:start="18:44" pos:end="18:44">.</operator><name pos:start="18:45" pos:end="18:59">missionplanning</name><operator pos:start="18:60" pos:end="18:60">.</operator><name pos:start="18:61" pos:end="18:65">tasks</name><operator pos:start="18:66" pos:end="18:66">.</operator><name pos:start="18:67" pos:end="18:78">IMissionTask</name></name>;</import>
<import pos:start="19:1" pos:end="19:75">import <name pos:start="19:8" pos:end="19:74"><name pos:start="19:8" pos:end="19:10">edu</name><operator pos:start="19:11" pos:end="19:11">.</operator><name pos:start="19:12" pos:end="19:13">nd</name><operator pos:start="19:14" pos:end="19:14">.</operator><name pos:start="19:15" pos:end="19:23">dronology</name><operator pos:start="19:24" pos:end="19:24">.</operator><name pos:start="19:25" pos:end="19:32">services</name><operator pos:start="19:33" pos:end="19:33">.</operator><name pos:start="19:34" pos:end="19:43">extensions</name><operator pos:start="19:44" pos:end="19:44">.</operator><name pos:start="19:45" pos:end="19:59">missionplanning</name><operator pos:start="19:60" pos:end="19:60">.</operator><name pos:start="19:61" pos:end="19:65">tasks</name><operator pos:start="19:66" pos:end="19:66">.</operator><name pos:start="19:67" pos:end="19:74">LandTask</name></name>;</import>
<import pos:start="20:1" pos:end="20:78">import <name pos:start="20:8" pos:end="20:77"><name pos:start="20:8" pos:end="20:10">edu</name><operator pos:start="20:11" pos:end="20:11">.</operator><name pos:start="20:12" pos:end="20:13">nd</name><operator pos:start="20:14" pos:end="20:14">.</operator><name pos:start="20:15" pos:end="20:23">dronology</name><operator pos:start="20:24" pos:end="20:24">.</operator><name pos:start="20:25" pos:end="20:32">services</name><operator pos:start="20:33" pos:end="20:33">.</operator><name pos:start="20:34" pos:end="20:43">extensions</name><operator pos:start="20:44" pos:end="20:44">.</operator><name pos:start="20:45" pos:end="20:59">missionplanning</name><operator pos:start="20:60" pos:end="20:60">.</operator><name pos:start="20:61" pos:end="20:65">tasks</name><operator pos:start="20:66" pos:end="20:66">.</operator><name pos:start="20:67" pos:end="20:77">PatternTask</name></name>;</import>
<import pos:start="21:1" pos:end="21:76">import <name pos:start="21:8" pos:end="21:75"><name pos:start="21:8" pos:end="21:10">edu</name><operator pos:start="21:11" pos:end="21:11">.</operator><name pos:start="21:12" pos:end="21:13">nd</name><operator pos:start="21:14" pos:end="21:14">.</operator><name pos:start="21:15" pos:end="21:23">dronology</name><operator pos:start="21:24" pos:end="21:24">.</operator><name pos:start="21:25" pos:end="21:32">services</name><operator pos:start="21:33" pos:end="21:33">.</operator><name pos:start="21:34" pos:end="21:43">extensions</name><operator pos:start="21:44" pos:end="21:44">.</operator><name pos:start="21:45" pos:end="21:59">missionplanning</name><operator pos:start="21:60" pos:end="21:60">.</operator><name pos:start="21:61" pos:end="21:65">tasks</name><operator pos:start="21:66" pos:end="21:66">.</operator><name pos:start="21:67" pos:end="21:75">RouteTask</name></name>;</import>
<import pos:start="22:1" pos:end="22:75">import <name pos:start="22:8" pos:end="22:74"><name pos:start="22:8" pos:end="22:10">edu</name><operator pos:start="22:11" pos:end="22:11">.</operator><name pos:start="22:12" pos:end="22:13">nd</name><operator pos:start="22:14" pos:end="22:14">.</operator><name pos:start="22:15" pos:end="22:23">dronology</name><operator pos:start="22:24" pos:end="22:24">.</operator><name pos:start="22:25" pos:end="22:32">services</name><operator pos:start="22:33" pos:end="22:33">.</operator><name pos:start="22:34" pos:end="22:43">extensions</name><operator pos:start="22:44" pos:end="22:44">.</operator><name pos:start="22:45" pos:end="22:59">missionplanning</name><operator pos:start="22:60" pos:end="22:60">.</operator><name pos:start="22:61" pos:end="22:65">tasks</name><operator pos:start="22:66" pos:end="22:66">.</operator><name pos:start="22:67" pos:end="22:74">SyncTask</name></name>;</import>
<import pos:start="23:1" pos:end="23:78">import <name pos:start="23:8" pos:end="23:77"><name pos:start="23:8" pos:end="23:10">edu</name><operator pos:start="23:11" pos:end="23:11">.</operator><name pos:start="23:12" pos:end="23:13">nd</name><operator pos:start="23:14" pos:end="23:14">.</operator><name pos:start="23:15" pos:end="23:23">dronology</name><operator pos:start="23:24" pos:end="23:24">.</operator><name pos:start="23:25" pos:end="23:32">services</name><operator pos:start="23:33" pos:end="23:33">.</operator><name pos:start="23:34" pos:end="23:43">extensions</name><operator pos:start="23:44" pos:end="23:44">.</operator><name pos:start="23:45" pos:end="23:59">missionplanning</name><operator pos:start="23:60" pos:end="23:60">.</operator><name pos:start="23:61" pos:end="23:65">tasks</name><operator pos:start="23:66" pos:end="23:66">.</operator><name pos:start="23:67" pos:end="23:77">TakeoffTask</name></name>;</import>
<import pos:start="24:1" pos:end="24:79">import <name pos:start="24:8" pos:end="24:78"><name pos:start="24:8" pos:end="24:10">edu</name><operator pos:start="24:11" pos:end="24:11">.</operator><name pos:start="24:12" pos:end="24:13">nd</name><operator pos:start="24:14" pos:end="24:14">.</operator><name pos:start="24:15" pos:end="24:23">dronology</name><operator pos:start="24:24" pos:end="24:24">.</operator><name pos:start="24:25" pos:end="24:32">services</name><operator pos:start="24:33" pos:end="24:33">.</operator><name pos:start="24:34" pos:end="24:43">extensions</name><operator pos:start="24:44" pos:end="24:44">.</operator><name pos:start="24:45" pos:end="24:59">missionplanning</name><operator pos:start="24:60" pos:end="24:60">.</operator><name pos:start="24:61" pos:end="24:65">tasks</name><operator pos:start="24:66" pos:end="24:66">.</operator><name pos:start="24:67" pos:end="24:78">WaypointTask</name></name>;</import>
<import pos:start="25:1" pos:end="25:78">import <name pos:start="25:8" pos:end="25:77"><name pos:start="25:8" pos:end="25:10">edu</name><operator pos:start="25:11" pos:end="25:11">.</operator><name pos:start="25:12" pos:end="25:13">nd</name><operator pos:start="25:14" pos:end="25:14">.</operator><name pos:start="25:15" pos:end="25:23">dronology</name><operator pos:start="25:24" pos:end="25:24">.</operator><name pos:start="25:25" pos:end="25:32">services</name><operator pos:start="25:33" pos:end="25:33">.</operator><name pos:start="25:34" pos:end="25:42">instances</name><operator pos:start="25:43" pos:end="25:43">.</operator><name pos:start="25:44" pos:end="25:56">flightmanager</name><operator pos:start="25:57" pos:end="25:57">.</operator><name pos:start="25:58" pos:end="25:77">FlightManagerService</name></name>;</import>
<import pos:start="26:1" pos:end="26:82">import <name pos:start="26:8" pos:end="26:81"><name pos:start="26:8" pos:end="26:10">edu</name><operator pos:start="26:11" pos:end="26:11">.</operator><name pos:start="26:12" pos:end="26:13">nd</name><operator pos:start="26:14" pos:end="26:14">.</operator><name pos:start="26:15" pos:end="26:23">dronology</name><operator pos:start="26:24" pos:end="26:24">.</operator><name pos:start="26:25" pos:end="26:32">services</name><operator pos:start="26:33" pos:end="26:33">.</operator><name pos:start="26:34" pos:end="26:42">instances</name><operator pos:start="26:43" pos:end="26:43">.</operator><name pos:start="26:44" pos:end="26:54">flightroute</name><operator pos:start="26:55" pos:end="26:55">.</operator><name pos:start="26:56" pos:end="26:81">FlightRouteplanningService</name></name>;</import>
<import pos:start="27:1" pos:end="27:30">import <name pos:start="27:8" pos:end="27:29"><name pos:start="27:8" pos:end="27:10">net</name><operator pos:start="27:11" pos:end="27:11">.</operator><name pos:start="27:12" pos:end="27:13">mv</name><operator pos:start="27:14" pos:end="27:14">.</operator><name pos:start="27:15" pos:end="27:21">logging</name><operator pos:start="27:22" pos:end="27:22">.</operator><name pos:start="27:23" pos:end="27:29">ILogger</name></name>;</import>
<import pos:start="28:1" pos:end="28:37">import <name pos:start="28:8" pos:end="28:36"><name pos:start="28:8" pos:end="28:10">net</name><operator pos:start="28:11" pos:end="28:11">.</operator><name pos:start="28:12" pos:end="28:13">mv</name><operator pos:start="28:14" pos:end="28:14">.</operator><name pos:start="28:15" pos:end="28:21">logging</name><operator pos:start="28:22" pos:end="28:22">.</operator><name pos:start="28:23" pos:end="28:36">LoggerProvider</name></name>;</import>

<comment type="block" format="javadoc" pos:start="30:1" pos:end="35:3">/**
 * Mission plan for an individual UAV. Part of an {@link IExecuteableMissionPlan}.
 * 
 * @author Jane Cleland-Huang
 *
 */</comment>
<class pos:start="36:1" pos:end="247:1"><specifier pos:start="36:1" pos:end="36:6">public</specifier> class <name pos:start="36:14" pos:end="36:27">UAVMissionPlan</name> <block pos:start="36:29" pos:end="247:1">{

	<decl_stmt pos:start="38:9" pos:end="38:93"><decl pos:start="38:9" pos:end="38:92"><type pos:start="38:9" pos:end="38:36"><specifier pos:start="38:9" pos:end="38:15">private</specifier> <specifier pos:start="38:17" pos:end="38:22">static</specifier> <specifier pos:start="38:24" pos:end="38:28">final</specifier> <name pos:start="38:30" pos:end="38:36">ILogger</name></type> <name pos:start="38:38" pos:end="38:43">LOGGER</name> <init pos:start="38:45" pos:end="38:92">= <expr pos:start="38:47" pos:end="38:92"><call pos:start="38:47" pos:end="38:92"><name pos:start="38:47" pos:end="38:70"><name pos:start="38:47" pos:end="38:60">LoggerProvider</name><operator pos:start="38:61" pos:end="38:61">.</operator><name pos:start="38:62" pos:end="38:70">getLogger</name></name><argument_list pos:start="38:71" pos:end="38:92">(<argument pos:start="38:72" pos:end="38:91"><expr pos:start="38:72" pos:end="38:91"><name pos:start="38:72" pos:end="38:91"><name pos:start="38:72" pos:end="38:85">UAVMissionPlan</name><operator pos:start="38:86" pos:end="38:86">.</operator><name pos:start="38:87" pos:end="38:91">class</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
 
	<decl_stmt pos:start="40:9" pos:end="40:47"><decl pos:start="40:9" pos:end="40:46"><type pos:start="40:9" pos:end="40:28"><specifier pos:start="40:9" pos:end="40:15">private</specifier> <name pos:start="40:17" pos:end="40:28">IMissionTask</name></type> <name pos:start="40:30" pos:end="40:39">activeTask</name> <init pos:start="40:41" pos:end="40:46">= <expr pos:start="40:43" pos:end="40:46"><literal type="null" pos:start="40:43" pos:end="40:46">null</literal></expr></init></decl>;</decl_stmt>
	<decl_stmt pos:start="41:9" pos:end="41:35"><decl pos:start="41:9" pos:end="41:34"><type pos:start="41:9" pos:end="41:28"><specifier pos:start="41:9" pos:end="41:15">private</specifier> <specifier pos:start="41:17" pos:end="41:21">final</specifier> <name pos:start="41:23" pos:end="41:28">String</name></type> <name pos:start="41:30" pos:end="41:34">uavid</name></decl>;</decl_stmt>
	<decl_stmt pos:start="42:9" pos:end="42:44"><decl pos:start="42:9" pos:end="42:43"><type pos:start="42:9" pos:end="42:34"><specifier pos:start="42:9" pos:end="42:15">private</specifier> <name pos:start="42:17" pos:end="42:34"><name pos:start="42:17" pos:end="42:20">List</name><argument_list type="generic" pos:start="42:21" pos:end="42:34">&lt;<argument pos:start="42:22" pos:end="42:33"><name pos:start="42:22" pos:end="42:33">IMissionTask</name></argument>&gt;</argument_list></name></type> <name pos:start="42:36" pos:end="42:43">taskList</name></decl>;</decl_stmt>
	<decl_stmt pos:start="43:9" pos:end="43:43"><decl pos:start="43:9" pos:end="43:42"><type pos:start="43:9" pos:end="43:29"><specifier pos:start="43:9" pos:end="43:15">private</specifier> <name pos:start="43:17" pos:end="43:29">LlaCoordinate</name></type> <name pos:start="43:31" pos:end="43:42">homeLocation</name></decl>;</decl_stmt>
	<decl_stmt pos:start="44:9" pos:end="44:52"><decl pos:start="44:9" pos:end="44:51"><type pos:start="44:9" pos:end="44:29"><specifier pos:start="44:9" pos:end="44:15">private</specifier> <name pos:start="44:17" pos:end="44:29">LlaCoordinate</name></type> <name pos:start="44:31" pos:end="44:51">firstWaypointLocation</name></decl>;</decl_stmt>

	<decl_stmt pos:start="46:9" pos:end="46:45"><decl pos:start="46:9" pos:end="46:44"><type pos:start="46:9" pos:end="46:19"><specifier pos:start="46:9" pos:end="46:15">private</specifier> <name pos:start="46:17" pos:end="46:19">int</name></type> <name pos:start="46:21" pos:end="46:40">coordinationAltitude</name> <init pos:start="46:42" pos:end="46:44">= <expr pos:start="46:44" pos:end="46:44"><literal type="number" pos:start="46:44" pos:end="46:44">0</literal></expr></init></decl>;</decl_stmt>
	<decl_stmt pos:start="47:9" pos:end="47:64"><decl pos:start="47:9" pos:end="47:63"><type pos:start="47:9" pos:end="47:54"><specifier pos:start="47:9" pos:end="47:15">private</specifier> <specifier pos:start="47:17" pos:end="47:21">final</specifier> <specifier pos:start="47:23" pos:end="47:31">transient</specifier> <name pos:start="47:33" pos:end="47:54">SynchronizationManager</name></type> <name pos:start="47:56" pos:end="47:63">synchMgr</name></decl>;</decl_stmt>

	<constructor pos:start="49:9" pos:end="53:9"><specifier pos:start="49:9" pos:end="49:14">public</specifier> <name pos:start="49:16" pos:end="49:29">UAVMissionPlan</name><parameter_list pos:start="49:30" pos:end="49:76">(<parameter pos:start="49:31" pos:end="49:42"><decl pos:start="49:31" pos:end="49:42"><type pos:start="49:31" pos:end="49:42"><name pos:start="49:31" pos:end="49:36">String</name></type> <name pos:start="49:38" pos:end="49:42">uavID</name></decl></parameter>, <parameter pos:start="49:45" pos:end="49:75"><decl pos:start="49:45" pos:end="49:75"><type pos:start="49:45" pos:end="49:75"><name pos:start="49:45" pos:end="49:66">SynchronizationManager</name></type> <name pos:start="49:68" pos:end="49:75">synchMgr</name></decl></parameter>)</parameter_list> <block pos:start="49:78" pos:end="53:9">{<block_content pos:start="50:17" pos:end="52:41">
		<expr_stmt pos:start="50:17" pos:end="50:35"><expr pos:start="50:17" pos:end="50:34"><name pos:start="50:17" pos:end="50:26"><name pos:start="50:17" pos:end="50:20">this</name><operator pos:start="50:21" pos:end="50:21">.</operator><name pos:start="50:22" pos:end="50:26">uavid</name></name> <operator pos:start="50:28" pos:end="50:28">=</operator> <name pos:start="50:30" pos:end="50:34">uavID</name></expr>;</expr_stmt>
		<expr_stmt pos:start="51:17" pos:end="51:46"><expr pos:start="51:17" pos:end="51:45"><name pos:start="51:17" pos:end="51:24">taskList</name> <operator pos:start="51:26" pos:end="51:26">=</operator> <operator pos:start="51:28" pos:end="51:30">new</operator> <call pos:start="51:32" pos:end="51:45"><name pos:start="51:32" pos:end="51:43"><name pos:start="51:32" pos:end="51:41">LinkedList</name><argument_list type="generic" pos:start="51:42" pos:end="51:43">&lt;&gt;</argument_list></name><argument_list pos:start="51:44" pos:end="51:45">()</argument_list></call></expr>;</expr_stmt>
		<expr_stmt pos:start="52:17" pos:end="52:41"><expr pos:start="52:17" pos:end="52:40"><name pos:start="52:17" pos:end="52:29"><name pos:start="52:17" pos:end="52:20">this</name><operator pos:start="52:21" pos:end="52:21">.</operator><name pos:start="52:22" pos:end="52:29">synchMgr</name></name> <operator pos:start="52:31" pos:end="52:31">=</operator> <name pos:start="52:33" pos:end="52:40">synchMgr</name></expr>;</expr_stmt>
	</block_content>}</block></constructor>

	<comment type="block" format="javadoc" pos:start="55:9" pos:end="60:11">/**
	 * Check if task if finished
	 * 
	 * @return
	 * @throws MissionExecutionException
	 */</comment>
	<function pos:start="61:9" pos:end="71:9"><type pos:start="61:9" pos:end="61:23"><specifier pos:start="61:9" pos:end="61:15">private</specifier> <name pos:start="61:17" pos:end="61:23">boolean</name></type> <name pos:start="61:25" pos:end="61:39">isExecutingTask</name><parameter_list pos:start="61:40" pos:end="61:41">()</parameter_list> <throws pos:start="61:43" pos:end="61:74">throws <argument pos:start="61:50" pos:end="61:74"><expr pos:start="61:50" pos:end="61:74"><name pos:start="61:50" pos:end="61:74">MissionExecutionException</name></expr></argument></throws> <block pos:start="61:76" pos:end="71:9">{<block_content pos:start="62:17" pos:end="69:56">
		<decl_stmt pos:start="62:17" pos:end="62:32"><decl pos:start="62:17" pos:end="62:31"><type pos:start="62:17" pos:end="62:26"><name pos:start="62:17" pos:end="62:26">FlightInfo</name></type> <name pos:start="62:28" pos:end="62:31">info</name></decl>;</decl_stmt>
		<try pos:start="63:17" pos:end="68:17">try <block pos:start="63:21" pos:end="65:17">{<block_content pos:start="64:25" pos:end="64:87">
			<expr_stmt pos:start="64:25" pos:end="64:87"><expr pos:start="64:25" pos:end="64:86"><name pos:start="64:25" pos:end="64:28">info</name> <operator pos:start="64:30" pos:end="64:30">=</operator> <call pos:start="64:32" pos:end="64:65"><name pos:start="64:32" pos:end="64:63"><name pos:start="64:32" pos:end="64:51">FlightManagerService</name><operator pos:start="64:52" pos:end="64:52">.</operator><name pos:start="64:53" pos:end="64:63">getInstance</name></name><argument_list pos:start="64:64" pos:end="64:65">()</argument_list></call><operator pos:start="64:66" pos:end="64:66">.</operator><call pos:start="64:67" pos:end="64:86"><name pos:start="64:67" pos:end="64:79">getFlightInfo</name><argument_list pos:start="64:80" pos:end="64:86">(<argument pos:start="64:81" pos:end="64:85"><expr pos:start="64:81" pos:end="64:85"><name pos:start="64:81" pos:end="64:85">uavid</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		</block_content>}</block> <catch pos:start="65:19" pos:end="68:17">catch <parameter_list pos:start="65:25" pos:end="65:53">(<parameter pos:start="65:26" pos:end="65:52"><decl pos:start="65:26" pos:end="65:52"><type pos:start="65:26" pos:end="65:52"><name pos:start="65:26" pos:end="65:50">DronologyServiceException</name></type> <name pos:start="65:52" pos:end="65:52">e</name></decl></parameter>)</parameter_list> <block pos:start="65:55" pos:end="68:17">{<block_content pos:start="66:25" pos:end="67:76">
			<expr_stmt pos:start="66:25" pos:end="66:40"><expr pos:start="66:25" pos:end="66:39"><call pos:start="66:25" pos:end="66:39"><name pos:start="66:25" pos:end="66:36"><name pos:start="66:25" pos:end="66:30">LOGGER</name><operator pos:start="66:31" pos:end="66:31">.</operator><name pos:start="66:32" pos:end="66:36">error</name></name><argument_list pos:start="66:37" pos:end="66:39">(<argument pos:start="66:38" pos:end="66:38"><expr pos:start="66:38" pos:end="66:38"><name pos:start="66:38" pos:end="66:38">e</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<throw pos:start="67:25" pos:end="67:76">throw <expr pos:start="67:31" pos:end="67:75"><operator pos:start="67:31" pos:end="67:33">new</operator> <call pos:start="67:35" pos:end="67:75"><name pos:start="67:35" pos:end="67:59">MissionExecutionException</name><argument_list pos:start="67:60" pos:end="67:75">(<argument pos:start="67:61" pos:end="67:74"><expr pos:start="67:61" pos:end="67:74"><call pos:start="67:61" pos:end="67:74"><name pos:start="67:61" pos:end="67:72"><name pos:start="67:61" pos:end="67:61">e</name><operator pos:start="67:62" pos:end="67:62">.</operator><name pos:start="67:63" pos:end="67:72">getMessage</name></name><argument_list pos:start="67:73" pos:end="67:74">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</throw>
		</block_content>}</block></catch></try>
		<return pos:start="69:17" pos:end="69:56">return <expr pos:start="69:24" pos:end="69:55"><call pos:start="69:24" pos:end="69:47"><name pos:start="69:24" pos:end="69:45"><name pos:start="69:24" pos:end="69:27">info</name><operator pos:start="69:28" pos:end="69:28">.</operator><name pos:start="69:29" pos:end="69:45">getCurrentFlights</name></name><argument_list pos:start="69:46" pos:end="69:47">()</argument_list></call> <operator pos:start="69:49" pos:end="69:50">!=</operator> <literal type="null" pos:start="69:52" pos:end="69:55">null</literal></expr>;</return>

	</block_content>}</block></function>

	<comment type="block" format="javadoc" pos:start="73:9" pos:end="77:11">/**
	 * Needs to actually activate the flight route. NOTE: Needs to handle ROUTE, WAYPOINT, TAKEOFF, and LAND (Synch is done internally and shouldn't need any extra coordination).
	 * 
	 * @throws Exception
	 */</comment>
	<function pos:start="78:9" pos:end="109:9"><type pos:start="78:9" pos:end="78:19"><specifier pos:start="78:9" pos:end="78:14">public</specifier> <name pos:start="78:16" pos:end="78:19">void</name></type> <name pos:start="78:21" pos:end="78:36">activateNextTask</name><parameter_list pos:start="78:37" pos:end="78:38">()</parameter_list> <throws pos:start="78:40" pos:end="78:71">throws <argument pos:start="78:47" pos:end="78:71"><expr pos:start="78:47" pos:end="78:71"><name pos:start="78:47" pos:end="78:71">MissionExecutionException</name></expr></argument></throws> <block pos:start="78:73" pos:end="109:9">{<block_content pos:start="79:17" pos:end="107:17">
		<expr_stmt pos:start="79:17" pos:end="79:34"><expr pos:start="79:17" pos:end="79:33"><name pos:start="79:17" pos:end="79:26">activeTask</name> <operator pos:start="79:28" pos:end="79:28">=</operator> <literal type="null" pos:start="79:30" pos:end="79:33">null</literal></expr>;</expr_stmt>
		<if_stmt pos:start="80:17" pos:end="107:17"><if pos:start="80:17" pos:end="107:17">if <condition pos:start="80:20" pos:end="80:40">(<expr pos:start="80:21" pos:end="80:39"><operator pos:start="80:21" pos:end="80:21">!</operator><call pos:start="80:22" pos:end="80:39"><name pos:start="80:22" pos:end="80:37"><name pos:start="80:22" pos:end="80:29">taskList</name><operator pos:start="80:30" pos:end="80:30">.</operator><name pos:start="80:31" pos:end="80:37">isEmpty</name></name><argument_list pos:start="80:38" pos:end="80:39">()</argument_list></call></expr>)</condition> <block pos:start="80:42" pos:end="107:17">{<block_content pos:start="81:25" pos:end="105:25">
			<expr_stmt pos:start="81:25" pos:end="81:53"><expr pos:start="81:25" pos:end="81:52"><name pos:start="81:25" pos:end="81:34">activeTask</name> <operator pos:start="81:36" pos:end="81:36">=</operator> <call pos:start="81:38" pos:end="81:52"><name pos:start="81:38" pos:end="81:49"><name pos:start="81:38" pos:end="81:45">taskList</name><operator pos:start="81:46" pos:end="81:46">.</operator><name pos:start="81:47" pos:end="81:49">get</name></name><argument_list pos:start="81:50" pos:end="81:52">(<argument pos:start="81:51" pos:end="81:51"><expr pos:start="81:51" pos:end="81:51"><literal type="number" pos:start="81:51" pos:end="81:51">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt pos:start="82:25" pos:end="82:43"><expr pos:start="82:25" pos:end="82:42"><call pos:start="82:25" pos:end="82:42"><name pos:start="82:25" pos:end="82:39"><name pos:start="82:25" pos:end="82:32">taskList</name><operator pos:start="82:33" pos:end="82:33">.</operator><name pos:start="82:34" pos:end="82:39">remove</name></name><argument_list pos:start="82:40" pos:end="82:42">(<argument pos:start="82:41" pos:end="82:41"><expr pos:start="82:41" pos:end="82:41"><literal type="number" pos:start="82:41" pos:end="82:41">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

			<comment type="line" pos:start="84:25" pos:end="84:101">// Now execute the task. This will depend on whether it is a waypoint, entire</comment>
			<comment type="line" pos:start="85:25" pos:end="85:48">// route, or synch point</comment>
			<if_stmt pos:start="86:25" pos:end="105:25"><if pos:start="86:25" pos:end="95:25">if <condition pos:start="86:28" pos:end="86:59">(<expr pos:start="86:29" pos:end="86:58"><name pos:start="86:29" pos:end="86:38">activeTask</name> <operator pos:start="86:40" pos:end="86:49">instanceof</operator> <name pos:start="86:51" pos:end="86:58">SyncTask</name></expr>)</condition> <block pos:start="86:61" pos:end="95:25">{<block_content pos:start="87:33" pos:end="93:33">
				<expr_stmt pos:start="87:33" pos:end="87:124"><expr pos:start="87:33" pos:end="87:123"><call pos:start="87:33" pos:end="87:123"><name pos:start="87:33" pos:end="87:50"><name pos:start="87:33" pos:end="87:38">LOGGER</name><operator pos:start="87:39" pos:end="87:39">.</operator><name pos:start="87:40" pos:end="87:50">missionInfo</name></name><argument_list pos:start="87:51" pos:end="87:123">(<argument pos:start="87:52" pos:end="87:122"><expr pos:start="87:52" pos:end="87:122"><literal type="string" pos:start="87:52" pos:end="87:57">"UAV "</literal> <operator pos:start="87:59" pos:end="87:59">+</operator> <name pos:start="87:61" pos:end="87:65">uavid</name> <operator pos:start="87:67" pos:end="87:67">+</operator> <literal type="string" pos:start="87:69" pos:end="87:95">" waiting at SYNCH POINT: "</literal> <operator pos:start="87:97" pos:end="87:97">+</operator> <call pos:start="87:99" pos:end="87:122"><name pos:start="87:99" pos:end="87:120"><name pos:start="87:99" pos:end="87:108">activeTask</name><operator pos:start="87:109" pos:end="87:109">.</operator><name pos:start="87:110" pos:end="87:120">getTaskName</name></name><argument_list pos:start="87:121" pos:end="87:122">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<expr_stmt pos:start="88:33" pos:end="88:95"><expr pos:start="88:33" pos:end="88:94"><call pos:start="88:33" pos:end="88:94"><name pos:start="88:33" pos:end="88:61"><name pos:start="88:33" pos:end="88:40">synchMgr</name><operator pos:start="88:41" pos:end="88:41">.</operator><name pos:start="88:42" pos:end="88:61">uavVisitedSynchPoint</name></name><argument_list pos:start="88:62" pos:end="88:94">(<argument pos:start="88:63" pos:end="88:67"><expr pos:start="88:63" pos:end="88:67"><name pos:start="88:63" pos:end="88:67">uavid</name></expr></argument>, <argument pos:start="88:70" pos:end="88:93"><expr pos:start="88:70" pos:end="88:93"><call pos:start="88:70" pos:end="88:93"><name pos:start="88:70" pos:end="88:91"><name pos:start="88:70" pos:end="88:79">activeTask</name><operator pos:start="88:80" pos:end="88:80">.</operator><name pos:start="88:81" pos:end="88:91">getTaskName</name></name><argument_list pos:start="88:92" pos:end="88:93">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:start="88:97" pos:end="88:124">// Marks this uav as synched</comment>

				<if_stmt pos:start="90:33" pos:end="93:33"><if pos:start="90:33" pos:end="93:33">if <condition pos:start="90:36" pos:end="90:86">(<expr pos:start="90:37" pos:end="90:85"><call pos:start="90:37" pos:end="90:85"><name pos:start="90:37" pos:end="90:59"><name pos:start="90:37" pos:end="90:44">synchMgr</name><operator pos:start="90:45" pos:end="90:45">.</operator><name pos:start="90:46" pos:end="90:59">isFullySynched</name></name><argument_list pos:start="90:60" pos:end="90:85">(<argument pos:start="90:61" pos:end="90:84"><expr pos:start="90:61" pos:end="90:84"><call pos:start="90:61" pos:end="90:84"><name pos:start="90:61" pos:end="90:82"><name pos:start="90:61" pos:end="90:70">activeTask</name><operator pos:start="90:71" pos:end="90:71">.</operator><name pos:start="90:72" pos:end="90:82">getTaskName</name></name><argument_list pos:start="90:83" pos:end="90:84">()</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="90:88" pos:end="93:33">{<block_content pos:start="91:41" pos:end="92:58">
					<expr_stmt pos:start="91:41" pos:end="91:113"><expr pos:start="91:41" pos:end="91:112"><call pos:start="91:41" pos:end="91:112"><name pos:start="91:41" pos:end="91:58"><name pos:start="91:41" pos:end="91:46">LOGGER</name><operator pos:start="91:47" pos:end="91:47">.</operator><name pos:start="91:48" pos:end="91:58">missionInfo</name></name><argument_list pos:start="91:59" pos:end="91:112">(<argument pos:start="91:60" pos:end="91:111"><expr pos:start="91:60" pos:end="91:111"><literal type="string" pos:start="91:60" pos:end="91:84">"All UAVs released from "</literal> <operator pos:start="91:86" pos:end="91:86">+</operator> <call pos:start="91:88" pos:end="91:111"><name pos:start="91:88" pos:end="91:109"><name pos:start="91:88" pos:end="91:97">activeTask</name><operator pos:start="91:98" pos:end="91:98">.</operator><name pos:start="91:99" pos:end="91:109">getTaskName</name></name><argument_list pos:start="91:110" pos:end="91:111">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<expr_stmt pos:start="92:41" pos:end="92:58"><expr pos:start="92:41" pos:end="92:57"><name pos:start="92:41" pos:end="92:50">activeTask</name> <operator pos:start="92:52" pos:end="92:52">=</operator> <literal type="null" pos:start="92:54" pos:end="92:57">null</literal></expr>;</expr_stmt> <comment type="line" pos:start="92:60" pos:end="92:78">// Free to move on.</comment>
				</block_content>}</block></if></if_stmt>

			</block_content>}</block></if> <if type="elseif" pos:start="95:27" pos:end="97:25">else if <condition pos:start="95:35" pos:end="95:67">(<expr pos:start="95:36" pos:end="95:66"><name pos:start="95:36" pos:end="95:45">activeTask</name> <operator pos:start="95:47" pos:end="95:56">instanceof</operator> <name pos:start="95:58" pos:end="95:66">RouteTask</name></expr>)</condition> <block pos:start="95:69" pos:end="97:25">{<block_content pos:start="96:33" pos:end="96:70">
				<expr_stmt pos:start="96:33" pos:end="96:70"><expr pos:start="96:33" pos:end="96:69"><call pos:start="96:33" pos:end="96:69"><name pos:start="96:33" pos:end="96:57"><name pos:start="96:33" pos:end="96:43">MissionUtil</name><operator pos:start="96:44" pos:end="96:44">.</operator><name pos:start="96:45" pos:end="96:57">activateRoute</name></name><argument_list pos:start="96:58" pos:end="96:69">(<argument pos:start="96:59" pos:end="96:68"><expr pos:start="96:59" pos:end="96:68"><name pos:start="96:59" pos:end="96:68">activeTask</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			</block_content>}</block></if> <if type="elseif" pos:start="97:27" pos:end="99:25">else if <condition pos:start="97:35" pos:end="97:67">(<expr pos:start="97:36" pos:end="97:66"><name pos:start="97:36" pos:end="97:45">activeTask</name> <operator pos:start="97:47" pos:end="97:56">instanceof</operator> <name pos:start="97:58" pos:end="97:66">DelayTask</name></expr>)</condition> <block pos:start="97:69" pos:end="99:25">{<block_content pos:start="98:33" pos:end="98:74"> 
				<expr_stmt pos:start="98:33" pos:end="98:74"><expr pos:start="98:33" pos:end="98:73"><operator pos:start="98:33" pos:end="98:33">(</operator><operator pos:start="98:34" pos:end="98:34">(</operator><name pos:start="98:35" pos:end="98:43">DelayTask</name><operator pos:start="98:44" pos:end="98:44">)</operator> <name pos:start="98:46" pos:end="98:55">activeTask</name><operator pos:start="98:56" pos:end="98:56">)</operator><operator pos:start="98:57" pos:end="98:57">.</operator><call pos:start="98:58" pos:end="98:73"><name pos:start="98:58" pos:end="98:71">startDelayTask</name><argument_list pos:start="98:72" pos:end="98:73">()</argument_list></call></expr>;</expr_stmt>
			</block_content>}</block></if> <if type="elseif" pos:start="99:27" pos:end="103:25">else if <condition pos:start="99:35" pos:end="100:74">(<expr pos:start="99:36" pos:end="100:73"><name pos:start="99:36" pos:end="99:45">activeTask</name> <operator pos:start="99:47" pos:end="99:56">instanceof</operator> <name pos:start="99:58" pos:end="99:69">WaypointTask</name> <operator pos:start="99:71" pos:end="99:72">||</operator> <name pos:start="99:74" pos:end="99:83">activeTask</name> <operator pos:start="99:85" pos:end="99:94">instanceof</operator> <name pos:start="99:96" pos:end="99:106">TakeoffTask</name>
					<operator pos:start="100:41" pos:end="100:42">||</operator> <name pos:start="100:44" pos:end="100:53">activeTask</name> <operator pos:start="100:55" pos:end="100:64">instanceof</operator> <name pos:start="100:66" pos:end="100:73">LandTask</name></expr>)</condition> <block pos:start="100:76" pos:end="103:25">{<block_content pos:start="101:33" pos:end="102:73">
				<expr_stmt pos:start="101:33" pos:end="101:126"><expr pos:start="101:33" pos:end="101:125"><call pos:start="101:33" pos:end="101:125"><name pos:start="101:33" pos:end="101:50"><name pos:start="101:33" pos:end="101:38">LOGGER</name><operator pos:start="101:39" pos:end="101:39">.</operator><name pos:start="101:40" pos:end="101:50">missionInfo</name></name><argument_list pos:start="101:51" pos:end="101:125">(<argument pos:start="101:52" pos:end="101:124"><expr pos:start="101:52" pos:end="101:124"><literal type="string" pos:start="101:52" pos:end="101:83">"ACTIVATED FLIGHT TO WAYPOINT: "</literal> <operator pos:start="101:85" pos:end="101:85">+</operator> <name pos:start="101:87" pos:end="101:91">uavid</name> <operator pos:start="101:93" pos:end="101:93">+</operator> <literal type="string" pos:start="101:95" pos:end="101:97">" "</literal> <operator pos:start="101:99" pos:end="101:99">+</operator> <call pos:start="101:101" pos:end="101:124"><name pos:start="101:101" pos:end="101:122"><name pos:start="101:101" pos:end="101:110">activeTask</name><operator pos:start="101:111" pos:end="101:111">.</operator><name pos:start="101:112" pos:end="101:122">getTaskName</name></name><argument_list pos:start="101:123" pos:end="101:124">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<expr_stmt pos:start="102:33" pos:end="102:73"><expr pos:start="102:33" pos:end="102:72"><call pos:start="102:33" pos:end="102:72"><name pos:start="102:33" pos:end="102:60"><name pos:start="102:33" pos:end="102:43">MissionUtil</name><operator pos:start="102:44" pos:end="102:44">.</operator><name pos:start="102:45" pos:end="102:60">activateWaypoint</name></name><argument_list pos:start="102:61" pos:end="102:72">(<argument pos:start="102:62" pos:end="102:71"><expr pos:start="102:62" pos:end="102:71"><name pos:start="102:62" pos:end="102:71">activeTask</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			</block_content>}</block></if> <else pos:start="103:27" pos:end="105:25">else <block pos:start="103:32" pos:end="105:25">{<block_content pos:start="104:33" pos:end="104:126">
				<throw pos:start="104:33" pos:end="104:126">throw <expr pos:start="104:39" pos:end="104:125"><operator pos:start="104:39" pos:end="104:41">new</operator> <call pos:start="104:43" pos:end="104:125"><name pos:start="104:43" pos:end="104:71">UnsupportedOperationException</name><argument_list pos:start="104:72" pos:end="104:125">(<argument pos:start="104:73" pos:end="104:124"><expr pos:start="104:73" pos:end="104:124"><literal type="string" pos:start="104:73" pos:end="104:80">"Task '"</literal> <operator pos:start="104:82" pos:end="104:82">+</operator> <call pos:start="104:84" pos:end="104:104"><name pos:start="104:84" pos:end="104:102"><name pos:start="104:84" pos:end="104:93">activeTask</name><operator pos:start="104:94" pos:end="104:94">.</operator><name pos:start="104:95" pos:end="104:102">getClass</name></name><argument_list pos:start="104:103" pos:end="104:104">()</argument_list></call> <operator pos:start="104:106" pos:end="104:106">+</operator> <literal type="string" pos:start="104:108" pos:end="104:124">"' not supported"</literal></expr></argument>)</argument_list></call></expr>;</throw>
			</block_content>}</block></else></if_stmt>

		</block_content>}</block></if></if_stmt>

	</block_content>}</block></function>

	<function pos:start="111:9" pos:end="113:9"><type pos:start="111:9" pos:end="111:21"><specifier pos:start="111:9" pos:end="111:14">public</specifier> <name pos:start="111:16" pos:end="111:21">String</name></type> <name pos:start="111:23" pos:end="111:30">getUavID</name><parameter_list pos:start="111:31" pos:end="111:32">()</parameter_list> <block pos:start="111:34" pos:end="113:9">{<block_content pos:start="112:17" pos:end="112:29">
		<return pos:start="112:17" pos:end="112:29">return <expr pos:start="112:24" pos:end="112:28"><name pos:start="112:24" pos:end="112:28">uavid</name></expr>;</return>
	</block_content>}</block></function>

	<function pos:start="115:9" pos:end="117:9"><type pos:start="115:9" pos:end="115:19"><specifier pos:start="115:9" pos:end="115:14">public</specifier> <name pos:start="115:16" pos:end="115:19">void</name></type> <name pos:start="115:21" pos:end="115:43">setCoordinationAltitude</name><parameter_list pos:start="115:44" pos:end="115:52">(<parameter pos:start="115:45" pos:end="115:51"><decl pos:start="115:45" pos:end="115:51"><type pos:start="115:45" pos:end="115:47"><name pos:start="115:45" pos:end="115:47">int</name></type> <name pos:start="115:49" pos:end="115:51">alt</name></decl></parameter>)</parameter_list> <block pos:start="115:54" pos:end="117:9">{<block_content pos:start="116:17" pos:end="116:43">
		<expr_stmt pos:start="116:17" pos:end="116:43"><expr pos:start="116:17" pos:end="116:42"><name pos:start="116:17" pos:end="116:36">coordinationAltitude</name> <operator pos:start="116:38" pos:end="116:38">=</operator> <name pos:start="116:40" pos:end="116:42">alt</name></expr>;</expr_stmt>
	</block_content>}</block></function>

	<function pos:start="119:9" pos:end="121:9"><type pos:start="119:9" pos:end="119:18"><specifier pos:start="119:9" pos:end="119:14">public</specifier> <name pos:start="119:16" pos:end="119:18">int</name></type> <name pos:start="119:20" pos:end="119:42">getCoordinationAltitude</name><parameter_list pos:start="119:43" pos:end="119:44">()</parameter_list> <block pos:start="119:46" pos:end="121:9">{<block_content pos:start="120:17" pos:end="120:44">
		<return pos:start="120:17" pos:end="120:44">return <expr pos:start="120:24" pos:end="120:43"><name pos:start="120:24" pos:end="120:43">coordinationAltitude</name></expr>;</return> <comment type="line" pos:start="120:46" pos:end="120:66">// Add error if null.</comment>
	</block_content>}</block></function>

	<function pos:start="123:9" pos:end="142:9"><type pos:start="123:9" pos:end="123:22"><specifier pos:start="123:9" pos:end="123:14">public</specifier> <name pos:start="123:16" pos:end="123:22">boolean</name></type> <name pos:start="123:24" pos:end="123:36">hasActiveTask</name><parameter_list pos:start="123:37" pos:end="123:38">()</parameter_list> <throws pos:start="123:40" pos:end="123:71">throws <argument pos:start="123:47" pos:end="123:71"><expr pos:start="123:47" pos:end="123:71"><name pos:start="123:47" pos:end="123:71">MissionExecutionException</name></expr></argument></throws> <block pos:start="123:73" pos:end="142:9">{<block_content pos:start="124:17" pos:end="141:17">
		<if_stmt pos:start="124:17" pos:end="126:17"><if pos:start="124:17" pos:end="126:17">if <condition pos:start="124:20" pos:end="124:39">(<expr pos:start="124:21" pos:end="124:38"><name pos:start="124:21" pos:end="124:30">activeTask</name> <operator pos:start="124:32" pos:end="124:33">==</operator> <literal type="null" pos:start="124:35" pos:end="124:38">null</literal></expr>)</condition> <block pos:start="124:41" pos:end="126:17">{<block_content pos:start="125:25" pos:end="125:37">
			<return pos:start="125:25" pos:end="125:37">return <expr pos:start="125:32" pos:end="125:36"><literal type="boolean" pos:start="125:32" pos:end="125:36">false</literal></expr>;</return>
		</block_content>}</block></if></if_stmt>
		<if_stmt pos:start="127:17" pos:end="141:17"><if pos:start="127:17" pos:end="137:17">if <condition pos:start="127:20" pos:end="127:51">(<expr pos:start="127:21" pos:end="127:50"><name pos:start="127:21" pos:end="127:30">activeTask</name> <operator pos:start="127:32" pos:end="127:41">instanceof</operator> <name pos:start="127:43" pos:end="127:50">SyncTask</name></expr>)</condition> <block pos:start="127:53" pos:end="137:17">{<block_content pos:start="128:25" pos:end="135:36">
			<decl_stmt pos:start="128:25" pos:end="128:68"><decl pos:start="128:25" pos:end="128:67"><type pos:start="128:25" pos:end="128:30"><name pos:start="128:25" pos:end="128:30">String</name></type> <name pos:start="128:32" pos:end="128:40">synchName</name> <init pos:start="128:42" pos:end="128:67">= <expr pos:start="128:44" pos:end="128:67"><call pos:start="128:44" pos:end="128:67"><name pos:start="128:44" pos:end="128:65"><name pos:start="128:44" pos:end="128:53">activeTask</name><operator pos:start="128:54" pos:end="128:54">.</operator><name pos:start="128:55" pos:end="128:65">getTaskName</name></name><argument_list pos:start="128:66" pos:end="128:67">()</argument_list></call></expr></init></decl>;</decl_stmt>
			<if_stmt pos:start="129:25" pos:end="134:25"><if pos:start="129:25" pos:end="132:25">if <condition pos:start="129:28" pos:end="129:66">(<expr pos:start="129:29" pos:end="129:65"><operator pos:start="129:29" pos:end="129:29">!</operator><call pos:start="129:30" pos:end="129:65"><name pos:start="129:30" pos:end="129:54"><name pos:start="129:30" pos:end="129:37">synchMgr</name><operator pos:start="129:38" pos:end="129:38">.</operator><name pos:start="129:39" pos:end="129:54">synchPointExists</name></name><argument_list pos:start="129:55" pos:end="129:65">(<argument pos:start="129:56" pos:end="129:64"><expr pos:start="129:56" pos:end="129:64"><name pos:start="129:56" pos:end="129:64">synchName</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="129:68" pos:end="132:25">{<block_content pos:start="130:33" pos:end="131:45">
				<expr_stmt pos:start="130:33" pos:end="130:75"><expr pos:start="130:33" pos:end="130:74"><call pos:start="130:33" pos:end="130:74"><name pos:start="130:33" pos:end="130:51"><name pos:start="130:33" pos:end="130:38">LOGGER</name><operator pos:start="130:39" pos:end="130:39">.</operator><name pos:start="130:40" pos:end="130:51">missionError</name></name><argument_list pos:start="130:52" pos:end="130:74">(<argument pos:start="130:53" pos:end="130:73"><expr pos:start="130:53" pos:end="130:73"><literal type="string" pos:start="130:53" pos:end="130:73">"Missing synch point"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<return pos:start="131:33" pos:end="131:45">return <expr pos:start="131:40" pos:end="131:44"><literal type="boolean" pos:start="131:40" pos:end="131:44">false</literal></expr>;</return>
			</block_content>}</block></if> <if type="elseif" pos:start="132:27" pos:end="134:25">else if <condition pos:start="132:35" pos:end="132:70">(<expr pos:start="132:36" pos:end="132:69"><call pos:start="132:36" pos:end="132:69"><name pos:start="132:36" pos:end="132:58"><name pos:start="132:36" pos:end="132:43">synchMgr</name><operator pos:start="132:44" pos:end="132:44">.</operator><name pos:start="132:45" pos:end="132:58">isFullySynched</name></name><argument_list pos:start="132:59" pos:end="132:69">(<argument pos:start="132:60" pos:end="132:68"><expr pos:start="132:60" pos:end="132:68"><name pos:start="132:60" pos:end="132:68">synchName</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="132:72" pos:end="134:25">{<block_content pos:start="133:33" pos:end="133:45">
				<return pos:start="133:33" pos:end="133:45">return <expr pos:start="133:40" pos:end="133:44"><literal type="boolean" pos:start="133:40" pos:end="133:44">false</literal></expr>;</return>
			</block_content>}</block></if></if_stmt>
			<return pos:start="135:25" pos:end="135:36">return <expr pos:start="135:32" pos:end="135:35"><literal type="boolean" pos:start="135:32" pos:end="135:35">true</literal></expr>;</return>

		</block_content>}</block></if> <if type="elseif" pos:start="137:19" pos:end="139:17">else if <condition pos:start="137:27" pos:end="137:59">(<expr pos:start="137:28" pos:end="137:58"><name pos:start="137:28" pos:end="137:37">activeTask</name> <operator pos:start="137:39" pos:end="137:48">instanceof</operator> <name pos:start="137:50" pos:end="137:58">DelayTask</name></expr>)</condition> <block pos:start="137:61" pos:end="139:17">{<block_content pos:start="138:25" pos:end="138:70">
			<return pos:start="138:25" pos:end="138:70">return <expr pos:start="138:32" pos:end="138:69"><operator pos:start="138:32" pos:end="138:32">!</operator><operator pos:start="138:33" pos:end="138:33">(</operator><operator pos:start="138:34" pos:end="138:34">(</operator><name pos:start="138:35" pos:end="138:43">DelayTask</name><operator pos:start="138:44" pos:end="138:44">)</operator> <name pos:start="138:46" pos:end="138:55">activeTask</name><operator pos:start="138:56" pos:end="138:56">)</operator><operator pos:start="138:57" pos:end="138:57">.</operator><call pos:start="138:58" pos:end="138:69"><name pos:start="138:58" pos:end="138:67">isFinished</name><argument_list pos:start="138:68" pos:end="138:69">()</argument_list></call></expr>;</return>
		</block_content>}</block></if> <else pos:start="139:19" pos:end="141:17">else <block pos:start="139:24" pos:end="141:17">{<block_content pos:start="140:25" pos:end="140:49"><comment type="line" pos:start="139:25" pos:end="139:44">// Waypoint or Route</comment>
			<return pos:start="140:25" pos:end="140:49">return <expr pos:start="140:32" pos:end="140:48"><call pos:start="140:32" pos:end="140:48"><name pos:start="140:32" pos:end="140:46">isExecutingTask</name><argument_list pos:start="140:47" pos:end="140:48">()</argument_list></call></expr>;</return>
		</block_content>}</block></else></if_stmt>
	</block_content>}</block></function>

	<function pos:start="144:9" pos:end="150:9"><type pos:start="144:9" pos:end="144:19"><specifier pos:start="144:9" pos:end="144:14">public</specifier> <name pos:start="144:16" pos:end="144:19">void</name></type> <name pos:start="144:21" pos:end="144:27">addTask</name><parameter_list pos:start="144:28" pos:end="144:79">(<parameter pos:start="144:29" pos:end="144:45"><decl pos:start="144:29" pos:end="144:45"><type pos:start="144:29" pos:end="144:45"><name pos:start="144:29" pos:end="144:40">IMissionTask</name></type> <name pos:start="144:42" pos:end="144:45">task</name></decl></parameter>, <parameter pos:start="144:48" pos:end="144:78"><decl pos:start="144:48" pos:end="144:78"><type pos:start="144:48" pos:end="144:78"><name pos:start="144:48" pos:end="144:69">SynchronizationManager</name></type> <name pos:start="144:71" pos:end="144:78">synchMgr</name></decl></parameter>)</parameter_list> <throws pos:start="144:81" pos:end="144:112">throws <argument pos:start="144:88" pos:end="144:112"><expr pos:start="144:88" pos:end="144:112"><name pos:start="144:88" pos:end="144:112">MissionExecutionException</name></expr></argument></throws> <block pos:start="144:114" pos:end="150:9">{<block_content pos:start="146:17" pos:end="149:17"> <comment type="line" pos:start="144:116" pos:end="144:124">// Remove</comment>
		<comment type="line" pos:start="145:17" pos:end="145:27">// SynchMgr</comment>
		<expr_stmt pos:start="146:17" pos:end="146:35"><expr pos:start="146:17" pos:end="146:34"><call pos:start="146:17" pos:end="146:34"><name pos:start="146:17" pos:end="146:28"><name pos:start="146:17" pos:end="146:24">taskList</name><operator pos:start="146:25" pos:end="146:25">.</operator><name pos:start="146:26" pos:end="146:28">add</name></name><argument_list pos:start="146:29" pos:end="146:34">(<argument pos:start="146:30" pos:end="146:33"><expr pos:start="146:30" pos:end="146:33"><name pos:start="146:30" pos:end="146:33">task</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<if_stmt pos:start="147:17" pos:end="149:17"><if pos:start="147:17" pos:end="149:17">if <condition pos:start="147:20" pos:end="147:79">(<expr pos:start="147:21" pos:end="147:78"><name pos:start="147:21" pos:end="147:41">firstWaypointLocation</name> <operator pos:start="147:43" pos:end="147:44">==</operator> <literal type="null" pos:start="147:46" pos:end="147:49">null</literal> <operator pos:start="147:51" pos:end="147:52">&amp;&amp;</operator> <name pos:start="147:54" pos:end="147:57">task</name> <operator pos:start="147:59" pos:end="147:68">instanceof</operator> <name pos:start="147:70" pos:end="147:78">RouteTask</name></expr>)</condition> <block pos:start="147:81" pos:end="149:17">{<block_content pos:start="148:25" pos:end="148:97">
			<expr_stmt pos:start="148:25" pos:end="148:97"><expr pos:start="148:25" pos:end="148:96"><name pos:start="148:25" pos:end="148:45">firstWaypointLocation</name> <operator pos:start="148:47" pos:end="148:47">=</operator> <call pos:start="148:49" pos:end="148:96"><name pos:start="148:49" pos:end="148:76"><name pos:start="148:49" pos:end="148:59">MissionUtil</name><operator pos:start="148:60" pos:end="148:60">.</operator><name pos:start="148:61" pos:end="148:76">getFirstWayPoint</name></name><argument_list pos:start="148:77" pos:end="148:96">(<argument pos:start="148:78" pos:end="148:95"><expr pos:start="148:78" pos:end="148:95"><call pos:start="148:78" pos:end="148:95"><name pos:start="148:78" pos:end="148:93"><name pos:start="148:78" pos:end="148:81">task</name><operator pos:start="148:82" pos:end="148:82">.</operator><name pos:start="148:83" pos:end="148:93">getTaskName</name></name><argument_list pos:start="148:94" pos:end="148:95">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		</block_content>}</block></if></if_stmt>
	</block_content>}</block></function>

	<function pos:start="152:9" pos:end="159:9"><type pos:start="152:9" pos:end="152:19"><specifier pos:start="152:9" pos:end="152:14">public</specifier> <name pos:start="152:16" pos:end="152:19">void</name></type> <name pos:start="152:21" pos:end="152:36">buildSynchPoints</name><parameter_list pos:start="152:37" pos:end="152:38">()</parameter_list> <block pos:start="152:40" pos:end="159:9">{<block_content pos:start="153:17" pos:end="158:19">
		<expr_stmt pos:start="153:17" pos:end="158:19"><expr pos:start="153:17" pos:end="158:18"><call pos:start="153:17" pos:end="158:18"><name pos:start="153:17" pos:end="153:32"><name pos:start="153:17" pos:end="153:24">taskList</name><operator pos:start="153:25" pos:end="153:25">.</operator><name pos:start="153:26" pos:end="153:32">forEach</name></name><argument_list pos:start="153:33" pos:end="158:18">(<argument pos:start="153:34" pos:end="158:17"><expr pos:start="153:34" pos:end="158:17"><lambda pos:start="153:34" pos:end="158:17"><parameter_list type="pseudo" pos:start="153:34" pos:end="153:37"><parameter pos:start="153:34" pos:end="153:37"><decl pos:start="153:34" pos:end="153:37"><name pos:start="153:34" pos:end="153:37">task</name></decl></parameter></parameter_list> -&gt; <block pos:start="153:42" pos:end="158:17">{<block_content pos:start="154:25" pos:end="157:25">
			<if_stmt pos:start="154:25" pos:end="157:25"><if pos:start="154:25" pos:end="157:25">if <condition pos:start="154:28" pos:end="154:53">(<expr pos:start="154:29" pos:end="154:52"><name pos:start="154:29" pos:end="154:32">task</name> <operator pos:start="154:34" pos:end="154:43">instanceof</operator> <name pos:start="154:45" pos:end="154:52">SyncTask</name></expr>)</condition> <block pos:start="154:55" pos:end="157:25">{<block_content pos:start="155:33" pos:end="156:91">
				<expr_stmt pos:start="155:33" pos:end="155:88"><expr pos:start="155:33" pos:end="155:87"><call pos:start="155:33" pos:end="155:87"><name pos:start="155:33" pos:end="155:67"><name pos:start="155:33" pos:end="155:40">synchMgr</name><operator pos:start="155:41" pos:end="155:41">.</operator><name pos:start="155:42" pos:end="155:67">createSynchronizationPoint</name></name><argument_list pos:start="155:68" pos:end="155:87">(<argument pos:start="155:69" pos:end="155:86"><expr pos:start="155:69" pos:end="155:86"><call pos:start="155:69" pos:end="155:86"><name pos:start="155:69" pos:end="155:84"><name pos:start="155:69" pos:end="155:72">task</name><operator pos:start="155:73" pos:end="155:73">.</operator><name pos:start="155:74" pos:end="155:84">getTaskName</name></name><argument_list pos:start="155:85" pos:end="155:86">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<expr_stmt pos:start="156:33" pos:end="156:91"><expr pos:start="156:33" pos:end="156:90"><call pos:start="156:33" pos:end="156:90"><name pos:start="156:33" pos:end="156:53"><name pos:start="156:33" pos:end="156:40">synchMgr</name><operator pos:start="156:41" pos:end="156:41">.</operator><name pos:start="156:42" pos:end="156:53">addSynchItem</name></name><argument_list pos:start="156:54" pos:end="156:90">(<argument pos:start="156:55" pos:end="156:69"><expr pos:start="156:55" pos:end="156:69"><call pos:start="156:55" pos:end="156:69"><name pos:start="156:55" pos:end="156:67"><name pos:start="156:55" pos:end="156:58">task</name><operator pos:start="156:59" pos:end="156:59">.</operator><name pos:start="156:60" pos:end="156:67">getUAVId</name></name><argument_list pos:start="156:68" pos:end="156:69">()</argument_list></call></expr></argument>, <argument pos:start="156:72" pos:end="156:89"><expr pos:start="156:72" pos:end="156:89"><call pos:start="156:72" pos:end="156:89"><name pos:start="156:72" pos:end="156:87"><name pos:start="156:72" pos:end="156:75">task</name><operator pos:start="156:76" pos:end="156:76">.</operator><name pos:start="156:77" pos:end="156:87">getTaskName</name></name><argument_list pos:start="156:88" pos:end="156:89">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			</block_content>}</block></if></if_stmt>
		</block_content>}</block></lambda></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	</block_content>}</block></function>

	<function pos:start="161:9" pos:end="164:9"><type pos:start="161:9" pos:end="161:22"><specifier pos:start="161:9" pos:end="161:14">public</specifier> <name pos:start="161:16" pos:end="161:22">boolean</name></type> <name pos:start="161:24" pos:end="161:31">hasTasks</name><parameter_list pos:start="161:32" pos:end="161:33">()</parameter_list> <block pos:start="161:35" pos:end="164:9">{<block_content pos:start="162:17" pos:end="162:65">
		<return pos:start="162:17" pos:end="162:65">return <expr pos:start="162:24" pos:end="162:64"><name pos:start="162:24" pos:end="162:33">activeTask</name> <operator pos:start="162:35" pos:end="162:36">!=</operator> <literal type="null" pos:start="162:38" pos:end="162:41">null</literal> <operator pos:start="162:43" pos:end="162:44">||</operator> <call pos:start="162:46" pos:end="162:60"><name pos:start="162:46" pos:end="162:58"><name pos:start="162:46" pos:end="162:53">taskList</name><operator pos:start="162:54" pos:end="162:54">.</operator><name pos:start="162:55" pos:end="162:58">size</name></name><argument_list pos:start="162:59" pos:end="162:60">()</argument_list></call> <operator pos:start="162:62" pos:end="162:62">&gt;</operator> <literal type="number" pos:start="162:64" pos:end="162:64">0</literal></expr>;</return>

	</block_content>}</block></function>

	<function pos:start="166:9" pos:end="168:9"><type pos:start="166:9" pos:end="166:18"><specifier pos:start="166:9" pos:end="166:14">public</specifier> <name pos:start="166:16" pos:end="166:18">int</name></type> <name pos:start="166:20" pos:end="166:28">taskCount</name><parameter_list pos:start="166:29" pos:end="166:30">()</parameter_list> <block pos:start="166:32" pos:end="168:9">{<block_content pos:start="167:17" pos:end="167:39">
		<return pos:start="167:17" pos:end="167:39">return <expr pos:start="167:24" pos:end="167:38"><call pos:start="167:24" pos:end="167:38"><name pos:start="167:24" pos:end="167:36"><name pos:start="167:24" pos:end="167:31">taskList</name><operator pos:start="167:32" pos:end="167:32">.</operator><name pos:start="167:33" pos:end="167:36">size</name></name><argument_list pos:start="167:37" pos:end="167:38">()</argument_list></call></expr>;</return>
	</block_content>}</block></function>

	<comment type="block" format="javadoc" pos:start="170:9" pos:end="175:11">/**
	 * Expand the task list with PATTERNS. Currently supports two different patterns "SynchronizedTakeoff" and "SynchronizedLanding" Assumptions: SynchronizedTakeoff has a ROUTE definied immediately
	 * after. SynchronizedLanding has a ROUTE defined immediately prior.
	 * 
	 * @throws MissionExecutionException
	 */</comment>
	<function pos:start="176:9" pos:end="204:9"><type pos:start="176:9" pos:end="176:19"><specifier pos:start="176:9" pos:end="176:14">public</specifier> <name pos:start="176:16" pos:end="176:19">void</name></type> <name pos:start="176:21" pos:end="176:34">expandTaskList</name><parameter_list pos:start="176:35" pos:end="176:36">()</parameter_list> <throws pos:start="176:38" pos:end="176:69">throws <argument pos:start="176:45" pos:end="176:69"><expr pos:start="176:45" pos:end="176:69"><name pos:start="176:45" pos:end="176:69">MissionExecutionException</name></expr></argument></throws> <block pos:start="176:71" pos:end="204:9">{<block_content pos:start="177:17" pos:end="203:36">
		<decl_stmt pos:start="177:17" pos:end="177:64"><decl pos:start="177:17" pos:end="177:63"><type pos:start="177:17" pos:end="177:34"><name pos:start="177:17" pos:end="177:34"><name pos:start="177:17" pos:end="177:20">List</name><argument_list type="generic" pos:start="177:21" pos:end="177:34">&lt;<argument pos:start="177:22" pos:end="177:33"><name pos:start="177:22" pos:end="177:33">IMissionTask</name></argument>&gt;</argument_list></name></type> <name pos:start="177:36" pos:end="177:43">allTasks</name> <init pos:start="177:45" pos:end="177:63">= <expr pos:start="177:47" pos:end="177:63"><operator pos:start="177:47" pos:end="177:49">new</operator> <call pos:start="177:51" pos:end="177:63"><name pos:start="177:51" pos:end="177:61"><name pos:start="177:51" pos:end="177:59">ArrayList</name><argument_list type="generic" pos:start="177:60" pos:end="177:61">&lt;&gt;</argument_list></name><argument_list pos:start="177:62" pos:end="177:63">()</argument_list></call></expr></init></decl>;</decl_stmt>
		<for pos:start="178:17" pos:end="202:17">for <control pos:start="178:21" pos:end="178:50">(<init pos:start="178:22" pos:end="178:49"><decl pos:start="178:22" pos:end="178:49"><type pos:start="178:22" pos:end="178:33"><name pos:start="178:22" pos:end="178:33">IMissionTask</name></type> <name pos:start="178:35" pos:end="178:38">task</name> <range pos:start="178:40" pos:end="178:49">: <expr pos:start="178:42" pos:end="178:49"><name pos:start="178:42" pos:end="178:49">taskList</name></expr></range></decl></init>)</control> <block pos:start="178:52" pos:end="202:17">{<block_content pos:start="179:25" pos:end="201:25">
			<expr_stmt pos:start="179:25" pos:end="179:76"><expr pos:start="179:25" pos:end="179:75"><name pos:start="179:25" pos:end="179:36">homeLocation</name> <operator pos:start="179:38" pos:end="179:38">=</operator> <call pos:start="179:40" pos:end="179:75"><name pos:start="179:40" pos:end="179:58"><name pos:start="179:40" pos:end="179:50">MissionUtil</name><operator pos:start="179:51" pos:end="179:51">.</operator><name pos:start="179:52" pos:end="179:58">getHome</name></name><argument_list pos:start="179:59" pos:end="179:75">(<argument pos:start="179:60" pos:end="179:74"><expr pos:start="179:60" pos:end="179:74"><call pos:start="179:60" pos:end="179:74"><name pos:start="179:60" pos:end="179:72"><name pos:start="179:60" pos:end="179:63">task</name><operator pos:start="179:64" pos:end="179:64">.</operator><name pos:start="179:65" pos:end="179:72">getUAVId</name></name><argument_list pos:start="179:73" pos:end="179:74">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<if_stmt pos:start="180:25" pos:end="201:25"><if pos:start="180:25" pos:end="199:25">if <condition pos:start="180:28" pos:end="180:56">(<expr pos:start="180:29" pos:end="180:55"><name pos:start="180:29" pos:end="180:32">task</name> <operator pos:start="180:34" pos:end="180:43">instanceof</operator> <name pos:start="180:45" pos:end="180:55">PatternTask</name></expr>)</condition> <block pos:start="180:58" pos:end="199:25">{<block_content pos:start="181:33" pos:end="198:33">
				<if_stmt pos:start="181:33" pos:end="198:33"><if pos:start="181:33" pos:end="189:33">if <condition pos:start="181:36" pos:end="181:85">(<expr pos:start="181:37" pos:end="181:84"><call pos:start="181:37" pos:end="181:54"><name pos:start="181:37" pos:end="181:52"><name pos:start="181:37" pos:end="181:40">task</name><operator pos:start="181:41" pos:end="181:41">.</operator><name pos:start="181:42" pos:end="181:52">getTaskName</name></name><argument_list pos:start="181:53" pos:end="181:54">()</argument_list></call><operator pos:start="181:55" pos:end="181:55">.</operator><call pos:start="181:56" pos:end="181:84"><name pos:start="181:56" pos:end="181:61">equals</name><argument_list pos:start="181:62" pos:end="181:84">(<argument pos:start="181:63" pos:end="181:83"><expr pos:start="181:63" pos:end="181:83"><literal type="string" pos:start="181:63" pos:end="181:83">"SynchronizedTakeoff"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="181:87" pos:end="189:33">{<block_content pos:start="182:41" pos:end="188:73">
					<decl_stmt pos:start="182:41" pos:end="182:124"><decl pos:start="182:41" pos:end="182:123"><type pos:start="182:41" pos:end="182:54"><name pos:start="182:41" pos:end="182:54">IFlightPattern</name></type> <name pos:start="182:56" pos:end="182:62">pattern</name> <init pos:start="182:64" pos:end="182:123">= <expr pos:start="182:66" pos:end="182:123"><call pos:start="182:66" pos:end="182:123"><name pos:start="182:66" pos:end="182:90"><name pos:start="182:66" pos:end="182:79">PatternFactory</name><operator pos:start="182:80" pos:end="182:80">.</operator><name pos:start="182:81" pos:end="182:90">getPattern</name></name><argument_list pos:start="182:91" pos:end="182:123">(<argument pos:start="182:92" pos:end="182:122"><expr pos:start="182:92" pos:end="182:122"><name pos:start="182:92" pos:end="182:122"><name pos:start="182:92" pos:end="182:102">PatternType</name><operator pos:start="182:103" pos:end="182:103">.</operator><name pos:start="182:104" pos:end="182:122">COORDINATED_TAKEOFF</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
					<expr_stmt pos:start="183:41" pos:end="183:69"><expr pos:start="183:41" pos:end="183:68"><call pos:start="183:41" pos:end="183:68"><name pos:start="183:41" pos:end="183:58"><name pos:start="183:41" pos:end="183:47">pattern</name><operator pos:start="183:48" pos:end="183:48">.</operator><name pos:start="183:49" pos:end="183:58">initialize</name></name><argument_list pos:start="183:59" pos:end="183:68">(<argument pos:start="183:60" pos:end="183:67"><expr pos:start="183:60" pos:end="183:67"><name pos:start="183:60" pos:end="183:67">synchMgr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<if_stmt pos:start="184:41" pos:end="186:119"><if pos:start="184:41" pos:end="186:119">if <condition pos:start="184:44" pos:end="184:74">(<expr pos:start="184:45" pos:end="184:73"><name pos:start="184:45" pos:end="184:65">firstWaypointLocation</name> <operator pos:start="184:67" pos:end="184:68">!=</operator> <literal type="null" pos:start="184:70" pos:end="184:73">null</literal></expr>)</condition><block type="pseudo" pos:start="186:49" pos:end="186:119"><block_content pos:start="186:49" pos:end="186:119"> <comment type="line" pos:start="184:76" pos:end="184:137">// Currently it only expands IF we have at least one ROUTE. It</comment>
						<comment type="line" pos:start="185:49" pos:end="185:100">// treats the first waypoint as the target waypoint.</comment>
						<expr_stmt pos:start="186:49" pos:end="186:119"><expr pos:start="186:49" pos:end="186:118"><call pos:start="186:49" pos:end="186:118"><name pos:start="186:49" pos:end="186:75"><name pos:start="186:49" pos:end="186:55">pattern</name><operator pos:start="186:56" pos:end="186:56">.</operator><name pos:start="186:57" pos:end="186:75">expandFlightPattern</name></name><argument_list pos:start="186:76" pos:end="186:118">(<argument pos:start="186:77" pos:end="186:80"><expr pos:start="186:77" pos:end="186:80"><name pos:start="186:77" pos:end="186:80">this</name></expr></argument>, <argument pos:start="186:83" pos:end="186:94"><expr pos:start="186:83" pos:end="186:94"><name pos:start="186:83" pos:end="186:94">homeLocation</name></expr></argument>, <argument pos:start="186:97" pos:end="186:117"><expr pos:start="186:97" pos:end="186:117"><name pos:start="186:97" pos:end="186:117">firstWaypointLocation</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
					<decl_stmt pos:start="187:41" pos:end="187:78"><decl pos:start="187:41" pos:end="187:77"><type pos:start="187:41" pos:end="187:48"><name pos:start="187:41" pos:end="187:48">TaskList</name></type> <name pos:start="187:50" pos:end="187:53">list</name> <init pos:start="187:55" pos:end="187:77">= <expr pos:start="187:57" pos:end="187:77"><call pos:start="187:57" pos:end="187:77"><name pos:start="187:57" pos:end="187:75"><name pos:start="187:57" pos:end="187:63">pattern</name><operator pos:start="187:64" pos:end="187:64">.</operator><name pos:start="187:65" pos:end="187:75">getTaskList</name></name><argument_list pos:start="187:76" pos:end="187:77">()</argument_list></call></expr></init></decl>;</decl_stmt>
					<expr_stmt pos:start="188:41" pos:end="188:73"><expr pos:start="188:41" pos:end="188:72"><call pos:start="188:41" pos:end="188:72"><name pos:start="188:41" pos:end="188:55"><name pos:start="188:41" pos:end="188:48">allTasks</name><operator pos:start="188:49" pos:end="188:49">.</operator><name pos:start="188:50" pos:end="188:55">addAll</name></name><argument_list pos:start="188:56" pos:end="188:72">(<argument pos:start="188:57" pos:end="188:71"><expr pos:start="188:57" pos:end="188:71"><call pos:start="188:57" pos:end="188:71"><name pos:start="188:57" pos:end="188:69"><name pos:start="188:57" pos:end="188:60">list</name><operator pos:start="188:61" pos:end="188:61">.</operator><name pos:start="188:62" pos:end="188:69">getTasks</name></name><argument_list pos:start="188:70" pos:end="188:71">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				</block_content>}</block></if> <if type="elseif" pos:start="189:35" pos:end="198:33">else if <condition pos:start="189:43" pos:end="189:92">(<expr pos:start="189:44" pos:end="189:91"><call pos:start="189:44" pos:end="189:61"><name pos:start="189:44" pos:end="189:59"><name pos:start="189:44" pos:end="189:47">task</name><operator pos:start="189:48" pos:end="189:48">.</operator><name pos:start="189:49" pos:end="189:59">getTaskName</name></name><argument_list pos:start="189:60" pos:end="189:61">()</argument_list></call><operator pos:start="189:62" pos:end="189:62">.</operator><call pos:start="189:63" pos:end="189:91"><name pos:start="189:63" pos:end="189:68">equals</name><argument_list pos:start="189:69" pos:end="189:91">(<argument pos:start="189:70" pos:end="189:90"><expr pos:start="189:70" pos:end="189:90"><literal type="string" pos:start="189:70" pos:end="189:90">"SynchronizedLanding"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="189:94" pos:end="198:33">{<block_content pos:start="190:41" pos:end="196:73">
					<decl_stmt pos:start="190:41" pos:end="190:124"><decl pos:start="190:41" pos:end="190:123"><type pos:start="190:41" pos:end="190:54"><name pos:start="190:41" pos:end="190:54">IFlightPattern</name></type> <name pos:start="190:56" pos:end="190:62">pattern</name> <init pos:start="190:64" pos:end="190:123">= <expr pos:start="190:66" pos:end="190:123"><call pos:start="190:66" pos:end="190:123"><name pos:start="190:66" pos:end="190:90"><name pos:start="190:66" pos:end="190:79">PatternFactory</name><operator pos:start="190:80" pos:end="190:80">.</operator><name pos:start="190:81" pos:end="190:90">getPattern</name></name><argument_list pos:start="190:91" pos:end="190:123">(<argument pos:start="190:92" pos:end="190:122"><expr pos:start="190:92" pos:end="190:122"><name pos:start="190:92" pos:end="190:122"><name pos:start="190:92" pos:end="190:102">PatternType</name><operator pos:start="190:103" pos:end="190:103">.</operator><name pos:start="190:104" pos:end="190:122">COORDINATED_LANDING</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
					<expr_stmt pos:start="191:41" pos:end="191:69"><expr pos:start="191:41" pos:end="191:68"><call pos:start="191:41" pos:end="191:68"><name pos:start="191:41" pos:end="191:58"><name pos:start="191:41" pos:end="191:47">pattern</name><operator pos:start="191:48" pos:end="191:48">.</operator><name pos:start="191:49" pos:end="191:58">initialize</name></name><argument_list pos:start="191:59" pos:end="191:68">(<argument pos:start="191:60" pos:end="191:67"><expr pos:start="191:60" pos:end="191:67"><name pos:start="191:60" pos:end="191:67">synchMgr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<decl_stmt pos:start="192:41" pos:end="192:75"><decl pos:start="192:41" pos:end="192:74"><type pos:start="192:41" pos:end="192:53"><name pos:start="192:41" pos:end="192:53">LlaCoordinate</name></type> <name pos:start="192:55" pos:end="192:74">currentFinalWaypoint</name></decl>;</decl_stmt>
					<expr_stmt pos:start="193:41" pos:end="193:102"><expr pos:start="193:41" pos:end="193:101"><name pos:start="193:41" pos:end="193:60">currentFinalWaypoint</name> <operator pos:start="193:62" pos:end="193:62">=</operator> <call pos:start="193:64" pos:end="193:101"><name pos:start="193:64" pos:end="193:91"><name pos:start="193:64" pos:end="193:74">MissionUtil</name><operator pos:start="193:75" pos:end="193:75">.</operator><name pos:start="193:76" pos:end="193:91">getFinalWaypoint</name></name><argument_list pos:start="193:92" pos:end="193:101">(<argument pos:start="193:93" pos:end="193:100"><expr pos:start="193:93" pos:end="193:100"><name pos:start="193:93" pos:end="193:100">allTasks</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<expr_stmt pos:start="194:41" pos:end="194:110"><expr pos:start="194:41" pos:end="194:109"><call pos:start="194:41" pos:end="194:109"><name pos:start="194:41" pos:end="194:67"><name pos:start="194:41" pos:end="194:47">pattern</name><operator pos:start="194:48" pos:end="194:48">.</operator><name pos:start="194:49" pos:end="194:67">expandFlightPattern</name></name><argument_list pos:start="194:68" pos:end="194:109">(<argument pos:start="194:69" pos:end="194:72"><expr pos:start="194:69" pos:end="194:72"><name pos:start="194:69" pos:end="194:72">this</name></expr></argument>, <argument pos:start="194:75" pos:end="194:94"><expr pos:start="194:75" pos:end="194:94"><name pos:start="194:75" pos:end="194:94">currentFinalWaypoint</name></expr></argument>, <argument pos:start="194:97" pos:end="194:108"><expr pos:start="194:97" pos:end="194:108"><name pos:start="194:97" pos:end="194:108">homeLocation</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<decl_stmt pos:start="195:41" pos:end="195:78"><decl pos:start="195:41" pos:end="195:77"><type pos:start="195:41" pos:end="195:48"><name pos:start="195:41" pos:end="195:48">TaskList</name></type> <name pos:start="195:50" pos:end="195:53">list</name> <init pos:start="195:55" pos:end="195:77">= <expr pos:start="195:57" pos:end="195:77"><call pos:start="195:57" pos:end="195:77"><name pos:start="195:57" pos:end="195:75"><name pos:start="195:57" pos:end="195:63">pattern</name><operator pos:start="195:64" pos:end="195:64">.</operator><name pos:start="195:65" pos:end="195:75">getTaskList</name></name><argument_list pos:start="195:76" pos:end="195:77">()</argument_list></call></expr></init></decl>;</decl_stmt>
					<expr_stmt pos:start="196:41" pos:end="196:73"><expr pos:start="196:41" pos:end="196:72"><call pos:start="196:41" pos:end="196:72"><name pos:start="196:41" pos:end="196:55"><name pos:start="196:41" pos:end="196:48">allTasks</name><operator pos:start="196:49" pos:end="196:49">.</operator><name pos:start="196:50" pos:end="196:55">addAll</name></name><argument_list pos:start="196:56" pos:end="196:72">(<argument pos:start="196:57" pos:end="196:71"><expr pos:start="196:57" pos:end="196:71"><call pos:start="196:57" pos:end="196:71"><name pos:start="196:57" pos:end="196:69"><name pos:start="196:57" pos:end="196:60">list</name><operator pos:start="196:61" pos:end="196:61">.</operator><name pos:start="196:62" pos:end="196:69">getTasks</name></name><argument_list pos:start="196:70" pos:end="196:71">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

				</block_content>}</block></if></if_stmt>
			</block_content>}</block></if> <else pos:start="199:27" pos:end="201:25">else <block pos:start="199:32" pos:end="201:25">{<block_content pos:start="200:33" pos:end="200:51">
				<expr_stmt pos:start="200:33" pos:end="200:51"><expr pos:start="200:33" pos:end="200:50"><call pos:start="200:33" pos:end="200:50"><name pos:start="200:33" pos:end="200:44"><name pos:start="200:33" pos:end="200:40">allTasks</name><operator pos:start="200:41" pos:end="200:41">.</operator><name pos:start="200:42" pos:end="200:44">add</name></name><argument_list pos:start="200:45" pos:end="200:50">(<argument pos:start="200:46" pos:end="200:49"><expr pos:start="200:46" pos:end="200:49"><name pos:start="200:46" pos:end="200:49">task</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			</block_content>}</block></else></if_stmt>
		</block_content>}</block></for>
		<expr_stmt pos:start="203:17" pos:end="203:36"><expr pos:start="203:17" pos:end="203:35"><name pos:start="203:17" pos:end="203:24">taskList</name> <operator pos:start="203:26" pos:end="203:26">=</operator> <name pos:start="203:28" pos:end="203:35">allTasks</name></expr>;</expr_stmt>
	</block_content>}</block></function>

	<function pos:start="206:9" pos:end="219:9"><annotation pos:start="206:9" pos:end="206:17">@<name pos:start="206:10" pos:end="206:17">Override</name></annotation>
	<type pos:start="207:9" pos:end="207:22"><specifier pos:start="207:9" pos:end="207:14">public</specifier> <name pos:start="207:16" pos:end="207:22">boolean</name></type> <name pos:start="207:24" pos:end="207:29">equals</name><parameter_list pos:start="207:30" pos:end="207:39">(<parameter pos:start="207:31" pos:end="207:38"><decl pos:start="207:31" pos:end="207:38"><type pos:start="207:31" pos:end="207:36"><name pos:start="207:31" pos:end="207:36">Object</name></type> <name pos:start="207:38" pos:end="207:38">o</name></decl></parameter>)</parameter_list> <block pos:start="207:41" pos:end="219:9">{<block_content pos:start="209:17" pos:end="218:53">
		<comment type="line" pos:start="208:17" pos:end="208:29">// self check</comment>
		<if_stmt pos:start="209:17" pos:end="210:36"><if pos:start="209:17" pos:end="210:36">if <condition pos:start="209:20" pos:end="209:30">(<expr pos:start="209:21" pos:end="209:29"><name pos:start="209:21" pos:end="209:24">this</name> <operator pos:start="209:26" pos:end="209:27">==</operator> <name pos:start="209:29" pos:end="209:29">o</name></expr>)</condition><block type="pseudo" pos:start="210:25" pos:end="210:36"><block_content pos:start="210:25" pos:end="210:36">
			<return pos:start="210:25" pos:end="210:36">return <expr pos:start="210:32" pos:end="210:35"><literal type="boolean" pos:start="210:32" pos:end="210:35">true</literal></expr>;</return></block_content></block></if></if_stmt>
		<comment type="line" pos:start="211:17" pos:end="211:29">// null check</comment>
		<if_stmt pos:start="212:17" pos:end="213:37"><if pos:start="212:17" pos:end="213:37">if <condition pos:start="212:20" pos:end="212:30">(<expr pos:start="212:21" pos:end="212:29"><name pos:start="212:21" pos:end="212:21">o</name> <operator pos:start="212:23" pos:end="212:24">==</operator> <literal type="null" pos:start="212:26" pos:end="212:29">null</literal></expr>)</condition><block type="pseudo" pos:start="213:25" pos:end="213:37"><block_content pos:start="213:25" pos:end="213:37">
			<return pos:start="213:25" pos:end="213:37">return <expr pos:start="213:32" pos:end="213:36"><literal type="boolean" pos:start="213:32" pos:end="213:36">false</literal></expr>;</return></block_content></block></if></if_stmt>
		<comment type="line" pos:start="214:17" pos:end="214:38">// type check and cast</comment>
		<if_stmt pos:start="215:17" pos:end="216:37"><if pos:start="215:17" pos:end="216:37">if <condition pos:start="215:20" pos:end="215:47">(<expr pos:start="215:21" pos:end="215:46"><call pos:start="215:21" pos:end="215:30"><name pos:start="215:21" pos:end="215:28">getClass</name><argument_list pos:start="215:29" pos:end="215:30">()</argument_list></call> <operator pos:start="215:32" pos:end="215:33">!=</operator> <call pos:start="215:35" pos:end="215:46"><name pos:start="215:35" pos:end="215:44"><name pos:start="215:35" pos:end="215:35">o</name><operator pos:start="215:36" pos:end="215:36">.</operator><name pos:start="215:37" pos:end="215:44">getClass</name></name><argument_list pos:start="215:45" pos:end="215:46">()</argument_list></call></expr>)</condition><block type="pseudo" pos:start="216:25" pos:end="216:37"><block_content pos:start="216:25" pos:end="216:37">
			<return pos:start="216:25" pos:end="216:37">return <expr pos:start="216:32" pos:end="216:36"><literal type="boolean" pos:start="216:32" pos:end="216:36">false</literal></expr>;</return></block_content></block></if></if_stmt>
		<decl_stmt pos:start="217:17" pos:end="217:57"><decl pos:start="217:17" pos:end="217:56"><type pos:start="217:17" pos:end="217:30"><name pos:start="217:17" pos:end="217:30">UAVMissionPlan</name></type> <name pos:start="217:32" pos:end="217:35">that</name> <init pos:start="217:37" pos:end="217:56">= <expr pos:start="217:39" pos:end="217:56"><operator pos:start="217:39" pos:end="217:39">(</operator><name pos:start="217:40" pos:end="217:53">UAVMissionPlan</name><operator pos:start="217:54" pos:end="217:54">)</operator> <name pos:start="217:56" pos:end="217:56">o</name></expr></init></decl>;</decl_stmt>
		<return pos:start="218:17" pos:end="218:53">return <expr pos:start="218:24" pos:end="218:52"><call pos:start="218:24" pos:end="218:52"><name pos:start="218:24" pos:end="218:40"><name pos:start="218:24" pos:end="218:27">this</name><operator pos:start="218:28" pos:end="218:28">.</operator><name pos:start="218:29" pos:end="218:33">uavid</name><operator pos:start="218:34" pos:end="218:34">.</operator><name pos:start="218:35" pos:end="218:40">equals</name></name><argument_list pos:start="218:41" pos:end="218:52">(<argument pos:start="218:42" pos:end="218:51"><expr pos:start="218:42" pos:end="218:51"><name pos:start="218:42" pos:end="218:51"><name pos:start="218:42" pos:end="218:45">that</name><operator pos:start="218:46" pos:end="218:46">.</operator><name pos:start="218:47" pos:end="218:51">uavid</name></name></expr></argument>)</argument_list></call></expr>;</return>
	</block_content>}</block></function>

	<function pos:start="221:9" pos:end="227:9"><annotation pos:start="221:9" pos:end="221:17">@<name pos:start="221:10" pos:end="221:17">Override</name></annotation>
	<type pos:start="222:9" pos:end="222:18"><specifier pos:start="222:9" pos:end="222:14">public</specifier> <name pos:start="222:16" pos:end="222:18">int</name></type> <name pos:start="222:20" pos:end="222:27">hashCode</name><parameter_list pos:start="222:28" pos:end="222:29">()</parameter_list> <block pos:start="222:31" pos:end="227:9">{<block_content pos:start="223:17" pos:end="226:30">
		<decl_stmt pos:start="223:17" pos:end="223:31"><decl pos:start="223:17" pos:end="223:30"><type pos:start="223:17" pos:end="223:19"><name pos:start="223:17" pos:end="223:19">int</name></type> <name pos:start="223:21" pos:end="223:25">prime</name> <init pos:start="223:27" pos:end="223:30">= <expr pos:start="223:29" pos:end="223:30"><literal type="number" pos:start="223:29" pos:end="223:30">31</literal></expr></init></decl>;</decl_stmt>
		<decl_stmt pos:start="224:17" pos:end="224:31"><decl pos:start="224:17" pos:end="224:30"><type pos:start="224:17" pos:end="224:19"><name pos:start="224:17" pos:end="224:19">int</name></type> <name pos:start="224:21" pos:end="224:26">result</name> <init pos:start="224:28" pos:end="224:30">= <expr pos:start="224:30" pos:end="224:30"><literal type="number" pos:start="224:30" pos:end="224:30">1</literal></expr></init></decl>;</decl_stmt>
		<expr_stmt pos:start="225:17" pos:end="225:83"><expr pos:start="225:17" pos:end="225:82"><name pos:start="225:17" pos:end="225:22">result</name> <operator pos:start="225:24" pos:end="225:24">=</operator> <name pos:start="225:26" pos:end="225:30">prime</name> <operator pos:start="225:32" pos:end="225:32">*</operator> <name pos:start="225:34" pos:end="225:39">result</name> <operator pos:start="225:41" pos:end="225:41">+</operator> <operator pos:start="225:43" pos:end="225:43">(</operator><ternary pos:start="225:44" pos:end="225:81"><condition pos:start="225:44" pos:end="225:60"><expr pos:start="225:44" pos:end="225:58"><operator pos:start="225:44" pos:end="225:44">(</operator><name pos:start="225:45" pos:end="225:49">uavid</name> <operator pos:start="225:51" pos:end="225:52">==</operator> <literal type="null" pos:start="225:54" pos:end="225:57">null</literal><operator pos:start="225:58" pos:end="225:58">)</operator></expr> ?</condition><then pos:start="225:62" pos:end="225:62"> <expr pos:start="225:62" pos:end="225:62"><literal type="number" pos:start="225:62" pos:end="225:62">0</literal></expr> </then><else pos:start="225:64" pos:end="225:81">: <expr pos:start="225:66" pos:end="225:81"><call pos:start="225:66" pos:end="225:81"><name pos:start="225:66" pos:end="225:79"><name pos:start="225:66" pos:end="225:70">uavid</name><operator pos:start="225:71" pos:end="225:71">.</operator><name pos:start="225:72" pos:end="225:79">hashCode</name></name><argument_list pos:start="225:80" pos:end="225:81">()</argument_list></call></expr></else></ternary><operator pos:start="225:82" pos:end="225:82">)</operator></expr>;</expr_stmt>
		<return pos:start="226:17" pos:end="226:30">return <expr pos:start="226:24" pos:end="226:29"><name pos:start="226:24" pos:end="226:29">result</name></expr>;</return>
	</block_content>}</block></function>

	<function pos:start="229:9" pos:end="245:9"><type pos:start="229:9" pos:end="229:28"><specifier pos:start="229:9" pos:end="229:14">public</specifier> <name pos:start="229:16" pos:end="229:28">LlaCoordinate</name></type> <name pos:start="229:30" pos:end="229:53">getStartingRouteWaypoint</name><parameter_list pos:start="229:54" pos:end="229:55">()</parameter_list> <throws pos:start="229:57" pos:end="229:88">throws <argument pos:start="229:64" pos:end="229:88"><expr pos:start="229:64" pos:end="229:88"><name pos:start="229:64" pos:end="229:88">MissionExecutionException</name></expr></argument></throws> <block pos:start="229:90" pos:end="245:9">{<block_content pos:start="230:17" pos:end="243:53">
		<for pos:start="230:17" pos:end="241:17">for <control pos:start="230:21" pos:end="230:47">(<init pos:start="230:22" pos:end="230:46"><decl pos:start="230:22" pos:end="230:46"><type pos:start="230:22" pos:end="230:33"><name pos:start="230:22" pos:end="230:33">IMissionTask</name></type> <name pos:start="230:35" pos:end="230:35">t</name> <range pos:start="230:37" pos:end="230:46">: <expr pos:start="230:39" pos:end="230:46"><name pos:start="230:39" pos:end="230:46">taskList</name></expr></range></decl></init>)</control> <block pos:start="230:49" pos:end="241:17">{<block_content pos:start="231:25" pos:end="240:25">
			<if_stmt pos:start="231:25" pos:end="240:25"><if pos:start="231:25" pos:end="240:25">if <condition pos:start="231:28" pos:end="231:51">(<expr pos:start="231:29" pos:end="231:50"><name pos:start="231:29" pos:end="231:29">t</name> <operator pos:start="231:31" pos:end="231:40">instanceof</operator> <name pos:start="231:42" pos:end="231:50">RouteTask</name></expr>)</condition> <block pos:start="231:53" pos:end="240:25">{<block_content pos:start="232:33" pos:end="238:33">
				<try pos:start="232:33" pos:end="238:33">try <block pos:start="232:37" pos:end="236:33">{<block_content pos:start="233:41" pos:end="235:53">
					<decl_stmt pos:start="233:41" pos:end="233:137"><decl pos:start="233:41" pos:end="233:136"><type pos:start="233:41" pos:end="233:55"><name pos:start="233:41" pos:end="233:55">FlightRouteInfo</name></type> <name pos:start="233:57" pos:end="233:61">route</name> <init pos:start="233:63" pos:end="233:136">= <expr pos:start="233:65" pos:end="233:136"><call pos:start="233:65" pos:end="233:104"><name pos:start="233:65" pos:end="233:102"><name pos:start="233:65" pos:end="233:90">FlightRouteplanningService</name><operator pos:start="233:91" pos:end="233:91">.</operator><name pos:start="233:92" pos:end="233:102">getInstance</name></name><argument_list pos:start="233:103" pos:end="233:104">()</argument_list></call><operator pos:start="233:105" pos:end="233:105">.</operator><call pos:start="233:106" pos:end="233:136"><name pos:start="233:106" pos:end="233:119">getRouteByName</name><argument_list pos:start="233:120" pos:end="233:136">(<argument pos:start="233:121" pos:end="233:135"><expr pos:start="233:121" pos:end="233:135"><call pos:start="233:121" pos:end="233:135"><name pos:start="233:121" pos:end="233:133"><name pos:start="233:121" pos:end="233:121">t</name><operator pos:start="233:122" pos:end="233:122">.</operator><name pos:start="233:123" pos:end="233:133">getTaskName</name></name><argument_list pos:start="233:134" pos:end="233:135">()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
					<decl_stmt pos:start="234:41" pos:end="234:106"><decl pos:start="234:41" pos:end="234:105"><type pos:start="234:41" pos:end="234:53"><name pos:start="234:41" pos:end="234:53">LlaCoordinate</name></type> <name pos:start="234:55" pos:end="234:59">coord</name> <init pos:start="234:61" pos:end="234:105">= <expr pos:start="234:63" pos:end="234:105"><call pos:start="234:63" pos:end="234:82"><name pos:start="234:63" pos:end="234:80"><name pos:start="234:63" pos:end="234:67">route</name><operator pos:start="234:68" pos:end="234:68">.</operator><name pos:start="234:69" pos:end="234:80">getWaypoints</name></name><argument_list pos:start="234:81" pos:end="234:82">()</argument_list></call><operator pos:start="234:83" pos:end="234:83">.</operator><call pos:start="234:84" pos:end="234:89"><name pos:start="234:84" pos:end="234:86">get</name><argument_list pos:start="234:87" pos:end="234:89">(<argument pos:start="234:88" pos:end="234:88"><expr pos:start="234:88" pos:end="234:88"><literal type="number" pos:start="234:88" pos:end="234:88">0</literal></expr></argument>)</argument_list></call><operator pos:start="234:90" pos:end="234:90">.</operator><call pos:start="234:91" pos:end="234:105"><name pos:start="234:91" pos:end="234:103">getCoordinate</name><argument_list pos:start="234:104" pos:end="234:105">()</argument_list></call></expr></init></decl>;</decl_stmt>
					<return pos:start="235:41" pos:end="235:53">return <expr pos:start="235:48" pos:end="235:52"><name pos:start="235:48" pos:end="235:52">coord</name></expr>;</return>
				</block_content>}</block> <catch pos:start="236:35" pos:end="238:33">catch <parameter_list pos:start="236:41" pos:end="236:69">(<parameter pos:start="236:42" pos:end="236:68"><decl pos:start="236:42" pos:end="236:68"><type pos:start="236:42" pos:end="236:68"><name pos:start="236:42" pos:end="236:66">DronologyServiceException</name></type> <name pos:start="236:68" pos:end="236:68">e</name></decl></parameter>)</parameter_list> <block pos:start="236:71" pos:end="238:33">{<block_content pos:start="237:41" pos:end="237:145">
					<throw pos:start="237:41" pos:end="237:145">throw <expr pos:start="237:47" pos:end="237:144"><operator pos:start="237:47" pos:end="237:49">new</operator> <call pos:start="237:51" pos:end="237:144"><name pos:start="237:51" pos:end="237:75">MissionExecutionException</name><argument_list pos:start="237:76" pos:end="237:144">(<argument pos:start="237:77" pos:end="237:143"><expr pos:start="237:77" pos:end="237:143"><literal type="string" pos:start="237:77" pos:end="237:119">"Error when getting initial waypoint for '"</literal> <operator pos:start="237:121" pos:end="237:121">+</operator> <call pos:start="237:123" pos:end="237:137"><name pos:start="237:123" pos:end="237:135"><name pos:start="237:123" pos:end="237:123">t</name><operator pos:start="237:124" pos:end="237:124">.</operator><name pos:start="237:125" pos:end="237:135">getTaskName</name></name><argument_list pos:start="237:136" pos:end="237:137">()</argument_list></call> <operator pos:start="237:139" pos:end="237:139">+</operator> <literal type="string" pos:start="237:141" pos:end="237:143">"'"</literal></expr></argument>)</argument_list></call></expr>;</throw>
				</block_content>}</block></catch></try>

			</block_content>}</block></if></if_stmt>
		</block_content>}</block></for>
		<expr_stmt pos:start="242:17" pos:end="242:62"><expr pos:start="242:17" pos:end="242:61"><call pos:start="242:17" pos:end="242:61"><name pos:start="242:17" pos:end="242:28"><name pos:start="242:17" pos:end="242:22">LOGGER</name><operator pos:start="242:23" pos:end="242:23">.</operator><name pos:start="242:24" pos:end="242:28">error</name></name><argument_list pos:start="242:29" pos:end="242:61">(<argument pos:start="242:30" pos:end="242:60"><expr pos:start="242:30" pos:end="242:60"><literal type="string" pos:start="242:30" pos:end="242:60">"No RouteTask found in Mission"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<return pos:start="243:17" pos:end="243:53">return <expr pos:start="243:24" pos:end="243:52"><call pos:start="243:24" pos:end="243:38"><name pos:start="243:24" pos:end="243:35"><name pos:start="243:24" pos:end="243:31">taskList</name><operator pos:start="243:32" pos:end="243:32">.</operator><name pos:start="243:33" pos:end="243:35">get</name></name><argument_list pos:start="243:36" pos:end="243:38">(<argument pos:start="243:37" pos:end="243:37"><expr pos:start="243:37" pos:end="243:37"><literal type="number" pos:start="243:37" pos:end="243:37">0</literal></expr></argument>)</argument_list></call><operator pos:start="243:39" pos:end="243:39">.</operator><call pos:start="243:40" pos:end="243:52"><name pos:start="243:40" pos:end="243:50">getWaypoint</name><argument_list pos:start="243:51" pos:end="243:52">()</argument_list></call></expr>;</return>

	</block_content>}</block></function>

}</block></class></unit>
