<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="Java" filename="src/Waypoint.java" pos:tabs="8"><package pos:start="1:1" pos:end="1:35">package <name pos:start="1:9" pos:end="1:34"><name pos:start="1:9" pos:end="1:11">edu</name><operator pos:start="1:12" pos:end="1:12">.</operator><name pos:start="1:13" pos:end="1:14">nd</name><operator pos:start="1:15" pos:end="1:15">.</operator><name pos:start="1:16" pos:end="1:24">dronology</name><operator pos:start="1:25" pos:end="1:25">.</operator><name pos:start="1:26" pos:end="1:29">core</name><operator pos:start="1:30" pos:end="1:30">.</operator><name pos:start="1:31" pos:end="1:34">util</name></name>;</package>

<import pos:start="3:1" pos:end="3:28">import <name pos:start="3:8" pos:end="3:27"><name pos:start="3:8" pos:end="3:11">java</name><operator pos:start="3:12" pos:end="3:12">.</operator><name pos:start="3:13" pos:end="3:14">io</name><operator pos:start="3:15" pos:end="3:15">.</operator><name pos:start="3:16" pos:end="3:27">Serializable</name></name>;</import>

<import pos:start="5:1" pos:end="5:54">import <name pos:start="5:8" pos:end="5:53"><name pos:start="5:8" pos:end="5:10">edu</name><operator pos:start="5:11" pos:end="5:11">.</operator><name pos:start="5:12" pos:end="5:13">nd</name><operator pos:start="5:14" pos:end="5:14">.</operator><name pos:start="5:15" pos:end="5:23">dronology</name><operator pos:start="5:24" pos:end="5:24">.</operator><name pos:start="5:25" pos:end="5:28">core</name><operator pos:start="5:29" pos:end="5:29">.</operator><name pos:start="5:30" pos:end="5:39">coordinate</name><operator pos:start="5:40" pos:end="5:40">.</operator><name pos:start="5:41" pos:end="5:53">LlaCoordinate</name></name>;</import>
<import pos:start="6:1" pos:end="6:56">import <name pos:start="6:8" pos:end="6:55"><name pos:start="6:8" pos:end="6:10">edu</name><operator pos:start="6:11" pos:end="6:11">.</operator><name pos:start="6:12" pos:end="6:13">nd</name><operator pos:start="6:14" pos:end="6:14">.</operator><name pos:start="6:15" pos:end="6:23">dronology</name><operator pos:start="6:24" pos:end="6:24">.</operator><name pos:start="6:25" pos:end="6:28">core</name><operator pos:start="6:29" pos:end="6:29">.</operator><name pos:start="6:30" pos:end="6:35">flight</name><operator pos:start="6:36" pos:end="6:36">.</operator><name pos:start="6:37" pos:end="6:44">internal</name><operator pos:start="6:45" pos:end="6:45">.</operator><name pos:start="6:46" pos:end="6:55">FlightPlan</name></name>;</import>
<import pos:start="7:1" pos:end="7:38">import <name pos:start="7:8" pos:end="7:37"><name pos:start="7:8" pos:end="7:10">edu</name><operator pos:start="7:11" pos:end="7:11">.</operator><name pos:start="7:12" pos:end="7:13">nd</name><operator pos:start="7:14" pos:end="7:14">.</operator><name pos:start="7:15" pos:end="7:23">dronology</name><operator pos:start="7:24" pos:end="7:24">.</operator><name pos:start="7:25" pos:end="7:28">util</name><operator pos:start="7:29" pos:end="7:29">.</operator><name pos:start="7:30" pos:end="7:37">NullUtil</name></name>;</import>

<comment type="block" format="javadoc" pos:start="9:1" pos:end="18:3">/**
 * 
 * Waypoint implementation used in {@link FlightPlan} and Fight Route to represent coordinates (as {@link LlaCoordinate})&lt;br&gt;
 * and the approaching speed towards the respective waypoint. &lt;br&gt;
 * &lt;br&gt;
 * This class (and all its constituent fields) have to be {@link Serializable} as this class is passed via the remote interface.
 * 
 * @author Michael Vierhauser
 *
 */</comment>
<class pos:start="19:1" pos:end="79:1"><specifier pos:start="19:1" pos:end="19:6">public</specifier> class <name pos:start="19:14" pos:end="19:21">Waypoint</name> <super_list pos:start="19:23" pos:end="19:45"><implements pos:start="19:23" pos:end="19:45">implements <super pos:start="19:34" pos:end="19:45"><name pos:start="19:34" pos:end="19:45">Serializable</name></super></implements></super_list> <block pos:start="19:47" pos:end="79:1">{

	<comment type="block" format="javadoc" pos:start="21:9" pos:end="23:11">/**
	 * 
	 */</comment>
	<decl_stmt pos:start="24:9" pos:end="24:74"><decl pos:start="24:9" pos:end="24:73"><type pos:start="24:9" pos:end="24:33"><specifier pos:start="24:9" pos:end="24:15">private</specifier> <specifier pos:start="24:17" pos:end="24:22">static</specifier> <specifier pos:start="24:24" pos:end="24:28">final</specifier> <name pos:start="24:30" pos:end="24:33">long</name></type> <name pos:start="24:35" pos:end="24:50">serialVersionUID</name> <init pos:start="24:52" pos:end="24:73">= <expr pos:start="24:54" pos:end="24:73"><literal type="number" pos:start="24:54" pos:end="24:73">5855436372355880741L</literal></expr></init></decl>;</decl_stmt>

	<decl_stmt pos:start="26:9" pos:end="26:47"><decl pos:start="26:9" pos:end="26:46"><type pos:start="26:9" pos:end="26:35"><specifier pos:start="26:9" pos:end="26:15">private</specifier> <specifier pos:start="26:17" pos:end="26:21">final</specifier> <name pos:start="26:23" pos:end="26:35">LlaCoordinate</name></type> <name pos:start="26:37" pos:end="26:46">coordinate</name></decl>;</decl_stmt>
	<decl_stmt pos:start="27:9" pos:end="27:51"><decl pos:start="27:9" pos:end="27:50"><type pos:start="27:9" pos:end="27:23"><specifier pos:start="27:9" pos:end="27:15">private</specifier> <name pos:start="27:17" pos:end="27:23">boolean</name></type> <name pos:start="27:25" pos:end="27:42">destinationReached</name> <init pos:start="27:44" pos:end="27:50">= <expr pos:start="27:46" pos:end="27:50"><literal type="boolean" pos:start="27:46" pos:end="27:50">false</literal></expr></init></decl>;</decl_stmt>

	<decl_stmt pos:start="29:9" pos:end="29:47"><decl pos:start="29:9" pos:end="29:46"><type pos:start="29:9" pos:end="29:22"><specifier pos:start="29:9" pos:end="29:15">private</specifier> <name pos:start="29:17" pos:end="29:22">double</name></type> <name pos:start="29:24" pos:end="29:39">approachingspeed</name> <init pos:start="29:41" pos:end="29:46">= <expr pos:start="29:43" pos:end="29:46"><literal type="number" pos:start="29:43" pos:end="29:46">0.0d</literal></expr></init></decl>;</decl_stmt>

	<function pos:start="31:9" pos:end="33:9"><type pos:start="31:9" pos:end="31:28"><specifier pos:start="31:9" pos:end="31:14">public</specifier> <name pos:start="31:16" pos:end="31:28">LlaCoordinate</name></type> <name pos:start="31:30" pos:end="31:42">getCoordinate</name><parameter_list pos:start="31:43" pos:end="31:44">()</parameter_list> <block pos:start="31:46" pos:end="33:9">{<block_content pos:start="32:17" pos:end="32:34">
		<return pos:start="32:17" pos:end="32:34">return <expr pos:start="32:24" pos:end="32:33"><name pos:start="32:24" pos:end="32:33">coordinate</name></expr>;</return>
	</block_content>}</block></function>

	<constructor pos:start="35:9" pos:end="37:9"><specifier pos:start="35:9" pos:end="35:14">public</specifier> <name pos:start="35:16" pos:end="35:23">Waypoint</name><parameter_list pos:start="35:24" pos:end="35:25">()</parameter_list> <block pos:start="35:27" pos:end="37:9">{<block_content pos:start="36:17" pos:end="36:56">
		<expr_stmt pos:start="36:17" pos:end="36:56"><expr pos:start="36:17" pos:end="36:55"><name pos:start="36:17" pos:end="36:26">coordinate</name> <operator pos:start="36:28" pos:end="36:28">=</operator> <operator pos:start="36:30" pos:end="36:32">new</operator> <call pos:start="36:34" pos:end="36:55"><name pos:start="36:34" pos:end="36:46">LlaCoordinate</name><argument_list pos:start="36:47" pos:end="36:55">(<argument pos:start="36:48" pos:end="36:48"><expr pos:start="36:48" pos:end="36:48"><literal type="number" pos:start="36:48" pos:end="36:48">0</literal></expr></argument>, <argument pos:start="36:51" pos:end="36:51"><expr pos:start="36:51" pos:end="36:51"><literal type="number" pos:start="36:51" pos:end="36:51">0</literal></expr></argument>, <argument pos:start="36:54" pos:end="36:54"><expr pos:start="36:54" pos:end="36:54"><literal type="number" pos:start="36:54" pos:end="36:54">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	</block_content>}</block></constructor>

	<constructor pos:start="39:9" pos:end="43:9"><specifier pos:start="39:9" pos:end="39:14">public</specifier> <name pos:start="39:16" pos:end="39:23">Waypoint</name><parameter_list pos:start="39:24" pos:end="39:49">(<parameter pos:start="39:25" pos:end="39:48"><decl pos:start="39:25" pos:end="39:48"><type pos:start="39:25" pos:end="39:37"><name pos:start="39:25" pos:end="39:37">LlaCoordinate</name></type> <name pos:start="39:39" pos:end="39:48">coordinate</name></decl></parameter>)</parameter_list> <block pos:start="39:51" pos:end="43:9">{<block_content pos:start="40:17" pos:end="42:45">
		<expr_stmt pos:start="40:17" pos:end="40:24"><expr pos:start="40:17" pos:end="40:23"><call pos:start="40:17" pos:end="40:23"><name pos:start="40:17" pos:end="40:21">super</name><argument_list pos:start="40:22" pos:end="40:23">()</argument_list></call></expr>;</expr_stmt>
		<expr_stmt pos:start="41:17" pos:end="41:47"><expr pos:start="41:17" pos:end="41:46"><call pos:start="41:17" pos:end="41:46"><name pos:start="41:17" pos:end="41:34"><name pos:start="41:17" pos:end="41:24">NullUtil</name><operator pos:start="41:25" pos:end="41:25">.</operator><name pos:start="41:26" pos:end="41:34">checkNull</name></name><argument_list pos:start="41:35" pos:end="41:46">(<argument pos:start="41:36" pos:end="41:45"><expr pos:start="41:36" pos:end="41:45"><name pos:start="41:36" pos:end="41:45">coordinate</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt pos:start="42:17" pos:end="42:45"><expr pos:start="42:17" pos:end="42:44"><name pos:start="42:17" pos:end="42:31"><name pos:start="42:17" pos:end="42:20">this</name><operator pos:start="42:21" pos:end="42:21">.</operator><name pos:start="42:22" pos:end="42:31">coordinate</name></name> <operator pos:start="42:33" pos:end="42:33">=</operator> <name pos:start="42:35" pos:end="42:44">coordinate</name></expr>;</expr_stmt>
	</block_content>}</block></constructor>

	<function pos:start="45:9" pos:end="55:9"><annotation pos:start="45:9" pos:end="45:17">@<name pos:start="45:10" pos:end="45:17">Override</name></annotation>
	<type pos:start="46:9" pos:end="46:22"><specifier pos:start="46:9" pos:end="46:14">public</specifier> <name pos:start="46:16" pos:end="46:22">boolean</name></type> <name pos:start="46:24" pos:end="46:29">equals</name><parameter_list pos:start="46:30" pos:end="46:41">(<parameter pos:start="46:31" pos:end="46:40"><decl pos:start="46:31" pos:end="46:40"><type pos:start="46:31" pos:end="46:36"><name pos:start="46:31" pos:end="46:36">Object</name></type> <name pos:start="46:38" pos:end="46:40">obj</name></decl></parameter>)</parameter_list> <block pos:start="46:43" pos:end="55:9">{<block_content pos:start="47:17" pos:end="54:64">
		<if_stmt pos:start="47:17" pos:end="48:36"><if pos:start="47:17" pos:end="48:36">if <condition pos:start="47:20" pos:end="47:32">(<expr pos:start="47:21" pos:end="47:31"><name pos:start="47:21" pos:end="47:24">this</name> <operator pos:start="47:26" pos:end="47:27">==</operator> <name pos:start="47:29" pos:end="47:31">obj</name></expr>)</condition><block type="pseudo" pos:start="48:25" pos:end="48:36"><block_content pos:start="48:25" pos:end="48:36">
			<return pos:start="48:25" pos:end="48:36">return <expr pos:start="48:32" pos:end="48:35"><literal type="boolean" pos:start="48:32" pos:end="48:35">true</literal></expr>;</return></block_content></block></if></if_stmt>
		<if_stmt pos:start="49:17" pos:end="50:37"><if pos:start="49:17" pos:end="50:37">if <condition pos:start="49:20" pos:end="49:32">(<expr pos:start="49:21" pos:end="49:31"><name pos:start="49:21" pos:end="49:23">obj</name> <operator pos:start="49:25" pos:end="49:26">==</operator> <literal type="null" pos:start="49:28" pos:end="49:31">null</literal></expr>)</condition><block type="pseudo" pos:start="50:25" pos:end="50:37"><block_content pos:start="50:25" pos:end="50:37">
			<return pos:start="50:25" pos:end="50:37">return <expr pos:start="50:32" pos:end="50:36"><literal type="boolean" pos:start="50:32" pos:end="50:36">false</literal></expr>;</return></block_content></block></if></if_stmt>
		<if_stmt pos:start="51:17" pos:end="52:37"><if pos:start="51:17" pos:end="52:37">if <condition pos:start="51:20" pos:end="51:47">(<expr pos:start="51:21" pos:end="51:46"><operator pos:start="51:21" pos:end="51:21">!</operator><operator pos:start="51:22" pos:end="51:22">(</operator><name pos:start="51:23" pos:end="51:25">obj</name> <operator pos:start="51:27" pos:end="51:36">instanceof</operator> <name pos:start="51:38" pos:end="51:45">Waypoint</name><operator pos:start="51:46" pos:end="51:46">)</operator></expr>)</condition><block type="pseudo" pos:start="52:25" pos:end="52:37"><block_content pos:start="52:25" pos:end="52:37">
			<return pos:start="52:25" pos:end="52:37">return <expr pos:start="52:32" pos:end="52:36"><literal type="boolean" pos:start="52:32" pos:end="52:36">false</literal></expr>;</return></block_content></block></if></if_stmt>
		<decl_stmt pos:start="53:17" pos:end="53:48"><decl pos:start="53:17" pos:end="53:47"><type pos:start="53:17" pos:end="53:24"><name pos:start="53:17" pos:end="53:24">Waypoint</name></type> <name pos:start="53:26" pos:end="53:30">other</name> <init pos:start="53:32" pos:end="53:47">= <expr pos:start="53:34" pos:end="53:47"><operator pos:start="53:34" pos:end="53:34">(</operator><name pos:start="53:35" pos:end="53:42">Waypoint</name><operator pos:start="53:43" pos:end="53:43">)</operator> <name pos:start="53:45" pos:end="53:47">obj</name></expr></init></decl>;</decl_stmt>
		<return pos:start="54:17" pos:end="54:64">return <expr pos:start="54:24" pos:end="54:63"><call pos:start="54:24" pos:end="54:63"><name pos:start="54:24" pos:end="54:40"><name pos:start="54:24" pos:end="54:33">coordinate</name><operator pos:start="54:34" pos:end="54:34">.</operator><name pos:start="54:35" pos:end="54:40">equals</name></name><argument_list pos:start="54:41" pos:end="54:63">(<argument pos:start="54:42" pos:end="54:62"><expr pos:start="54:42" pos:end="54:62"><call pos:start="54:42" pos:end="54:62"><name pos:start="54:42" pos:end="54:60"><name pos:start="54:42" pos:end="54:46">other</name><operator pos:start="54:47" pos:end="54:47">.</operator><name pos:start="54:48" pos:end="54:60">getCoordinate</name></name><argument_list pos:start="54:61" pos:end="54:62">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
	</block_content>}</block></function>

	<function pos:start="57:9" pos:end="59:9"><type pos:start="57:9" pos:end="57:22"><specifier pos:start="57:9" pos:end="57:14">public</specifier> <name pos:start="57:16" pos:end="57:22">boolean</name></type> <name pos:start="57:24" pos:end="57:32">isReached</name><parameter_list pos:start="57:33" pos:end="57:34">()</parameter_list> <block pos:start="57:36" pos:end="59:9">{<block_content pos:start="58:17" pos:end="58:42">
		<return pos:start="58:17" pos:end="58:42">return <expr pos:start="58:24" pos:end="58:41"><name pos:start="58:24" pos:end="58:41">destinationReached</name></expr>;</return>
	</block_content>}</block></function>

	<function pos:start="61:9" pos:end="64:9"><annotation pos:start="61:9" pos:end="61:17">@<name pos:start="61:10" pos:end="61:17">Override</name></annotation>
	<type pos:start="62:9" pos:end="62:18"><specifier pos:start="62:9" pos:end="62:14">public</specifier> <name pos:start="62:16" pos:end="62:18">int</name></type> <name pos:start="62:20" pos:end="62:27">hashCode</name><parameter_list pos:start="62:28" pos:end="62:29">()</parameter_list> <block pos:start="62:31" pos:end="64:9">{<block_content pos:start="63:17" pos:end="63:45">
		<return pos:start="63:17" pos:end="63:45">return <expr pos:start="63:24" pos:end="63:44"><call pos:start="63:24" pos:end="63:44"><name pos:start="63:24" pos:end="63:42"><name pos:start="63:24" pos:end="63:33">coordinate</name><operator pos:start="63:34" pos:end="63:34">.</operator><name pos:start="63:35" pos:end="63:42">hashCode</name></name><argument_list pos:start="63:43" pos:end="63:44">()</argument_list></call></expr>;</return>
	</block_content>}</block></function>

	<function pos:start="66:9" pos:end="69:9"><type pos:start="66:9" pos:end="66:19"><specifier pos:start="66:9" pos:end="66:14">public</specifier> <name pos:start="66:16" pos:end="66:19">void</name></type> <name pos:start="66:21" pos:end="66:27">reached</name><parameter_list pos:start="66:28" pos:end="66:44">(<parameter pos:start="66:29" pos:end="66:43"><decl pos:start="66:29" pos:end="66:43"><type pos:start="66:29" pos:end="66:35"><name pos:start="66:29" pos:end="66:35">boolean</name></type> <name pos:start="66:37" pos:end="66:43">reached</name></decl></parameter>)</parameter_list> <block pos:start="66:46" pos:end="69:9">{<block_content pos:start="67:17" pos:end="67:50">
		<expr_stmt pos:start="67:17" pos:end="67:50"><expr pos:start="67:17" pos:end="67:49"><name pos:start="67:17" pos:end="67:39"><name pos:start="67:17" pos:end="67:20">this</name><operator pos:start="67:21" pos:end="67:21">.</operator><name pos:start="67:22" pos:end="67:39">destinationReached</name></name> <operator pos:start="67:41" pos:end="67:41">=</operator> <name pos:start="67:43" pos:end="67:49">reached</name></expr>;</expr_stmt>

	</block_content>}</block></function>

	<function pos:start="71:9" pos:end="73:9"><type pos:start="71:9" pos:end="71:21"><specifier pos:start="71:9" pos:end="71:14">public</specifier> <name pos:start="71:16" pos:end="71:21">double</name></type> <name pos:start="71:23" pos:end="71:41">getApproachingspeed</name><parameter_list pos:start="71:42" pos:end="71:43">()</parameter_list> <block pos:start="71:45" pos:end="73:9">{<block_content pos:start="72:17" pos:end="72:40">
		<return pos:start="72:17" pos:end="72:40">return <expr pos:start="72:24" pos:end="72:39"><name pos:start="72:24" pos:end="72:39">approachingspeed</name></expr>;</return>
	</block_content>}</block></function>

	<function pos:start="75:9" pos:end="77:9"><type pos:start="75:9" pos:end="75:19"><specifier pos:start="75:9" pos:end="75:14">public</specifier> <name pos:start="75:16" pos:end="75:19">void</name></type> <name pos:start="75:21" pos:end="75:39">setApproachingspeed</name><parameter_list pos:start="75:40" pos:end="75:64">(<parameter pos:start="75:41" pos:end="75:63"><decl pos:start="75:41" pos:end="75:63"><type pos:start="75:41" pos:end="75:46"><name pos:start="75:41" pos:end="75:46">double</name></type> <name pos:start="75:48" pos:end="75:63">approachingspeed</name></decl></parameter>)</parameter_list> <block pos:start="75:66" pos:end="77:9">{<block_content pos:start="76:17" pos:end="76:57">
		<expr_stmt pos:start="76:17" pos:end="76:57"><expr pos:start="76:17" pos:end="76:56"><name pos:start="76:17" pos:end="76:37"><name pos:start="76:17" pos:end="76:20">this</name><operator pos:start="76:21" pos:end="76:21">.</operator><name pos:start="76:22" pos:end="76:37">approachingspeed</name></name> <operator pos:start="76:39" pos:end="76:39">=</operator> <name pos:start="76:41" pos:end="76:56">approachingspeed</name></expr>;</expr_stmt>
	</block_content>}</block></function>

}</block></class>
</unit>
