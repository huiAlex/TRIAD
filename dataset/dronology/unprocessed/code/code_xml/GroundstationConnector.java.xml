<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="Java" filename="src/GroundstationConnector.java" pos:tabs="8"><package pos:start="1:1" pos:end="1:44">package <name pos:start="1:9" pos:end="1:43"><name pos:start="1:9" pos:end="1:11">edu</name><operator pos:start="1:12" pos:end="1:12">.</operator><name pos:start="1:13" pos:end="1:14">nd</name><operator pos:start="1:15" pos:end="1:15">.</operator><name pos:start="1:16" pos:end="1:24">dronology</name><operator pos:start="1:25" pos:end="1:25">.</operator><name pos:start="1:26" pos:end="1:33">gstation</name><operator pos:start="1:34" pos:end="1:34">.</operator><name pos:start="1:35" pos:end="1:43">connector</name></name>;</package>

<import pos:start="3:1" pos:end="3:30">import <name pos:start="3:8" pos:end="3:29"><name pos:start="3:8" pos:end="3:11">java</name><operator pos:start="3:12" pos:end="3:12">.</operator><name pos:start="3:13" pos:end="3:14">io</name><operator pos:start="3:15" pos:end="3:15">.</operator><name pos:start="3:16" pos:end="3:29">BufferedReader</name></name>;</import>
<import pos:start="4:1" pos:end="4:30">import <name pos:start="4:8" pos:end="4:29"><name pos:start="4:8" pos:end="4:11">java</name><operator pos:start="4:12" pos:end="4:12">.</operator><name pos:start="4:13" pos:end="4:14">io</name><operator pos:start="4:15" pos:end="4:15">.</operator><name pos:start="4:16" pos:end="4:29">BufferedWriter</name></name>;</import>
<import pos:start="5:1" pos:end="5:33">import <name pos:start="5:8" pos:end="5:32"><name pos:start="5:8" pos:end="5:11">java</name><operator pos:start="5:12" pos:end="5:12">.</operator><name pos:start="5:13" pos:end="5:14">io</name><operator pos:start="5:15" pos:end="5:15">.</operator><name pos:start="5:16" pos:end="5:32">InputStreamReader</name></name>;</import>
<import pos:start="6:1" pos:end="6:34">import <name pos:start="6:8" pos:end="6:33"><name pos:start="6:8" pos:end="6:11">java</name><operator pos:start="6:12" pos:end="6:12">.</operator><name pos:start="6:13" pos:end="6:14">io</name><operator pos:start="6:15" pos:end="6:15">.</operator><name pos:start="6:16" pos:end="6:33">OutputStreamWriter</name></name>;</import>
<import pos:start="7:1" pos:end="7:23">import <name pos:start="7:8" pos:end="7:22"><name pos:start="7:8" pos:end="7:11">java</name><operator pos:start="7:12" pos:end="7:12">.</operator><name pos:start="7:13" pos:end="7:15">net</name><operator pos:start="7:16" pos:end="7:16">.</operator><name pos:start="7:17" pos:end="7:22">Socket</name></name>;</import>
<import pos:start="8:1" pos:end="8:21">import <name pos:start="8:8" pos:end="8:20"><name pos:start="8:8" pos:end="8:11">java</name><operator pos:start="8:12" pos:end="8:12">.</operator><name pos:start="8:13" pos:end="8:16">util</name><operator pos:start="8:17" pos:end="8:17">.</operator><name pos:start="8:18" pos:end="8:20">Map</name></name>;</import>
<import pos:start="9:1" pos:end="9:46">import <name pos:start="9:8" pos:end="9:45"><name pos:start="9:8" pos:end="9:11">java</name><operator pos:start="9:12" pos:end="9:12">.</operator><name pos:start="9:13" pos:end="9:16">util</name><operator pos:start="9:17" pos:end="9:17">.</operator><name pos:start="9:18" pos:end="9:27">concurrent</name><operator pos:start="9:28" pos:end="9:28">.</operator><name pos:start="9:29" pos:end="9:45">ConcurrentHashMap</name></name>;</import>
<import pos:start="10:1" pos:end="10:44">import <name pos:start="10:8" pos:end="10:43"><name pos:start="10:8" pos:end="10:11">java</name><operator pos:start="10:12" pos:end="10:12">.</operator><name pos:start="10:13" pos:end="10:16">util</name><operator pos:start="10:17" pos:end="10:17">.</operator><name pos:start="10:18" pos:end="10:27">concurrent</name><operator pos:start="10:28" pos:end="10:28">.</operator><name pos:start="10:29" pos:end="10:43">ExecutorService</name></name>;</import>
<import pos:start="11:1" pos:end="11:38">import <name pos:start="11:8" pos:end="11:37"><name pos:start="11:8" pos:end="11:11">java</name><operator pos:start="11:12" pos:end="11:12">.</operator><name pos:start="11:13" pos:end="11:16">util</name><operator pos:start="11:17" pos:end="11:17">.</operator><name pos:start="11:18" pos:end="11:27">concurrent</name><operator pos:start="11:28" pos:end="11:28">.</operator><name pos:start="11:29" pos:end="11:37">Executors</name></name>;</import>

<import pos:start="13:1" pos:end="13:56">import <name pos:start="13:8" pos:end="13:55"><name pos:start="13:8" pos:end="13:10">edu</name><operator pos:start="13:11" pos:end="13:11">.</operator><name pos:start="13:12" pos:end="13:13">nd</name><operator pos:start="13:14" pos:end="13:14">.</operator><name pos:start="13:15" pos:end="13:23">dronology</name><operator pos:start="13:24" pos:end="13:24">.</operator><name pos:start="13:25" pos:end="13:28">core</name><operator pos:start="13:29" pos:end="13:29">.</operator><name pos:start="13:30" pos:end="13:55">IUAVPropertyUpdateNotifier</name></name>;</import>
<import pos:start="14:1" pos:end="14:55">import <name pos:start="14:8" pos:end="14:54"><name pos:start="14:8" pos:end="14:10">edu</name><operator pos:start="14:11" pos:end="14:11">.</operator><name pos:start="14:12" pos:end="14:13">nd</name><operator pos:start="14:14" pos:end="14:14">.</operator><name pos:start="14:15" pos:end="14:23">dronology</name><operator pos:start="14:24" pos:end="14:24">.</operator><name pos:start="14:25" pos:end="14:28">core</name><operator pos:start="14:29" pos:end="14:29">.</operator><name pos:start="14:30" pos:end="14:39">exceptions</name><operator pos:start="14:40" pos:end="14:40">.</operator><name pos:start="14:41" pos:end="14:54">DroneException</name></name>;</import>
<import pos:start="15:1" pos:end="15:53">import <name pos:start="15:8" pos:end="15:52"><name pos:start="15:8" pos:end="15:10">edu</name><operator pos:start="15:11" pos:end="15:11">.</operator><name pos:start="15:12" pos:end="15:13">nd</name><operator pos:start="15:14" pos:end="15:14">.</operator><name pos:start="15:15" pos:end="15:23">dronology</name><operator pos:start="15:24" pos:end="15:24">.</operator><name pos:start="15:25" pos:end="15:28">core</name><operator pos:start="15:29" pos:end="15:29">.</operator><name pos:start="15:30" pos:end="15:34">fleet</name><operator pos:start="15:35" pos:end="15:35">.</operator><name pos:start="15:36" pos:end="15:52">RuntimeDroneTypes</name></name>;</import>
<import pos:start="16:1" pos:end="16:67">import <name pos:start="16:8" pos:end="16:66"><name pos:start="16:8" pos:end="16:10">edu</name><operator pos:start="16:11" pos:end="16:11">.</operator><name pos:start="16:12" pos:end="16:13">nd</name><operator pos:start="16:14" pos:end="16:14">.</operator><name pos:start="16:15" pos:end="16:23">dronology</name><operator pos:start="16:24" pos:end="16:24">.</operator><name pos:start="16:25" pos:end="16:28">core</name><operator pos:start="16:29" pos:end="16:29">.</operator><name pos:start="16:30" pos:end="16:39">monitoring</name><operator pos:start="16:40" pos:end="16:40">.</operator><name pos:start="16:41" pos:end="16:66">DronologyMonitoringManager</name></name>;</import>
<import pos:start="17:1" pos:end="17:58">import <name pos:start="17:8" pos:end="17:57"><name pos:start="17:8" pos:end="17:10">edu</name><operator pos:start="17:11" pos:end="17:11">.</operator><name pos:start="17:12" pos:end="17:13">nd</name><operator pos:start="17:14" pos:end="17:14">.</operator><name pos:start="17:15" pos:end="17:23">dronology</name><operator pos:start="17:24" pos:end="17:24">.</operator><name pos:start="17:25" pos:end="17:28">core</name><operator pos:start="17:29" pos:end="17:29">.</operator><name pos:start="17:30" pos:end="17:39">monitoring</name><operator pos:start="17:40" pos:end="17:40">.</operator><name pos:start="17:41" pos:end="17:57">MessageMarshaller</name></name>;</import>
<import pos:start="18:1" pos:end="18:61">import <name pos:start="18:8" pos:end="18:60"><name pos:start="18:8" pos:end="18:10">edu</name><operator pos:start="18:11" pos:end="18:11">.</operator><name pos:start="18:12" pos:end="18:13">nd</name><operator pos:start="18:14" pos:end="18:14">.</operator><name pos:start="18:15" pos:end="18:23">dronology</name><operator pos:start="18:24" pos:end="18:24">.</operator><name pos:start="18:25" pos:end="18:28">core</name><operator pos:start="18:29" pos:end="18:29">.</operator><name pos:start="18:30" pos:end="18:35">status</name><operator pos:start="18:36" pos:end="18:36">.</operator><name pos:start="18:37" pos:end="18:60">DronologyListenerManager</name></name>;</import>
<import pos:start="19:1" pos:end="19:58">import <name pos:start="19:8" pos:end="19:57"><name pos:start="19:8" pos:end="19:10">edu</name><operator pos:start="19:11" pos:end="19:11">.</operator><name pos:start="19:12" pos:end="19:13">nd</name><operator pos:start="19:14" pos:end="19:14">.</operator><name pos:start="19:15" pos:end="19:23">dronology</name><operator pos:start="19:24" pos:end="19:24">.</operator><name pos:start="19:25" pos:end="19:28">core</name><operator pos:start="19:29" pos:end="19:29">.</operator><name pos:start="19:30" pos:end="19:36">vehicle</name><operator pos:start="19:37" pos:end="19:37">.</operator><name pos:start="19:38" pos:end="19:57">IDroneCommandHandler</name></name>;</import>
<import pos:start="20:1" pos:end="20:72">import <name pos:start="20:8" pos:end="20:71"><name pos:start="20:8" pos:end="20:10">edu</name><operator pos:start="20:11" pos:end="20:11">.</operator><name pos:start="20:12" pos:end="20:13">nd</name><operator pos:start="20:14" pos:end="20:14">.</operator><name pos:start="20:15" pos:end="20:23">dronology</name><operator pos:start="20:24" pos:end="20:24">.</operator><name pos:start="20:25" pos:end="20:28">core</name><operator pos:start="20:29" pos:end="20:29">.</operator><name pos:start="20:30" pos:end="20:36">vehicle</name><operator pos:start="20:37" pos:end="20:37">.</operator><name pos:start="20:38" pos:end="20:45">commands</name><operator pos:start="20:46" pos:end="20:46">.</operator><name pos:start="20:47" pos:end="20:71">ConnectionResponseCommand</name></name>;</import>
<import pos:start="21:1" pos:end="21:60">import <name pos:start="21:8" pos:end="21:59"><name pos:start="21:8" pos:end="21:10">edu</name><operator pos:start="21:11" pos:end="21:11">.</operator><name pos:start="21:12" pos:end="21:13">nd</name><operator pos:start="21:14" pos:end="21:14">.</operator><name pos:start="21:15" pos:end="21:23">dronology</name><operator pos:start="21:24" pos:end="21:24">.</operator><name pos:start="21:25" pos:end="21:28">core</name><operator pos:start="21:29" pos:end="21:29">.</operator><name pos:start="21:30" pos:end="21:36">vehicle</name><operator pos:start="21:37" pos:end="21:37">.</operator><name pos:start="21:38" pos:end="21:45">commands</name><operator pos:start="21:46" pos:end="21:46">.</operator><name pos:start="21:47" pos:end="21:59">IDroneCommand</name></name>;</import>
<import pos:start="22:1" pos:end="22:90">import <name pos:start="22:8" pos:end="22:89"><name pos:start="22:8" pos:end="22:10">edu</name><operator pos:start="22:11" pos:end="22:11">.</operator><name pos:start="22:12" pos:end="22:13">nd</name><operator pos:start="22:14" pos:end="22:14">.</operator><name pos:start="22:15" pos:end="22:23">dronology</name><operator pos:start="22:24" pos:end="22:24">.</operator><name pos:start="22:25" pos:end="22:32">gstation</name><operator pos:start="22:33" pos:end="22:33">.</operator><name pos:start="22:34" pos:end="22:42">connector</name><operator pos:start="22:43" pos:end="22:43">.</operator><name pos:start="22:44" pos:end="22:50">connect</name><operator pos:start="22:51" pos:end="22:51">.</operator><name pos:start="22:52" pos:end="22:89">IncommingGroundstationConnectionServer</name></name>;</import>
<import pos:start="23:1" pos:end="23:73">import <name pos:start="23:8" pos:end="23:72"><name pos:start="23:8" pos:end="23:10">edu</name><operator pos:start="23:11" pos:end="23:11">.</operator><name pos:start="23:12" pos:end="23:13">nd</name><operator pos:start="23:14" pos:end="23:14">.</operator><name pos:start="23:15" pos:end="23:23">dronology</name><operator pos:start="23:24" pos:end="23:24">.</operator><name pos:start="23:25" pos:end="23:32">gstation</name><operator pos:start="23:33" pos:end="23:33">.</operator><name pos:start="23:34" pos:end="23:42">connector</name><operator pos:start="23:43" pos:end="23:43">.</operator><name pos:start="23:44" pos:end="23:51">dispatch</name><operator pos:start="23:52" pos:end="23:52">.</operator><name pos:start="23:53" pos:end="23:72">DispatchQueueManager</name></name>;</import>
<import pos:start="24:1" pos:end="24:67">import <name pos:start="24:8" pos:end="24:66"><name pos:start="24:8" pos:end="24:10">edu</name><operator pos:start="24:11" pos:end="24:11">.</operator><name pos:start="24:12" pos:end="24:13">nd</name><operator pos:start="24:14" pos:end="24:14">.</operator><name pos:start="24:15" pos:end="24:23">dronology</name><operator pos:start="24:24" pos:end="24:24">.</operator><name pos:start="24:25" pos:end="24:32">gstation</name><operator pos:start="24:33" pos:end="24:33">.</operator><name pos:start="24:34" pos:end="24:42">connector</name><operator pos:start="24:43" pos:end="24:43">.</operator><name pos:start="24:44" pos:end="24:51">dispatch</name><operator pos:start="24:52" pos:end="24:52">.</operator><name pos:start="24:53" pos:end="24:66">ReadDispatcher</name></name>;</import>
<import pos:start="25:1" pos:end="25:68">import <name pos:start="25:8" pos:end="25:67"><name pos:start="25:8" pos:end="25:10">edu</name><operator pos:start="25:11" pos:end="25:11">.</operator><name pos:start="25:12" pos:end="25:13">nd</name><operator pos:start="25:14" pos:end="25:14">.</operator><name pos:start="25:15" pos:end="25:23">dronology</name><operator pos:start="25:24" pos:end="25:24">.</operator><name pos:start="25:25" pos:end="25:32">gstation</name><operator pos:start="25:33" pos:end="25:33">.</operator><name pos:start="25:34" pos:end="25:42">connector</name><operator pos:start="25:43" pos:end="25:43">.</operator><name pos:start="25:44" pos:end="25:51">dispatch</name><operator pos:start="25:52" pos:end="25:52">.</operator><name pos:start="25:53" pos:end="25:67">WriteDispatcher</name></name>;</import>
<import pos:start="26:1" pos:end="26:71">import <name pos:start="26:8" pos:end="26:70"><name pos:start="26:8" pos:end="26:10">edu</name><operator pos:start="26:11" pos:end="26:11">.</operator><name pos:start="26:12" pos:end="26:13">nd</name><operator pos:start="26:14" pos:end="26:14">.</operator><name pos:start="26:15" pos:end="26:23">dronology</name><operator pos:start="26:24" pos:end="26:24">.</operator><name pos:start="26:25" pos:end="26:32">gstation</name><operator pos:start="26:33" pos:end="26:33">.</operator><name pos:start="26:34" pos:end="26:42">connector</name><operator pos:start="26:43" pos:end="26:43">.</operator><name pos:start="26:44" pos:end="26:51">messages</name><operator pos:start="26:52" pos:end="26:52">.</operator><name pos:start="26:53" pos:end="26:70">AbstractUAVMessage</name></name>;</import>
<import pos:start="27:1" pos:end="27:77">import <name pos:start="27:8" pos:end="27:76"><name pos:start="27:8" pos:end="27:10">edu</name><operator pos:start="27:11" pos:end="27:11">.</operator><name pos:start="27:12" pos:end="27:13">nd</name><operator pos:start="27:14" pos:end="27:14">.</operator><name pos:start="27:15" pos:end="27:23">dronology</name><operator pos:start="27:24" pos:end="27:24">.</operator><name pos:start="27:25" pos:end="27:32">gstation</name><operator pos:start="27:33" pos:end="27:33">.</operator><name pos:start="27:34" pos:end="27:42">connector</name><operator pos:start="27:43" pos:end="27:43">.</operator><name pos:start="27:44" pos:end="27:51">messages</name><operator pos:start="27:52" pos:end="27:52">.</operator><name pos:start="27:53" pos:end="27:76">ConnectionRequestMessage</name></name>;</import>
<import pos:start="28:1" pos:end="28:70">import <name pos:start="28:8" pos:end="28:69"><name pos:start="28:8" pos:end="28:10">edu</name><operator pos:start="28:11" pos:end="28:11">.</operator><name pos:start="28:12" pos:end="28:13">nd</name><operator pos:start="28:14" pos:end="28:14">.</operator><name pos:start="28:15" pos:end="28:23">dronology</name><operator pos:start="28:24" pos:end="28:24">.</operator><name pos:start="28:25" pos:end="28:32">gstation</name><operator pos:start="28:33" pos:end="28:33">.</operator><name pos:start="28:34" pos:end="28:42">connector</name><operator pos:start="28:43" pos:end="28:43">.</operator><name pos:start="28:44" pos:end="28:51">messages</name><operator pos:start="28:52" pos:end="28:52">.</operator><name pos:start="28:53" pos:end="28:69">UAVMessageFactory</name></name>;</import>
<import pos:start="29:1" pos:end="29:83">import <name pos:start="29:8" pos:end="29:82"><name pos:start="29:8" pos:end="29:10">edu</name><operator pos:start="29:11" pos:end="29:11">.</operator><name pos:start="29:12" pos:end="29:13">nd</name><operator pos:start="29:14" pos:end="29:14">.</operator><name pos:start="29:15" pos:end="29:23">dronology</name><operator pos:start="29:24" pos:end="29:24">.</operator><name pos:start="29:25" pos:end="29:32">gstation</name><operator pos:start="29:33" pos:end="29:33">.</operator><name pos:start="29:34" pos:end="29:42">connector</name><operator pos:start="29:43" pos:end="29:43">.</operator><name pos:start="29:44" pos:end="29:50">service</name><operator pos:start="29:51" pos:end="29:51">.</operator><name pos:start="29:52" pos:end="29:60">connector</name><operator pos:start="29:61" pos:end="29:61">.</operator><name pos:start="29:62" pos:end="29:82">DroneConnectorService</name></name>;</import>
<import pos:start="30:1" pos:end="30:69">import <name pos:start="30:8" pos:end="30:68"><name pos:start="30:8" pos:end="30:10">edu</name><operator pos:start="30:11" pos:end="30:11">.</operator><name pos:start="30:12" pos:end="30:13">nd</name><operator pos:start="30:14" pos:end="30:14">.</operator><name pos:start="30:15" pos:end="30:23">dronology</name><operator pos:start="30:24" pos:end="30:24">.</operator><name pos:start="30:25" pos:end="30:32">services</name><operator pos:start="30:33" pos:end="30:33">.</operator><name pos:start="30:34" pos:end="30:37">core</name><operator pos:start="30:38" pos:end="30:38">.</operator><name pos:start="30:39" pos:end="30:42">util</name><operator pos:start="30:43" pos:end="30:43">.</operator><name pos:start="30:44" pos:end="30:68">DronologyServiceException</name></name>;</import>
<import pos:start="31:1" pos:end="31:48">import <name pos:start="31:8" pos:end="31:47"><name pos:start="31:8" pos:end="31:10">edu</name><operator pos:start="31:11" pos:end="31:11">.</operator><name pos:start="31:12" pos:end="31:13">nd</name><operator pos:start="31:14" pos:end="31:14">.</operator><name pos:start="31:15" pos:end="31:23">dronology</name><operator pos:start="31:24" pos:end="31:24">.</operator><name pos:start="31:25" pos:end="31:28">util</name><operator pos:start="31:29" pos:end="31:29">.</operator><name pos:start="31:30" pos:end="31:47">NamedThreadFactory</name></name>;</import>
<import pos:start="32:1" pos:end="32:30">import <name pos:start="32:8" pos:end="32:29"><name pos:start="32:8" pos:end="32:10">net</name><operator pos:start="32:11" pos:end="32:11">.</operator><name pos:start="32:12" pos:end="32:13">mv</name><operator pos:start="32:14" pos:end="32:14">.</operator><name pos:start="32:15" pos:end="32:21">logging</name><operator pos:start="32:22" pos:end="32:22">.</operator><name pos:start="32:23" pos:end="32:29">ILogger</name></name>;</import>
<import pos:start="33:1" pos:end="33:37">import <name pos:start="33:8" pos:end="33:36"><name pos:start="33:8" pos:end="33:10">net</name><operator pos:start="33:11" pos:end="33:11">.</operator><name pos:start="33:12" pos:end="33:13">mv</name><operator pos:start="33:14" pos:end="33:14">.</operator><name pos:start="33:15" pos:end="33:21">logging</name><operator pos:start="33:22" pos:end="33:22">.</operator><name pos:start="33:23" pos:end="33:36">LoggerProvider</name></name>;</import>

<comment type="block" format="javadoc" pos:start="35:1" pos:end="44:3">/**
 * 
 * Establishes new, and handles established connections between Dronology and
 * multiple GCS.&lt;br&gt;
 * Creates new {@link ReadDispatcher} and {@link WriteDispatcher} threads when a
 * connection to a new GCS is established.
 * 
 * @author Michael Vierhauser
 *
 */</comment>
<class pos:start="45:1" pos:end="170:1"><specifier pos:start="45:1" pos:end="45:6">public</specifier> class <name pos:start="45:14" pos:end="45:35">GroundstationConnector</name> <super_list pos:start="45:37" pos:end="45:77"><implements pos:start="45:37" pos:end="45:77">implements <super pos:start="45:48" pos:end="45:67"><name pos:start="45:48" pos:end="45:67">IDroneCommandHandler</name></super>, <super pos:start="45:70" pos:end="45:77"><name pos:start="45:70" pos:end="45:77">Runnable</name></super></implements></super_list> <block pos:start="45:79" pos:end="170:1">{

	<decl_stmt pos:start="47:9" pos:end="47:101"><decl pos:start="47:9" pos:end="47:100"><type pos:start="47:9" pos:end="47:36"><specifier pos:start="47:9" pos:end="47:15">private</specifier> <specifier pos:start="47:17" pos:end="47:22">static</specifier> <specifier pos:start="47:24" pos:end="47:28">final</specifier> <name pos:start="47:30" pos:end="47:36">ILogger</name></type> <name pos:start="47:38" pos:end="47:43">LOGGER</name> <init pos:start="47:45" pos:end="47:100">= <expr pos:start="47:47" pos:end="47:100"><call pos:start="47:47" pos:end="47:100"><name pos:start="47:47" pos:end="47:70"><name pos:start="47:47" pos:end="47:60">LoggerProvider</name><operator pos:start="47:61" pos:end="47:61">.</operator><name pos:start="47:62" pos:end="47:70">getLogger</name></name><argument_list pos:start="47:71" pos:end="47:100">(<argument pos:start="47:72" pos:end="47:99"><expr pos:start="47:72" pos:end="47:99"><name pos:start="47:72" pos:end="47:99"><name pos:start="47:72" pos:end="47:93">GroundstationConnector</name><operator pos:start="47:94" pos:end="47:94">.</operator><name pos:start="47:95" pos:end="47:99">class</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

	<decl_stmt pos:start="49:9" pos:end="50:73"><decl pos:start="49:9" pos:end="50:72"><type pos:start="49:9" pos:end="49:46"><specifier pos:start="49:9" pos:end="49:17">protected</specifier> <specifier pos:start="49:19" pos:end="49:24">static</specifier> <specifier pos:start="49:26" pos:end="49:30">final</specifier> <name pos:start="49:32" pos:end="49:46">ExecutorService</name></type> <name pos:start="49:48" pos:end="49:55">EXECUTOR</name> <init pos:start="49:57" pos:end="50:72">= <expr pos:start="49:59" pos:end="50:72"><call pos:start="49:59" pos:end="50:72"><name pos:start="49:59" pos:end="49:86"><name pos:start="49:59" pos:end="49:67">Executors</name><operator pos:start="49:68" pos:end="49:68">.</operator><name pos:start="49:69" pos:end="49:86">newFixedThreadPool</name></name><argument_list pos:start="49:87" pos:end="50:72">(<argument pos:start="49:88" pos:end="49:89"><expr pos:start="49:88" pos:end="49:89"><literal type="number" pos:start="49:88" pos:end="49:89">10</literal></expr></argument>,
			<argument pos:start="50:25" pos:end="50:71"><expr pos:start="50:25" pos:end="50:71"><operator pos:start="50:25" pos:end="50:27">new</operator> <call pos:start="50:29" pos:end="50:71"><name pos:start="50:29" pos:end="50:46">NamedThreadFactory</name><argument_list pos:start="50:47" pos:end="50:71">(<argument pos:start="50:48" pos:end="50:70"><expr pos:start="50:48" pos:end="50:70"><literal type="string" pos:start="50:48" pos:end="50:70">"Groundstation-Threads"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

	<comment type="line" pos:start="52:9" pos:end="52:62">// socket for communication with python ground station</comment>
	<decl_stmt pos:start="53:9" pos:end="53:30"><decl pos:start="53:9" pos:end="53:29"><type pos:start="53:9" pos:end="53:22"><specifier pos:start="53:9" pos:end="53:15">private</specifier> <name pos:start="53:17" pos:end="53:22">Socket</name></type> <name pos:start="53:24" pos:end="53:29">socket</name></decl>;</decl_stmt>
	<decl_stmt pos:start="54:9" pos:end="54:110"><decl pos:start="54:9" pos:end="54:109"><type pos:start="54:9" pos:end="54:61"><specifier pos:start="54:9" pos:end="54:15">private</specifier> <specifier pos:start="54:17" pos:end="54:21">final</specifier> <name pos:start="54:23" pos:end="54:61"><name pos:start="54:23" pos:end="54:25">Map</name><argument_list type="generic" pos:start="54:26" pos:end="54:61">&lt;<argument pos:start="54:27" pos:end="54:32"><name pos:start="54:27" pos:end="54:32">String</name></argument>, <argument pos:start="54:35" pos:end="54:60"><name pos:start="54:35" pos:end="54:60">IUAVPropertyUpdateNotifier</name></argument>&gt;</argument_list></name></type> <name pos:start="54:63" pos:end="54:81">registeredListeners</name> <init pos:start="54:83" pos:end="54:109">= <expr pos:start="54:85" pos:end="54:109"><operator pos:start="54:85" pos:end="54:87">new</operator> <call pos:start="54:89" pos:end="54:109"><name pos:start="54:89" pos:end="54:107"><name pos:start="54:89" pos:end="54:105">ConcurrentHashMap</name><argument_list type="generic" pos:start="54:106" pos:end="54:107">&lt;&gt;</argument_list></name><argument_list pos:start="54:108" pos:end="54:109">()</argument_list></call></expr></init></decl>;</decl_stmt>
	<decl_stmt pos:start="55:9" pos:end="55:46"><decl pos:start="55:9" pos:end="55:45"><type pos:start="55:9" pos:end="55:30"><specifier pos:start="55:9" pos:end="55:15">private</specifier> <name pos:start="55:17" pos:end="55:30">ReadDispatcher</name></type> <name pos:start="55:32" pos:end="55:45">readDispatcher</name></decl>;</decl_stmt>
	<decl_stmt pos:start="56:9" pos:end="56:48"><decl pos:start="56:9" pos:end="56:47"><type pos:start="56:9" pos:end="56:31"><specifier pos:start="56:9" pos:end="56:15">private</specifier> <name pos:start="56:17" pos:end="56:31">WriteDispatcher</name></type> <name pos:start="56:33" pos:end="56:47">writeDispatcher</name></decl>;</decl_stmt>
	<decl_stmt pos:start="57:9" pos:end="57:39"><decl pos:start="57:9" pos:end="57:38"><type pos:start="57:9" pos:end="57:22"><specifier pos:start="57:9" pos:end="57:15">private</specifier> <name pos:start="57:17" pos:end="57:22">String</name></type> <name pos:start="57:24" pos:end="57:38">groundstationid</name></decl>;</decl_stmt>
	<decl_stmt pos:start="58:9" pos:end="58:58"><decl pos:start="58:9" pos:end="58:57"><type pos:start="58:9" pos:end="58:36"><specifier pos:start="58:9" pos:end="58:15">private</specifier> <name pos:start="58:17" pos:end="58:36">DispatchQueueManager</name></type> <name pos:start="58:38" pos:end="58:57">dispatchQueueManager</name></decl>;</decl_stmt>
	<decl_stmt pos:start="59:9" pos:end="59:34"><decl pos:start="59:9" pos:end="59:33"><type pos:start="59:9" pos:end="59:23"><specifier pos:start="59:9" pos:end="59:15">private</specifier> <name pos:start="59:17" pos:end="59:23">boolean</name></type> <name pos:start="59:25" pos:end="59:33">connected</name></decl>;</decl_stmt>
	<decl_stmt pos:start="60:9" pos:end="60:62"><decl pos:start="60:9" pos:end="60:61"><type pos:start="60:9" pos:end="60:54"><specifier pos:start="60:9" pos:end="60:15">private</specifier> <name pos:start="60:17" pos:end="60:54">IncommingGroundstationConnectionServer</name></type> <name pos:start="60:56" pos:end="60:61">server</name></decl>;</decl_stmt>

	<constructor pos:start="62:9" pos:end="67:9"><specifier pos:start="62:9" pos:end="62:14">public</specifier> <name pos:start="62:16" pos:end="62:37">GroundstationConnector</name><parameter_list pos:start="62:38" pos:end="62:99">(<parameter pos:start="62:39" pos:end="62:83"><decl pos:start="62:39" pos:end="62:83"><type pos:start="62:39" pos:end="62:83"><name pos:start="62:39" pos:end="62:76">IncommingGroundstationConnectionServer</name></type> <name pos:start="62:78" pos:end="62:83">server</name></decl></parameter>, <parameter pos:start="62:86" pos:end="62:98"><decl pos:start="62:86" pos:end="62:98"><type pos:start="62:86" pos:end="62:98"><name pos:start="62:86" pos:end="62:91">Socket</name></type> <name pos:start="62:93" pos:end="62:98">socket</name></decl></parameter>)</parameter_list> <block pos:start="62:101" pos:end="67:9">{<block_content pos:start="64:17" pos:end="66:37">

		<expr_stmt pos:start="64:17" pos:end="64:39"><expr pos:start="64:17" pos:end="64:38"><name pos:start="64:17" pos:end="64:30"><name pos:start="64:17" pos:end="64:20">this</name><operator pos:start="64:21" pos:end="64:21">.</operator><name pos:start="64:22" pos:end="64:30">connected</name></name> <operator pos:start="64:32" pos:end="64:32">=</operator> <literal type="boolean" pos:start="64:34" pos:end="64:38">false</literal></expr>;</expr_stmt>
		<expr_stmt pos:start="65:17" pos:end="65:37"><expr pos:start="65:17" pos:end="65:36"><name pos:start="65:17" pos:end="65:27"><name pos:start="65:17" pos:end="65:20">this</name><operator pos:start="65:21" pos:end="65:21">.</operator><name pos:start="65:22" pos:end="65:27">server</name></name> <operator pos:start="65:29" pos:end="65:29">=</operator> <name pos:start="65:31" pos:end="65:36">server</name></expr>;</expr_stmt>
		<expr_stmt pos:start="66:17" pos:end="66:37"><expr pos:start="66:17" pos:end="66:36"><name pos:start="66:17" pos:end="66:27"><name pos:start="66:17" pos:end="66:20">this</name><operator pos:start="66:21" pos:end="66:21">.</operator><name pos:start="66:22" pos:end="66:27">socket</name></name> <operator pos:start="66:29" pos:end="66:29">=</operator> <name pos:start="66:31" pos:end="66:36">socket</name></expr>;</expr_stmt>
	</block_content>}</block></constructor>

	<function pos:start="69:9" pos:end="74:9"><annotation pos:start="69:9" pos:end="69:17">@<name pos:start="69:10" pos:end="69:17">Override</name></annotation>
	<type pos:start="70:9" pos:end="70:19"><specifier pos:start="70:9" pos:end="70:14">public</specifier> <name pos:start="70:16" pos:end="70:19">void</name></type> <name pos:start="70:21" pos:end="70:31">sendCommand</name><parameter_list pos:start="70:32" pos:end="70:50">(<parameter pos:start="70:33" pos:end="70:49"><decl pos:start="70:33" pos:end="70:49"><type pos:start="70:33" pos:end="70:45"><name pos:start="70:33" pos:end="70:45">IDroneCommand</name></type> <name pos:start="70:47" pos:end="70:49">cmd</name></decl></parameter>)</parameter_list> <throws pos:start="70:52" pos:end="70:72">throws <argument pos:start="70:59" pos:end="70:72"><expr pos:start="70:59" pos:end="70:72"><name pos:start="70:59" pos:end="70:72">DroneException</name></expr></argument></throws> <block pos:start="70:74" pos:end="74:9">{<block_content pos:start="71:17" pos:end="73:103">
		<expr_stmt pos:start="71:17" pos:end="71:92"><expr pos:start="71:17" pos:end="71:91"><call pos:start="71:17" pos:end="71:91"><name pos:start="71:17" pos:end="71:28"><name pos:start="71:17" pos:end="71:22">LOGGER</name><operator pos:start="71:23" pos:end="71:23">.</operator><name pos:start="71:24" pos:end="71:28">trace</name></name><argument_list pos:start="71:29" pos:end="71:91">(<argument pos:start="71:30" pos:end="71:90"><expr pos:start="71:30" pos:end="71:90"><name pos:start="71:30" pos:end="71:44">groundstationid</name> <operator pos:start="71:46" pos:end="71:46">+</operator> <literal type="string" pos:start="71:48" pos:end="71:73">" Sending Command to UAV "</literal> <operator pos:start="71:75" pos:end="71:75">+</operator> <call pos:start="71:77" pos:end="71:90"><name pos:start="71:77" pos:end="71:88"><name pos:start="71:77" pos:end="71:79">cmd</name><operator pos:start="71:80" pos:end="71:80">.</operator><name pos:start="71:81" pos:end="71:88">toString</name></name><argument_list pos:start="71:89" pos:end="71:90">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt pos:start="72:17" pos:end="72:47"><expr pos:start="72:17" pos:end="72:46"><call pos:start="72:17" pos:end="72:46"><name pos:start="72:17" pos:end="72:41"><name pos:start="72:17" pos:end="72:36">dispatchQueueManager</name><operator pos:start="72:37" pos:end="72:37">.</operator><name pos:start="72:38" pos:end="72:41">send</name></name><argument_list pos:start="72:42" pos:end="72:46">(<argument pos:start="72:43" pos:end="72:45"><expr pos:start="72:43" pos:end="72:45"><name pos:start="72:43" pos:end="72:45">cmd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt pos:start="73:17" pos:end="73:103"><expr pos:start="73:17" pos:end="73:102"><call pos:start="73:17" pos:end="73:56"><name pos:start="73:17" pos:end="73:54"><name pos:start="73:17" pos:end="73:42">DronologyMonitoringManager</name><operator pos:start="73:43" pos:end="73:43">.</operator><name pos:start="73:44" pos:end="73:54">getInstance</name></name><argument_list pos:start="73:55" pos:end="73:56">()</argument_list></call><operator pos:start="73:57" pos:end="73:57">.</operator><call pos:start="73:58" pos:end="73:102"><name pos:start="73:58" pos:end="73:64">publish</name><argument_list pos:start="73:65" pos:end="73:102">(<argument pos:start="73:66" pos:end="73:101"><expr pos:start="73:66" pos:end="73:101"><call pos:start="73:66" pos:end="73:101"><name pos:start="73:66" pos:end="73:96"><name pos:start="73:66" pos:end="73:82">MessageMarshaller</name><operator pos:start="73:83" pos:end="73:83">.</operator><name pos:start="73:84" pos:end="73:96">createMessage</name></name><argument_list pos:start="73:97" pos:end="73:101">(<argument pos:start="73:98" pos:end="73:100"><expr pos:start="73:98" pos:end="73:100"><name pos:start="73:98" pos:end="73:100">cmd</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	</block_content>}</block></function>

	<function pos:start="76:9" pos:end="83:9"><annotation pos:start="76:9" pos:end="76:17">@<name pos:start="76:10" pos:end="76:17">Override</name></annotation>
	<type pos:start="77:9" pos:end="77:19"><specifier pos:start="77:9" pos:end="77:14">public</specifier> <name pos:start="77:16" pos:end="77:19">void</name></type> <name pos:start="77:21" pos:end="77:45">setStatusCallbackNotifier</name><parameter_list pos:start="77:46" pos:end="77:93">(<parameter pos:start="77:47" pos:end="77:55"><decl pos:start="77:47" pos:end="77:55"><type pos:start="77:47" pos:end="77:55"><name pos:start="77:47" pos:end="77:52">String</name></type> <name pos:start="77:54" pos:end="77:55">id</name></decl></parameter>, <parameter pos:start="77:58" pos:end="77:92"><decl pos:start="77:58" pos:end="77:92"><type pos:start="77:58" pos:end="77:92"><name pos:start="77:58" pos:end="77:83">IUAVPropertyUpdateNotifier</name></type> <name pos:start="77:85" pos:end="77:92">listener</name></decl></parameter>)</parameter_list> <throws pos:start="77:95" pos:end="77:115">throws <argument pos:start="77:102" pos:end="77:115"><expr pos:start="77:102" pos:end="77:115"><name pos:start="77:102" pos:end="77:115">DroneException</name></expr></argument></throws> <block pos:start="77:117" pos:end="83:9">{<block_content pos:start="78:17" pos:end="82:72">
		<if_stmt pos:start="78:17" pos:end="80:17"><if pos:start="78:17" pos:end="80:17">if <condition pos:start="78:20" pos:end="78:56">(<expr pos:start="78:21" pos:end="78:55"><call pos:start="78:21" pos:end="78:55"><name pos:start="78:21" pos:end="78:51"><name pos:start="78:21" pos:end="78:39">registeredListeners</name><operator pos:start="78:40" pos:end="78:40">.</operator><name pos:start="78:41" pos:end="78:51">containsKey</name></name><argument_list pos:start="78:52" pos:end="78:55">(<argument pos:start="78:53" pos:end="78:54"><expr pos:start="78:53" pos:end="78:54"><name pos:start="78:53" pos:end="78:54">id</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="78:58" pos:end="80:17">{<block_content pos:start="79:25" pos:end="79:104">
			<throw pos:start="79:25" pos:end="79:104">throw <expr pos:start="79:31" pos:end="79:103"><operator pos:start="79:31" pos:end="79:33">new</operator> <call pos:start="79:35" pos:end="79:103"><name pos:start="79:35" pos:end="79:48">DroneException</name><argument_list pos:start="79:49" pos:end="79:103">(<argument pos:start="79:50" pos:end="79:102"><expr pos:start="79:50" pos:end="79:102"><literal type="string" pos:start="79:50" pos:end="79:69">"An listener with '"</literal> <operator pos:start="79:71" pos:end="79:71">+</operator> <name pos:start="79:73" pos:end="79:74">id</name> <operator pos:start="79:76" pos:end="79:76">+</operator> <literal type="string" pos:start="79:78" pos:end="79:102">"' is already registered"</literal></expr></argument>)</argument_list></call></expr>;</throw>
		</block_content>}</block></if></if_stmt>
		<expr_stmt pos:start="81:17" pos:end="81:54"><expr pos:start="81:17" pos:end="81:53"><call pos:start="81:17" pos:end="81:53"><name pos:start="81:17" pos:end="81:39"><name pos:start="81:17" pos:end="81:35">registeredListeners</name><operator pos:start="81:36" pos:end="81:36">.</operator><name pos:start="81:37" pos:end="81:39">put</name></name><argument_list pos:start="81:40" pos:end="81:53">(<argument pos:start="81:41" pos:end="81:42"><expr pos:start="81:41" pos:end="81:42"><name pos:start="81:41" pos:end="81:42">id</name></expr></argument>, <argument pos:start="81:45" pos:end="81:52"><expr pos:start="81:45" pos:end="81:52"><name pos:start="81:45" pos:end="81:52">listener</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt pos:start="82:17" pos:end="82:72"><expr pos:start="82:17" pos:end="82:71"><call pos:start="82:17" pos:end="82:71"><name pos:start="82:17" pos:end="82:57"><name pos:start="82:17" pos:end="82:36">dispatchQueueManager</name><operator pos:start="82:37" pos:end="82:37">.</operator><name pos:start="82:38" pos:end="82:57">createDispatchThread</name></name><argument_list pos:start="82:58" pos:end="82:71">(<argument pos:start="82:59" pos:end="82:60"><expr pos:start="82:59" pos:end="82:60"><name pos:start="82:59" pos:end="82:60">id</name></expr></argument>, <argument pos:start="82:63" pos:end="82:70"><expr pos:start="82:63" pos:end="82:70"><name pos:start="82:63" pos:end="82:70">listener</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	</block_content>}</block></function>

	<function pos:start="85:9" pos:end="104:9"><type pos:start="85:9" pos:end="85:19"><specifier pos:start="85:9" pos:end="85:14">public</specifier> <name pos:start="85:16" pos:end="85:19">void</name></type> <name pos:start="85:21" pos:end="85:28">tearDown</name><parameter_list pos:start="85:29" pos:end="85:30">()</parameter_list> <block pos:start="85:32" pos:end="104:9">{<block_content pos:start="86:17" pos:end="102:90">
		<try pos:start="86:17" pos:end="90:17">try <block pos:start="86:21" pos:end="88:17">{<block_content pos:start="87:25" pos:end="87:50">
			<expr_stmt pos:start="87:25" pos:end="87:50"><expr pos:start="87:25" pos:end="87:49"><call pos:start="87:25" pos:end="87:49"><name pos:start="87:25" pos:end="87:47"><name pos:start="87:25" pos:end="87:38">readDispatcher</name><operator pos:start="87:39" pos:end="87:39">.</operator><name pos:start="87:40" pos:end="87:47">tearDown</name></name><argument_list pos:start="87:48" pos:end="87:49">()</argument_list></call></expr>;</expr_stmt>
		</block_content>}</block> <catch pos:start="88:19" pos:end="90:17">catch <parameter_list pos:start="88:25" pos:end="88:37">(<parameter pos:start="88:26" pos:end="88:36"><decl pos:start="88:26" pos:end="88:36"><type pos:start="88:26" pos:end="88:36"><name pos:start="88:26" pos:end="88:34">Exception</name></type> <name pos:start="88:36" pos:end="88:36">e</name></decl></parameter>)</parameter_list> <block pos:start="88:39" pos:end="90:17">{<block_content pos:start="89:25" pos:end="89:40">
			<expr_stmt pos:start="89:25" pos:end="89:40"><expr pos:start="89:25" pos:end="89:39"><call pos:start="89:25" pos:end="89:39"><name pos:start="89:25" pos:end="89:36"><name pos:start="89:25" pos:end="89:30">LOGGER</name><operator pos:start="89:31" pos:end="89:31">.</operator><name pos:start="89:32" pos:end="89:36">error</name></name><argument_list pos:start="89:37" pos:end="89:39">(<argument pos:start="89:38" pos:end="89:38"><expr pos:start="89:38" pos:end="89:38"><name pos:start="89:38" pos:end="89:38">e</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		</block_content>}</block></catch></try>
		<try pos:start="91:17" pos:end="95:17">try <block pos:start="91:21" pos:end="93:17">{<block_content pos:start="92:25" pos:end="92:51">
			<expr_stmt pos:start="92:25" pos:end="92:51"><expr pos:start="92:25" pos:end="92:50"><call pos:start="92:25" pos:end="92:50"><name pos:start="92:25" pos:end="92:48"><name pos:start="92:25" pos:end="92:39">writeDispatcher</name><operator pos:start="92:40" pos:end="92:40">.</operator><name pos:start="92:41" pos:end="92:48">tearDown</name></name><argument_list pos:start="92:49" pos:end="92:50">()</argument_list></call></expr>;</expr_stmt>
		</block_content>}</block> <catch pos:start="93:19" pos:end="95:17">catch <parameter_list pos:start="93:25" pos:end="93:37">(<parameter pos:start="93:26" pos:end="93:36"><decl pos:start="93:26" pos:end="93:36"><type pos:start="93:26" pos:end="93:36"><name pos:start="93:26" pos:end="93:34">Exception</name></type> <name pos:start="93:36" pos:end="93:36">e</name></decl></parameter>)</parameter_list> <block pos:start="93:39" pos:end="95:17">{<block_content pos:start="94:25" pos:end="94:40">
			<expr_stmt pos:start="94:25" pos:end="94:40"><expr pos:start="94:25" pos:end="94:39"><call pos:start="94:25" pos:end="94:39"><name pos:start="94:25" pos:end="94:36"><name pos:start="94:25" pos:end="94:30">LOGGER</name><operator pos:start="94:31" pos:end="94:31">.</operator><name pos:start="94:32" pos:end="94:36">error</name></name><argument_list pos:start="94:37" pos:end="94:39">(<argument pos:start="94:38" pos:end="94:38"><expr pos:start="94:38" pos:end="94:38"><name pos:start="94:38" pos:end="94:38">e</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		</block_content>}</block></catch></try>
		<try pos:start="96:17" pos:end="100:17">try <block pos:start="96:21" pos:end="98:17">{<block_content pos:start="97:25" pos:end="97:56">
			<expr_stmt pos:start="97:25" pos:end="97:56"><expr pos:start="97:25" pos:end="97:55"><call pos:start="97:25" pos:end="97:55"><name pos:start="97:25" pos:end="97:53"><name pos:start="97:25" pos:end="97:44">dispatchQueueManager</name><operator pos:start="97:45" pos:end="97:45">.</operator><name pos:start="97:46" pos:end="97:53">tearDown</name></name><argument_list pos:start="97:54" pos:end="97:55">()</argument_list></call></expr>;</expr_stmt>
		</block_content>}</block> <catch pos:start="98:19" pos:end="100:17">catch <parameter_list pos:start="98:25" pos:end="98:37">(<parameter pos:start="98:26" pos:end="98:36"><decl pos:start="98:26" pos:end="98:36"><type pos:start="98:26" pos:end="98:36"><name pos:start="98:26" pos:end="98:34">Exception</name></type> <name pos:start="98:36" pos:end="98:36">e</name></decl></parameter>)</parameter_list> <block pos:start="98:39" pos:end="100:17">{<block_content pos:start="99:25" pos:end="99:40">
			<expr_stmt pos:start="99:25" pos:end="99:40"><expr pos:start="99:25" pos:end="99:39"><call pos:start="99:25" pos:end="99:39"><name pos:start="99:25" pos:end="99:36"><name pos:start="99:25" pos:end="99:30">LOGGER</name><operator pos:start="99:31" pos:end="99:31">.</operator><name pos:start="99:32" pos:end="99:36">error</name></name><argument_list pos:start="99:37" pos:end="99:39">(<argument pos:start="99:38" pos:end="99:38"><expr pos:start="99:38" pos:end="99:38"><name pos:start="99:38" pos:end="99:38">e</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		</block_content>}</block></catch></try>

		<expr_stmt pos:start="102:17" pos:end="102:90"><expr pos:start="102:17" pos:end="102:89"><call pos:start="102:17" pos:end="102:54"><name pos:start="102:17" pos:end="102:52"><name pos:start="102:17" pos:end="102:40">DronologyListenerManager</name><operator pos:start="102:41" pos:end="102:41">.</operator><name pos:start="102:42" pos:end="102:52">getInstance</name></name><argument_list pos:start="102:53" pos:end="102:54">()</argument_list></call><operator pos:start="102:55" pos:end="102:55">.</operator><call pos:start="102:56" pos:end="102:89"><name pos:start="102:56" pos:end="102:72">notifyGCSShutdown</name><argument_list pos:start="102:73" pos:end="102:89">(<argument pos:start="102:74" pos:end="102:88"><expr pos:start="102:74" pos:end="102:88"><name pos:start="102:74" pos:end="102:88">groundstationid</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	</block_content>}</block></function>

	<function pos:start="106:9" pos:end="109:9"><annotation pos:start="106:9" pos:end="106:17">@<name pos:start="106:10" pos:end="106:17">Override</name></annotation>
	<type pos:start="107:9" pos:end="107:21"><specifier pos:start="107:9" pos:end="107:14">public</specifier> <name pos:start="107:16" pos:end="107:21">String</name></type> <name pos:start="107:23" pos:end="107:34">getHandlerId</name><parameter_list pos:start="107:35" pos:end="107:36">()</parameter_list> <block pos:start="107:38" pos:end="109:9">{<block_content pos:start="108:17" pos:end="108:39">
		<return pos:start="108:17" pos:end="108:39">return <expr pos:start="108:24" pos:end="108:38"><name pos:start="108:24" pos:end="108:38">groundstationid</name></expr>;</return>
	</block_content>}</block></function>

	<function pos:start="111:9" pos:end="114:9"><type pos:start="111:9" pos:end="111:19"><specifier pos:start="111:9" pos:end="111:14">public</specifier> <name pos:start="111:16" pos:end="111:19">void</name></type> <name pos:start="111:21" pos:end="111:43">registerSafetyValidator</name><parameter_list pos:start="111:44" pos:end="111:74">(<parameter pos:start="111:45" pos:end="111:73"><decl pos:start="111:45" pos:end="111:73"><type pos:start="111:45" pos:end="111:63"><name pos:start="111:45" pos:end="111:63">IUAVSafetyValidator</name></type> <name pos:start="111:65" pos:end="111:73">validator</name></decl></parameter>)</parameter_list> <block pos:start="111:76" pos:end="114:9">{<block_content pos:start="112:17" pos:end="112:72">
		<expr_stmt pos:start="112:17" pos:end="112:72"><expr pos:start="112:17" pos:end="112:71"><call pos:start="112:17" pos:end="112:71"><name pos:start="112:17" pos:end="112:60"><name pos:start="112:17" pos:end="112:36">dispatchQueueManager</name><operator pos:start="112:37" pos:end="112:37">.</operator><name pos:start="112:38" pos:end="112:60">registerSafetyValidator</name></name><argument_list pos:start="112:61" pos:end="112:71">(<argument pos:start="112:62" pos:end="112:70"><expr pos:start="112:62" pos:end="112:70"><name pos:start="112:62" pos:end="112:70">validator</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	</block_content>}</block></function>

	<function pos:start="116:9" pos:end="148:9"><annotation pos:start="116:9" pos:end="116:17">@<name pos:start="116:10" pos:end="116:17">Override</name></annotation>
	<type pos:start="117:9" pos:end="117:19"><specifier pos:start="117:9" pos:end="117:14">public</specifier> <name pos:start="117:16" pos:end="117:19">void</name></type> <name pos:start="117:21" pos:end="117:23">run</name><parameter_list pos:start="117:24" pos:end="117:25">()</parameter_list> <block pos:start="117:27" pos:end="148:9">{<block_content pos:start="118:17" pos:end="146:17">
		<expr_stmt pos:start="118:17" pos:end="118:62"><expr pos:start="118:17" pos:end="118:61"><call pos:start="118:17" pos:end="118:61"><name pos:start="118:17" pos:end="118:27"><name pos:start="118:17" pos:end="118:22">LOGGER</name><operator pos:start="118:23" pos:end="118:23">.</operator><name pos:start="118:24" pos:end="118:27">info</name></name><argument_list pos:start="118:28" pos:end="118:61">(<argument pos:start="118:29" pos:end="118:60"><expr pos:start="118:29" pos:end="118:60"><literal type="string" pos:start="118:29" pos:end="118:60">"GroundstationConnector started"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<decl_stmt pos:start="119:17" pos:end="119:38"><decl pos:start="119:17" pos:end="119:37"><type pos:start="119:17" pos:end="119:30"><name pos:start="119:17" pos:end="119:30">BufferedReader</name></type> <name pos:start="119:32" pos:end="119:37">reader</name></decl>;</decl_stmt>
		<try pos:start="120:17" pos:end="146:17">try <block pos:start="120:21" pos:end="143:17">{<block_content pos:start="121:25" pos:end="142:39">
			<expr_stmt pos:start="121:25" pos:end="121:100"><expr pos:start="121:25" pos:end="121:99"><name pos:start="121:25" pos:end="121:30">reader</name> <operator pos:start="121:32" pos:end="121:32">=</operator> <operator pos:start="121:34" pos:end="121:36">new</operator> <call pos:start="121:38" pos:end="121:99"><name pos:start="121:38" pos:end="121:51">BufferedReader</name><argument_list pos:start="121:52" pos:end="121:99">(<argument pos:start="121:53" pos:end="121:98"><expr pos:start="121:53" pos:end="121:98"><operator pos:start="121:53" pos:end="121:55">new</operator> <call pos:start="121:57" pos:end="121:98"><name pos:start="121:57" pos:end="121:73">InputStreamReader</name><argument_list pos:start="121:74" pos:end="121:98">(<argument pos:start="121:75" pos:end="121:97"><expr pos:start="121:75" pos:end="121:97"><call pos:start="121:75" pos:end="121:97"><name pos:start="121:75" pos:end="121:95"><name pos:start="121:75" pos:end="121:80">socket</name><operator pos:start="121:81" pos:end="121:81">.</operator><name pos:start="121:82" pos:end="121:95">getInputStream</name></name><argument_list pos:start="121:96" pos:end="121:97">()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

			<decl_stmt pos:start="123:25" pos:end="123:56"><decl pos:start="123:25" pos:end="123:55"><type pos:start="123:25" pos:end="123:30"><name pos:start="123:25" pos:end="123:30">String</name></type> <name pos:start="123:32" pos:end="123:35">line</name> <init pos:start="123:37" pos:end="123:55">= <expr pos:start="123:39" pos:end="123:55"><call pos:start="123:39" pos:end="123:55"><name pos:start="123:39" pos:end="123:53"><name pos:start="123:39" pos:end="123:44">reader</name><operator pos:start="123:45" pos:end="123:45">.</operator><name pos:start="123:46" pos:end="123:53">readLine</name></name><argument_list pos:start="123:54" pos:end="123:55">()</argument_list></call></expr></init></decl>;</decl_stmt>
			<decl_stmt pos:start="124:25" pos:end="124:80"><decl pos:start="124:25" pos:end="124:79"><type pos:start="124:25" pos:end="124:42"><name pos:start="124:25" pos:end="124:42">AbstractUAVMessage</name></type> <name pos:start="124:44" pos:end="124:46">msg</name> <init pos:start="124:48" pos:end="124:79">= <expr pos:start="124:50" pos:end="124:79"><call pos:start="124:50" pos:end="124:79"><name pos:start="124:50" pos:end="124:73"><name pos:start="124:50" pos:end="124:66">UAVMessageFactory</name><operator pos:start="124:67" pos:end="124:67">.</operator><name pos:start="124:68" pos:end="124:73">create</name></name><argument_list pos:start="124:74" pos:end="124:79">(<argument pos:start="124:75" pos:end="124:78"><expr pos:start="124:75" pos:end="124:78"><name pos:start="124:75" pos:end="124:78">line</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<if_stmt pos:start="125:25" pos:end="128:25"><if pos:start="125:25" pos:end="128:25">if <condition pos:start="125:28" pos:end="125:71">(<expr pos:start="125:29" pos:end="125:70"><operator pos:start="125:29" pos:end="125:29">!</operator><operator pos:start="125:30" pos:end="125:30">(</operator><name pos:start="125:31" pos:end="125:33">msg</name> <operator pos:start="125:35" pos:end="125:44">instanceof</operator> <name pos:start="125:46" pos:end="125:69">ConnectionRequestMessage</name><operator pos:start="125:70" pos:end="125:70">)</operator></expr>)</condition> <block pos:start="125:73" pos:end="128:25">{<block_content pos:start="126:33" pos:end="127:39">
				<expr_stmt pos:start="126:33" pos:end="126:105"><expr pos:start="126:33" pos:end="126:104"><call pos:start="126:33" pos:end="126:104"><name pos:start="126:33" pos:end="126:46"><name pos:start="126:33" pos:end="126:38">LOGGER</name><operator pos:start="126:39" pos:end="126:39">.</operator><name pos:start="126:40" pos:end="126:46">hwFatal</name></name><argument_list pos:start="126:47" pos:end="126:104">(<argument pos:start="126:48" pos:end="126:103"><expr pos:start="126:48" pos:end="126:103"><literal type="string" pos:start="126:48" pos:end="126:96">"Invalid Connection Request from groundstation! "</literal> <operator pos:start="126:98" pos:end="126:98">+</operator> <name pos:start="126:100" pos:end="126:103">line</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<return pos:start="127:33" pos:end="127:39">return;</return>
			</block_content>}</block></if></if_stmt>
			<decl_stmt pos:start="129:25" pos:end="129:58"><decl pos:start="129:25" pos:end="129:57"><type pos:start="129:25" pos:end="129:31"><name pos:start="129:25" pos:end="129:31">boolean</name></type> <name pos:start="129:33" pos:end="129:49">connectionSuccess</name> <init pos:start="129:51" pos:end="129:57">= <expr pos:start="129:53" pos:end="129:57"><literal type="boolean" pos:start="129:53" pos:end="129:57">false</literal></expr></init></decl>;</decl_stmt>
			<try pos:start="130:25" pos:end="137:25">try <block pos:start="130:29" pos:end="135:25">{<block_content pos:start="131:33" pos:end="134:57">
				<expr_stmt pos:start="131:33" pos:end="131:125"><expr pos:start="131:33" pos:end="131:124"><call pos:start="131:33" pos:end="131:67"><name pos:start="131:33" pos:end="131:65"><name pos:start="131:33" pos:end="131:53">DroneConnectorService</name><operator pos:start="131:54" pos:end="131:54">.</operator><name pos:start="131:55" pos:end="131:65">getInstance</name></name><argument_list pos:start="131:66" pos:end="131:67">()</argument_list></call><operator pos:start="131:68" pos:end="131:68">.</operator><call pos:start="131:69" pos:end="131:124"><name pos:start="131:69" pos:end="131:86">registerConnection</name><argument_list pos:start="131:87" pos:end="131:124">(<argument pos:start="131:88" pos:end="131:91"><expr pos:start="131:88" pos:end="131:91"><name pos:start="131:88" pos:end="131:91">this</name></expr></argument>, <argument pos:start="131:94" pos:end="131:123"><expr pos:start="131:94" pos:end="131:123"><operator pos:start="131:94" pos:end="131:94">(</operator><name pos:start="131:95" pos:end="131:118">ConnectionRequestMessage</name><operator pos:start="131:119" pos:end="131:119">)</operator> <name pos:start="131:121" pos:end="131:123">msg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<expr_stmt pos:start="132:33" pos:end="132:70"><expr pos:start="132:33" pos:end="132:69"><name pos:start="132:33" pos:end="132:52"><name pos:start="132:33" pos:end="132:36">this</name><operator pos:start="132:37" pos:end="132:37">.</operator><name pos:start="132:38" pos:end="132:52">groundstationid</name></name> <operator pos:start="132:54" pos:end="132:54">=</operator> <call pos:start="132:56" pos:end="132:69"><name pos:start="132:56" pos:end="132:67"><name pos:start="132:56" pos:end="132:58">msg</name><operator pos:start="132:59" pos:end="132:59">.</operator><name pos:start="132:60" pos:end="132:67">getGCSId</name></name><argument_list pos:start="132:68" pos:end="132:69">()</argument_list></call></expr>;</expr_stmt>
				<expr_stmt pos:start="133:33" pos:end="133:50"><expr pos:start="133:33" pos:end="133:49"><call pos:start="133:33" pos:end="133:49"><name pos:start="133:33" pos:end="133:47">setupConnection</name><argument_list pos:start="133:48" pos:end="133:49">()</argument_list></call></expr>;</expr_stmt>
				<expr_stmt pos:start="134:33" pos:end="134:57"><expr pos:start="134:33" pos:end="134:56"><name pos:start="134:33" pos:end="134:49">connectionSuccess</name> <operator pos:start="134:51" pos:end="134:51">=</operator> <literal type="boolean" pos:start="134:53" pos:end="134:56">true</literal></expr>;</expr_stmt>
			</block_content>}</block> <catch pos:start="135:27" pos:end="137:25">catch <parameter_list pos:start="135:33" pos:end="135:59">(<parameter pos:start="135:34" pos:end="135:58"><decl pos:start="135:34" pos:end="135:58"><type pos:start="135:34" pos:end="135:58"><name pos:start="135:34" pos:end="135:55">GroundStationException</name></type> <name pos:start="135:57" pos:end="135:58">ex</name></decl></parameter>)</parameter_list> <block pos:start="135:61" pos:end="137:25">{<block_content pos:start="136:33" pos:end="136:64">
				<expr_stmt pos:start="136:33" pos:end="136:64"><expr pos:start="136:33" pos:end="136:63"><call pos:start="136:33" pos:end="136:63"><name pos:start="136:33" pos:end="136:46"><name pos:start="136:33" pos:end="136:38">LOGGER</name><operator pos:start="136:39" pos:end="136:39">.</operator><name pos:start="136:40" pos:end="136:46">hwFatal</name></name><argument_list pos:start="136:47" pos:end="136:63">(<argument pos:start="136:48" pos:end="136:62"><expr pos:start="136:48" pos:end="136:62"><call pos:start="136:48" pos:end="136:62"><name pos:start="136:48" pos:end="136:60"><name pos:start="136:48" pos:end="136:49">ex</name><operator pos:start="136:50" pos:end="136:50">.</operator><name pos:start="136:51" pos:end="136:60">getMessage</name></name><argument_list pos:start="136:61" pos:end="136:62">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			</block_content>}</block></catch></try>
			<decl_stmt pos:start="138:25" pos:end="138:117"><decl pos:start="138:25" pos:end="138:116"><type pos:start="138:25" pos:end="138:38"><name pos:start="138:25" pos:end="138:38">BufferedWriter</name></type> <name pos:start="138:40" pos:end="138:45">writer</name> <init pos:start="138:47" pos:end="138:116">= <expr pos:start="138:49" pos:end="138:116"><operator pos:start="138:49" pos:end="138:51">new</operator> <call pos:start="138:53" pos:end="138:116"><name pos:start="138:53" pos:end="138:66">BufferedWriter</name><argument_list pos:start="138:67" pos:end="138:116">(<argument pos:start="138:68" pos:end="138:115"><expr pos:start="138:68" pos:end="138:115"><operator pos:start="138:68" pos:end="138:70">new</operator> <call pos:start="138:72" pos:end="138:115"><name pos:start="138:72" pos:end="138:89">OutputStreamWriter</name><argument_list pos:start="138:90" pos:end="138:115">(<argument pos:start="138:91" pos:end="138:114"><expr pos:start="138:91" pos:end="138:114"><call pos:start="138:91" pos:end="138:114"><name pos:start="138:91" pos:end="138:112"><name pos:start="138:91" pos:end="138:96">socket</name><operator pos:start="138:97" pos:end="138:97">.</operator><name pos:start="138:98" pos:end="138:112">getOutputStream</name></name><argument_list pos:start="138:113" pos:end="138:114">()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<decl_stmt pos:start="139:25" pos:end="139:129"><decl pos:start="139:25" pos:end="139:128"><type pos:start="139:25" pos:end="139:49"><name pos:start="139:25" pos:end="139:49">ConnectionResponseCommand</name></type> <name pos:start="139:51" pos:end="139:60">ackCommand</name> <init pos:start="139:62" pos:end="139:128">= <expr pos:start="139:64" pos:end="139:128"><operator pos:start="139:64" pos:end="139:66">new</operator> <call pos:start="139:68" pos:end="139:128"><name pos:start="139:68" pos:end="139:92">ConnectionResponseCommand</name><argument_list pos:start="139:93" pos:end="139:128">(<argument pos:start="139:94" pos:end="139:108"><expr pos:start="139:94" pos:end="139:108"><name pos:start="139:94" pos:end="139:108">groundstationid</name></expr></argument>, <argument pos:start="139:111" pos:end="139:127"><expr pos:start="139:111" pos:end="139:127"><name pos:start="139:111" pos:end="139:127">connectionSuccess</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<expr_stmt pos:start="140:25" pos:end="140:64"><expr pos:start="140:25" pos:end="140:63"><call pos:start="140:25" pos:end="140:63"><name pos:start="140:25" pos:end="140:36"><name pos:start="140:25" pos:end="140:30">writer</name><operator pos:start="140:31" pos:end="140:31">.</operator><name pos:start="140:32" pos:end="140:36">write</name></name><argument_list pos:start="140:37" pos:end="140:63">(<argument pos:start="140:38" pos:end="140:62"><expr pos:start="140:38" pos:end="140:62"><call pos:start="140:38" pos:end="140:62"><name pos:start="140:38" pos:end="140:60"><name pos:start="140:38" pos:end="140:47">ackCommand</name><operator pos:start="140:48" pos:end="140:48">.</operator><name pos:start="140:49" pos:end="140:60">toJsonString</name></name><argument_list pos:start="140:61" pos:end="140:62">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt pos:start="141:25" pos:end="141:61"><expr pos:start="141:25" pos:end="141:60"><call pos:start="141:25" pos:end="141:60"><name pos:start="141:25" pos:end="141:36"><name pos:start="141:25" pos:end="141:30">writer</name><operator pos:start="141:31" pos:end="141:31">.</operator><name pos:start="141:32" pos:end="141:36">write</name></name><argument_list pos:start="141:37" pos:end="141:60">(<argument pos:start="141:38" pos:end="141:59"><expr pos:start="141:38" pos:end="141:59"><call pos:start="141:38" pos:end="141:59"><name pos:start="141:38" pos:end="141:57"><name pos:start="141:38" pos:end="141:43">System</name><operator pos:start="141:44" pos:end="141:44">.</operator><name pos:start="141:45" pos:end="141:57">lineSeparator</name></name><argument_list pos:start="141:58" pos:end="141:59">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt pos:start="142:25" pos:end="142:39"><expr pos:start="142:25" pos:end="142:38"><call pos:start="142:25" pos:end="142:38"><name pos:start="142:25" pos:end="142:36"><name pos:start="142:25" pos:end="142:30">writer</name><operator pos:start="142:31" pos:end="142:31">.</operator><name pos:start="142:32" pos:end="142:36">flush</name></name><argument_list pos:start="142:37" pos:end="142:38">()</argument_list></call></expr>;</expr_stmt>
		</block_content>}</block> <catch pos:start="143:19" pos:end="146:17">catch <parameter_list pos:start="143:25" pos:end="143:37">(<parameter pos:start="143:26" pos:end="143:36"><decl pos:start="143:26" pos:end="143:36"><type pos:start="143:26" pos:end="143:36"><name pos:start="143:26" pos:end="143:34">Exception</name></type> <name pos:start="143:36" pos:end="143:36">e</name></decl></parameter>)</parameter_list> <block pos:start="143:39" pos:end="146:17">{<block_content pos:start="144:25" pos:end="145:112">
			<expr_stmt pos:start="144:25" pos:end="144:44"><expr pos:start="144:25" pos:end="144:43"><call pos:start="144:25" pos:end="144:43"><name pos:start="144:25" pos:end="144:41"><name pos:start="144:25" pos:end="144:25">e</name><operator pos:start="144:26" pos:end="144:26">.</operator><name pos:start="144:27" pos:end="144:41">printStackTrace</name></name><argument_list pos:start="144:42" pos:end="144:43">()</argument_list></call></expr>;</expr_stmt>
			<expr_stmt pos:start="145:25" pos:end="145:112"><expr pos:start="145:25" pos:end="145:111"><call pos:start="145:25" pos:end="145:111"><name pos:start="145:25" pos:end="145:38"><name pos:start="145:25" pos:end="145:30">LOGGER</name><operator pos:start="145:31" pos:end="145:31">.</operator><name pos:start="145:32" pos:end="145:38">hwFatal</name></name><argument_list pos:start="145:39" pos:end="145:111">(<argument pos:start="145:40" pos:end="145:110"><expr pos:start="145:40" pos:end="145:110"><literal type="string" pos:start="145:40" pos:end="145:93">"Error when establishing connection to groundstation "</literal> <operator pos:start="145:95" pos:end="145:95">+</operator> <call pos:start="145:97" pos:end="145:110"><name pos:start="145:97" pos:end="145:108"><name pos:start="145:97" pos:end="145:97">e</name><operator pos:start="145:98" pos:end="145:98">.</operator><name pos:start="145:99" pos:end="145:108">getMessage</name></name><argument_list pos:start="145:109" pos:end="145:110">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		</block_content>}</block></catch></try>

	</block_content>}</block></function>

	<function pos:start="150:9" pos:end="163:9"><type pos:start="150:9" pos:end="150:20"><specifier pos:start="150:9" pos:end="150:15">private</specifier> <name pos:start="150:17" pos:end="150:20">void</name></type> <name pos:start="150:22" pos:end="150:36">setupConnection</name><parameter_list pos:start="150:37" pos:end="150:38">()</parameter_list> <block pos:start="150:40" pos:end="163:9">{<block_content pos:start="151:17" pos:end="162:17">
		<try pos:start="151:17" pos:end="162:17">try <block pos:start="151:21" pos:end="160:17">{<block_content pos:start="152:25" pos:end="159:41">
			<expr_stmt pos:start="152:25" pos:end="152:89"><expr pos:start="152:25" pos:end="152:88"><name pos:start="152:25" pos:end="152:44">dispatchQueueManager</name> <operator pos:start="152:46" pos:end="152:46">=</operator> <operator pos:start="152:48" pos:end="152:50">new</operator> <call pos:start="152:52" pos:end="152:88"><name pos:start="152:52" pos:end="152:71">DispatchQueueManager</name><argument_list pos:start="152:72" pos:end="152:88">(<argument pos:start="152:73" pos:end="152:87"><expr pos:start="152:73" pos:end="152:87"><name pos:start="152:73" pos:end="152:87">groundstationid</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

			<expr_stmt pos:start="154:25" pos:end="154:90"><expr pos:start="154:25" pos:end="154:89"><name pos:start="154:25" pos:end="154:38">readDispatcher</name> <operator pos:start="154:40" pos:end="154:40">=</operator> <operator pos:start="154:42" pos:end="154:44">new</operator> <call pos:start="154:46" pos:end="154:89"><name pos:start="154:46" pos:end="154:59">ReadDispatcher</name><argument_list pos:start="154:60" pos:end="154:89">(<argument pos:start="154:61" pos:end="154:66"><expr pos:start="154:61" pos:end="154:66"><name pos:start="154:61" pos:end="154:66">socket</name></expr></argument>, <argument pos:start="154:69" pos:end="154:88"><expr pos:start="154:69" pos:end="154:88"><name pos:start="154:69" pos:end="154:88">dispatchQueueManager</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt pos:start="155:25" pos:end="155:118"><expr pos:start="155:25" pos:end="155:117"><name pos:start="155:25" pos:end="155:39">writeDispatcher</name> <operator pos:start="155:41" pos:end="155:41">=</operator> <operator pos:start="155:43" pos:end="155:45">new</operator> <call pos:start="155:47" pos:end="155:117"><name pos:start="155:47" pos:end="155:61">WriteDispatcher</name><argument_list pos:start="155:62" pos:end="155:117">(<argument pos:start="155:63" pos:end="155:68"><expr pos:start="155:63" pos:end="155:68"><name pos:start="155:63" pos:end="155:68">socket</name></expr></argument>, <argument pos:start="155:71" pos:end="155:116"><expr pos:start="155:71" pos:end="155:116"><call pos:start="155:71" pos:end="155:116"><name pos:start="155:71" pos:end="155:114"><name pos:start="155:71" pos:end="155:90">dispatchQueueManager</name><operator pos:start="155:91" pos:end="155:91">.</operator><name pos:start="155:92" pos:end="155:114">getOutgoingCommandQueue</name></name><argument_list pos:start="155:115" pos:end="155:116">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt pos:start="156:25" pos:end="156:56"><expr pos:start="156:25" pos:end="156:55"><call pos:start="156:25" pos:end="156:55"><name pos:start="156:25" pos:end="156:39"><name pos:start="156:25" pos:end="156:32">EXECUTOR</name><operator pos:start="156:33" pos:end="156:33">.</operator><name pos:start="156:34" pos:end="156:39">submit</name></name><argument_list pos:start="156:40" pos:end="156:55">(<argument pos:start="156:41" pos:end="156:54"><expr pos:start="156:41" pos:end="156:54"><name pos:start="156:41" pos:end="156:54">readDispatcher</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt pos:start="157:25" pos:end="157:57"><expr pos:start="157:25" pos:end="157:56"><call pos:start="157:25" pos:end="157:56"><name pos:start="157:25" pos:end="157:39"><name pos:start="157:25" pos:end="157:32">EXECUTOR</name><operator pos:start="157:33" pos:end="157:33">.</operator><name pos:start="157:34" pos:end="157:39">submit</name></name><argument_list pos:start="157:40" pos:end="157:56">(<argument pos:start="157:41" pos:end="157:55"><expr pos:start="157:41" pos:end="157:55"><name pos:start="157:41" pos:end="157:55">writeDispatcher</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt pos:start="158:25" pos:end="158:85"><expr pos:start="158:25" pos:end="158:84"><call pos:start="158:25" pos:end="158:55"><name pos:start="158:25" pos:end="158:53"><name pos:start="158:25" pos:end="158:41">RuntimeDroneTypes</name><operator pos:start="158:42" pos:end="158:42">.</operator><name pos:start="158:43" pos:end="158:53">getInstance</name></name><argument_list pos:start="158:54" pos:end="158:55">()</argument_list></call><operator pos:start="158:56" pos:end="158:56">.</operator><call pos:start="158:57" pos:end="158:84"><name pos:start="158:57" pos:end="158:78">registerCommandHandler</name><argument_list pos:start="158:79" pos:end="158:84">(<argument pos:start="158:80" pos:end="158:83"><expr pos:start="158:80" pos:end="158:83"><name pos:start="158:80" pos:end="158:83">this</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt pos:start="159:25" pos:end="159:41"><expr pos:start="159:25" pos:end="159:40"><name pos:start="159:25" pos:end="159:33">connected</name> <operator pos:start="159:35" pos:end="159:35">=</operator> <literal type="boolean" pos:start="159:37" pos:end="159:40">true</literal></expr>;</expr_stmt>
		</block_content>}</block> <catch pos:start="160:19" pos:end="162:17">catch <parameter_list pos:start="160:25" pos:end="160:37">(<parameter pos:start="160:26" pos:end="160:36"><decl pos:start="160:26" pos:end="160:36"><type pos:start="160:26" pos:end="160:36"><name pos:start="160:26" pos:end="160:34">Throwable</name></type> <name pos:start="160:36" pos:end="160:36">e</name></decl></parameter>)</parameter_list> <block pos:start="160:39" pos:end="162:17">{<block_content pos:start="161:25" pos:end="161:98">
			<expr_stmt pos:start="161:25" pos:end="161:98"><expr pos:start="161:25" pos:end="161:97"><call pos:start="161:25" pos:end="161:97"><name pos:start="161:25" pos:end="161:38"><name pos:start="161:25" pos:end="161:30">LOGGER</name><operator pos:start="161:31" pos:end="161:31">.</operator><name pos:start="161:32" pos:end="161:38">hwFatal</name></name><argument_list pos:start="161:39" pos:end="161:97">(<argument pos:start="161:40" pos:end="161:96"><expr pos:start="161:40" pos:end="161:96"><literal type="string" pos:start="161:40" pos:end="161:79">"Can't connect to Python Groundstation "</literal> <operator pos:start="161:81" pos:end="161:81">+</operator> <call pos:start="161:83" pos:end="161:96"><name pos:start="161:83" pos:end="161:94"><name pos:start="161:83" pos:end="161:83">e</name><operator pos:start="161:84" pos:end="161:84">.</operator><name pos:start="161:85" pos:end="161:94">getMessage</name></name><argument_list pos:start="161:95" pos:end="161:96">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		</block_content>}</block></catch></try>
	</block_content>}</block></function>

	<function pos:start="165:9" pos:end="168:9"><type pos:start="165:9" pos:end="165:20"><specifier pos:start="165:9" pos:end="165:15">private</specifier> <name pos:start="165:17" pos:end="165:20">void</name></type> <name pos:start="165:22" pos:end="165:38">scheduleReconnect</name><parameter_list pos:start="165:39" pos:end="165:40">()</parameter_list> <block pos:start="165:42" pos:end="168:9">{<block_content>
		<comment type="line" pos:start="166:17" pos:end="166:50">// TODO Auto-generated method stub</comment>

	</block_content>}</block></function>

}</block></class>
</unit>
