<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="Java" filename="src/PlanPoolManager.java" pos:tabs="8"><package pos:start="1:1" pos:end="1:37">package <name pos:start="1:9" pos:end="1:36"><name pos:start="1:9" pos:end="1:11">edu</name><operator pos:start="1:12" pos:end="1:12">.</operator><name pos:start="1:13" pos:end="1:14">nd</name><operator pos:start="1:15" pos:end="1:15">.</operator><name pos:start="1:16" pos:end="1:24">dronology</name><operator pos:start="1:25" pos:end="1:25">.</operator><name pos:start="1:26" pos:end="1:29">core</name><operator pos:start="1:30" pos:end="1:30">.</operator><name pos:start="1:31" pos:end="1:36">flight</name></name>;</package>

<import pos:start="3:1" pos:end="3:27">import <name pos:start="3:8" pos:end="3:26"><name pos:start="3:8" pos:end="3:11">java</name><operator pos:start="3:12" pos:end="3:12">.</operator><name pos:start="3:13" pos:end="3:16">util</name><operator pos:start="3:17" pos:end="3:17">.</operator><name pos:start="3:18" pos:end="3:26">ArrayList</name></name>;</import>
<import pos:start="4:1" pos:end="4:29">import <name pos:start="4:8" pos:end="4:28"><name pos:start="4:8" pos:end="4:11">java</name><operator pos:start="4:12" pos:end="4:12">.</operator><name pos:start="4:13" pos:end="4:16">util</name><operator pos:start="4:17" pos:end="4:17">.</operator><name pos:start="4:18" pos:end="4:28">Collections</name></name>;</import>
<import pos:start="5:1" pos:end="5:22">import <name pos:start="5:8" pos:end="5:21"><name pos:start="5:8" pos:end="5:11">java</name><operator pos:start="5:12" pos:end="5:12">.</operator><name pos:start="5:13" pos:end="5:16">util</name><operator pos:start="5:17" pos:end="5:17">.</operator><name pos:start="5:18" pos:end="5:21">List</name></name>;</import>
<import pos:start="6:1" pos:end="6:21">import <name pos:start="6:8" pos:end="6:20"><name pos:start="6:8" pos:end="6:11">java</name><operator pos:start="6:12" pos:end="6:12">.</operator><name pos:start="6:13" pos:end="6:16">util</name><operator pos:start="6:17" pos:end="6:17">.</operator><name pos:start="6:18" pos:end="6:20">Map</name></name>;</import>
<import pos:start="7:1" pos:end="7:46">import <name pos:start="7:8" pos:end="7:45"><name pos:start="7:8" pos:end="7:11">java</name><operator pos:start="7:12" pos:end="7:12">.</operator><name pos:start="7:13" pos:end="7:16">util</name><operator pos:start="7:17" pos:end="7:17">.</operator><name pos:start="7:18" pos:end="7:27">concurrent</name><operator pos:start="7:28" pos:end="7:28">.</operator><name pos:start="7:29" pos:end="7:45">ConcurrentHashMap</name></name>;</import>

<import pos:start="9:1" pos:end="9:55">import <name pos:start="9:8" pos:end="9:54"><name pos:start="9:8" pos:end="9:10">edu</name><operator pos:start="9:11" pos:end="9:11">.</operator><name pos:start="9:12" pos:end="9:13">nd</name><operator pos:start="9:14" pos:end="9:14">.</operator><name pos:start="9:15" pos:end="9:23">dronology</name><operator pos:start="9:24" pos:end="9:24">.</operator><name pos:start="9:25" pos:end="9:28">core</name><operator pos:start="9:29" pos:end="9:29">.</operator><name pos:start="9:30" pos:end="9:39">exceptions</name><operator pos:start="9:40" pos:end="9:40">.</operator><name pos:start="9:41" pos:end="9:54">DroneException</name></name>;</import>
<import pos:start="10:1" pos:end="10:67">import <name pos:start="10:8" pos:end="10:66"><name pos:start="10:8" pos:end="10:10">edu</name><operator pos:start="10:11" pos:end="10:11">.</operator><name pos:start="10:12" pos:end="10:13">nd</name><operator pos:start="10:14" pos:end="10:14">.</operator><name pos:start="10:15" pos:end="10:23">dronology</name><operator pos:start="10:24" pos:end="10:24">.</operator><name pos:start="10:25" pos:end="10:28">core</name><operator pos:start="10:29" pos:end="10:29">.</operator><name pos:start="10:30" pos:end="10:39">monitoring</name><operator pos:start="10:40" pos:end="10:40">.</operator><name pos:start="10:41" pos:end="10:66">DronologyMonitoringManager</name></name>;</import>
<import pos:start="11:1" pos:end="11:58">import <name pos:start="11:8" pos:end="11:57"><name pos:start="11:8" pos:end="11:10">edu</name><operator pos:start="11:11" pos:end="11:11">.</operator><name pos:start="11:12" pos:end="11:13">nd</name><operator pos:start="11:14" pos:end="11:14">.</operator><name pos:start="11:15" pos:end="11:23">dronology</name><operator pos:start="11:24" pos:end="11:24">.</operator><name pos:start="11:25" pos:end="11:28">core</name><operator pos:start="11:29" pos:end="11:29">.</operator><name pos:start="11:30" pos:end="11:39">monitoring</name><operator pos:start="11:40" pos:end="11:40">.</operator><name pos:start="11:41" pos:end="11:57">MessageMarshaller</name></name>;</import>
<import pos:start="12:1" pos:end="12:30">import <name pos:start="12:8" pos:end="12:29"><name pos:start="12:8" pos:end="12:10">net</name><operator pos:start="12:11" pos:end="12:11">.</operator><name pos:start="12:12" pos:end="12:13">mv</name><operator pos:start="12:14" pos:end="12:14">.</operator><name pos:start="12:15" pos:end="12:21">logging</name><operator pos:start="12:22" pos:end="12:22">.</operator><name pos:start="12:23" pos:end="12:29">ILogger</name></name>;</import>
<import pos:start="13:1" pos:end="13:37">import <name pos:start="13:8" pos:end="13:36"><name pos:start="13:8" pos:end="13:10">net</name><operator pos:start="13:11" pos:end="13:11">.</operator><name pos:start="13:12" pos:end="13:13">mv</name><operator pos:start="13:14" pos:end="13:14">.</operator><name pos:start="13:15" pos:end="13:21">logging</name><operator pos:start="13:22" pos:end="13:22">.</operator><name pos:start="13:23" pos:end="13:36">LoggerProvider</name></name>;</import>

<comment type="block" format="javadoc" pos:start="15:1" pos:end="21:3">/**
 * Management of pending plans for individual UAVs.&lt;br&gt;
 * Each active UAV has a {@link PlanPool} that keeps track of the assigned (and pending) flight plans.
 * 
 * @author Michael Vierhauser
 *
 */</comment>
<class pos:start="22:1" pos:end="186:1"><specifier pos:start="22:1" pos:end="22:6">public</specifier> class <name pos:start="22:14" pos:end="22:28">PlanPoolManager</name> <block pos:start="22:30" pos:end="186:1">{

	<decl_stmt pos:start="24:9" pos:end="24:64"><decl pos:start="24:9" pos:end="24:63"><type pos:start="24:9" pos:end="24:47"><specifier pos:start="24:9" pos:end="24:15">private</specifier> <specifier pos:start="24:17" pos:end="24:22">static</specifier> <specifier pos:start="24:24" pos:end="24:31">volatile</specifier> <name pos:start="24:33" pos:end="24:47">PlanPoolManager</name></type> <name pos:start="24:49" pos:end="24:56">INSTANCE</name> <init pos:start="24:58" pos:end="24:63">= <expr pos:start="24:60" pos:end="24:63"><literal type="null" pos:start="24:60" pos:end="24:63">null</literal></expr></init></decl>;</decl_stmt>

	<decl_stmt pos:start="26:9" pos:end="26:94"><decl pos:start="26:9" pos:end="26:93"><type pos:start="26:9" pos:end="26:36"><specifier pos:start="26:9" pos:end="26:15">private</specifier> <specifier pos:start="26:17" pos:end="26:22">static</specifier> <specifier pos:start="26:24" pos:end="26:28">final</specifier> <name pos:start="26:30" pos:end="26:36">ILogger</name></type> <name pos:start="26:38" pos:end="26:43">LOGGER</name> <init pos:start="26:45" pos:end="26:93">= <expr pos:start="26:47" pos:end="26:93"><call pos:start="26:47" pos:end="26:93"><name pos:start="26:47" pos:end="26:70"><name pos:start="26:47" pos:end="26:60">LoggerProvider</name><operator pos:start="26:61" pos:end="26:61">.</operator><name pos:start="26:62" pos:end="26:70">getLogger</name></name><argument_list pos:start="26:71" pos:end="26:93">(<argument pos:start="26:72" pos:end="26:92"><expr pos:start="26:72" pos:end="26:92"><name pos:start="26:72" pos:end="26:92"><name pos:start="26:72" pos:end="26:86">PlanPoolManager</name><operator pos:start="26:87" pos:end="26:87">.</operator><name pos:start="26:88" pos:end="26:92">class</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

	<decl_stmt pos:start="28:9" pos:end="28:75"><decl pos:start="28:9" pos:end="28:74"><type pos:start="28:9" pos:end="28:37"><specifier pos:start="28:9" pos:end="28:15">private</specifier> <name pos:start="28:17" pos:end="28:37"><name pos:start="28:17" pos:end="28:19">Map</name><argument_list type="generic" pos:start="28:20" pos:end="28:37">&lt;<argument pos:start="28:21" pos:end="28:26"><name pos:start="28:21" pos:end="28:26">String</name></argument>, <argument pos:start="28:29" pos:end="28:36"><name pos:start="28:29" pos:end="28:36">PlanPool</name></argument>&gt;</argument_list></name></type> <name pos:start="28:39" pos:end="28:46">planList</name> <init pos:start="28:48" pos:end="28:74">= <expr pos:start="28:50" pos:end="28:74"><operator pos:start="28:50" pos:end="28:52">new</operator> <call pos:start="28:54" pos:end="28:74"><name pos:start="28:54" pos:end="28:72"><name pos:start="28:54" pos:end="28:70">ConcurrentHashMap</name><argument_list type="generic" pos:start="28:71" pos:end="28:72">&lt;&gt;</argument_list></name><argument_list pos:start="28:73" pos:end="28:74">()</argument_list></call></expr></init></decl>;</decl_stmt>

	<decl_stmt pos:start="30:9" pos:end="30:97"><decl pos:start="30:9" pos:end="30:96"><type pos:start="30:9" pos:end="30:33"><specifier pos:start="30:9" pos:end="30:15">private</specifier> <name pos:start="30:17" pos:end="30:33"><name pos:start="30:17" pos:end="30:20">List</name><argument_list type="generic" pos:start="30:21" pos:end="30:33">&lt;<argument pos:start="30:22" pos:end="30:32"><name pos:start="30:22" pos:end="30:32">IFlightPlan</name></argument>&gt;</argument_list></name></type> <name pos:start="30:35" pos:end="30:46">pendingPlans</name> <init pos:start="30:48" pos:end="30:96">= <expr pos:start="30:50" pos:end="30:96"><call pos:start="30:50" pos:end="30:96"><name pos:start="30:50" pos:end="30:77"><name pos:start="30:50" pos:end="30:60">Collections</name><operator pos:start="30:61" pos:end="30:61">.</operator><name pos:start="30:62" pos:end="30:77">synchronizedList</name></name><argument_list pos:start="30:78" pos:end="30:96">(<argument pos:start="30:79" pos:end="30:95"><expr pos:start="30:79" pos:end="30:95"><operator pos:start="30:79" pos:end="30:81">new</operator> <call pos:start="30:83" pos:end="30:95"><name pos:start="30:83" pos:end="30:93"><name pos:start="30:83" pos:end="30:91">ArrayList</name><argument_list type="generic" pos:start="30:92" pos:end="30:93">&lt;&gt;</argument_list></name><argument_list pos:start="30:94" pos:end="30:95">()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

	<decl_stmt pos:start="32:9" pos:end="32:123"><decl pos:start="32:9" pos:end="32:122"><type pos:start="32:9" pos:end="32:47"><specifier pos:start="32:9" pos:end="32:15">private</specifier> <name pos:start="32:17" pos:end="32:47"><name pos:start="32:17" pos:end="32:20">List</name><argument_list type="generic" pos:start="32:21" pos:end="32:47">&lt;<argument pos:start="32:22" pos:end="32:46"><name pos:start="32:22" pos:end="32:46">IPlanStatusChangeListener</name></argument>&gt;</argument_list></name></type> <name pos:start="32:49" pos:end="32:72">planStatusChangeListener</name> <init pos:start="32:74" pos:end="32:122">= <expr pos:start="32:76" pos:end="32:122"><call pos:start="32:76" pos:end="32:122"><name pos:start="32:76" pos:end="32:103"><name pos:start="32:76" pos:end="32:86">Collections</name><operator pos:start="32:87" pos:end="32:87">.</operator><name pos:start="32:88" pos:end="32:103">synchronizedList</name></name><argument_list pos:start="32:104" pos:end="32:122">(<argument pos:start="32:105" pos:end="32:121"><expr pos:start="32:105" pos:end="32:121"><operator pos:start="32:105" pos:end="32:107">new</operator> <call pos:start="32:109" pos:end="32:121"><name pos:start="32:109" pos:end="32:119"><name pos:start="32:109" pos:end="32:117">ArrayList</name><argument_list type="generic" pos:start="32:118" pos:end="32:119">&lt;&gt;</argument_list></name><argument_list pos:start="32:120" pos:end="32:121">()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

	<function pos:start="34:9" pos:end="43:9"><type pos:start="34:9" pos:end="34:37"><specifier pos:start="34:9" pos:end="34:14">public</specifier> <specifier pos:start="34:16" pos:end="34:21">static</specifier> <name pos:start="34:23" pos:end="34:37">PlanPoolManager</name></type> <name pos:start="34:39" pos:end="34:49">getInstance</name><parameter_list pos:start="34:50" pos:end="34:51">()</parameter_list> <block pos:start="34:53" pos:end="43:9">{<block_content pos:start="35:17" pos:end="42:32">
		<if_stmt pos:start="35:17" pos:end="41:17"><if pos:start="35:17" pos:end="41:17">if <condition pos:start="35:20" pos:end="35:37">(<expr pos:start="35:21" pos:end="35:36"><name pos:start="35:21" pos:end="35:28">INSTANCE</name> <operator pos:start="35:30" pos:end="35:31">==</operator> <literal type="null" pos:start="35:33" pos:end="35:36">null</literal></expr>)</condition> <block pos:start="35:39" pos:end="41:17">{<block_content pos:start="36:25" pos:end="40:25">
			<synchronized pos:start="36:25" pos:end="40:25">synchronized <init pos:start="36:38" pos:end="36:60">(<expr pos:start="36:39" pos:end="36:59"><name pos:start="36:39" pos:end="36:59"><name pos:start="36:39" pos:end="36:53">PlanPoolManager</name><operator pos:start="36:54" pos:end="36:54">.</operator><name pos:start="36:55" pos:end="36:59">class</name></name></expr>)</init> <block pos:start="36:62" pos:end="40:25">{<block_content pos:start="37:33" pos:end="39:33">
				<if_stmt pos:start="37:33" pos:end="39:33"><if pos:start="37:33" pos:end="39:33">if <condition pos:start="37:36" pos:end="37:53">(<expr pos:start="37:37" pos:end="37:52"><name pos:start="37:37" pos:end="37:44">INSTANCE</name> <operator pos:start="37:46" pos:end="37:47">==</operator> <literal type="null" pos:start="37:49" pos:end="37:52">null</literal></expr>)</condition> <block pos:start="37:55" pos:end="39:33">{<block_content pos:start="38:41" pos:end="38:73">
					<expr_stmt pos:start="38:41" pos:end="38:73"><expr pos:start="38:41" pos:end="38:72"><name pos:start="38:41" pos:end="38:48">INSTANCE</name> <operator pos:start="38:50" pos:end="38:50">=</operator> <operator pos:start="38:52" pos:end="38:54">new</operator> <call pos:start="38:56" pos:end="38:72"><name pos:start="38:56" pos:end="38:70">PlanPoolManager</name><argument_list pos:start="38:71" pos:end="38:72">()</argument_list></call></expr>;</expr_stmt>
				</block_content>}</block></if></if_stmt>
			</block_content>}</block></synchronized>
		</block_content>}</block></if></if_stmt>
		<return pos:start="42:17" pos:end="42:32">return <expr pos:start="42:24" pos:end="42:31"><name pos:start="42:24" pos:end="42:31">INSTANCE</name></expr>;</return>
	</block_content>}</block></function>

	<function pos:start="45:9" pos:end="52:9"><type pos:start="45:9" pos:end="45:19"><specifier pos:start="45:9" pos:end="45:14">public</specifier> <name pos:start="45:16" pos:end="45:19">void</name></type> <name pos:start="45:21" pos:end="45:30">addNewPlan</name><parameter_list pos:start="45:31" pos:end="45:48">(<parameter pos:start="45:32" pos:end="45:47"><decl pos:start="45:32" pos:end="45:47"><type pos:start="45:32" pos:end="45:42"><name pos:start="45:32" pos:end="45:42">IFlightPlan</name></type> <name pos:start="45:44" pos:end="45:47">plan</name></decl></parameter>)</parameter_list> <throws pos:start="45:50" pos:end="45:70">throws <argument pos:start="45:57" pos:end="45:70"><expr pos:start="45:57" pos:end="45:70"><name pos:start="45:57" pos:end="45:70">DroneException</name></expr></argument></throws> <block pos:start="45:72" pos:end="52:9">{<block_content pos:start="46:17" pos:end="51:17">
		<decl_stmt pos:start="46:17" pos:end="46:59"><decl pos:start="46:17" pos:end="46:58"><type pos:start="46:17" pos:end="46:22"><name pos:start="46:17" pos:end="46:22">String</name></type> <name pos:start="46:24" pos:end="46:28">uavId</name> <init pos:start="46:30" pos:end="46:58">= <expr pos:start="46:32" pos:end="46:58"><call pos:start="46:32" pos:end="46:58"><name pos:start="46:32" pos:end="46:56"><name pos:start="46:32" pos:end="46:35">plan</name><operator pos:start="46:36" pos:end="46:36">.</operator><name pos:start="46:37" pos:end="46:56">getDesignatedDroneId</name></name><argument_list pos:start="46:57" pos:end="46:58">()</argument_list></call></expr></init></decl>;</decl_stmt>
		<if_stmt pos:start="47:17" pos:end="51:17"><if pos:start="47:17" pos:end="49:17">if <condition pos:start="47:20" pos:end="47:34">(<expr pos:start="47:21" pos:end="47:33"><name pos:start="47:21" pos:end="47:25">uavId</name> <operator pos:start="47:27" pos:end="47:28">==</operator> <literal type="null" pos:start="47:30" pos:end="47:33">null</literal></expr>)</condition> <block pos:start="47:36" pos:end="49:17">{<block_content pos:start="48:25" pos:end="48:41">
			<expr_stmt pos:start="48:25" pos:end="48:41"><expr pos:start="48:25" pos:end="48:40"><call pos:start="48:25" pos:end="48:40"><name pos:start="48:25" pos:end="48:34">assignPlan</name><argument_list pos:start="48:35" pos:end="48:40">(<argument pos:start="48:36" pos:end="48:39"><expr pos:start="48:36" pos:end="48:39"><name pos:start="48:36" pos:end="48:39">plan</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		</block_content>}</block></if> <else pos:start="49:19" pos:end="51:17">else <block pos:start="49:24" pos:end="51:17">{<block_content pos:start="50:25" pos:end="50:50">
			<expr_stmt pos:start="50:25" pos:end="50:50"><expr pos:start="50:25" pos:end="50:49"><call pos:start="50:25" pos:end="50:49"><name pos:start="50:25" pos:end="50:36">assignToPool</name><argument_list pos:start="50:37" pos:end="50:49">(<argument pos:start="50:38" pos:end="50:42"><expr pos:start="50:38" pos:end="50:42"><name pos:start="50:38" pos:end="50:42">uavId</name></expr></argument>, <argument pos:start="50:45" pos:end="50:48"><expr pos:start="50:45" pos:end="50:48"><name pos:start="50:45" pos:end="50:48">plan</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		</block_content>}</block></else></if_stmt>
	</block_content>}</block></function>

	<function pos:start="54:9" pos:end="57:9"><type pos:start="54:9" pos:end="54:20"><specifier pos:start="54:9" pos:end="54:15">private</specifier> <name pos:start="54:17" pos:end="54:20">void</name></type> <name pos:start="54:22" pos:end="54:31">assignPlan</name><parameter_list pos:start="54:32" pos:end="54:49">(<parameter pos:start="54:33" pos:end="54:48"><decl pos:start="54:33" pos:end="54:48"><type pos:start="54:33" pos:end="54:43"><name pos:start="54:33" pos:end="54:43">IFlightPlan</name></type> <name pos:start="54:45" pos:end="54:48">plan</name></decl></parameter>)</parameter_list> <throws pos:start="54:51" pos:end="54:71">throws <argument pos:start="54:58" pos:end="54:71"><expr pos:start="54:58" pos:end="54:71"><name pos:start="54:58" pos:end="54:71">DroneException</name></expr></argument></throws> <block pos:start="54:73" pos:end="57:9">{<block_content pos:start="55:17" pos:end="55:39">
		<expr_stmt pos:start="55:17" pos:end="55:39"><expr pos:start="55:17" pos:end="55:38"><call pos:start="55:17" pos:end="55:38"><name pos:start="55:17" pos:end="55:32"><name pos:start="55:17" pos:end="55:28">pendingPlans</name><operator pos:start="55:29" pos:end="55:29">.</operator><name pos:start="55:30" pos:end="55:32">add</name></name><argument_list pos:start="55:33" pos:end="55:38">(<argument pos:start="55:34" pos:end="55:37"><expr pos:start="55:34" pos:end="55:37"><name pos:start="55:34" pos:end="55:37">plan</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	</block_content>}</block></function>

	<function pos:start="59:9" pos:end="69:9"><type pos:start="59:9" pos:end="59:20"><specifier pos:start="59:9" pos:end="59:15">private</specifier> <name pos:start="59:17" pos:end="59:20">void</name></type> <name pos:start="59:22" pos:end="59:33">assignToPool</name><parameter_list pos:start="59:34" pos:end="59:65">(<parameter pos:start="59:35" pos:end="59:46"><decl pos:start="59:35" pos:end="59:46"><type pos:start="59:35" pos:end="59:46"><name pos:start="59:35" pos:end="59:40">String</name></type> <name pos:start="59:42" pos:end="59:46">uavId</name></decl></parameter>, <parameter pos:start="59:49" pos:end="59:64"><decl pos:start="59:49" pos:end="59:64"><type pos:start="59:49" pos:end="59:64"><name pos:start="59:49" pos:end="59:59">IFlightPlan</name></type> <name pos:start="59:61" pos:end="59:64">plan</name></decl></parameter>)</parameter_list> <block pos:start="59:67" pos:end="69:9">{<block_content pos:start="60:17" pos:end="68:39">
		<decl_stmt pos:start="60:17" pos:end="60:35"><decl pos:start="60:17" pos:end="60:34"><type pos:start="60:17" pos:end="60:24"><name pos:start="60:17" pos:end="60:24">PlanPool</name></type> <name pos:start="60:26" pos:end="60:27">pp</name> <init pos:start="60:29" pos:end="60:34">= <expr pos:start="60:31" pos:end="60:34"><literal type="null" pos:start="60:31" pos:end="60:34">null</literal></expr></init></decl>;</decl_stmt>
		<if_stmt pos:start="61:17" pos:end="66:17"><if pos:start="61:17" pos:end="64:17">if <condition pos:start="61:20" pos:end="61:48">(<expr pos:start="61:21" pos:end="61:47"><call pos:start="61:21" pos:end="61:39"><name pos:start="61:21" pos:end="61:32"><name pos:start="61:21" pos:end="61:28">planList</name><operator pos:start="61:29" pos:end="61:29">.</operator><name pos:start="61:30" pos:end="61:32">get</name></name><argument_list pos:start="61:33" pos:end="61:39">(<argument pos:start="61:34" pos:end="61:38"><expr pos:start="61:34" pos:end="61:38"><name pos:start="61:34" pos:end="61:38">uavId</name></expr></argument>)</argument_list></call> <operator pos:start="61:41" pos:end="61:42">==</operator> <literal type="null" pos:start="61:44" pos:end="61:47">null</literal></expr>)</condition> <block pos:start="61:50" pos:end="64:17">{<block_content pos:start="62:25" pos:end="63:48">
			<expr_stmt pos:start="62:25" pos:end="62:49"><expr pos:start="62:25" pos:end="62:48"><name pos:start="62:25" pos:end="62:26">pp</name> <operator pos:start="62:28" pos:end="62:28">=</operator> <operator pos:start="62:30" pos:end="62:32">new</operator> <call pos:start="62:34" pos:end="62:48"><name pos:start="62:34" pos:end="62:41">PlanPool</name><argument_list pos:start="62:42" pos:end="62:48">(<argument pos:start="62:43" pos:end="62:47"><expr pos:start="62:43" pos:end="62:47"><name pos:start="62:43" pos:end="62:47">uavId</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt pos:start="63:25" pos:end="63:48"><expr pos:start="63:25" pos:end="63:47"><call pos:start="63:25" pos:end="63:47"><name pos:start="63:25" pos:end="63:36"><name pos:start="63:25" pos:end="63:32">planList</name><operator pos:start="63:33" pos:end="63:33">.</operator><name pos:start="63:34" pos:end="63:36">put</name></name><argument_list pos:start="63:37" pos:end="63:47">(<argument pos:start="63:38" pos:end="63:42"><expr pos:start="63:38" pos:end="63:42"><name pos:start="63:38" pos:end="63:42">uavId</name></expr></argument>, <argument pos:start="63:45" pos:end="63:46"><expr pos:start="63:45" pos:end="63:46"><name pos:start="63:45" pos:end="63:46">pp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		</block_content>}</block></if> <else pos:start="64:19" pos:end="66:17">else <block pos:start="64:24" pos:end="66:17">{<block_content pos:start="65:25" pos:end="65:49">
			<expr_stmt pos:start="65:25" pos:end="65:49"><expr pos:start="65:25" pos:end="65:48"><name pos:start="65:25" pos:end="65:26">pp</name> <operator pos:start="65:28" pos:end="65:28">=</operator> <call pos:start="65:30" pos:end="65:48"><name pos:start="65:30" pos:end="65:41"><name pos:start="65:30" pos:end="65:37">planList</name><operator pos:start="65:38" pos:end="65:38">.</operator><name pos:start="65:39" pos:end="65:41">get</name></name><argument_list pos:start="65:42" pos:end="65:48">(<argument pos:start="65:43" pos:end="65:47"><expr pos:start="65:43" pos:end="65:47"><name pos:start="65:43" pos:end="65:47">uavId</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		</block_content>}</block></else></if_stmt>
		<expr_stmt pos:start="67:17" pos:end="67:33"><expr pos:start="67:17" pos:end="67:32"><call pos:start="67:17" pos:end="67:32"><name pos:start="67:17" pos:end="67:26"><name pos:start="67:17" pos:end="67:18">pp</name><operator pos:start="67:19" pos:end="67:19">.</operator><name pos:start="67:20" pos:end="67:26">addPlan</name></name><argument_list pos:start="67:27" pos:end="67:32">(<argument pos:start="67:28" pos:end="67:31"><expr pos:start="67:28" pos:end="67:31"><name pos:start="67:28" pos:end="67:31">plan</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt pos:start="68:17" pos:end="68:39"><expr pos:start="68:17" pos:end="68:38"><call pos:start="68:17" pos:end="68:38"><name pos:start="68:17" pos:end="68:32"><name pos:start="68:17" pos:end="68:28">pendingPlans</name><operator pos:start="68:29" pos:end="68:29">.</operator><name pos:start="68:30" pos:end="68:32">add</name></name><argument_list pos:start="68:33" pos:end="68:38">(<argument pos:start="68:34" pos:end="68:37"><expr pos:start="68:34" pos:end="68:37"><name pos:start="68:34" pos:end="68:37">plan</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	</block_content>}</block></function>

	<function pos:start="71:9" pos:end="73:9"><type pos:start="71:9" pos:end="71:22"><specifier pos:start="71:9" pos:end="71:14">public</specifier> <name pos:start="71:16" pos:end="71:22">boolean</name></type> <name pos:start="71:24" pos:end="71:40">hasPendingFlights</name><parameter_list pos:start="71:41" pos:end="71:42">()</parameter_list> <block pos:start="71:44" pos:end="73:9">{<block_content pos:start="72:17" pos:end="72:47">
		<return pos:start="72:17" pos:end="72:47">return <expr pos:start="72:24" pos:end="72:46"><call pos:start="72:24" pos:end="72:42"><name pos:start="72:24" pos:end="72:40"><name pos:start="72:24" pos:end="72:35">pendingPlans</name><operator pos:start="72:36" pos:end="72:36">.</operator><name pos:start="72:37" pos:end="72:40">size</name></name><argument_list pos:start="72:41" pos:end="72:42">()</argument_list></call> <operator pos:start="72:44" pos:end="72:44">&gt;</operator> <literal type="number" pos:start="72:46" pos:end="72:46">0</literal></expr>;</return>
	</block_content>}</block></function>

	<function pos:start="75:9" pos:end="77:9"><type pos:start="75:9" pos:end="75:26"><specifier pos:start="75:9" pos:end="75:14">public</specifier> <name pos:start="75:16" pos:end="75:26">IFlightPlan</name></type> <name pos:start="75:28" pos:end="75:45">getNextPendingPlan</name><parameter_list pos:start="75:46" pos:end="75:47">()</parameter_list> <block pos:start="75:49" pos:end="77:9">{<block_content pos:start="76:17" pos:end="76:43">
		<return pos:start="76:17" pos:end="76:43">return <expr pos:start="76:24" pos:end="76:42"><call pos:start="76:24" pos:end="76:42"><name pos:start="76:24" pos:end="76:39"><name pos:start="76:24" pos:end="76:35">pendingPlans</name><operator pos:start="76:36" pos:end="76:36">.</operator><name pos:start="76:37" pos:end="76:39">get</name></name><argument_list pos:start="76:40" pos:end="76:42">(<argument pos:start="76:41" pos:end="76:41"><expr pos:start="76:41" pos:end="76:41"><literal type="number" pos:start="76:41" pos:end="76:41">0</literal></expr></argument>)</argument_list></call></expr>;</return>
	</block_content>}</block></function>

	<function pos:start="79:9" pos:end="88:9"><type pos:start="79:9" pos:end="79:19"><specifier pos:start="79:9" pos:end="79:14">public</specifier> <name pos:start="79:16" pos:end="79:19">void</name></type> <name pos:start="79:21" pos:end="79:32">activatePlan</name><parameter_list pos:start="79:33" pos:end="79:64">(<parameter pos:start="79:34" pos:end="79:49"><decl pos:start="79:34" pos:end="79:49"><type pos:start="79:34" pos:end="79:49"><name pos:start="79:34" pos:end="79:44">IFlightPlan</name></type> <name pos:start="79:46" pos:end="79:49">plan</name></decl></parameter>, <parameter pos:start="79:52" pos:end="79:63"><decl pos:start="79:52" pos:end="79:63"><type pos:start="79:52" pos:end="79:63"><name pos:start="79:52" pos:end="79:57">String</name></type> <name pos:start="79:59" pos:end="79:63">uavid</name></decl></parameter>)</parameter_list> <throws pos:start="79:66" pos:end="79:86">throws <argument pos:start="79:73" pos:end="79:86"><expr pos:start="79:73" pos:end="79:86"><name pos:start="79:73" pos:end="79:86">DroneException</name></expr></argument></throws> <block pos:start="79:88" pos:end="88:9">{<block_content pos:start="80:17" pos:end="87:107">
		<if_stmt pos:start="80:17" pos:end="83:17"><if pos:start="80:17" pos:end="83:17">if <condition pos:start="80:20" pos:end="80:48">(<expr pos:start="80:21" pos:end="80:47"><call pos:start="80:21" pos:end="80:39"><name pos:start="80:21" pos:end="80:32"><name pos:start="80:21" pos:end="80:28">planList</name><operator pos:start="80:29" pos:end="80:29">.</operator><name pos:start="80:30" pos:end="80:32">get</name></name><argument_list pos:start="80:33" pos:end="80:39">(<argument pos:start="80:34" pos:end="80:38"><expr pos:start="80:34" pos:end="80:38"><name pos:start="80:34" pos:end="80:38">uavid</name></expr></argument>)</argument_list></call> <operator pos:start="80:41" pos:end="80:42">==</operator> <literal type="null" pos:start="80:44" pos:end="80:47">null</literal></expr>)</condition> <block pos:start="80:50" pos:end="83:17">{<block_content pos:start="81:25" pos:end="81:94">
			<throw pos:start="81:25" pos:end="81:94">throw <expr pos:start="81:31" pos:end="81:93"><operator pos:start="81:31" pos:end="81:33">new</operator> <call pos:start="81:35" pos:end="81:93"><name pos:start="81:35" pos:end="81:48">DroneException</name><argument_list pos:start="81:49" pos:end="81:93">(<argument pos:start="81:50" pos:end="81:92"><expr pos:start="81:50" pos:end="81:92"><literal type="string" pos:start="81:50" pos:end="81:70">"Error no plan for '"</literal> <operator pos:start="81:72" pos:end="81:72">+</operator> <name pos:start="81:74" pos:end="81:78">uavid</name> <operator pos:start="81:80" pos:end="81:80">+</operator> <literal type="string" pos:start="81:82" pos:end="81:92">"' pending"</literal></expr></argument>)</argument_list></call></expr>;</throw>

		</block_content>}</block></if></if_stmt>
		<expr_stmt pos:start="84:17" pos:end="84:42"><expr pos:start="84:17" pos:end="84:41"><call pos:start="84:17" pos:end="84:41"><name pos:start="84:17" pos:end="84:35"><name pos:start="84:17" pos:end="84:28">pendingPlans</name><operator pos:start="84:29" pos:end="84:29">.</operator><name pos:start="84:30" pos:end="84:35">remove</name></name><argument_list pos:start="84:36" pos:end="84:41">(<argument pos:start="84:37" pos:end="84:40"><expr pos:start="84:37" pos:end="84:40"><name pos:start="84:37" pos:end="84:40">plan</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt pos:start="85:17" pos:end="85:59"><expr pos:start="85:17" pos:end="85:58"><call pos:start="85:17" pos:end="85:35"><name pos:start="85:17" pos:end="85:28"><name pos:start="85:17" pos:end="85:24">planList</name><operator pos:start="85:25" pos:end="85:25">.</operator><name pos:start="85:26" pos:end="85:28">get</name></name><argument_list pos:start="85:29" pos:end="85:35">(<argument pos:start="85:30" pos:end="85:34"><expr pos:start="85:30" pos:end="85:34"><name pos:start="85:30" pos:end="85:34">uavid</name></expr></argument>)</argument_list></call><operator pos:start="85:36" pos:end="85:36">.</operator><call pos:start="85:37" pos:end="85:58"><name pos:start="85:37" pos:end="85:56">setNextPlanToCurrent</name><argument_list pos:start="85:57" pos:end="85:58">()</argument_list></call></expr>;</expr_stmt>
		<expr_stmt pos:start="86:17" pos:end="86:49"><expr pos:start="86:17" pos:end="86:48"><call pos:start="86:17" pos:end="86:48"><name pos:start="86:17" pos:end="86:41"><name pos:start="86:17" pos:end="86:20">plan</name><operator pos:start="86:21" pos:end="86:21">.</operator><name pos:start="86:22" pos:end="86:41">setDesignatedDroneId</name></name><argument_list pos:start="86:42" pos:end="86:48">(<argument pos:start="86:43" pos:end="86:47"><expr pos:start="86:43" pos:end="86:47"><name pos:start="86:43" pos:end="86:47">uavid</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> 
		<expr_stmt pos:start="87:17" pos:end="87:107"><expr pos:start="87:17" pos:end="87:106"><call pos:start="87:17" pos:end="87:56"><name pos:start="87:17" pos:end="87:54"><name pos:start="87:17" pos:end="87:42">DronologyMonitoringManager</name><operator pos:start="87:43" pos:end="87:43">.</operator><name pos:start="87:44" pos:end="87:54">getInstance</name></name><argument_list pos:start="87:55" pos:end="87:56">()</argument_list></call><operator pos:start="87:57" pos:end="87:57">.</operator><call pos:start="87:58" pos:end="87:106"><name pos:start="87:58" pos:end="87:64">publish</name><argument_list pos:start="87:65" pos:end="87:106">(<argument pos:start="87:66" pos:end="87:105"><expr pos:start="87:66" pos:end="87:105"><call pos:start="87:66" pos:end="87:105"><name pos:start="87:66" pos:end="87:99"><name pos:start="87:66" pos:end="87:82">MessageMarshaller</name><operator pos:start="87:83" pos:end="87:83">.</operator><name pos:start="87:84" pos:end="87:99">createPlanActive</name></name><argument_list pos:start="87:100" pos:end="87:105">(<argument pos:start="87:101" pos:end="87:104"><expr pos:start="87:101" pos:end="87:104"><name pos:start="87:101" pos:end="87:104">plan</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	</block_content>}</block></function>

	<function pos:start="90:9" pos:end="99:9"><type pos:start="90:9" pos:end="90:19"><specifier pos:start="90:9" pos:end="90:14">public</specifier> <name pos:start="90:16" pos:end="90:19">void</name></type> <name pos:start="90:21" pos:end="90:43">checkFormCompletedPlans</name><parameter_list pos:start="90:44" pos:end="90:45">()</parameter_list> <throws pos:start="90:47" pos:end="90:67">throws <argument pos:start="90:54" pos:end="90:67"><expr pos:start="90:54" pos:end="90:67"><name pos:start="90:54" pos:end="90:67">DroneException</name></expr></argument></throws> <block pos:start="90:69" pos:end="99:9">{<block_content pos:start="91:17" pos:end="98:17">
		<for pos:start="91:17" pos:end="98:17">for <control pos:start="91:21" pos:end="91:53">(<init pos:start="91:22" pos:end="91:52"><decl pos:start="91:22" pos:end="91:52"><type pos:start="91:22" pos:end="91:29"><name pos:start="91:22" pos:end="91:29">PlanPool</name></type> <name pos:start="91:31" pos:end="91:32">pp</name> <range pos:start="91:34" pos:end="91:52">: <expr pos:start="91:36" pos:end="91:52"><call pos:start="91:36" pos:end="91:52"><name pos:start="91:36" pos:end="91:50"><name pos:start="91:36" pos:end="91:43">planList</name><operator pos:start="91:44" pos:end="91:44">.</operator><name pos:start="91:45" pos:end="91:50">values</name></name><argument_list pos:start="91:51" pos:end="91:52">()</argument_list></call></expr></range></decl></init>)</control> <block pos:start="91:55" pos:end="98:17">{<block_content pos:start="92:25" pos:end="97:25">
			<if_stmt pos:start="92:25" pos:end="97:25"><if pos:start="92:25" pos:end="97:25">if <condition pos:start="92:28" pos:end="92:93">(<expr pos:start="92:29" pos:end="92:92"><call pos:start="92:29" pos:end="92:47"><name pos:start="92:29" pos:end="92:45"><name pos:start="92:29" pos:end="92:30">pp</name><operator pos:start="92:31" pos:end="92:31">.</operator><name pos:start="92:32" pos:end="92:45">getCurrentPlan</name></name><argument_list pos:start="92:46" pos:end="92:47">()</argument_list></call> <operator pos:start="92:49" pos:end="92:50">!=</operator> <literal type="null" pos:start="92:52" pos:end="92:55">null</literal> <operator pos:start="92:57" pos:end="92:58">&amp;&amp;</operator> <call pos:start="92:60" pos:end="92:78"><name pos:start="92:60" pos:end="92:76"><name pos:start="92:60" pos:end="92:61">pp</name><operator pos:start="92:62" pos:end="92:62">.</operator><name pos:start="92:63" pos:end="92:76">getCurrentPlan</name></name><argument_list pos:start="92:77" pos:end="92:78">()</argument_list></call><operator pos:start="92:79" pos:end="92:79">.</operator><call pos:start="92:80" pos:end="92:92"><name pos:start="92:80" pos:end="92:90">isCompleted</name><argument_list pos:start="92:91" pos:end="92:92">()</argument_list></call></expr>)</condition> <block pos:start="92:95" pos:end="97:25">{<block_content pos:start="93:33" pos:end="96:58">
				<decl_stmt pos:start="93:33" pos:end="93:74"><decl pos:start="93:33" pos:end="93:73"><type pos:start="93:33" pos:end="93:43"><name pos:start="93:33" pos:end="93:43">IFlightPlan</name></type> <name pos:start="93:45" pos:end="93:51">current</name> <init pos:start="93:53" pos:end="93:73">= <expr pos:start="93:55" pos:end="93:73"><call pos:start="93:55" pos:end="93:73"><name pos:start="93:55" pos:end="93:71"><name pos:start="93:55" pos:end="93:56">pp</name><operator pos:start="93:57" pos:end="93:57">.</operator><name pos:start="93:58" pos:end="93:71">getCurrentPlan</name></name><argument_list pos:start="93:72" pos:end="93:73">()</argument_list></call></expr></init></decl>;</decl_stmt>
				<expr_stmt pos:start="94:33" pos:end="94:63"><expr pos:start="94:33" pos:end="94:62"><call pos:start="94:33" pos:end="94:62"><name pos:start="94:33" pos:end="94:60"><name pos:start="94:33" pos:end="94:34">pp</name><operator pos:start="94:35" pos:end="94:35">.</operator><name pos:start="94:36" pos:end="94:60">setCurrentFlightCompleted</name></name><argument_list pos:start="94:61" pos:end="94:62">()</argument_list></call></expr>;</expr_stmt>
				<expr_stmt pos:start="95:33" pos:end="95:129"><expr pos:start="95:33" pos:end="95:128"><call pos:start="95:33" pos:end="95:72"><name pos:start="95:33" pos:end="95:70"><name pos:start="95:33" pos:end="95:58">DronologyMonitoringManager</name><operator pos:start="95:59" pos:end="95:59">.</operator><name pos:start="95:60" pos:end="95:70">getInstance</name></name><argument_list pos:start="95:71" pos:end="95:72">()</argument_list></call><operator pos:start="95:73" pos:end="95:73">.</operator><call pos:start="95:74" pos:end="95:128"><name pos:start="95:74" pos:end="95:80">publish</name><argument_list pos:start="95:81" pos:end="95:128">(<argument pos:start="95:82" pos:end="95:127"><expr pos:start="95:82" pos:end="95:127"><call pos:start="95:82" pos:end="95:127"><name pos:start="95:82" pos:end="95:118"><name pos:start="95:82" pos:end="95:98">MessageMarshaller</name><operator pos:start="95:99" pos:end="95:99">.</operator><name pos:start="95:100" pos:end="95:118">createPlanCompleted</name></name><argument_list pos:start="95:119" pos:end="95:127">(<argument pos:start="95:120" pos:end="95:126"><expr pos:start="95:120" pos:end="95:126"><name pos:start="95:120" pos:end="95:126">current</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<expr_stmt pos:start="96:33" pos:end="96:58"><expr pos:start="96:33" pos:end="96:57"><call pos:start="96:33" pos:end="96:57"><name pos:start="96:33" pos:end="96:48">notifyPlanChange</name><argument_list pos:start="96:49" pos:end="96:57">(<argument pos:start="96:50" pos:end="96:56"><expr pos:start="96:50" pos:end="96:56"><name pos:start="96:50" pos:end="96:56">current</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			</block_content>}</block></if></if_stmt>
		</block_content>}</block></for>
	</block_content>}</block></function>

	<function pos:start="101:9" pos:end="106:9"><type pos:start="101:9" pos:end="101:20"><specifier pos:start="101:9" pos:end="101:15">private</specifier> <name pos:start="101:17" pos:end="101:20">void</name></type> <name pos:start="101:22" pos:end="101:37">notifyPlanChange</name><parameter_list pos:start="101:38" pos:end="101:62">(<parameter pos:start="101:39" pos:end="101:61"><decl pos:start="101:39" pos:end="101:61"><type pos:start="101:39" pos:end="101:49"><name pos:start="101:39" pos:end="101:49">IFlightPlan</name></type> <name pos:start="101:51" pos:end="101:61">changedPlan</name></decl></parameter>)</parameter_list> <block pos:start="101:64" pos:end="106:9">{<block_content pos:start="102:17" pos:end="104:17">
		<for pos:start="102:17" pos:end="104:17">for <control pos:start="102:21" pos:end="102:83">(<init pos:start="102:22" pos:end="102:82"><decl pos:start="102:22" pos:end="102:82"><type pos:start="102:22" pos:end="102:46"><name pos:start="102:22" pos:end="102:46">IPlanStatusChangeListener</name></type> <name pos:start="102:48" pos:end="102:55">listener</name> <range pos:start="102:57" pos:end="102:82">: <expr pos:start="102:59" pos:end="102:82"><name pos:start="102:59" pos:end="102:82">planStatusChangeListener</name></expr></range></decl></init>)</control> <block pos:start="102:85" pos:end="104:17">{<block_content pos:start="103:25" pos:end="103:63">
			<expr_stmt pos:start="103:25" pos:end="103:63"><expr pos:start="103:25" pos:end="103:62"><call pos:start="103:25" pos:end="103:62"><name pos:start="103:25" pos:end="103:49"><name pos:start="103:25" pos:end="103:32">listener</name><operator pos:start="103:33" pos:end="103:33">.</operator><name pos:start="103:34" pos:end="103:49">notifyPlanChange</name></name><argument_list pos:start="103:50" pos:end="103:62">(<argument pos:start="103:51" pos:end="103:61"><expr pos:start="103:51" pos:end="103:61"><name pos:start="103:51" pos:end="103:61">changedPlan</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		</block_content>}</block></for>

	</block_content>}</block></function>

	<function pos:start="108:9" pos:end="116:9"><type pos:start="108:9" pos:end="108:32"><specifier pos:start="108:9" pos:end="108:14">public</specifier> <name pos:start="108:16" pos:end="108:32"><name pos:start="108:16" pos:end="108:19">List</name><argument_list type="generic" pos:start="108:20" pos:end="108:32">&lt;<argument pos:start="108:21" pos:end="108:31"><name pos:start="108:21" pos:end="108:31">IFlightPlan</name></argument>&gt;</argument_list></name></type> <name pos:start="108:34" pos:end="108:50">getCurrentFlights</name><parameter_list pos:start="108:51" pos:end="108:52">()</parameter_list> <block pos:start="108:54" pos:end="116:9">{<block_content pos:start="109:17" pos:end="115:38">
		<decl_stmt pos:start="109:17" pos:end="109:69"><decl pos:start="109:17" pos:end="109:68"><type pos:start="109:17" pos:end="109:33"><name pos:start="109:17" pos:end="109:33"><name pos:start="109:17" pos:end="109:20">List</name><argument_list type="generic" pos:start="109:21" pos:end="109:33">&lt;<argument pos:start="109:22" pos:end="109:32"><name pos:start="109:22" pos:end="109:32">IFlightPlan</name></argument>&gt;</argument_list></name></type> <name pos:start="109:35" pos:end="109:48">currentFlights</name> <init pos:start="109:50" pos:end="109:68">= <expr pos:start="109:52" pos:end="109:68"><operator pos:start="109:52" pos:end="109:54">new</operator> <call pos:start="109:56" pos:end="109:68"><name pos:start="109:56" pos:end="109:66"><name pos:start="109:56" pos:end="109:64">ArrayList</name><argument_list type="generic" pos:start="109:65" pos:end="109:66">&lt;&gt;</argument_list></name><argument_list pos:start="109:67" pos:end="109:68">()</argument_list></call></expr></init></decl>;</decl_stmt>
		<for pos:start="110:17" pos:end="114:17">for <control pos:start="110:21" pos:end="110:53">(<init pos:start="110:22" pos:end="110:52"><decl pos:start="110:22" pos:end="110:52"><type pos:start="110:22" pos:end="110:29"><name pos:start="110:22" pos:end="110:29">PlanPool</name></type> <name pos:start="110:31" pos:end="110:32">pp</name> <range pos:start="110:34" pos:end="110:52">: <expr pos:start="110:36" pos:end="110:52"><call pos:start="110:36" pos:end="110:52"><name pos:start="110:36" pos:end="110:50"><name pos:start="110:36" pos:end="110:43">planList</name><operator pos:start="110:44" pos:end="110:44">.</operator><name pos:start="110:45" pos:end="110:50">values</name></name><argument_list pos:start="110:51" pos:end="110:52">()</argument_list></call></expr></range></decl></init>)</control> <block pos:start="110:55" pos:end="114:17">{<block_content pos:start="111:25" pos:end="113:25">
			<if_stmt pos:start="111:25" pos:end="113:25"><if pos:start="111:25" pos:end="113:25">if <condition pos:start="111:28" pos:end="111:56">(<expr pos:start="111:29" pos:end="111:55"><call pos:start="111:29" pos:end="111:47"><name pos:start="111:29" pos:end="111:45"><name pos:start="111:29" pos:end="111:30">pp</name><operator pos:start="111:31" pos:end="111:31">.</operator><name pos:start="111:32" pos:end="111:45">getCurrentPlan</name></name><argument_list pos:start="111:46" pos:end="111:47">()</argument_list></call> <operator pos:start="111:49" pos:end="111:50">!=</operator> <literal type="null" pos:start="111:52" pos:end="111:55">null</literal></expr>)</condition> <block pos:start="111:58" pos:end="113:25">{<block_content pos:start="112:33" pos:end="112:72">
				<expr_stmt pos:start="112:33" pos:end="112:72"><expr pos:start="112:33" pos:end="112:71"><call pos:start="112:33" pos:end="112:71"><name pos:start="112:33" pos:end="112:50"><name pos:start="112:33" pos:end="112:46">currentFlights</name><operator pos:start="112:47" pos:end="112:47">.</operator><name pos:start="112:48" pos:end="112:50">add</name></name><argument_list pos:start="112:51" pos:end="112:71">(<argument pos:start="112:52" pos:end="112:70"><expr pos:start="112:52" pos:end="112:70"><call pos:start="112:52" pos:end="112:70"><name pos:start="112:52" pos:end="112:68"><name pos:start="112:52" pos:end="112:53">pp</name><operator pos:start="112:54" pos:end="112:54">.</operator><name pos:start="112:55" pos:end="112:68">getCurrentPlan</name></name><argument_list pos:start="112:69" pos:end="112:70">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			</block_content>}</block></if></if_stmt>
		</block_content>}</block></for>
		<return pos:start="115:17" pos:end="115:38">return <expr pos:start="115:24" pos:end="115:37"><name pos:start="115:24" pos:end="115:37">currentFlights</name></expr>;</return>
	</block_content>}</block></function>

	<function pos:start="118:9" pos:end="128:9"><type pos:start="118:9" pos:end="118:19"><specifier pos:start="118:9" pos:end="118:14">public</specifier> <name pos:start="118:16" pos:end="118:19">void</name></type> <name pos:start="118:21" pos:end="118:30">assignPlan</name><parameter_list pos:start="118:31" pos:end="118:62">(<parameter pos:start="118:32" pos:end="118:47"><decl pos:start="118:32" pos:end="118:47"><type pos:start="118:32" pos:end="118:47"><name pos:start="118:32" pos:end="118:42">IFlightPlan</name></type> <name pos:start="118:44" pos:end="118:47">plan</name></decl></parameter>, <parameter pos:start="118:50" pos:end="118:61"><decl pos:start="118:50" pos:end="118:61"><type pos:start="118:50" pos:end="118:61"><name pos:start="118:50" pos:end="118:55">String</name></type> <name pos:start="118:57" pos:end="118:61">uavId</name></decl></parameter>)</parameter_list> <block pos:start="118:64" pos:end="128:9">{<block_content pos:start="119:17" pos:end="126:33">
		<decl_stmt pos:start="119:17" pos:end="119:35"><decl pos:start="119:17" pos:end="119:34"><type pos:start="119:17" pos:end="119:24"><name pos:start="119:17" pos:end="119:24">PlanPool</name></type> <name pos:start="119:26" pos:end="119:27">pp</name> <init pos:start="119:29" pos:end="119:34">= <expr pos:start="119:31" pos:end="119:34"><literal type="null" pos:start="119:31" pos:end="119:34">null</literal></expr></init></decl>;</decl_stmt>
		<if_stmt pos:start="120:17" pos:end="125:17"><if pos:start="120:17" pos:end="123:17">if <condition pos:start="120:20" pos:end="120:48">(<expr pos:start="120:21" pos:end="120:47"><call pos:start="120:21" pos:end="120:39"><name pos:start="120:21" pos:end="120:32"><name pos:start="120:21" pos:end="120:28">planList</name><operator pos:start="120:29" pos:end="120:29">.</operator><name pos:start="120:30" pos:end="120:32">get</name></name><argument_list pos:start="120:33" pos:end="120:39">(<argument pos:start="120:34" pos:end="120:38"><expr pos:start="120:34" pos:end="120:38"><name pos:start="120:34" pos:end="120:38">uavId</name></expr></argument>)</argument_list></call> <operator pos:start="120:41" pos:end="120:42">==</operator> <literal type="null" pos:start="120:44" pos:end="120:47">null</literal></expr>)</condition> <block pos:start="120:50" pos:end="123:17">{<block_content pos:start="121:25" pos:end="122:48">
			<expr_stmt pos:start="121:25" pos:end="121:49"><expr pos:start="121:25" pos:end="121:48"><name pos:start="121:25" pos:end="121:26">pp</name> <operator pos:start="121:28" pos:end="121:28">=</operator> <operator pos:start="121:30" pos:end="121:32">new</operator> <call pos:start="121:34" pos:end="121:48"><name pos:start="121:34" pos:end="121:41">PlanPool</name><argument_list pos:start="121:42" pos:end="121:48">(<argument pos:start="121:43" pos:end="121:47"><expr pos:start="121:43" pos:end="121:47"><name pos:start="121:43" pos:end="121:47">uavId</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt pos:start="122:25" pos:end="122:48"><expr pos:start="122:25" pos:end="122:47"><call pos:start="122:25" pos:end="122:47"><name pos:start="122:25" pos:end="122:36"><name pos:start="122:25" pos:end="122:32">planList</name><operator pos:start="122:33" pos:end="122:33">.</operator><name pos:start="122:34" pos:end="122:36">put</name></name><argument_list pos:start="122:37" pos:end="122:47">(<argument pos:start="122:38" pos:end="122:42"><expr pos:start="122:38" pos:end="122:42"><name pos:start="122:38" pos:end="122:42">uavId</name></expr></argument>, <argument pos:start="122:45" pos:end="122:46"><expr pos:start="122:45" pos:end="122:46"><name pos:start="122:45" pos:end="122:46">pp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		</block_content>}</block></if> <else pos:start="123:19" pos:end="125:17">else <block pos:start="123:24" pos:end="125:17">{<block_content pos:start="124:25" pos:end="124:49">
			<expr_stmt pos:start="124:25" pos:end="124:49"><expr pos:start="124:25" pos:end="124:48"><name pos:start="124:25" pos:end="124:26">pp</name> <operator pos:start="124:28" pos:end="124:28">=</operator> <call pos:start="124:30" pos:end="124:48"><name pos:start="124:30" pos:end="124:41"><name pos:start="124:30" pos:end="124:37">planList</name><operator pos:start="124:38" pos:end="124:38">.</operator><name pos:start="124:39" pos:end="124:41">get</name></name><argument_list pos:start="124:42" pos:end="124:48">(<argument pos:start="124:43" pos:end="124:47"><expr pos:start="124:43" pos:end="124:47"><name pos:start="124:43" pos:end="124:47">uavId</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		</block_content>}</block></else></if_stmt>
		<expr_stmt pos:start="126:17" pos:end="126:33"><expr pos:start="126:17" pos:end="126:32"><call pos:start="126:17" pos:end="126:32"><name pos:start="126:17" pos:end="126:26"><name pos:start="126:17" pos:end="126:18">pp</name><operator pos:start="126:19" pos:end="126:19">.</operator><name pos:start="126:20" pos:end="126:26">addPlan</name></name><argument_list pos:start="126:27" pos:end="126:32">(<argument pos:start="126:28" pos:end="126:31"><expr pos:start="126:28" pos:end="126:31"><name pos:start="126:28" pos:end="126:31">plan</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	</block_content>}</block></function>

	<function pos:start="130:9" pos:end="133:9"><type pos:start="130:9" pos:end="130:19"><specifier pos:start="130:9" pos:end="130:14">public</specifier> <name pos:start="130:16" pos:end="130:19">void</name></type> <name pos:start="130:21" pos:end="130:47">addPlanStatusChangeListener</name><parameter_list pos:start="130:48" pos:end="130:83">(<parameter pos:start="130:49" pos:end="130:82"><decl pos:start="130:49" pos:end="130:82"><type pos:start="130:49" pos:end="130:73"><name pos:start="130:49" pos:end="130:73">IPlanStatusChangeListener</name></type> <name pos:start="130:75" pos:end="130:82">listener</name></decl></parameter>)</parameter_list> <block pos:start="130:85" pos:end="133:9">{<block_content pos:start="131:17" pos:end="131:55">
		<expr_stmt pos:start="131:17" pos:end="131:55"><expr pos:start="131:17" pos:end="131:54"><call pos:start="131:17" pos:end="131:54"><name pos:start="131:17" pos:end="131:44"><name pos:start="131:17" pos:end="131:40">planStatusChangeListener</name><operator pos:start="131:41" pos:end="131:41">.</operator><name pos:start="131:42" pos:end="131:44">add</name></name><argument_list pos:start="131:45" pos:end="131:54">(<argument pos:start="131:46" pos:end="131:53"><expr pos:start="131:46" pos:end="131:53"><name pos:start="131:46" pos:end="131:53">listener</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	</block_content>}</block></function>

	<function pos:start="135:9" pos:end="140:9"><type pos:start="135:9" pos:end="135:26"><specifier pos:start="135:9" pos:end="135:14">public</specifier> <name pos:start="135:16" pos:end="135:26">IFlightPlan</name></type> <name pos:start="135:28" pos:end="135:41">getCurrentPlan</name><parameter_list pos:start="135:42" pos:end="135:55">(<parameter pos:start="135:43" pos:end="135:54"><decl pos:start="135:43" pos:end="135:54"><type pos:start="135:43" pos:end="135:48"><name pos:start="135:43" pos:end="135:48">String</name></type> <name pos:start="135:50" pos:end="135:54">uavId</name></decl></parameter>)</parameter_list> <block pos:start="135:57" pos:end="140:9">{<block_content pos:start="136:17" pos:end="139:28">
		<if_stmt pos:start="136:17" pos:end="138:17"><if pos:start="136:17" pos:end="138:17">if <condition pos:start="136:20" pos:end="136:48">(<expr pos:start="136:21" pos:end="136:47"><call pos:start="136:21" pos:end="136:39"><name pos:start="136:21" pos:end="136:32"><name pos:start="136:21" pos:end="136:28">planList</name><operator pos:start="136:29" pos:end="136:29">.</operator><name pos:start="136:30" pos:end="136:32">get</name></name><argument_list pos:start="136:33" pos:end="136:39">(<argument pos:start="136:34" pos:end="136:38"><expr pos:start="136:34" pos:end="136:38"><name pos:start="136:34" pos:end="136:38">uavId</name></expr></argument>)</argument_list></call> <operator pos:start="136:41" pos:end="136:42">!=</operator> <literal type="null" pos:start="136:44" pos:end="136:47">null</literal></expr>)</condition> <block pos:start="136:50" pos:end="138:17">{<block_content pos:start="137:25" pos:end="137:68">
			<return pos:start="137:25" pos:end="137:68">return <expr pos:start="137:32" pos:end="137:67"><call pos:start="137:32" pos:end="137:50"><name pos:start="137:32" pos:end="137:43"><name pos:start="137:32" pos:end="137:39">planList</name><operator pos:start="137:40" pos:end="137:40">.</operator><name pos:start="137:41" pos:end="137:43">get</name></name><argument_list pos:start="137:44" pos:end="137:50">(<argument pos:start="137:45" pos:end="137:49"><expr pos:start="137:45" pos:end="137:49"><name pos:start="137:45" pos:end="137:49">uavId</name></expr></argument>)</argument_list></call><operator pos:start="137:51" pos:end="137:51">.</operator><call pos:start="137:52" pos:end="137:67"><name pos:start="137:52" pos:end="137:65">getCurrentPlan</name><argument_list pos:start="137:66" pos:end="137:67">()</argument_list></call></expr>;</return>
		</block_content>}</block></if></if_stmt>
		<return pos:start="139:17" pos:end="139:28">return <expr pos:start="139:24" pos:end="139:27"><literal type="null" pos:start="139:24" pos:end="139:27">null</literal></expr>;</return>
	</block_content>}</block></function>

	<function pos:start="142:9" pos:end="147:9"><type pos:start="142:9" pos:end="142:32"><specifier pos:start="142:9" pos:end="142:14">public</specifier> <name pos:start="142:16" pos:end="142:32"><name pos:start="142:16" pos:end="142:19">List</name><argument_list type="generic" pos:start="142:20" pos:end="142:32">&lt;<argument pos:start="142:21" pos:end="142:31"><name pos:start="142:21" pos:end="142:31">IFlightPlan</name></argument>&gt;</argument_list></name></type> <name pos:start="142:34" pos:end="142:48">getPendingPlans</name><parameter_list pos:start="142:49" pos:end="142:62">(<parameter pos:start="142:50" pos:end="142:61"><decl pos:start="142:50" pos:end="142:61"><type pos:start="142:50" pos:end="142:55"><name pos:start="142:50" pos:end="142:55">String</name></type> <name pos:start="142:57" pos:end="142:61">uavId</name></decl></parameter>)</parameter_list> <block pos:start="142:64" pos:end="147:9">{<block_content pos:start="143:17" pos:end="146:47">
		<if_stmt pos:start="143:17" pos:end="145:17"><if pos:start="143:17" pos:end="145:17">if <condition pos:start="143:20" pos:end="143:48">(<expr pos:start="143:21" pos:end="143:47"><call pos:start="143:21" pos:end="143:39"><name pos:start="143:21" pos:end="143:32"><name pos:start="143:21" pos:end="143:28">planList</name><operator pos:start="143:29" pos:end="143:29">.</operator><name pos:start="143:30" pos:end="143:32">get</name></name><argument_list pos:start="143:33" pos:end="143:39">(<argument pos:start="143:34" pos:end="143:38"><expr pos:start="143:34" pos:end="143:38"><name pos:start="143:34" pos:end="143:38">uavId</name></expr></argument>)</argument_list></call> <operator pos:start="143:41" pos:end="143:42">!=</operator> <literal type="null" pos:start="143:44" pos:end="143:47">null</literal></expr>)</condition> <block pos:start="143:50" pos:end="145:17">{<block_content pos:start="144:25" pos:end="144:69">
			<return pos:start="144:25" pos:end="144:69">return <expr pos:start="144:32" pos:end="144:68"><call pos:start="144:32" pos:end="144:50"><name pos:start="144:32" pos:end="144:43"><name pos:start="144:32" pos:end="144:39">planList</name><operator pos:start="144:40" pos:end="144:40">.</operator><name pos:start="144:41" pos:end="144:43">get</name></name><argument_list pos:start="144:44" pos:end="144:50">(<argument pos:start="144:45" pos:end="144:49"><expr pos:start="144:45" pos:end="144:49"><name pos:start="144:45" pos:end="144:49">uavId</name></expr></argument>)</argument_list></call><operator pos:start="144:51" pos:end="144:51">.</operator><call pos:start="144:52" pos:end="144:68"><name pos:start="144:52" pos:end="144:66">getPendingPlans</name><argument_list pos:start="144:67" pos:end="144:68">()</argument_list></call></expr>;</return>
		</block_content>}</block></if></if_stmt>
		<return pos:start="146:17" pos:end="146:47">return <expr pos:start="146:24" pos:end="146:46"><call pos:start="146:24" pos:end="146:46"><name pos:start="146:24" pos:end="146:44"><name pos:start="146:24" pos:end="146:34">Collections</name><operator pos:start="146:35" pos:end="146:35">.</operator><name pos:start="146:36" pos:end="146:44">emptyList</name></name><argument_list pos:start="146:45" pos:end="146:46">()</argument_list></call></expr>;</return>
	</block_content>}</block></function>

	<function pos:start="149:9" pos:end="154:9"><type pos:start="149:9" pos:end="149:32"><specifier pos:start="149:9" pos:end="149:14">public</specifier> <name pos:start="149:16" pos:end="149:32"><name pos:start="149:16" pos:end="149:19">List</name><argument_list type="generic" pos:start="149:20" pos:end="149:32">&lt;<argument pos:start="149:21" pos:end="149:31"><name pos:start="149:21" pos:end="149:31">IFlightPlan</name></argument>&gt;</argument_list></name></type> <name pos:start="149:34" pos:end="149:50">getCompletedPlans</name><parameter_list pos:start="149:51" pos:end="149:64">(<parameter pos:start="149:52" pos:end="149:63"><decl pos:start="149:52" pos:end="149:63"><type pos:start="149:52" pos:end="149:57"><name pos:start="149:52" pos:end="149:57">String</name></type> <name pos:start="149:59" pos:end="149:63">uavId</name></decl></parameter>)</parameter_list> <block pos:start="149:66" pos:end="154:9">{<block_content pos:start="150:17" pos:end="153:47">
		<if_stmt pos:start="150:17" pos:end="152:17"><if pos:start="150:17" pos:end="152:17">if <condition pos:start="150:20" pos:end="150:48">(<expr pos:start="150:21" pos:end="150:47"><call pos:start="150:21" pos:end="150:39"><name pos:start="150:21" pos:end="150:32"><name pos:start="150:21" pos:end="150:28">planList</name><operator pos:start="150:29" pos:end="150:29">.</operator><name pos:start="150:30" pos:end="150:32">get</name></name><argument_list pos:start="150:33" pos:end="150:39">(<argument pos:start="150:34" pos:end="150:38"><expr pos:start="150:34" pos:end="150:38"><name pos:start="150:34" pos:end="150:38">uavId</name></expr></argument>)</argument_list></call> <operator pos:start="150:41" pos:end="150:42">!=</operator> <literal type="null" pos:start="150:44" pos:end="150:47">null</literal></expr>)</condition> <block pos:start="150:50" pos:end="152:17">{<block_content pos:start="151:25" pos:end="151:71">
			<return pos:start="151:25" pos:end="151:71">return <expr pos:start="151:32" pos:end="151:70"><call pos:start="151:32" pos:end="151:50"><name pos:start="151:32" pos:end="151:43"><name pos:start="151:32" pos:end="151:39">planList</name><operator pos:start="151:40" pos:end="151:40">.</operator><name pos:start="151:41" pos:end="151:43">get</name></name><argument_list pos:start="151:44" pos:end="151:50">(<argument pos:start="151:45" pos:end="151:49"><expr pos:start="151:45" pos:end="151:49"><name pos:start="151:45" pos:end="151:49">uavId</name></expr></argument>)</argument_list></call><operator pos:start="151:51" pos:end="151:51">.</operator><call pos:start="151:52" pos:end="151:70"><name pos:start="151:52" pos:end="151:68">getCompletedPlans</name><argument_list pos:start="151:69" pos:end="151:70">()</argument_list></call></expr>;</return>
		</block_content>}</block></if></if_stmt>
		<return pos:start="153:17" pos:end="153:47">return <expr pos:start="153:24" pos:end="153:46"><call pos:start="153:24" pos:end="153:46"><name pos:start="153:24" pos:end="153:44"><name pos:start="153:24" pos:end="153:34">Collections</name><operator pos:start="153:35" pos:end="153:35">.</operator><name pos:start="153:36" pos:end="153:44">emptyList</name></name><argument_list pos:start="153:45" pos:end="153:46">()</argument_list></call></expr>;</return>
	</block_content>}</block></function>

	<function pos:start="156:9" pos:end="163:9"><type pos:start="156:9" pos:end="156:19"><specifier pos:start="156:9" pos:end="156:14">public</specifier> <name pos:start="156:16" pos:end="156:19">void</name></type> <name pos:start="156:21" pos:end="156:32">overridePlan</name><parameter_list pos:start="156:33" pos:end="156:69">(<parameter pos:start="156:34" pos:end="156:54"><decl pos:start="156:34" pos:end="156:54"><type pos:start="156:34" pos:end="156:54"><name pos:start="156:34" pos:end="156:44">IFlightPlan</name></type> <name pos:start="156:46" pos:end="156:54">homePlane</name></decl></parameter>, <parameter pos:start="156:57" pos:end="156:68"><decl pos:start="156:57" pos:end="156:68"><type pos:start="156:57" pos:end="156:68"><name pos:start="156:57" pos:end="156:62">String</name></type> <name pos:start="156:64" pos:end="156:68">uavid</name></decl></parameter>)</parameter_list> <throws pos:start="156:71" pos:end="156:91">throws <argument pos:start="156:78" pos:end="156:91"><expr pos:start="156:78" pos:end="156:91"><name pos:start="156:78" pos:end="156:91">DroneException</name></expr></argument></throws> <block pos:start="156:93" pos:end="163:9">{<block_content pos:start="157:17" pos:end="161:60">
		<if_stmt pos:start="157:17" pos:end="160:17"><if pos:start="157:17" pos:end="160:17">if <condition pos:start="157:20" pos:end="157:48">(<expr pos:start="157:21" pos:end="157:47"><call pos:start="157:21" pos:end="157:39"><name pos:start="157:21" pos:end="157:32"><name pos:start="157:21" pos:end="157:28">planList</name><operator pos:start="157:29" pos:end="157:29">.</operator><name pos:start="157:30" pos:end="157:32">get</name></name><argument_list pos:start="157:33" pos:end="157:39">(<argument pos:start="157:34" pos:end="157:38"><expr pos:start="157:34" pos:end="157:38"><name pos:start="157:34" pos:end="157:38">uavid</name></expr></argument>)</argument_list></call> <operator pos:start="157:41" pos:end="157:42">==</operator> <literal type="null" pos:start="157:44" pos:end="157:47">null</literal></expr>)</condition> <block pos:start="157:50" pos:end="160:17">{<block_content pos:start="158:25" pos:end="158:94">
			<throw pos:start="158:25" pos:end="158:94">throw <expr pos:start="158:31" pos:end="158:93"><operator pos:start="158:31" pos:end="158:33">new</operator> <call pos:start="158:35" pos:end="158:93"><name pos:start="158:35" pos:end="158:48">DroneException</name><argument_list pos:start="158:49" pos:end="158:93">(<argument pos:start="158:50" pos:end="158:92"><expr pos:start="158:50" pos:end="158:92"><literal type="string" pos:start="158:50" pos:end="158:70">"Error no plan for '"</literal> <operator pos:start="158:72" pos:end="158:72">+</operator> <name pos:start="158:74" pos:end="158:78">uavid</name> <operator pos:start="158:80" pos:end="158:80">+</operator> <literal type="string" pos:start="158:82" pos:end="158:92">"' pending"</literal></expr></argument>)</argument_list></call></expr>;</throw>

		</block_content>}</block></if></if_stmt>
		<expr_stmt pos:start="161:17" pos:end="161:60"><expr pos:start="161:17" pos:end="161:59"><call pos:start="161:17" pos:end="161:35"><name pos:start="161:17" pos:end="161:28"><name pos:start="161:17" pos:end="161:24">planList</name><operator pos:start="161:25" pos:end="161:25">.</operator><name pos:start="161:26" pos:end="161:28">get</name></name><argument_list pos:start="161:29" pos:end="161:35">(<argument pos:start="161:30" pos:end="161:34"><expr pos:start="161:30" pos:end="161:34"><name pos:start="161:30" pos:end="161:34">uavid</name></expr></argument>)</argument_list></call><operator pos:start="161:36" pos:end="161:36">.</operator><call pos:start="161:37" pos:end="161:59"><name pos:start="161:37" pos:end="161:48">overridePlan</name><argument_list pos:start="161:49" pos:end="161:59">(<argument pos:start="161:50" pos:end="161:58"><expr pos:start="161:50" pos:end="161:58"><name pos:start="161:50" pos:end="161:58">homePlane</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	</block_content>}</block></function>

	<function pos:start="165:9" pos:end="180:9"><type pos:start="165:9" pos:end="165:19"><specifier pos:start="165:9" pos:end="165:14">public</specifier> <name pos:start="165:16" pos:end="165:19">void</name></type> <name pos:start="165:21" pos:end="165:38">cancelPendingPlans</name><parameter_list pos:start="165:39" pos:end="165:52">(<parameter pos:start="165:40" pos:end="165:51"><decl pos:start="165:40" pos:end="165:51"><type pos:start="165:40" pos:end="165:45"><name pos:start="165:40" pos:end="165:45">String</name></type> <name pos:start="165:47" pos:end="165:51">uavid</name></decl></parameter>)</parameter_list> <throws pos:start="165:54" pos:end="165:74">throws <argument pos:start="165:61" pos:end="165:74"><expr pos:start="165:61" pos:end="165:74"><name pos:start="165:61" pos:end="165:74">DroneException</name></expr></argument></throws> <block pos:start="165:76" pos:end="180:9">{<block_content pos:start="166:17" pos:end="179:17">
		<if_stmt pos:start="166:17" pos:end="169:17"><if pos:start="166:17" pos:end="169:17">if <condition pos:start="166:20" pos:end="166:48">(<expr pos:start="166:21" pos:end="166:47"><call pos:start="166:21" pos:end="166:39"><name pos:start="166:21" pos:end="166:32"><name pos:start="166:21" pos:end="166:28">planList</name><operator pos:start="166:29" pos:end="166:29">.</operator><name pos:start="166:30" pos:end="166:32">get</name></name><argument_list pos:start="166:33" pos:end="166:39">(<argument pos:start="166:34" pos:end="166:38"><expr pos:start="166:34" pos:end="166:38"><name pos:start="166:34" pos:end="166:38">uavid</name></expr></argument>)</argument_list></call> <operator pos:start="166:41" pos:end="166:42">==</operator> <literal type="null" pos:start="166:44" pos:end="166:47">null</literal></expr>)</condition> <block pos:start="166:50" pos:end="169:17">{<block_content pos:start="167:25" pos:end="167:94">
			<throw pos:start="167:25" pos:end="167:94">throw <expr pos:start="167:31" pos:end="167:93"><operator pos:start="167:31" pos:end="167:33">new</operator> <call pos:start="167:35" pos:end="167:93"><name pos:start="167:35" pos:end="167:48">DroneException</name><argument_list pos:start="167:49" pos:end="167:93">(<argument pos:start="167:50" pos:end="167:92"><expr pos:start="167:50" pos:end="167:92"><literal type="string" pos:start="167:50" pos:end="167:70">"Error no plan for '"</literal> <operator pos:start="167:72" pos:end="167:72">+</operator> <name pos:start="167:74" pos:end="167:78">uavid</name> <operator pos:start="167:80" pos:end="167:80">+</operator> <literal type="string" pos:start="167:82" pos:end="167:92">"' pending"</literal></expr></argument>)</argument_list></call></expr>;</throw>

		</block_content>}</block></if></if_stmt> 
		<expr_stmt pos:start="170:17" pos:end="170:57"><expr pos:start="170:17" pos:end="170:56"><call pos:start="170:17" pos:end="170:35"><name pos:start="170:17" pos:end="170:28"><name pos:start="170:17" pos:end="170:24">planList</name><operator pos:start="170:25" pos:end="170:25">.</operator><name pos:start="170:26" pos:end="170:28">get</name></name><argument_list pos:start="170:29" pos:end="170:35">(<argument pos:start="170:30" pos:end="170:34"><expr pos:start="170:30" pos:end="170:34"><name pos:start="170:30" pos:end="170:34">uavid</name></expr></argument>)</argument_list></call><operator pos:start="170:36" pos:end="170:36">.</operator><call pos:start="170:37" pos:end="170:56"><name pos:start="170:37" pos:end="170:54">cancelPendingPlans</name><argument_list pos:start="170:55" pos:end="170:56">()</argument_list></call></expr>;</expr_stmt>
		<synchronized pos:start="171:17" pos:end="179:17">synchronized <init pos:start="171:30" pos:end="171:43">(<expr pos:start="171:31" pos:end="171:42"><name pos:start="171:31" pos:end="171:42">pendingPlans</name></expr>)</init> <block pos:start="171:45" pos:end="179:17">{<block_content pos:start="172:25" pos:end="178:25">
			<decl_stmt pos:start="172:25" pos:end="172:85"><decl pos:start="172:25" pos:end="172:84"><type pos:start="172:25" pos:end="172:41"><name pos:start="172:25" pos:end="172:41"><name pos:start="172:25" pos:end="172:28">List</name><argument_list type="generic" pos:start="172:29" pos:end="172:41">&lt;<argument pos:start="172:30" pos:end="172:40"><name pos:start="172:30" pos:end="172:40">IFlightPlan</name></argument>&gt;</argument_list></name></type> <name pos:start="172:43" pos:end="172:52">allPending</name> <init pos:start="172:54" pos:end="172:84">= <expr pos:start="172:56" pos:end="172:84"><operator pos:start="172:56" pos:end="172:58">new</operator> <call pos:start="172:60" pos:end="172:84"><name pos:start="172:60" pos:end="172:70"><name pos:start="172:60" pos:end="172:68">ArrayList</name><argument_list type="generic" pos:start="172:69" pos:end="172:70">&lt;&gt;</argument_list></name><argument_list pos:start="172:71" pos:end="172:84">(<argument pos:start="172:72" pos:end="172:83"><expr pos:start="172:72" pos:end="172:83"><name pos:start="172:72" pos:end="172:83">pendingPlans</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

			<for pos:start="174:25" pos:end="178:25">for <control pos:start="174:29" pos:end="174:56">(<init pos:start="174:30" pos:end="174:55"><decl pos:start="174:30" pos:end="174:55"><type pos:start="174:30" pos:end="174:40"><name pos:start="174:30" pos:end="174:40">IFlightPlan</name></type> <name pos:start="174:42" pos:end="174:42">p</name> <range pos:start="174:44" pos:end="174:55">: <expr pos:start="174:46" pos:end="174:55"><name pos:start="174:46" pos:end="174:55">allPending</name></expr></range></decl></init>)</control> <block pos:start="174:58" pos:end="178:25">{<block_content pos:start="175:33" pos:end="177:33">
				<if_stmt pos:start="175:33" pos:end="177:33"><if pos:start="175:33" pos:end="177:33">if <condition pos:start="175:36" pos:end="175:75">(<expr pos:start="175:37" pos:end="175:74"><call pos:start="175:37" pos:end="175:60"><name pos:start="175:37" pos:end="175:58"><name pos:start="175:37" pos:end="175:37">p</name><operator pos:start="175:38" pos:end="175:38">.</operator><name pos:start="175:39" pos:end="175:58">getDesignatedDroneId</name></name><argument_list pos:start="175:59" pos:end="175:60">()</argument_list></call><operator pos:start="175:61" pos:end="175:61">.</operator><call pos:start="175:62" pos:end="175:74"><name pos:start="175:62" pos:end="175:67">equals</name><argument_list pos:start="175:68" pos:end="175:74">(<argument pos:start="175:69" pos:end="175:73"><expr pos:start="175:69" pos:end="175:73"><name pos:start="175:69" pos:end="175:73">uavid</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="175:77" pos:end="177:33">{<block_content pos:start="176:41" pos:end="176:63">
					<expr_stmt pos:start="176:41" pos:end="176:63"><expr pos:start="176:41" pos:end="176:62"><call pos:start="176:41" pos:end="176:62"><name pos:start="176:41" pos:end="176:59"><name pos:start="176:41" pos:end="176:52">pendingPlans</name><operator pos:start="176:53" pos:end="176:53">.</operator><name pos:start="176:54" pos:end="176:59">remove</name></name><argument_list pos:start="176:60" pos:end="176:62">(<argument pos:start="176:61" pos:end="176:61"><expr pos:start="176:61" pos:end="176:61"><name pos:start="176:61" pos:end="176:61">p</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				</block_content>}</block></if></if_stmt>
			</block_content>}</block></for>
		</block_content>}</block></synchronized>
	</block_content>}</block></function>

	<function pos:start="182:9" pos:end="184:9"><type pos:start="182:9" pos:end="182:32"><specifier pos:start="182:9" pos:end="182:14">public</specifier> <name pos:start="182:16" pos:end="182:32"><name pos:start="182:16" pos:end="182:19">List</name><argument_list type="generic" pos:start="182:20" pos:end="182:32">&lt;<argument pos:start="182:21" pos:end="182:31"><name pos:start="182:21" pos:end="182:31">IFlightPlan</name></argument>&gt;</argument_list></name></type> <name pos:start="182:34" pos:end="182:48">getPendingPlans</name><parameter_list pos:start="182:49" pos:end="182:50">()</parameter_list> <block pos:start="182:52" pos:end="184:9">{<block_content pos:start="183:17" pos:end="183:83">
		<return pos:start="183:17" pos:end="183:83">return <expr pos:start="183:24" pos:end="183:82"><call pos:start="183:24" pos:end="183:82"><name pos:start="183:24" pos:end="183:51"><name pos:start="183:24" pos:end="183:34">Collections</name><operator pos:start="183:35" pos:end="183:35">.</operator><name pos:start="183:36" pos:end="183:51">unmodifiableList</name></name><argument_list pos:start="183:52" pos:end="183:82">(<argument pos:start="183:53" pos:end="183:81"><expr pos:start="183:53" pos:end="183:81"><operator pos:start="183:53" pos:end="183:55">new</operator> <call pos:start="183:57" pos:end="183:81"><name pos:start="183:57" pos:end="183:67"><name pos:start="183:57" pos:end="183:65">ArrayList</name><argument_list type="generic" pos:start="183:66" pos:end="183:67">&lt;&gt;</argument_list></name><argument_list pos:start="183:68" pos:end="183:81">(<argument pos:start="183:69" pos:end="183:80"><expr pos:start="183:69" pos:end="183:80"><name pos:start="183:69" pos:end="183:80">pendingPlans</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
	</block_content>}</block></function>

}</block></class>
</unit>
