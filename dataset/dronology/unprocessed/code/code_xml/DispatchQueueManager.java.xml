<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="Java" filename="src/DispatchQueueManager.java" pos:tabs="8"><package pos:start="1:1" pos:end="1:53">package <name pos:start="1:9" pos:end="1:52"><name pos:start="1:9" pos:end="1:11">edu</name><operator pos:start="1:12" pos:end="1:12">.</operator><name pos:start="1:13" pos:end="1:14">nd</name><operator pos:start="1:15" pos:end="1:15">.</operator><name pos:start="1:16" pos:end="1:24">dronology</name><operator pos:start="1:25" pos:end="1:25">.</operator><name pos:start="1:26" pos:end="1:33">gstation</name><operator pos:start="1:34" pos:end="1:34">.</operator><name pos:start="1:35" pos:end="1:43">connector</name><operator pos:start="1:44" pos:end="1:44">.</operator><name pos:start="1:45" pos:end="1:52">dispatch</name></name>;</package>

<import pos:start="3:1" pos:end="3:27">import <name pos:start="3:8" pos:end="3:26"><name pos:start="3:8" pos:end="3:11">java</name><operator pos:start="3:12" pos:end="3:12">.</operator><name pos:start="3:13" pos:end="3:16">util</name><operator pos:start="3:17" pos:end="3:17">.</operator><name pos:start="3:18" pos:end="3:26">ArrayList</name></name>;</import>
<import pos:start="4:1" pos:end="4:22">import <name pos:start="4:8" pos:end="4:21"><name pos:start="4:8" pos:end="4:11">java</name><operator pos:start="4:12" pos:end="4:12">.</operator><name pos:start="4:13" pos:end="4:16">util</name><operator pos:start="4:17" pos:end="4:17">.</operator><name pos:start="4:18" pos:end="4:21">List</name></name>;</import>
<import pos:start="5:1" pos:end="5:21">import <name pos:start="5:8" pos:end="5:20"><name pos:start="5:8" pos:end="5:11">java</name><operator pos:start="5:12" pos:end="5:12">.</operator><name pos:start="5:13" pos:end="5:16">util</name><operator pos:start="5:17" pos:end="5:17">.</operator><name pos:start="5:18" pos:end="5:20">Map</name></name>;</import>
<import pos:start="6:1" pos:end="6:42">import <name pos:start="6:8" pos:end="6:41"><name pos:start="6:8" pos:end="6:11">java</name><operator pos:start="6:12" pos:end="6:12">.</operator><name pos:start="6:13" pos:end="6:16">util</name><operator pos:start="6:17" pos:end="6:17">.</operator><name pos:start="6:18" pos:end="6:27">concurrent</name><operator pos:start="6:28" pos:end="6:28">.</operator><name pos:start="6:29" pos:end="6:41">BlockingQueue</name></name>;</import>
<import pos:start="7:1" pos:end="7:46">import <name pos:start="7:8" pos:end="7:45"><name pos:start="7:8" pos:end="7:11">java</name><operator pos:start="7:12" pos:end="7:12">.</operator><name pos:start="7:13" pos:end="7:16">util</name><operator pos:start="7:17" pos:end="7:17">.</operator><name pos:start="7:18" pos:end="7:27">concurrent</name><operator pos:start="7:28" pos:end="7:28">.</operator><name pos:start="7:29" pos:end="7:45">ConcurrentHashMap</name></name>;</import>
<import pos:start="8:1" pos:end="8:44">import <name pos:start="8:8" pos:end="8:43"><name pos:start="8:8" pos:end="8:11">java</name><operator pos:start="8:12" pos:end="8:12">.</operator><name pos:start="8:13" pos:end="8:16">util</name><operator pos:start="8:17" pos:end="8:17">.</operator><name pos:start="8:18" pos:end="8:27">concurrent</name><operator pos:start="8:28" pos:end="8:28">.</operator><name pos:start="8:29" pos:end="8:43">ExecutorService</name></name>;</import>
<import pos:start="9:1" pos:end="9:38">import <name pos:start="9:8" pos:end="9:37"><name pos:start="9:8" pos:end="9:11">java</name><operator pos:start="9:12" pos:end="9:12">.</operator><name pos:start="9:13" pos:end="9:16">util</name><operator pos:start="9:17" pos:end="9:17">.</operator><name pos:start="9:18" pos:end="9:27">concurrent</name><operator pos:start="9:28" pos:end="9:28">.</operator><name pos:start="9:29" pos:end="9:37">Executors</name></name>;</import>
<import pos:start="10:1" pos:end="10:35">import <name pos:start="10:8" pos:end="10:34"><name pos:start="10:8" pos:end="10:11">java</name><operator pos:start="10:12" pos:end="10:12">.</operator><name pos:start="10:13" pos:end="10:16">util</name><operator pos:start="10:17" pos:end="10:17">.</operator><name pos:start="10:18" pos:end="10:27">concurrent</name><operator pos:start="10:28" pos:end="10:28">.</operator><name pos:start="10:29" pos:end="10:34">Future</name></name>;</import>
<import pos:start="11:1" pos:end="11:48">import <name pos:start="11:8" pos:end="11:47"><name pos:start="11:8" pos:end="11:11">java</name><operator pos:start="11:12" pos:end="11:12">.</operator><name pos:start="11:13" pos:end="11:16">util</name><operator pos:start="11:17" pos:end="11:17">.</operator><name pos:start="11:18" pos:end="11:27">concurrent</name><operator pos:start="11:28" pos:end="11:28">.</operator><name pos:start="11:29" pos:end="11:47">LinkedBlockingDeque</name></name>;</import>
<import pos:start="12:1" pos:end="12:48">import <name pos:start="12:8" pos:end="12:47"><name pos:start="12:8" pos:end="12:11">java</name><operator pos:start="12:12" pos:end="12:12">.</operator><name pos:start="12:13" pos:end="12:16">util</name><operator pos:start="12:17" pos:end="12:17">.</operator><name pos:start="12:18" pos:end="12:27">concurrent</name><operator pos:start="12:28" pos:end="12:28">.</operator><name pos:start="12:29" pos:end="12:47">LinkedBlockingQueue</name></name>;</import>

<import pos:start="14:1" pos:end="14:48">import <name pos:start="14:8" pos:end="14:47"><name pos:start="14:8" pos:end="14:10">edu</name><operator pos:start="14:11" pos:end="14:11">.</operator><name pos:start="14:12" pos:end="14:13">nd</name><operator pos:start="14:14" pos:end="14:14">.</operator><name pos:start="14:15" pos:end="14:23">dronology</name><operator pos:start="14:24" pos:end="14:24">.</operator><name pos:start="14:25" pos:end="14:28">core</name><operator pos:start="14:29" pos:end="14:29">.</operator><name pos:start="14:30" pos:end="14:47">DronologyConstants</name></name>;</import>
<import pos:start="15:1" pos:end="15:56">import <name pos:start="15:8" pos:end="15:55"><name pos:start="15:8" pos:end="15:10">edu</name><operator pos:start="15:11" pos:end="15:11">.</operator><name pos:start="15:12" pos:end="15:13">nd</name><operator pos:start="15:14" pos:end="15:14">.</operator><name pos:start="15:15" pos:end="15:23">dronology</name><operator pos:start="15:24" pos:end="15:24">.</operator><name pos:start="15:25" pos:end="15:28">core</name><operator pos:start="15:29" pos:end="15:29">.</operator><name pos:start="15:30" pos:end="15:55">IUAVPropertyUpdateNotifier</name></name>;</import>
<import pos:start="16:1" pos:end="16:60">import <name pos:start="16:8" pos:end="16:59"><name pos:start="16:8" pos:end="16:10">edu</name><operator pos:start="16:11" pos:end="16:11">.</operator><name pos:start="16:12" pos:end="16:13">nd</name><operator pos:start="16:14" pos:end="16:14">.</operator><name pos:start="16:15" pos:end="16:23">dronology</name><operator pos:start="16:24" pos:end="16:24">.</operator><name pos:start="16:25" pos:end="16:28">core</name><operator pos:start="16:29" pos:end="16:29">.</operator><name pos:start="16:30" pos:end="16:36">vehicle</name><operator pos:start="16:37" pos:end="16:37">.</operator><name pos:start="16:38" pos:end="16:45">commands</name><operator pos:start="16:46" pos:end="16:46">.</operator><name pos:start="16:47" pos:end="16:59">IDroneCommand</name></name>;</import>
<import pos:start="17:1" pos:end="17:60">import <name pos:start="17:8" pos:end="17:59"><name pos:start="17:8" pos:end="17:10">edu</name><operator pos:start="17:11" pos:end="17:11">.</operator><name pos:start="17:12" pos:end="17:13">nd</name><operator pos:start="17:14" pos:end="17:14">.</operator><name pos:start="17:15" pos:end="17:23">dronology</name><operator pos:start="17:24" pos:end="17:24">.</operator><name pos:start="17:25" pos:end="17:28">core</name><operator pos:start="17:29" pos:end="17:29">.</operator><name pos:start="17:30" pos:end="17:36">vehicle</name><operator pos:start="17:37" pos:end="17:37">.</operator><name pos:start="17:38" pos:end="17:45">internal</name><operator pos:start="17:46" pos:end="17:46">.</operator><name pos:start="17:47" pos:end="17:59">PhysicalDrone</name></name>;</import>
<import pos:start="18:1" pos:end="18:63">import <name pos:start="18:8" pos:end="18:62"><name pos:start="18:8" pos:end="18:10">edu</name><operator pos:start="18:11" pos:end="18:11">.</operator><name pos:start="18:12" pos:end="18:13">nd</name><operator pos:start="18:14" pos:end="18:14">.</operator><name pos:start="18:15" pos:end="18:23">dronology</name><operator pos:start="18:24" pos:end="18:24">.</operator><name pos:start="18:25" pos:end="18:32">gstation</name><operator pos:start="18:33" pos:end="18:33">.</operator><name pos:start="18:34" pos:end="18:42">connector</name><operator pos:start="18:43" pos:end="18:43">.</operator><name pos:start="18:44" pos:end="18:62">IUAVSafetyValidator</name></name>;</import>
<import pos:start="19:1" pos:end="19:71">import <name pos:start="19:8" pos:end="19:70"><name pos:start="19:8" pos:end="19:10">edu</name><operator pos:start="19:11" pos:end="19:11">.</operator><name pos:start="19:12" pos:end="19:13">nd</name><operator pos:start="19:14" pos:end="19:14">.</operator><name pos:start="19:15" pos:end="19:23">dronology</name><operator pos:start="19:24" pos:end="19:24">.</operator><name pos:start="19:25" pos:end="19:32">gstation</name><operator pos:start="19:33" pos:end="19:33">.</operator><name pos:start="19:34" pos:end="19:42">connector</name><operator pos:start="19:43" pos:end="19:43">.</operator><name pos:start="19:44" pos:end="19:51">messages</name><operator pos:start="19:52" pos:end="19:52">.</operator><name pos:start="19:53" pos:end="19:70">AbstractUAVMessage</name></name>;</import>
<import pos:start="20:1" pos:end="20:72">import <name pos:start="20:8" pos:end="20:71"><name pos:start="20:8" pos:end="20:10">edu</name><operator pos:start="20:11" pos:end="20:11">.</operator><name pos:start="20:12" pos:end="20:13">nd</name><operator pos:start="20:14" pos:end="20:14">.</operator><name pos:start="20:15" pos:end="20:23">dronology</name><operator pos:start="20:24" pos:end="20:24">.</operator><name pos:start="20:25" pos:end="20:32">gstation</name><operator pos:start="20:33" pos:end="20:33">.</operator><name pos:start="20:34" pos:end="20:42">connector</name><operator pos:start="20:43" pos:end="20:43">.</operator><name pos:start="20:44" pos:end="20:51">messages</name><operator pos:start="20:52" pos:end="20:52">.</operator><name pos:start="20:53" pos:end="20:71">UAVHandshakeMessage</name></name>;</import>
<import pos:start="21:1" pos:end="21:73">import <name pos:start="21:8" pos:end="21:72"><name pos:start="21:8" pos:end="21:10">edu</name><operator pos:start="21:11" pos:end="21:11">.</operator><name pos:start="21:12" pos:end="21:13">nd</name><operator pos:start="21:14" pos:end="21:14">.</operator><name pos:start="21:15" pos:end="21:23">dronology</name><operator pos:start="21:24" pos:end="21:24">.</operator><name pos:start="21:25" pos:end="21:32">gstation</name><operator pos:start="21:33" pos:end="21:33">.</operator><name pos:start="21:34" pos:end="21:42">connector</name><operator pos:start="21:43" pos:end="21:43">.</operator><name pos:start="21:44" pos:end="21:51">messages</name><operator pos:start="21:52" pos:end="21:52">.</operator><name pos:start="21:53" pos:end="21:72">UAVMonitoringMessage</name></name>;</import>
<import pos:start="22:1" pos:end="22:68">import <name pos:start="22:8" pos:end="22:67"><name pos:start="22:8" pos:end="22:10">edu</name><operator pos:start="22:11" pos:end="22:11">.</operator><name pos:start="22:12" pos:end="22:13">nd</name><operator pos:start="22:14" pos:end="22:14">.</operator><name pos:start="22:15" pos:end="22:23">dronology</name><operator pos:start="22:24" pos:end="22:24">.</operator><name pos:start="22:25" pos:end="22:32">gstation</name><operator pos:start="22:33" pos:end="22:33">.</operator><name pos:start="22:34" pos:end="22:42">connector</name><operator pos:start="22:43" pos:end="22:43">.</operator><name pos:start="22:44" pos:end="22:51">messages</name><operator pos:start="22:52" pos:end="22:52">.</operator><name pos:start="22:53" pos:end="22:67">UAVStateMessage</name></name>;</import>
<import pos:start="23:1" pos:end="23:83">import <name pos:start="23:8" pos:end="23:82"><name pos:start="23:8" pos:end="23:10">edu</name><operator pos:start="23:11" pos:end="23:11">.</operator><name pos:start="23:12" pos:end="23:13">nd</name><operator pos:start="23:14" pos:end="23:14">.</operator><name pos:start="23:15" pos:end="23:23">dronology</name><operator pos:start="23:24" pos:end="23:24">.</operator><name pos:start="23:25" pos:end="23:32">gstation</name><operator pos:start="23:33" pos:end="23:33">.</operator><name pos:start="23:34" pos:end="23:42">connector</name><operator pos:start="23:43" pos:end="23:43">.</operator><name pos:start="23:44" pos:end="23:50">service</name><operator pos:start="23:51" pos:end="23:51">.</operator><name pos:start="23:52" pos:end="23:60">connector</name><operator pos:start="23:61" pos:end="23:61">.</operator><name pos:start="23:62" pos:end="23:82">DroneConnectorService</name></name>;</import>
<import pos:start="24:1" pos:end="24:67">import <name pos:start="24:8" pos:end="24:66"><name pos:start="24:8" pos:end="24:10">edu</name><operator pos:start="24:11" pos:end="24:11">.</operator><name pos:start="24:12" pos:end="24:13">nd</name><operator pos:start="24:14" pos:end="24:14">.</operator><name pos:start="24:15" pos:end="24:23">dronology</name><operator pos:start="24:24" pos:end="24:24">.</operator><name pos:start="24:25" pos:end="24:32">services</name><operator pos:start="24:33" pos:end="24:33">.</operator><name pos:start="24:34" pos:end="24:37">core</name><operator pos:start="24:38" pos:end="24:38">.</operator><name pos:start="24:39" pos:end="24:42">info</name><operator pos:start="24:43" pos:end="24:43">.</operator><name pos:start="24:44" pos:end="24:66">DroneInitializationInfo</name></name>;</import>
<import pos:start="25:1" pos:end="25:77">import <name pos:start="25:8" pos:end="25:76"><name pos:start="25:8" pos:end="25:10">edu</name><operator pos:start="25:11" pos:end="25:11">.</operator><name pos:start="25:12" pos:end="25:13">nd</name><operator pos:start="25:14" pos:end="25:14">.</operator><name pos:start="25:15" pos:end="25:23">dronology</name><operator pos:start="25:24" pos:end="25:24">.</operator><name pos:start="25:25" pos:end="25:32">services</name><operator pos:start="25:33" pos:end="25:33">.</operator><name pos:start="25:34" pos:end="25:37">core</name><operator pos:start="25:38" pos:end="25:38">.</operator><name pos:start="25:39" pos:end="25:42">info</name><operator pos:start="25:43" pos:end="25:43">.</operator><name pos:start="25:44" pos:end="25:66">DroneInitializationInfo</name><operator pos:start="25:67" pos:end="25:67">.</operator><name pos:start="25:68" pos:end="25:76">DroneMode</name></name>;</import>
<import pos:start="26:1" pos:end="26:69">import <name pos:start="26:8" pos:end="26:68"><name pos:start="26:8" pos:end="26:10">edu</name><operator pos:start="26:11" pos:end="26:11">.</operator><name pos:start="26:12" pos:end="26:13">nd</name><operator pos:start="26:14" pos:end="26:14">.</operator><name pos:start="26:15" pos:end="26:23">dronology</name><operator pos:start="26:24" pos:end="26:24">.</operator><name pos:start="26:25" pos:end="26:32">services</name><operator pos:start="26:33" pos:end="26:33">.</operator><name pos:start="26:34" pos:end="26:37">core</name><operator pos:start="26:38" pos:end="26:38">.</operator><name pos:start="26:39" pos:end="26:42">util</name><operator pos:start="26:43" pos:end="26:43">.</operator><name pos:start="26:44" pos:end="26:68">DronologyServiceException</name></name>;</import>
<import pos:start="27:1" pos:end="27:72">import <name pos:start="27:8" pos:end="27:71"><name pos:start="27:8" pos:end="27:10">edu</name><operator pos:start="27:11" pos:end="27:11">.</operator><name pos:start="27:12" pos:end="27:13">nd</name><operator pos:start="27:14" pos:end="27:14">.</operator><name pos:start="27:15" pos:end="27:23">dronology</name><operator pos:start="27:24" pos:end="27:24">.</operator><name pos:start="27:25" pos:end="27:32">services</name><operator pos:start="27:33" pos:end="27:33">.</operator><name pos:start="27:34" pos:end="27:42">instances</name><operator pos:start="27:43" pos:end="27:43">.</operator><name pos:start="27:44" pos:end="27:53">dronesetup</name><operator pos:start="27:54" pos:end="27:54">.</operator><name pos:start="27:55" pos:end="27:71">DroneSetupService</name></name>;</import>
<import pos:start="28:1" pos:end="28:48">import <name pos:start="28:8" pos:end="28:47"><name pos:start="28:8" pos:end="28:10">edu</name><operator pos:start="28:11" pos:end="28:11">.</operator><name pos:start="28:12" pos:end="28:13">nd</name><operator pos:start="28:14" pos:end="28:14">.</operator><name pos:start="28:15" pos:end="28:23">dronology</name><operator pos:start="28:24" pos:end="28:24">.</operator><name pos:start="28:25" pos:end="28:28">util</name><operator pos:start="28:29" pos:end="28:29">.</operator><name pos:start="28:30" pos:end="28:47">NamedThreadFactory</name></name>;</import>
<import pos:start="29:1" pos:end="29:30">import <name pos:start="29:8" pos:end="29:29"><name pos:start="29:8" pos:end="29:10">net</name><operator pos:start="29:11" pos:end="29:11">.</operator><name pos:start="29:12" pos:end="29:13">mv</name><operator pos:start="29:14" pos:end="29:14">.</operator><name pos:start="29:15" pos:end="29:21">logging</name><operator pos:start="29:22" pos:end="29:22">.</operator><name pos:start="29:23" pos:end="29:29">ILogger</name></name>;</import>
<import pos:start="30:1" pos:end="30:37">import <name pos:start="30:8" pos:end="30:36"><name pos:start="30:8" pos:end="30:10">net</name><operator pos:start="30:11" pos:end="30:11">.</operator><name pos:start="30:12" pos:end="30:13">mv</name><operator pos:start="30:14" pos:end="30:14">.</operator><name pos:start="30:15" pos:end="30:21">logging</name><operator pos:start="30:22" pos:end="30:22">.</operator><name pos:start="30:23" pos:end="30:36">LoggerProvider</name></name>;</import>

<comment type="block" format="javadoc" pos:start="32:1" pos:end="39:3">/**
 * The {@link DispatchQueueManager} handles both &lt;i&gt;incoming&lt;/i&gt; and &lt;i&gt;outgoing&lt;/i&gt; queues. &lt;/br&gt;
 * Incoming queues contain {@link UAVState} received from the UAV to be dispatched to the {@link PhysicalDrone}.&lt;br&gt;
 * The outgoing queue contains {@link IDroneCommand}s being sent to the UAV.
 * 
 * @author Michael Vierhauser
 *
 */</comment>
<class pos:start="40:1" pos:end="226:1"><annotation pos:start="40:1" pos:end="40:29">@<name pos:start="40:2" pos:end="40:17">SuppressWarnings</name><argument_list pos:start="40:18" pos:end="40:29">(<argument pos:start="40:19" pos:end="40:28"><expr pos:start="40:19" pos:end="40:28"><literal type="string" pos:start="40:19" pos:end="40:28">"rawtypes"</literal></expr></argument>)</argument_list></annotation>
<specifier pos:start="41:1" pos:end="41:6">public</specifier> class <name pos:start="41:14" pos:end="41:33">DispatchQueueManager</name> <block pos:start="41:35" pos:end="226:1">{

	<decl_stmt pos:start="43:9" pos:end="43:99"><decl pos:start="43:9" pos:end="43:98"><type pos:start="43:9" pos:end="43:36"><specifier pos:start="43:9" pos:end="43:15">private</specifier> <specifier pos:start="43:17" pos:end="43:22">static</specifier> <specifier pos:start="43:24" pos:end="43:28">final</specifier> <name pos:start="43:30" pos:end="43:36">ILogger</name></type> <name pos:start="43:38" pos:end="43:43">LOGGER</name> <init pos:start="43:45" pos:end="43:98">= <expr pos:start="43:47" pos:end="43:98"><call pos:start="43:47" pos:end="43:98"><name pos:start="43:47" pos:end="43:70"><name pos:start="43:47" pos:end="43:60">LoggerProvider</name><operator pos:start="43:61" pos:end="43:61">.</operator><name pos:start="43:62" pos:end="43:70">getLogger</name></name><argument_list pos:start="43:71" pos:end="43:98">(<argument pos:start="43:72" pos:end="43:97"><expr pos:start="43:72" pos:end="43:97"><name pos:start="43:72" pos:end="43:97"><name pos:start="43:72" pos:end="43:91">DispatchQueueManager</name><operator pos:start="43:92" pos:end="43:92">.</operator><name pos:start="43:93" pos:end="43:97">class</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

	<decl_stmt pos:start="45:9" pos:end="45:50"><decl pos:start="45:9" pos:end="45:49"><type pos:start="45:9" pos:end="45:32"><specifier pos:start="45:9" pos:end="45:15">private</specifier> <specifier pos:start="45:17" pos:end="45:22">static</specifier> <specifier pos:start="45:24" pos:end="45:28">final</specifier> <name pos:start="45:30" pos:end="45:32">int</name></type> <name pos:start="45:34" pos:end="45:44">NUM_THREADS</name> <init pos:start="45:46" pos:end="45:49">= <expr pos:start="45:48" pos:end="45:49"><literal type="number" pos:start="45:48" pos:end="45:49">20</literal></expr></init></decl>;</decl_stmt>
	<decl_stmt pos:start="46:9" pos:end="47:68"><decl pos:start="46:9" pos:end="47:67"><type pos:start="46:9" pos:end="46:44"><specifier pos:start="46:9" pos:end="46:15">private</specifier> <specifier pos:start="46:17" pos:end="46:22">static</specifier> <specifier pos:start="46:24" pos:end="46:28">final</specifier> <name pos:start="46:30" pos:end="46:44">ExecutorService</name></type> <name pos:start="46:46" pos:end="46:61">SERVICE_EXECUTOR</name> <init pos:start="46:63" pos:end="47:67">= <expr pos:start="46:65" pos:end="47:67"><call pos:start="46:65" pos:end="47:67"><name pos:start="46:65" pos:end="46:92"><name pos:start="46:65" pos:end="46:73">Executors</name><operator pos:start="46:74" pos:end="46:74">.</operator><name pos:start="46:75" pos:end="46:92">newFixedThreadPool</name></name><argument_list pos:start="46:93" pos:end="47:67">(<argument pos:start="46:94" pos:end="46:104"><expr pos:start="46:94" pos:end="46:104"><name pos:start="46:94" pos:end="46:104">NUM_THREADS</name></expr></argument>,
			<argument pos:start="47:25" pos:end="47:66"><expr pos:start="47:25" pos:end="47:66"><operator pos:start="47:25" pos:end="47:27">new</operator> <call pos:start="47:29" pos:end="47:66"><name pos:start="47:29" pos:end="47:46">NamedThreadFactory</name><argument_list pos:start="47:47" pos:end="47:66">(<argument pos:start="47:48" pos:end="47:65"><expr pos:start="47:48" pos:end="47:65"><literal type="string" pos:start="47:48" pos:end="47:65">"Dispatch-Threads"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

	<decl_stmt pos:start="49:9" pos:end="49:59"><decl pos:start="49:9" pos:end="49:58"><type pos:start="49:9" pos:end="49:36"><specifier pos:start="49:9" pos:end="49:15">private</specifier> <specifier pos:start="49:17" pos:end="49:22">static</specifier> <specifier pos:start="49:24" pos:end="49:28">final</specifier> <name pos:start="49:30" pos:end="49:36">boolean</name></type> <name pos:start="49:38" pos:end="49:51">USE_MONITORING</name> <init pos:start="49:53" pos:end="49:58">= <expr pos:start="49:55" pos:end="49:58"><literal type="boolean" pos:start="49:55" pos:end="49:58">true</literal></expr></init></decl>;</decl_stmt>

	<decl_stmt pos:start="51:9" pos:end="51:92"><decl pos:start="51:9" pos:end="51:91"><type pos:start="51:9" pos:end="51:54"><name pos:start="51:9" pos:end="51:54"><name pos:start="51:9" pos:end="51:11">Map</name><argument_list type="generic" pos:start="51:12" pos:end="51:54">&lt;<argument pos:start="51:13" pos:end="51:18"><name pos:start="51:13" pos:end="51:18">String</name></argument>, <argument pos:start="51:21" pos:end="51:53"><name pos:start="51:21" pos:end="51:53"><name pos:start="51:21" pos:end="51:33">BlockingQueue</name><argument_list type="generic" pos:start="51:34" pos:end="51:53">&lt;<argument pos:start="51:35" pos:end="51:52"><name pos:start="51:35" pos:end="51:52">AbstractUAVMessage</name></argument>&gt;</argument_list></name></argument>&gt;</argument_list></name></type> <name pos:start="51:56" pos:end="51:63">queueMap</name> <init pos:start="51:65" pos:end="51:91">= <expr pos:start="51:67" pos:end="51:91"><operator pos:start="51:67" pos:end="51:69">new</operator> <call pos:start="51:71" pos:end="51:91"><name pos:start="51:71" pos:end="51:89"><name pos:start="51:71" pos:end="51:87">ConcurrentHashMap</name><argument_list type="generic" pos:start="51:88" pos:end="51:89">&lt;&gt;</argument_list></name><argument_list pos:start="51:90" pos:end="51:91">()</argument_list></call></expr></init></decl>;</decl_stmt>
	<decl_stmt pos:start="52:9" pos:end="52:57"><decl pos:start="52:9" pos:end="52:56"><type pos:start="52:9" pos:end="52:20"><name pos:start="52:9" pos:end="52:20"><name pos:start="52:9" pos:end="52:12">List</name><argument_list type="generic" pos:start="52:13" pos:end="52:20">&lt;<argument pos:start="52:14" pos:end="52:19"><name pos:start="52:14" pos:end="52:19">Future</name></argument>&gt;</argument_list></name></type> <name pos:start="52:22" pos:end="52:36">dispatchThreads</name> <init pos:start="52:38" pos:end="52:56">= <expr pos:start="52:40" pos:end="52:56"><operator pos:start="52:40" pos:end="52:42">new</operator> <call pos:start="52:44" pos:end="52:56"><name pos:start="52:44" pos:end="52:54"><name pos:start="52:44" pos:end="52:52">ArrayList</name><argument_list type="generic" pos:start="52:53" pos:end="52:54">&lt;&gt;</argument_list></name><argument_list pos:start="52:55" pos:end="52:56">()</argument_list></call></expr></init></decl>;</decl_stmt>

	<decl_stmt pos:start="54:9" pos:end="54:99"><decl pos:start="54:9" pos:end="54:98"><type pos:start="54:9" pos:end="54:44"><specifier pos:start="54:9" pos:end="54:15">private</specifier> <name pos:start="54:17" pos:end="54:44"><name pos:start="54:17" pos:end="54:29">BlockingQueue</name><argument_list type="generic" pos:start="54:30" pos:end="54:44">&lt;<argument pos:start="54:31" pos:end="54:43"><name pos:start="54:31" pos:end="54:43">IDroneCommand</name></argument>&gt;</argument_list></name></type> <name pos:start="54:46" pos:end="54:65">outgoingCommandQueue</name> <init pos:start="54:67" pos:end="54:98">= <expr pos:start="54:69" pos:end="54:98"><operator pos:start="54:69" pos:end="54:71">new</operator> <call pos:start="54:73" pos:end="54:98"><name pos:start="54:73" pos:end="54:93"><name pos:start="54:73" pos:end="54:91">LinkedBlockingDeque</name><argument_list type="generic" pos:start="54:92" pos:end="54:93">&lt;&gt;</argument_list></name><argument_list pos:start="54:94" pos:end="54:98">(<argument pos:start="54:95" pos:end="54:97"><expr pos:start="54:95" pos:end="54:97"><literal type="number" pos:start="54:95" pos:end="54:97">100</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<decl_stmt pos:start="55:9" pos:end="55:99"><decl pos:start="55:9" pos:end="55:98"><type pos:start="55:9" pos:end="55:49"><specifier pos:start="55:9" pos:end="55:15">private</specifier> <name pos:start="55:17" pos:end="55:49"><name pos:start="55:17" pos:end="55:29">BlockingQueue</name><argument_list type="generic" pos:start="55:30" pos:end="55:49">&lt;<argument pos:start="55:31" pos:end="55:48"><name pos:start="55:31" pos:end="55:48">AbstractUAVMessage</name></argument>&gt;</argument_list></name></type> <name pos:start="55:51" pos:end="55:65">monitoringQueue</name> <init pos:start="55:67" pos:end="55:98">= <expr pos:start="55:69" pos:end="55:98"><operator pos:start="55:69" pos:end="55:71">new</operator> <call pos:start="55:73" pos:end="55:98"><name pos:start="55:73" pos:end="55:93"><name pos:start="55:73" pos:end="55:91">LinkedBlockingDeque</name><argument_list type="generic" pos:start="55:92" pos:end="55:93">&lt;&gt;</argument_list></name><argument_list pos:start="55:94" pos:end="55:98">(<argument pos:start="55:95" pos:end="55:97"><expr pos:start="55:95" pos:end="55:97"><literal type="number" pos:start="55:95" pos:end="55:97">100</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

	<decl_stmt pos:start="57:9" pos:end="57:45"><decl pos:start="57:9" pos:end="57:44"><type pos:start="57:9" pos:end="57:28"><specifier pos:start="57:9" pos:end="57:15">private</specifier> <specifier pos:start="57:17" pos:end="57:21">final</specifier> <name pos:start="57:23" pos:end="57:28">String</name></type> <name pos:start="57:30" pos:end="57:44">groundstationid</name></decl>;</decl_stmt>

	<function pos:start="59:9" pos:end="61:9"><type pos:start="59:9" pos:end="59:21"><specifier pos:start="59:9" pos:end="59:14">public</specifier> <name pos:start="59:16" pos:end="59:21">String</name></type> <name pos:start="59:23" pos:end="59:40">getGroundstationid</name><parameter_list pos:start="59:41" pos:end="59:42">()</parameter_list> <block pos:start="59:44" pos:end="61:9">{<block_content pos:start="60:17" pos:end="60:39">
		<return pos:start="60:17" pos:end="60:39">return <expr pos:start="60:24" pos:end="60:38"><name pos:start="60:24" pos:end="60:38">groundstationid</name></expr>;</return>
	</block_content>}</block></function>

	<decl_stmt pos:start="63:9" pos:end="63:46"><decl pos:start="63:9" pos:end="63:45"><type pos:start="63:9" pos:end="63:35"><specifier pos:start="63:9" pos:end="63:15">private</specifier> <name pos:start="63:17" pos:end="63:35">IUAVSafetyValidator</name></type> <name pos:start="63:37" pos:end="63:45">validator</name></decl>;</decl_stmt>

	<constructor pos:start="65:9" pos:end="70:9"><specifier pos:start="65:9" pos:end="65:14">public</specifier> <name pos:start="65:16" pos:end="65:35">DispatchQueueManager</name><parameter_list pos:start="65:36" pos:end="65:59">(<parameter pos:start="65:37" pos:end="65:58"><decl pos:start="65:37" pos:end="65:58"><type pos:start="65:37" pos:end="65:42"><name pos:start="65:37" pos:end="65:42">String</name></type> <name pos:start="65:44" pos:end="65:58">groundstationid</name></decl></parameter>)</parameter_list> <block pos:start="65:61" pos:end="70:9">{<block_content pos:start="66:17" pos:end="69:17">
		<expr_stmt pos:start="66:17" pos:end="66:55"><expr pos:start="66:17" pos:end="66:54"><name pos:start="66:17" pos:end="66:36"><name pos:start="66:17" pos:end="66:20">this</name><operator pos:start="66:21" pos:end="66:21">.</operator><name pos:start="66:22" pos:end="66:36">groundstationid</name></name> <operator pos:start="66:38" pos:end="66:38">=</operator> <name pos:start="66:40" pos:end="66:54">groundstationid</name></expr>;</expr_stmt>
		<if_stmt pos:start="67:17" pos:end="69:17"><if pos:start="67:17" pos:end="69:17">if <condition pos:start="67:20" pos:end="67:35">(<expr pos:start="67:21" pos:end="67:34"><name pos:start="67:21" pos:end="67:34">USE_MONITORING</name></expr>)</condition> <block pos:start="67:37" pos:end="69:17">{<block_content pos:start="68:25" pos:end="68:72">
			<expr_stmt pos:start="68:25" pos:end="68:72"><expr pos:start="68:25" pos:end="68:71"><call pos:start="68:25" pos:end="68:71"><name pos:start="68:25" pos:end="68:54">createMonitoringDispatchThread</name><argument_list pos:start="68:55" pos:end="68:71">(<argument pos:start="68:56" pos:end="68:70"><expr pos:start="68:56" pos:end="68:70"><name pos:start="68:56" pos:end="68:70">monitoringQueue</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		</block_content>}</block></if></if_stmt>
	</block_content>}</block></constructor> 

	<function pos:start="72:9" pos:end="93:9"><type pos:start="72:9" pos:end="72:19"><specifier pos:start="72:9" pos:end="72:14">public</specifier> <name pos:start="72:16" pos:end="72:19">void</name></type> <name pos:start="72:21" pos:end="72:41">postDroneStatusUpdate</name><parameter_list pos:start="72:42" pos:end="72:82">(<parameter pos:start="72:43" pos:end="72:51"><decl pos:start="72:43" pos:end="72:51"><type pos:start="72:43" pos:end="72:51"><name pos:start="72:43" pos:end="72:48">String</name></type> <name pos:start="72:50" pos:end="72:51">id</name></decl></parameter>, <parameter pos:start="72:54" pos:end="72:81"><decl pos:start="72:54" pos:end="72:81"><type pos:start="72:54" pos:end="72:81"><name pos:start="72:54" pos:end="72:74"><name pos:start="72:54" pos:end="72:71">AbstractUAVMessage</name><argument_list type="generic" pos:start="72:72" pos:end="72:74">&lt;<argument pos:start="72:73" pos:end="72:73"><name pos:start="72:73" pos:end="72:73">?</name></argument>&gt;</argument_list></name></type> <name pos:start="72:76" pos:end="72:81">status</name></decl></parameter>)</parameter_list> <block pos:start="72:84" pos:end="93:9">{<block_content pos:start="73:17" pos:end="92:17">
		<try pos:start="73:17" pos:end="92:17">try <block pos:start="73:21" pos:end="90:17">{<block_content pos:start="74:25" pos:end="88:25">
			<synchronized pos:start="74:25" pos:end="88:25">synchronized <init pos:start="74:38" pos:end="74:47">(<expr pos:start="74:39" pos:end="74:46"><name pos:start="74:39" pos:end="74:46">queueMap</name></expr>)</init> <block pos:start="74:49" pos:end="88:25">{<block_content pos:start="75:33" pos:end="87:33">
				<decl_stmt pos:start="75:33" pos:end="75:56"><decl pos:start="75:33" pos:end="75:55"><type pos:start="75:33" pos:end="75:39"><name pos:start="75:33" pos:end="75:39">boolean</name></type> <name pos:start="75:41" pos:end="75:47">success</name> <init pos:start="75:49" pos:end="75:55">= <expr pos:start="75:51" pos:end="75:55"><literal type="boolean" pos:start="75:51" pos:end="75:55">false</literal></expr></init></decl>;</decl_stmt>
				<if_stmt pos:start="76:33" pos:end="81:33"><if pos:start="76:33" pos:end="78:33">if <condition pos:start="76:36" pos:end="76:61">(<expr pos:start="76:37" pos:end="76:60"><call pos:start="76:37" pos:end="76:60"><name pos:start="76:37" pos:end="76:56"><name pos:start="76:37" pos:end="76:44">queueMap</name><operator pos:start="76:45" pos:end="76:45">.</operator><name pos:start="76:46" pos:end="76:56">containsKey</name></name><argument_list pos:start="76:57" pos:end="76:60">(<argument pos:start="76:58" pos:end="76:59"><expr pos:start="76:58" pos:end="76:59"><name pos:start="76:58" pos:end="76:59">id</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="76:63" pos:end="78:33">{<block_content pos:start="77:41" pos:end="77:81">
					<expr_stmt pos:start="77:41" pos:end="77:81"><expr pos:start="77:41" pos:end="77:80"><name pos:start="77:41" pos:end="77:47">success</name> <operator pos:start="77:49" pos:end="77:49">=</operator> <call pos:start="77:51" pos:end="77:66"><name pos:start="77:51" pos:end="77:62"><name pos:start="77:51" pos:end="77:58">queueMap</name><operator pos:start="77:59" pos:end="77:59">.</operator><name pos:start="77:60" pos:end="77:62">get</name></name><argument_list pos:start="77:63" pos:end="77:66">(<argument pos:start="77:64" pos:end="77:65"><expr pos:start="77:64" pos:end="77:65"><name pos:start="77:64" pos:end="77:65">id</name></expr></argument>)</argument_list></call><operator pos:start="77:67" pos:end="77:67">.</operator><call pos:start="77:68" pos:end="77:80"><name pos:start="77:68" pos:end="77:72">offer</name><argument_list pos:start="77:73" pos:end="77:80">(<argument pos:start="77:74" pos:end="77:79"><expr pos:start="77:74" pos:end="77:79"><name pos:start="77:74" pos:end="77:79">status</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				</block_content>}</block></if> <else pos:start="78:35" pos:end="81:33">else <block pos:start="78:40" pos:end="81:33">{<block_content pos:start="79:41" pos:end="80:47">
					<expr_stmt pos:start="79:41" pos:end="79:117"><expr pos:start="79:41" pos:end="79:116"><call pos:start="79:41" pos:end="79:116"><name pos:start="79:41" pos:end="79:53"><name pos:start="79:41" pos:end="79:46">LOGGER</name><operator pos:start="79:47" pos:end="79:47">.</operator><name pos:start="79:48" pos:end="79:53">hwInfo</name></name><argument_list pos:start="79:54" pos:end="79:116">(<argument pos:start="79:55" pos:end="79:115"><expr pos:start="79:55" pos:end="79:115"><literal type="string" pos:start="79:55" pos:end="79:72">"No uav with id '"</literal> <operator pos:start="79:74" pos:end="79:74">+</operator> <name pos:start="79:76" pos:end="79:77">id</name> <operator pos:start="79:79" pos:end="79:79">+</operator> <literal type="string" pos:start="79:81" pos:end="79:115">"' registered - discarding message"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<return pos:start="80:41" pos:end="80:47">return;</return>
				</block_content>}</block></else></if_stmt>
				<if_stmt pos:start="82:33" pos:end="84:33"><if pos:start="82:33" pos:end="84:33">if <condition pos:start="82:36" pos:end="82:45">(<expr pos:start="82:37" pos:end="82:44"><operator pos:start="82:37" pos:end="82:37">!</operator><name pos:start="82:38" pos:end="82:44">success</name></expr>)</condition> <block pos:start="82:47" pos:end="84:33">{<block_content pos:start="83:41" pos:end="83:88">
					<expr_stmt pos:start="83:41" pos:end="83:88"><expr pos:start="83:41" pos:end="83:87"><call pos:start="83:41" pos:end="83:87"><name pos:start="83:41" pos:end="83:54"><name pos:start="83:41" pos:end="83:46">LOGGER</name><operator pos:start="83:47" pos:end="83:47">.</operator><name pos:start="83:48" pos:end="83:54">hwFatal</name></name><argument_list pos:start="83:55" pos:end="83:87">(<argument pos:start="83:56" pos:end="83:86"><expr pos:start="83:56" pos:end="83:86"><literal type="string" pos:start="83:56" pos:end="83:75">"Buffer overflow! '"</literal> <operator pos:start="83:77" pos:end="83:77">+</operator> <name pos:start="83:79" pos:end="83:80">id</name> <operator pos:start="83:82" pos:end="83:82">+</operator> <literal type="string" pos:start="83:84" pos:end="83:86">"'"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				</block_content>}</block></if></if_stmt>
				<if_stmt pos:start="85:33" pos:end="87:33"><if pos:start="85:33" pos:end="87:33">if <condition pos:start="85:36" pos:end="85:70">(<expr pos:start="85:37" pos:end="85:69"><name pos:start="85:37" pos:end="85:42">status</name> <operator pos:start="85:44" pos:end="85:53">instanceof</operator> <name pos:start="85:55" pos:end="85:69">UAVStateMessage</name></expr>)</condition> <block pos:start="85:72" pos:end="87:33">{<block_content pos:start="86:41" pos:end="86:85">
					<expr_stmt pos:start="86:41" pos:end="86:85"><expr pos:start="86:41" pos:end="86:84"><call pos:start="86:41" pos:end="86:84"><name pos:start="86:41" pos:end="86:58">forwardToValidator</name><argument_list pos:start="86:59" pos:end="86:84">(<argument pos:start="86:60" pos:end="86:83"><expr pos:start="86:60" pos:end="86:83"><operator pos:start="86:60" pos:end="86:60">(</operator><name pos:start="86:61" pos:end="86:75">UAVStateMessage</name><operator pos:start="86:76" pos:end="86:76">)</operator> <name pos:start="86:78" pos:end="86:83">status</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				</block_content>}</block></if></if_stmt>
			</block_content>}</block></synchronized>

		</block_content>}</block> <catch pos:start="90:19" pos:end="92:17">catch <parameter_list pos:start="90:25" pos:end="90:37">(<parameter pos:start="90:26" pos:end="90:36"><decl pos:start="90:26" pos:end="90:36"><type pos:start="90:26" pos:end="90:36"><name pos:start="90:26" pos:end="90:34">Throwable</name></type> <name pos:start="90:36" pos:end="90:36">t</name></decl></parameter>)</parameter_list> <block pos:start="90:39" pos:end="92:17">{<block_content pos:start="91:25" pos:end="91:40">
			<expr_stmt pos:start="91:25" pos:end="91:40"><expr pos:start="91:25" pos:end="91:39"><call pos:start="91:25" pos:end="91:39"><name pos:start="91:25" pos:end="91:36"><name pos:start="91:25" pos:end="91:30">LOGGER</name><operator pos:start="91:31" pos:end="91:31">.</operator><name pos:start="91:32" pos:end="91:36">error</name></name><argument_list pos:start="91:37" pos:end="91:39">(<argument pos:start="91:38" pos:end="91:38"><expr pos:start="91:38" pos:end="91:38"><name pos:start="91:38" pos:end="91:38">t</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		</block_content>}</block></catch></try>
	</block_content>}</block></function>

	<function pos:start="95:9" pos:end="108:9"><type pos:start="95:9" pos:end="95:20"><specifier pos:start="95:9" pos:end="95:15">private</specifier> <name pos:start="95:17" pos:end="95:20">void</name></type> <name pos:start="95:22" pos:end="95:39">forwardToValidator</name><parameter_list pos:start="95:40" pos:end="95:63">(<parameter pos:start="95:41" pos:end="95:62"><decl pos:start="95:41" pos:end="95:62"><type pos:start="95:41" pos:end="95:55"><name pos:start="95:41" pos:end="95:55">UAVStateMessage</name></type> <name pos:start="95:57" pos:end="95:62">status</name></decl></parameter>)</parameter_list> <block pos:start="95:65" pos:end="108:9">{<block_content pos:start="96:17" pos:end="107:17">
		<try pos:start="96:17" pos:end="107:17">try <block pos:start="96:21" pos:end="105:17">{<block_content pos:start="97:25" pos:end="104:25">
			<if_stmt pos:start="97:25" pos:end="99:25"><if pos:start="97:25" pos:end="99:25">if <condition pos:start="97:28" pos:end="97:63">(<expr pos:start="97:29" pos:end="97:62"><operator pos:start="97:29" pos:end="97:29">!</operator><name pos:start="97:30" pos:end="97:62"><name pos:start="97:30" pos:end="97:47">DronologyConstants</name><operator pos:start="97:48" pos:end="97:48">.</operator><name pos:start="97:49" pos:end="97:62">USE_MONITORING</name></name></expr>)</condition> <block pos:start="97:65" pos:end="99:25">{<block_content pos:start="98:33" pos:end="98:39">
				<return pos:start="98:33" pos:end="98:39">return;</return>
			</block_content>}</block></if></if_stmt>
			<decl_stmt pos:start="100:25" pos:end="100:48"><decl pos:start="100:25" pos:end="100:47"><type pos:start="100:25" pos:end="100:31"><name pos:start="100:25" pos:end="100:31">boolean</name></type> <name pos:start="100:33" pos:end="100:39">success</name> <init pos:start="100:41" pos:end="100:47">= <expr pos:start="100:43" pos:end="100:47"><literal type="boolean" pos:start="100:43" pos:end="100:47">false</literal></expr></init></decl>;</decl_stmt>
			<expr_stmt pos:start="101:25" pos:end="101:64"><expr pos:start="101:25" pos:end="101:63"><name pos:start="101:25" pos:end="101:31">success</name> <operator pos:start="101:33" pos:end="101:33">=</operator> <call pos:start="101:35" pos:end="101:63"><name pos:start="101:35" pos:end="101:55"><name pos:start="101:35" pos:end="101:49">monitoringQueue</name><operator pos:start="101:50" pos:end="101:50">.</operator><name pos:start="101:51" pos:end="101:55">offer</name></name><argument_list pos:start="101:56" pos:end="101:63">(<argument pos:start="101:57" pos:end="101:62"><expr pos:start="101:57" pos:end="101:62"><name pos:start="101:57" pos:end="101:62">status</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<if_stmt pos:start="102:25" pos:end="104:25"><if pos:start="102:25" pos:end="104:25">if <condition pos:start="102:28" pos:end="102:37">(<expr pos:start="102:29" pos:end="102:36"><operator pos:start="102:29" pos:end="102:29">!</operator><name pos:start="102:30" pos:end="102:36">success</name></expr>)</condition> <block pos:start="102:39" pos:end="104:25">{<block_content pos:start="103:33" pos:end="103:72">
				<expr_stmt pos:start="103:33" pos:end="103:72"><expr pos:start="103:33" pos:end="103:71"><call pos:start="103:33" pos:end="103:71"><name pos:start="103:33" pos:end="103:43"><name pos:start="103:33" pos:end="103:38">LOGGER</name><operator pos:start="103:39" pos:end="103:39">.</operator><name pos:start="103:40" pos:end="103:43">warn</name></name><argument_list pos:start="103:44" pos:end="103:71">(<argument pos:start="103:45" pos:end="103:70"><expr pos:start="103:45" pos:end="103:70"><literal type="string" pos:start="103:45" pos:end="103:70">"MonitoringQueue is Full!"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			</block_content>}</block></if></if_stmt>
		</block_content>}</block> <catch pos:start="105:19" pos:end="107:17">catch <parameter_list pos:start="105:25" pos:end="105:37">(<parameter pos:start="105:26" pos:end="105:36"><decl pos:start="105:26" pos:end="105:36"><type pos:start="105:26" pos:end="105:36"><name pos:start="105:26" pos:end="105:34">Throwable</name></type> <name pos:start="105:36" pos:end="105:36">e</name></decl></parameter>)</parameter_list> <block pos:start="105:39" pos:end="107:17">{<block_content pos:start="106:25" pos:end="106:40">
			<expr_stmt pos:start="106:25" pos:end="106:40"><expr pos:start="106:25" pos:end="106:39"><call pos:start="106:25" pos:end="106:39"><name pos:start="106:25" pos:end="106:36"><name pos:start="106:25" pos:end="106:30">LOGGER</name><operator pos:start="106:31" pos:end="106:31">.</operator><name pos:start="106:32" pos:end="106:36">error</name></name><argument_list pos:start="106:37" pos:end="106:39">(<argument pos:start="106:38" pos:end="106:38"><expr pos:start="106:38" pos:end="106:38"><name pos:start="106:38" pos:end="106:38">e</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		</block_content>}</block></catch></try> 
	</block_content>}</block></function>

	<function pos:start="110:9" pos:end="120:9"><type pos:start="110:9" pos:end="110:20"><specifier pos:start="110:9" pos:end="110:15">private</specifier> <name pos:start="110:17" pos:end="110:20">void</name></type> <name pos:start="110:22" pos:end="110:37">registerNewDrone</name><parameter_list pos:start="110:38" pos:end="110:80">(<parameter pos:start="110:39" pos:end="110:50"><decl pos:start="110:39" pos:end="110:50"><type pos:start="110:39" pos:end="110:50"><name pos:start="110:39" pos:end="110:44">String</name></type> <name pos:start="110:46" pos:end="110:50">uavid</name></decl></parameter>, <parameter pos:start="110:53" pos:end="110:79"><decl pos:start="110:53" pos:end="110:79"><type pos:start="110:53" pos:end="110:79"><name pos:start="110:53" pos:end="110:71">UAVHandshakeMessage</name></type> <name pos:start="110:73" pos:end="110:79">message</name></decl></parameter>)</parameter_list> <block pos:start="110:82" pos:end="120:9">{<block_content pos:start="111:17" pos:end="118:17">
		<expr_stmt pos:start="111:17" pos:end="111:101"><expr pos:start="111:17" pos:end="111:100"><call pos:start="111:17" pos:end="111:100"><name pos:start="111:17" pos:end="111:29"><name pos:start="111:17" pos:end="111:22">LOGGER</name><operator pos:start="111:23" pos:end="111:23">.</operator><name pos:start="111:24" pos:end="111:29">hwInfo</name></name><argument_list pos:start="111:30" pos:end="111:100">(<argument pos:start="111:31" pos:end="111:99"><expr pos:start="111:31" pos:end="111:99"><literal type="string" pos:start="111:31" pos:end="111:60">"New drone registered with  '"</literal> <operator pos:start="111:62" pos:end="111:62">+</operator> <name pos:start="111:64" pos:end="111:68">uavid</name> <operator pos:start="111:70" pos:end="111:70">+</operator> <literal type="string" pos:start="111:72" pos:end="111:78">"' -&gt; "</literal> <operator pos:start="111:80" pos:end="111:80">+</operator> <call pos:start="111:82" pos:end="111:99"><name pos:start="111:82" pos:end="111:97"><name pos:start="111:82" pos:end="111:88">message</name><operator pos:start="111:89" pos:end="111:89">.</operator><name pos:start="111:90" pos:end="111:97">toString</name></name><argument_list pos:start="111:98" pos:end="111:99">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<decl_stmt pos:start="112:17" pos:end="113:83"><decl pos:start="112:17" pos:end="113:82"><type pos:start="112:17" pos:end="112:39"><name pos:start="112:17" pos:end="112:39">DroneInitializationInfo</name></type> <name pos:start="112:41" pos:end="112:44">info</name> <init pos:start="112:46" pos:end="113:82">= <expr pos:start="112:48" pos:end="113:82"><operator pos:start="112:48" pos:end="112:50">new</operator> <call pos:start="112:52" pos:end="113:82"><name pos:start="112:52" pos:end="112:74">DroneInitializationInfo</name><argument_list pos:start="112:75" pos:end="113:82">(<argument pos:start="112:76" pos:end="112:131"><expr pos:start="112:76" pos:end="112:131"><call pos:start="112:76" pos:end="112:131"><name pos:start="112:76" pos:end="112:107"><name pos:start="112:76" pos:end="112:98">PysicalDroneIdGenerator</name><operator pos:start="112:99" pos:end="112:99">.</operator><name pos:start="112:100" pos:end="112:107">generate</name></name><argument_list pos:start="112:108" pos:end="112:131">(<argument pos:start="112:109" pos:end="112:113"><expr pos:start="112:109" pos:end="112:113"><name pos:start="112:109" pos:end="112:113">uavid</name></expr></argument>, <argument pos:start="112:116" pos:end="112:130"><expr pos:start="112:116" pos:end="112:130"><name pos:start="112:116" pos:end="112:130">groundstationid</name></expr></argument>)</argument_list></call></expr></argument>,
				<argument pos:start="113:33" pos:end="113:55"><expr pos:start="113:33" pos:end="113:55"><name pos:start="113:33" pos:end="113:55"><name pos:start="113:33" pos:end="113:41">DroneMode</name><operator pos:start="113:42" pos:end="113:42">.</operator><name pos:start="113:43" pos:end="113:55">MODE_PHYSICAL</name></name></expr></argument>, <argument pos:start="113:58" pos:end="113:62"><expr pos:start="113:58" pos:end="113:62"><name pos:start="113:58" pos:end="113:62">uavid</name></expr></argument>, <argument pos:start="113:65" pos:end="113:81"><expr pos:start="113:65" pos:end="113:81"><call pos:start="113:65" pos:end="113:81"><name pos:start="113:65" pos:end="113:79"><name pos:start="113:65" pos:end="113:71">message</name><operator pos:start="113:72" pos:end="113:72">.</operator><name pos:start="113:73" pos:end="113:79">getHome</name></name><argument_list pos:start="113:80" pos:end="113:81">()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<try pos:start="114:17" pos:end="118:17">try <block pos:start="114:21" pos:end="116:17">{<block_content pos:start="115:25" pos:end="115:79">
			<expr_stmt pos:start="115:25" pos:end="115:79"><expr pos:start="115:25" pos:end="115:78"><call pos:start="115:25" pos:end="115:55"><name pos:start="115:25" pos:end="115:53"><name pos:start="115:25" pos:end="115:41">DroneSetupService</name><operator pos:start="115:42" pos:end="115:42">.</operator><name pos:start="115:43" pos:end="115:53">getInstance</name></name><argument_list pos:start="115:54" pos:end="115:55">()</argument_list></call><operator pos:start="115:56" pos:end="115:56">.</operator><call pos:start="115:57" pos:end="115:78"><name pos:start="115:57" pos:end="115:72">initializeDrones</name><argument_list pos:start="115:73" pos:end="115:78">(<argument pos:start="115:74" pos:end="115:77"><expr pos:start="115:74" pos:end="115:77"><name pos:start="115:74" pos:end="115:77">info</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		</block_content>}</block> <catch pos:start="116:19" pos:end="118:17">catch <parameter_list pos:start="116:25" pos:end="116:53">(<parameter pos:start="116:26" pos:end="116:52"><decl pos:start="116:26" pos:end="116:52"><type pos:start="116:26" pos:end="116:52"><name pos:start="116:26" pos:end="116:50">DronologyServiceException</name></type> <name pos:start="116:52" pos:end="116:52">e</name></decl></parameter>)</parameter_list> <block pos:start="116:55" pos:end="118:17">{<block_content pos:start="117:25" pos:end="117:40">
			<expr_stmt pos:start="117:25" pos:end="117:40"><expr pos:start="117:25" pos:end="117:39"><call pos:start="117:25" pos:end="117:39"><name pos:start="117:25" pos:end="117:36"><name pos:start="117:25" pos:end="117:30">LOGGER</name><operator pos:start="117:31" pos:end="117:31">.</operator><name pos:start="117:32" pos:end="117:36">error</name></name><argument_list pos:start="117:37" pos:end="117:39">(<argument pos:start="117:38" pos:end="117:38"><expr pos:start="117:38" pos:end="117:38"><name pos:start="117:38" pos:end="117:38">e</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		</block_content>}</block></catch></try>

	</block_content>}</block></function>

	<function pos:start="122:9" pos:end="141:9"><type pos:start="122:9" pos:end="122:19"><specifier pos:start="122:9" pos:end="122:14">public</specifier> <name pos:start="122:16" pos:end="122:19">void</name></type> <name pos:start="122:21" pos:end="122:40">createDispatchThread</name><parameter_list pos:start="122:41" pos:end="122:88">(<parameter pos:start="122:42" pos:end="122:50"><decl pos:start="122:42" pos:end="122:50"><type pos:start="122:42" pos:end="122:50"><name pos:start="122:42" pos:end="122:47">String</name></type> <name pos:start="122:49" pos:end="122:50">id</name></decl></parameter>, <parameter pos:start="122:53" pos:end="122:87"><decl pos:start="122:53" pos:end="122:87"><type pos:start="122:53" pos:end="122:87"><name pos:start="122:53" pos:end="122:78">IUAVPropertyUpdateNotifier</name></type> <name pos:start="122:80" pos:end="122:87">listener</name></decl></parameter>)</parameter_list> <block pos:start="122:90" pos:end="141:9">{<block_content pos:start="123:17" pos:end="140:17">
		<try pos:start="123:17" pos:end="140:17">try <block pos:start="123:21" pos:end="138:17">{<block_content pos:start="124:25" pos:end="137:49">
			<decl_stmt pos:start="124:25" pos:end="124:64"><decl pos:start="124:25" pos:end="124:63"><type pos:start="124:25" pos:end="124:57"><name pos:start="124:25" pos:end="124:57"><name pos:start="124:25" pos:end="124:37">BlockingQueue</name><argument_list type="generic" pos:start="124:38" pos:end="124:57">&lt;<argument pos:start="124:39" pos:end="124:56"><name pos:start="124:39" pos:end="124:56">AbstractUAVMessage</name></argument>&gt;</argument_list></name></type> <name pos:start="124:59" pos:end="124:63">queue</name></decl>;</decl_stmt>
			<synchronized pos:start="125:25" pos:end="132:25">synchronized <init pos:start="125:38" pos:end="125:47">(<expr pos:start="125:39" pos:end="125:46"><name pos:start="125:39" pos:end="125:46">queueMap</name></expr>)</init> <block pos:start="125:49" pos:end="132:25">{<block_content pos:start="126:33" pos:end="131:33">
				<if_stmt pos:start="126:33" pos:end="131:33"><if pos:start="126:33" pos:end="128:33">if <condition pos:start="126:36" pos:end="126:61">(<expr pos:start="126:37" pos:end="126:60"><call pos:start="126:37" pos:end="126:60"><name pos:start="126:37" pos:end="126:56"><name pos:start="126:37" pos:end="126:44">queueMap</name><operator pos:start="126:45" pos:end="126:45">.</operator><name pos:start="126:46" pos:end="126:56">containsKey</name></name><argument_list pos:start="126:57" pos:end="126:60">(<argument pos:start="126:58" pos:end="126:59"><expr pos:start="126:58" pos:end="126:59"><name pos:start="126:58" pos:end="126:59">id</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="126:63" pos:end="128:33">{<block_content pos:start="127:41" pos:end="127:65">
					<expr_stmt pos:start="127:41" pos:end="127:65"><expr pos:start="127:41" pos:end="127:64"><name pos:start="127:41" pos:end="127:45">queue</name> <operator pos:start="127:47" pos:end="127:47">=</operator> <call pos:start="127:49" pos:end="127:64"><name pos:start="127:49" pos:end="127:60"><name pos:start="127:49" pos:end="127:56">queueMap</name><operator pos:start="127:57" pos:end="127:57">.</operator><name pos:start="127:58" pos:end="127:60">get</name></name><argument_list pos:start="127:61" pos:end="127:64">(<argument pos:start="127:62" pos:end="127:63"><expr pos:start="127:62" pos:end="127:63"><name pos:start="127:62" pos:end="127:63">id</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				</block_content>}</block></if> <else pos:start="128:35" pos:end="131:33">else <block pos:start="128:40" pos:end="131:33">{<block_content pos:start="129:41" pos:end="130:64">
					<expr_stmt pos:start="129:41" pos:end="129:115"><expr pos:start="129:41" pos:end="129:114"><name pos:start="129:41" pos:end="129:45">queue</name> <operator pos:start="129:47" pos:end="129:47">=</operator> <operator pos:start="129:49" pos:end="129:51">new</operator> <call pos:start="129:53" pos:end="129:114"><name pos:start="129:53" pos:end="129:73"><name pos:start="129:53" pos:end="129:71">LinkedBlockingQueue</name><argument_list type="generic" pos:start="129:72" pos:end="129:73">&lt;&gt;</argument_list></name><argument_list pos:start="129:74" pos:end="129:114">(<argument pos:start="129:75" pos:end="129:113"><expr pos:start="129:75" pos:end="129:113"><name pos:start="129:75" pos:end="129:113"><name pos:start="129:75" pos:end="129:92">DronologyConstants</name><operator pos:start="129:93" pos:end="129:93">.</operator><name pos:start="129:94" pos:end="129:113">NR_MESSAGES_IN_QUEUE</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<expr_stmt pos:start="130:41" pos:end="130:64"><expr pos:start="130:41" pos:end="130:63"><call pos:start="130:41" pos:end="130:63"><name pos:start="130:41" pos:end="130:52"><name pos:start="130:41" pos:end="130:48">queueMap</name><operator pos:start="130:49" pos:end="130:49">.</operator><name pos:start="130:50" pos:end="130:52">put</name></name><argument_list pos:start="130:53" pos:end="130:63">(<argument pos:start="130:54" pos:end="130:55"><expr pos:start="130:54" pos:end="130:55"><name pos:start="130:54" pos:end="130:55">id</name></expr></argument>, <argument pos:start="130:58" pos:end="130:62"><expr pos:start="130:58" pos:end="130:62"><name pos:start="130:58" pos:end="130:62">queue</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				</block_content>}</block></else></if_stmt>
			</block_content>}</block></synchronized>
			<decl_stmt pos:start="133:25" pos:end="133:96"><decl pos:start="133:25" pos:end="133:95"><type pos:start="133:25" pos:end="133:44"><name pos:start="133:25" pos:end="133:44">StatusDispatchThread</name></type> <name pos:start="133:46" pos:end="133:51">thread</name> <init pos:start="133:53" pos:end="133:95">= <expr pos:start="133:55" pos:end="133:95"><operator pos:start="133:55" pos:end="133:57">new</operator> <call pos:start="133:59" pos:end="133:95"><name pos:start="133:59" pos:end="133:78">StatusDispatchThread</name><argument_list pos:start="133:79" pos:end="133:95">(<argument pos:start="133:80" pos:end="133:84"><expr pos:start="133:80" pos:end="133:84"><name pos:start="133:80" pos:end="133:84">queue</name></expr></argument>, <argument pos:start="133:87" pos:end="133:94"><expr pos:start="133:87" pos:end="133:94"><name pos:start="133:87" pos:end="133:94">listener</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

			<expr_stmt pos:start="135:25" pos:end="135:90"><expr pos:start="135:25" pos:end="135:89"><call pos:start="135:25" pos:end="135:89"><name pos:start="135:25" pos:end="135:37"><name pos:start="135:25" pos:end="135:30">LOGGER</name><operator pos:start="135:31" pos:end="135:31">.</operator><name pos:start="135:32" pos:end="135:37">hwInfo</name></name><argument_list pos:start="135:38" pos:end="135:89">(<argument pos:start="135:39" pos:end="135:88"><expr pos:start="135:39" pos:end="135:88"><literal type="string" pos:start="135:39" pos:end="135:69">"New Dispatch-Thread for UAV '"</literal> <operator pos:start="135:71" pos:end="135:71">+</operator> <name pos:start="135:73" pos:end="135:74">id</name> <operator pos:start="135:76" pos:end="135:76">+</operator> <literal type="string" pos:start="135:78" pos:end="135:88">"' created"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<decl_stmt pos:start="136:25" pos:end="136:77"><decl pos:start="136:25" pos:end="136:76"><type pos:start="136:25" pos:end="136:38"><name pos:start="136:25" pos:end="136:38"><name pos:start="136:25" pos:end="136:30">Future</name><argument_list type="generic" pos:start="136:31" pos:end="136:38">&lt;<argument pos:start="136:32" pos:end="136:37"><name pos:start="136:32" pos:end="136:37">Object</name></argument>&gt;</argument_list></name></type> <name pos:start="136:40" pos:end="136:42">ftr</name> <init pos:start="136:44" pos:end="136:76">= <expr pos:start="136:46" pos:end="136:76"><call pos:start="136:46" pos:end="136:76"><name pos:start="136:46" pos:end="136:68"><name pos:start="136:46" pos:end="136:61">SERVICE_EXECUTOR</name><operator pos:start="136:62" pos:end="136:62">.</operator><name pos:start="136:63" pos:end="136:68">submit</name></name><argument_list pos:start="136:69" pos:end="136:76">(<argument pos:start="136:70" pos:end="136:75"><expr pos:start="136:70" pos:end="136:75"><name pos:start="136:70" pos:end="136:75">thread</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<expr_stmt pos:start="137:25" pos:end="137:49"><expr pos:start="137:25" pos:end="137:48"><call pos:start="137:25" pos:end="137:48"><name pos:start="137:25" pos:end="137:43"><name pos:start="137:25" pos:end="137:39">dispatchThreads</name><operator pos:start="137:40" pos:end="137:40">.</operator><name pos:start="137:41" pos:end="137:43">add</name></name><argument_list pos:start="137:44" pos:end="137:48">(<argument pos:start="137:45" pos:end="137:47"><expr pos:start="137:45" pos:end="137:47"><name pos:start="137:45" pos:end="137:47">ftr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		</block_content>}</block> <catch pos:start="138:19" pos:end="140:17">catch <parameter_list pos:start="138:25" pos:end="138:37">(<parameter pos:start="138:26" pos:end="138:36"><decl pos:start="138:26" pos:end="138:36"><type pos:start="138:26" pos:end="138:36"><name pos:start="138:26" pos:end="138:34">Throwable</name></type> <name pos:start="138:36" pos:end="138:36">t</name></decl></parameter>)</parameter_list> <block pos:start="138:39" pos:end="140:17">{<block_content pos:start="139:25" pos:end="139:40">
			<expr_stmt pos:start="139:25" pos:end="139:40"><expr pos:start="139:25" pos:end="139:39"><call pos:start="139:25" pos:end="139:39"><name pos:start="139:25" pos:end="139:36"><name pos:start="139:25" pos:end="139:30">LOGGER</name><operator pos:start="139:31" pos:end="139:31">.</operator><name pos:start="139:32" pos:end="139:36">error</name></name><argument_list pos:start="139:37" pos:end="139:39">(<argument pos:start="139:38" pos:end="139:38"><expr pos:start="139:38" pos:end="139:38"><name pos:start="139:38" pos:end="139:38">t</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		</block_content>}</block></catch></try>
	</block_content>}</block></function>

	<function pos:start="143:9" pos:end="149:9"><type pos:start="143:9" pos:end="143:20"><specifier pos:start="143:9" pos:end="143:15">private</specifier> <name pos:start="143:17" pos:end="143:20">void</name></type> <name pos:start="143:22" pos:end="143:51">createMonitoringDispatchThread</name><parameter_list pos:start="143:52" pos:end="143:92">(<parameter pos:start="143:53" pos:end="143:91"><decl pos:start="143:53" pos:end="143:91"><type pos:start="143:53" pos:end="143:85"><name pos:start="143:53" pos:end="143:85"><name pos:start="143:53" pos:end="143:65">BlockingQueue</name><argument_list type="generic" pos:start="143:66" pos:end="143:85">&lt;<argument pos:start="143:67" pos:end="143:84"><name pos:start="143:67" pos:end="143:84">AbstractUAVMessage</name></argument>&gt;</argument_list></name></type> <name pos:start="143:87" pos:end="143:91">queue</name></decl></parameter>)</parameter_list> <block pos:start="143:94" pos:end="149:9">{<block_content pos:start="144:17" pos:end="148:41">
		<decl_stmt pos:start="144:17" pos:end="144:86"><decl pos:start="144:17" pos:end="144:85"><type pos:start="144:17" pos:end="144:40"><name pos:start="144:17" pos:end="144:40">MonitoringDispatchThread</name></type> <name pos:start="144:42" pos:end="144:47">thread</name> <init pos:start="144:49" pos:end="144:85">= <expr pos:start="144:51" pos:end="144:85"><operator pos:start="144:51" pos:end="144:53">new</operator> <call pos:start="144:55" pos:end="144:85"><name pos:start="144:55" pos:end="144:78">MonitoringDispatchThread</name><argument_list pos:start="144:79" pos:end="144:85">(<argument pos:start="144:80" pos:end="144:84"><expr pos:start="144:80" pos:end="144:84"><name pos:start="144:80" pos:end="144:84">queue</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

		<expr_stmt pos:start="146:17" pos:end="146:72"><expr pos:start="146:17" pos:end="146:71"><call pos:start="146:17" pos:end="146:71"><name pos:start="146:17" pos:end="146:29"><name pos:start="146:17" pos:end="146:22">LOGGER</name><operator pos:start="146:23" pos:end="146:23">.</operator><name pos:start="146:24" pos:end="146:29">hwInfo</name></name><argument_list pos:start="146:30" pos:end="146:71">(<argument pos:start="146:31" pos:end="146:70"><expr pos:start="146:31" pos:end="146:70"><literal type="string" pos:start="146:31" pos:end="146:70">"New Monitoring Dispatch-Thread created"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<decl_stmt pos:start="147:17" pos:end="147:61"><decl pos:start="147:17" pos:end="147:60"><type pos:start="147:17" pos:end="147:22"><name pos:start="147:17" pos:end="147:22">Future</name></type> <name pos:start="147:24" pos:end="147:26">ftr</name> <init pos:start="147:28" pos:end="147:60">= <expr pos:start="147:30" pos:end="147:60"><call pos:start="147:30" pos:end="147:60"><name pos:start="147:30" pos:end="147:52"><name pos:start="147:30" pos:end="147:45">SERVICE_EXECUTOR</name><operator pos:start="147:46" pos:end="147:46">.</operator><name pos:start="147:47" pos:end="147:52">submit</name></name><argument_list pos:start="147:53" pos:end="147:60">(<argument pos:start="147:54" pos:end="147:59"><expr pos:start="147:54" pos:end="147:59"><name pos:start="147:54" pos:end="147:59">thread</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt pos:start="148:17" pos:end="148:41"><expr pos:start="148:17" pos:end="148:40"><call pos:start="148:17" pos:end="148:40"><name pos:start="148:17" pos:end="148:35"><name pos:start="148:17" pos:end="148:31">dispatchThreads</name><operator pos:start="148:32" pos:end="148:32">.</operator><name pos:start="148:33" pos:end="148:35">add</name></name><argument_list pos:start="148:36" pos:end="148:40">(<argument pos:start="148:37" pos:end="148:39"><expr pos:start="148:37" pos:end="148:39"><name pos:start="148:37" pos:end="148:39">ftr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	</block_content>}</block></function>

	<function pos:start="151:9" pos:end="163:9"><type pos:start="151:9" pos:end="151:19"><specifier pos:start="151:9" pos:end="151:14">public</specifier> <name pos:start="151:16" pos:end="151:19">void</name></type> <name pos:start="151:21" pos:end="151:28">tearDown</name><parameter_list pos:start="151:29" pos:end="151:30">()</parameter_list> <block pos:start="151:32" pos:end="163:9">{<block_content pos:start="153:17" pos:end="161:17"> 

		<expr_stmt pos:start="153:17" pos:end="153:93"><expr pos:start="153:17" pos:end="153:92"><call pos:start="153:17" pos:end="153:92"><name pos:start="153:17" pos:end="153:29"><name pos:start="153:17" pos:end="153:22">LOGGER</name><operator pos:start="153:23" pos:end="153:23">.</operator><name pos:start="153:24" pos:end="153:29">hwInfo</name></name><argument_list pos:start="153:30" pos:end="153:92">(<argument pos:start="153:31" pos:end="153:91"><expr pos:start="153:31" pos:end="153:91"><literal type="string" pos:start="153:31" pos:end="153:56">"Ground Control Station '"</literal> <operator pos:start="153:58" pos:end="153:58">+</operator> <name pos:start="153:60" pos:end="153:74">groundstationid</name> <operator pos:start="153:76" pos:end="153:76">+</operator> <literal type="string" pos:start="153:78" pos:end="153:91">"' terminated"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<try pos:start="154:17" pos:end="158:17">try <block pos:start="154:21" pos:end="156:17">{<block_content pos:start="155:25" pos:end="155:98">
			<expr_stmt pos:start="155:25" pos:end="155:98"><expr pos:start="155:25" pos:end="155:97"><call pos:start="155:25" pos:end="155:59"><name pos:start="155:25" pos:end="155:57"><name pos:start="155:25" pos:end="155:45">DroneConnectorService</name><operator pos:start="155:46" pos:end="155:46">.</operator><name pos:start="155:47" pos:end="155:57">getInstance</name></name><argument_list pos:start="155:58" pos:end="155:59">()</argument_list></call><operator pos:start="155:60" pos:end="155:60">.</operator><call pos:start="155:61" pos:end="155:97"><name pos:start="155:61" pos:end="155:80">unregisterConnection</name><argument_list pos:start="155:81" pos:end="155:97">(<argument pos:start="155:82" pos:end="155:96"><expr pos:start="155:82" pos:end="155:96"><name pos:start="155:82" pos:end="155:96">groundstationid</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		</block_content>}</block> <catch pos:start="156:19" pos:end="158:17">catch <parameter_list pos:start="156:25" pos:end="156:37">(<parameter pos:start="156:26" pos:end="156:36"><decl pos:start="156:26" pos:end="156:36"><type pos:start="156:26" pos:end="156:36"><name pos:start="156:26" pos:end="156:34">Exception</name></type> <name pos:start="156:36" pos:end="156:36">e</name></decl></parameter>)</parameter_list> <block pos:start="156:39" pos:end="158:17">{<block_content pos:start="157:25" pos:end="157:113">
			<expr_stmt pos:start="157:25" pos:end="157:113"><expr pos:start="157:25" pos:end="157:112"><call pos:start="157:25" pos:end="157:112"><name pos:start="157:25" pos:end="157:36"><name pos:start="157:25" pos:end="157:30">LOGGER</name><operator pos:start="157:31" pos:end="157:31">.</operator><name pos:start="157:32" pos:end="157:36">error</name></name><argument_list pos:start="157:37" pos:end="157:112">(<argument pos:start="157:38" pos:end="157:111"><expr pos:start="157:38" pos:end="157:111"><literal type="string" pos:start="157:38" pos:end="157:76">"No groundstation connection with id '"</literal> <operator pos:start="157:78" pos:end="157:78">+</operator> <name pos:start="157:80" pos:end="157:94">groundstationid</name> <operator pos:start="157:96" pos:end="157:96">+</operator> <literal type="string" pos:start="157:98" pos:end="157:111">"' registered"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		</block_content>}</block></catch></try>
		<for pos:start="159:17" pos:end="161:17">for <control pos:start="159:21" pos:end="159:52">(<init pos:start="159:22" pos:end="159:51"><decl pos:start="159:22" pos:end="159:51"><type pos:start="159:22" pos:end="159:30"><name pos:start="159:22" pos:end="159:30"><name pos:start="159:22" pos:end="159:27">Future</name><argument_list type="generic" pos:start="159:28" pos:end="159:30">&lt;<argument pos:start="159:29" pos:end="159:29"><name pos:start="159:29" pos:end="159:29">?</name></argument>&gt;</argument_list></name></type> <name pos:start="159:32" pos:end="159:33">ft</name> <range pos:start="159:35" pos:end="159:51">: <expr pos:start="159:37" pos:end="159:51"><name pos:start="159:37" pos:end="159:51">dispatchThreads</name></expr></range></decl></init>)</control> <block pos:start="159:54" pos:end="161:17">{<block_content pos:start="160:25" pos:end="160:40">
			<expr_stmt pos:start="160:25" pos:end="160:40"><expr pos:start="160:25" pos:end="160:39"><call pos:start="160:25" pos:end="160:39"><name pos:start="160:25" pos:end="160:33"><name pos:start="160:25" pos:end="160:26">ft</name><operator pos:start="160:27" pos:end="160:27">.</operator><name pos:start="160:28" pos:end="160:33">cancel</name></name><argument_list pos:start="160:34" pos:end="160:39">(<argument pos:start="160:35" pos:end="160:38"><expr pos:start="160:35" pos:end="160:38"><literal type="boolean" pos:start="160:35" pos:end="160:38">true</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		</block_content>}</block></for>
		<comment type="line" pos:start="162:17" pos:end="162:47">// SERVICE_EXECUTOR.shutdown();</comment>
	</block_content>}</block></function>

	<function pos:start="165:9" pos:end="167:9"><type pos:start="165:9" pos:end="165:43"><specifier pos:start="165:9" pos:end="165:14">public</specifier> <name pos:start="165:16" pos:end="165:43"><name pos:start="165:16" pos:end="165:28">BlockingQueue</name><argument_list type="generic" pos:start="165:29" pos:end="165:43">&lt;<argument pos:start="165:30" pos:end="165:42"><name pos:start="165:30" pos:end="165:42">IDroneCommand</name></argument>&gt;</argument_list></name></type> <name pos:start="165:45" pos:end="165:67">getOutgoingCommandQueue</name><parameter_list pos:start="165:68" pos:end="165:69">()</parameter_list> <block pos:start="165:71" pos:end="167:9">{<block_content pos:start="166:17" pos:end="166:44">
		<return pos:start="166:17" pos:end="166:44">return <expr pos:start="166:24" pos:end="166:43"><name pos:start="166:24" pos:end="166:43">outgoingCommandQueue</name></expr>;</return>
	</block_content>}</block></function>

	<function pos:start="169:9" pos:end="176:9"><type pos:start="169:9" pos:end="169:19"><specifier pos:start="169:9" pos:end="169:14">public</specifier> <name pos:start="169:16" pos:end="169:19">void</name></type> <name pos:start="169:21" pos:end="169:24">send</name><parameter_list pos:start="169:25" pos:end="169:43">(<parameter pos:start="169:26" pos:end="169:42"><decl pos:start="169:26" pos:end="169:42"><type pos:start="169:26" pos:end="169:38"><name pos:start="169:26" pos:end="169:38">IDroneCommand</name></type> <name pos:start="169:40" pos:end="169:42">cmd</name></decl></parameter>)</parameter_list> <block pos:start="169:45" pos:end="176:9">{<block_content pos:start="170:17" pos:end="174:17">
		<decl_stmt pos:start="170:17" pos:end="170:64"><decl pos:start="170:17" pos:end="170:63"><type pos:start="170:17" pos:end="170:23"><name pos:start="170:17" pos:end="170:23">boolean</name></type> <name pos:start="170:25" pos:end="170:29">taken</name> <init pos:start="170:31" pos:end="170:63">= <expr pos:start="170:33" pos:end="170:63"><call pos:start="170:33" pos:end="170:63"><name pos:start="170:33" pos:end="170:58"><name pos:start="170:33" pos:end="170:52">outgoingCommandQueue</name><operator pos:start="170:53" pos:end="170:53">.</operator><name pos:start="170:54" pos:end="170:58">offer</name></name><argument_list pos:start="170:59" pos:end="170:63">(<argument pos:start="170:60" pos:end="170:62"><expr pos:start="170:60" pos:end="170:62"><name pos:start="170:60" pos:end="170:62">cmd</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt pos:start="171:17" pos:end="171:56"><expr pos:start="171:17" pos:end="171:55"><call pos:start="171:17" pos:end="171:55"><name pos:start="171:17" pos:end="171:28"><name pos:start="171:17" pos:end="171:22">LOGGER</name><operator pos:start="171:23" pos:end="171:23">.</operator><name pos:start="171:24" pos:end="171:28">trace</name></name><argument_list pos:start="171:29" pos:end="171:55">(<argument pos:start="171:30" pos:end="171:54"><expr pos:start="171:30" pos:end="171:54"><literal type="string" pos:start="171:30" pos:end="171:54">"Command added to queue!"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<if_stmt pos:start="172:17" pos:end="174:17"><if pos:start="172:17" pos:end="174:17">if <condition pos:start="172:20" pos:end="172:27">(<expr pos:start="172:21" pos:end="172:26"><operator pos:start="172:21" pos:end="172:21">!</operator><name pos:start="172:22" pos:end="172:26">taken</name></expr>)</condition> <block pos:start="172:29" pos:end="174:17">{<block_content pos:start="173:25" pos:end="173:98">
			<expr_stmt pos:start="173:25" pos:end="173:98"><expr pos:start="173:25" pos:end="173:97"><call pos:start="173:25" pos:end="173:97"><name pos:start="173:25" pos:end="173:38"><name pos:start="173:25" pos:end="173:30">LOGGER</name><operator pos:start="173:31" pos:end="173:31">.</operator><name pos:start="173:32" pos:end="173:38">hwFatal</name></name><argument_list pos:start="173:39" pos:end="173:97">(<argument pos:start="173:40" pos:end="173:96"><expr pos:start="173:40" pos:end="173:96"><literal type="string" pos:start="173:40" pos:end="173:96">"Outgoing Command queue limit reached - command dropped!"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		</block_content>}</block></if></if_stmt>

	</block_content>}</block></function>

	<function pos:start="178:9" pos:end="196:9"><type pos:start="178:9" pos:end="178:19"><specifier pos:start="178:9" pos:end="178:14">public</specifier> <name pos:start="178:16" pos:end="178:19">void</name></type> <name pos:start="178:21" pos:end="178:41">postMonitoringMessage</name><parameter_list pos:start="178:42" pos:end="178:71">(<parameter pos:start="178:43" pos:end="178:70"><decl pos:start="178:43" pos:end="178:70"><type pos:start="178:43" pos:end="178:62"><name pos:start="178:43" pos:end="178:62">UAVMonitoringMessage</name></type> <name pos:start="178:64" pos:end="178:70">message</name></decl></parameter>)</parameter_list> <block pos:start="178:73" pos:end="196:9">{<block_content pos:start="179:17" pos:end="195:17">
		<if_stmt pos:start="179:17" pos:end="181:17"><if pos:start="179:17" pos:end="181:17">if <condition pos:start="179:20" pos:end="179:55">(<expr pos:start="179:21" pos:end="179:54"><operator pos:start="179:21" pos:end="179:21">!</operator><name pos:start="179:22" pos:end="179:54"><name pos:start="179:22" pos:end="179:39">DronologyConstants</name><operator pos:start="179:40" pos:end="179:40">.</operator><name pos:start="179:41" pos:end="179:54">USE_MONITORING</name></name></expr>)</condition> <block pos:start="179:57" pos:end="181:17">{<block_content pos:start="180:25" pos:end="180:31">
			<return pos:start="180:25" pos:end="180:31">return;</return>
		</block_content>}</block></if></if_stmt>
		<decl_stmt pos:start="182:17" pos:end="182:50"><decl pos:start="182:17" pos:end="182:49"><type pos:start="182:17" pos:end="182:22"><name pos:start="182:17" pos:end="182:22">String</name></type> <name pos:start="182:24" pos:end="182:28">uavid</name> <init pos:start="182:30" pos:end="182:49">= <expr pos:start="182:32" pos:end="182:49"><call pos:start="182:32" pos:end="182:49"><name pos:start="182:32" pos:end="182:47"><name pos:start="182:32" pos:end="182:38">message</name><operator pos:start="182:39" pos:end="182:39">.</operator><name pos:start="182:40" pos:end="182:47">getUavid</name></name><argument_list pos:start="182:48" pos:end="182:49">()</argument_list></call></expr></init></decl>;</decl_stmt>
		<synchronized pos:start="183:17" pos:end="188:17">synchronized <init pos:start="183:30" pos:end="183:39">(<expr pos:start="183:31" pos:end="183:38"><name pos:start="183:31" pos:end="183:38">queueMap</name></expr>)</init> <block pos:start="183:41" pos:end="188:17">{<block_content pos:start="184:25" pos:end="187:25">
			<if_stmt pos:start="184:25" pos:end="187:25"><if pos:start="184:25" pos:end="187:25">if <condition pos:start="184:28" pos:end="184:57">(<expr pos:start="184:29" pos:end="184:56"><operator pos:start="184:29" pos:end="184:29">!</operator><call pos:start="184:30" pos:end="184:56"><name pos:start="184:30" pos:end="184:49"><name pos:start="184:30" pos:end="184:37">queueMap</name><operator pos:start="184:38" pos:end="184:38">.</operator><name pos:start="184:39" pos:end="184:49">containsKey</name></name><argument_list pos:start="184:50" pos:end="184:56">(<argument pos:start="184:51" pos:end="184:55"><expr pos:start="184:51" pos:end="184:55"><name pos:start="184:51" pos:end="184:55">uavid</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="184:59" pos:end="187:25">{<block_content pos:start="185:33" pos:end="186:39">
				<expr_stmt pos:start="185:33" pos:end="185:112"><expr pos:start="185:33" pos:end="185:111"><call pos:start="185:33" pos:end="185:111"><name pos:start="185:33" pos:end="185:45"><name pos:start="185:33" pos:end="185:38">LOGGER</name><operator pos:start="185:39" pos:end="185:39">.</operator><name pos:start="185:40" pos:end="185:45">hwInfo</name></name><argument_list pos:start="185:46" pos:end="185:111">(<argument pos:start="185:47" pos:end="185:110"><expr pos:start="185:47" pos:end="185:110"><literal type="string" pos:start="185:47" pos:end="185:64">"No uav with id '"</literal> <operator pos:start="185:66" pos:end="185:66">+</operator> <name pos:start="185:68" pos:end="185:72">uavid</name> <operator pos:start="185:74" pos:end="185:74">+</operator> <literal type="string" pos:start="185:76" pos:end="185:110">"' registered - discarding message"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<return pos:start="186:33" pos:end="186:39">return;</return>
			</block_content>}</block></if></if_stmt>
		</block_content>}</block></synchronized>

		<comment type="line" pos:start="190:17" pos:end="190:116">// LOGGER.info("Message " + message.getClass().getSimpleName() + " received :: " + groundstationid);</comment>
		<decl_stmt pos:start="191:17" pos:end="191:40"><decl pos:start="191:17" pos:end="191:39"><type pos:start="191:17" pos:end="191:23"><name pos:start="191:17" pos:end="191:23">boolean</name></type> <name pos:start="191:25" pos:end="191:31">success</name> <init pos:start="191:33" pos:end="191:39">= <expr pos:start="191:35" pos:end="191:39"><literal type="boolean" pos:start="191:35" pos:end="191:39">false</literal></expr></init></decl>;</decl_stmt>
		<expr_stmt pos:start="192:17" pos:end="192:57"><expr pos:start="192:17" pos:end="192:56"><name pos:start="192:17" pos:end="192:23">success</name> <operator pos:start="192:25" pos:end="192:25">=</operator> <call pos:start="192:27" pos:end="192:56"><name pos:start="192:27" pos:end="192:47"><name pos:start="192:27" pos:end="192:41">monitoringQueue</name><operator pos:start="192:42" pos:end="192:42">.</operator><name pos:start="192:43" pos:end="192:47">offer</name></name><argument_list pos:start="192:48" pos:end="192:56">(<argument pos:start="192:49" pos:end="192:55"><expr pos:start="192:49" pos:end="192:55"><name pos:start="192:49" pos:end="192:55">message</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<if_stmt pos:start="193:17" pos:end="195:17"><if pos:start="193:17" pos:end="195:17">if <condition pos:start="193:20" pos:end="193:29">(<expr pos:start="193:21" pos:end="193:28"><operator pos:start="193:21" pos:end="193:21">!</operator><name pos:start="193:22" pos:end="193:28">success</name></expr>)</condition> <block pos:start="193:31" pos:end="195:17">{<block_content pos:start="194:25" pos:end="194:64">
			<expr_stmt pos:start="194:25" pos:end="194:64"><expr pos:start="194:25" pos:end="194:63"><call pos:start="194:25" pos:end="194:63"><name pos:start="194:25" pos:end="194:35"><name pos:start="194:25" pos:end="194:30">LOGGER</name><operator pos:start="194:31" pos:end="194:31">.</operator><name pos:start="194:32" pos:end="194:35">warn</name></name><argument_list pos:start="194:36" pos:end="194:63">(<argument pos:start="194:37" pos:end="194:62"><expr pos:start="194:37" pos:end="194:62"><literal type="string" pos:start="194:37" pos:end="194:62">"MonitoringQueue is Full!"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		</block_content>}</block></if></if_stmt>
	</block_content>}</block></function>

	<function pos:start="198:9" pos:end="219:9"><type pos:start="198:9" pos:end="198:19"><specifier pos:start="198:9" pos:end="198:14">public</specifier> <name pos:start="198:16" pos:end="198:19">void</name></type> <name pos:start="198:21" pos:end="198:44">postDoneHandshakeMessage</name><parameter_list pos:start="198:45" pos:end="198:87">(<parameter pos:start="198:46" pos:end="198:57"><decl pos:start="198:46" pos:end="198:57"><type pos:start="198:46" pos:end="198:57"><name pos:start="198:46" pos:end="198:51">String</name></type> <name pos:start="198:53" pos:end="198:57">uavid</name></decl></parameter>, <parameter pos:start="198:60" pos:end="198:86"><decl pos:start="198:60" pos:end="198:86"><type pos:start="198:60" pos:end="198:86"><name pos:start="198:60" pos:end="198:78">UAVHandshakeMessage</name></type> <name pos:start="198:80" pos:end="198:86">message</name></decl></parameter>)</parameter_list> <block pos:start="198:89" pos:end="219:9">{<block_content pos:start="200:17" pos:end="217:17">
 
		<if_stmt pos:start="200:17" pos:end="217:17"><if pos:start="200:17" pos:end="215:17">if <condition pos:start="200:20" pos:end="200:57">(<expr pos:start="200:21" pos:end="200:56"><name pos:start="200:21" pos:end="200:56"><name pos:start="200:21" pos:end="200:38">DronologyConstants</name><operator pos:start="200:39" pos:end="200:39">.</operator><name pos:start="200:40" pos:end="200:56">USE_SAFETY_CHECKS</name></name></expr>)</condition> <block pos:start="200:59" pos:end="215:17">{<block_content pos:start="201:25" pos:end="214:25">
			<if_stmt pos:start="201:25" pos:end="214:25"><if pos:start="201:25" pos:end="212:25">if <condition pos:start="201:28" pos:end="201:46">(<expr pos:start="201:29" pos:end="201:45"><name pos:start="201:29" pos:end="201:37">validator</name> <operator pos:start="201:39" pos:end="201:40">!=</operator> <literal type="null" pos:start="201:42" pos:end="201:45">null</literal></expr>)</condition> <block pos:start="201:48" pos:end="212:25">{<block_content pos:start="202:33" pos:end="211:33">
				<if_stmt pos:start="202:33" pos:end="211:33"><if pos:start="202:33" pos:end="204:33">if <condition pos:start="202:36" pos:end="202:68">(<expr pos:start="202:37" pos:end="202:67"><call pos:start="202:37" pos:end="202:59"><name pos:start="202:37" pos:end="202:57"><name pos:start="202:37" pos:end="202:43">message</name><operator pos:start="202:44" pos:end="202:44">.</operator><name pos:start="202:45" pos:end="202:57">getSafetyCase</name></name><argument_list pos:start="202:58" pos:end="202:59">()</argument_list></call> <operator pos:start="202:61" pos:end="202:62">==</operator> <literal type="null" pos:start="202:64" pos:end="202:67">null</literal></expr>)</condition> <block pos:start="202:70" pos:end="204:33">{<block_content pos:start="203:41" pos:end="203:87">
					<expr_stmt pos:start="203:41" pos:end="203:87"><expr pos:start="203:41" pos:end="203:86"><call pos:start="203:41" pos:end="203:86"><name pos:start="203:41" pos:end="203:52"><name pos:start="203:41" pos:end="203:46">LOGGER</name><operator pos:start="203:47" pos:end="203:47">.</operator><name pos:start="203:48" pos:end="203:52">error</name></name><argument_list pos:start="203:53" pos:end="203:86">(<argument pos:start="203:54" pos:end="203:85"><expr pos:start="203:54" pos:end="203:85"><literal type="string" pos:start="203:54" pos:end="203:85">"No safety information provided"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				</block_content>}</block></if> <else pos:start="204:35" pos:end="211:33">else <block pos:start="204:40" pos:end="211:33">{<block_content pos:start="205:41" pos:end="210:41">
					<decl_stmt pos:start="205:41" pos:end="205:109"><decl pos:start="205:41" pos:end="205:108"><type pos:start="205:41" pos:end="205:47"><name pos:start="205:41" pos:end="205:47">boolean</name></type> <name pos:start="205:49" pos:end="205:55">success</name> <init pos:start="205:57" pos:end="205:108">= <expr pos:start="205:59" pos:end="205:108"><call pos:start="205:59" pos:end="205:108"><name pos:start="205:59" pos:end="205:76"><name pos:start="205:59" pos:end="205:67">validator</name><operator pos:start="205:68" pos:end="205:68">.</operator><name pos:start="205:69" pos:end="205:76">validate</name></name><argument_list pos:start="205:77" pos:end="205:108">(<argument pos:start="205:78" pos:end="205:82"><expr pos:start="205:78" pos:end="205:82"><name pos:start="205:78" pos:end="205:82">uavid</name></expr></argument>, <argument pos:start="205:85" pos:end="205:107"><expr pos:start="205:85" pos:end="205:107"><call pos:start="205:85" pos:end="205:107"><name pos:start="205:85" pos:end="205:105"><name pos:start="205:85" pos:end="205:91">message</name><operator pos:start="205:92" pos:end="205:92">.</operator><name pos:start="205:93" pos:end="205:105">getSafetyCase</name></name><argument_list pos:start="205:106" pos:end="205:107">()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
					<if_stmt pos:start="206:41" pos:end="210:41"><if pos:start="206:41" pos:end="208:41">if <condition pos:start="206:44" pos:end="206:52">(<expr pos:start="206:45" pos:end="206:51"><name pos:start="206:45" pos:end="206:51">success</name></expr>)</condition> <block pos:start="206:54" pos:end="208:41">{<block_content pos:start="207:49" pos:end="207:81">
						<expr_stmt pos:start="207:49" pos:end="207:81"><expr pos:start="207:49" pos:end="207:80"><call pos:start="207:49" pos:end="207:80"><name pos:start="207:49" pos:end="207:64">registerNewDrone</name><argument_list pos:start="207:65" pos:end="207:80">(<argument pos:start="207:66" pos:end="207:70"><expr pos:start="207:66" pos:end="207:70"><name pos:start="207:66" pos:end="207:70">uavid</name></expr></argument>, <argument pos:start="207:73" pos:end="207:79"><expr pos:start="207:73" pos:end="207:79"><name pos:start="207:73" pos:end="207:79">message</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					</block_content>}</block></if> <else pos:start="208:43" pos:end="210:41">else <block pos:start="208:48" pos:end="210:41">{<block_content pos:start="209:49" pos:end="209:123">
						<expr_stmt pos:start="209:49" pos:end="209:123"><expr pos:start="209:49" pos:end="209:122"><call pos:start="209:49" pos:end="209:122"><name pos:start="209:49" pos:end="209:60"><name pos:start="209:49" pos:end="209:54">LOGGER</name><operator pos:start="209:55" pos:end="209:55">.</operator><name pos:start="209:56" pos:end="209:60">error</name></name><argument_list pos:start="209:61" pos:end="209:122">(<argument pos:start="209:62" pos:end="209:121"><expr pos:start="209:62" pos:end="209:121"><literal type="string" pos:start="209:62" pos:end="209:91">"Safety checks failed - uav '"</literal> <operator pos:start="209:93" pos:end="209:93">+</operator> <name pos:start="209:95" pos:end="209:99">uavid</name> <operator pos:start="209:101" pos:end="209:101">+</operator> <literal type="string" pos:start="209:103" pos:end="209:121">"' not registered!"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					</block_content>}</block></else></if_stmt>
				</block_content>}</block></else></if_stmt>
			</block_content>}</block></if> <else pos:start="212:27" pos:end="214:25">else <block pos:start="212:32" pos:end="214:25">{<block_content pos:start="213:33" pos:end="213:70">
				<expr_stmt pos:start="213:33" pos:end="213:70"><expr pos:start="213:33" pos:end="213:69"><call pos:start="213:33" pos:end="213:69"><name pos:start="213:33" pos:end="213:44"><name pos:start="213:33" pos:end="213:38">LOGGER</name><operator pos:start="213:39" pos:end="213:39">.</operator><name pos:start="213:40" pos:end="213:44">error</name></name><argument_list pos:start="213:45" pos:end="213:69">(<argument pos:start="213:46" pos:end="213:68"><expr pos:start="213:46" pos:end="213:68"><literal type="string" pos:start="213:46" pos:end="213:68">"No validator provided"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			</block_content>}</block></else></if_stmt>
		</block_content>}</block></if> <else pos:start="215:19" pos:end="217:17">else <block pos:start="215:24" pos:end="217:17">{<block_content pos:start="216:25" pos:end="216:57">
			<expr_stmt pos:start="216:25" pos:end="216:57"><expr pos:start="216:25" pos:end="216:56"><call pos:start="216:25" pos:end="216:56"><name pos:start="216:25" pos:end="216:40">registerNewDrone</name><argument_list pos:start="216:41" pos:end="216:56">(<argument pos:start="216:42" pos:end="216:46"><expr pos:start="216:42" pos:end="216:46"><name pos:start="216:42" pos:end="216:46">uavid</name></expr></argument>, <argument pos:start="216:49" pos:end="216:55"><expr pos:start="216:49" pos:end="216:55"><name pos:start="216:49" pos:end="216:55">message</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		</block_content>}</block></else></if_stmt>

	</block_content>}</block></function>

	<function pos:start="221:9" pos:end="224:9"><type pos:start="221:9" pos:end="221:19"><specifier pos:start="221:9" pos:end="221:14">public</specifier> <name pos:start="221:16" pos:end="221:19">void</name></type> <name pos:start="221:21" pos:end="221:43">registerSafetyValidator</name><parameter_list pos:start="221:44" pos:end="221:74">(<parameter pos:start="221:45" pos:end="221:73"><decl pos:start="221:45" pos:end="221:73"><type pos:start="221:45" pos:end="221:63"><name pos:start="221:45" pos:end="221:63">IUAVSafetyValidator</name></type> <name pos:start="221:65" pos:end="221:73">validator</name></decl></parameter>)</parameter_list> <block pos:start="221:76" pos:end="224:9">{<block_content pos:start="222:17" pos:end="222:43">
		<expr_stmt pos:start="222:17" pos:end="222:43"><expr pos:start="222:17" pos:end="222:42"><name pos:start="222:17" pos:end="222:30"><name pos:start="222:17" pos:end="222:20">this</name><operator pos:start="222:21" pos:end="222:21">.</operator><name pos:start="222:22" pos:end="222:30">validator</name></name> <operator pos:start="222:32" pos:end="222:32">=</operator> <name pos:start="222:34" pos:end="222:42">validator</name></expr>;</expr_stmt>

	</block_content>}</block></function>

}</block></class>
</unit>
