<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="Java" filename="src/DistanceChecker.java" pos:tabs="8"><package pos:start="1:1" pos:end="1:58">package <name pos:start="1:9" pos:end="1:57"><name pos:start="1:9" pos:end="1:11">edu</name><operator pos:start="1:12" pos:end="1:12">.</operator><name pos:start="1:13" pos:end="1:14">nd</name><operator pos:start="1:15" pos:end="1:15">.</operator><name pos:start="1:16" pos:end="1:24">dronology</name><operator pos:start="1:25" pos:end="1:25">.</operator><name pos:start="1:26" pos:end="1:35">monitoring</name><operator pos:start="1:36" pos:end="1:36">.</operator><name pos:start="1:37" pos:end="1:49">simplechecker</name><operator pos:start="1:50" pos:end="1:50">.</operator><name pos:start="1:51" pos:end="1:57">checker</name></name>;</package>

<import pos:start="3:1" pos:end="3:27">import <name pos:start="3:8" pos:end="3:26"><name pos:start="3:8" pos:end="3:11">java</name><operator pos:start="3:12" pos:end="3:12">.</operator><name pos:start="3:13" pos:end="3:16">util</name><operator pos:start="3:17" pos:end="3:17">.</operator><name pos:start="3:18" pos:end="3:26">ArrayList</name></name>;</import>
<import pos:start="4:1" pos:end="4:22">import <name pos:start="4:8" pos:end="4:21"><name pos:start="4:8" pos:end="4:11">java</name><operator pos:start="4:12" pos:end="4:12">.</operator><name pos:start="4:13" pos:end="4:16">util</name><operator pos:start="4:17" pos:end="4:17">.</operator><name pos:start="4:18" pos:end="4:21">List</name></name>;</import>
<import pos:start="5:1" pos:end="5:27">import <name pos:start="5:8" pos:end="5:26"><name pos:start="5:8" pos:end="5:11">java</name><operator pos:start="5:12" pos:end="5:12">.</operator><name pos:start="5:13" pos:end="5:16">util</name><operator pos:start="5:17" pos:end="5:17">.</operator><name pos:start="5:18" pos:end="5:20">Map</name><operator pos:start="5:21" pos:end="5:21">.</operator><name pos:start="5:22" pos:end="5:26">Entry</name></name>;</import>
<import pos:start="6:1" pos:end="6:23">import <name pos:start="6:8" pos:end="6:22"><name pos:start="6:8" pos:end="6:11">java</name><operator pos:start="6:12" pos:end="6:12">.</operator><name pos:start="6:13" pos:end="6:16">util</name><operator pos:start="6:17" pos:end="6:17">.</operator><name pos:start="6:18" pos:end="6:22">Timer</name></name>;</import>
<import pos:start="7:1" pos:end="7:27">import <name pos:start="7:8" pos:end="7:26"><name pos:start="7:8" pos:end="7:11">java</name><operator pos:start="7:12" pos:end="7:12">.</operator><name pos:start="7:13" pos:end="7:16">util</name><operator pos:start="7:17" pos:end="7:17">.</operator><name pos:start="7:18" pos:end="7:26">TimerTask</name></name>;</import>
<import pos:start="8:1" pos:end="8:47">import <name pos:start="8:8" pos:end="8:46"><name pos:start="8:8" pos:end="8:11">java</name><operator pos:start="8:12" pos:end="8:12">.</operator><name pos:start="8:13" pos:end="8:16">util</name><operator pos:start="8:17" pos:end="8:17">.</operator><name pos:start="8:18" pos:end="8:27">concurrent</name><operator pos:start="8:28" pos:end="8:28">.</operator><name pos:start="8:29" pos:end="8:46">ArrayBlockingQueue</name></name>;</import>
<import pos:start="9:1" pos:end="9:42">import <name pos:start="9:8" pos:end="9:41"><name pos:start="9:8" pos:end="9:11">java</name><operator pos:start="9:12" pos:end="9:12">.</operator><name pos:start="9:13" pos:end="9:16">util</name><operator pos:start="9:17" pos:end="9:17">.</operator><name pos:start="9:18" pos:end="9:27">concurrent</name><operator pos:start="9:28" pos:end="9:28">.</operator><name pos:start="9:29" pos:end="9:41">BlockingQueue</name></name>;</import>

<import pos:start="11:1" pos:end="11:54">import <name pos:start="11:8" pos:end="11:53"><name pos:start="11:8" pos:end="11:10">edu</name><operator pos:start="11:11" pos:end="11:11">.</operator><name pos:start="11:12" pos:end="11:13">nd</name><operator pos:start="11:14" pos:end="11:14">.</operator><name pos:start="11:15" pos:end="11:23">dronology</name><operator pos:start="11:24" pos:end="11:24">.</operator><name pos:start="11:25" pos:end="11:28">core</name><operator pos:start="11:29" pos:end="11:29">.</operator><name pos:start="11:30" pos:end="11:39">coordinate</name><operator pos:start="11:40" pos:end="11:40">.</operator><name pos:start="11:41" pos:end="11:53">LlaCoordinate</name></name>;</import>
<import pos:start="12:1" pos:end="12:67">import <name pos:start="12:8" pos:end="12:66"><name pos:start="12:8" pos:end="12:10">edu</name><operator pos:start="12:11" pos:end="12:11">.</operator><name pos:start="12:12" pos:end="12:13">nd</name><operator pos:start="12:14" pos:end="12:14">.</operator><name pos:start="12:15" pos:end="12:23">dronology</name><operator pos:start="12:24" pos:end="12:24">.</operator><name pos:start="12:25" pos:end="12:28">core</name><operator pos:start="12:29" pos:end="12:29">.</operator><name pos:start="12:30" pos:end="12:39">monitoring</name><operator pos:start="12:40" pos:end="12:40">.</operator><name pos:start="12:41" pos:end="12:66">DronologyMonitoringManager</name></name>;</import>
<import pos:start="13:1" pos:end="13:60">import <name pos:start="13:8" pos:end="13:59"><name pos:start="13:8" pos:end="13:10">edu</name><operator pos:start="13:11" pos:end="13:11">.</operator><name pos:start="13:12" pos:end="13:13">nd</name><operator pos:start="13:14" pos:end="13:14">.</operator><name pos:start="13:15" pos:end="13:23">dronology</name><operator pos:start="13:24" pos:end="13:24">.</operator><name pos:start="13:25" pos:end="13:28">core</name><operator pos:start="13:29" pos:end="13:29">.</operator><name pos:start="13:30" pos:end="13:39">monitoring</name><operator pos:start="13:40" pos:end="13:40">.</operator><name pos:start="13:41" pos:end="13:59">IMonitorableMessage</name></name>;</import>
<import pos:start="14:1" pos:end="14:58">import <name pos:start="14:8" pos:end="14:57"><name pos:start="14:8" pos:end="14:10">edu</name><operator pos:start="14:11" pos:end="14:11">.</operator><name pos:start="14:12" pos:end="14:13">nd</name><operator pos:start="14:14" pos:end="14:14">.</operator><name pos:start="14:15" pos:end="14:23">dronology</name><operator pos:start="14:24" pos:end="14:24">.</operator><name pos:start="14:25" pos:end="14:28">core</name><operator pos:start="14:29" pos:end="14:29">.</operator><name pos:start="14:30" pos:end="14:39">monitoring</name><operator pos:start="14:40" pos:end="14:40">.</operator><name pos:start="14:41" pos:end="14:57">MessageMarshaller</name></name>;</import>
<import pos:start="15:1" pos:end="15:83">import <name pos:start="15:8" pos:end="15:82"><name pos:start="15:8" pos:end="15:10">edu</name><operator pos:start="15:11" pos:end="15:11">.</operator><name pos:start="15:12" pos:end="15:13">nd</name><operator pos:start="15:14" pos:end="15:14">.</operator><name pos:start="15:15" pos:end="15:23">dronology</name><operator pos:start="15:24" pos:end="15:24">.</operator><name pos:start="15:25" pos:end="15:28">core</name><operator pos:start="15:29" pos:end="15:29">.</operator><name pos:start="15:30" pos:end="15:39">monitoring</name><operator pos:start="15:40" pos:end="15:40">.</operator><name pos:start="15:41" pos:end="15:48">messages</name><operator pos:start="15:49" pos:end="15:49">.</operator><name pos:start="15:50" pos:end="15:70">UAVMonitorableMessage</name><operator pos:start="15:71" pos:end="15:71">.</operator><name pos:start="15:72" pos:end="15:82">MessageType</name></name>;</import>
<import pos:start="16:1" pos:end="16:55">import <name pos:start="16:8" pos:end="16:54"><name pos:start="16:8" pos:end="16:10">edu</name><operator pos:start="16:11" pos:end="16:11">.</operator><name pos:start="16:12" pos:end="16:13">nd</name><operator pos:start="16:14" pos:end="16:14">.</operator><name pos:start="16:15" pos:end="16:23">dronology</name><operator pos:start="16:24" pos:end="16:24">.</operator><name pos:start="16:25" pos:end="16:28">core</name><operator pos:start="16:29" pos:end="16:29">.</operator><name pos:start="16:30" pos:end="16:33">util</name><operator pos:start="16:34" pos:end="16:34">.</operator><name pos:start="16:35" pos:end="16:54">ManagedHashTableList</name></name>;</import>
<import pos:start="17:1" pos:end="17:68">import <name pos:start="17:8" pos:end="17:67"><name pos:start="17:8" pos:end="17:10">edu</name><operator pos:start="17:11" pos:end="17:11">.</operator><name pos:start="17:12" pos:end="17:13">nd</name><operator pos:start="17:14" pos:end="17:14">.</operator><name pos:start="17:15" pos:end="17:23">dronology</name><operator pos:start="17:24" pos:end="17:24">.</operator><name pos:start="17:25" pos:end="17:32">gstation</name><operator pos:start="17:33" pos:end="17:33">.</operator><name pos:start="17:34" pos:end="17:42">connector</name><operator pos:start="17:43" pos:end="17:43">.</operator><name pos:start="17:44" pos:end="17:51">messages</name><operator pos:start="17:52" pos:end="17:52">.</operator><name pos:start="17:53" pos:end="17:67">UAVStateMessage</name></name>;</import>
<import pos:start="18:1" pos:end="18:34">import <name pos:start="18:8" pos:end="18:33"><name pos:start="18:8" pos:end="18:10">edu</name><operator pos:start="18:11" pos:end="18:11">.</operator><name pos:start="18:12" pos:end="18:13">nd</name><operator pos:start="18:14" pos:end="18:14">.</operator><name pos:start="18:15" pos:end="18:23">dronology</name><operator pos:start="18:24" pos:end="18:24">.</operator><name pos:start="18:25" pos:end="18:28">util</name><operator pos:start="18:29" pos:end="18:29">.</operator><name pos:start="18:30" pos:end="18:33">Pair</name></name>;</import>
<import pos:start="19:1" pos:end="19:30">import <name pos:start="19:8" pos:end="19:29"><name pos:start="19:8" pos:end="19:10">net</name><operator pos:start="19:11" pos:end="19:11">.</operator><name pos:start="19:12" pos:end="19:13">mv</name><operator pos:start="19:14" pos:end="19:14">.</operator><name pos:start="19:15" pos:end="19:21">logging</name><operator pos:start="19:22" pos:end="19:22">.</operator><name pos:start="19:23" pos:end="19:29">ILogger</name></name>;</import>
<import pos:start="20:1" pos:end="20:37">import <name pos:start="20:8" pos:end="20:36"><name pos:start="20:8" pos:end="20:10">net</name><operator pos:start="20:11" pos:end="20:11">.</operator><name pos:start="20:12" pos:end="20:13">mv</name><operator pos:start="20:14" pos:end="20:14">.</operator><name pos:start="20:15" pos:end="20:21">logging</name><operator pos:start="20:22" pos:end="20:22">.</operator><name pos:start="20:23" pos:end="20:36">LoggerProvider</name></name>;</import>

<class pos:start="22:1" pos:end="146:1"><specifier pos:start="22:1" pos:end="22:6">public</specifier> class <name pos:start="22:14" pos:end="22:28">DistanceChecker</name> <block pos:start="22:30" pos:end="146:1">{
	<decl_stmt pos:start="23:9" pos:end="23:104"><decl pos:start="23:9" pos:end="23:103"><type pos:start="23:9" pos:end="23:46"><specifier pos:start="23:9" pos:end="23:15">private</specifier> <specifier pos:start="23:17" pos:end="23:22">static</specifier> <specifier pos:start="23:24" pos:end="23:28">final</specifier> <specifier pos:start="23:30" pos:end="23:38">transient</specifier> <name pos:start="23:40" pos:end="23:46">ILogger</name></type> <name pos:start="23:48" pos:end="23:53">LOGGER</name> <init pos:start="23:55" pos:end="23:103">= <expr pos:start="23:57" pos:end="23:103"><call pos:start="23:57" pos:end="23:103"><name pos:start="23:57" pos:end="23:80"><name pos:start="23:57" pos:end="23:70">LoggerProvider</name><operator pos:start="23:71" pos:end="23:71">.</operator><name pos:start="23:72" pos:end="23:80">getLogger</name></name><argument_list pos:start="23:81" pos:end="23:103">(<argument pos:start="23:82" pos:end="23:102"><expr pos:start="23:82" pos:end="23:102"><name pos:start="23:82" pos:end="23:102"><name pos:start="23:82" pos:end="23:96">DistanceChecker</name><operator pos:start="23:97" pos:end="23:97">.</operator><name pos:start="23:98" pos:end="23:102">class</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

	<decl_stmt pos:start="25:9" pos:end="25:49"><decl pos:start="25:9" pos:end="25:48"><type pos:start="25:9" pos:end="25:35"><specifier pos:start="25:9" pos:end="25:15">private</specifier> <specifier pos:start="25:17" pos:end="25:22">static</specifier> <specifier pos:start="25:24" pos:end="25:28">final</specifier> <name pos:start="25:30" pos:end="25:35">double</name></type> <name pos:start="25:37" pos:end="25:44">MIN_DIST</name> <init pos:start="25:46" pos:end="25:48">= <expr pos:start="25:48" pos:end="25:48"><literal type="number" pos:start="25:48" pos:end="25:48">5</literal></expr></init></decl>;</decl_stmt>

	<constructor pos:start="27:9" pos:end="30:9"><specifier pos:start="27:9" pos:end="27:14">public</specifier> <name pos:start="27:16" pos:end="27:30">DistanceChecker</name><parameter_list pos:start="27:31" pos:end="27:32">()</parameter_list> <block pos:start="27:34" pos:end="30:9">{<block_content pos:start="28:17" pos:end="29:57">
		<decl_stmt pos:start="28:17" pos:end="28:42"><decl pos:start="28:17" pos:end="28:41"><type pos:start="28:17" pos:end="28:21"><name pos:start="28:17" pos:end="28:21">Timer</name></type> <name pos:start="28:23" pos:end="28:27">timer</name> <init pos:start="28:29" pos:end="28:41">= <expr pos:start="28:31" pos:end="28:41"><operator pos:start="28:31" pos:end="28:33">new</operator> <call pos:start="28:35" pos:end="28:41"><name pos:start="28:35" pos:end="28:39">Timer</name><argument_list pos:start="28:40" pos:end="28:41">()</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt pos:start="29:17" pos:end="29:57"><expr pos:start="29:17" pos:end="29:56"><call pos:start="29:17" pos:end="29:56"><name pos:start="29:17" pos:end="29:30"><name pos:start="29:17" pos:end="29:21">timer</name><operator pos:start="29:22" pos:end="29:22">.</operator><name pos:start="29:23" pos:end="29:30">schedule</name></name><argument_list pos:start="29:31" pos:end="29:56">(<argument pos:start="29:32" pos:end="29:46"><expr pos:start="29:32" pos:end="29:46"><operator pos:start="29:32" pos:end="29:34">new</operator> <call pos:start="29:36" pos:end="29:46"><name pos:start="29:36" pos:end="29:44">CheckTask</name><argument_list pos:start="29:45" pos:end="29:46">()</argument_list></call></expr></argument>, <argument pos:start="29:49" pos:end="29:49"><expr pos:start="29:49" pos:end="29:49"><literal type="number" pos:start="29:49" pos:end="29:49">0</literal></expr></argument>, <argument pos:start="29:52" pos:end="29:55"><expr pos:start="29:52" pos:end="29:55"><literal type="number" pos:start="29:52" pos:end="29:55">1500</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	</block_content>}</block></constructor>

	<decl_stmt pos:start="32:9" pos:end="32:58"><decl pos:start="32:9" pos:end="32:57"><type pos:start="32:9" pos:end="32:48"><specifier pos:start="32:9" pos:end="32:15">private</specifier> <specifier pos:start="32:17" pos:end="32:22">static</specifier> <specifier pos:start="32:24" pos:end="32:32">transient</specifier> <name pos:start="32:34" pos:end="32:48">DistanceChecker</name></type> <name pos:start="32:50" pos:end="32:57">INSTANCE</name></decl>;</decl_stmt>

	<decl_stmt pos:start="34:9" pos:end="34:92"><decl pos:start="34:9" pos:end="34:91"><type pos:start="34:9" pos:end="34:46"><specifier pos:start="34:9" pos:end="34:15">private</specifier> <name pos:start="34:17" pos:end="34:46"><name pos:start="34:17" pos:end="34:29">BlockingQueue</name><argument_list type="generic" pos:start="34:30" pos:end="34:46">&lt;<argument pos:start="34:31" pos:end="34:45"><name pos:start="34:31" pos:end="34:45">UAVStateMessage</name></argument>&gt;</argument_list></name></type> <name pos:start="34:48" pos:end="34:59">messageQueue</name> <init pos:start="34:61" pos:end="34:91">= <expr pos:start="34:63" pos:end="34:91"><operator pos:start="34:63" pos:end="34:65">new</operator> <call pos:start="34:67" pos:end="34:91"><name pos:start="34:67" pos:end="34:86"><name pos:start="34:67" pos:end="34:84">ArrayBlockingQueue</name><argument_list type="generic" pos:start="34:85" pos:end="34:86">&lt;&gt;</argument_list></name><argument_list pos:start="34:87" pos:end="34:91">(<argument pos:start="34:88" pos:end="34:90"><expr pos:start="34:88" pos:end="34:90"><literal type="number" pos:start="34:88" pos:end="34:90">100</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

	<decl_stmt pos:start="36:9" pos:end="36:100"><decl pos:start="36:9" pos:end="36:99"><type pos:start="36:9" pos:end="36:60"><specifier pos:start="36:9" pos:end="36:15">private</specifier> <specifier pos:start="36:17" pos:end="36:25">transient</specifier> <name pos:start="36:27" pos:end="36:60"><name pos:start="36:27" pos:end="36:46">ManagedHashTableList</name><argument_list type="generic" pos:start="36:47" pos:end="36:60">&lt;<argument pos:start="36:48" pos:end="36:53"><name pos:start="36:48" pos:end="36:53">String</name></argument>, <argument pos:start="36:56" pos:end="36:59"><name pos:start="36:56" pos:end="36:59">Pair</name></argument>&gt;</argument_list></name></type> <name pos:start="36:62" pos:end="36:68">dataMap</name> <init pos:start="36:70" pos:end="36:99">= <expr pos:start="36:72" pos:end="36:99"><operator pos:start="36:72" pos:end="36:74">new</operator> <call pos:start="36:76" pos:end="36:99"><name pos:start="36:76" pos:end="36:97"><name pos:start="36:76" pos:end="36:95">ManagedHashTableList</name><argument_list type="generic" pos:start="36:96" pos:end="36:97">&lt;&gt;</argument_list></name><argument_list pos:start="36:98" pos:end="36:99">()</argument_list></call></expr></init></decl>;</decl_stmt>

	<function pos:start="38:9" pos:end="47:9"><type pos:start="38:9" pos:end="38:37"><specifier pos:start="38:9" pos:end="38:14">public</specifier> <specifier pos:start="38:16" pos:end="38:21">static</specifier> <name pos:start="38:23" pos:end="38:37">DistanceChecker</name></type> <name pos:start="38:39" pos:end="38:49">getInstance</name><parameter_list pos:start="38:50" pos:end="38:51">()</parameter_list> <block pos:start="38:53" pos:end="47:9">{<block_content pos:start="39:17" pos:end="46:32">
		<if_stmt pos:start="39:17" pos:end="45:17"><if pos:start="39:17" pos:end="45:17">if <condition pos:start="39:20" pos:end="39:37">(<expr pos:start="39:21" pos:end="39:36"><name pos:start="39:21" pos:end="39:28">INSTANCE</name> <operator pos:start="39:30" pos:end="39:31">==</operator> <literal type="null" pos:start="39:33" pos:end="39:36">null</literal></expr>)</condition> <block pos:start="39:39" pos:end="45:17">{<block_content pos:start="40:25" pos:end="44:25">
			<synchronized pos:start="40:25" pos:end="44:25">synchronized <init pos:start="40:38" pos:end="40:58">(<expr pos:start="40:39" pos:end="40:57"><name pos:start="40:39" pos:end="40:57"><name pos:start="40:39" pos:end="40:51">SimpleChecker</name><operator pos:start="40:52" pos:end="40:52">.</operator><name pos:start="40:53" pos:end="40:57">class</name></name></expr>)</init> <block pos:start="40:60" pos:end="44:25">{<block_content pos:start="41:33" pos:end="43:33">
				<if_stmt pos:start="41:33" pos:end="43:33"><if pos:start="41:33" pos:end="43:33">if <condition pos:start="41:36" pos:end="41:53">(<expr pos:start="41:37" pos:end="41:52"><name pos:start="41:37" pos:end="41:44">INSTANCE</name> <operator pos:start="41:46" pos:end="41:47">==</operator> <literal type="null" pos:start="41:49" pos:end="41:52">null</literal></expr>)</condition> <block pos:start="41:55" pos:end="43:33">{<block_content pos:start="42:41" pos:end="42:73">
					<expr_stmt pos:start="42:41" pos:end="42:73"><expr pos:start="42:41" pos:end="42:72"><name pos:start="42:41" pos:end="42:48">INSTANCE</name> <operator pos:start="42:50" pos:end="42:50">=</operator> <operator pos:start="42:52" pos:end="42:54">new</operator> <call pos:start="42:56" pos:end="42:72"><name pos:start="42:56" pos:end="42:70">DistanceChecker</name><argument_list pos:start="42:71" pos:end="42:72">()</argument_list></call></expr>;</expr_stmt>
				</block_content>}</block></if></if_stmt>
			</block_content>}</block></synchronized>
		</block_content>}</block></if></if_stmt>
		<return pos:start="46:17" pos:end="46:32">return <expr pos:start="46:24" pos:end="46:31"><name pos:start="46:24" pos:end="46:31">INSTANCE</name></expr>;</return>
	</block_content>}</block></function>

	<function pos:start="49:9" pos:end="52:9"><type pos:start="49:9" pos:end="49:19"><specifier pos:start="49:9" pos:end="49:14">public</specifier> <name pos:start="49:16" pos:end="49:19">void</name></type> <name pos:start="49:21" pos:end="49:26">notify</name><parameter_list pos:start="49:27" pos:end="49:55">(<parameter pos:start="49:28" pos:end="49:54"><decl pos:start="49:28" pos:end="49:54"><type pos:start="49:28" pos:end="49:46"><name pos:start="49:28" pos:end="49:46">IMonitorableMessage</name></type> <name pos:start="49:48" pos:end="49:54">message</name></decl></parameter>)</parameter_list> <block pos:start="49:57" pos:end="52:9">{<block_content pos:start="50:17" pos:end="50:62">
		<expr_stmt pos:start="50:17" pos:end="50:62"><expr pos:start="50:17" pos:end="50:61"><call pos:start="50:17" pos:end="50:61"><name pos:start="50:17" pos:end="50:34"><name pos:start="50:17" pos:end="50:28">messageQueue</name><operator pos:start="50:29" pos:end="50:29">.</operator><name pos:start="50:30" pos:end="50:34">offer</name></name><argument_list pos:start="50:35" pos:end="50:61">(<argument pos:start="50:36" pos:end="50:60"><expr pos:start="50:36" pos:end="50:60"><operator pos:start="50:36" pos:end="50:36">(</operator><name pos:start="50:37" pos:end="50:51">UAVStateMessage</name><operator pos:start="50:52" pos:end="50:52">)</operator> <name pos:start="50:54" pos:end="50:60">message</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	</block_content>}</block></function>

	<class pos:start="54:9" pos:end="64:9"><specifier pos:start="54:9" pos:end="54:15">private</specifier> class <name pos:start="54:23" pos:end="54:31">CheckTask</name> <super_list pos:start="54:33" pos:end="54:49"><extends pos:start="54:33" pos:end="54:49">extends <super pos:start="54:41" pos:end="54:49"><name pos:start="54:41" pos:end="54:49">TimerTask</name></super></extends></super_list> <block pos:start="54:51" pos:end="64:9">{
		<function pos:start="55:17" pos:end="62:17"><annotation pos:start="55:17" pos:end="55:25">@<name pos:start="55:18" pos:end="55:25">Override</name></annotation>
		<type pos:start="56:17" pos:end="56:27"><specifier pos:start="56:17" pos:end="56:22">public</specifier> <name pos:start="56:24" pos:end="56:27">void</name></type> <name pos:start="56:29" pos:end="56:31">run</name><parameter_list pos:start="56:32" pos:end="56:33">()</parameter_list> <block pos:start="56:35" pos:end="62:17">{<block_content pos:start="57:25" pos:end="61:44">
			<decl_stmt pos:start="57:25" pos:end="57:74"><decl pos:start="57:25" pos:end="57:73"><type pos:start="57:25" pos:end="57:45"><name pos:start="57:25" pos:end="57:45"><name pos:start="57:25" pos:end="57:28">List</name><argument_list type="generic" pos:start="57:29" pos:end="57:45">&lt;<argument pos:start="57:30" pos:end="57:44"><name pos:start="57:30" pos:end="57:44">UAVStateMessage</name></argument>&gt;</argument_list></name></type> <name pos:start="57:47" pos:end="57:53">toCheck</name> <init pos:start="57:55" pos:end="57:73">= <expr pos:start="57:57" pos:end="57:73"><operator pos:start="57:57" pos:end="57:59">new</operator> <call pos:start="57:61" pos:end="57:73"><name pos:start="57:61" pos:end="57:71"><name pos:start="57:61" pos:end="57:69">ArrayList</name><argument_list type="generic" pos:start="57:70" pos:end="57:71">&lt;&gt;</argument_list></name><argument_list pos:start="57:72" pos:end="57:73">()</argument_list></call></expr></init></decl>;</decl_stmt>
			<expr_stmt pos:start="58:25" pos:end="58:54"><expr pos:start="58:25" pos:end="58:53"><call pos:start="58:25" pos:end="58:53"><name pos:start="58:25" pos:end="58:44"><name pos:start="58:25" pos:end="58:36">messageQueue</name><operator pos:start="58:37" pos:end="58:37">.</operator><name pos:start="58:38" pos:end="58:44">drainTo</name></name><argument_list pos:start="58:45" pos:end="58:53">(<argument pos:start="58:46" pos:end="58:52"><expr pos:start="58:46" pos:end="58:52"><name pos:start="58:46" pos:end="58:52">toCheck</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<comment type="line" pos:start="59:25" pos:end="59:86">// System.out.println("RUN DISTANCE CHECK!" + dataMap.size());</comment>
			<expr_stmt pos:start="60:25" pos:end="60:51"><expr pos:start="60:25" pos:end="60:50"><call pos:start="60:25" pos:end="60:50"><name pos:start="60:25" pos:end="60:41">calculateDistance</name><argument_list pos:start="60:42" pos:end="60:50">(<argument pos:start="60:43" pos:end="60:49"><expr pos:start="60:43" pos:end="60:49"><name pos:start="60:43" pos:end="60:49">toCheck</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt pos:start="61:25" pos:end="61:44"><expr pos:start="61:25" pos:end="61:43"><call pos:start="61:25" pos:end="61:43"><name pos:start="61:25" pos:end="61:41">calculateDistance</name><argument_list pos:start="61:42" pos:end="61:43">()</argument_list></call></expr>;</expr_stmt>
		</block_content>}</block></function>

	}</block></class>

	<function pos:start="66:9" pos:end="82:9"><type pos:start="66:9" pos:end="66:19"><specifier pos:start="66:9" pos:end="66:14">public</specifier> <name pos:start="66:16" pos:end="66:19">void</name></type> <name pos:start="66:21" pos:end="66:34">processMessage</name><parameter_list pos:start="66:35" pos:end="66:55">(<parameter pos:start="66:36" pos:end="66:54"><decl pos:start="66:36" pos:end="66:54"><type pos:start="66:36" pos:end="66:50"><name pos:start="66:36" pos:end="66:50">UAVStateMessage</name></type> <name pos:start="66:52" pos:end="66:54">msg</name></decl></parameter>)</parameter_list> <block pos:start="66:57" pos:end="82:9">{<block_content pos:start="67:17" pos:end="81:17">
		<try pos:start="67:17" pos:end="81:17">try <block pos:start="67:21" pos:end="79:17">{<block_content pos:start="69:25" pos:end="76:95">

			<decl_stmt pos:start="69:25" pos:end="69:70"><decl pos:start="69:25" pos:end="69:69"><type pos:start="69:25" pos:end="69:30"><name pos:start="69:25" pos:end="69:30">double</name></type> <name pos:start="69:32" pos:end="69:35">xVal</name> <init pos:start="69:37" pos:end="69:69">= <expr pos:start="69:39" pos:end="69:69"><call pos:start="69:39" pos:end="69:55"><name pos:start="69:39" pos:end="69:53"><name pos:start="69:39" pos:end="69:41">msg</name><operator pos:start="69:42" pos:end="69:42">.</operator><name pos:start="69:43" pos:end="69:53">getLocation</name></name><argument_list pos:start="69:54" pos:end="69:55">()</argument_list></call><operator pos:start="69:56" pos:end="69:56">.</operator><call pos:start="69:57" pos:end="69:69"><name pos:start="69:57" pos:end="69:67">getLatitude</name><argument_list pos:start="69:68" pos:end="69:69">()</argument_list></call></expr></init></decl>;</decl_stmt>
			<decl_stmt pos:start="70:25" pos:end="70:71"><decl pos:start="70:25" pos:end="70:70"><type pos:start="70:25" pos:end="70:30"><name pos:start="70:25" pos:end="70:30">double</name></type> <name pos:start="70:32" pos:end="70:35">yVal</name> <init pos:start="70:37" pos:end="70:70">= <expr pos:start="70:39" pos:end="70:70"><call pos:start="70:39" pos:end="70:55"><name pos:start="70:39" pos:end="70:53"><name pos:start="70:39" pos:end="70:41">msg</name><operator pos:start="70:42" pos:end="70:42">.</operator><name pos:start="70:43" pos:end="70:53">getLocation</name></name><argument_list pos:start="70:54" pos:end="70:55">()</argument_list></call><operator pos:start="70:56" pos:end="70:56">.</operator><call pos:start="70:57" pos:end="70:70"><name pos:start="70:57" pos:end="70:68">getLongitude</name><argument_list pos:start="70:69" pos:end="70:70">()</argument_list></call></expr></init></decl>;</decl_stmt>
			<decl_stmt pos:start="71:25" pos:end="71:70"><decl pos:start="71:25" pos:end="71:69"><type pos:start="71:25" pos:end="71:30"><name pos:start="71:25" pos:end="71:30">double</name></type> <name pos:start="71:32" pos:end="71:35">zVal</name> <init pos:start="71:37" pos:end="71:69">= <expr pos:start="71:39" pos:end="71:69"><call pos:start="71:39" pos:end="71:55"><name pos:start="71:39" pos:end="71:53"><name pos:start="71:39" pos:end="71:41">msg</name><operator pos:start="71:42" pos:end="71:42">.</operator><name pos:start="71:43" pos:end="71:53">getLocation</name></name><argument_list pos:start="71:54" pos:end="71:55">()</argument_list></call><operator pos:start="71:56" pos:end="71:56">.</operator><call pos:start="71:57" pos:end="71:69"><name pos:start="71:57" pos:end="71:67">getAltitude</name><argument_list pos:start="71:68" pos:end="71:69">()</argument_list></call></expr></init></decl>;</decl_stmt>

			<decl_stmt pos:start="73:25" pos:end="73:81"><decl pos:start="73:25" pos:end="73:80"><type pos:start="73:25" pos:end="73:37"><name pos:start="73:25" pos:end="73:37">LlaCoordinate</name></type> <name pos:start="73:39" pos:end="73:42">cord</name> <init pos:start="73:44" pos:end="73:80">= <expr pos:start="73:46" pos:end="73:80"><operator pos:start="73:46" pos:end="73:48">new</operator> <call pos:start="73:50" pos:end="73:80"><name pos:start="73:50" pos:end="73:62">LlaCoordinate</name><argument_list pos:start="73:63" pos:end="73:80">(<argument pos:start="73:64" pos:end="73:67"><expr pos:start="73:64" pos:end="73:67"><name pos:start="73:64" pos:end="73:67">xVal</name></expr></argument>, <argument pos:start="73:70" pos:end="73:73"><expr pos:start="73:70" pos:end="73:73"><name pos:start="73:70" pos:end="73:73">yVal</name></expr></argument>, <argument pos:start="73:76" pos:end="73:79"><expr pos:start="73:76" pos:end="73:79"><name pos:start="73:76" pos:end="73:79">zVal</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<comment type="line" pos:start="74:25" pos:end="74:76">// System.out.println(event.getSource()+":::"+cord);</comment>

			<expr_stmt pos:start="76:25" pos:end="76:95"><expr pos:start="76:25" pos:end="76:94"><call pos:start="76:25" pos:end="76:94"><name pos:start="76:25" pos:end="76:35"><name pos:start="76:25" pos:end="76:31">dataMap</name><operator pos:start="76:32" pos:end="76:32">.</operator><name pos:start="76:33" pos:end="76:35">add</name></name><argument_list pos:start="76:36" pos:end="76:94">(<argument pos:start="76:37" pos:end="76:50"><expr pos:start="76:37" pos:end="76:50"><call pos:start="76:37" pos:end="76:50"><name pos:start="76:37" pos:end="76:48"><name pos:start="76:37" pos:end="76:39">msg</name><operator pos:start="76:40" pos:end="76:40">.</operator><name pos:start="76:41" pos:end="76:48">getUavid</name></name><argument_list pos:start="76:49" pos:end="76:50">()</argument_list></call></expr></argument>, <argument pos:start="76:53" pos:end="76:93"><expr pos:start="76:53" pos:end="76:93"><call pos:start="76:53" pos:end="76:93"><name pos:start="76:53" pos:end="76:63"><name pos:start="76:53" pos:end="76:56">Pair</name><operator pos:start="76:57" pos:end="76:57">.</operator><name pos:start="76:58" pos:end="76:63">create</name></name><argument_list pos:start="76:64" pos:end="76:93">(<argument pos:start="76:65" pos:end="76:86"><expr pos:start="76:65" pos:end="76:86"><call pos:start="76:65" pos:end="76:86"><name pos:start="76:65" pos:end="76:84"><name pos:start="76:65" pos:end="76:67">msg</name><operator pos:start="76:68" pos:end="76:68">.</operator><name pos:start="76:69" pos:end="76:84">getSendtimestamp</name></name><argument_list pos:start="76:85" pos:end="76:86">()</argument_list></call></expr></argument>, <argument pos:start="76:89" pos:end="76:92"><expr pos:start="76:89" pos:end="76:92"><name pos:start="76:89" pos:end="76:92">cord</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

			<comment type="line" pos:start="78:25" pos:end="78:85">// setLastValidState(Boolean.parseBoolean(value.toString()));</comment>
		</block_content>}</block> <catch pos:start="79:19" pos:end="81:17">catch <parameter_list pos:start="79:25" pos:end="79:37">(<parameter pos:start="79:26" pos:end="79:36"><decl pos:start="79:26" pos:end="79:36"><type pos:start="79:26" pos:end="79:36"><name pos:start="79:26" pos:end="79:34">Throwable</name></type> <name pos:start="79:36" pos:end="79:36">e</name></decl></parameter>)</parameter_list> <block pos:start="79:39" pos:end="81:17">{<block_content pos:start="80:25" pos:end="80:40">
			<expr_stmt pos:start="80:25" pos:end="80:40"><expr pos:start="80:25" pos:end="80:39"><call pos:start="80:25" pos:end="80:39"><name pos:start="80:25" pos:end="80:36"><name pos:start="80:25" pos:end="80:30">LOGGER</name><operator pos:start="80:31" pos:end="80:31">.</operator><name pos:start="80:32" pos:end="80:36">error</name></name><argument_list pos:start="80:37" pos:end="80:39">(<argument pos:start="80:38" pos:end="80:38"><expr pos:start="80:38" pos:end="80:38"><name pos:start="80:38" pos:end="80:38">e</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		</block_content>}</block></catch></try>
	</block_content>}</block></function>

	<function pos:start="84:9" pos:end="137:9"><type pos:start="84:9" pos:end="84:19"><specifier pos:start="84:9" pos:end="84:14">public</specifier> <name pos:start="84:16" pos:end="84:19">void</name></type> <name pos:start="84:21" pos:end="84:37">calculateDistance</name><parameter_list pos:start="84:38" pos:end="84:39">()</parameter_list> <block pos:start="84:41" pos:end="137:9">{<block_content pos:start="85:17" pos:end="135:17">
		<try pos:start="85:17" pos:end="135:17">try <block pos:start="85:21" pos:end="133:17">{<block_content pos:start="86:25" pos:end="132:25">
			<decl_stmt pos:start="86:25" pos:end="86:99"><decl pos:start="86:25" pos:end="86:98"><type pos:start="86:25" pos:end="86:58"><name pos:start="86:25" pos:end="86:58"><name pos:start="86:25" pos:end="86:44">ManagedHashTableList</name><argument_list type="generic" pos:start="86:45" pos:end="86:58">&lt;<argument pos:start="86:46" pos:end="86:51"><name pos:start="86:46" pos:end="86:51">String</name></argument>, <argument pos:start="86:54" pos:end="86:57"><name pos:start="86:54" pos:end="86:57">Pair</name></argument>&gt;</argument_list></name></type> <name pos:start="86:60" pos:end="86:67">checkMap</name> <init pos:start="86:69" pos:end="86:98">= <expr pos:start="86:71" pos:end="86:98"><operator pos:start="86:71" pos:end="86:73">new</operator> <call pos:start="86:75" pos:end="86:98"><name pos:start="86:75" pos:end="86:96"><name pos:start="86:75" pos:end="86:94">ManagedHashTableList</name><argument_list type="generic" pos:start="86:95" pos:end="86:96">&lt;&gt;</argument_list></name><argument_list pos:start="86:97" pos:end="86:98">()</argument_list></call></expr></init></decl>;</decl_stmt>
			<synchronized pos:start="87:25" pos:end="92:25">synchronized <init pos:start="87:38" pos:end="87:46">(<expr pos:start="87:39" pos:end="87:45"><name pos:start="87:39" pos:end="87:45">dataMap</name></expr>)</init> <block pos:start="87:48" pos:end="92:25">{<block_content pos:start="88:33" pos:end="91:48">
				<for pos:start="88:33" pos:end="90:33">for <control pos:start="88:37" pos:end="88:86">(<init pos:start="88:38" pos:end="88:85"><decl pos:start="88:38" pos:end="88:85"><type pos:start="88:38" pos:end="88:62"><name pos:start="88:38" pos:end="88:62"><name pos:start="88:38" pos:end="88:42">Entry</name><argument_list type="generic" pos:start="88:43" pos:end="88:62">&lt;<argument pos:start="88:44" pos:end="88:49"><name pos:start="88:44" pos:end="88:49">String</name></argument>, <argument pos:start="88:52" pos:end="88:61"><name pos:start="88:52" pos:end="88:61"><name pos:start="88:52" pos:end="88:55">List</name><argument_list type="generic" pos:start="88:56" pos:end="88:61">&lt;<argument pos:start="88:57" pos:end="88:60"><name pos:start="88:57" pos:end="88:60">Pair</name></argument>&gt;</argument_list></name></argument>&gt;</argument_list></name></type> <name pos:start="88:64" pos:end="88:64">e</name> <range pos:start="88:66" pos:end="88:85">: <expr pos:start="88:68" pos:end="88:85"><call pos:start="88:68" pos:end="88:85"><name pos:start="88:68" pos:end="88:83"><name pos:start="88:68" pos:end="88:74">dataMap</name><operator pos:start="88:75" pos:end="88:75">.</operator><name pos:start="88:76" pos:end="88:83">entrySet</name></name><argument_list pos:start="88:84" pos:end="88:85">()</argument_list></call></expr></range></decl></init>)</control> <block pos:start="88:88" pos:end="90:33">{<block_content pos:start="89:41" pos:end="89:79">
					<expr_stmt pos:start="89:41" pos:end="89:79"><expr pos:start="89:41" pos:end="89:78"><call pos:start="89:41" pos:end="89:78"><name pos:start="89:41" pos:end="89:52"><name pos:start="89:41" pos:end="89:48">checkMap</name><operator pos:start="89:49" pos:end="89:49">.</operator><name pos:start="89:50" pos:end="89:52">put</name></name><argument_list pos:start="89:53" pos:end="89:78">(<argument pos:start="89:54" pos:end="89:63"><expr pos:start="89:54" pos:end="89:63"><call pos:start="89:54" pos:end="89:63"><name pos:start="89:54" pos:end="89:61"><name pos:start="89:54" pos:end="89:54">e</name><operator pos:start="89:55" pos:end="89:55">.</operator><name pos:start="89:56" pos:end="89:61">getKey</name></name><argument_list pos:start="89:62" pos:end="89:63">()</argument_list></call></expr></argument>, <argument pos:start="89:66" pos:end="89:77"><expr pos:start="89:66" pos:end="89:77"><call pos:start="89:66" pos:end="89:77"><name pos:start="89:66" pos:end="89:75"><name pos:start="89:66" pos:end="89:66">e</name><operator pos:start="89:67" pos:end="89:67">.</operator><name pos:start="89:68" pos:end="89:75">getValue</name></name><argument_list pos:start="89:76" pos:end="89:77">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				</block_content>}</block></for>
				<expr_stmt pos:start="91:33" pos:end="91:48"><expr pos:start="91:33" pos:end="91:47"><call pos:start="91:33" pos:end="91:47"><name pos:start="91:33" pos:end="91:45"><name pos:start="91:33" pos:end="91:39">dataMap</name><operator pos:start="91:40" pos:end="91:40">.</operator><name pos:start="91:41" pos:end="91:45">clear</name></name><argument_list pos:start="91:46" pos:end="91:47">()</argument_list></call></expr>;</expr_stmt>
			</block_content>}</block></synchronized>

			<for pos:start="94:25" pos:end="132:25">for <control pos:start="94:29" pos:end="94:79">(<init pos:start="94:30" pos:end="94:78"><decl pos:start="94:30" pos:end="94:78"><type pos:start="94:30" pos:end="94:54"><name pos:start="94:30" pos:end="94:54"><name pos:start="94:30" pos:end="94:34">Entry</name><argument_list type="generic" pos:start="94:35" pos:end="94:54">&lt;<argument pos:start="94:36" pos:end="94:41"><name pos:start="94:36" pos:end="94:41">String</name></argument>, <argument pos:start="94:44" pos:end="94:53"><name pos:start="94:44" pos:end="94:53"><name pos:start="94:44" pos:end="94:47">List</name><argument_list type="generic" pos:start="94:48" pos:end="94:53">&lt;<argument pos:start="94:49" pos:end="94:52"><name pos:start="94:49" pos:end="94:52">Pair</name></argument>&gt;</argument_list></name></argument>&gt;</argument_list></name></type> <name pos:start="94:56" pos:end="94:56">e</name> <range pos:start="94:58" pos:end="94:78">: <expr pos:start="94:60" pos:end="94:78"><call pos:start="94:60" pos:end="94:78"><name pos:start="94:60" pos:end="94:76"><name pos:start="94:60" pos:end="94:67">checkMap</name><operator pos:start="94:68" pos:end="94:68">.</operator><name pos:start="94:69" pos:end="94:76">entrySet</name></name><argument_list pos:start="94:77" pos:end="94:78">()</argument_list></call></expr></range></decl></init>)</control> <block pos:start="94:81" pos:end="132:25">{<block_content pos:start="95:33" pos:end="131:33">
				<decl_stmt pos:start="95:33" pos:end="95:55"><decl pos:start="95:33" pos:end="95:54"><type pos:start="95:33" pos:end="95:38"><name pos:start="95:33" pos:end="95:38">String</name></type> <name pos:start="95:40" pos:end="95:41">id</name> <init pos:start="95:43" pos:end="95:54">= <expr pos:start="95:45" pos:end="95:54"><call pos:start="95:45" pos:end="95:54"><name pos:start="95:45" pos:end="95:52"><name pos:start="95:45" pos:end="95:45">e</name><operator pos:start="95:46" pos:end="95:46">.</operator><name pos:start="95:47" pos:end="95:52">getKey</name></name><argument_list pos:start="95:53" pos:end="95:54">()</argument_list></call></expr></init></decl>;</decl_stmt>
				<decl_stmt pos:start="96:33" pos:end="96:64"><decl pos:start="96:33" pos:end="96:63"><type pos:start="96:33" pos:end="96:42"><name pos:start="96:33" pos:end="96:42"><name pos:start="96:33" pos:end="96:36">List</name><argument_list type="generic" pos:start="96:37" pos:end="96:42">&lt;<argument pos:start="96:38" pos:end="96:41"><name pos:start="96:38" pos:end="96:41">Pair</name></argument>&gt;</argument_list></name></type> <name pos:start="96:44" pos:end="96:48">cords</name> <init pos:start="96:50" pos:end="96:63">= <expr pos:start="96:52" pos:end="96:63"><call pos:start="96:52" pos:end="96:63"><name pos:start="96:52" pos:end="96:61"><name pos:start="96:52" pos:end="96:52">e</name><operator pos:start="96:53" pos:end="96:53">.</operator><name pos:start="96:54" pos:end="96:61">getValue</name></name><argument_list pos:start="96:62" pos:end="96:63">()</argument_list></call></expr></init></decl>;</decl_stmt>

				<for pos:start="98:33" pos:end="131:33">for <control pos:start="98:37" pos:end="98:56">(<init pos:start="98:38" pos:end="98:55"><decl pos:start="98:38" pos:end="98:55"><type pos:start="98:38" pos:end="98:41"><name pos:start="98:38" pos:end="98:41">Pair</name></type> <name pos:start="98:43" pos:end="98:47">corrd</name> <range pos:start="98:49" pos:end="98:55">: <expr pos:start="98:51" pos:end="98:55"><name pos:start="98:51" pos:end="98:55">cords</name></expr></range></decl></init>)</control> <block pos:start="98:58" pos:end="131:33">{<block_content pos:start="99:41" pos:end="130:41">
					<for pos:start="99:41" pos:end="130:41">for <control pos:start="99:45" pos:end="99:95">(<init pos:start="99:46" pos:end="99:94"><decl pos:start="99:46" pos:end="99:94"><type pos:start="99:46" pos:end="99:70"><name pos:start="99:46" pos:end="99:70"><name pos:start="99:46" pos:end="99:50">Entry</name><argument_list type="generic" pos:start="99:51" pos:end="99:70">&lt;<argument pos:start="99:52" pos:end="99:57"><name pos:start="99:52" pos:end="99:57">String</name></argument>, <argument pos:start="99:60" pos:end="99:69"><name pos:start="99:60" pos:end="99:69"><name pos:start="99:60" pos:end="99:63">List</name><argument_list type="generic" pos:start="99:64" pos:end="99:69">&lt;<argument pos:start="99:65" pos:end="99:68"><name pos:start="99:65" pos:end="99:68">Pair</name></argument>&gt;</argument_list></name></argument>&gt;</argument_list></name></type> <name pos:start="99:72" pos:end="99:72">f</name> <range pos:start="99:74" pos:end="99:94">: <expr pos:start="99:76" pos:end="99:94"><call pos:start="99:76" pos:end="99:94"><name pos:start="99:76" pos:end="99:92"><name pos:start="99:76" pos:end="99:83">checkMap</name><operator pos:start="99:84" pos:end="99:84">.</operator><name pos:start="99:85" pos:end="99:92">entrySet</name></name><argument_list pos:start="99:93" pos:end="99:94">()</argument_list></call></expr></range></decl></init>)</control> <block pos:start="99:97" pos:end="130:41">{<block_content pos:start="100:49" pos:end="128:49">
						<decl_stmt pos:start="100:49" pos:end="100:72"><decl pos:start="100:49" pos:end="100:71"><type pos:start="100:49" pos:end="100:54"><name pos:start="100:49" pos:end="100:54">String</name></type> <name pos:start="100:56" pos:end="100:58">fid</name> <init pos:start="100:60" pos:end="100:71">= <expr pos:start="100:62" pos:end="100:71"><call pos:start="100:62" pos:end="100:71"><name pos:start="100:62" pos:end="100:69"><name pos:start="100:62" pos:end="100:62">f</name><operator pos:start="100:63" pos:end="100:63">.</operator><name pos:start="100:64" pos:end="100:69">getKey</name></name><argument_list pos:start="100:70" pos:end="100:71">()</argument_list></call></expr></init></decl>;</decl_stmt>
						<if_stmt pos:start="101:49" pos:end="103:49"><if pos:start="101:49" pos:end="103:49">if <condition pos:start="101:52" pos:end="101:67">(<expr pos:start="101:53" pos:end="101:66"><call pos:start="101:53" pos:end="101:66"><name pos:start="101:53" pos:end="101:61"><name pos:start="101:53" pos:end="101:54">id</name><operator pos:start="101:55" pos:end="101:55">.</operator><name pos:start="101:56" pos:end="101:61">equals</name></name><argument_list pos:start="101:62" pos:end="101:66">(<argument pos:start="101:63" pos:end="101:65"><expr pos:start="101:63" pos:end="101:65"><name pos:start="101:63" pos:end="101:65">fid</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="101:69" pos:end="103:49">{<block_content pos:start="102:57" pos:end="102:65">
							<continue pos:start="102:57" pos:end="102:65">continue;</continue>
						</block_content>}</block></if></if_stmt>
						<decl_stmt pos:start="104:49" pos:end="104:81"><decl pos:start="104:49" pos:end="104:80"><type pos:start="104:49" pos:end="104:58"><name pos:start="104:49" pos:end="104:58"><name pos:start="104:49" pos:end="104:52">List</name><argument_list type="generic" pos:start="104:53" pos:end="104:58">&lt;<argument pos:start="104:54" pos:end="104:57"><name pos:start="104:54" pos:end="104:57">Pair</name></argument>&gt;</argument_list></name></type> <name pos:start="104:60" pos:end="104:65">fcords</name> <init pos:start="104:67" pos:end="104:80">= <expr pos:start="104:69" pos:end="104:80"><call pos:start="104:69" pos:end="104:80"><name pos:start="104:69" pos:end="104:78"><name pos:start="104:69" pos:end="104:69">f</name><operator pos:start="104:70" pos:end="104:70">.</operator><name pos:start="104:71" pos:end="104:78">getValue</name></name><argument_list pos:start="104:79" pos:end="104:80">()</argument_list></call></expr></init></decl>;</decl_stmt>
						<for pos:start="105:49" pos:end="128:49">for <control pos:start="105:53" pos:end="105:74">(<init pos:start="105:54" pos:end="105:73"><decl pos:start="105:54" pos:end="105:73"><type pos:start="105:54" pos:end="105:57"><name pos:start="105:54" pos:end="105:57">Pair</name></type> <name pos:start="105:59" pos:end="105:64">fcoord</name> <range pos:start="105:66" pos:end="105:73">: <expr pos:start="105:68" pos:end="105:73"><name pos:start="105:68" pos:end="105:73">fcords</name></expr></range></decl></init>)</control> <block pos:start="105:76" pos:end="128:49">{<block_content pos:start="109:57" pos:end="127:57">

							<comment type="line" pos:start="107:57" pos:end="107:133">// System.out.println(id + "-" + fid + "DISTANCE:" + corrd.distance(fcoord));</comment>

							<decl_stmt pos:start="109:57" pos:end="109:120"><decl pos:start="109:57" pos:end="109:119"><type pos:start="109:57" pos:end="109:69"><name pos:start="109:57" pos:end="109:69">LlaCoordinate</name></type> <name pos:start="109:71" pos:end="109:72">c1</name> <init pos:start="109:74" pos:end="109:119">= <expr pos:start="109:76" pos:end="109:119"><operator pos:start="109:76" pos:end="109:76">(</operator><name pos:start="109:77" pos:end="109:89">LlaCoordinate</name><operator pos:start="109:90" pos:end="109:90">)</operator> <call pos:start="109:92" pos:end="109:107"><name pos:start="109:92" pos:end="109:100"><name pos:start="109:92" pos:end="109:95">Pair</name><operator pos:start="109:96" pos:end="109:96">.</operator><name pos:start="109:97" pos:end="109:100">cast</name></name><argument_list pos:start="109:101" pos:end="109:107">(<argument pos:start="109:102" pos:end="109:106"><expr pos:start="109:102" pos:end="109:106"><name pos:start="109:102" pos:end="109:106">corrd</name></expr></argument>)</argument_list></call><operator pos:start="109:108" pos:end="109:108">.</operator><call pos:start="109:109" pos:end="109:119"><name pos:start="109:109" pos:end="109:117">getSecond</name><argument_list pos:start="109:118" pos:end="109:119">()</argument_list></call></expr></init></decl>;</decl_stmt>
							<decl_stmt pos:start="110:57" pos:end="110:121"><decl pos:start="110:57" pos:end="110:120"><type pos:start="110:57" pos:end="110:69"><name pos:start="110:57" pos:end="110:69">LlaCoordinate</name></type> <name pos:start="110:71" pos:end="110:72">c2</name> <init pos:start="110:74" pos:end="110:120">= <expr pos:start="110:76" pos:end="110:120"><operator pos:start="110:76" pos:end="110:76">(</operator><name pos:start="110:77" pos:end="110:89">LlaCoordinate</name><operator pos:start="110:90" pos:end="110:90">)</operator> <call pos:start="110:92" pos:end="110:108"><name pos:start="110:92" pos:end="110:100"><name pos:start="110:92" pos:end="110:95">Pair</name><operator pos:start="110:96" pos:end="110:96">.</operator><name pos:start="110:97" pos:end="110:100">cast</name></name><argument_list pos:start="110:101" pos:end="110:108">(<argument pos:start="110:102" pos:end="110:107"><expr pos:start="110:102" pos:end="110:107"><name pos:start="110:102" pos:end="110:107">fcoord</name></expr></argument>)</argument_list></call><operator pos:start="110:109" pos:end="110:109">.</operator><call pos:start="110:110" pos:end="110:120"><name pos:start="110:110" pos:end="110:118">getSecond</name><argument_list pos:start="110:119" pos:end="110:120">()</argument_list></call></expr></init></decl>;</decl_stmt>

							<decl_stmt pos:start="112:57" pos:end="112:102"><decl pos:start="112:57" pos:end="112:101"><type pos:start="112:57" pos:end="112:60"><name pos:start="112:57" pos:end="112:60">long</name></type> <name pos:start="112:62" pos:end="112:64">ts1</name> <init pos:start="112:66" pos:end="112:101">= <expr pos:start="112:68" pos:end="112:101"><operator pos:start="112:68" pos:end="112:68">(</operator><name pos:start="112:69" pos:end="112:72">long</name><operator pos:start="112:73" pos:end="112:73">)</operator> <call pos:start="112:75" pos:end="112:90"><name pos:start="112:75" pos:end="112:83"><name pos:start="112:75" pos:end="112:78">Pair</name><operator pos:start="112:79" pos:end="112:79">.</operator><name pos:start="112:80" pos:end="112:83">cast</name></name><argument_list pos:start="112:84" pos:end="112:90">(<argument pos:start="112:85" pos:end="112:89"><expr pos:start="112:85" pos:end="112:89"><name pos:start="112:85" pos:end="112:89">corrd</name></expr></argument>)</argument_list></call><operator pos:start="112:91" pos:end="112:91">.</operator><call pos:start="112:92" pos:end="112:101"><name pos:start="112:92" pos:end="112:99">getFirst</name><argument_list pos:start="112:100" pos:end="112:101">()</argument_list></call></expr></init></decl>;</decl_stmt>
							<decl_stmt pos:start="113:57" pos:end="113:103"><decl pos:start="113:57" pos:end="113:102"><type pos:start="113:57" pos:end="113:60"><name pos:start="113:57" pos:end="113:60">long</name></type> <name pos:start="113:62" pos:end="113:64">ts2</name> <init pos:start="113:66" pos:end="113:102">= <expr pos:start="113:68" pos:end="113:102"><operator pos:start="113:68" pos:end="113:68">(</operator><name pos:start="113:69" pos:end="113:72">long</name><operator pos:start="113:73" pos:end="113:73">)</operator> <call pos:start="113:75" pos:end="113:91"><name pos:start="113:75" pos:end="113:83"><name pos:start="113:75" pos:end="113:78">Pair</name><operator pos:start="113:79" pos:end="113:79">.</operator><name pos:start="113:80" pos:end="113:83">cast</name></name><argument_list pos:start="113:84" pos:end="113:91">(<argument pos:start="113:85" pos:end="113:90"><expr pos:start="113:85" pos:end="113:90"><name pos:start="113:85" pos:end="113:90">fcoord</name></expr></argument>)</argument_list></call><operator pos:start="113:92" pos:end="113:92">.</operator><call pos:start="113:93" pos:end="113:102"><name pos:start="113:93" pos:end="113:100">getFirst</name><argument_list pos:start="113:101" pos:end="113:102">()</argument_list></call></expr></init></decl>;</decl_stmt>
							<decl_stmt pos:start="114:57" pos:end="114:87"><decl pos:start="114:57" pos:end="114:86"><type pos:start="114:57" pos:end="114:60"><name pos:start="114:57" pos:end="114:60">long</name></type> <name pos:start="114:62" pos:end="114:64">dif</name> <init pos:start="114:66" pos:end="114:86">= <expr pos:start="114:68" pos:end="114:86"><call pos:start="114:68" pos:end="114:86"><name pos:start="114:68" pos:end="114:75"><name pos:start="114:68" pos:end="114:71">Math</name><operator pos:start="114:72" pos:end="114:72">.</operator><name pos:start="114:73" pos:end="114:75">abs</name></name><argument_list pos:start="114:76" pos:end="114:86">(<argument pos:start="114:77" pos:end="114:85"><expr pos:start="114:77" pos:end="114:85"><name pos:start="114:77" pos:end="114:79">ts1</name> <operator pos:start="114:81" pos:end="114:81">-</operator> <name pos:start="114:83" pos:end="114:85">ts2</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
							<comment type="line" pos:start="115:57" pos:end="115:129">// System.out.println(Math.abs(ts1.getTimestamp() - ts2.getTimestamp()));</comment>
							<if_stmt pos:start="116:57" pos:end="119:57"><if pos:start="116:57" pos:end="119:57">if <condition pos:start="116:60" pos:end="116:70">(<expr pos:start="116:61" pos:end="116:69"><name pos:start="116:61" pos:end="116:63">dif</name> <operator pos:start="116:65" pos:end="116:65">&gt;</operator> <literal type="number" pos:start="116:67" pos:end="116:69">500</literal></expr>)</condition> <block pos:start="116:72" pos:end="119:57">{<block_content pos:start="118:65" pos:end="118:73">

								<continue pos:start="118:65" pos:end="118:73">continue;</continue>
							</block_content>}</block></if></if_stmt>

							<decl_stmt pos:start="121:57" pos:end="121:92"><decl pos:start="121:57" pos:end="121:91"><type pos:start="121:57" pos:end="121:62"><name pos:start="121:57" pos:end="121:62">double</name></type> <name pos:start="121:64" pos:end="121:71">distance</name> <init pos:start="121:73" pos:end="121:91">= <expr pos:start="121:75" pos:end="121:91"><operator pos:start="121:75" pos:end="121:75">(</operator><call pos:start="121:76" pos:end="121:90"><name pos:start="121:76" pos:end="121:86"><name pos:start="121:76" pos:end="121:77">c1</name><operator pos:start="121:78" pos:end="121:78">.</operator><name pos:start="121:79" pos:end="121:86">distance</name></name><argument_list pos:start="121:87" pos:end="121:90">(<argument pos:start="121:88" pos:end="121:89"><expr pos:start="121:88" pos:end="121:89"><name pos:start="121:88" pos:end="121:89">c2</name></expr></argument>)</argument_list></call><operator pos:start="121:91" pos:end="121:91">)</operator></expr></init></decl>;</decl_stmt>

							<if_stmt pos:start="123:57" pos:end="127:57"><if pos:start="123:57" pos:end="127:57">if <condition pos:start="123:60" pos:end="123:80">(<expr pos:start="123:61" pos:end="123:79"><name pos:start="123:61" pos:end="123:68">distance</name> <operator pos:start="123:70" pos:end="123:70">&lt;</operator> <name pos:start="123:72" pos:end="123:79">MIN_DIST</name></expr>)</condition> <block pos:start="123:82" pos:end="127:57">{<block_content pos:start="124:65" pos:end="126:146">
								<expr_stmt pos:start="124:65" pos:end="124:93"><expr pos:start="124:65" pos:end="124:92"><call pos:start="124:65" pos:end="124:92"><name pos:start="124:65" pos:end="124:76"><name pos:start="124:65" pos:end="124:70">LOGGER</name><operator pos:start="124:71" pos:end="124:71">.</operator><name pos:start="124:72" pos:end="124:76">error</name></name><argument_list pos:start="124:77" pos:end="124:92">(<argument pos:start="124:78" pos:end="124:91"><expr pos:start="124:78" pos:end="124:91"><literal type="string" pos:start="124:78" pos:end="124:91">"COLLISION!!!"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
								<expr_stmt pos:start="125:65" pos:end="126:146"><expr pos:start="125:65" pos:end="126:145"><call pos:start="125:65" pos:end="125:104"><name pos:start="125:65" pos:end="125:102"><name pos:start="125:65" pos:end="125:90">DronologyMonitoringManager</name><operator pos:start="125:91" pos:end="125:91">.</operator><name pos:start="125:92" pos:end="125:102">getInstance</name></name><argument_list pos:start="125:103" pos:end="125:104">()</argument_list></call><operator pos:start="125:105" pos:end="125:105">.</operator><call pos:start="125:106" pos:end="126:145"><name pos:start="125:106" pos:end="125:112">publish</name><argument_list pos:start="125:113" pos:end="126:145">(<argument pos:start="125:114" pos:end="126:144"><expr pos:start="125:114" pos:end="126:144"><call pos:start="125:114" pos:end="126:144"><name pos:start="125:114" pos:end="125:144"><name pos:start="125:114" pos:end="125:130">MessageMarshaller</name><operator pos:start="125:131" pos:end="125:131">.</operator><name pos:start="125:132" pos:end="125:144">createMessage</name></name><argument_list pos:start="125:145" pos:end="126:144">(
										<argument pos:start="126:81" pos:end="126:101"><expr pos:start="126:81" pos:end="126:101"><name pos:start="126:81" pos:end="126:101"><name pos:start="126:81" pos:end="126:91">MessageType</name><operator pos:start="126:92" pos:end="126:92">.</operator><name pos:start="126:93" pos:end="126:101">COLLISION</name></name></expr></argument>, <argument pos:start="126:104" pos:end="126:105"><expr pos:start="126:104" pos:end="126:105"><name pos:start="126:104" pos:end="126:105">id</name></expr></argument>, <argument pos:start="126:108" pos:end="126:143"><expr pos:start="126:108" pos:end="126:143"><operator pos:start="126:108" pos:end="126:110">new</operator> <call pos:start="126:112" pos:end="126:143"><name pos:start="126:112" pos:end="126:124">CollisionInfo</name><argument_list pos:start="126:125" pos:end="126:143">(<argument pos:start="126:126" pos:end="126:127"><expr pos:start="126:126" pos:end="126:127"><name pos:start="126:126" pos:end="126:127">id</name></expr></argument>, <argument pos:start="126:130" pos:end="126:132"><expr pos:start="126:130" pos:end="126:132"><name pos:start="126:130" pos:end="126:132">fid</name></expr></argument>, <argument pos:start="126:135" pos:end="126:142"><expr pos:start="126:135" pos:end="126:142"><name pos:start="126:135" pos:end="126:142">distance</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
							</block_content>}</block></if></if_stmt>
						</block_content>}</block></for>

					</block_content>}</block></for>
				</block_content>}</block></for>
			</block_content>}</block></for>
		</block_content>}</block> <catch pos:start="133:19" pos:end="135:17">catch <parameter_list pos:start="133:25" pos:end="133:37">(<parameter pos:start="133:26" pos:end="133:36"><decl pos:start="133:26" pos:end="133:36"><type pos:start="133:26" pos:end="133:36"><name pos:start="133:26" pos:end="133:34">Throwable</name></type> <name pos:start="133:36" pos:end="133:36">t</name></decl></parameter>)</parameter_list> <block pos:start="133:39" pos:end="135:17">{<block_content pos:start="134:25" pos:end="134:44">
			<expr_stmt pos:start="134:25" pos:end="134:44"><expr pos:start="134:25" pos:end="134:43"><call pos:start="134:25" pos:end="134:43"><name pos:start="134:25" pos:end="134:41"><name pos:start="134:25" pos:end="134:25">t</name><operator pos:start="134:26" pos:end="134:26">.</operator><name pos:start="134:27" pos:end="134:41">printStackTrace</name></name><argument_list pos:start="134:42" pos:end="134:43">()</argument_list></call></expr>;</expr_stmt>
		</block_content>}</block></catch></try>

	</block_content>}</block></function>

	<function pos:start="139:9" pos:end="144:9"><type pos:start="139:9" pos:end="139:19"><specifier pos:start="139:9" pos:end="139:14">public</specifier> <name pos:start="139:16" pos:end="139:19">void</name></type> <name pos:start="139:21" pos:end="139:37">calculateDistance</name><parameter_list pos:start="139:38" pos:end="139:68">(<parameter pos:start="139:39" pos:end="139:67"><decl pos:start="139:39" pos:end="139:67"><type pos:start="139:39" pos:end="139:59"><name pos:start="139:39" pos:end="139:59"><name pos:start="139:39" pos:end="139:42">List</name><argument_list type="generic" pos:start="139:43" pos:end="139:59">&lt;<argument pos:start="139:44" pos:end="139:58"><name pos:start="139:44" pos:end="139:58">UAVStateMessage</name></argument>&gt;</argument_list></name></type> <name pos:start="139:61" pos:end="139:67">toCheck</name></decl></parameter>)</parameter_list> <block pos:start="139:70" pos:end="144:9">{<block_content pos:start="140:17" pos:end="142:19">
		<expr_stmt pos:start="140:17" pos:end="142:19"><expr pos:start="140:17" pos:end="142:18"><call pos:start="140:17" pos:end="142:18"><name pos:start="140:17" pos:end="140:31"><name pos:start="140:17" pos:end="140:23">toCheck</name><operator pos:start="140:24" pos:end="140:24">.</operator><name pos:start="140:25" pos:end="140:31">forEach</name></name><argument_list pos:start="140:32" pos:end="142:18">(<argument pos:start="140:33" pos:end="142:17"><expr pos:start="140:33" pos:end="142:17"><lambda pos:start="140:33" pos:end="142:17"><parameter_list type="pseudo" pos:start="140:33" pos:end="140:33"><parameter pos:start="140:33" pos:end="140:33"><decl pos:start="140:33" pos:end="140:33"><name pos:start="140:33" pos:end="140:33">m</name></decl></parameter></parameter_list> -&gt; <block pos:start="140:38" pos:end="142:17">{<block_content pos:start="141:25" pos:end="141:42">
			<expr_stmt pos:start="141:25" pos:end="141:42"><expr pos:start="141:25" pos:end="141:41"><call pos:start="141:25" pos:end="141:41"><name pos:start="141:25" pos:end="141:38">processMessage</name><argument_list pos:start="141:39" pos:end="141:41">(<argument pos:start="141:40" pos:end="141:40"><expr pos:start="141:40" pos:end="141:40"><name pos:start="141:40" pos:end="141:40">m</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		</block_content>}</block></lambda></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	</block_content>}</block></function>

}</block></class>
</unit>
