<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="Java" filename="src/ArtifactIdentifier.java" pos:tabs="8"><package pos:start="1:1" pos:end="1:41">package <name pos:start="1:9" pos:end="1:40"><name pos:start="1:9" pos:end="1:11">edu</name><operator pos:start="1:12" pos:end="1:12">.</operator><name pos:start="1:13" pos:end="1:14">nd</name><operator pos:start="1:15" pos:end="1:15">.</operator><name pos:start="1:16" pos:end="1:24">dronology</name><operator pos:start="1:25" pos:end="1:25">.</operator><name pos:start="1:26" pos:end="1:29">core</name><operator pos:start="1:30" pos:end="1:30">.</operator><name pos:start="1:31" pos:end="1:40">monitoring</name></name>;</package>

<import pos:start="3:1" pos:end="3:28">import <name pos:start="3:8" pos:end="3:27"><name pos:start="3:8" pos:end="3:11">java</name><operator pos:start="3:12" pos:end="3:12">.</operator><name pos:start="3:13" pos:end="3:14">io</name><operator pos:start="3:15" pos:end="3:15">.</operator><name pos:start="3:16" pos:end="3:27">Serializable</name></name>;</import>
<import pos:start="4:1" pos:end="4:24">import <name pos:start="4:8" pos:end="4:23"><name pos:start="4:8" pos:end="4:11">java</name><operator pos:start="4:12" pos:end="4:12">.</operator><name pos:start="4:13" pos:end="4:16">util</name><operator pos:start="4:17" pos:end="4:17">.</operator><name pos:start="4:18" pos:end="4:23">Arrays</name></name>;</import>
<import pos:start="5:1" pos:end="5:28">import <name pos:start="5:8" pos:end="5:27"><name pos:start="5:8" pos:end="5:11">java</name><operator pos:start="5:12" pos:end="5:12">.</operator><name pos:start="5:13" pos:end="5:16">util</name><operator pos:start="5:17" pos:end="5:17">.</operator><name pos:start="5:18" pos:end="5:27">Collection</name></name>;</import>
<import pos:start="6:1" pos:end="6:29">import <name pos:start="6:8" pos:end="6:28"><name pos:start="6:8" pos:end="6:11">java</name><operator pos:start="6:12" pos:end="6:12">.</operator><name pos:start="6:13" pos:end="6:16">util</name><operator pos:start="6:17" pos:end="6:17">.</operator><name pos:start="6:18" pos:end="6:28">Collections</name></name>;</import>
<import pos:start="7:1" pos:end="7:25">import <name pos:start="7:8" pos:end="7:24"><name pos:start="7:8" pos:end="7:11">java</name><operator pos:start="7:12" pos:end="7:12">.</operator><name pos:start="7:13" pos:end="7:16">util</name><operator pos:start="7:17" pos:end="7:17">.</operator><name pos:start="7:18" pos:end="7:24">HashSet</name></name>;</import>
<import pos:start="8:1" pos:end="8:21">import <name pos:start="8:8" pos:end="8:20"><name pos:start="8:8" pos:end="8:11">java</name><operator pos:start="8:12" pos:end="8:12">.</operator><name pos:start="8:13" pos:end="8:16">util</name><operator pos:start="8:17" pos:end="8:17">.</operator><name pos:start="8:18" pos:end="8:20">Set</name></name>;</import>
<import pos:start="9:1" pos:end="9:49">import <name pos:start="9:8" pos:end="9:48"><name pos:start="9:8" pos:end="9:11">java</name><operator pos:start="9:12" pos:end="9:12">.</operator><name pos:start="9:13" pos:end="9:16">util</name><operator pos:start="9:17" pos:end="9:17">.</operator><name pos:start="9:18" pos:end="9:27">concurrent</name><operator pos:start="9:28" pos:end="9:28">.</operator><name pos:start="9:29" pos:end="9:34">atomic</name><operator pos:start="9:35" pos:end="9:35">.</operator><name pos:start="9:36" pos:end="9:48">AtomicInteger</name></name>;</import>

<import pos:start="11:1" pos:end="11:38">import <name pos:start="11:8" pos:end="11:37"><name pos:start="11:8" pos:end="11:10">edu</name><operator pos:start="11:11" pos:end="11:11">.</operator><name pos:start="11:12" pos:end="11:13">nd</name><operator pos:start="11:14" pos:end="11:14">.</operator><name pos:start="11:15" pos:end="11:23">dronology</name><operator pos:start="11:24" pos:end="11:24">.</operator><name pos:start="11:25" pos:end="11:28">util</name><operator pos:start="11:29" pos:end="11:29">.</operator><name pos:start="11:30" pos:end="11:37">NullUtil</name></name>;</import>

<comment type="block" format="javadoc" pos:start="13:1" pos:end="21:3">/**
 * A structured Identifier. Each object holds an id part and refers to child IDs
 * which in turn&lt;br/&gt; 
 * hold again one id part, etc, which altogether form the whole identifier.
 * &lt;p/&gt;
 * 
 * @author Michael Vierhauser
 * 
 */</comment>
<class pos:start="22:1" pos:end="147:1"><specifier pos:start="22:1" pos:end="22:6">public</specifier> class <name pos:start="22:14" pos:end="22:37"><name pos:start="22:14" pos:end="22:31">ArtifactIdentifier</name><parameter_list pos:start="22:32" pos:end="22:37">&lt;<parameter pos:start="22:33" pos:end="22:36"><name pos:start="22:33" pos:end="22:36">TYPE</name></parameter>&gt;</parameter_list></name> <super_list pos:start="22:39" pos:end="22:61"><implements pos:start="22:39" pos:end="22:61">implements <super pos:start="22:50" pos:end="22:61"><name pos:start="22:50" pos:end="22:61">Serializable</name></super></implements></super_list> <block pos:start="22:63" pos:end="147:1">{

	<decl_stmt pos:start="24:9" pos:end="24:74"><decl pos:start="24:9" pos:end="24:73"><type pos:start="24:9" pos:end="24:33"><specifier pos:start="24:9" pos:end="24:15">private</specifier> <specifier pos:start="24:17" pos:end="24:22">static</specifier> <specifier pos:start="24:24" pos:end="24:28">final</specifier> <name pos:start="24:30" pos:end="24:33">long</name></type> <name pos:start="24:35" pos:end="24:50">serialVersionUID</name> <init pos:start="24:52" pos:end="24:73">= <expr pos:start="24:54" pos:end="24:73"><literal type="number" pos:start="24:54" pos:end="24:73">9173775383058285758L</literal></expr></init></decl>;</decl_stmt>
	<decl_stmt pos:start="25:9" pos:end="25:53"><decl pos:start="25:9" pos:end="25:52"><type pos:start="25:9" pos:end="25:35"><specifier pos:start="25:9" pos:end="25:15">private</specifier> <specifier pos:start="25:17" pos:end="25:22">static</specifier> <specifier pos:start="25:24" pos:end="25:28">final</specifier> <name pos:start="25:30" pos:end="25:35">String</name></type> <name pos:start="25:37" pos:end="25:45">SEPARATOR</name> <init pos:start="25:47" pos:end="25:52">= <expr pos:start="25:49" pos:end="25:52"><literal type="string" pos:start="25:49" pos:end="25:52">"::"</literal></expr></init></decl>;</decl_stmt>
	<decl_stmt pos:start="26:9" pos:end="26:54"><decl pos:start="26:9" pos:end="26:53"><type pos:start="26:9" pos:end="26:34"><specifier pos:start="26:9" pos:end="26:14">public</specifier> <specifier pos:start="26:16" pos:end="26:21">static</specifier> <specifier pos:start="26:23" pos:end="26:27">final</specifier> <name pos:start="26:29" pos:end="26:34">String</name></type> <name pos:start="26:36" pos:end="26:39">ROOT</name> <init pos:start="26:41" pos:end="26:53">= <expr pos:start="26:43" pos:end="26:53"><literal type="string" pos:start="26:43" pos:end="26:53">"DRONOLOGY"</literal></expr></init></decl>;</decl_stmt>

	<comment type="line" pos:start="28:9" pos:end="28:21">// Never null</comment>
	<decl_stmt pos:start="29:9" pos:end="29:32"><decl pos:start="29:9" pos:end="29:31"><type pos:start="29:9" pos:end="29:28"><specifier pos:start="29:9" pos:end="29:15">private</specifier> <specifier pos:start="29:17" pos:end="29:21">final</specifier> <name pos:start="29:23" pos:end="29:28">String</name></type> <name pos:start="29:30" pos:end="29:31">id</name></decl>;</decl_stmt>
	<comment type="line" pos:start="30:9" pos:end="30:68">// May be null, when this is the last part of an identifier.</comment>
	<decl_stmt pos:start="31:9" pos:end="31:67"><decl pos:start="31:9" pos:end="31:66"><type pos:start="31:9" pos:end="31:35"><specifier pos:start="31:9" pos:end="31:14">public</specifier> <specifier pos:start="31:16" pos:end="31:21">static</specifier> <name pos:start="31:23" pos:end="31:35">AtomicInteger</name></type> <name pos:start="31:37" pos:end="31:43">COUNTER</name> <init pos:start="31:45" pos:end="31:66">= <expr pos:start="31:47" pos:end="31:66"><operator pos:start="31:47" pos:end="31:49">new</operator> <call pos:start="31:51" pos:end="31:66"><name pos:start="31:51" pos:end="31:63">AtomicInteger</name><argument_list pos:start="31:64" pos:end="31:66">(<argument pos:start="31:65" pos:end="31:65"><expr pos:start="31:65" pos:end="31:65"><literal type="number" pos:start="31:65" pos:end="31:65">0</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
 
	<decl_stmt pos:start="33:9" pos:end="33:47"><decl pos:start="33:9" pos:end="33:46"><type pos:start="33:9" pos:end="33:40"><specifier pos:start="33:9" pos:end="33:15">private</specifier> <specifier pos:start="33:17" pos:end="33:21">final</specifier> <name pos:start="33:23" pos:end="33:40">ArtifactIdentifier</name></type> <name pos:start="33:42" pos:end="33:46">child</name></decl>;</decl_stmt>
	<decl_stmt pos:start="34:9" pos:end="34:58"><decl pos:start="34:9" pos:end="34:57"><type pos:start="34:9" pos:end="34:25"><specifier pos:start="34:9" pos:end="34:15">private</specifier> <name pos:start="34:17" pos:end="34:25"><name pos:start="34:17" pos:end="34:19">Set</name><argument_list type="generic" pos:start="34:20" pos:end="34:25">&lt;<argument pos:start="34:21" pos:end="34:24"><name pos:start="34:21" pos:end="34:24">TYPE</name></argument>&gt;</argument_list></name></type> <name pos:start="34:27" pos:end="34:39">attacheditems</name> <init pos:start="34:41" pos:end="34:57">= <expr pos:start="34:43" pos:end="34:57"><operator pos:start="34:43" pos:end="34:45">new</operator> <call pos:start="34:47" pos:end="34:57"><name pos:start="34:47" pos:end="34:55"><name pos:start="34:47" pos:end="34:53">HashSet</name><argument_list type="generic" pos:start="34:54" pos:end="34:55">&lt;&gt;</argument_list></name><argument_list pos:start="34:56" pos:end="34:57">()</argument_list></call></expr></init></decl>;</decl_stmt>

	<comment type="block" format="javadoc" pos:start="36:9" pos:end="40:11">/**
	 * 
	 * @param ids
	 *            The ids that will be mapped to root and child ArtifactIdentifier
	 */</comment>
	<constructor pos:start="41:9" pos:end="53:9"><specifier pos:start="41:9" pos:end="41:14">public</specifier> <name pos:start="41:16" pos:end="41:33">ArtifactIdentifier</name><parameter_list pos:start="41:34" pos:end="41:48">(<parameter pos:start="41:35" pos:end="41:47"><decl pos:start="41:35" pos:end="41:47"><type pos:start="41:35" pos:end="41:43"><name pos:start="41:35" pos:end="41:40">String</name><modifier pos:start="41:41" pos:end="41:43">...</modifier></type> <name pos:start="41:45" pos:end="41:47">ids</name></decl></parameter>)</parameter_list> <block pos:start="41:50" pos:end="53:9">{<block_content pos:start="42:17" pos:end="52:17">
		<if_stmt pos:start="42:17" pos:end="44:17"><if pos:start="42:17" pos:end="44:17">if <condition pos:start="42:20" pos:end="42:35">(<expr pos:start="42:21" pos:end="42:34"><name pos:start="42:21" pos:end="42:34"><name pos:start="42:21" pos:end="42:23">ids</name><operator pos:start="42:24" pos:end="42:24">.</operator><name pos:start="42:25" pos:end="42:30">length</name></name> <operator pos:start="42:32" pos:end="42:32">&lt;</operator> <literal type="number" pos:start="42:34" pos:end="42:34">1</literal></expr>)</condition> <block pos:start="42:37" pos:end="44:17">{<block_content pos:start="43:25" pos:end="43:88">
			<throw pos:start="43:25" pos:end="43:88">throw <expr pos:start="43:31" pos:end="43:87"><operator pos:start="43:31" pos:end="43:33">new</operator> <call pos:start="43:35" pos:end="43:87"><name pos:start="43:35" pos:end="43:58">IllegalArgumentException</name><argument_list pos:start="43:59" pos:end="43:87">(<argument pos:start="43:60" pos:end="43:86"><expr pos:start="43:60" pos:end="43:86"><literal type="string" pos:start="43:60" pos:end="43:86">"At least 1 id is required"</literal></expr></argument>)</argument_list></call></expr>;</throw>
		</block_content>}</block></if></if_stmt>
		<expr_stmt pos:start="45:17" pos:end="45:37"><expr pos:start="45:17" pos:end="45:36"><call pos:start="45:17" pos:end="45:36"><name pos:start="45:17" pos:end="45:33"><name pos:start="45:17" pos:end="45:23">COUNTER</name><operator pos:start="45:24" pos:end="45:24">.</operator><name pos:start="45:25" pos:end="45:33">addAndGet</name></name><argument_list pos:start="45:34" pos:end="45:36">(<argument pos:start="45:35" pos:end="45:35"><expr pos:start="45:35" pos:end="45:35"><literal type="number" pos:start="45:35" pos:end="45:35">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt pos:start="46:17" pos:end="46:33"><expr pos:start="46:17" pos:end="46:32"><name pos:start="46:17" pos:end="46:23"><name pos:start="46:17" pos:end="46:20">this</name><operator pos:start="46:21" pos:end="46:21">.</operator><name pos:start="46:22" pos:end="46:23">id</name></name> <operator pos:start="46:25" pos:end="46:25">=</operator> <name pos:start="46:27" pos:end="46:32"><name pos:start="46:27" pos:end="46:29">ids</name><index pos:start="46:30" pos:end="46:32">[<expr pos:start="46:31" pos:end="46:31"><literal type="number" pos:start="46:31" pos:end="46:31">0</literal></expr>]</index></name></expr>;</expr_stmt>
		<expr_stmt pos:start="47:17" pos:end="47:39"><expr pos:start="47:17" pos:end="47:38"><call pos:start="47:17" pos:end="47:38"><name pos:start="47:17" pos:end="47:34"><name pos:start="47:17" pos:end="47:24">NullUtil</name><operator pos:start="47:25" pos:end="47:25">.</operator><name pos:start="47:26" pos:end="47:34">checkNull</name></name><argument_list pos:start="47:35" pos:end="47:38">(<argument pos:start="47:36" pos:end="47:37"><expr pos:start="47:36" pos:end="47:37"><name pos:start="47:36" pos:end="47:37">id</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<if_stmt pos:start="48:17" pos:end="52:17"><if pos:start="48:17" pos:end="50:17">if <condition pos:start="48:20" pos:end="48:35">(<expr pos:start="48:21" pos:end="48:34"><name pos:start="48:21" pos:end="48:30"><name pos:start="48:21" pos:end="48:23">ids</name><operator pos:start="48:24" pos:end="48:24">.</operator><name pos:start="48:25" pos:end="48:30">length</name></name> <operator pos:start="48:32" pos:end="48:32">&gt;</operator> <literal type="number" pos:start="48:34" pos:end="48:34">1</literal></expr>)</condition> <block pos:start="48:37" pos:end="50:17">{<block_content pos:start="49:25" pos:end="49:95">
			<expr_stmt pos:start="49:25" pos:end="49:95"><expr pos:start="49:25" pos:end="49:94"><name pos:start="49:25" pos:end="49:29">child</name> <operator pos:start="49:31" pos:end="49:31">=</operator> <operator pos:start="49:33" pos:end="49:35">new</operator> <call pos:start="49:37" pos:end="49:94"><name pos:start="49:37" pos:end="49:54">ArtifactIdentifier</name><argument_list pos:start="49:55" pos:end="49:94">(<argument pos:start="49:56" pos:end="49:93"><expr pos:start="49:56" pos:end="49:93"><call pos:start="49:56" pos:end="49:93"><name pos:start="49:56" pos:end="49:73"><name pos:start="49:56" pos:end="49:61">Arrays</name><operator pos:start="49:62" pos:end="49:62">.</operator><name pos:start="49:63" pos:end="49:73">copyOfRange</name></name><argument_list pos:start="49:74" pos:end="49:93">(<argument pos:start="49:75" pos:end="49:77"><expr pos:start="49:75" pos:end="49:77"><name pos:start="49:75" pos:end="49:77">ids</name></expr></argument>, <argument pos:start="49:80" pos:end="49:80"><expr pos:start="49:80" pos:end="49:80"><literal type="number" pos:start="49:80" pos:end="49:80">1</literal></expr></argument>, <argument pos:start="49:83" pos:end="49:92"><expr pos:start="49:83" pos:end="49:92"><name pos:start="49:83" pos:end="49:92"><name pos:start="49:83" pos:end="49:85">ids</name><operator pos:start="49:86" pos:end="49:86">.</operator><name pos:start="49:87" pos:end="49:92">length</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		</block_content>}</block></if> <else pos:start="50:19" pos:end="52:17">else <block pos:start="50:24" pos:end="52:17">{<block_content pos:start="51:25" pos:end="51:37">
			<expr_stmt pos:start="51:25" pos:end="51:37"><expr pos:start="51:25" pos:end="51:36"><name pos:start="51:25" pos:end="51:29">child</name> <operator pos:start="51:31" pos:end="51:31">=</operator> <literal type="null" pos:start="51:33" pos:end="51:36">null</literal></expr>;</expr_stmt>
		</block_content>}</block></else></if_stmt>
	</block_content>}</block></constructor>

	<comment type="block" format="javadoc" pos:start="55:9" pos:end="58:11">/**
	 * 
	 * @return The id of the parent ArtifactIdentifier
	 */</comment>
	<function pos:start="59:9" pos:end="61:9"><type pos:start="59:9" pos:end="59:34"><specifier pos:start="59:9" pos:end="59:14">public</specifier> <specifier pos:start="59:16" pos:end="59:27">synchronized</specifier> <name pos:start="59:29" pos:end="59:34">String</name></type> <name pos:start="59:36" pos:end="59:40">getId</name><parameter_list pos:start="59:41" pos:end="59:42">()</parameter_list> <block pos:start="59:44" pos:end="61:9">{<block_content pos:start="60:17" pos:end="60:26">
		<return pos:start="60:17" pos:end="60:26">return <expr pos:start="60:24" pos:end="60:25"><name pos:start="60:24" pos:end="60:25">id</name></expr>;</return>
	</block_content>}</block></function>

	<comment type="block" format="javadoc" pos:start="63:9" pos:end="66:11">/**
	 * 
	 * @return The child ArtifactIdentifier
	 */</comment>
	<function pos:start="67:9" pos:end="69:9"><type pos:start="67:9" pos:end="67:46"><specifier pos:start="67:9" pos:end="67:14">public</specifier> <specifier pos:start="67:16" pos:end="67:27">synchronized</specifier> <name pos:start="67:29" pos:end="67:46">ArtifactIdentifier</name></type> <name pos:start="67:48" pos:end="67:55">getChild</name><parameter_list pos:start="67:56" pos:end="67:57">()</parameter_list> <block pos:start="67:59" pos:end="69:9">{<block_content pos:start="68:17" pos:end="68:29">
		<return pos:start="68:17" pos:end="68:29">return <expr pos:start="68:24" pos:end="68:28"><name pos:start="68:24" pos:end="68:28">child</name></expr>;</return>
	</block_content>}</block></function>

	<comment type="block" format="javadoc" pos:start="71:9" pos:end="73:11">/**
	 * Returns all artifact identifier concatenated (separated by ::)
	 */</comment>
	<function pos:start="74:9" pos:end="80:9"><annotation pos:start="74:9" pos:end="74:17">@<name pos:start="74:10" pos:end="74:17">Override</name></annotation>
	<type pos:start="75:9" pos:end="75:34"><specifier pos:start="75:9" pos:end="75:14">public</specifier> <specifier pos:start="75:16" pos:end="75:27">synchronized</specifier> <name pos:start="75:29" pos:end="75:34">String</name></type> <name pos:start="75:36" pos:end="75:43">toString</name><parameter_list pos:start="75:44" pos:end="75:45">()</parameter_list> <block pos:start="75:47" pos:end="80:9">{<block_content pos:start="76:17" pos:end="79:84">
		<if_stmt pos:start="76:17" pos:end="78:17"><if pos:start="76:17" pos:end="78:17">if <condition pos:start="76:20" pos:end="76:34">(<expr pos:start="76:21" pos:end="76:33"><name pos:start="76:21" pos:end="76:25">child</name> <operator pos:start="76:27" pos:end="76:28">==</operator> <literal type="null" pos:start="76:30" pos:end="76:33">null</literal></expr>)</condition> <block pos:start="76:36" pos:end="78:17">{<block_content pos:start="77:25" pos:end="77:34">
			<return pos:start="77:25" pos:end="77:34">return <expr pos:start="77:32" pos:end="77:33"><name pos:start="77:32" pos:end="77:33">id</name></expr>;</return>
		</block_content>}</block></if></if_stmt>
		<return pos:start="79:17" pos:end="79:84">return <expr pos:start="79:24" pos:end="79:83"><call pos:start="79:24" pos:end="79:83"><name pos:start="79:24" pos:end="79:36"><name pos:start="79:24" pos:end="79:29">String</name><operator pos:start="79:30" pos:end="79:30">.</operator><name pos:start="79:31" pos:end="79:36">format</name></name><argument_list pos:start="79:37" pos:end="79:83">(<argument pos:start="79:38" pos:end="79:60"><expr pos:start="79:38" pos:end="79:60"><literal type="string" pos:start="79:38" pos:end="79:41">"%s"</literal> <operator pos:start="79:43" pos:end="79:43">+</operator> <name pos:start="79:45" pos:end="79:53">SEPARATOR</name> <operator pos:start="79:55" pos:end="79:55">+</operator> <literal type="string" pos:start="79:57" pos:end="79:60">"%s"</literal></expr></argument>, <argument pos:start="79:63" pos:end="79:64"><expr pos:start="79:63" pos:end="79:64"><name pos:start="79:63" pos:end="79:64">id</name></expr></argument>, <argument pos:start="79:67" pos:end="79:82"><expr pos:start="79:67" pos:end="79:82"><call pos:start="79:67" pos:end="79:82"><name pos:start="79:67" pos:end="79:80"><name pos:start="79:67" pos:end="79:71">child</name><operator pos:start="79:72" pos:end="79:72">.</operator><name pos:start="79:73" pos:end="79:80">toString</name></name><argument_list pos:start="79:81" pos:end="79:82">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
	</block_content>}</block></function>

	<function pos:start="82:9" pos:end="89:9"><annotation pos:start="82:9" pos:end="82:17">@<name pos:start="82:10" pos:end="82:17">Override</name></annotation>
	<type pos:start="83:9" pos:end="83:31"><specifier pos:start="83:9" pos:end="83:14">public</specifier> <specifier pos:start="83:16" pos:end="83:27">synchronized</specifier> <name pos:start="83:29" pos:end="83:31">int</name></type> <name pos:start="83:33" pos:end="83:40">hashCode</name><parameter_list pos:start="83:41" pos:end="83:42">()</parameter_list> <block pos:start="83:44" pos:end="89:9">{<block_content pos:start="84:17" pos:end="88:30">
		<decl_stmt pos:start="84:17" pos:end="84:37"><decl pos:start="84:17" pos:end="84:36"><type pos:start="84:17" pos:end="84:25"><specifier pos:start="84:17" pos:end="84:21">final</specifier> <name pos:start="84:23" pos:end="84:25">int</name></type> <name pos:start="84:27" pos:end="84:31">prime</name> <init pos:start="84:33" pos:end="84:36">= <expr pos:start="84:35" pos:end="84:36"><literal type="number" pos:start="84:35" pos:end="84:36">31</literal></expr></init></decl>;</decl_stmt>
		<decl_stmt pos:start="85:17" pos:end="85:31"><decl pos:start="85:17" pos:end="85:30"><type pos:start="85:17" pos:end="85:19"><name pos:start="85:17" pos:end="85:19">int</name></type> <name pos:start="85:21" pos:end="85:26">result</name> <init pos:start="85:28" pos:end="85:30">= <expr pos:start="85:30" pos:end="85:30"><literal type="number" pos:start="85:30" pos:end="85:30">1</literal></expr></init></decl>;</decl_stmt>
		<expr_stmt pos:start="86:17" pos:end="86:83"><expr pos:start="86:17" pos:end="86:82"><name pos:start="86:17" pos:end="86:22">result</name> <operator pos:start="86:24" pos:end="86:24">=</operator> <name pos:start="86:26" pos:end="86:30">prime</name> <operator pos:start="86:32" pos:end="86:32">*</operator> <name pos:start="86:34" pos:end="86:39">result</name> <operator pos:start="86:41" pos:end="86:41">+</operator> <operator pos:start="86:43" pos:end="86:43">(</operator><ternary pos:start="86:44" pos:end="86:81"><condition pos:start="86:44" pos:end="86:60"><expr pos:start="86:44" pos:end="86:58"><operator pos:start="86:44" pos:end="86:44">(</operator><name pos:start="86:45" pos:end="86:49">child</name> <operator pos:start="86:51" pos:end="86:52">==</operator> <literal type="null" pos:start="86:54" pos:end="86:57">null</literal><operator pos:start="86:58" pos:end="86:58">)</operator></expr> ?</condition><then pos:start="86:62" pos:end="86:62"> <expr pos:start="86:62" pos:end="86:62"><literal type="number" pos:start="86:62" pos:end="86:62">0</literal></expr> </then><else pos:start="86:64" pos:end="86:81">: <expr pos:start="86:66" pos:end="86:81"><call pos:start="86:66" pos:end="86:81"><name pos:start="86:66" pos:end="86:79"><name pos:start="86:66" pos:end="86:70">child</name><operator pos:start="86:71" pos:end="86:71">.</operator><name pos:start="86:72" pos:end="86:79">hashCode</name></name><argument_list pos:start="86:80" pos:end="86:81">()</argument_list></call></expr></else></ternary><operator pos:start="86:82" pos:end="86:82">)</operator></expr>;</expr_stmt>
		<expr_stmt pos:start="87:17" pos:end="87:77"><expr pos:start="87:17" pos:end="87:76"><name pos:start="87:17" pos:end="87:22">result</name> <operator pos:start="87:24" pos:end="87:24">=</operator> <name pos:start="87:26" pos:end="87:30">prime</name> <operator pos:start="87:32" pos:end="87:32">*</operator> <name pos:start="87:34" pos:end="87:39">result</name> <operator pos:start="87:41" pos:end="87:41">+</operator> <operator pos:start="87:43" pos:end="87:43">(</operator><ternary pos:start="87:44" pos:end="87:75"><condition pos:start="87:44" pos:end="87:57"><expr pos:start="87:44" pos:end="87:55"><operator pos:start="87:44" pos:end="87:44">(</operator><name pos:start="87:45" pos:end="87:46">id</name> <operator pos:start="87:48" pos:end="87:49">==</operator> <literal type="null" pos:start="87:51" pos:end="87:54">null</literal><operator pos:start="87:55" pos:end="87:55">)</operator></expr> ?</condition><then pos:start="87:59" pos:end="87:59"> <expr pos:start="87:59" pos:end="87:59"><literal type="number" pos:start="87:59" pos:end="87:59">0</literal></expr> </then><else pos:start="87:61" pos:end="87:75">: <expr pos:start="87:63" pos:end="87:75"><call pos:start="87:63" pos:end="87:75"><name pos:start="87:63" pos:end="87:73"><name pos:start="87:63" pos:end="87:64">id</name><operator pos:start="87:65" pos:end="87:65">.</operator><name pos:start="87:66" pos:end="87:73">hashCode</name></name><argument_list pos:start="87:74" pos:end="87:75">()</argument_list></call></expr></else></ternary><operator pos:start="87:76" pos:end="87:76">)</operator></expr>;</expr_stmt>
		<return pos:start="88:17" pos:end="88:30">return <expr pos:start="88:24" pos:end="88:29"><name pos:start="88:24" pos:end="88:29">result</name></expr>;</return>
	</block_content>}</block></function>

	<function pos:start="91:9" pos:end="118:9"><annotation pos:start="91:9" pos:end="91:17">@<name pos:start="91:10" pos:end="91:17">Override</name></annotation>
	<type pos:start="92:9" pos:end="92:35"><specifier pos:start="92:9" pos:end="92:14">public</specifier> <specifier pos:start="92:16" pos:end="92:27">synchronized</specifier> <name pos:start="92:29" pos:end="92:35">boolean</name></type> <name pos:start="92:37" pos:end="92:42">equals</name><parameter_list pos:start="92:43" pos:end="92:54">(<parameter pos:start="92:44" pos:end="92:53"><decl pos:start="92:44" pos:end="92:53"><type pos:start="92:44" pos:end="92:49"><name pos:start="92:44" pos:end="92:49">Object</name></type> <name pos:start="92:51" pos:end="92:53">obj</name></decl></parameter>)</parameter_list> <block pos:start="92:56" pos:end="118:9">{<block_content pos:start="93:17" pos:end="117:28">
		<if_stmt pos:start="93:17" pos:end="95:17"><if pos:start="93:17" pos:end="95:17">if <condition pos:start="93:20" pos:end="93:32">(<expr pos:start="93:21" pos:end="93:31"><name pos:start="93:21" pos:end="93:24">this</name> <operator pos:start="93:26" pos:end="93:27">==</operator> <name pos:start="93:29" pos:end="93:31">obj</name></expr>)</condition> <block pos:start="93:34" pos:end="95:17">{<block_content pos:start="94:25" pos:end="94:36">
			<return pos:start="94:25" pos:end="94:36">return <expr pos:start="94:32" pos:end="94:35"><literal type="boolean" pos:start="94:32" pos:end="94:35">true</literal></expr>;</return>
		</block_content>}</block></if></if_stmt>
		<if_stmt pos:start="96:17" pos:end="98:17"><if pos:start="96:17" pos:end="98:17">if <condition pos:start="96:20" pos:end="96:32">(<expr pos:start="96:21" pos:end="96:31"><name pos:start="96:21" pos:end="96:23">obj</name> <operator pos:start="96:25" pos:end="96:26">==</operator> <literal type="null" pos:start="96:28" pos:end="96:31">null</literal></expr>)</condition> <block pos:start="96:34" pos:end="98:17">{<block_content pos:start="97:25" pos:end="97:37">
			<return pos:start="97:25" pos:end="97:37">return <expr pos:start="97:32" pos:end="97:36"><literal type="boolean" pos:start="97:32" pos:end="97:36">false</literal></expr>;</return>
		</block_content>}</block></if></if_stmt>
		<if_stmt pos:start="99:17" pos:end="101:17"><if pos:start="99:17" pos:end="101:17">if <condition pos:start="99:20" pos:end="99:49">(<expr pos:start="99:21" pos:end="99:48"><call pos:start="99:21" pos:end="99:30"><name pos:start="99:21" pos:end="99:28">getClass</name><argument_list pos:start="99:29" pos:end="99:30">()</argument_list></call> <operator pos:start="99:32" pos:end="99:33">!=</operator> <call pos:start="99:35" pos:end="99:48"><name pos:start="99:35" pos:end="99:46"><name pos:start="99:35" pos:end="99:37">obj</name><operator pos:start="99:38" pos:end="99:38">.</operator><name pos:start="99:39" pos:end="99:46">getClass</name></name><argument_list pos:start="99:47" pos:end="99:48">()</argument_list></call></expr>)</condition> <block pos:start="99:51" pos:end="101:17">{<block_content pos:start="100:25" pos:end="100:37">
			<return pos:start="100:25" pos:end="100:37">return <expr pos:start="100:32" pos:end="100:36"><literal type="boolean" pos:start="100:32" pos:end="100:36">false</literal></expr>;</return>
		</block_content>}</block></if></if_stmt>
		<decl_stmt pos:start="102:17" pos:end="102:68"><decl pos:start="102:17" pos:end="102:67"><type pos:start="102:17" pos:end="102:34"><name pos:start="102:17" pos:end="102:34">ArtifactIdentifier</name></type> <name pos:start="102:36" pos:end="102:40">other</name> <init pos:start="102:42" pos:end="102:67">= <expr pos:start="102:44" pos:end="102:67"><operator pos:start="102:44" pos:end="102:44">(</operator><name pos:start="102:45" pos:end="102:62">ArtifactIdentifier</name><operator pos:start="102:63" pos:end="102:63">)</operator> <name pos:start="102:65" pos:end="102:67">obj</name></expr></init></decl>;</decl_stmt>
		<if_stmt pos:start="103:17" pos:end="109:17"><if pos:start="103:17" pos:end="107:17">if <condition pos:start="103:20" pos:end="103:34">(<expr pos:start="103:21" pos:end="103:33"><name pos:start="103:21" pos:end="103:25">child</name> <operator pos:start="103:27" pos:end="103:28">==</operator> <literal type="null" pos:start="103:30" pos:end="103:33">null</literal></expr>)</condition> <block pos:start="103:36" pos:end="107:17">{<block_content pos:start="104:25" pos:end="106:25">
			<if_stmt pos:start="104:25" pos:end="106:25"><if pos:start="104:25" pos:end="106:25">if <condition pos:start="104:28" pos:end="104:48">(<expr pos:start="104:29" pos:end="104:47"><name pos:start="104:29" pos:end="104:39"><name pos:start="104:29" pos:end="104:33">other</name><operator pos:start="104:34" pos:end="104:34">.</operator><name pos:start="104:35" pos:end="104:39">child</name></name> <operator pos:start="104:41" pos:end="104:42">!=</operator> <literal type="null" pos:start="104:44" pos:end="104:47">null</literal></expr>)</condition> <block pos:start="104:50" pos:end="106:25">{<block_content pos:start="105:33" pos:end="105:45">
				<return pos:start="105:33" pos:end="105:45">return <expr pos:start="105:40" pos:end="105:44"><literal type="boolean" pos:start="105:40" pos:end="105:44">false</literal></expr>;</return>
			</block_content>}</block></if></if_stmt>
		</block_content>}</block></if> <if type="elseif" pos:start="107:19" pos:end="109:17">else if <condition pos:start="107:27" pos:end="107:54">(<expr pos:start="107:28" pos:end="107:53"><operator pos:start="107:28" pos:end="107:28">!</operator><call pos:start="107:29" pos:end="107:53"><name pos:start="107:29" pos:end="107:40"><name pos:start="107:29" pos:end="107:33">child</name><operator pos:start="107:34" pos:end="107:34">.</operator><name pos:start="107:35" pos:end="107:40">equals</name></name><argument_list pos:start="107:41" pos:end="107:53">(<argument pos:start="107:42" pos:end="107:52"><expr pos:start="107:42" pos:end="107:52"><name pos:start="107:42" pos:end="107:52"><name pos:start="107:42" pos:end="107:46">other</name><operator pos:start="107:47" pos:end="107:47">.</operator><name pos:start="107:48" pos:end="107:52">child</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="107:56" pos:end="109:17">{<block_content pos:start="108:25" pos:end="108:37">
			<return pos:start="108:25" pos:end="108:37">return <expr pos:start="108:32" pos:end="108:36"><literal type="boolean" pos:start="108:32" pos:end="108:36">false</literal></expr>;</return>
		</block_content>}</block></if></if_stmt>
		<if_stmt pos:start="110:17" pos:end="116:17"><if pos:start="110:17" pos:end="114:17">if <condition pos:start="110:20" pos:end="110:31">(<expr pos:start="110:21" pos:end="110:30"><name pos:start="110:21" pos:end="110:22">id</name> <operator pos:start="110:24" pos:end="110:25">==</operator> <literal type="null" pos:start="110:27" pos:end="110:30">null</literal></expr>)</condition> <block pos:start="110:33" pos:end="114:17">{<block_content pos:start="111:25" pos:end="113:25">
			<if_stmt pos:start="111:25" pos:end="113:25"><if pos:start="111:25" pos:end="113:25">if <condition pos:start="111:28" pos:end="111:45">(<expr pos:start="111:29" pos:end="111:44"><name pos:start="111:29" pos:end="111:36"><name pos:start="111:29" pos:end="111:33">other</name><operator pos:start="111:34" pos:end="111:34">.</operator><name pos:start="111:35" pos:end="111:36">id</name></name> <operator pos:start="111:38" pos:end="111:39">!=</operator> <literal type="null" pos:start="111:41" pos:end="111:44">null</literal></expr>)</condition> <block pos:start="111:47" pos:end="113:25">{<block_content pos:start="112:33" pos:end="112:45">
				<return pos:start="112:33" pos:end="112:45">return <expr pos:start="112:40" pos:end="112:44"><literal type="boolean" pos:start="112:40" pos:end="112:44">false</literal></expr>;</return>
			</block_content>}</block></if></if_stmt>
		</block_content>}</block></if> <if type="elseif" pos:start="114:19" pos:end="116:17">else if <condition pos:start="114:27" pos:end="114:48">(<expr pos:start="114:28" pos:end="114:47"><operator pos:start="114:28" pos:end="114:28">!</operator><call pos:start="114:29" pos:end="114:47"><name pos:start="114:29" pos:end="114:37"><name pos:start="114:29" pos:end="114:30">id</name><operator pos:start="114:31" pos:end="114:31">.</operator><name pos:start="114:32" pos:end="114:37">equals</name></name><argument_list pos:start="114:38" pos:end="114:47">(<argument pos:start="114:39" pos:end="114:46"><expr pos:start="114:39" pos:end="114:46"><name pos:start="114:39" pos:end="114:46"><name pos:start="114:39" pos:end="114:43">other</name><operator pos:start="114:44" pos:end="114:44">.</operator><name pos:start="114:45" pos:end="114:46">id</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="114:50" pos:end="116:17">{<block_content pos:start="115:25" pos:end="115:37">
			<return pos:start="115:25" pos:end="115:37">return <expr pos:start="115:32" pos:end="115:36"><literal type="boolean" pos:start="115:32" pos:end="115:36">false</literal></expr>;</return>
		</block_content>}</block></if></if_stmt>
		<return pos:start="117:17" pos:end="117:28">return <expr pos:start="117:24" pos:end="117:27"><literal type="boolean" pos:start="117:24" pos:end="117:27">true</literal></expr>;</return>
	</block_content>}</block></function>

	<function pos:start="120:9" pos:end="127:9"><annotation pos:start="120:9" pos:end="120:17">@<name pos:start="120:10" pos:end="120:17">Override</name></annotation>
	<type pos:start="121:9" pos:end="121:22"><specifier pos:start="121:9" pos:end="121:17">protected</specifier> <name pos:start="121:19" pos:end="121:22">void</name></type> <name pos:start="121:24" pos:end="121:31">finalize</name><parameter_list pos:start="121:32" pos:end="121:33">()</parameter_list> <throws pos:start="121:35" pos:end="121:50">throws <argument pos:start="121:42" pos:end="121:50"><expr pos:start="121:42" pos:end="121:50"><name pos:start="121:42" pos:end="121:50">Throwable</name></expr></argument></throws> <block pos:start="121:52" pos:end="127:9">{<block_content pos:start="122:17" pos:end="126:17">
		<try pos:start="122:17" pos:end="126:17">try <block pos:start="122:21" pos:end="124:17">{<block_content pos:start="123:25" pos:end="123:46">
			<expr_stmt pos:start="123:25" pos:end="123:46"><expr pos:start="123:25" pos:end="123:45"><call pos:start="123:25" pos:end="123:45"><name pos:start="123:25" pos:end="123:41"><name pos:start="123:25" pos:end="123:31">COUNTER</name><operator pos:start="123:32" pos:end="123:32">.</operator><name pos:start="123:33" pos:end="123:41">addAndGet</name></name><argument_list pos:start="123:42" pos:end="123:45">(<argument pos:start="123:43" pos:end="123:44"><expr pos:start="123:43" pos:end="123:44"><operator pos:start="123:43" pos:end="123:43">-</operator><literal type="number" pos:start="123:44" pos:end="123:44">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		</block_content>}</block> <finally pos:start="124:19" pos:end="126:17">finally <block pos:start="124:27" pos:end="126:17">{<block_content pos:start="125:25" pos:end="125:41">
			<expr_stmt pos:start="125:25" pos:end="125:41"><expr pos:start="125:25" pos:end="125:40"><call pos:start="125:25" pos:end="125:40"><name pos:start="125:25" pos:end="125:38"><name pos:start="125:25" pos:end="125:29">super</name><operator pos:start="125:30" pos:end="125:30">.</operator><name pos:start="125:31" pos:end="125:38">finalize</name></name><argument_list pos:start="125:39" pos:end="125:40">()</argument_list></call></expr>;</expr_stmt>
		</block_content>}</block></finally></try>
	</block_content>}</block></function>

	<function pos:start="129:9" pos:end="131:9"><type pos:start="129:9" pos:end="129:31"><specifier pos:start="129:9" pos:end="129:14">public</specifier> <name pos:start="129:16" pos:end="129:31"><name pos:start="129:16" pos:end="129:25">Collection</name><argument_list type="generic" pos:start="129:26" pos:end="129:31">&lt;<argument pos:start="129:27" pos:end="129:30"><name pos:start="129:27" pos:end="129:30">TYPE</name></argument>&gt;</argument_list></name></type> <name pos:start="129:33" pos:end="129:48">getAttachedItems</name><parameter_list pos:start="129:49" pos:end="129:50">()</parameter_list> <block pos:start="129:52" pos:end="131:9">{<block_content pos:start="130:17" pos:end="130:73">
		<return pos:start="130:17" pos:end="130:73">return <expr pos:start="130:24" pos:end="130:72"><call pos:start="130:24" pos:end="130:72"><name pos:start="130:24" pos:end="130:57"><name pos:start="130:24" pos:end="130:34">Collections</name><operator pos:start="130:35" pos:end="130:35">.</operator><name pos:start="130:36" pos:end="130:57">unmodifiableCollection</name></name><argument_list pos:start="130:58" pos:end="130:72">(<argument pos:start="130:59" pos:end="130:71"><expr pos:start="130:59" pos:end="130:71"><name pos:start="130:59" pos:end="130:71">attacheditems</name></expr></argument>)</argument_list></call></expr>;</return>
	</block_content>}</block></function>

	<function pos:start="133:9" pos:end="136:9"><type pos:start="133:9" pos:end="133:19"><specifier pos:start="133:9" pos:end="133:14">public</specifier> <name pos:start="133:16" pos:end="133:19">void</name></type> <name pos:start="133:21" pos:end="133:30">attachItem</name><parameter_list pos:start="133:31" pos:end="133:41">(<parameter pos:start="133:32" pos:end="133:40"><decl pos:start="133:32" pos:end="133:40"><type pos:start="133:32" pos:end="133:35"><name pos:start="133:32" pos:end="133:35">TYPE</name></type> <name pos:start="133:37" pos:end="133:40">item</name></decl></parameter>)</parameter_list> <block pos:start="133:43" pos:end="136:9">{<block_content pos:start="134:17" pos:end="134:40">
		<expr_stmt pos:start="134:17" pos:end="134:40"><expr pos:start="134:17" pos:end="134:39"><call pos:start="134:17" pos:end="134:39"><name pos:start="134:17" pos:end="134:33"><name pos:start="134:17" pos:end="134:29">attacheditems</name><operator pos:start="134:30" pos:end="134:30">.</operator><name pos:start="134:31" pos:end="134:33">add</name></name><argument_list pos:start="134:34" pos:end="134:39">(<argument pos:start="134:35" pos:end="134:38"><expr pos:start="134:35" pos:end="134:38"><name pos:start="134:35" pos:end="134:38">item</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	</block_content>}</block></function>

	<function pos:start="138:9" pos:end="141:9"><type pos:start="138:9" pos:end="138:19"><specifier pos:start="138:9" pos:end="138:14">public</specifier> <name pos:start="138:16" pos:end="138:19">void</name></type> <name pos:start="138:21" pos:end="138:38">removeAttachedItem</name><parameter_list pos:start="138:39" pos:end="138:52">(<parameter pos:start="138:40" pos:end="138:51"><decl pos:start="138:40" pos:end="138:51"><type pos:start="138:40" pos:end="138:43"><name pos:start="138:40" pos:end="138:43">TYPE</name></type> <name pos:start="138:45" pos:end="138:51">handler</name></decl></parameter>)</parameter_list> <block pos:start="138:54" pos:end="141:9">{<block_content pos:start="139:17" pos:end="139:46">
		<expr_stmt pos:start="139:17" pos:end="139:46"><expr pos:start="139:17" pos:end="139:45"><call pos:start="139:17" pos:end="139:45"><name pos:start="139:17" pos:end="139:36"><name pos:start="139:17" pos:end="139:29">attacheditems</name><operator pos:start="139:30" pos:end="139:30">.</operator><name pos:start="139:31" pos:end="139:36">remove</name></name><argument_list pos:start="139:37" pos:end="139:45">(<argument pos:start="139:38" pos:end="139:44"><expr pos:start="139:38" pos:end="139:44"><name pos:start="139:38" pos:end="139:44">handler</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	</block_content>}</block></function>

	<function pos:start="143:9" pos:end="146:9"><type pos:start="143:9" pos:end="143:19"><specifier pos:start="143:9" pos:end="143:14">public</specifier> <name pos:start="143:16" pos:end="143:19">void</name></type> <name pos:start="143:21" pos:end="143:31">attachItems</name><parameter_list pos:start="143:32" pos:end="143:55">(<parameter pos:start="143:33" pos:end="143:54"><decl pos:start="143:33" pos:end="143:54"><type pos:start="143:33" pos:end="143:48"><name pos:start="143:33" pos:end="143:48"><name pos:start="143:33" pos:end="143:42">Collection</name><argument_list type="generic" pos:start="143:43" pos:end="143:48">&lt;<argument pos:start="143:44" pos:end="143:47"><name pos:start="143:44" pos:end="143:47">TYPE</name></argument>&gt;</argument_list></name></type> <name pos:start="143:50" pos:end="143:54">toAdd</name></decl></parameter>)</parameter_list> <block pos:start="143:57" pos:end="146:9">{<block_content pos:start="144:17" pos:end="144:44">
		<expr_stmt pos:start="144:17" pos:end="144:44"><expr pos:start="144:17" pos:end="144:43"><call pos:start="144:17" pos:end="144:43"><name pos:start="144:17" pos:end="144:36"><name pos:start="144:17" pos:end="144:29">attacheditems</name><operator pos:start="144:30" pos:end="144:30">.</operator><name pos:start="144:31" pos:end="144:36">addAll</name></name><argument_list pos:start="144:37" pos:end="144:43">(<argument pos:start="144:38" pos:end="144:42"><expr pos:start="144:38" pos:end="144:42"><name pos:start="144:38" pos:end="144:42">toAdd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	</block_content>}</block></function>
}</block></class>
</unit>
