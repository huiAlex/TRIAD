<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="Java" filename="src/AFMainLayout.java" pos:tabs="8"><package pos:start="1:1" pos:end="1:49">package <name pos:start="1:9" pos:end="1:48"><name pos:start="1:9" pos:end="1:11">edu</name><operator pos:start="1:12" pos:end="1:12">.</operator><name pos:start="1:13" pos:end="1:14">nd</name><operator pos:start="1:15" pos:end="1:15">.</operator><name pos:start="1:16" pos:end="1:24">dronology</name><operator pos:start="1:25" pos:end="1:25">.</operator><name pos:start="1:26" pos:end="1:27">ui</name><operator pos:start="1:28" pos:end="1:28">.</operator><name pos:start="1:29" pos:end="1:34">vaadin</name><operator pos:start="1:35" pos:end="1:35">.</operator><name pos:start="1:36" pos:end="1:48">activeflights</name></name>;</package>

<import pos:start="3:1" pos:end="3:22">import <name pos:start="3:8" pos:end="3:21"><name pos:start="3:8" pos:end="3:11">java</name><operator pos:start="3:12" pos:end="3:12">.</operator><name pos:start="3:13" pos:end="3:16">util</name><operator pos:start="3:17" pos:end="3:17">.</operator><name pos:start="3:18" pos:end="3:21">List</name></name>;</import>

<import pos:start="5:1" pos:end="5:31">import <name pos:start="5:8" pos:end="5:30"><name pos:start="5:8" pos:end="5:10">com</name><operator pos:start="5:11" pos:end="5:11">.</operator><name pos:start="5:12" pos:end="5:17">vaadin</name><operator pos:start="5:18" pos:end="5:18">.</operator><name pos:start="5:19" pos:end="5:20">ui</name><operator pos:start="5:21" pos:end="5:21">.</operator><name pos:start="5:22" pos:end="5:30">CssLayout</name></name>;</import>
<import pos:start="6:1" pos:end="6:37">import <name pos:start="6:8" pos:end="6:36"><name pos:start="6:8" pos:end="6:10">com</name><operator pos:start="6:11" pos:end="6:11">.</operator><name pos:start="6:12" pos:end="6:17">vaadin</name><operator pos:start="6:18" pos:end="6:18">.</operator><name pos:start="6:19" pos:end="6:20">ui</name><operator pos:start="6:21" pos:end="6:21">.</operator><name pos:start="6:22" pos:end="6:36">CustomComponent</name></name>;</import>

<comment type="block" format="javadoc" pos:start="8:1" pos:end="12:3">/**
 * This is the main layout for the Active Flights UI
 * 
 * @author Jinghui Cheng
 */</comment>
<class pos:start="13:1" pos:end="59:1"><specifier pos:start="13:1" pos:end="13:6">public</specifier> class <name pos:start="13:14" pos:end="13:25">AFMainLayout</name> <super_list pos:start="13:27" pos:end="13:49"><extends pos:start="13:27" pos:end="13:49">extends <super pos:start="13:35" pos:end="13:49"><name pos:start="13:35" pos:end="13:49">CustomComponent</name></super></extends></super_list> <block pos:start="13:51" pos:end="59:1">{
	<decl_stmt pos:start="14:9" pos:end="14:56"><decl pos:start="14:9" pos:end="14:55"><type pos:start="14:9" pos:end="14:33"><specifier pos:start="14:9" pos:end="14:15">private</specifier> <specifier pos:start="14:17" pos:end="14:22">static</specifier> <specifier pos:start="14:24" pos:end="14:28">final</specifier> <name pos:start="14:30" pos:end="14:33">long</name></type> <name pos:start="14:35" pos:end="14:50">serialVersionUID</name> <init pos:start="14:52" pos:end="14:55">= <expr pos:start="14:54" pos:end="14:55"><literal type="number" pos:start="14:54" pos:end="14:55">1L</literal></expr></init></decl>;</decl_stmt>
	<decl_stmt pos:start="15:9" pos:end="15:73"><decl pos:start="15:9" pos:end="15:72"><type pos:start="15:9" pos:end="15:35"><specifier pos:start="15:9" pos:end="15:15">private</specifier> <name pos:start="15:17" pos:end="15:35">AFControlsComponent</name></type> <name pos:start="15:37" pos:end="15:44">controls</name> <init pos:start="15:46" pos:end="15:72">= <expr pos:start="15:48" pos:end="15:72"><operator pos:start="15:48" pos:end="15:50">new</operator> <call pos:start="15:52" pos:end="15:72"><name pos:start="15:52" pos:end="15:70">AFControlsComponent</name><argument_list pos:start="15:71" pos:end="15:72">()</argument_list></call></expr></init></decl>;</decl_stmt>
	<decl_stmt pos:start="16:9" pos:end="16:77"><decl pos:start="16:9" pos:end="16:76"><type pos:start="16:9" pos:end="16:30"><specifier pos:start="16:9" pos:end="16:15">private</specifier> <name pos:start="16:17" pos:end="16:30">AFMapComponent</name></type> <name pos:start="16:32" pos:end="16:34">map</name> <init pos:start="16:36" pos:end="16:76">= <expr pos:start="16:38" pos:end="16:76"><operator pos:start="16:38" pos:end="16:40">new</operator> <call pos:start="16:42" pos:end="16:76"><name pos:start="16:42" pos:end="16:55">AFMapComponent</name><argument_list pos:start="16:56" pos:end="16:76">(<argument pos:start="16:57" pos:end="16:75"><expr pos:start="16:57" pos:end="16:75"><call pos:start="16:57" pos:end="16:75"><name pos:start="16:57" pos:end="16:73"><name pos:start="16:57" pos:end="16:64">controls</name><operator pos:start="16:65" pos:end="16:65">.</operator><name pos:start="16:66" pos:end="16:73">getPanel</name></name><argument_list pos:start="16:74" pos:end="16:75">()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
 
	<constructor pos:start="18:9" pos:end="40:9"><specifier pos:start="18:9" pos:end="18:14">public</specifier> <name pos:start="18:16" pos:end="18:27">AFMainLayout</name><parameter_list pos:start="18:28" pos:end="18:29">()</parameter_list> <block pos:start="18:31" pos:end="40:9">{<block_content pos:start="19:17" pos:end="39:44">
		<expr_stmt pos:start="19:17" pos:end="19:44"><expr pos:start="19:17" pos:end="19:43"><call pos:start="19:17" pos:end="19:43"><name pos:start="19:17" pos:end="19:28">addStyleName</name><argument_list pos:start="19:29" pos:end="19:43">(<argument pos:start="19:30" pos:end="19:42"><expr pos:start="19:30" pos:end="19:42"><literal type="string" pos:start="19:30" pos:end="19:42">"main_layout"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		<decl_stmt pos:start="21:17" pos:end="21:52"><decl pos:start="21:17" pos:end="21:51"><type pos:start="21:17" pos:end="21:25"><name pos:start="21:17" pos:end="21:25">CssLayout</name></type> <name pos:start="21:27" pos:end="21:33">content</name> <init pos:start="21:35" pos:end="21:51">= <expr pos:start="21:37" pos:end="21:51"><operator pos:start="21:37" pos:end="21:39">new</operator> <call pos:start="21:41" pos:end="21:51"><name pos:start="21:41" pos:end="21:49">CssLayout</name><argument_list pos:start="21:50" pos:end="21:51">()</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt pos:start="22:17" pos:end="22:38"><expr pos:start="22:17" pos:end="22:37"><call pos:start="22:17" pos:end="22:37"><name pos:start="22:17" pos:end="22:35"><name pos:start="22:17" pos:end="22:23">content</name><operator pos:start="22:24" pos:end="22:24">.</operator><name pos:start="22:25" pos:end="22:35">setSizeFull</name></name><argument_list pos:start="22:36" pos:end="22:37">()</argument_list></call></expr>;</expr_stmt>

		<expr_stmt pos:start="24:17" pos:end="27:19"><expr pos:start="24:17" pos:end="27:18"><call pos:start="24:17" pos:end="24:35"><name pos:start="24:17" pos:end="24:33"><name pos:start="24:17" pos:end="24:24">controls</name><operator pos:start="24:25" pos:end="24:25">.</operator><name pos:start="24:26" pos:end="24:33">getPanel</name></name><argument_list pos:start="24:34" pos:end="24:35">()</argument_list></call><operator pos:start="24:36" pos:end="24:36">.</operator><call pos:start="24:37" pos:end="24:48"><name pos:start="24:37" pos:end="24:46">getMapView</name><argument_list pos:start="24:47" pos:end="24:48">()</argument_list></call><operator pos:start="24:49" pos:end="24:49">.</operator><call pos:start="24:50" pos:end="24:64"><name pos:start="24:50" pos:end="24:62">getViewButton</name><argument_list pos:start="24:63" pos:end="24:64">()</argument_list></call><operator pos:start="24:65" pos:end="24:65">.</operator><call pos:start="24:66" pos:end="27:18"><name pos:start="24:66" pos:end="24:81">addClickListener</name><argument_list pos:start="24:82" pos:end="27:18">(<argument pos:start="24:83" pos:end="27:17"><expr pos:start="24:83" pos:end="27:17"><lambda pos:start="24:83" pos:end="27:17"><parameter_list type="pseudo" pos:start="24:83" pos:end="24:83"><parameter pos:start="24:83" pos:end="24:83"><decl pos:start="24:83" pos:end="24:83"><name pos:start="24:83" pos:end="24:83">e</name></decl></parameter></parameter_list> -&gt; <block pos:start="24:88" pos:end="27:17">{<block_content pos:start="25:25" pos:end="26:47">
			<expr_stmt pos:start="25:25" pos:end="25:45"><expr pos:start="25:25" pos:end="25:44"><call pos:start="25:25" pos:end="25:44"><name pos:start="25:25" pos:end="25:37"><name pos:start="25:25" pos:end="25:27">map</name><operator pos:start="25:28" pos:end="25:28">.</operator><name pos:start="25:29" pos:end="25:37">setFollow</name></name><argument_list pos:start="25:38" pos:end="25:44">(<argument pos:start="25:39" pos:end="25:43"><expr pos:start="25:39" pos:end="25:43"><literal type="boolean" pos:start="25:39" pos:end="25:43">false</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt pos:start="26:25" pos:end="26:47"><expr pos:start="26:25" pos:end="26:46"><call pos:start="26:25" pos:end="26:46"><name pos:start="26:25" pos:end="26:44"><name pos:start="26:25" pos:end="26:27">map</name><operator pos:start="26:28" pos:end="26:28">.</operator><name pos:start="26:29" pos:end="26:44">setAverageCenter</name></name><argument_list pos:start="26:45" pos:end="26:46">()</argument_list></call></expr>;</expr_stmt>
		</block_content>}</block></lambda></expr></argument>)</argument_list></call></expr>;</expr_stmt>



		<expr_stmt pos:start="31:17" pos:end="36:19"><expr pos:start="31:17" pos:end="36:18"><call pos:start="31:17" pos:end="31:35"><name pos:start="31:17" pos:end="31:33"><name pos:start="31:17" pos:end="31:24">controls</name><operator pos:start="31:25" pos:end="31:25">.</operator><name pos:start="31:26" pos:end="31:33">getPanel</name></name><argument_list pos:start="31:34" pos:end="31:35">()</argument_list></call><operator pos:start="31:36" pos:end="31:36">.</operator><call pos:start="31:37" pos:end="31:48"><name pos:start="31:37" pos:end="31:46">getMapView</name><argument_list pos:start="31:47" pos:end="31:48">()</argument_list></call><operator pos:start="31:49" pos:end="31:49">.</operator><call pos:start="31:50" pos:end="31:66"><name pos:start="31:50" pos:end="31:64">getFollowButton</name><argument_list pos:start="31:65" pos:end="31:66">()</argument_list></call><operator pos:start="31:67" pos:end="31:67">.</operator><call pos:start="31:68" pos:end="36:18"><name pos:start="31:68" pos:end="31:83">addClickListener</name><argument_list pos:start="31:84" pos:end="36:18">(<argument pos:start="31:85" pos:end="36:17"><expr pos:start="31:85" pos:end="36:17"><lambda pos:start="31:85" pos:end="36:17"><parameter_list type="pseudo" pos:start="31:85" pos:end="31:85"><parameter pos:start="31:85" pos:end="31:85"><decl pos:start="31:85" pos:end="31:85"><name pos:start="31:85" pos:end="31:85">e</name></decl></parameter></parameter_list> -&gt; <block pos:start="31:90" pos:end="36:17">{<block_content pos:start="32:25" pos:end="35:48">
			<expr_stmt pos:start="32:25" pos:end="32:44"><expr pos:start="32:25" pos:end="32:43"><call pos:start="32:25" pos:end="32:43"><name pos:start="32:25" pos:end="32:37"><name pos:start="32:25" pos:end="32:27">map</name><operator pos:start="32:28" pos:end="32:28">.</operator><name pos:start="32:29" pos:end="32:37">setFollow</name></name><argument_list pos:start="32:38" pos:end="32:43">(<argument pos:start="32:39" pos:end="32:42"><expr pos:start="32:39" pos:end="32:42"><literal type="boolean" pos:start="32:39" pos:end="32:42">true</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt pos:start="33:25" pos:end="33:48"><expr pos:start="33:25" pos:end="33:47"><call pos:start="33:25" pos:end="33:47"><name pos:start="33:25" pos:end="33:41"><name pos:start="33:25" pos:end="33:27">map</name><operator pos:start="33:28" pos:end="33:28">.</operator><name pos:start="33:29" pos:end="33:41">setFollowZoom</name></name><argument_list pos:start="33:42" pos:end="33:47">(<argument pos:start="33:43" pos:end="33:46"><expr pos:start="33:43" pos:end="33:46"><literal type="boolean" pos:start="33:43" pos:end="33:46">true</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<decl_stmt pos:start="34:25" pos:end="34:78"><decl pos:start="34:25" pos:end="34:77"><type pos:start="34:25" pos:end="34:36"><name pos:start="34:25" pos:end="34:36"><name pos:start="34:25" pos:end="34:28">List</name><argument_list type="generic" pos:start="34:29" pos:end="34:36">&lt;<argument pos:start="34:30" pos:end="34:35"><name pos:start="34:30" pos:end="34:35">String</name></argument>&gt;</argument_list></name></type> <name pos:start="34:38" pos:end="34:42">names</name> <init pos:start="34:44" pos:end="34:77">= <expr pos:start="34:46" pos:end="34:77"><call pos:start="34:46" pos:end="34:64"><name pos:start="34:46" pos:end="34:62"><name pos:start="34:46" pos:end="34:53">controls</name><operator pos:start="34:54" pos:end="34:54">.</operator><name pos:start="34:55" pos:end="34:62">getPanel</name></name><argument_list pos:start="34:63" pos:end="34:64">()</argument_list></call><operator pos:start="34:65" pos:end="34:65">.</operator><call pos:start="34:66" pos:end="34:77"><name pos:start="34:66" pos:end="34:75">getChecked</name><argument_list pos:start="34:76" pos:end="34:77">()</argument_list></call></expr></init></decl>;</decl_stmt>
			<expr_stmt pos:start="35:25" pos:end="35:48"><expr pos:start="35:25" pos:end="35:47"><call pos:start="35:25" pos:end="35:47"><name pos:start="35:25" pos:end="35:40"><name pos:start="35:25" pos:end="35:27">map</name><operator pos:start="35:28" pos:end="35:28">.</operator><name pos:start="35:29" pos:end="35:40">followDrones</name></name><argument_list pos:start="35:41" pos:end="35:47">(<argument pos:start="35:42" pos:end="35:46"><expr pos:start="35:42" pos:end="35:46"><name pos:start="35:42" pos:end="35:46">names</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		</block_content>}</block></lambda></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		<expr_stmt pos:start="38:17" pos:end="38:53"><expr pos:start="38:17" pos:end="38:52"><call pos:start="38:17" pos:end="38:52"><name pos:start="38:17" pos:end="38:37"><name pos:start="38:17" pos:end="38:23">content</name><operator pos:start="38:24" pos:end="38:24">.</operator><name pos:start="38:25" pos:end="38:37">addComponents</name></name><argument_list pos:start="38:38" pos:end="38:52">(<argument pos:start="38:39" pos:end="38:46"><expr pos:start="38:39" pos:end="38:46"><name pos:start="38:39" pos:end="38:46">controls</name></expr></argument>, <argument pos:start="38:49" pos:end="38:51"><expr pos:start="38:49" pos:end="38:51"><name pos:start="38:49" pos:end="38:51">map</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt pos:start="39:17" pos:end="39:44"><expr pos:start="39:17" pos:end="39:43"><call pos:start="39:17" pos:end="39:43"><name pos:start="39:17" pos:end="39:34">setCompositionRoot</name><argument_list pos:start="39:35" pos:end="39:43">(<argument pos:start="39:36" pos:end="39:42"><expr pos:start="39:36" pos:end="39:42"><name pos:start="39:36" pos:end="39:42">content</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	</block_content>}</block></constructor>

	<comment type="block" format="javadoc" pos:start="42:9" pos:end="44:11">/**
	 * determines if the map should continue in follow mode
	 */</comment>
	<function pos:start="45:9" pos:end="50:9"><type pos:start="45:9" pos:end="45:19"><specifier pos:start="45:9" pos:end="45:14">public</specifier> <name pos:start="45:16" pos:end="45:19">void</name></type> <name pos:start="45:21" pos:end="45:37">continueFollowing</name><parameter_list pos:start="45:38" pos:end="45:39">()</parameter_list> <block pos:start="45:41" pos:end="50:9">{<block_content pos:start="46:17" pos:end="49:17">
		<if_stmt pos:start="46:17" pos:end="49:17"><if pos:start="46:17" pos:end="49:17">if <condition pos:start="46:20" pos:end="46:36">(<expr pos:start="46:21" pos:end="46:35"><call pos:start="46:21" pos:end="46:35"><name pos:start="46:21" pos:end="46:33"><name pos:start="46:21" pos:end="46:23">map</name><operator pos:start="46:24" pos:end="46:24">.</operator><name pos:start="46:25" pos:end="46:33">getFollow</name></name><argument_list pos:start="46:34" pos:end="46:35">()</argument_list></call></expr>)</condition> <block pos:start="46:38" pos:end="49:17">{<block_content pos:start="47:25" pos:end="48:48">
			<decl_stmt pos:start="47:25" pos:end="47:78"><decl pos:start="47:25" pos:end="47:77"><type pos:start="47:25" pos:end="47:36"><name pos:start="47:25" pos:end="47:36"><name pos:start="47:25" pos:end="47:28">List</name><argument_list type="generic" pos:start="47:29" pos:end="47:36">&lt;<argument pos:start="47:30" pos:end="47:35"><name pos:start="47:30" pos:end="47:35">String</name></argument>&gt;</argument_list></name></type> <name pos:start="47:38" pos:end="47:42">names</name> <init pos:start="47:44" pos:end="47:77">= <expr pos:start="47:46" pos:end="47:77"><call pos:start="47:46" pos:end="47:64"><name pos:start="47:46" pos:end="47:62"><name pos:start="47:46" pos:end="47:53">controls</name><operator pos:start="47:54" pos:end="47:54">.</operator><name pos:start="47:55" pos:end="47:62">getPanel</name></name><argument_list pos:start="47:63" pos:end="47:64">()</argument_list></call><operator pos:start="47:65" pos:end="47:65">.</operator><call pos:start="47:66" pos:end="47:77"><name pos:start="47:66" pos:end="47:75">getChecked</name><argument_list pos:start="47:76" pos:end="47:77">()</argument_list></call></expr></init></decl>;</decl_stmt>
			<expr_stmt pos:start="48:25" pos:end="48:48"><expr pos:start="48:25" pos:end="48:47"><call pos:start="48:25" pos:end="48:47"><name pos:start="48:25" pos:end="48:40"><name pos:start="48:25" pos:end="48:27">map</name><operator pos:start="48:28" pos:end="48:28">.</operator><name pos:start="48:29" pos:end="48:40">followDrones</name></name><argument_list pos:start="48:41" pos:end="48:47">(<argument pos:start="48:42" pos:end="48:46"><expr pos:start="48:42" pos:end="48:46"><name pos:start="48:42" pos:end="48:46">names</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		</block_content>}</block></if></if_stmt>
	</block_content>}</block></function>

	<function pos:start="52:9" pos:end="54:9"><type pos:start="52:9" pos:end="52:34"><specifier pos:start="52:9" pos:end="52:14">public</specifier> <name pos:start="52:16" pos:end="52:34">AFControlsComponent</name></type> <name pos:start="52:36" pos:end="52:46">getControls</name><parameter_list pos:start="52:47" pos:end="52:48">()</parameter_list> <block pos:start="52:50" pos:end="54:9">{<block_content pos:start="53:17" pos:end="53:32">
		<return pos:start="53:17" pos:end="53:32">return <expr pos:start="53:24" pos:end="53:31"><name pos:start="53:24" pos:end="53:31">controls</name></expr>;</return>
	</block_content>}</block></function>

	<function pos:start="56:9" pos:end="58:9"><type pos:start="56:9" pos:end="56:29"><specifier pos:start="56:9" pos:end="56:14">public</specifier> <name pos:start="56:16" pos:end="56:29">AFMapComponent</name></type> <name pos:start="56:31" pos:end="56:38">getAFMap</name><parameter_list pos:start="56:39" pos:end="56:40">()</parameter_list> <block pos:start="56:42" pos:end="58:9">{<block_content pos:start="57:17" pos:end="57:27">
		<return pos:start="57:17" pos:end="57:27">return <expr pos:start="57:24" pos:end="57:26"><name pos:start="57:24" pos:end="57:26">map</name></expr>;</return>
	</block_content>}</block></function>
}</block></class>
</unit>
