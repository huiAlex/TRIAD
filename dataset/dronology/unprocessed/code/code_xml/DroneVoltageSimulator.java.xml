<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="Java" filename="src/DroneVoltageSimulator.java" pos:tabs="8"><package pos:start="1:1" pos:end="1:56">package <name pos:start="1:9" pos:end="1:55"><name pos:start="1:9" pos:end="1:11">edu</name><operator pos:start="1:12" pos:end="1:12">.</operator><name pos:start="1:13" pos:end="1:14">nd</name><operator pos:start="1:15" pos:end="1:15">.</operator><name pos:start="1:16" pos:end="1:24">dronology</name><operator pos:start="1:25" pos:end="1:25">.</operator><name pos:start="1:26" pos:end="1:29">core</name><operator pos:start="1:30" pos:end="1:30">.</operator><name pos:start="1:31" pos:end="1:39">simulator</name><operator pos:start="1:40" pos:end="1:40">.</operator><name pos:start="1:41" pos:end="1:55">simplesimulator</name></name>;</package>

<comment type="block" format="javadoc" pos:start="3:1" pos:end="7:3">/**
 * Voltage simulator.  For every minute of flight, the battery decreases by 0.25 volts.
 * @author Jane Cleland-Huang
 *
 */</comment>
<class pos:start="8:1" pos:end="54:1"><specifier pos:start="8:1" pos:end="8:6">public</specifier> class <name pos:start="8:14" pos:end="8:34">DroneVoltageSimulator</name> <block pos:start="8:36" pos:end="54:1">{
	
	<decl_stmt pos:start="10:9" pos:end="10:31"><decl pos:start="10:9" pos:end="10:30"><type pos:start="10:9" pos:end="10:22"><specifier pos:start="10:9" pos:end="10:15">private</specifier> <name pos:start="10:17" pos:end="10:22">double</name></type> <name pos:start="10:24" pos:end="10:30">voltage</name></decl>;</decl_stmt>
	<enum pos:start="11:9" pos:end="11:63"><specifier pos:start="11:9" pos:end="11:15">private</specifier> enum <name pos:start="11:22" pos:end="11:33">BatteryState</name> <block pos:start="11:35" pos:end="11:63">{<decl pos:start="11:36" pos:end="11:43"><name pos:start="11:36" pos:end="11:43">CHARGING</name></decl>, <decl pos:start="11:46" pos:end="11:54"><name pos:start="11:46" pos:end="11:54">DEPLETING</name></decl>, <decl pos:start="11:57" pos:end="11:62"><name pos:start="11:57" pos:end="11:62">STABLE</name></decl>}</block></enum>
	<decl_stmt pos:start="12:9" pos:end="12:64"><decl pos:start="12:9" pos:end="12:63"><type pos:start="12:9" pos:end="12:28"><specifier pos:start="12:9" pos:end="12:15">private</specifier> <name pos:start="12:17" pos:end="12:28">BatteryState</name></type> <name pos:start="12:30" pos:end="12:41">batteryState</name> <init pos:start="12:43" pos:end="12:63">= <expr pos:start="12:45" pos:end="12:63"><name pos:start="12:45" pos:end="12:63"><name pos:start="12:45" pos:end="12:56">BatteryState</name><operator pos:start="12:57" pos:end="12:57">.</operator><name pos:start="12:58" pos:end="12:63">STABLE</name></name></expr></init></decl>;</decl_stmt>
	<decl_stmt pos:start="13:9" pos:end="13:73"><decl pos:start="13:9" pos:end="13:72"><type pos:start="13:9" pos:end="13:35"><specifier pos:start="13:9" pos:end="13:15">private</specifier> <specifier pos:start="13:17" pos:end="13:22">static</specifier> <specifier pos:start="13:24" pos:end="13:28">final</specifier> <name pos:start="13:30" pos:end="13:35">double</name></type> <name pos:start="13:37" pos:end="13:65">SIMULATOR_BATTERY_DRAIN_VOLTS</name> <init pos:start="13:67" pos:end="13:72">= <expr pos:start="13:69" pos:end="13:72"><literal type="number" pos:start="13:69" pos:end="13:72">0.25</literal></expr></init></decl>;</decl_stmt>
   
	<decl_stmt pos:start="15:9" pos:end="15:36"><decl pos:start="15:9" pos:end="15:35"><type pos:start="15:9" pos:end="15:20"><specifier pos:start="15:9" pos:end="15:15">private</specifier> <name pos:start="15:17" pos:end="15:20">long</name></type> <name pos:start="15:22" pos:end="15:35">checkPointTime</name></decl>;</decl_stmt>
	
	<constructor pos:start="17:9" pos:end="20:9"><specifier pos:start="17:9" pos:end="17:14">public</specifier> <name pos:start="17:16" pos:end="17:36">DroneVoltageSimulator</name><parameter_list pos:start="17:37" pos:end="17:38">()</parameter_list><block pos:start="17:39" pos:end="20:9">{<block_content pos:start="18:17" pos:end="19:35">
		<expr_stmt pos:start="18:17" pos:end="18:31"><expr pos:start="18:17" pos:end="18:30"><name pos:start="18:17" pos:end="18:23">voltage</name> <operator pos:start="18:25" pos:end="18:25">=</operator> <literal type="number" pos:start="18:27" pos:end="18:30">15.0</literal></expr>;</expr_stmt>
		<expr_stmt pos:start="19:17" pos:end="19:35"><expr pos:start="19:17" pos:end="19:34"><name pos:start="19:17" pos:end="19:30">checkPointTime</name> <operator pos:start="19:32" pos:end="19:32">=</operator> <literal type="number" pos:start="19:34" pos:end="19:34">0</literal></expr>;</expr_stmt>
	</block_content>}</block></constructor>
	
	<function pos:start="22:9" pos:end="26:9"><type pos:start="22:9" pos:end="22:19"><specifier pos:start="22:9" pos:end="22:14">public</specifier> <name pos:start="22:16" pos:end="22:19">void</name></type> <name pos:start="22:21" pos:end="22:35">rechargeBattery</name><parameter_list pos:start="22:36" pos:end="22:37">()</parameter_list><block pos:start="22:38" pos:end="26:9">{<block_content pos:start="23:17" pos:end="25:51">
		<expr_stmt pos:start="23:17" pos:end="23:53"><expr pos:start="23:17" pos:end="23:52"><name pos:start="23:17" pos:end="23:28">batteryState</name> <operator pos:start="23:30" pos:end="23:30">=</operator> <name pos:start="23:32" pos:end="23:52"><name pos:start="23:32" pos:end="23:43">BatteryState</name><operator pos:start="23:44" pos:end="23:44">.</operator><name pos:start="23:45" pos:end="23:52">CHARGING</name></name></expr>;</expr_stmt>
		<expr_stmt pos:start="24:17" pos:end="24:31"><expr pos:start="24:17" pos:end="24:30"><name pos:start="24:17" pos:end="24:23">voltage</name> <operator pos:start="24:25" pos:end="24:25">=</operator> <literal type="number" pos:start="24:27" pos:end="24:30">15.0</literal></expr>;</expr_stmt>
		<expr_stmt pos:start="25:17" pos:end="25:51"><expr pos:start="25:17" pos:end="25:50"><name pos:start="25:17" pos:end="25:28">batteryState</name> <operator pos:start="25:30" pos:end="25:30">=</operator> <name pos:start="25:32" pos:end="25:50"><name pos:start="25:32" pos:end="25:43">BatteryState</name><operator pos:start="25:44" pos:end="25:44">.</operator><name pos:start="25:45" pos:end="25:50">STABLE</name></name></expr>;</expr_stmt>
	</block_content>}</block></function>
	
	<function pos:start="28:9" pos:end="31:9"><type pos:start="28:9" pos:end="28:19"><specifier pos:start="28:9" pos:end="28:14">public</specifier> <name pos:start="28:16" pos:end="28:19">void</name></type> <name pos:start="28:21" pos:end="28:37">startBatteryDrain</name><parameter_list pos:start="28:38" pos:end="28:39">()</parameter_list><block pos:start="28:40" pos:end="31:9">{<block_content pos:start="29:17" pos:end="30:60">
		<expr_stmt pos:start="29:17" pos:end="29:54"><expr pos:start="29:17" pos:end="29:53"><name pos:start="29:17" pos:end="29:28">batteryState</name> <operator pos:start="29:30" pos:end="29:30">=</operator> <name pos:start="29:32" pos:end="29:53"><name pos:start="29:32" pos:end="29:43">BatteryState</name><operator pos:start="29:44" pos:end="29:44">.</operator><name pos:start="29:45" pos:end="29:53">DEPLETING</name></name></expr>;</expr_stmt>
		<expr_stmt pos:start="30:17" pos:end="30:60"><expr pos:start="30:17" pos:end="30:59"><name pos:start="30:17" pos:end="30:30">checkPointTime</name> <operator pos:start="30:32" pos:end="30:32">=</operator> <call pos:start="30:34" pos:end="30:59"><name pos:start="30:34" pos:end="30:57"><name pos:start="30:34" pos:end="30:39">System</name><operator pos:start="30:40" pos:end="30:40">.</operator><name pos:start="30:41" pos:end="30:57">currentTimeMillis</name></name><argument_list pos:start="30:58" pos:end="30:59">()</argument_list></call></expr>;</expr_stmt>
	</block_content>}</block></function>
	
	<function pos:start="33:9" pos:end="36:9"><type pos:start="33:9" pos:end="33:19"><specifier pos:start="33:9" pos:end="33:14">public</specifier> <name pos:start="33:16" pos:end="33:19">void</name></type> <name pos:start="33:21" pos:end="33:36">stopBatteryDrain</name><parameter_list pos:start="33:37" pos:end="33:38">()</parameter_list><block pos:start="33:39" pos:end="36:9">{<block_content pos:start="34:17" pos:end="35:51">
		<expr_stmt pos:start="34:17" pos:end="34:29"><expr pos:start="34:17" pos:end="34:28"><call pos:start="34:17" pos:end="34:28"><name pos:start="34:17" pos:end="34:26">checkPoint</name><argument_list pos:start="34:27" pos:end="34:28">()</argument_list></call></expr>;</expr_stmt>
		<expr_stmt pos:start="35:17" pos:end="35:51"><expr pos:start="35:17" pos:end="35:50"><name pos:start="35:17" pos:end="35:28">batteryState</name> <operator pos:start="35:30" pos:end="35:30">=</operator> <name pos:start="35:32" pos:end="35:50"><name pos:start="35:32" pos:end="35:43">BatteryState</name><operator pos:start="35:44" pos:end="35:44">.</operator><name pos:start="35:45" pos:end="35:50">STABLE</name></name></expr>;</expr_stmt>		
	</block_content>}</block></function>
	 
	<function pos:start="38:9" pos:end="49:9"><type pos:start="38:9" pos:end="38:19"><specifier pos:start="38:9" pos:end="38:14">public</specifier> <name pos:start="38:16" pos:end="38:19">void</name></type> <name pos:start="38:21" pos:end="38:30">checkPoint</name><parameter_list pos:start="38:31" pos:end="38:32">()</parameter_list><block pos:start="38:33" pos:end="49:9">{<block_content pos:start="39:17" pos:end="48:17">
		<if_stmt pos:start="39:17" pos:end="48:17"><if pos:start="39:17" pos:end="48:17">if<condition pos:start="39:19" pos:end="39:58">(<expr pos:start="39:20" pos:end="39:57"><name pos:start="39:20" pos:end="39:31">batteryState</name> <operator pos:start="39:33" pos:end="39:34">==</operator> <name pos:start="39:36" pos:end="39:57"><name pos:start="39:36" pos:end="39:47">BatteryState</name><operator pos:start="39:48" pos:end="39:48">.</operator><name pos:start="39:49" pos:end="39:57">DEPLETING</name></name></expr>)</condition><block pos:start="39:59" pos:end="48:17">{<block_content pos:start="40:25" pos:end="47:25">
			<decl_stmt pos:start="40:25" pos:end="40:99"><decl pos:start="40:25" pos:end="40:98"><type pos:start="40:25" pos:end="40:28"><name pos:start="40:25" pos:end="40:28">long</name></type> <name pos:start="40:30" pos:end="40:52">timeSinceLastCheckPoint</name> <init pos:start="40:54" pos:end="40:98">= <expr pos:start="40:56" pos:end="40:98"><call pos:start="40:56" pos:end="40:81"><name pos:start="40:56" pos:end="40:79"><name pos:start="40:56" pos:end="40:61">System</name><operator pos:start="40:62" pos:end="40:62">.</operator><name pos:start="40:63" pos:end="40:79">currentTimeMillis</name></name><argument_list pos:start="40:80" pos:end="40:81">()</argument_list></call> <operator pos:start="40:83" pos:end="40:83">-</operator> <name pos:start="40:85" pos:end="40:98">checkPointTime</name></expr></init></decl>;</decl_stmt>
			<if_stmt pos:start="41:25" pos:end="47:25"><if pos:start="41:25" pos:end="47:25">if <condition pos:start="41:28" pos:end="41:59">(<expr pos:start="41:29" pos:end="41:58"><name pos:start="41:29" pos:end="41:51">timeSinceLastCheckPoint</name> <operator pos:start="41:53" pos:end="41:53">&gt;</operator> <literal type="number" pos:start="41:55" pos:end="41:58">5000</literal></expr>)</condition> <block pos:start="41:61" pos:end="47:25">{<block_content pos:start="42:33" pos:end="46:65">
				<expr_stmt pos:start="42:33" pos:end="42:76"><expr pos:start="42:33" pos:end="42:75"><name pos:start="42:33" pos:end="42:46">checkPointTime</name> <operator pos:start="42:48" pos:end="42:48">=</operator> <call pos:start="42:50" pos:end="42:75"><name pos:start="42:50" pos:end="42:73"><name pos:start="42:50" pos:end="42:55">System</name><operator pos:start="42:56" pos:end="42:56">.</operator><name pos:start="42:57" pos:end="42:73">currentTimeMillis</name></name><argument_list pos:start="42:74" pos:end="42:75">()</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:start="42:78" pos:end="42:101">// Reset checkPoint time</comment>
			
				<comment type="line" pos:start="44:33" pos:end="44:87">// Volts drained per second * number of elapsed seconds</comment>
				<decl_stmt pos:start="45:33" pos:end="45:120"><decl pos:start="45:33" pos:end="45:119"><type pos:start="45:33" pos:end="45:38"><name pos:start="45:33" pos:end="45:38">double</name></type> <name pos:start="45:40" pos:end="45:51">voltageDrain</name> <init pos:start="45:53" pos:end="45:119">= <expr pos:start="45:55" pos:end="45:119"><name pos:start="45:55" pos:end="45:83">SIMULATOR_BATTERY_DRAIN_VOLTS</name><operator pos:start="45:84" pos:end="45:84">/</operator><literal type="number" pos:start="45:85" pos:end="45:86">60</literal> <operator pos:start="45:88" pos:end="45:88">*</operator> <operator pos:start="45:90" pos:end="45:90">(</operator><name pos:start="45:91" pos:end="45:113">timeSinceLastCheckPoint</name><operator pos:start="45:114" pos:end="45:114">/</operator><literal type="number" pos:start="45:115" pos:end="45:118">1000</literal><operator pos:start="45:119" pos:end="45:119">)</operator></expr></init></decl>;</decl_stmt>
				<expr_stmt pos:start="46:33" pos:end="46:65"><expr pos:start="46:33" pos:end="46:64"><name pos:start="46:33" pos:end="46:39">voltage</name> <operator pos:start="46:41" pos:end="46:41">=</operator> <name pos:start="46:43" pos:end="46:49">voltage</name> <operator pos:start="46:51" pos:end="46:51">-</operator> <name pos:start="46:53" pos:end="46:64">voltageDrain</name></expr>;</expr_stmt>
			</block_content>}</block></if></if_stmt>
		</block_content>}</block></if></if_stmt> 
	</block_content>}</block></function>
	
	<function pos:start="51:9" pos:end="53:9"><type pos:start="51:9" pos:end="51:21"><specifier pos:start="51:9" pos:end="51:14">public</specifier> <name pos:start="51:16" pos:end="51:21">double</name></type> <name pos:start="51:23" pos:end="51:32">getVoltage</name><parameter_list pos:start="51:33" pos:end="51:34">()</parameter_list><block pos:start="51:35" pos:end="53:9">{<block_content pos:start="52:17" pos:end="52:31">
		<return pos:start="52:17" pos:end="52:31">return <expr pos:start="52:24" pos:end="52:30"><name pos:start="52:24" pos:end="52:30">voltage</name></expr>;</return>
	</block_content>}</block></function>
}</block></class>
</unit>
