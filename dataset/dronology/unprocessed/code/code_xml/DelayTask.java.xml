<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="Java" filename="src/DelayTask.java" pos:tabs="8"><package pos:start="1:1" pos:end="1:67">package <name pos:start="1:9" pos:end="1:66"><name pos:start="1:9" pos:end="1:11">edu</name><operator pos:start="1:12" pos:end="1:12">.</operator><name pos:start="1:13" pos:end="1:14">nd</name><operator pos:start="1:15" pos:end="1:15">.</operator><name pos:start="1:16" pos:end="1:24">dronology</name><operator pos:start="1:25" pos:end="1:25">.</operator><name pos:start="1:26" pos:end="1:33">services</name><operator pos:start="1:34" pos:end="1:34">.</operator><name pos:start="1:35" pos:end="1:44">extensions</name><operator pos:start="1:45" pos:end="1:45">.</operator><name pos:start="1:46" pos:end="1:60">missionplanning</name><operator pos:start="1:61" pos:end="1:61">.</operator><name pos:start="1:62" pos:end="1:66">tasks</name></name>;</package>

<import pos:start="3:1" pos:end="3:30">import <name pos:start="3:8" pos:end="3:29"><name pos:start="3:8" pos:end="3:10">net</name><operator pos:start="3:11" pos:end="3:11">.</operator><name pos:start="3:12" pos:end="3:13">mv</name><operator pos:start="3:14" pos:end="3:14">.</operator><name pos:start="3:15" pos:end="3:21">logging</name><operator pos:start="3:22" pos:end="3:22">.</operator><name pos:start="3:23" pos:end="3:29">ILogger</name></name>;</import>
<import pos:start="4:1" pos:end="4:37">import <name pos:start="4:8" pos:end="4:36"><name pos:start="4:8" pos:end="4:10">net</name><operator pos:start="4:11" pos:end="4:11">.</operator><name pos:start="4:12" pos:end="4:13">mv</name><operator pos:start="4:14" pos:end="4:14">.</operator><name pos:start="4:15" pos:end="4:21">logging</name><operator pos:start="4:22" pos:end="4:22">.</operator><name pos:start="4:23" pos:end="4:36">LoggerProvider</name></name>;</import>

<comment type="block" format="javadoc" pos:start="6:1" pos:end="11:3">/**
 * Delay tasks specifying a delay after a route has been executed before commencing with the next round. 
 * 
 * @author Michael Vierhauser
 *
 */</comment>
<class pos:start="12:1" pos:end="49:1"><specifier pos:start="12:1" pos:end="12:6">public</specifier> class <name pos:start="12:14" pos:end="12:22">DelayTask</name> <super_list pos:start="12:24" pos:end="12:50"><extends pos:start="12:24" pos:end="12:50">extends <super pos:start="12:32" pos:end="12:50"><name pos:start="12:32" pos:end="12:50">AbstractMissionTask</name></super></extends></super_list> <block pos:start="12:52" pos:end="49:1">{
	<decl_stmt pos:start="13:9" pos:end="13:88"><decl pos:start="13:9" pos:end="13:87"><type pos:start="13:9" pos:end="13:36"><specifier pos:start="13:9" pos:end="13:15">private</specifier> <specifier pos:start="13:17" pos:end="13:22">static</specifier> <specifier pos:start="13:24" pos:end="13:28">final</specifier> <name pos:start="13:30" pos:end="13:36">ILogger</name></type> <name pos:start="13:38" pos:end="13:43">LOGGER</name> <init pos:start="13:45" pos:end="13:87">= <expr pos:start="13:47" pos:end="13:87"><call pos:start="13:47" pos:end="13:87"><name pos:start="13:47" pos:end="13:70"><name pos:start="13:47" pos:end="13:60">LoggerProvider</name><operator pos:start="13:61" pos:end="13:61">.</operator><name pos:start="13:62" pos:end="13:70">getLogger</name></name><argument_list pos:start="13:71" pos:end="13:87">(<argument pos:start="13:72" pos:end="13:86"><expr pos:start="13:72" pos:end="13:86"><name pos:start="13:72" pos:end="13:86"><name pos:start="13:72" pos:end="13:80">DelayTask</name><operator pos:start="13:81" pos:end="13:81">.</operator><name pos:start="13:82" pos:end="13:86">class</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

	<decl_stmt pos:start="15:9" pos:end="15:38"><decl pos:start="15:9" pos:end="15:37"><type pos:start="15:9" pos:end="15:28"><specifier pos:start="15:9" pos:end="15:15">private</specifier> <specifier pos:start="15:17" pos:end="15:21">final</specifier> <name pos:start="15:23" pos:end="15:28">double</name></type> <name pos:start="15:30" pos:end="15:37">duration</name></decl>;</decl_stmt>
	<decl_stmt pos:start="16:9" pos:end="16:31"><decl pos:start="16:9" pos:end="16:30"><type pos:start="16:9" pos:end="16:20"><specifier pos:start="16:9" pos:end="16:15">private</specifier> <name pos:start="16:17" pos:end="16:20">long</name></type> <name pos:start="16:22" pos:end="16:30">startTime</name></decl>;</decl_stmt>

	<comment type="block" format="javadoc" pos:start="18:9" pos:end="24:11">/**
	 * 
	 * @param uavID
	 * @param taskName
	 * @param duration
	 *          in seconds
	 */</comment>
	<constructor pos:start="25:9" pos:end="28:9"><specifier pos:start="25:9" pos:end="25:17">protected</specifier> <name pos:start="25:19" pos:end="25:27">DelayTask</name><parameter_list pos:start="25:28" pos:end="25:75">(<parameter pos:start="25:29" pos:end="25:40"><decl pos:start="25:29" pos:end="25:40"><type pos:start="25:29" pos:end="25:40"><name pos:start="25:29" pos:end="25:34">String</name></type> <name pos:start="25:36" pos:end="25:40">uavID</name></decl></parameter>, <parameter pos:start="25:43" pos:end="25:57"><decl pos:start="25:43" pos:end="25:57"><type pos:start="25:43" pos:end="25:57"><name pos:start="25:43" pos:end="25:48">String</name></type> <name pos:start="25:50" pos:end="25:57">taskName</name></decl></parameter>, <parameter pos:start="25:60" pos:end="25:74"><decl pos:start="25:60" pos:end="25:74"><type pos:start="25:60" pos:end="25:74"><name pos:start="25:60" pos:end="25:65">double</name></type> <name pos:start="25:67" pos:end="25:74">duration</name></decl></parameter>)</parameter_list> <block pos:start="25:77" pos:end="28:9">{<block_content pos:start="26:17" pos:end="27:41">
		<expr_stmt pos:start="26:17" pos:end="26:39"><expr pos:start="26:17" pos:end="26:38"><call pos:start="26:17" pos:end="26:38"><name pos:start="26:17" pos:end="26:21">super</name><argument_list pos:start="26:22" pos:end="26:38">(<argument pos:start="26:23" pos:end="26:27"><expr pos:start="26:23" pos:end="26:27"><name pos:start="26:23" pos:end="26:27">uavID</name></expr></argument>, <argument pos:start="26:30" pos:end="26:37"><expr pos:start="26:30" pos:end="26:37"><name pos:start="26:30" pos:end="26:37">taskName</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt pos:start="27:17" pos:end="27:41"><expr pos:start="27:17" pos:end="27:40"><name pos:start="27:17" pos:end="27:29"><name pos:start="27:17" pos:end="27:20">this</name><operator pos:start="27:21" pos:end="27:21">.</operator><name pos:start="27:22" pos:end="27:29">duration</name></name> <operator pos:start="27:31" pos:end="27:31">=</operator> <name pos:start="27:33" pos:end="27:40">duration</name></expr>;</expr_stmt>
	</block_content>}</block></constructor>

	<function pos:start="30:9" pos:end="32:9"><type pos:start="30:9" pos:end="30:21"><specifier pos:start="30:9" pos:end="30:14">public</specifier> <name pos:start="30:16" pos:end="30:21">double</name></type> <name pos:start="30:23" pos:end="30:33">getDuration</name><parameter_list pos:start="30:34" pos:end="30:35">()</parameter_list> <block pos:start="30:37" pos:end="32:9">{<block_content pos:start="31:17" pos:end="31:32">
		<return pos:start="31:17" pos:end="31:32">return <expr pos:start="31:24" pos:end="31:31"><name pos:start="31:24" pos:end="31:31">duration</name></expr>;</return>
	</block_content>}</block></function>

	<function pos:start="34:9" pos:end="37:9"><type pos:start="34:9" pos:end="34:19"><specifier pos:start="34:9" pos:end="34:14">public</specifier> <name pos:start="34:16" pos:end="34:19">void</name></type> <name pos:start="34:21" pos:end="34:34">startDelayTask</name><parameter_list pos:start="34:35" pos:end="34:36">()</parameter_list> <block pos:start="34:38" pos:end="37:9">{<block_content pos:start="35:17" pos:end="36:55">
		<expr_stmt pos:start="35:17" pos:end="35:96"><expr pos:start="35:17" pos:end="35:95"><call pos:start="35:17" pos:end="35:95"><name pos:start="35:17" pos:end="35:27"><name pos:start="35:17" pos:end="35:22">LOGGER</name><operator pos:start="35:23" pos:end="35:23">.</operator><name pos:start="35:24" pos:end="35:27">info</name></name><argument_list pos:start="35:28" pos:end="35:95">(<argument pos:start="35:29" pos:end="35:94"><expr pos:start="35:29" pos:end="35:94"><literal type="string" pos:start="35:29" pos:end="35:53">"Delay started for UAV '"</literal> <operator pos:start="35:55" pos:end="35:55">+</operator> <call pos:start="35:57" pos:end="35:66"><name pos:start="35:57" pos:end="35:64">getUAVId</name><argument_list pos:start="35:65" pos:end="35:66">()</argument_list></call> <operator pos:start="35:68" pos:end="35:68">+</operator> <literal type="string" pos:start="35:70" pos:end="35:83">"' duration: "</literal> <operator pos:start="35:85" pos:end="35:85">+</operator> <name pos:start="35:87" pos:end="35:94">duration</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt pos:start="36:17" pos:end="36:55"><expr pos:start="36:17" pos:end="36:54"><name pos:start="36:17" pos:end="36:25">startTime</name> <operator pos:start="36:27" pos:end="36:27">=</operator> <call pos:start="36:29" pos:end="36:54"><name pos:start="36:29" pos:end="36:52"><name pos:start="36:29" pos:end="36:34">System</name><operator pos:start="36:35" pos:end="36:35">.</operator><name pos:start="36:36" pos:end="36:52">currentTimeMillis</name></name><argument_list pos:start="36:53" pos:end="36:54">()</argument_list></call></expr>;</expr_stmt>
	</block_content>}</block></function>

	<function pos:start="39:9" pos:end="47:9"><type pos:start="39:9" pos:end="39:22"><specifier pos:start="39:9" pos:end="39:14">public</specifier> <name pos:start="39:16" pos:end="39:22">boolean</name></type> <name pos:start="39:24" pos:end="39:33">isFinished</name><parameter_list pos:start="39:34" pos:end="39:35">()</parameter_list> <block pos:start="39:37" pos:end="47:9">{<block_content pos:start="40:17" pos:end="45:32">
		<decl_stmt pos:start="40:17" pos:end="40:92"><decl pos:start="40:17" pos:end="40:91"><type pos:start="40:17" pos:end="40:23"><name pos:start="40:17" pos:end="40:23">boolean</name></type> <name pos:start="40:25" pos:end="40:32">finished</name> <init pos:start="40:34" pos:end="40:91">= <expr pos:start="40:36" pos:end="40:91"><call pos:start="40:36" pos:end="40:61"><name pos:start="40:36" pos:end="40:59"><name pos:start="40:36" pos:end="40:41">System</name><operator pos:start="40:42" pos:end="40:42">.</operator><name pos:start="40:43" pos:end="40:59">currentTimeMillis</name></name><argument_list pos:start="40:60" pos:end="40:61">()</argument_list></call> <operator pos:start="40:63" pos:end="40:63">-</operator> <name pos:start="40:65" pos:end="40:73">startTime</name> <operator pos:start="40:75" pos:end="40:75">&gt;</operator> <name pos:start="40:77" pos:end="40:84">duration</name> <operator pos:start="40:86" pos:end="40:86">*</operator> <literal type="number" pos:start="40:88" pos:end="40:91">1000</literal></expr></init></decl>;</decl_stmt>

		<if_stmt pos:start="42:17" pos:end="44:17"><if pos:start="42:17" pos:end="44:17">if <condition pos:start="42:20" pos:end="42:29">(<expr pos:start="42:21" pos:end="42:28"><name pos:start="42:21" pos:end="42:28">finished</name></expr>)</condition> <block pos:start="42:31" pos:end="44:17">{<block_content pos:start="43:25" pos:end="43:83">
			<expr_stmt pos:start="43:25" pos:end="43:83"><expr pos:start="43:25" pos:end="43:82"><call pos:start="43:25" pos:end="43:82"><name pos:start="43:25" pos:end="43:35"><name pos:start="43:25" pos:end="43:30">LOGGER</name><operator pos:start="43:31" pos:end="43:31">.</operator><name pos:start="43:32" pos:end="43:35">info</name></name><argument_list pos:start="43:36" pos:end="43:82">(<argument pos:start="43:37" pos:end="43:81"><expr pos:start="43:37" pos:end="43:81"><literal type="string" pos:start="43:37" pos:end="43:62">"Delay finished for UAV '"</literal> <operator pos:start="43:64" pos:end="43:64">+</operator> <call pos:start="43:66" pos:end="43:75"><name pos:start="43:66" pos:end="43:73">getUAVId</name><argument_list pos:start="43:74" pos:end="43:75">()</argument_list></call> <operator pos:start="43:77" pos:end="43:77">+</operator> <literal type="string" pos:start="43:79" pos:end="43:81">"'"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		</block_content>}</block></if></if_stmt>
		<return pos:start="45:17" pos:end="45:32">return <expr pos:start="45:24" pos:end="45:31"><name pos:start="45:24" pos:end="45:31">finished</name></expr>;</return>

	</block_content>}</block></function>

}</block></class></unit>
