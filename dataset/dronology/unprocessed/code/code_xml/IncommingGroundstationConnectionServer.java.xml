<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="Java" filename="src/IncommingGroundstationConnectionServer.java" pos:tabs="8"><package pos:start="1:1" pos:end="1:52">package <name pos:start="1:9" pos:end="1:51"><name pos:start="1:9" pos:end="1:11">edu</name><operator pos:start="1:12" pos:end="1:12">.</operator><name pos:start="1:13" pos:end="1:14">nd</name><operator pos:start="1:15" pos:end="1:15">.</operator><name pos:start="1:16" pos:end="1:24">dronology</name><operator pos:start="1:25" pos:end="1:25">.</operator><name pos:start="1:26" pos:end="1:33">gstation</name><operator pos:start="1:34" pos:end="1:34">.</operator><name pos:start="1:35" pos:end="1:43">connector</name><operator pos:start="1:44" pos:end="1:44">.</operator><name pos:start="1:45" pos:end="1:51">connect</name></name>;</package>

<import pos:start="3:1" pos:end="3:27">import <name pos:start="3:8" pos:end="3:26"><name pos:start="3:8" pos:end="3:11">java</name><operator pos:start="3:12" pos:end="3:12">.</operator><name pos:start="3:13" pos:end="3:14">io</name><operator pos:start="3:15" pos:end="3:15">.</operator><name pos:start="3:16" pos:end="3:26">IOException</name></name>;</import>
<import pos:start="4:1" pos:end="4:29">import <name pos:start="4:8" pos:end="4:28"><name pos:start="4:8" pos:end="4:11">java</name><operator pos:start="4:12" pos:end="4:12">.</operator><name pos:start="4:13" pos:end="4:15">net</name><operator pos:start="4:16" pos:end="4:16">.</operator><name pos:start="4:17" pos:end="4:28">ServerSocket</name></name>;</import>
<import pos:start="5:1" pos:end="5:23">import <name pos:start="5:8" pos:end="5:22"><name pos:start="5:8" pos:end="5:11">java</name><operator pos:start="5:12" pos:end="5:12">.</operator><name pos:start="5:13" pos:end="5:15">net</name><operator pos:start="5:16" pos:end="5:16">.</operator><name pos:start="5:17" pos:end="5:22">Socket</name></name>;</import>
<import pos:start="6:1" pos:end="6:32">import <name pos:start="6:8" pos:end="6:31"><name pos:start="6:8" pos:end="6:11">java</name><operator pos:start="6:12" pos:end="6:12">.</operator><name pos:start="6:13" pos:end="6:15">net</name><operator pos:start="6:16" pos:end="6:16">.</operator><name pos:start="6:17" pos:end="6:31">SocketException</name></name>;</import>

<import pos:start="8:1" pos:end="8:66">import <name pos:start="8:8" pos:end="8:65"><name pos:start="8:8" pos:end="8:10">edu</name><operator pos:start="8:11" pos:end="8:11">.</operator><name pos:start="8:12" pos:end="8:13">nd</name><operator pos:start="8:14" pos:end="8:14">.</operator><name pos:start="8:15" pos:end="8:23">dronology</name><operator pos:start="8:24" pos:end="8:24">.</operator><name pos:start="8:25" pos:end="8:32">gstation</name><operator pos:start="8:33" pos:end="8:33">.</operator><name pos:start="8:34" pos:end="8:42">connector</name><operator pos:start="8:43" pos:end="8:43">.</operator><name pos:start="8:44" pos:end="8:65">GroundstationConnector</name></name>;</import>
<import pos:start="9:1" pos:end="9:83">import <name pos:start="9:8" pos:end="9:82"><name pos:start="9:8" pos:end="9:10">edu</name><operator pos:start="9:11" pos:end="9:11">.</operator><name pos:start="9:12" pos:end="9:13">nd</name><operator pos:start="9:14" pos:end="9:14">.</operator><name pos:start="9:15" pos:end="9:23">dronology</name><operator pos:start="9:24" pos:end="9:24">.</operator><name pos:start="9:25" pos:end="9:32">gstation</name><operator pos:start="9:33" pos:end="9:33">.</operator><name pos:start="9:34" pos:end="9:42">connector</name><operator pos:start="9:43" pos:end="9:43">.</operator><name pos:start="9:44" pos:end="9:50">service</name><operator pos:start="9:51" pos:end="9:51">.</operator><name pos:start="9:52" pos:end="9:60">connector</name><operator pos:start="9:61" pos:end="9:61">.</operator><name pos:start="9:62" pos:end="9:82">DroneConnectorService</name></name>;</import>
<import pos:start="10:1" pos:end="10:30">import <name pos:start="10:8" pos:end="10:29"><name pos:start="10:8" pos:end="10:10">net</name><operator pos:start="10:11" pos:end="10:11">.</operator><name pos:start="10:12" pos:end="10:13">mv</name><operator pos:start="10:14" pos:end="10:14">.</operator><name pos:start="10:15" pos:end="10:21">logging</name><operator pos:start="10:22" pos:end="10:22">.</operator><name pos:start="10:23" pos:end="10:29">ILogger</name></name>;</import>
<import pos:start="11:1" pos:end="11:37">import <name pos:start="11:8" pos:end="11:36"><name pos:start="11:8" pos:end="11:10">net</name><operator pos:start="11:11" pos:end="11:11">.</operator><name pos:start="11:12" pos:end="11:13">mv</name><operator pos:start="11:14" pos:end="11:14">.</operator><name pos:start="11:15" pos:end="11:21">logging</name><operator pos:start="11:22" pos:end="11:22">.</operator><name pos:start="11:23" pos:end="11:36">LoggerProvider</name></name>;</import>

<comment type="block" format="javadoc" pos:start="13:1" pos:end="18:3">/**
 * The {@link IncommingGroundstationConnectionServer} listens on a predefined port for new connections from GCS.
 * 
 * 
 * @author Michael Vierhauser
 */</comment>
 
<class pos:start="20:1" pos:end="71:1"><specifier pos:start="20:1" pos:end="20:6">public</specifier> class <name pos:start="20:14" pos:end="20:51">IncommingGroundstationConnectionServer</name> <super_list pos:start="20:53" pos:end="20:71"><implements pos:start="20:53" pos:end="20:71">implements <super pos:start="20:64" pos:end="20:71"><name pos:start="20:64" pos:end="20:71">Runnable</name></super></implements></super_list> <block pos:start="20:73" pos:end="71:1">{
	<decl_stmt pos:start="21:9" pos:end="21:32"><decl pos:start="21:9" pos:end="21:31"><type pos:start="21:9" pos:end="21:19"><specifier pos:start="21:9" pos:end="21:15">private</specifier> <name pos:start="21:17" pos:end="21:19">int</name></type> <name pos:start="21:21" pos:end="21:24">port</name> <init pos:start="21:26" pos:end="21:31">= <expr pos:start="21:28" pos:end="21:31"><literal type="number" pos:start="21:28" pos:end="21:31">1234</literal></expr></init></decl>;</decl_stmt>
	<decl_stmt pos:start="22:9" pos:end="22:42"><decl pos:start="22:9" pos:end="22:41"><type pos:start="22:9" pos:end="22:28"><specifier pos:start="22:9" pos:end="22:15">private</specifier> <name pos:start="22:17" pos:end="22:28">ServerSocket</name></type> <name pos:start="22:30" pos:end="22:41">serverSocket</name></decl>;</decl_stmt>
	<decl_stmt pos:start="23:9" pos:end="23:36"><decl pos:start="23:9" pos:end="23:35"><type pos:start="23:9" pos:end="23:23"><specifier pos:start="23:9" pos:end="23:15">private</specifier> <name pos:start="23:17" pos:end="23:23">boolean</name></type> <name pos:start="23:25" pos:end="23:28">cont</name> <init pos:start="23:30" pos:end="23:35">= <expr pos:start="23:32" pos:end="23:35"><literal type="boolean" pos:start="23:32" pos:end="23:35">true</literal></expr></init></decl>;</decl_stmt>
	<decl_stmt pos:start="24:9" pos:end="24:117"><decl pos:start="24:9" pos:end="24:116"><type pos:start="24:9" pos:end="24:36"><specifier pos:start="24:9" pos:end="24:15">private</specifier> <specifier pos:start="24:17" pos:end="24:22">static</specifier> <specifier pos:start="24:24" pos:end="24:28">final</specifier> <name pos:start="24:30" pos:end="24:36">ILogger</name></type> <name pos:start="24:38" pos:end="24:43">LOGGER</name> <init pos:start="24:45" pos:end="24:116">= <expr pos:start="24:47" pos:end="24:116"><call pos:start="24:47" pos:end="24:116"><name pos:start="24:47" pos:end="24:70"><name pos:start="24:47" pos:end="24:60">LoggerProvider</name><operator pos:start="24:61" pos:end="24:61">.</operator><name pos:start="24:62" pos:end="24:70">getLogger</name></name><argument_list pos:start="24:71" pos:end="24:116">(<argument pos:start="24:72" pos:end="24:115"><expr pos:start="24:72" pos:end="24:115"><name pos:start="24:72" pos:end="24:115"><name pos:start="24:72" pos:end="24:109">IncommingGroundstationConnectionServer</name><operator pos:start="24:110" pos:end="24:110">.</operator><name pos:start="24:111" pos:end="24:115">class</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<decl_stmt pos:start="25:9" pos:end="25:41"><decl pos:start="25:9" pos:end="25:40"><type pos:start="25:9" pos:end="25:22"><specifier pos:start="25:9" pos:end="25:15">private</specifier> <name pos:start="25:17" pos:end="25:22">String</name></type> <name pos:start="25:24" pos:end="25:26">URL</name> <init pos:start="25:28" pos:end="25:40">= <expr pos:start="25:30" pos:end="25:40"><literal type="string" pos:start="25:30" pos:end="25:40">"127.0.0.1"</literal></expr></init></decl>;</decl_stmt>

	<constructor pos:start="27:9" pos:end="29:9"><specifier pos:start="27:9" pos:end="27:14">public</specifier> <name pos:start="27:16" pos:end="27:53">IncommingGroundstationConnectionServer</name><parameter_list pos:start="27:54" pos:end="27:55">()</parameter_list> <block pos:start="27:57" pos:end="29:9">{<block_content>

	</block_content>}</block></constructor>

	<function pos:start="31:9" pos:end="68:9"><annotation pos:start="31:9" pos:end="31:17">@<name pos:start="31:10" pos:end="31:17">Override</name></annotation>
	<type pos:start="32:9" pos:end="32:19"><specifier pos:start="32:9" pos:end="32:14">public</specifier> <name pos:start="32:16" pos:end="32:19">void</name></type> <name pos:start="32:21" pos:end="32:23">run</name><parameter_list pos:start="32:24" pos:end="32:25">()</parameter_list> <block pos:start="32:27" pos:end="68:9">{<block_content pos:start="34:17" pos:end="66:17">

		<expr_stmt pos:start="34:17" pos:end="34:36"><expr pos:start="34:17" pos:end="34:35"><name pos:start="34:17" pos:end="34:28">serverSocket</name> <operator pos:start="34:30" pos:end="34:30">=</operator> <literal type="null" pos:start="34:32" pos:end="34:35">null</literal></expr>;</expr_stmt>
		<try pos:start="35:17" pos:end="66:17">try <block pos:start="35:21" pos:end="56:17">{<block_content pos:start="36:25" pos:end="55:25">
			<expr_stmt pos:start="36:25" pos:end="36:68"><expr pos:start="36:25" pos:end="36:67"><name pos:start="36:25" pos:end="36:36">serverSocket</name> <operator pos:start="36:38" pos:end="36:38">=</operator> <operator pos:start="36:40" pos:end="36:42">new</operator> <call pos:start="36:44" pos:end="36:67"><name pos:start="36:44" pos:end="36:55">ServerSocket</name><argument_list pos:start="36:56" pos:end="36:67">(<argument pos:start="36:57" pos:end="36:60"><expr pos:start="36:57" pos:end="36:60"><name pos:start="36:57" pos:end="36:60">port</name></expr></argument>, <argument pos:start="36:63" pos:end="36:66"><expr pos:start="36:63" pos:end="36:66"><literal type="number" pos:start="36:63" pos:end="36:66">3000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<comment type="line" pos:start="37:25" pos:end="37:56">// server.setReuseAddress(true);</comment>

			<expr_stmt pos:start="39:25" pos:end="39:108"><expr pos:start="39:25" pos:end="39:107"><call pos:start="39:25" pos:end="39:107"><name pos:start="39:25" pos:end="39:35"><name pos:start="39:25" pos:end="39:30">LOGGER</name><operator pos:start="39:31" pos:end="39:31">.</operator><name pos:start="39:32" pos:end="39:35">info</name></name><argument_list pos:start="39:36" pos:end="39:107">(<argument pos:start="39:37" pos:end="39:106"><expr pos:start="39:37" pos:end="39:106"><literal type="string" pos:start="39:37" pos:end="39:99">"Incomming-Groundstation Connection Server listening on port: "</literal> <operator pos:start="39:101" pos:end="39:101">+</operator> <name pos:start="39:103" pos:end="39:106">port</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<comment type="line" pos:start="40:25" pos:end="40:53">// server.setSoTimeout(1000);</comment>

			<while pos:start="42:25" pos:end="55:25">while <condition pos:start="42:31" pos:end="42:36">(<expr pos:start="42:32" pos:end="42:35"><name pos:start="42:32" pos:end="42:35">cont</name></expr>)</condition> <block pos:start="42:38" pos:end="55:25">{<block_content pos:start="43:33" pos:end="54:33">
				<decl_stmt pos:start="43:33" pos:end="43:53"><decl pos:start="43:33" pos:end="43:52"><type pos:start="43:33" pos:end="43:38"><name pos:start="43:33" pos:end="43:38">Socket</name></type> <name pos:start="43:40" pos:end="43:45">socket</name> <init pos:start="43:47" pos:end="43:52">= <expr pos:start="43:49" pos:end="43:52"><literal type="null" pos:start="43:49" pos:end="43:52">null</literal></expr></init></decl>;</decl_stmt>
				<try pos:start="44:33" pos:end="54:33">try <block pos:start="44:37" pos:end="49:33">{<block_content pos:start="45:41" pos:end="47:102">
					<expr_stmt pos:start="45:41" pos:end="45:71"><expr pos:start="45:41" pos:end="45:70"><name pos:start="45:41" pos:end="45:46">socket</name> <operator pos:start="45:48" pos:end="45:48">=</operator> <call pos:start="45:50" pos:end="45:70"><name pos:start="45:50" pos:end="45:68"><name pos:start="45:50" pos:end="45:61">serverSocket</name><operator pos:start="45:62" pos:end="45:62">.</operator><name pos:start="45:63" pos:end="45:68">accept</name></name><argument_list pos:start="45:69" pos:end="45:70">()</argument_list></call></expr>;</expr_stmt>
					<decl_stmt pos:start="46:41" pos:end="46:114"><decl pos:start="46:41" pos:end="46:113"><type pos:start="46:41" pos:end="46:62"><name pos:start="46:41" pos:end="46:62">GroundstationConnector</name></type> <name pos:start="46:64" pos:end="46:70">handler</name> <init pos:start="46:72" pos:end="46:113">= <expr pos:start="46:74" pos:end="46:113"><operator pos:start="46:74" pos:end="46:76">new</operator> <call pos:start="46:78" pos:end="46:113"><name pos:start="46:78" pos:end="46:99">GroundstationConnector</name><argument_list pos:start="46:100" pos:end="46:113">(<argument pos:start="46:101" pos:end="46:104"><expr pos:start="46:101" pos:end="46:104"><name pos:start="46:101" pos:end="46:104">this</name></expr></argument>, <argument pos:start="46:107" pos:end="46:112"><expr pos:start="46:107" pos:end="46:112"><name pos:start="46:107" pos:end="46:112">socket</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
					<expr_stmt pos:start="47:41" pos:end="47:102"><expr pos:start="47:41" pos:end="47:101"><call pos:start="47:41" pos:end="47:75"><name pos:start="47:41" pos:end="47:73"><name pos:start="47:41" pos:end="47:61">DroneConnectorService</name><operator pos:start="47:62" pos:end="47:62">.</operator><name pos:start="47:63" pos:end="47:73">getInstance</name></name><argument_list pos:start="47:74" pos:end="47:75">()</argument_list></call><operator pos:start="47:76" pos:end="47:76">.</operator><call pos:start="47:77" pos:end="47:101"><name pos:start="47:77" pos:end="47:92">handleConnection</name><argument_list pos:start="47:93" pos:end="47:101">(<argument pos:start="47:94" pos:end="47:100"><expr pos:start="47:94" pos:end="47:100"><name pos:start="47:94" pos:end="47:100">handler</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

				</block_content>}</block> <catch pos:start="49:35" pos:end="51:33">catch <parameter_list pos:start="49:41" pos:end="49:59">(<parameter pos:start="49:42" pos:end="49:58"><decl pos:start="49:42" pos:end="49:58"><type pos:start="49:42" pos:end="49:58"><name pos:start="49:42" pos:end="49:56">SocketException</name></type> <name pos:start="49:58" pos:end="49:58">e</name></decl></parameter>)</parameter_list> <block pos:start="49:61" pos:end="51:33">{<block_content pos:start="50:41" pos:end="50:74">
					<expr_stmt pos:start="50:41" pos:end="50:74"><expr pos:start="50:41" pos:end="50:73"><call pos:start="50:41" pos:end="50:73"><name pos:start="50:41" pos:end="50:51"><name pos:start="50:41" pos:end="50:46">LOGGER</name><operator pos:start="50:47" pos:end="50:47">.</operator><name pos:start="50:48" pos:end="50:51">info</name></name><argument_list pos:start="50:52" pos:end="50:73">(<argument pos:start="50:53" pos:end="50:72"><expr pos:start="50:53" pos:end="50:72"><literal type="string" pos:start="50:53" pos:end="50:72">"Socket was closed!"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				</block_content>}</block></catch> <catch pos:start="51:35" pos:end="54:33">catch <parameter_list pos:start="51:41" pos:end="51:55">(<parameter pos:start="51:42" pos:end="51:54"><decl pos:start="51:42" pos:end="51:54"><type pos:start="51:42" pos:end="51:54"><name pos:start="51:42" pos:end="51:52">IOException</name></type> <name pos:start="51:54" pos:end="51:54">e</name></decl></parameter>)</parameter_list> <block pos:start="51:57" pos:end="54:33">{<block_content pos:start="52:41" pos:end="52:56">
					<expr_stmt pos:start="52:41" pos:end="52:56"><expr pos:start="52:41" pos:end="52:55"><call pos:start="52:41" pos:end="52:55"><name pos:start="52:41" pos:end="52:52"><name pos:start="52:41" pos:end="52:46">LOGGER</name><operator pos:start="52:47" pos:end="52:47">.</operator><name pos:start="52:48" pos:end="52:52">error</name></name><argument_list pos:start="52:53" pos:end="52:55">(<argument pos:start="52:54" pos:end="52:54"><expr pos:start="52:54" pos:end="52:54"><name pos:start="52:54" pos:end="52:54">e</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

				</block_content>}</block></catch></try>
			</block_content>}</block></while>
		</block_content>}</block> <catch pos:start="56:19" pos:end="58:17">catch <parameter_list pos:start="56:25" pos:end="56:37">(<parameter pos:start="56:26" pos:end="56:36"><decl pos:start="56:26" pos:end="56:36"><type pos:start="56:26" pos:end="56:36"><name pos:start="56:26" pos:end="56:34">Exception</name></type> <name pos:start="56:36" pos:end="56:36">e</name></decl></parameter>)</parameter_list> <block pos:start="56:39" pos:end="58:17">{<block_content pos:start="57:25" pos:end="57:40">
			<expr_stmt pos:start="57:25" pos:end="57:40"><expr pos:start="57:25" pos:end="57:39"><call pos:start="57:25" pos:end="57:39"><name pos:start="57:25" pos:end="57:36"><name pos:start="57:25" pos:end="57:30">LOGGER</name><operator pos:start="57:31" pos:end="57:31">.</operator><name pos:start="57:32" pos:end="57:36">error</name></name><argument_list pos:start="57:37" pos:end="57:39">(<argument pos:start="57:38" pos:end="57:38"><expr pos:start="57:38" pos:end="57:38"><name pos:start="57:38" pos:end="57:38">e</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		</block_content>}</block></catch> <finally pos:start="58:19" pos:end="66:17">finally <block pos:start="58:27" pos:end="66:17">{<block_content pos:start="59:25" pos:end="65:25">
			<try pos:start="59:25" pos:end="65:25">try <block pos:start="59:29" pos:end="63:25">{<block_content pos:start="60:33" pos:end="62:33">
				<if_stmt pos:start="60:33" pos:end="62:33"><if pos:start="60:33" pos:end="62:33">if <condition pos:start="60:36" pos:end="60:57">(<expr pos:start="60:37" pos:end="60:56"><name pos:start="60:37" pos:end="60:48">serverSocket</name> <operator pos:start="60:50" pos:end="60:51">!=</operator> <literal type="null" pos:start="60:53" pos:end="60:56">null</literal></expr>)</condition> <block pos:start="60:59" pos:end="62:33">{<block_content pos:start="61:41" pos:end="61:61">
					<expr_stmt pos:start="61:41" pos:end="61:61"><expr pos:start="61:41" pos:end="61:60"><call pos:start="61:41" pos:end="61:60"><name pos:start="61:41" pos:end="61:58"><name pos:start="61:41" pos:end="61:52">serverSocket</name><operator pos:start="61:53" pos:end="61:53">.</operator><name pos:start="61:54" pos:end="61:58">close</name></name><argument_list pos:start="61:59" pos:end="61:60">()</argument_list></call></expr>;</expr_stmt>
				</block_content>}</block></if></if_stmt>
			</block_content>}</block> <catch pos:start="63:27" pos:end="65:25">catch <parameter_list pos:start="63:33" pos:end="63:47">(<parameter pos:start="63:34" pos:end="63:46"><decl pos:start="63:34" pos:end="63:46"><type pos:start="63:34" pos:end="63:46"><name pos:start="63:34" pos:end="63:44">IOException</name></type> <name pos:start="63:46" pos:end="63:46">e</name></decl></parameter>)</parameter_list> <block pos:start="63:49" pos:end="65:25">{<block_content pos:start="64:33" pos:end="64:48">
				<expr_stmt pos:start="64:33" pos:end="64:48"><expr pos:start="64:33" pos:end="64:47"><call pos:start="64:33" pos:end="64:47"><name pos:start="64:33" pos:end="64:44"><name pos:start="64:33" pos:end="64:38">LOGGER</name><operator pos:start="64:39" pos:end="64:39">.</operator><name pos:start="64:40" pos:end="64:44">error</name></name><argument_list pos:start="64:45" pos:end="64:47">(<argument pos:start="64:46" pos:end="64:46"><expr pos:start="64:46" pos:end="64:46"><name pos:start="64:46" pos:end="64:46">e</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			</block_content>}</block></catch></try>
		</block_content>}</block></finally></try>

	</block_content>}</block></function>


}</block></class>
</unit>
