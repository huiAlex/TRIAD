<Class>
    <Id>54</Id>
    <Package>edu.nd.dronology.core.fleet</Package>
    <ClassName>PhysicalDroneFleetFactory</ClassName>
    <SuperClass>AbstractDroneFleetFactory</SuperClass>
    <SuperInterfaceList>
        <SuperInterface></SuperInterface>
    </SuperInterfaceList>
    <ClassComment>PhysicalDroneFleetFactory  /** 
 * Factory class for initializing a new  {@link PhysicalDrone} instance.
 * @author Jane Cleland-Huang
 */
</ClassComment>
    <FieldList>
        <Field>
            <FieldName>LOGGER</FieldName>
            <FieldType>ILogger</FieldType>
        </Field>
        <Field>
            <FieldName>INSTANCE</FieldName>
            <FieldType>PhysicalDroneFleetFactory</FieldType>
        </Field>
        <Field>
            <FieldName>commandHandler</FieldName>
            <FieldType>IDroneCommandHandler</FieldType>
        </Field>
    </FieldList>
    <MethodList>
        <Method>
            <MethodName>PhysicalDroneFleetFactory</MethodName>
            <MethodComment></MethodComment>
            <ReturnType></ReturnType>
            <ParameterList>
                <ParameterType></ParameterType>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>setCommandHandler</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <ParameterType>IDroneCommandHandler commandHandler</ParameterType>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getInstance</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>PhysicalDroneFleetFactory</ReturnType>
            <ParameterList>
                <ParameterType></ParameterType>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>initializeDrone</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>ManagedDrone</ReturnType>
            <ParameterList>
                <ParameterType>String droneID</ParameterType>
                <ParameterType>String droneType</ParameterType>
                <ParameterType>double latitude</ParameterType>
                <ParameterType>double longitude</ParameterType>
                <ParameterType>double altitude</ParameterType>
            </ParameterList>
            <InnerVarList>
                <InnerVar>String[] [ids=droneID.split(":")]</InnerVar>
                <InnerVar>String [drnId=ids[0]]</InnerVar>
                <InnerVar>String [groundstationid=ids[1]]</InnerVar>
                <InnerVar>IDrone [drone=new PhysicalDrone(createDroneID(drnId),RuntimeDroneTypes.getInstance().getCommandHandler(groundstationid))]</InnerVar>
                <InnerVar>ManagedDrone [managedDrone=new ManagedDrone(drone)]</InnerVar>
                <InnerVar>LlaCoordinate [currentPosition=new LlaCoordinate(latitude,longitude,10)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke>drone;setManagedDrone;[managedDrone]</InnerMethodInvoke>
                <InnerMethodInvoke>LOGGER;info;["Drone initialized at: " + currentPosition.toString()]</InnerMethodInvoke>
                <InnerMethodInvoke>DronologyMonitoringManager.getInstance();publish;[MessageMarshaller.createMessage(MessageType.PHYSICAL_UAV_ACTIVATED,drone.getDroneName(),currentPosition)]</InnerMethodInvoke>
                <InnerMethodInvoke>drone;setBaseCoordinates;[currentPosition]</InnerMethodInvoke>
                <InnerMethodInvoke>drone;setCoordinates;[currentPosition.getLatitude(), currentPosition.getLongitude(), currentPosition.getAltitude()]</InnerMethodInvoke>
                <InnerMethodInvoke>managedDrone;start;[]</InnerMethodInvoke>
                <InnerMethodInvoke>DroneFleetManager.getInstance();addDrone;[managedDrone]</InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>DroneException</ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>