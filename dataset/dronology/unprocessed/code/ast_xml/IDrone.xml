<Class>
    <Id>90</Id>
    <Package>edu.nd.dronology.core.vehicle</Package>
    <ClassName>IDrone</ClassName>
    <SuperClass></SuperClass>
    <SuperInterfaceList>
        <SuperInterface></SuperInterface>
    </SuperInterfaceList>
    <ClassComment>IDrone  /** 
 * iDrone interface
 * @author Jane Cleland-Huang
 * @version 0.01
 */
</ClassComment>
    <FieldList/>
    <MethodList>
        <Method>
            <MethodName>getDroneStatus</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>UAVProxy</ReturnType>
            <ParameterList>
                <ParameterType></ParameterType>
            </ParameterList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getLatitude</MethodName>
            <MethodComment>/** 
 * @return latitude of drone
 */
</MethodComment>
            <ReturnType>double</ReturnType>
            <ParameterList>
                <ParameterType></ParameterType>
            </ParameterList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getLongitude</MethodName>
            <MethodComment>/** 
 * @return longitude of drone
 */
</MethodComment>
            <ReturnType>double</ReturnType>
            <ParameterList>
                <ParameterType></ParameterType>
            </ParameterList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getAltitude</MethodName>
            <MethodComment>/** 
 * @return altitude of drone
 */
</MethodComment>
            <ReturnType>double</ReturnType>
            <ParameterList>
                <ParameterType></ParameterType>
            </ParameterList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>flyTo</MethodName>
            <MethodComment>/** 
 * Fly drone to target coordinates
 * @param targetCoordinates
 * @param speed
 */
</MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <ParameterType>LlaCoordinate targetCoordinates</ParameterType>
                <ParameterType>Double speed</ParameterType>
            </ParameterList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getCoordinates</MethodName>
            <MethodComment>/** 
 * @return current coordinates
 */
</MethodComment>
            <ReturnType>LlaCoordinate</ReturnType>
            <ParameterList>
                <ParameterType></ParameterType>
            </ParameterList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getDroneName</MethodName>
            <MethodComment>/** 
 * @return unique name of drone
 */
</MethodComment>
            <ReturnType>String</ReturnType>
            <ParameterList>
                <ParameterType></ParameterType>
            </ParameterList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>land</MethodName>
            <MethodComment>/** 
 * Land the drone. Update status.
 * @throws FlightZoneException
 */
</MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <ParameterType></ParameterType>
            </ParameterList>
            <ThrowExceptionList>
                <ExceptionType>FlightZoneException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>takeOff</MethodName>
            <MethodComment>/** 
 * Takeoff. Update status.
 * @throws FlightZoneException
 */
</MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <ParameterType>double altitude</ParameterType>
            </ParameterList>
            <ThrowExceptionList>
                <ExceptionType>FlightZoneException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>setCoordinates</MethodName>
            <MethodComment>/** 
 * Sets drones coordinates
 * @param lat latitude
 * @param lon Longitude
 * @param alt Altitude
 */
</MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <ParameterType>double lat</ParameterType>
                <ParameterType>double lon</ParameterType>
                <ParameterType>double alt</ParameterType>
            </ParameterList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getBatteryStatus</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>double</ReturnType>
            <ParameterList>
                <ParameterType></ParameterType>
            </ParameterList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>move</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>boolean</ReturnType>
            <ParameterList>
                <ParameterType>double i</ParameterType>
            </ParameterList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>setVoltageCheckPoint</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <ParameterType></ParameterType>
            </ParameterList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>isDestinationReached</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>boolean</ReturnType>
            <ParameterList>
                <ParameterType>int distanceMovedPerTimeStep</ParameterType>
            </ParameterList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>setBaseCoordinates</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <ParameterType>LlaCoordinate basePosition</ParameterType>
            </ParameterList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getBaseCoordinates</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>LlaCoordinate</ReturnType>
            <ParameterList>
                <ParameterType></ParameterType>
            </ParameterList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>setGroundSpeed</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <ParameterType>double speed</ParameterType>
            </ParameterList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>setVelocity</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <ParameterType>double x</ParameterType>
                <ParameterType>double y</ParameterType>
                <ParameterType>double z</ParameterType>
            </ParameterList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>setCoordinates</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <ParameterType>LlaCoordinate coordinate</ParameterType>
            </ParameterList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>sendCommand</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <ParameterType>AbstractDroneCommand command</ParameterType>
            </ParameterList>
            <ThrowExceptionList>
                <ExceptionType>DroneException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getLatestDroneSnapshot</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>DroneSnapshotInternal</ReturnType>
            <ParameterList>
                <ParameterType></ParameterType>
            </ParameterList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>setManagedDrone</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <ParameterType>ManagedDrone managedDrone</ParameterType>
            </ParameterList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>resendCommand</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <ParameterType></ParameterType>
            </ParameterList>
            <ThrowExceptionList>
                <ExceptionType>DroneException</ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>