<Class>
    <Id>128</Id>
    <Package>edu.nd.dronology.services.extensions.missionplanning.plan</Package>
    <ClassName>MissionUtil</ClassName>
    <SuperClass></SuperClass>
    <SuperInterfaceList>
        <SuperInterface></SuperInterface>
    </SuperInterfaceList>
    <ClassComment></ClassComment>
    <FieldList>
        <Field>
            <FieldName>LOGGER</FieldName>
            <FieldType>ILogger</FieldType>
        </Field>
    </FieldList>
    <MethodList>
        <Method>
            <MethodName>activateRoute</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <ParameterType>IMissionTask activeTask</ParameterType>
            </ParameterList>
            <InnerVarList>
                <InnerVar>FlightRouteInfo [route=null]</InnerVar>
                <InnerVar>Collection&lt;FlightRouteInfo&gt; [routes]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>MissionExecutionException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>activateWaypoint</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <ParameterType>IMissionTask activeTask</ParameterType>
            </ParameterList>
            <InnerVarList>
                <InnerVar>Waypoint [wp=new Waypoint(activeTask.getWaypoint())]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>MissionExecutionException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getFinalWaypoint</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>LlaCoordinate</ReturnType>
            <ParameterList>
                <ParameterType>IMissionTask allTasks</ParameterType>
            </ParameterList>
            <InnerVarList>
                <InnerVar>IMissionTask [task=allTasks.get(allTasks.size() - 1)]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>MissionExecutionException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getLastWaypoint</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>LlaCoordinate</ReturnType>
            <ParameterList>
                <ParameterType>String routeName</ParameterType>
            </ParameterList>
            <InnerVarList>
                <InnerVar>FlightRouteInfo [route=null]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>MissionExecutionException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getFirstWayPoint</MethodName>
            <MethodComment>/** 
 * Given a routename extract the first way point
 * @param routeName
 * @return
 */
</MethodComment>
            <ReturnType>LlaCoordinate</ReturnType>
            <ParameterList>
                <ParameterType>String routeName</ParameterType>
            </ParameterList>
            <InnerVarList>
                <InnerVar>FlightRouteInfo [route=null]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>MissionExecutionException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>getHome</MethodName>
            <MethodComment>/** 
 * Get the home coordinates of *this* UAV i.e., uavID (class variable)
 * @param routeName
 * @return
 * @throws MissionExecutionException
 */
</MethodComment>
            <ReturnType>LlaCoordinate</ReturnType>
            <ParameterList>
                <ParameterType>String uavid</ParameterType>
            </ParameterList>
            <InnerVarList>
                <InnerVar>Collection&lt;IUAVProxy&gt; [uavList=DroneSetupService.getInstance().getActiveUAVs()]</InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType>MissionExecutionException</ExceptionType>
            </ThrowExceptionList>
        </Method>
        <Method>
            <MethodName>stopUAV</MethodName>
            <MethodComment></MethodComment>
            <ReturnType>void</ReturnType>
            <ParameterList>
                <ParameterType>String uavid</ParameterType>
            </ParameterList>
            <InnerVarList>
                <InnerVar></InnerVar>
            </InnerVarList>
            <InnerMethodInvokeList>
                <InnerMethodInvoke></InnerMethodInvoke>
            </InnerMethodInvokeList>
            <ThrowExceptionList>
                <ExceptionType></ExceptionType>
            </ThrowExceptionList>
        </Method>
    </MethodList>
</Class>