 c unit test user stori enabl token auth mode est client march copyright c cisco system right reserv includ stdio h ifndef win includ unistd h endif includ est h includ curl curl h includ `` curl util h includ `` test util h includ `` st server h includ openssl ssl h ifdef cunit includ `` cunit basic h includ `` cunit autom h endif includ errno h cacert null cacert len defin server ip `` defin tcp port follow csr generat use follow openssl command use cat rsa req file openssl req newkey rsa keyout rsakey pem keyform pem rsa req outform pem defin pkcs rsa `` miicv tccaa ucaqaw delmak gauebh mcvvmx cz ajbg nvbag mak dmqww cg ydvqqh\\n dansvfax ej aqbg nvbao mcvjtqwnlcn rjbz emmao gauecww dcn nh mraw dg ydvqqd\\n dadyc zgl mrow gayjko zihvc naqk bfgtyc fazgl lm nvb tccasiw dqyjko zi\\nhvc naqebbqadgg epadccaqo cgg ebanp ctbr ktbganq qhxhi nlopvxc jy\\n xa qz rjbo bexzqx bt ueygnh hola isasnz zkwpv mhjwm pynt oci y\\n fog ldb anm aoksfc mlbib ccsh holhaa fr wsk rtasew muoz fuv bkw ah ij\\n kpywsd yoxu wfig ehlm gplbzq fr bidrqk nlddgi xo dd nu lmjgdakv bww\\n baw ai vpsyevf wdr hwgg xn vt mw bp cgrll systum tgyb mcx jywe\\n lu mn djj zw ds zw ixa baxzax ei r xoxhn zmtefx y gp fk kv caw eaaa aamag\\n csq gsib dqebbquaaibaqbr iw nj elj fkrh q qe svee b aqa ruf zusku k\\nlsih ucfbk qvgljnhsc qucz ibn jzeq epq sdnom fwcv mc ah qf xfgyx jgpw f\\nutn uifj di zhr wgf j nnbt hrkecw zex z hcjt eci ek dsr ao bx yrcqt c\\n wq plvm llyjc zc skhvdnyakf sygmocsw gel vliz ocay asgbi ebw\\n rk ca yzwvhjqjp cuz jecl vdkpijb zgdjamdmdj zy pye auxar wss d\\nci um h ewtmr uzb lljkj jp bxrnontgm wzm qfhx defin pkcs_ req `` miiezj ccak caqaw itepmagaueaww gskp uzxnmqw daydvqqfew uw mdaw mtcc\\n ai iw dqyjko zihvc naqebbqadgg ipadccago cgg ibalf ll hxqz obi kwdf xsa zl\\n jyr cpxmi qit yp iigl lv htt wzlouou bb gb xki fgq smj roelw cn\\n dih tjd gbc xm dmh dedgzpj aqur sigvnvg uzowjfugyi rh\\ndfsj ou emf zwwrmg bqzvb ddpnbdw la tk qrsxfhdb ndnsh nsyx d e\\n ixdu cfeg hqx hinuod zze anyu qmbufwoh el ub qugub mjur ynrqnii\\nduvq ujkhj nwz ih labda mw sm cejuw kbay uzzkrqo vkb wzz fsd ytn s\\n vvov mddeok xw iih grjygt wne yolonbfuevg bw eie fjb falxw\\nsp ialk gfcubit rhb bk tj gf udryp ss kdqx hnm wbxyzvk tkc nwsol\\net zp tk bto ujbn wpuq yoi ugm zt gp sp jeet dy mjha pze vk ftm uwq\\nb etoxkub gwcv xv wfi bx evvet gnsi eqezpvwsc ya cy y ofuco etr ekr\\ngap ddez vti pnpeq azu tngo ox pqr cpgbdnz uet sdd ox knfmnmwq yin\\n zpmxhtz ra kvsclv jag mbaagg adanbgkqhki gw baqufaaocag eajmw ziub\\n ushw qbfs ytsxt ks ztvun qxj nmtzz quoq okx dkpzs kx lnv hkm fqcx ag\\ngb ew xk apva mddghc nj xoq gkcl zdm gjo req zwzv tdroz pyenvg l yz sa\\nxzew pg whl vqvk vcp hneuif bgireo v fxq cauut qhg hax yww\\n jmypi ggaad zruicl qtlu aduxi ymup fcsjxzr rp elf pl oi b fa zp\\nsrzll opwn rdxvff xog xt xvir ihvhnwjkm dzykovat msa guc mdnjm kib\\n nbvhfgk bvqopsngkwn eoj rsa ksx tefm oxmp cr aer nd vog otw zdquqy \\n budmg xt wo gs kigo rhawberyw qdi rl bgg n pkzdpm yitef zvp n xw gqlj gx\\nsj twe rknggh ucuu fs rgqg ysggi dsif lhb xjnci rgq xpnrf mi rk b\\ne syvki ixt zf abtjk ubt vfo krfq nxulb jyebh lt yphjubza esw es\\nk zzpzn k gsq up whn efevi cwprnpv vnr khf bauk gr sekknzwf v yf\\n xnq wy otgdo luusg fdjsq nh amlmx cn y\\n defin enrol url ba `` https known est simpleenrol defin pkcs ct `` content type applic pkcs defin uidpwd good `` estus estpwd ifndef win defin cacert `` ca est ca cacert crt defin cacert `` ca est ca cacert crt defin server cert `` ca est ca privat estservercertandkey pem defin server key `` ca est ca privat estservercertandkey pem defin client cert `` ca est ca privat estservercertandkey pem defin client key `` ca est ca privat estservercertandkey pem defin cacert `` ca\\\\est ca\\\\cacert crt defin cacert `` ca\\\\est ca\\\\cacert crt defin server cert `` ca\\\\est ca\\\\private\\\\estservercertandkey pem defin server key `` ca\\\\est ca\\\\private\\\\estservercertandkey pem defin client cert `` ca\\\\est ca\\\\private\\\\estservercertandkey pem defin client key `` ca\\\\est ca\\\\priv estservercertandkey pem critic section logger critic section logger stderr format va list l enter critic section logger critic section vfprintf stderr format l fflush stderr leav critic section logger critic section endif clean start server manual enrol nid rv rv st start tcp port `` ca est ca privat estservercertandkey pem `` ca est ca privat estservercertandkey pem `` estrealm `` ca est ca cacert crt `` ca trustedcert crt `` ca est exampl ca cnf manual enrol nid rv routin call cunit initi test suit use alloc data open resourc requir test case init suit rv ifdef win initi critic section logger critic section est init logger est log lvl info logger stderr endif read ca certif cacert len read binari file cacert cacert cacert len clean start instanc est server automat enrol enabl rv start server rv routin call cunit uniniti test suit use dealloc data close resourc use test case destroy suit st stop free cacert callback function pass est client init client manual cert verifi x cur cert openssl cert error bio bio err bio err bio new fp stderr bio noclos approv print specif cert printf `` s open ssl est server cert verif fail follow error openssl cert error d s \\n _ function__ openssl cert error x verifi cert error string openssl cert error printf `` fail cert \\n x print fp stdout cur cert print signatur use fingerprint fingerprint check anticip valu determin server s cert approv x signatur print bio err cur cert sig alg cur cert signatur openssl cert error x v err unabl crl approv bio free bio err approv evp pkey generat privat key rsa rsa rsa new bignum bn bn new evp pkey pkey creat rsa keypair assign pkey bn set word bn x rsa generat key ex rsa bn null pkey evp pkey new pkey null printf `` \\n error alloc pkey structur new key pair\\n null evp pkey set rsa pkey rsa printf `` \\n error assign rsa key pair pkey structure\\n null rsa free rsa bn free bn pkey defin good token `` wwigrvbid ighhdm ugd gga gsb gvi iekga gvhci bb u defin differ token `` vvsb cwg ssd zsbnb qgd ggcn vu ihrv igtl zxag zn jvb sboa wrpbic nck fu zcbjjg ymbm qgd gga vlc cbvbi bya wrpbic nck fu zcbjjzl igdvd cbvbm ugb wy zsbza wx zxig zgsb gfi dqp cd xqg ssdt igvd cbnbu ysbs zxqg jvt ignhd gno igl lcbubw ktm igdvbmh igxld zwg yfyggd ghl igp zgp zh ihjp zgvi defin null token null defin token `` ssbj ywnd cbh zjl zsbbi bka xnh zjl zsanck zp zha wn igxpa ug ssdt igzp zha wn igzvci bsa wzl iakvghl sdi zsbvbmx ihdvcm rz igjd cba gvignd cbsa wtl igeg ymxh zgug dqp tdlu zlu zy ba wrl ihdpd ggg ywxs igm igigp zh iakdqp ba cbzwfo lcbjigd zxnz igl jmg ywxs igm ihro yxqg ym zm vl lcba gfjmg zigigpbm qga wg ysba glyb canckknb sbzd glsb cbjd xnza wn igfu zcbia xrja glu zy bhbm qgd ghlcm ug ywlu jqgbmib righlcm ug dqo ncko ihll ywgs ihlvd sbkbnd cbo yxzl ihrv ighvb gxlci bjighl yxige wiakssdt ihnywka wn ihjp zh ighlcm ug ym vza wrl ihlvd sancko lcaosbza gfk zxmgb yg yjhenk ieknb saosbza gfk zxmgb yg yjhenkg dqp dcm fe swg yjhenk igni yxp lcbjcm fe sancg kugci bhbma gvi igrya wr lcbt ywtl igl igeg zgymxl igzvci bt zsanckh wjl iekg yfu igrya wr ihroa xmg yxdhe sanckl jmgbm vzxig zn vu ihdo zwgd ghle sbwd wxs igd cba gug zvu iakqm vhd cbb ug ymxh ysg ywk igjsd wus igjv sancllvd sbnb rysbw yxks ihlvd sbnb rysbw yxkg dqo ncko lcba gvi zsba guga gvsb cbhb sbjpi bjighvc gug yxqgb gvhc qg ssbo ywqg zn vu iakssdt ihnd wib glu zy ba hjvd wdo ieldi bpcmxl ywz igo lcbbi ba gugcmlza wn ihnbi ancg ktgge wvha cwge wigrvbid ighhdm ugd gga gsb gvi iekga gvhci bb ug dqp jjgc rhbm rpbmcgcmlna hqga gvi zsbi zxnp zguge wiaktg idk ihno ywrlci bv zi bjcm fe swg ssdt idk ihno ywrlci bv zi bjcm fe sanck ny yxp lcbjcm fe swg yjhenk igni yxp iakdqp mb jk ighhdm ugb wvi ykgbgb wug dqp ob zlbn rh igzxzh ihrvbmz igrl igxv yg dqo nckkgbm vl zcbzbl ihbl ywnl lcbqd xnihnvb wugcm vsa wvm iakrn jvb sba glz ihzva wnl lcbra wxsa wn igl iakwwihnyxjl igfigl lcbhbm qge wigd yxjl igfigl iakqwx ihroa xmgc gfpbi bpd cdz igfsb cba gugc ft zswga xqnci bhb gwga wz ywl iakkhlvd sbz zwup iakdqp jci ba glz ihjl ywxse sbo yxbw zwpbmcgb ig zglk iekgb wfr zsbpd cbhb gwgd xa iakssdt igjvd wk igzvci bda gfd gfobja gvl igu igegd hvybmlw ihryd wnr iakdqp pa cbzwfo lcbb ug zgu jqga gfzsbbi bobx zxig ssbo zwfi ihlvd sanckknb sbzd gfu zglu zy bya wdod cbo zxjl igjlclk zsbb ug dqp pa cwg otkgchh zgvz igm igni yxp lcbjjg otkgchh zgvz igm igni yxp iakqjhenk igni yxp lcbjcm fe swg yjhenkg dqo nck fo ihlvd sdi zsbjcm fe sbb uncm ug yjhenkg dqp ibxk igigzl zxqs igzl zxqgd ggd ghl igzpcm ug dqp zb uga gs zcbte sbm zwvihrv ihro zsbma xjl iakssbu zxzlci bz ywlk iekgd fz igrvdgdla cbb u test token `` wwigrvbid ighhdm ugd gga gsb gvi iekga gvhci bb u auth cred callback call auth cred forc error auth credenti token cb applic layer callback function token base authent credenti call s regist est client use est client set auth cred cb test function requir set global valu order make callback oper way test want auth cred forc error tell function forc respons code error test token pointer hard code string token string callback provid token credenti heap base buffer ownership buffer implicit transfer et client librari est http auth cred rc auth credenti token cb est http auth hdr auth credenti token ptr null token len cu assert auth credenti mode auth token report callback call auth cred callback call test request forc error respons code callback auth cred forc error est http auth cred avail auth credenti mode auth token test token set need alloc space heap copi valu test token null token len strlen test token use strlen string larg need test est client token len printf `` \\n error determin length token string use credentials\\n est http auth cred avail token ptr malloc token len token ptr null printf `` \\n error alloc token string use credentials\\n est http auth cred avail strncpi token ptr test token strlen test token token ptr  token len  \\ far token ptr point string contain token return assign success auth credenti auth token token ptr est http auth cred success est http auth cred avail auth credenti basic cb token base instead return basic credenti userid password est http auth cred rc auth credenti basic cb est http auth hdr auth credenti cu assert auth credenti mode auth basic report callback call auth cred callback call test request forc error respons code callback auth cred forc error est http auth cred avail auth credenti mode auth basic auth credenti user malloc `` estus strncpi auth credenti user `` estus `` estus auth credenti pwd malloc `` estpwd strncpi auth credenti pwd `` estpwd `` estpwd est http auth cred success est http auth cred avail auth credenti digest cb basic base instead verfi auth mode pass digest est http auth cred rc auth credenti digest cb est http auth hdr auth credenti cu assert auth credenti mode auth digest report callback call auth cred callback call test request forc error respons code callback auth cred forc error est http auth cred avail auth credenti mode auth digest auth credenti user malloc `` estus strncpi auth credenti user `` estus `` estus auth credenti pwd malloc `` estpwd strncpi auth credenti pwd `` estpwd `` estpwd est http auth cred success est http auth cred avail test est client set auth cred cb api exercis paramet test est error e rc est ctx ectx null log func nm creat client context ectx est client init cacert cacert len est cert format pem client manual cert verifi cu assert ectx null forgot specifi paramet context caught e rc est client set auth cred cb null null cu assert e rc est err ctx valid e rc est client set auth cred cb ectx auth credenti token cb cu assert e rc est err attempt reset callback function e rc est client set auth cred cb ectx null cu assert e rc est err est destroy ectx simpl enrol use test case perform simpl enrol simpl enrol cn server est error expect enrol rv auth credenti cb callback est ctx ectx evp pkey key est error rv pkcs len new cert null est error e rc creat client context ectx est client init cacert cacert len est cert format pem client manual cert verifi cu assert ectx null e rc est client set auth cred cb ectx callback cu assert e rc est err set est server address port est client set server ectx server tcp port null generat privat key key generat privat key cu assert key null use simplifi api enrol csr rv est client enrol ectx cn pkcs len key cu assert rv expect enrol rv cleanup evp pkey free key new cert free new cert est destroy ectx perform simpl enrol order valid cert perform reenrol simpl enrol need success s current use basic mode est server doe token base support pdb note server token support implement function option updat token mode enrol s absolut necessari purpos test reenrol initi enrol need just cert simpl reenrol cn server est error expect enrol rv auth credenti cb callback est ctx ectx evp pkey key est error rv pkcs len new cert null pkcs p null bio b x cert null stack x cert null est error e rc creat client context ectx est client init cacert cacert len est cert format pem client manual cert verifi cu assert ectx null make sure server current basic auth mode st enabl http basic auth e rc est client set auth cred cb ectx auth credenti basic cb cu assert e rc est err set est server address port est client set server ectx server tcp port null generat privat key key generat privat key cu assert key null use simplifi api enrol csr rv est client enrol ectx cn pkcs len key cu assert rv est err retriev cert given est server rv est err new cert malloc pkcs len cu assert new cert null rv est client copi enrol cert ectx new cert cu assert rv est err est destroy ectx ectx null creat client context ectx est client init cacert cacert len est cert format pem client manual cert verifi cu assert ectx null cert server token mode st enabl http token auth e rc est client set auth cred cb ectx callback cu assert e rc est err set est server address port est client set server ectx server tcp port null attempt reenrol token mode convert cert x warn pure hackeri pdb convers code come test case b bio new bio f base bio new mem buf new cert pkcs len bio push b p di pkcs bio null cu assert p null bio free obj objnid p type nid pkcs cert p d sign cert nid pkcs envelop cert p d envelop cert cu assert cert null cert new cert cert pkcs blob nt iter list cert sk x valu cert cu assert cert null pdb note moment expect fail server doe understand request token authent complet assert begin fail need chang pass respons rv est client reenrol ectx cert pkcs len key cu assert rv expect enrol rv cleanup evp pkey free key new cert free new cert est destroy ectx test applic layer did callback caus http aithent header token credenti test applic layer doe callback est client get challeng find callback regist goe credenti store context note way preload credenti flow work enrol sent token credenti server fail doe certif test log func nm server token mode note equival call numer place s probabl safe test set s danger chang fli oper set note code set enabl function st enabl http token auth tell server token check st set token good token auth cred callback call auth cred forc error set est client perform simpl enrol pass callback function catch handl request token auth enrol better fail miss credenti simpl enrol `` tc server ip est err auth fail null callback regist invok cu assert auth cred callback call test applic layer regist callback doe set credenti invok result previous test test applic layer regist callback est client get challeng call callback get credenti structur end send http auth header credenti note way preload credenti flow work enrol sent token credenti server fail doe certif test log func nm server token mode note equival call numer place s probabl safe test set s danger chang fli oper set note code set enabl function st enabl http token auth tell server token check st set token good token auth cred callback call auth cred forc error test token null token set est client perform simpl enrol token base callback set pass token enrol better fail miss credenti simpl enrol `` tc server ip est err auth fail auth credenti token cb callback call cu assert auth cred callback call test good token sent server accept cert generat return test applic layer regist callback respond valid token enrol sent token credenti server set match token send cert test log func nm server token mode note equival call numer place s probabl safe test set s danger chang fli oper set note code set enabl function st enabl http token auth tell server token check st set token good token auth cred callback call auth cred forc error test token good token set est client perform simpl enrol enrol succeed simpl enrol `` tc server ip est err auth credenti token cb callback call cu assert auth cred callback call test est client receiv token auth challeng test applic layer regist callback respond fail code test log func nm server token mode note equival call numer place s probabl safe test set s danger chang fli oper set note code set enabl function st enabl http token auth auth cred callback call forc callback fail code auth cred forc error test token good token set est client perform simpl enrol enrol better fail credenti suppli applic layer eventu failur server miss credenti simpl enrol `` tc server ip est err auth fail auth credenti token cb callback call cu assert auth cred callback call test saniti test basic auth mode test server basic mode client applic regist basic base callback client send estus estpwd credenti cert test log func nm server basic mode note equival call numer place s probabl safe test set s danger chang fli oper set note code set enabl function st enabl http basic auth auth cred callback call auth cred forc error set est client perform simpl enrol pass callback function catch handl request token auth enrol pass basic mode fulli work make sure callback call ensur credenti came callback simpl enrol `` tc server ip est err auth credenti basic cb callback call cu assert auth cred callback call test make sure enrol work credenti callback flow obtain credenti test server token mode client applic regist token base callback client send valid token credenti cert test log func nm auth cred callback call auth cred forc error test token good token st enabl http token auth tell server token check st set token good token set est client perform simpl enrol enrol succeed simpl reenrol `` tc server ip est err auth credenti token cb callback call cu assert auth cred callback call test token credenti test server token mode told match good token client applic regist token base callback told token client send corrupt token doe match good token test log func nm server token mode note equival call numer place s probabl safe test set s danger chang fli oper set note code set enabl function st enabl http token auth tell server token check st set token good token auth cred callback call forc callback fail code auth cred forc error test token token set est client perform simpl enrol pass callback function catch handl request token auth simpl enrol `` tc server ip est err auth fail auth credenti token cb callback call cu assert auth cred callback call test test digest mode demand credenti flow test server digest mode note mean server expect `` estus estpwd `` estrealm valu hardcod data st server st server start estrealm return realm client client return request client applic regist digest base callback client send valid digest cert test log func nm server digest mode note equival call numer place s probabl safe test set s danger chang fli oper set note code set enabl function st enabl http digest auth auth cred callback call auth cred forc error set est client perform simpl enrol pass callback function catch handl request token auth enrol pass digest mode fulli work make sure callback call ensur credenti came callback simpl enrol `` tc server ip est err auth credenti digest cb callback call cu assert auth cred callback call test valid token provid appliact callback s wrong token test applic layer regist callback respond valid token server set token mode differ token enrol sent token credenti server set match token send cert test log func nm server token mode note equival call numer place s probabl safe test set s danger chang fli oper set note code set enabl function st enabl http token auth tell server token check st set token differ token auth cred callback call auth cred forc error test token good token set est client perform simpl enrol enrol fail token match simpl enrol `` tc server ip est err auth fail auth credenti token cb callback call cu assert auth cred callback call main function set run test return cue success success run cunit error code failur add suit ifdef cunit cu p suit p suit null add suit registri p suit cu add suit `` tok auth client init suit destroy suit null p suit cu cleanup registri cu error add test suit null cu add test p suit `` pars respons test null cu add test p suit `` simpl enrol cb test null cu add test p suit `` simpl enrol reg cb token test null cu add test p suit `` simpl enrol reg cb good token test null cu add test p suit `` simpl enrol reg cb bad rc test null cu add test p suit `` simpl enrol reg cb basic mode test null cu add test p suit `` simpl enrol reg cb good token test null cu add test p suit `` simpl enrol reg cb token test null cu add test p suit `` simpl enrol reg cb digest mode test null cu add test p suit `` simpl enrol reg cb mismatch valid token test cu cleanup registri cu error cue success endif