 c unit test uri path segment support server april copyright c cisco system right reserv includ stdio h ifndef win includ unistd h endif includ est h includ curl curl h includ `` curl util h ifdef cunit includ `` cunit basic h includ `` cunit autom h endif includ `` util test util h includ `` st server h includ `` st proxi h includ `` src est est locl h tst srvr path seg enrol   tst srvr path seg cacert   tst srvr path seg csrattr   tst srvr path seg auth   tst proxi path seg auth   path segment support max command line length generat command defin est ut max cmd len defin server port defin server ip `` defin uidpwd good `` estus estpwd defin uid `` estus defin pwd `` estpwd ifndef win defin cacert `` ca est ca cacert crt defin trust cert `` ca trustedcert crt defin server certkey `` ca est ca privat estservercertandkey pem defin proxi cert `` ca est ca privat estservercertandkey pem defin proxi key `` ca est ca privat estservercertandkey pem defin cacert `` ca est ca cacert crt ca certif use verifi est server grab server s directori defin client ut cacert `` exampl server est ca cacert crt defin client ut cacert `` ca est ca cacert crt defin client ut pubkey `` est client ut keypair defin cacert `` ca\\\\est ca\\\\cacert crt defin trust cert `` ca trustedcert crt defin server certkey `` ca\\\\est ca privat estservercertandkey pem defin proxi cert `` ca\\\\est ca\\\\priv estservercertandkey pem defin proxi key `` ca\\\\est ca\\\\private\\\\estservercertandkey pem defin cacert `` ca\\\\est ca\\\\cacert crt ca certif use verifi est server grab server s directori defin client ut cacert `` exampl server est ca cacert crt defin client ut cacert `` ca\\\\est ca\\\\cacert crt defin client ut pubkey `` est client ut keypair endif defin enrol url ba `` https known est cacert somestr simpleenrol defin enrol url ba backslash `` https known est cacert \\\\somestr simpleenrol defin enrol url ba noseg `` https known est simpleenrol defin pkcs ct `` content type applic pkcs defin pkcs rsa `` miicv tccaa ucaqaw delmak gauebh mcvvmx cz ajbg nvbag mak dmqww cg ydvqqh\\n dansvfax ej aqbg nvbao mcvjtqwnlcn rjbz emmao gauecww dcn nh mraw dg ydvqqd\\n dadyc zgl mrow gayjko zihvc naqk bfgtyc fazgl lm nvb tccasiw dqyjko zi\\nhvc naqebbqadgg epadccaqo cgg ebanp ctbr ktbganq qhxhi nlopvxc jy\\n xa qz rjbo bexzqx bt ueygnh hola isasnz zkwpv mhjwm pynt oci y\\n fog ldb anm aoksfc mlbib ccsh holhaa fr wsk rtasew muoz fuv bkw ah ij\\n kpywsd yoxu wfig ehlm gplbzq fr bidrqk nlddgi xo dd nu lmjgdakv bww\\n baw ai vpsyevf wdr hwgg xn vt mw bp cgrll systum tgyb mcx jywe\\n lu mn djj zw ds zw ixa baxzax ei r xoxhn zmtefx y gp fk kv caw eaaa aamag\\n csq gsib dqebbquaaibaqbr iw nj elj fkrh q qe svee b aqa ruf zusku k\\nlsih ucfbk qvgljnhsc qucz ibn jzeq epq sdnom fwcv mc ah qf xfgyx jgpw f\\nutn uifj di zhr wgf j nnbt hrkecw zex z hcjt eci ek dsr ao bx yrcqt c\\n wq plvm llyjc zc skhvdnyakf sygmocsw gel vliz ocay asgbi ebw\\n rk ca yzwvhjqjp cuz jecl vdkpijb zgdjamdmdj zy pye auxar wss d\\nci um h ewtmr uzb lljkj jp bxrnontgm wzm qfhx defin tcp proxi port defin path seg valid `` somestr defin path seg seg `` somestr somestr defin path seg oper `` cacert defin path seg contain oper `` cacertssomestr defin path seg max `` defin path seg `` defin proxi enrol url valid `` https known est path seg valid simpleenrol defin proxi enrol url `` https known est path seg simpleenrol defin proxi enrol url max `` https known est path seg max simpleenrol defin proxi enrol url `` https known est path seg seg simpleenrol defin proxi enrol url oper `` https known est path seg oper simpleenrol defin proxi enrol url contain oper `` https known est path seg contain oper simpleenrol defin proxi cacert url valid `` https known est path seg valid cacert defin pkcs req `` miichj ccawcaqaw qtel mcmgaueax mccm vx igjignsa wvud cbpbi bk zwv ihn\\n zxag mj eymbygauebrmpuel eoldp zgdld cbttjoy miibij anbgkqhki gw baqef\\n aaocaqamiibcg kcaqea juwp xxdw ckv wpdwoy andqz fmxro leih vd nwf rsg\\ne ngcefc llnx hzom oyq memgp cy hz obhh npu kg muz rqzwmm jhxw rqob a\\ni oqek ha ph itrk vn syzloow sqon mzj wb tiq zdi rdl gj hg eibmqfv nt\\n csudf heg dn jahddd udjdxoawisz llz bo plgdo kkwq eepqhn zxei\\nc wfq xqkyr wpovl qmo wtqtfasqeu efgbx rpa eoflqj ejhoew lf t\\nq xngywnvx krp kgu sbic wvksw ps epjj zavdx qidaqabo aaw dqyjko zihvc n\\n aqefbqadgg ebaazxvoor rx av qpi mndp rzhhi doyd apbbzn vg rll hmldpgnu\\n xyzcyw qtxw ngyvt kja zci wd wr zhvn fuaw ur rzno lw vrzywwnc jrd sg\\nc uu bn xbgigf ql ddim qo psfgygc tcchba uvioi ciwf uffnybo bl pp\\nl oz beynqwygf uy ypcr ny xgkz qh xae rfe woejmc ea mjqyx wacx\\nkw gle uinzuen msc ngnt fa ailmd lq ekxcfjx ardh yz dyi ex fv\\nd pdou pktj ritv gi apm ocd xi yawqiuw\\n client manual cert verifi x cur cert openssl cert error clean start server manual enrol nid rv rv st start nocacert server port server certkey server certkey `` test realm cacert trust cert `` ca est exampl ca cnf manual enrol nid sleep start est proxi act ra rv st proxi start nocacert tcp proxi port proxi cert proxi key `` estrealm cacert trust cert `` estus `` estpwd `` server port disabl po p ecdh nid info sleep rv path seg support est ctx ectx cacert null cacert len est error rc est err sleep read ca certif cacert len read binari file client ut cacert cacert ectx est client init cacert cacert len est cert format pem client manual cert verifi rc est client set server ectx server ip server port `` test segment rc est err routin call cunit initi test suit generat keypair use est client ut suit init suit rv est init logger est log lvl info null cmd  est ut max cmd len  printf `` start est server path segment unit test \\n path segment support printf `` uri path segment support build est rebuild use uripars dir \\n gen keypair use est client test snprintf cmd est ut max cmd len `` openssl ecparam primev genkey s client ut pubkey printf `` s\\n cmd rv cmd start server test need talk server clean start instanc est server rv start server sleep rv routin call cunit uniniti test suit use dealloc data close resourc use test case destroy suit st stop st proxi stop callback function pass est client init client manual cert verifi x cur cert openssl cert error bio bio err bio err bio new fp stderr bio noclos approv print specif cert printf `` s open ssl est server cert verif fail follow error openssl cert error d s \\n _ function__ openssl cert error x verifi cert error string openssl cert error printf `` fail cert \\n x print fp stdout cur cert print signatur use fingerprint fingerprint check anticip valu determin server s cert approv x signatur print bio err cur cert sig alg cur cert signatur openssl cert error x v err unabl crl approv bio free bio err approv saniti check server path segment process simpl enrol direct server path segment outcom pass test rv log func nm rv curl http post enrol url ba noseg pkcs ct pkcs rsa uidpwd good cacert curlauth basic null null null pass valid user id password expect server respond cu assert rv evp pkey generat privat key rsa rsa rsa new bignum bn bn new evp pkey pkey creat rsa keypair assign pkey bn set word bn x rsa generat key ex rsa bn null pkey evp pkey new pkey null printf `` \\n error alloc pkey structur new key pair\\n null evp pkey set rsa pkey rsa printf `` \\n error assign rsa key pair pkey structure\\n null rsa free rsa bn free bn pkey function perform basic simpl enrol use uid pwd identifi client server use varieti test case modul simpl enrol cn server est error expect enrol rv path segment est ctx ectx evp pkey key rv pkcs len new cert null attr data null attr len cacert null cacert len read ca certif cacert len read binari file client ut cacert cacert cu assert cacert len creat client context ectx est client init cacert cacert len est cert format pem client manual cert verifi cu assert ectx null set authent mode use user id password rv est client set auth ectx uid pwd null null cu assert rv est err set est server address port est client set server ectx server server port path segment generat privat key key generat privat key cu assert key null latest csr attribut rv est client csrattr ectx attr data attr len cu assert rv expect enrol rv use simplifi api enrol csr rv est client enrol ectx cn pkcs len key cu assert rv expect enrol rv retriev cert given est server rv est err new cert malloc pkcs len cu assert new cert null rv est client copi enrol cert ectx new cert cu assert rv est err cleanup evp pkey free key new cert free new cert est destroy ectx taken test simpl enrol includ path segment uri path segment test verifi client includ configur path segment proper send verifi server correct pars valid path segment pass simpl enrol test log func nm path segment `` path segment memset tst srvr path seg auth est max path segment len memset tst srvr path seg enrol est max path segment len simpl enrol `` tc server ip est err path segment cu assert strcmp path segment tst srvr path seg auth cu assert strcmp path segment tst srvr path seg enrol taken test simpl enrol includ path segment uri path segment test verifi client includ configur path segment verifi server correct pars valid path segment pass simpl enrol auth callback test est ctx ectx evp pkey key rv pkcs len new cert null pkcs p null bio b x cert null stack x cert null attr data null attr len path segment `` path seg test cacert null cacert len log func nm read ca certif cacert len read binari file client ut cacert cacert cu assert cacert len creat client context ectx est client init cacert cacert len est cert format pem client manual cert verifi cu assert ectx null set authent mode use user id password rv est client set auth ectx uid pwd null null cu assert rv est err set est server address port est client set server ectx server ip server port path segment generat privat key key generat privat key cu assert key null latest csr attribut rv est client csrattr ectx attr data attr len cu assert rv est err use simplifi api enrol csr rv est client enrol ectx `` tc pkcs len key cu assert rv est err rv est err retriev cert given est server rv est err new cert malloc pkcs len cu assert new cert null rv est client copi enrol cert ectx new cert cu assert rv est err convert cert x warn pure hackeri b bio new bio f base bio new mem buf new cert pkcs len bio push b p di pkcs bio null cu assert p null bio free obj objnid p type nid pkcs cert p d sign cert nid pkcs envelop cert p d envelop cert cu assert cert null cert new cert cert pkcs blob nt iter list cert sk x valu cert cu assert cert null wow s lot work final x nt just love open ssl x represent cert let s tri enrol cert ca memset tst srvr path seg auth est max path segment len memset tst srvr path seg enrol est max path segment len rv est client reenrol ectx cert pkcs len key cu assert rv est err cu assert strcmp path segment tst srvr path seg auth cu assert strcmp path segment tst srvr path seg enrol cleanup cert x free cert evp pkey free key new cert free new cert est destroy ectx taken test cacert server includ path segment uri path segment test verifi client includ configur path segment verifi server correct pars valid path segment pass ca cert callback test est ctx ectx pkey null cacert null cacert len est error rc est err retriev cacert null retriev cacert len evp pkey priv key path segment `` path seg test sleep read ca certif cacert len read binari file client ut cacert cacert cu assert cacert len read privat key file priv key read privat key client ut pubkey priv key null printf `` \\n error read privat key file s\\n client ut pubkey ectx est client init cacert cacert len est cert format pem client manual cert verifi cu assert ectx null rc est client set auth ectx `` `` null priv key cu assert rc est err est client set server ectx server ip server port path segment clear global prove path segment applic layer s cal function memset tst srvr path seg cacert est max path segment len issu ca cert request rc est client cacert ectx retriev cacert len success obtain valid buffer contain ca cert cu assert rc est err cu assert retriev cacert len verifi path segment way callback function applic layer cu assert strcmp path segment tst srvr path seg cacert retriev cacert malloc retriev cacert len rc est client copi cacert ectx retriev cacert output retriev ca cert compar retriev cacert printf `` \\n retriev ca cert buffer \\n s\\n retriev cacert printf `` retriev ca cert buffer length d\\n retriev cacert len free retriev cacert ectx est destroy ectx cacert free cacert pkey free pkey taken test csrattribut includ path segment uri path segment test verifi client includ configur path segment verifi server correct pars valid path segment pass csr attribut callback test est ctx ectx evp pkey key rv new cert null x cert null attr data null attr len path segment `` path seg test cacert null cacert len log func nm read ca certif cacert len read binari file client ut cacert cacert cu assert cacert len creat client context ectx est client init cacert cacert len est cert format pem client manual cert verifi cu assert ectx null set authent mode use user id password rv est client set auth ectx uid pwd null null cu assert rv est err set est server address port est client set server ectx server ip server port path segment generat privat key key generat privat key cu assert key null clear global prove path segment applic layer s cal function memset tst srvr path seg csrattr est max path segment len issu ca cert request rv est client csrattr ectx attr data attr len success obtain valid buffer contain ca cert cu assert rv est err verifi path segment way callback function applic layer cu assert strcmp path segment tst srvr path seg csrattr cleanup cert x free cert evp pkey free key new cert free new cert est destroy ectx test flow path segment proxi mode valid path segment simpl enrol test rv log func nm sleep memset tst srvr path seg enrol est max path segment len rv curl http post proxi enrol url valid pkcs ct pkcs req uidpwd good cacert curlauth basic null null null cu assert strcmp path seg valid tst srvr path seg enrol pass valid user id password expect server respond cu assert rv test flow path segment proxi mode path segment set maximum size test rv log func nm sleep rv curl http post proxi enrol url max pkcs ct pkcs req uidpwd good cacert curlauth basic null null null pass path segment caught proxi return cu assert rv test flow path segment proxi mode path segment larg test rv log func nm sleep rv curl http post proxi enrol url pkcs ct pkcs req uidpwd good cacert curlauth basic null null null pass path segment caught proxi return cu assert rv test segment oper path test rv log func nm sleep rv curl http post proxi enrol url oper pkcs ct pkcs req uidpwd good cacert curlauth basic null null null pass path segment equal oper cu assert rv test segment oper path test rv log func nm sleep rv curl http post proxi enrol url pkcs ct pkcs req uidpwd good cacert curlauth basic null null null pass path segment equal oper cu assert rv test segment contain valid oper string valid path segment test pass test rv log func nm sleep memset tst srvr path seg enrol est max path segment len memset tst proxi path seg auth est max path segment len rv curl http post proxi enrol url contain oper pkcs ct pkcs req uidpwd good cacert curlauth basic null null null cu assert strcmp path seg contain oper tst srvr path seg enrol cu assert strcmp path seg contain oper tst proxi path seg auth pass path segment equal oper cu assert rv taken test cacert server includ path segment uri path segment test verifi client includ configur path segment verifi server correct pars valid path segment pass ca cert callback test est ctx ectx pkey null cacert null cacert len est error rc est err retriev cacert null retriev cacert len evp pkey priv key path segment `` path seg test sleep read ca certif cacert len read binari file client ut cacert cacert cu assert cacert len read privat key file priv key read privat key client ut pubkey priv key null printf `` \\n error read privat key file s\\n client ut pubkey ectx est client init cacert cacert len est cert format pem client manual cert verifi cu assert ectx null rc est client set auth ectx `` `` null priv key cu assert rc est err est client set server ectx server ip tcp proxi port path segment clear global prove path segment applic layer s cal function memset tst srvr path seg cacert est max path segment len issu ca cert request rc est client cacert ectx retriev cacert len success obtain valid buffer contain ca cert cu assert rc est err cu assert retriev cacert len verifi path segment way callback function applic layer cu assert strcmp path segment tst srvr path seg cacert retriev cacert malloc retriev cacert len rc est client copi cacert ectx retriev cacert output retriev ca cert compar retriev cacert printf `` \\n retriev ca cert buffer \\n s\\n retriev cacert printf `` retriev ca cert buffer length d\\n retriev cacert len free retriev cacert ectx est destroy ectx cacert free cacert pkey free pkey main function set run test return cue success success run cunit error code failur add suit cu error code cu error ifdef cunit cu p suit p suit null add suit registri p suit cu add suit `` server path seg init suit destroy suit null p suit cu cleanup registri cu error check path segment support compil path seg support printf `` uri path segment support build est rebuild use uripars dir \\n path segment support path segment support path segment support add test suit note order import test fread fprintf null cu add test p suit `` est client simpl enrol path segment test null cu add test p suit `` est server simpl enrol path segment test null cu add test p suit `` est server simpl enrol path segment test null cu add test p suit `` est server cacert path segment test null cu add test p suit `` est server csrattr path segment test null cu add test p suit `` est server est proxi path segment test null cu add test p suit `` est server est proxi path segment max test null cu add test p suit `` est server est proxi path segment test null cu add test p suit `` est server est proxi path segment oper test null cu add test p suit `` est server est proxi path segment contain segment test null cu add test p suit `` est server est proxi path segment contain oper test null cu add test p suit `` est server est proxi path segment valid cacert test cu error cu error printf `` d\\n cu error cu cleanup registri printf `` s\\n cu error msg cu error cue success endif