<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="test_code/us1060.c" pos:tabs="8"><comment type="block" pos:start="1:1" pos:end="9:3">/*------------------------------------------------------------------
 * us1060.c - Unit Tests for User Story 1060 - TLS SRP support (Server/Proxy)
 *
 * May, 2014
 *
 * Copyright (c) 2014-2016 by cisco Systems, Inc.
 * All rights reserved.
 *------------------------------------------------------------------
 */</comment>
<cpp:include pos:start="10:1" pos:end="10:18">#<cpp:directive pos:start="10:2" pos:end="10:8">include</cpp:directive> <cpp:file pos:start="10:10" pos:end="10:18">&lt;stdio.h&gt;</cpp:file></cpp:include>
<cpp:include pos:start="11:1" pos:end="11:19">#<cpp:directive pos:start="11:2" pos:end="11:8">include</cpp:directive> <cpp:file pos:start="11:10" pos:end="11:19">&lt;string.h&gt;</cpp:file></cpp:include>
<cpp:ifndef pos:start="12:1" pos:end="12:13">#<cpp:directive pos:start="12:2" pos:end="12:7">ifndef</cpp:directive> <name pos:start="12:9" pos:end="12:13">WIN32</name></cpp:ifndef>
<cpp:include pos:start="13:1" pos:end="13:19">#<cpp:directive pos:start="13:2" pos:end="13:8">include</cpp:directive> <cpp:file pos:start="13:10" pos:end="13:19">&lt;unistd.h&gt;</cpp:file></cpp:include>
<cpp:include pos:start="14:1" pos:end="14:20">#<cpp:directive pos:start="14:2" pos:end="14:8">include</cpp:directive> <cpp:file pos:start="14:10" pos:end="14:20">&lt;pthread.h&gt;</cpp:file></cpp:include>
<cpp:endif pos:start="15:1" pos:end="15:6">#<cpp:directive pos:start="15:2" pos:end="15:6">endif</cpp:directive></cpp:endif>
<cpp:include pos:start="16:1" pos:end="16:16">#<cpp:directive pos:start="16:2" pos:end="16:8">include</cpp:directive> <cpp:file pos:start="16:10" pos:end="16:16">&lt;est.h&gt;</cpp:file></cpp:include>
<cpp:include pos:start="17:1" pos:end="17:22">#<cpp:directive pos:start="17:2" pos:end="17:8">include</cpp:directive> <cpp:file pos:start="17:10" pos:end="17:22">&lt;curl/curl.h&gt;</cpp:file></cpp:include>
<cpp:include pos:start="18:1" pos:end="18:23">#<cpp:directive pos:start="18:2" pos:end="18:8">include</cpp:directive> <cpp:file pos:start="18:10" pos:end="18:23">"test_utils.h"</cpp:file></cpp:include>
<cpp:include pos:start="19:1" pos:end="19:23">#<cpp:directive pos:start="19:2" pos:end="19:8">include</cpp:directive> <cpp:file pos:start="19:10" pos:end="19:23">"curl_utils.h"</cpp:file></cpp:include>
<cpp:include pos:start="20:1" pos:end="20:22">#<cpp:directive pos:start="20:2" pos:end="20:8">include</cpp:directive> <cpp:file pos:start="20:10" pos:end="20:22">"st_server.h"</cpp:file></cpp:include>
<cpp:include pos:start="21:1" pos:end="21:21">#<cpp:directive pos:start="21:2" pos:end="21:8">include</cpp:directive> <cpp:file pos:start="21:10" pos:end="21:21">"st_proxy.h"</cpp:file></cpp:include>
<cpp:include pos:start="22:1" pos:end="22:24">#<cpp:directive pos:start="22:2" pos:end="22:8">include</cpp:directive> <cpp:file pos:start="22:10" pos:end="22:24">&lt;openssl/ssl.h&gt;</cpp:file></cpp:include>
<cpp:include pos:start="23:1" pos:end="23:27">#<cpp:directive pos:start="23:2" pos:end="23:8">include</cpp:directive> <cpp:file pos:start="23:10" pos:end="23:27">&lt;openssl/x509v3.h&gt;</cpp:file></cpp:include>

<cpp:ifdef pos:start="25:1" pos:end="25:17">#<cpp:directive pos:start="25:2" pos:end="25:6">ifdef</cpp:directive> <name pos:start="25:8" pos:end="25:17">HAVE_CUNIT</name></cpp:ifdef>
<cpp:include pos:start="26:1" pos:end="26:24">#<cpp:directive pos:start="26:2" pos:end="26:8">include</cpp:directive> <cpp:file pos:start="26:10" pos:end="26:24">"CUnit/Basic.h"</cpp:file></cpp:include>
<cpp:include pos:start="27:1" pos:end="27:28">#<cpp:directive pos:start="27:2" pos:end="27:8">include</cpp:directive> <cpp:file pos:start="27:10" pos:end="27:28">"CUnit/Automated.h"</cpp:file></cpp:include>
<cpp:endif pos:start="28:1" pos:end="28:6">#<cpp:directive pos:start="28:2" pos:end="28:6">endif</cpp:directive></cpp:endif>

<cpp:define pos:start="30:1" pos:end="30:37">#<cpp:directive pos:start="30:2" pos:end="30:7">define</cpp:directive> <cpp:macro pos:start="30:9" pos:end="30:26"><name pos:start="30:9" pos:end="30:26">US1060_SERVER_PORT</name></cpp:macro>      <cpp:value pos:start="30:33" pos:end="30:37">31060</cpp:value></cpp:define>
<cpp:define pos:start="31:1" pos:end="31:43">#<cpp:directive pos:start="31:2" pos:end="31:7">define</cpp:directive> <cpp:macro pos:start="31:9" pos:end="31:24"><name pos:start="31:9" pos:end="31:24">US1060_SERVER_IP</name></cpp:macro>        <cpp:value pos:start="31:33" pos:end="31:43">"127.0.0.1"</cpp:value></cpp:define>
<cpp:define pos:start="32:1" pos:end="32:41">#<cpp:directive pos:start="32:2" pos:end="32:7">define</cpp:directive> <cpp:macro pos:start="32:9" pos:end="32:18"><name pos:start="32:9" pos:end="32:18">US1060_UID</name></cpp:macro>              <cpp:value pos:start="32:33" pos:end="32:41">"estuser"</cpp:value></cpp:define>
<cpp:define pos:start="33:1" pos:end="33:40">#<cpp:directive pos:start="33:2" pos:end="33:7">define</cpp:directive> <cpp:macro pos:start="33:9" pos:end="33:18"><name pos:start="33:9" pos:end="33:18">US1060_PWD</name></cpp:macro>              <cpp:value pos:start="33:33" pos:end="33:40">"estpwd"</cpp:value></cpp:define>
<cpp:ifndef pos:start="34:1" pos:end="34:13">#<cpp:directive pos:start="34:2" pos:end="34:7">ifndef</cpp:directive> <name pos:start="34:9" pos:end="34:13">WIN32</name></cpp:ifndef>
<cpp:define pos:start="35:1" pos:end="35:53">#<cpp:directive pos:start="35:2" pos:end="35:7">define</cpp:directive> <cpp:macro pos:start="35:9" pos:end="35:22"><name pos:start="35:9" pos:end="35:22">US1060_CACERTS</name></cpp:macro>          <cpp:value pos:start="35:33" pos:end="35:53">"CA/estCA/cacert.crt"</cpp:value></cpp:define>
<cpp:define pos:start="36:1" pos:end="36:53">#<cpp:directive pos:start="36:2" pos:end="36:7">define</cpp:directive> <cpp:macro pos:start="36:9" pos:end="36:26"><name pos:start="36:9" pos:end="36:26">US1060_TRUST_CERTS</name></cpp:macro>      <cpp:value pos:start="36:33" pos:end="36:53">"CA/trustedcerts.crt"</cpp:value></cpp:define>
<cpp:define pos:start="37:1" pos:end="37:74">#<cpp:directive pos:start="37:2" pos:end="37:7">define</cpp:directive> <cpp:macro pos:start="37:9" pos:end="37:29"><name pos:start="37:9" pos:end="37:29">US1060_SERVER_CERTKEY</name></cpp:macro>   <cpp:value pos:start="37:33" pos:end="37:74">"CA/estCA/private/estservercertandkey.pem"</cpp:value></cpp:define>
<cpp:define pos:start="38:1" pos:end="38:52">#<cpp:directive pos:start="38:2" pos:end="38:7">define</cpp:directive> <cpp:macro pos:start="38:9" pos:end="38:20"><name pos:start="38:9" pos:end="38:20">US1060_VFILE</name></cpp:macro>            <cpp:value pos:start="38:33" pos:end="38:52">"US1060/passwd.srpv"</cpp:value></cpp:define>

<cpp:define pos:start="40:1" pos:end="40:58">#<cpp:directive pos:start="40:2" pos:end="40:7">define</cpp:directive> <cpp:macro pos:start="40:9" pos:end="40:28"><name pos:start="40:9" pos:end="40:28">US1060_EXPLICIT_CERT</name></cpp:macro>    <cpp:value pos:start="40:33" pos:end="40:58">"US1060/explicit-cert.pem"</cpp:value></cpp:define> 
<cpp:define pos:start="41:1" pos:end="41:57">#<cpp:directive pos:start="41:2" pos:end="41:7">define</cpp:directive> <cpp:macro pos:start="41:9" pos:end="41:27"><name pos:start="41:9" pos:end="41:27">US1060_EXPLICIT_KEY</name></cpp:macro>     <cpp:value pos:start="41:33" pos:end="41:57">"US1060/explicit-key.pem"</cpp:value></cpp:define>
<cpp:define pos:start="42:1" pos:end="42:60">#<cpp:directive pos:start="42:2" pos:end="42:7">define</cpp:directive> <cpp:macro pos:start="42:9" pos:end="42:28"><name pos:start="42:9" pos:end="42:28">US1060_SELFSIGN_CERT</name></cpp:macro>    <cpp:value pos:start="42:33" pos:end="42:60">"US1060/selfsigned-cert.pem"</cpp:value></cpp:define> 
<cpp:define pos:start="43:1" pos:end="43:59">#<cpp:directive pos:start="43:2" pos:end="43:7">define</cpp:directive> <cpp:macro pos:start="43:9" pos:end="43:27"><name pos:start="43:9" pos:end="43:27">US1060_SELFSIGN_KEY</name></cpp:macro>     <cpp:value pos:start="43:33" pos:end="43:59">"US1060/selfsigned-key.pem"</cpp:value></cpp:define>
<cpp:else pos:start="44:1" pos:end="44:5">#<cpp:directive pos:start="44:2" pos:end="44:5">else</cpp:directive></cpp:else>
<cpp:define pos:start="45:1" pos:end="45:55">#<cpp:directive pos:start="45:2" pos:end="45:7">define</cpp:directive> <cpp:macro pos:start="45:9" pos:end="45:22"><name pos:start="45:9" pos:end="45:22">US1060_CACERTS</name></cpp:macro>          <cpp:value pos:start="45:33" pos:end="45:55">"CA\\estCA\\cacert.crt"</cpp:value></cpp:define>
<cpp:define pos:start="46:1" pos:end="46:54">#<cpp:directive pos:start="46:2" pos:end="46:7">define</cpp:directive> <cpp:macro pos:start="46:9" pos:end="46:26"><name pos:start="46:9" pos:end="46:26">US1060_TRUST_CERTS</name></cpp:macro>      <cpp:value pos:start="46:33" pos:end="46:54">"CA\\trustedcerts.crt"</cpp:value></cpp:define>
<cpp:define pos:start="47:1" pos:end="47:77">#<cpp:directive pos:start="47:2" pos:end="47:7">define</cpp:directive> <cpp:macro pos:start="47:9" pos:end="47:29"><name pos:start="47:9" pos:end="47:29">US1060_SERVER_CERTKEY</name></cpp:macro>   <cpp:value pos:start="47:33" pos:end="47:77">"CA\\estCA\\private\\estservercertandkey.pem"</cpp:value></cpp:define>
<cpp:define pos:start="48:1" pos:end="48:53">#<cpp:directive pos:start="48:2" pos:end="48:7">define</cpp:directive> <cpp:macro pos:start="48:9" pos:end="48:20"><name pos:start="48:9" pos:end="48:20">US1060_VFILE</name></cpp:macro>            <cpp:value pos:start="48:33" pos:end="48:53">"US1060\\passwd.srpv"</cpp:value></cpp:define>

<cpp:define pos:start="50:1" pos:end="50:59">#<cpp:directive pos:start="50:2" pos:end="50:7">define</cpp:directive> <cpp:macro pos:start="50:9" pos:end="50:28"><name pos:start="50:9" pos:end="50:28">US1060_EXPLICIT_CERT</name></cpp:macro>    <cpp:value pos:start="50:33" pos:end="50:59">"US1060\\explicit-cert.pem"</cpp:value></cpp:define> 
<cpp:define pos:start="51:1" pos:end="51:58">#<cpp:directive pos:start="51:2" pos:end="51:7">define</cpp:directive> <cpp:macro pos:start="51:9" pos:end="51:27"><name pos:start="51:9" pos:end="51:27">US1060_EXPLICIT_KEY</name></cpp:macro>     <cpp:value pos:start="51:33" pos:end="51:58">"US1060\\explicit-key.pem"</cpp:value></cpp:define>
<cpp:define pos:start="52:1" pos:end="52:61">#<cpp:directive pos:start="52:2" pos:end="52:7">define</cpp:directive> <cpp:macro pos:start="52:9" pos:end="52:28"><name pos:start="52:9" pos:end="52:28">US1060_SELFSIGN_CERT</name></cpp:macro>    <cpp:value pos:start="52:33" pos:end="52:61">"US1060\\selfsigned-cert.pem"</cpp:value></cpp:define> 
<cpp:define pos:start="53:1" pos:end="53:60">#<cpp:directive pos:start="53:2" pos:end="53:7">define</cpp:directive> <cpp:macro pos:start="53:9" pos:end="53:27"><name pos:start="53:9" pos:end="53:27">US1060_SELFSIGN_KEY</name></cpp:macro>     <cpp:value pos:start="53:33" pos:end="53:60">"US1060\\selfsigned-key.pem"</cpp:value></cpp:define>
<cpp:endif pos:start="54:1" pos:end="54:6">#<cpp:directive pos:start="54:2" pos:end="54:6">endif</cpp:directive></cpp:endif>

<cpp:define pos:start="56:1" pos:end="56:86">#<cpp:directive pos:start="56:2" pos:end="56:7">define</cpp:directive> <cpp:macro pos:start="56:9" pos:end="56:25"><name pos:start="56:9" pos:end="56:25">US1060_ENROLL_URL</name></cpp:macro>       <cpp:value pos:start="56:33" pos:end="56:86">"https://127.0.0.1:31060/.well-known/est/simpleenroll"</cpp:value></cpp:define>
<cpp:define pos:start="57:1" pos:end="57:48">#<cpp:directive pos:start="57:2" pos:end="57:7">define</cpp:directive> <cpp:macro pos:start="57:9" pos:end="57:26"><name pos:start="57:9" pos:end="57:26">US1060_UIDPWD_GOOD</name></cpp:macro>      <cpp:value pos:start="57:33" pos:end="57:48">"estuser:estpwd"</cpp:value></cpp:define>
<cpp:define pos:start="58:1" pos:end="58:51">#<cpp:directive pos:start="58:2" pos:end="58:7">define</cpp:directive> <cpp:macro pos:start="58:9" pos:end="58:25"><name pos:start="58:9" pos:end="58:25">US1060_UIDPWD_BAD</name></cpp:macro>       <cpp:value pos:start="58:33" pos:end="58:51">"estuser:xxx111222"</cpp:value></cpp:define>
<cpp:define pos:start="59:1" pos:end="59:66">#<cpp:directive pos:start="59:2" pos:end="59:7">define</cpp:directive> <cpp:macro pos:start="59:9" pos:end="59:24"><name pos:start="59:9" pos:end="59:24">US1060_PKCS10_CT</name></cpp:macro>        <cpp:value pos:start="59:33" pos:end="59:66">"Content-Type: application/pkcs10"</cpp:value></cpp:define>

<cpp:define pos:start="61:1" pos:end="61:86">#<cpp:directive pos:start="61:2" pos:end="61:7">define</cpp:directive> <cpp:macro pos:start="61:9" pos:end="61:31"><name pos:start="61:9" pos:end="61:31">US1060_PROXY_ENROLL_URL</name></cpp:macro> <cpp:value pos:start="61:33" pos:end="61:86">"https://127.0.0.1:41060/.well-known/est/simpleenroll"</cpp:value></cpp:define>
<cpp:define pos:start="62:1" pos:end="62:37">#<cpp:directive pos:start="62:2" pos:end="62:7">define</cpp:directive> <cpp:macro pos:start="62:9" pos:end="62:25"><name pos:start="62:9" pos:end="62:25">US1060_PROXY_PORT</name></cpp:macro>       <cpp:value pos:start="62:33" pos:end="62:37">41060</cpp:value></cpp:define>

<cpp:define pos:start="64:1" pos:end="64:930">#<cpp:directive pos:start="64:2" pos:end="64:7">define</cpp:directive> <cpp:macro pos:start="64:9" pos:end="64:25"><name pos:start="64:9" pos:end="64:25">US1060_PKCS10_REQ</name></cpp:macro>       <cpp:value pos:start="64:33" pos:end="64:930">"MIIChjCCAW4CAQAwQTElMCMGA1UEAxMccmVxIGJ5IGNsaWVudCBpbiBkZW1vIHN0\nZXAgMjEYMBYGA1UEBRMPUElEOldpZGdldCBTTjoyMIIBIjANBgkqhkiG9w0BAQEF\nAAOCAQ8AMIIBCgKCAQEA/6JUWpXXDwCkvWPDWO0yANDQzFMxroLEIh6/vdNwfRSG\neNGC0efcL5L4NxHZOmO14yqMEMGpCyHz7Ob3hhNPu0K81gMUzRqzwmmJHXwRqobA\ni59OQEkHaPhI1T4RkVnSYZLOowSqonMZjWbT0iqZDY/RD8l3GjH3gEIBMQFv62NT\n1CSu9dfHEg76+DnJAhdddUDJDXO3AWI5s7zsLlzBoPlgd4oK5K1wqEE2pqhnZxei\nc94WFqXQ1kyrW0POVlQ+32moWTQTFA7SQE2uEF+GBXsRPaEO+FLQjE8JHOewLf/T\nqX0ngywnvxKRpKguSBic31WVkswPs8E34pjjZAvdxQIDAQABoAAwDQYJKoZIhvcN\nAQEFBQADggEBAAZXVoorRxAvQPiMNDpRZHhiD5O2Yd7APBBznVgRll1HML5dpgnu\nXY7ZCYwQtxwNGYVtKJaZCiW7dWrZhvnF5ua3wUr9R2ZNoLwVR0Z9Y5wwn1cJrdSG\ncUuBN/0XBGI6g6fQlDDImQoPSF8gygcTCCHba7Uv0i8oiCiwf5UF+F3NYBoBL/PP\nlO2zBEYNQ65+W3YgfUyYP0Cr0NyXgkz3Qh2Xa2eRFeW56oejmcEaMjq6yx7WAC2X\nk3w1G6Le1UInzuenMScNgnt8FaI43eAILMdLQ/Ekxc30fjxA12RDh/YzDYiExFv0\ndPd4o5uPKt4jRitvGiAPm/OCdXiYAwqiu2w=\n"</cpp:value></cpp:define>

<decl_stmt pos:start="66:1" pos:end="66:38"><decl pos:start="66:1" pos:end="66:37"><type pos:start="66:1" pos:end="66:13"><specifier pos:start="66:1" pos:end="66:6">static</specifier> <name pos:start="66:8" pos:end="66:11">char</name> <modifier pos:start="66:13" pos:end="66:13">*</modifier></type><name pos:start="66:14" pos:end="66:30">log_search_target</name> <init pos:start="66:32" pos:end="66:37">= <expr pos:start="66:34" pos:end="66:37"><name pos:start="66:34" pos:end="66:37">NULL</name></expr></init></decl>;</decl_stmt>
<decl_stmt pos:start="67:1" pos:end="67:35"><decl pos:start="67:1" pos:end="67:34"><type pos:start="67:1" pos:end="67:10"><specifier pos:start="67:1" pos:end="67:6">static</specifier> <name pos:start="67:8" pos:end="67:10">int</name></type> <name pos:start="67:12" pos:end="67:30">search_target_found</name> <init pos:start="67:32" pos:end="67:34">= <expr pos:start="67:34" pos:end="67:34"><literal type="number" pos:start="67:34" pos:end="67:34">0</literal></expr></init></decl>;</decl_stmt>
<decl_stmt pos:start="68:1" pos:end="68:37"><decl pos:start="68:1" pos:end="68:36"><type pos:start="68:1" pos:end="68:22"><specifier pos:start="68:1" pos:end="68:6">static</specifier> <name pos:start="68:8" pos:end="68:15">unsigned</name> <name pos:start="68:17" pos:end="68:20">char</name> <modifier pos:start="68:22" pos:end="68:22">*</modifier></type><name pos:start="68:23" pos:end="68:29">cacerts</name> <init pos:start="68:31" pos:end="68:36">= <expr pos:start="68:33" pos:end="68:36"><name pos:start="68:33" pos:end="68:36">NULL</name></expr></init></decl>;</decl_stmt>
<decl_stmt pos:start="69:1" pos:end="69:27"><decl pos:start="69:1" pos:end="69:26"><type pos:start="69:1" pos:end="69:10"><specifier pos:start="69:1" pos:end="69:6">static</specifier> <name pos:start="69:8" pos:end="69:10">int</name></type> <name pos:start="69:12" pos:end="69:22">cacerts_len</name> <init pos:start="69:24" pos:end="69:26">= <expr pos:start="69:26" pos:end="69:26"><literal type="number" pos:start="69:26" pos:end="69:26">0</literal></expr></init></decl>;</decl_stmt>
<decl_stmt pos:start="70:1" pos:end="73:0"><decl pos:start="70:1" pos:end="70:30"><type pos:start="70:1" pos:end="70:18"><specifier pos:start="70:1" pos:end="70:6">static</specifier> <name pos:start="70:8" pos:end="70:16">SRP_VBASE</name> <modifier pos:start="70:18" pos:end="70:18">*</modifier></type><name pos:start="70:19" pos:end="70:23">srpdb</name> <init pos:start="70:25" pos:end="70:30">= <expr pos:start="70:27" pos:end="70:30"><name pos:start="70:27" pos:end="70:30">NULL</name></expr></init></decl>;</decl_stmt>

<cpp:ifdef pos:start="72:1" pos:end="72:12">#<cpp:directive pos:start="72:2" pos:end="72:6">ifdef</cpp:directive> <name pos:start="72:8" pos:end="72:12">WIN32</name></cpp:ifdef>
<decl_stmt pos:start="73:1" pos:end="75:0"><decl pos:start="73:1" pos:end="73:40"><type pos:start="73:1" pos:end="73:16"><name pos:start="73:1" pos:end="73:16">CRITICAL_SECTION</name></type> <name pos:start="73:18" pos:end="73:40">logger_critical_section</name></decl>;</decl_stmt>
<cpp:endif pos:start="74:1" pos:end="74:6">#<cpp:directive pos:start="74:2" pos:end="74:6">endif</cpp:directive></cpp:endif>

<comment type="block" pos:start="76:1" pos:end="80:3">/*
 * This is a simple callback used to override the default
 * logging facility in libest.  We'll use this to look
 * for specific debug output.
 */</comment>
<function pos:start="81:1" pos:end="104:1"><type pos:start="81:1" pos:end="81:11"><specifier pos:start="81:1" pos:end="81:6">static</specifier> <name pos:start="81:8" pos:end="81:11">void</name></type> <name pos:start="81:13" pos:end="81:32">us1060_logger_stderr</name> <parameter_list pos:start="81:34" pos:end="81:58">(<parameter pos:start="81:35" pos:end="81:46"><decl pos:start="81:35" pos:end="81:46"><type pos:start="81:35" pos:end="81:46"><name pos:start="81:35" pos:end="81:38">char</name> <modifier pos:start="81:40" pos:end="81:40">*</modifier></type><name pos:start="81:41" pos:end="81:46">format</name></decl></parameter>, <parameter pos:start="81:49" pos:end="81:57"><decl pos:start="81:49" pos:end="81:57"><type pos:start="81:49" pos:end="81:57"><name pos:start="81:49" pos:end="81:55">va_list</name></type> <name pos:start="81:57" pos:end="81:57">l</name></decl></parameter>)</parameter_list>
<block pos:start="82:1" pos:end="104:1">{<block_content pos:start="83:5" pos:end="104:0">
    <decl_stmt pos:start="83:5" pos:end="85:0"><decl pos:start="83:5" pos:end="83:20"><type pos:start="83:5" pos:end="83:8"><name pos:start="83:5" pos:end="83:8">char</name></type> <name pos:start="83:10" pos:end="83:20"><name pos:start="83:10" pos:end="83:14">t_log</name><index pos:start="83:15" pos:end="83:20">[<expr pos:start="83:16" pos:end="83:19"><literal type="number" pos:start="83:16" pos:end="83:19">1024</literal></expr>]</index></name></decl>;</decl_stmt>
<cpp:ifndef pos:start="84:1" pos:end="84:13">#<cpp:directive pos:start="84:2" pos:end="84:7">ifndef</cpp:directive> <name pos:start="84:9" pos:end="84:13">WIN32</name></cpp:ifndef>
    <expr_stmt pos:start="85:5" pos:end="87:0"><expr pos:start="85:5" pos:end="85:21"><call pos:start="85:5" pos:end="85:21"><name pos:start="85:5" pos:end="85:13">flockfile</name><argument_list pos:start="85:14" pos:end="85:21">(<argument pos:start="85:15" pos:end="85:20"><expr pos:start="85:15" pos:end="85:20"><name pos:start="85:15" pos:end="85:20">stderr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<cpp:else pos:start="86:1" pos:end="86:5">#<cpp:directive pos:start="86:2" pos:end="86:5">else</cpp:directive></cpp:else>
    <expr_stmt pos:start="87:5" pos:end="89:0"><expr pos:start="87:5" pos:end="87:50"><call pos:start="87:5" pos:end="87:50"><name pos:start="87:5" pos:end="87:24">EnterCriticalSection</name><argument_list pos:start="87:25" pos:end="87:50">(<argument pos:start="87:26" pos:end="87:49"><expr pos:start="87:26" pos:end="87:49"><operator pos:start="87:26" pos:end="87:26">&amp;</operator><name pos:start="87:27" pos:end="87:49">logger_critical_section</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<cpp:endif pos:start="88:1" pos:end="88:6">#<cpp:directive pos:start="88:2" pos:end="88:6">endif</cpp:directive></cpp:endif> 
    <if_stmt pos:start="89:5" pos:end="97:5"><if pos:start="89:5" pos:end="95:5">if <condition pos:start="89:8" pos:end="89:26">(<expr pos:start="89:9" pos:end="89:25"><name pos:start="89:9" pos:end="89:25">log_search_target</name></expr>)</condition> <block pos:start="89:28" pos:end="95:5">{<block_content pos:start="90:9" pos:end="94:37">
        <expr_stmt pos:start="90:9" pos:end="90:42"><expr pos:start="90:9" pos:end="90:41"><call pos:start="90:9" pos:end="90:41"><name pos:start="90:9" pos:end="90:17">vsnprintf</name><argument_list pos:start="90:18" pos:end="90:41">(<argument pos:start="90:19" pos:end="90:23"><expr pos:start="90:19" pos:end="90:23"><name pos:start="90:19" pos:end="90:23">t_log</name></expr></argument>, <argument pos:start="90:26" pos:end="90:29"><expr pos:start="90:26" pos:end="90:29"><literal type="number" pos:start="90:26" pos:end="90:29">1024</literal></expr></argument>, <argument pos:start="90:32" pos:end="90:37"><expr pos:start="90:32" pos:end="90:37"><name pos:start="90:32" pos:end="90:37">format</name></expr></argument>, <argument pos:start="90:40" pos:end="90:40"><expr pos:start="90:40" pos:end="90:40"><name pos:start="90:40" pos:end="90:40">l</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <if_stmt pos:start="91:9" pos:end="93:9"><if pos:start="91:9" pos:end="93:9">if <condition pos:start="91:12" pos:end="91:45">(<expr pos:start="91:13" pos:end="91:44"><call pos:start="91:13" pos:end="91:44"><name pos:start="91:13" pos:end="91:18">strstr</name><argument_list pos:start="91:19" pos:end="91:44">(<argument pos:start="91:20" pos:end="91:24"><expr pos:start="91:20" pos:end="91:24"><name pos:start="91:20" pos:end="91:24">t_log</name></expr></argument>, <argument pos:start="91:27" pos:end="91:43"><expr pos:start="91:27" pos:end="91:43"><name pos:start="91:27" pos:end="91:43">log_search_target</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="91:47" pos:end="93:9">{<block_content pos:start="92:13" pos:end="92:36">
            <expr_stmt pos:start="92:13" pos:end="92:36"><expr pos:start="92:13" pos:end="92:35"><name pos:start="92:13" pos:end="92:31">search_target_found</name> <operator pos:start="92:33" pos:end="92:33">=</operator> <literal type="number" pos:start="92:35" pos:end="92:35">1</literal></expr>;</expr_stmt>
        </block_content>}</block></if></if_stmt>
        <expr_stmt pos:start="94:9" pos:end="94:37"><expr pos:start="94:9" pos:end="94:36"><call pos:start="94:9" pos:end="94:36"><name pos:start="94:9" pos:end="94:15">fprintf</name><argument_list pos:start="94:16" pos:end="94:36">(<argument pos:start="94:17" pos:end="94:22"><expr pos:start="94:17" pos:end="94:22"><name pos:start="94:17" pos:end="94:22">stderr</name></expr></argument>, <argument pos:start="94:25" pos:end="94:28"><expr pos:start="94:25" pos:end="94:28"><literal type="string" pos:start="94:25" pos:end="94:28">"%s"</literal></expr></argument>, <argument pos:start="94:31" pos:end="94:35"><expr pos:start="94:31" pos:end="94:35"><name pos:start="94:31" pos:end="94:35">t_log</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></if> <else pos:start="95:7" pos:end="97:5">else <block pos:start="95:12" pos:end="97:5">{<block_content pos:start="96:9" pos:end="96:36">
        <expr_stmt pos:start="96:9" pos:end="96:36"><expr pos:start="96:9" pos:end="96:35"><call pos:start="96:9" pos:end="96:35"><name pos:start="96:9" pos:end="96:16">vfprintf</name><argument_list pos:start="96:17" pos:end="96:35">(<argument pos:start="96:18" pos:end="96:23"><expr pos:start="96:18" pos:end="96:23"><name pos:start="96:18" pos:end="96:23">stderr</name></expr></argument>, <argument pos:start="96:26" pos:end="96:31"><expr pos:start="96:26" pos:end="96:31"><name pos:start="96:26" pos:end="96:31">format</name></expr></argument>, <argument pos:start="96:34" pos:end="96:34"><expr pos:start="96:34" pos:end="96:34"><name pos:start="96:34" pos:end="96:34">l</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></else></if_stmt>
    <expr_stmt pos:start="98:5" pos:end="100:0"><expr pos:start="98:5" pos:end="98:18"><call pos:start="98:5" pos:end="98:18"><name pos:start="98:5" pos:end="98:10">fflush</name><argument_list pos:start="98:11" pos:end="98:18">(<argument pos:start="98:12" pos:end="98:17"><expr pos:start="98:12" pos:end="98:17"><name pos:start="98:12" pos:end="98:17">stderr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<cpp:ifndef pos:start="99:1" pos:end="99:13">#<cpp:directive pos:start="99:2" pos:end="99:7">ifndef</cpp:directive> <name pos:start="99:9" pos:end="99:13">WIN32</name></cpp:ifndef>
    <expr_stmt pos:start="100:5" pos:end="102:0"><expr pos:start="100:5" pos:end="100:23"><call pos:start="100:5" pos:end="100:23"><name pos:start="100:5" pos:end="100:15">funlockfile</name><argument_list pos:start="100:16" pos:end="100:23">(<argument pos:start="100:17" pos:end="100:22"><expr pos:start="100:17" pos:end="100:22"><name pos:start="100:17" pos:end="100:22">stderr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<cpp:else pos:start="101:1" pos:end="101:5">#<cpp:directive pos:start="101:2" pos:end="101:5">else</cpp:directive></cpp:else>
    <expr_stmt pos:start="102:5" pos:end="104:0"><expr pos:start="102:5" pos:end="102:50"><call pos:start="102:5" pos:end="102:50"><name pos:start="102:5" pos:end="102:24">LeaveCriticalSection</name><argument_list pos:start="102:25" pos:end="102:50">(<argument pos:start="102:26" pos:end="102:49"><expr pos:start="102:26" pos:end="102:49"><operator pos:start="102:26" pos:end="102:26">&amp;</operator><name pos:start="102:27" pos:end="102:49">logger_critical_section</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<cpp:endif pos:start="103:1" pos:end="103:6">#<cpp:directive pos:start="103:2" pos:end="103:6">endif</cpp:directive></cpp:endif>
</block_content>}</block></function>

<function pos:start="106:1" pos:end="139:1"><type pos:start="106:1" pos:end="106:10"><specifier pos:start="106:1" pos:end="106:6">static</specifier> <name pos:start="106:8" pos:end="106:10">int</name></type> <name pos:start="106:12" pos:end="106:30">us1060_start_server</name> <parameter_list pos:start="106:32" pos:end="107:63">(<parameter pos:start="106:33" pos:end="106:42"><decl pos:start="106:33" pos:end="106:42"><type pos:start="106:33" pos:end="106:42"><name pos:start="106:33" pos:end="106:36">char</name> <modifier pos:start="106:38" pos:end="106:38">*</modifier></type><name pos:start="106:39" pos:end="106:42">cert</name></decl></parameter>, <parameter pos:start="106:45" pos:end="106:53"><decl pos:start="106:45" pos:end="106:53"><type pos:start="106:45" pos:end="106:53"><name pos:start="106:45" pos:end="106:48">char</name> <modifier pos:start="106:50" pos:end="106:50">*</modifier></type><name pos:start="106:51" pos:end="106:53">key</name></decl></parameter>, <parameter pos:start="106:56" pos:end="106:71"><decl pos:start="106:56" pos:end="106:71"><type pos:start="106:56" pos:end="106:71"><name pos:start="106:56" pos:end="106:58">int</name></type> <name pos:start="106:60" pos:end="106:71">no_http_auth</name></decl></parameter>,
                                <parameter pos:start="107:33" pos:end="107:46"><decl pos:start="107:33" pos:end="107:46"><type pos:start="107:33" pos:end="107:46"><name pos:start="107:33" pos:end="107:35">int</name></type> <name pos:start="107:37" pos:end="107:46">enable_pop</name></decl></parameter>, <parameter pos:start="107:49" pos:end="107:62"><decl pos:start="107:49" pos:end="107:62"><type pos:start="107:49" pos:end="107:62"><name pos:start="107:49" pos:end="107:51">int</name></type> <name pos:start="107:53" pos:end="107:62">enable_srp</name></decl></parameter>)</parameter_list>
<block pos:start="108:1" pos:end="139:1">{<block_content pos:start="109:5" pos:end="138:14">
    <decl_stmt pos:start="109:5" pos:end="109:11"><decl pos:start="109:5" pos:end="109:10"><type pos:start="109:5" pos:end="109:7"><name pos:start="109:5" pos:end="109:7">int</name></type> <name pos:start="109:9" pos:end="109:10">rv</name></decl>;</decl_stmt>

    <if_stmt pos:start="111:5" pos:end="132:5"><if pos:start="111:5" pos:end="121:5">if <condition pos:start="111:8" pos:end="111:19">(<expr pos:start="111:9" pos:end="111:18"><name pos:start="111:9" pos:end="111:18">enable_srp</name></expr>)</condition> <block pos:start="111:21" pos:end="121:5">{<block_content pos:start="112:9" pos:end="120:40">
        <expr_stmt pos:start="112:9" pos:end="120:40"><expr pos:start="112:9" pos:end="120:39"><name pos:start="112:9" pos:end="112:10">rv</name> <operator pos:start="112:12" pos:end="112:12">=</operator> <call pos:start="112:14" pos:end="120:39"><name pos:start="112:14" pos:end="112:25">st_start_srp</name><argument_list pos:start="112:26" pos:end="120:39">(<argument pos:start="112:27" pos:end="112:44"><expr pos:start="112:27" pos:end="112:44"><name pos:start="112:27" pos:end="112:44">US1060_SERVER_PORT</name></expr></argument>,
                          <argument pos:start="113:27" pos:end="113:30"><expr pos:start="113:27" pos:end="113:30"><name pos:start="113:27" pos:end="113:30">cert</name></expr></argument>,
                          <argument pos:start="114:27" pos:end="114:29"><expr pos:start="114:27" pos:end="114:29"><name pos:start="114:27" pos:end="114:29">key</name></expr></argument>,
                          <argument pos:start="115:27" pos:end="115:45"><expr pos:start="115:27" pos:end="115:45"><literal type="string" pos:start="115:27" pos:end="115:45">"US1060 test realm"</literal></expr></argument>,
                          <argument pos:start="116:27" pos:end="116:40"><expr pos:start="116:27" pos:end="116:40"><name pos:start="116:27" pos:end="116:40">US1060_CACERTS</name></expr></argument>,
                          <argument pos:start="117:27" pos:end="117:44"><expr pos:start="117:27" pos:end="117:44"><name pos:start="117:27" pos:end="117:44">US1060_TRUST_CERTS</name></expr></argument>,
                          <argument pos:start="118:27" pos:end="118:47"><expr pos:start="118:27" pos:end="118:47"><literal type="string" pos:start="118:27" pos:end="118:47">"CA/estExampleCA.cnf"</literal></expr></argument>,
                          <argument pos:start="119:27" pos:end="119:36"><expr pos:start="119:27" pos:end="119:36"><name pos:start="119:27" pos:end="119:36">enable_pop</name></expr></argument>,
                          <argument pos:start="120:27" pos:end="120:38"><expr pos:start="120:27" pos:end="120:38"><name pos:start="120:27" pos:end="120:38">US1060_VFILE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></if> <else pos:start="121:7" pos:end="132:5">else <block pos:start="121:12" pos:end="132:5">{<block_content pos:start="122:9" pos:end="131:25">
        <expr_stmt pos:start="122:9" pos:end="131:25"><expr pos:start="122:9" pos:end="131:24"><name pos:start="122:9" pos:end="122:10">rv</name> <operator pos:start="122:12" pos:end="122:12">=</operator> <call pos:start="122:14" pos:end="131:24"><name pos:start="122:14" pos:end="122:21">st_start</name><argument_list pos:start="122:22" pos:end="131:24">(<argument pos:start="122:23" pos:end="122:40"><expr pos:start="122:23" pos:end="122:40"><name pos:start="122:23" pos:end="122:40">US1060_SERVER_PORT</name></expr></argument>,
                      <argument pos:start="123:23" pos:end="123:26"><expr pos:start="123:23" pos:end="123:26"><name pos:start="123:23" pos:end="123:26">cert</name></expr></argument>,
                      <argument pos:start="124:23" pos:end="124:25"><expr pos:start="124:23" pos:end="124:25"><name pos:start="124:23" pos:end="124:25">key</name></expr></argument>,
                      <argument pos:start="125:23" pos:end="125:41"><expr pos:start="125:23" pos:end="125:41"><literal type="string" pos:start="125:23" pos:end="125:41">"US1060 test realm"</literal></expr></argument>,
                      <argument pos:start="126:23" pos:end="126:36"><expr pos:start="126:23" pos:end="126:36"><name pos:start="126:23" pos:end="126:36">US1060_CACERTS</name></expr></argument>,
                      <argument pos:start="127:23" pos:end="127:40"><expr pos:start="127:23" pos:end="127:40"><name pos:start="127:23" pos:end="127:40">US1060_TRUST_CERTS</name></expr></argument>,
                      <argument pos:start="128:23" pos:end="128:43"><expr pos:start="128:23" pos:end="128:43"><literal type="string" pos:start="128:23" pos:end="128:43">"CA/estExampleCA.cnf"</literal></expr></argument>,
                      <argument pos:start="129:23" pos:end="129:23"><expr pos:start="129:23" pos:end="129:23"><literal type="number" pos:start="129:23" pos:end="129:23">0</literal></expr></argument>,
                      <argument pos:start="130:23" pos:end="130:32"><expr pos:start="130:23" pos:end="130:32"><name pos:start="130:23" pos:end="130:32">enable_pop</name></expr></argument>,
                      <argument pos:start="131:23" pos:end="131:23"><expr pos:start="131:23" pos:end="131:23"><literal type="number" pos:start="131:23" pos:end="131:23">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></else></if_stmt>

    <if_stmt pos:start="134:5" pos:end="136:5"><if pos:start="134:5" pos:end="136:5">if <condition pos:start="134:8" pos:end="134:21">(<expr pos:start="134:9" pos:end="134:20"><name pos:start="134:9" pos:end="134:20">no_http_auth</name></expr>)</condition> <block pos:start="134:23" pos:end="136:5">{<block_content pos:start="135:9" pos:end="135:31">
        <expr_stmt pos:start="135:9" pos:end="135:31"><expr pos:start="135:9" pos:end="135:30"><call pos:start="135:9" pos:end="135:30"><name pos:start="135:9" pos:end="135:28">st_disable_http_auth</name><argument_list pos:start="135:29" pos:end="135:30">()</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></if></if_stmt>

    <return pos:start="138:5" pos:end="138:14">return <expr pos:start="138:12" pos:end="138:13"><name pos:start="138:12" pos:end="138:13">rv</name></expr>;</return>
</block_content>}</block></function>

<comment type="block" pos:start="141:1" pos:end="145:3">/*
 * This routine is called when CUnit initializes this test
 * suite.  This can be used to allocate data or open any
 * resources required for all the test cases.
 */</comment>
<function pos:start="146:1" pos:end="198:1"><type pos:start="146:1" pos:end="146:10"><specifier pos:start="146:1" pos:end="146:6">static</specifier> <name pos:start="146:8" pos:end="146:10">int</name></type> <name pos:start="146:12" pos:end="146:28">us1060_init_suite</name> <parameter_list pos:start="146:30" pos:end="146:35">(<parameter pos:start="146:31" pos:end="146:34"><decl pos:start="146:31" pos:end="146:34"><type pos:start="146:31" pos:end="146:34"><name pos:start="146:31" pos:end="146:34">void</name></type></decl></parameter>)</parameter_list>
<block pos:start="147:1" pos:end="198:1">{<block_content pos:start="148:5" pos:end="197:14">
    <decl_stmt pos:start="148:5" pos:end="151:0"><decl pos:start="148:5" pos:end="148:10"><type pos:start="148:5" pos:end="148:7"><name pos:start="148:5" pos:end="148:7">int</name></type> <name pos:start="148:9" pos:end="148:10">rv</name></decl>;</decl_stmt>

<cpp:ifdef pos:start="150:1" pos:end="150:12">#<cpp:directive pos:start="150:2" pos:end="150:6">ifdef</cpp:directive> <name pos:start="150:8" pos:end="150:12">WIN32</name></cpp:ifdef>
    <comment type="block" pos:start="151:5" pos:end="151:47">/* Initialize critical section on Windows*/</comment>
    <expr_stmt pos:start="152:5" pos:end="154:0"><expr pos:start="152:5" pos:end="152:55"><call pos:start="152:5" pos:end="152:55"><name pos:start="152:5" pos:end="152:29">InitializeCriticalSection</name><argument_list pos:start="152:30" pos:end="152:55">(<argument pos:start="152:31" pos:end="152:54"><expr pos:start="152:31" pos:end="152:54"><operator pos:start="152:31" pos:end="152:31">&amp;</operator><name pos:start="152:32" pos:end="152:54">logger_critical_section</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<cpp:endif pos:start="153:1" pos:end="153:6">#<cpp:directive pos:start="153:2" pos:end="153:6">endif</cpp:directive></cpp:endif>

    <expr_stmt pos:start="155:5" pos:end="155:61"><expr pos:start="155:5" pos:end="155:60"><call pos:start="155:5" pos:end="155:60"><name pos:start="155:5" pos:end="155:19">est_init_logger</name><argument_list pos:start="155:20" pos:end="155:60">(<argument pos:start="155:21" pos:end="155:36"><expr pos:start="155:21" pos:end="155:36"><name pos:start="155:21" pos:end="155:36">EST_LOG_LVL_INFO</name></expr></argument>, <argument pos:start="155:39" pos:end="155:59"><expr pos:start="155:39" pos:end="155:59"><operator pos:start="155:39" pos:end="155:39">&amp;</operator><name pos:start="155:40" pos:end="155:59">us1060_logger_stderr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <comment type="block" pos:start="157:5" pos:end="160:7">/*
     * Start an instance of the EST server with
     * automatic enrollment enabled.
     */</comment>
    <expr_stmt pos:start="161:5" pos:end="162:11"><expr pos:start="161:5" pos:end="162:10"><name pos:start="161:5" pos:end="161:6">rv</name> <operator pos:start="161:8" pos:end="161:8">=</operator> <call pos:start="161:10" pos:end="162:10"><name pos:start="161:10" pos:end="161:28">us1060_start_server</name><argument_list pos:start="161:29" pos:end="162:10">(<argument pos:start="161:30" pos:end="161:50"><expr pos:start="161:30" pos:end="161:50"><name pos:start="161:30" pos:end="161:50">US1060_SERVER_CERTKEY</name></expr></argument>, <argument pos:start="161:53" pos:end="161:73"><expr pos:start="161:53" pos:end="161:73"><name pos:start="161:53" pos:end="161:73">US1060_SERVER_CERTKEY</name></expr></argument>, <argument pos:start="161:76" pos:end="161:76"><expr pos:start="161:76" pos:end="161:76"><literal type="number" pos:start="161:76" pos:end="161:76">0</literal></expr></argument>, <argument pos:start="161:79" pos:end="161:79"><expr pos:start="161:79" pos:end="161:79"><literal type="number" pos:start="161:79" pos:end="161:79">0</literal></expr></argument>,
        <argument pos:start="162:9" pos:end="162:9"><expr pos:start="162:9" pos:end="162:9"><literal type="number" pos:start="162:9" pos:end="162:9">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <comment type="block" pos:start="164:5" pos:end="166:7">/*
     * Start an instance of the proxy with SRP enabled
     */</comment>
    <expr_stmt pos:start="167:5" pos:end="178:42"><expr pos:start="167:5" pos:end="178:41"><name pos:start="167:5" pos:end="167:6">rv</name> <operator pos:start="167:8" pos:end="167:8">=</operator> <call pos:start="167:10" pos:end="178:41"><name pos:start="167:10" pos:end="167:27">st_proxy_start_srp</name><argument_list pos:start="167:28" pos:end="178:41">(<argument pos:start="167:29" pos:end="167:45"><expr pos:start="167:29" pos:end="167:45"><name pos:start="167:29" pos:end="167:45">US1060_PROXY_PORT</name></expr></argument>,
                            <argument pos:start="168:29" pos:end="168:49"><expr pos:start="168:29" pos:end="168:49"><name pos:start="168:29" pos:end="168:49">US1060_SERVER_CERTKEY</name></expr></argument>,
                            <argument pos:start="169:29" pos:end="169:49"><expr pos:start="169:29" pos:end="169:49"><name pos:start="169:29" pos:end="169:49">US1060_SERVER_CERTKEY</name></expr></argument>,
                            <argument pos:start="170:29" pos:end="170:48"><expr pos:start="170:29" pos:end="170:48"><literal type="string" pos:start="170:29" pos:end="170:48">"US1060 proxy realm"</literal></expr></argument>,
                            <argument pos:start="171:29" pos:end="171:42"><expr pos:start="171:29" pos:end="171:42"><name pos:start="171:29" pos:end="171:42">US1060_CACERTS</name></expr></argument>,
                            <argument pos:start="172:29" pos:end="172:46"><expr pos:start="172:29" pos:end="172:46"><name pos:start="172:29" pos:end="172:46">US1060_TRUST_CERTS</name></expr></argument>,
                            <argument pos:start="173:29" pos:end="173:38"><expr pos:start="173:29" pos:end="173:38"><name pos:start="173:29" pos:end="173:38">US1060_UID</name></expr></argument>,
                            <argument pos:start="174:29" pos:end="174:38"><expr pos:start="174:29" pos:end="174:38"><name pos:start="174:29" pos:end="174:38">US1060_PWD</name></expr></argument>,
                            <argument pos:start="175:29" pos:end="175:44"><expr pos:start="175:29" pos:end="175:44"><name pos:start="175:29" pos:end="175:44">US1060_SERVER_IP</name></expr></argument>,
                            <argument pos:start="176:29" pos:end="176:46"><expr pos:start="176:29" pos:end="176:46"><name pos:start="176:29" pos:end="176:46">US1060_SERVER_PORT</name></expr></argument>,
                            <argument pos:start="177:29" pos:end="177:29"><expr pos:start="177:29" pos:end="177:29"><literal type="number" pos:start="177:29" pos:end="177:29">0</literal></expr></argument>,
                            <argument pos:start="178:29" pos:end="178:40"><expr pos:start="178:29" pos:end="178:40"><name pos:start="178:29" pos:end="178:40">US1060_VFILE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <comment type="block" pos:start="180:5" pos:end="183:7">/*
     * Read in the CA certificates
     * Used for client-side API testing
     */</comment>
    <expr_stmt pos:start="184:5" pos:end="184:61"><expr pos:start="184:5" pos:end="184:60"><name pos:start="184:5" pos:end="184:15">cacerts_len</name> <operator pos:start="184:17" pos:end="184:17">=</operator> <call pos:start="184:19" pos:end="184:60"><name pos:start="184:19" pos:end="184:34">read_binary_file</name><argument_list pos:start="184:35" pos:end="184:60">(<argument pos:start="184:36" pos:end="184:49"><expr pos:start="184:36" pos:end="184:49"><name pos:start="184:36" pos:end="184:49">US1060_CACERTS</name></expr></argument>, <argument pos:start="184:52" pos:end="184:59"><expr pos:start="184:52" pos:end="184:59"><operator pos:start="184:52" pos:end="184:52">&amp;</operator><name pos:start="184:53" pos:end="184:59">cacerts</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <if_stmt pos:start="185:5" pos:end="187:5"><if pos:start="185:5" pos:end="187:5">if <condition pos:start="185:8" pos:end="185:25">(<expr pos:start="185:9" pos:end="185:24"><name pos:start="185:9" pos:end="185:19">cacerts_len</name> <operator pos:start="185:21" pos:end="185:22">&lt;=</operator> <literal type="number" pos:start="185:24" pos:end="185:24">0</literal></expr>)</condition> <block pos:start="185:27" pos:end="187:5">{<block_content pos:start="186:9" pos:end="186:17">
        <return pos:start="186:9" pos:end="186:17">return <expr pos:start="186:16" pos:end="186:16"><literal type="number" pos:start="186:16" pos:end="186:16">1</literal></expr>;</return>
    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="189:5" pos:end="189:32"><expr pos:start="189:5" pos:end="189:31"><name pos:start="189:5" pos:end="189:9">srpdb</name> <operator pos:start="189:11" pos:end="189:11">=</operator> <call pos:start="189:13" pos:end="189:31"><name pos:start="189:13" pos:end="189:25">SRP_VBASE_new</name><argument_list pos:start="189:26" pos:end="189:31">(<argument pos:start="189:27" pos:end="189:30"><expr pos:start="189:27" pos:end="189:30"><name pos:start="189:27" pos:end="189:30">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <if_stmt pos:start="190:5" pos:end="192:5"><if pos:start="190:5" pos:end="192:5">if <condition pos:start="190:8" pos:end="190:15">(<expr pos:start="190:9" pos:end="190:14"><operator pos:start="190:9" pos:end="190:9">!</operator><name pos:start="190:10" pos:end="190:14">srpdb</name></expr>)</condition> <block pos:start="190:17" pos:end="192:5">{<block_content pos:start="191:9" pos:end="191:74">
        <expr_stmt pos:start="191:9" pos:end="191:74"><expr pos:start="191:9" pos:end="191:73"><call pos:start="191:9" pos:end="191:73"><name pos:start="191:9" pos:end="191:14">printf</name><argument_list pos:start="191:15" pos:end="191:73">(<argument pos:start="191:16" pos:end="191:72"><expr pos:start="191:16" pos:end="191:72"><literal type="string" pos:start="191:16" pos:end="191:72">"\nUnable allocate SRP verifier database.  Aborting!!!\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></if></if_stmt>
    <if_stmt pos:start="193:5" pos:end="195:5"><if pos:start="193:5" pos:end="195:5">if <condition pos:start="193:8" pos:end="193:60">(<expr pos:start="193:9" pos:end="193:59"><call pos:start="193:9" pos:end="193:43"><name pos:start="193:9" pos:end="193:22">SRP_VBASE_init</name><argument_list pos:start="193:23" pos:end="193:43">(<argument pos:start="193:24" pos:end="193:28"><expr pos:start="193:24" pos:end="193:28"><name pos:start="193:24" pos:end="193:28">srpdb</name></expr></argument>, <argument pos:start="193:31" pos:end="193:42"><expr pos:start="193:31" pos:end="193:42"><name pos:start="193:31" pos:end="193:42">US1060_VFILE</name></expr></argument>)</argument_list></call> <operator pos:start="193:45" pos:end="193:46">!=</operator> <name pos:start="193:48" pos:end="193:59">SRP_NO_ERROR</name></expr>)</condition> <block pos:start="193:62" pos:end="195:5">{<block_content pos:start="194:9" pos:end="194:76">
        <expr_stmt pos:start="194:9" pos:end="194:76"><expr pos:start="194:9" pos:end="194:75"><call pos:start="194:9" pos:end="194:75"><name pos:start="194:9" pos:end="194:14">printf</name><argument_list pos:start="194:15" pos:end="194:75">(<argument pos:start="194:16" pos:end="194:74"><expr pos:start="194:16" pos:end="194:74"><literal type="string" pos:start="194:16" pos:end="194:74">"\nUnable initialize SRP verifier database.  Aborting!!!\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></if></if_stmt>

    <return pos:start="197:5" pos:end="197:14">return <expr pos:start="197:12" pos:end="197:13"><name pos:start="197:12" pos:end="197:13">rv</name></expr>;</return>
</block_content>}</block></function>

<comment type="block" pos:start="200:1" pos:end="204:3">/*
 * This routine is called when CUnit uninitializes this test
 * suite.  This can be used to deallocate data or close any
 * resources that were used for the test cases.
 */</comment>
<function pos:start="205:1" pos:end="215:1"><type pos:start="205:1" pos:end="205:10"><specifier pos:start="205:1" pos:end="205:6">static</specifier> <name pos:start="205:8" pos:end="205:10">int</name></type> <name pos:start="205:12" pos:end="205:31">us1060_destroy_suite</name> <parameter_list pos:start="205:33" pos:end="205:38">(<parameter pos:start="205:34" pos:end="205:37"><decl pos:start="205:34" pos:end="205:37"><type pos:start="205:34" pos:end="205:37"><name pos:start="205:34" pos:end="205:37">void</name></type></decl></parameter>)</parameter_list>
<block pos:start="206:1" pos:end="215:1">{<block_content pos:start="207:5" pos:end="214:13">
    <if_stmt pos:start="207:5" pos:end="209:5"><if pos:start="207:5" pos:end="209:5">if <condition pos:start="207:8" pos:end="207:14">(<expr pos:start="207:9" pos:end="207:13"><name pos:start="207:9" pos:end="207:13">srpdb</name></expr>)</condition> <block pos:start="207:16" pos:end="209:5">{<block_content pos:start="208:9" pos:end="208:30">
        <expr_stmt pos:start="208:9" pos:end="208:30"><expr pos:start="208:9" pos:end="208:29"><call pos:start="208:9" pos:end="208:29"><name pos:start="208:9" pos:end="208:22">SRP_VBASE_free</name><argument_list pos:start="208:23" pos:end="208:29">(<argument pos:start="208:24" pos:end="208:28"><expr pos:start="208:24" pos:end="208:28"><name pos:start="208:24" pos:end="208:28">srpdb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="211:5" pos:end="211:14"><expr pos:start="211:5" pos:end="211:13"><call pos:start="211:5" pos:end="211:13"><name pos:start="211:5" pos:end="211:11">st_stop</name><argument_list pos:start="211:12" pos:end="211:13">()</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="212:5" pos:end="212:20"><expr pos:start="212:5" pos:end="212:19"><call pos:start="212:5" pos:end="212:19"><name pos:start="212:5" pos:end="212:17">st_proxy_stop</name><argument_list pos:start="212:18" pos:end="212:19">()</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="213:5" pos:end="213:18"><expr pos:start="213:5" pos:end="213:17"><call pos:start="213:5" pos:end="213:17"><name pos:start="213:5" pos:end="213:8">free</name><argument_list pos:start="213:9" pos:end="213:17">(<argument pos:start="213:10" pos:end="213:16"><expr pos:start="213:10" pos:end="213:16"><name pos:start="213:10" pos:end="213:16">cacerts</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <return pos:start="214:5" pos:end="214:13">return <expr pos:start="214:12" pos:end="214:12"><literal type="number" pos:start="214:12" pos:end="214:12">0</literal></expr>;</return>
</block_content>}</block></function>

<typedef pos:start="217:1" pos:end="219:18">typedef <type pos:start="217:9" pos:end="219:1"><enum pos:start="217:9" pos:end="219:1">enum <block pos:start="217:14" pos:end="219:1">{
    <decl pos:start="218:5" pos:end="218:11"><name pos:start="218:5" pos:end="218:11">SRP_OFF</name></decl>, <decl pos:start="218:14" pos:end="218:19"><name pos:start="218:14" pos:end="218:19">SRP_ON</name></decl>
}</block></enum></type> <name pos:start="219:3" pos:end="219:17">server_srp_mode</name>;</typedef>

<typedef pos:start="221:1" pos:end="223:18">typedef <type pos:start="221:9" pos:end="223:1"><enum pos:start="221:9" pos:end="223:1">enum <block pos:start="221:14" pos:end="223:1">{
    <decl pos:start="222:5" pos:end="222:12"><name pos:start="222:5" pos:end="222:12">SRP_GOOD</name></decl>, <decl pos:start="222:15" pos:end="222:21"><name pos:start="222:15" pos:end="222:21">SRP_BAD</name></decl>, <decl pos:start="222:24" pos:end="222:31"><name pos:start="222:24" pos:end="222:31">SRP_NONE</name></decl>,
}</block></enum></type> <name pos:start="223:3" pos:end="223:17">client_srp_mode</name>;</typedef>

<typedef pos:start="225:1" pos:end="227:19">typedef <type pos:start="225:9" pos:end="227:1"><enum pos:start="225:9" pos:end="227:1">enum <block pos:start="225:14" pos:end="227:1">{
    <decl pos:start="226:5" pos:end="226:12"><name pos:start="226:5" pos:end="226:12">HTTP_OFF</name></decl>, <decl pos:start="226:15" pos:end="226:27"><name pos:start="226:15" pos:end="226:27">HTTP_OPTIONAL</name></decl>, <decl pos:start="226:30" pos:end="226:42"><name pos:start="226:30" pos:end="226:42">HTTP_REQUIRED</name></decl>
}</block></enum></type> <name pos:start="227:3" pos:end="227:18">server_http_mode</name>;</typedef>

<typedef pos:start="229:1" pos:end="238:16">typedef <type pos:start="229:9" pos:end="238:1"><struct pos:start="229:9" pos:end="238:1">struct <block pos:start="229:16" pos:end="238:1">{
    <decl_stmt pos:start="230:5" pos:end="230:20"><decl pos:start="230:5" pos:end="230:19"><type pos:start="230:5" pos:end="230:10"><name pos:start="230:5" pos:end="230:8">char</name> <modifier pos:start="230:10" pos:end="230:10">*</modifier></type><name pos:start="230:11" pos:end="230:19">test_name</name></decl>;</decl_stmt>
    <decl_stmt pos:start="231:5" pos:end="231:20"><decl pos:start="231:5" pos:end="231:19"><type pos:start="231:5" pos:end="231:10"><name pos:start="231:5" pos:end="231:8">char</name> <modifier pos:start="231:10" pos:end="231:10">*</modifier></type><name pos:start="231:11" pos:end="231:19">curl_cert</name></decl>;</decl_stmt>
    <decl_stmt pos:start="232:5" pos:end="232:19"><decl pos:start="232:5" pos:end="232:18"><type pos:start="232:5" pos:end="232:10"><name pos:start="232:5" pos:end="232:8">char</name> <modifier pos:start="232:10" pos:end="232:10">*</modifier></type><name pos:start="232:11" pos:end="232:18">curl_key</name></decl>;</decl_stmt>
    <decl_stmt pos:start="233:5" pos:end="233:25"><decl pos:start="233:5" pos:end="233:24"><type pos:start="233:5" pos:end="233:10"><name pos:start="233:5" pos:end="233:8">char</name> <modifier pos:start="233:10" pos:end="233:10">*</modifier></type><name pos:start="233:11" pos:end="233:24">curl_http_auth</name></decl>;</decl_stmt>
    <decl_stmt pos:start="234:5" pos:end="234:29"><decl pos:start="234:5" pos:end="234:28"><type pos:start="234:5" pos:end="234:19"><name pos:start="234:5" pos:end="234:19">client_srp_mode</name></type> <name pos:start="234:21" pos:end="234:28">curl_srp</name></decl>;</decl_stmt>
    <decl_stmt pos:start="235:5" pos:end="235:33"><decl pos:start="235:5" pos:end="235:32"><type pos:start="235:5" pos:end="235:20"><name pos:start="235:5" pos:end="235:20">server_http_mode</name></type> <name pos:start="235:22" pos:end="235:32">server_http</name></decl>;</decl_stmt>
    <decl_stmt pos:start="236:5" pos:end="236:31"><decl pos:start="236:5" pos:end="236:30"><type pos:start="236:5" pos:end="236:19"><name pos:start="236:5" pos:end="236:19">server_srp_mode</name></type> <name pos:start="236:21" pos:end="236:30">server_srp</name></decl>;</decl_stmt>
    <decl_stmt pos:start="237:5" pos:end="237:29"><decl pos:start="237:5" pos:end="237:28"><type pos:start="237:5" pos:end="237:7"><name pos:start="237:5" pos:end="237:7">int</name></type> <name pos:start="237:9" pos:end="237:28">expected_http_result</name></decl>;</decl_stmt>
}</block></struct></type> <name pos:start="238:3" pos:end="238:15">us1060_matrix</name>;</typedef>

<comment type="block" pos:start="240:1" pos:end="267:3">/*
 * This is the unit test matrix for server-side SRP support.  Curl is
 * used as the EST client.  Because of this PoP is disabled on the
 * server for all test cases.  We try to cover a variety of configurations
 * and potential scenarios.  The client side variations include:
 *
 * curl_cert:  The certificate curl uses, which may be NULL
 * curl_key:   The key curl uses, which may be NULL
 * curl_http_auth:  The HTTP auth credentials used by curl.
 * client_srp_mode: Either GOOD, BAD, NONE.  Determines which SRP credentials are used
 *                  Curl.
 *
 * On the server side we configure the server using the following variations:
 *
 * server_http_mode:  HTTP auth is required, optional, or disabled.
 *                    (optional means it only occurs when TLS auth fails)
 * server_srp_mode:   SRP is either enabled or disabled on the server.
 *
 * expected_http_result:  This is the expected HTTP status code received on by Curl.
 *                        When SRP fails, this results in a failed TLS session.  Curl
 *                        returns a zero in this case since the HTTP layer can not
 *                        communicate.  If TLS succeeds, but HTTP auth fails, then
 *                        the server should return a HTTP 401 response to the client.
 *                        When enrollment succeeds, the server should send a
 *                        HTTP 200 response.
 *
 *
 */</comment>
<decl_stmt pos:start="268:1" pos:end="334:2"><decl pos:start="268:1" pos:end="334:1"><type pos:start="268:1" pos:end="268:20"><specifier pos:start="268:1" pos:end="268:6">static</specifier> <name pos:start="268:8" pos:end="268:20">us1060_matrix</name></type> <name pos:start="268:22" pos:end="268:34"><name pos:start="268:22" pos:end="268:32">test_matrix</name><index pos:start="268:33" pos:end="268:34">[]</index></name> <init pos:start="268:36" pos:end="334:1">= <expr pos:start="268:38" pos:end="334:1"><block pos:start="268:38" pos:end="334:1">{
    <expr pos:start="269:5" pos:end="269:79"><block pos:start="269:5" pos:end="269:79">{<expr pos:start="269:6" pos:end="269:8"><literal type="string" pos:start="269:6" pos:end="269:8">"1"</literal></expr>, <expr pos:start="269:11" pos:end="269:14"><name pos:start="269:11" pos:end="269:14">NULL</name></expr>, <expr pos:start="269:17" pos:end="269:20"><name pos:start="269:17" pos:end="269:20">NULL</name></expr>, <expr pos:start="269:23" pos:end="269:40"><name pos:start="269:23" pos:end="269:40">US1060_UIDPWD_GOOD</name></expr>, <expr pos:start="269:43" pos:end="269:50"><name pos:start="269:43" pos:end="269:50">SRP_GOOD</name></expr>, <expr pos:start="269:53" pos:end="269:65"><name pos:start="269:53" pos:end="269:65">HTTP_REQUIRED</name></expr>, <expr pos:start="269:68" pos:end="269:73"><name pos:start="269:68" pos:end="269:73">SRP_ON</name></expr>, <expr pos:start="269:76" pos:end="269:78"><literal type="number" pos:start="269:76" pos:end="269:78">200</literal></expr>}</block></expr>,
    <expr pos:start="270:5" pos:end="270:77"><block pos:start="270:5" pos:end="270:77">{<expr pos:start="270:6" pos:end="270:8"><literal type="string" pos:start="270:6" pos:end="270:8">"2"</literal></expr>, <expr pos:start="270:11" pos:end="270:14"><name pos:start="270:11" pos:end="270:14">NULL</name></expr>, <expr pos:start="270:17" pos:end="270:20"><name pos:start="270:17" pos:end="270:20">NULL</name></expr>, <expr pos:start="270:23" pos:end="270:40"><name pos:start="270:23" pos:end="270:40">US1060_UIDPWD_GOOD</name></expr>, <expr pos:start="270:43" pos:end="270:49"><name pos:start="270:43" pos:end="270:49">SRP_BAD</name></expr>,  <expr pos:start="270:53" pos:end="270:65"><name pos:start="270:53" pos:end="270:65">HTTP_REQUIRED</name></expr>, <expr pos:start="270:68" pos:end="270:73"><name pos:start="270:68" pos:end="270:73">SRP_ON</name></expr>, <expr pos:start="270:76" pos:end="270:76"><literal type="number" pos:start="270:76" pos:end="270:76">0</literal></expr>}</block></expr>,
    <expr pos:start="271:5" pos:end="271:79"><block pos:start="271:5" pos:end="271:79">{<expr pos:start="271:6" pos:end="271:8"><literal type="string" pos:start="271:6" pos:end="271:8">"3"</literal></expr>, <expr pos:start="271:11" pos:end="271:14"><name pos:start="271:11" pos:end="271:14">NULL</name></expr>, <expr pos:start="271:17" pos:end="271:20"><name pos:start="271:17" pos:end="271:20">NULL</name></expr>, <expr pos:start="271:23" pos:end="271:40"><name pos:start="271:23" pos:end="271:40">US1060_UIDPWD_GOOD</name></expr>, <expr pos:start="271:43" pos:end="271:50"><name pos:start="271:43" pos:end="271:50">SRP_NONE</name></expr>, <expr pos:start="271:53" pos:end="271:65"><name pos:start="271:53" pos:end="271:65">HTTP_REQUIRED</name></expr>, <expr pos:start="271:68" pos:end="271:73"><name pos:start="271:68" pos:end="271:73">SRP_ON</name></expr>, <expr pos:start="271:76" pos:end="271:78"><literal type="number" pos:start="271:76" pos:end="271:78">200</literal></expr>}</block></expr>,
    <expr pos:start="272:5" pos:end="272:79"><block pos:start="272:5" pos:end="272:79">{<expr pos:start="272:6" pos:end="272:8"><literal type="string" pos:start="272:6" pos:end="272:8">"4"</literal></expr>, <expr pos:start="272:11" pos:end="272:14"><name pos:start="272:11" pos:end="272:14">NULL</name></expr>, <expr pos:start="272:17" pos:end="272:20"><name pos:start="272:17" pos:end="272:20">NULL</name></expr>, <expr pos:start="272:23" pos:end="272:40"><name pos:start="272:23" pos:end="272:40">US1060_UIDPWD_GOOD</name></expr>, <expr pos:start="272:43" pos:end="272:50"><name pos:start="272:43" pos:end="272:50">SRP_GOOD</name></expr>, <expr pos:start="272:53" pos:end="272:65"><name pos:start="272:53" pos:end="272:65">HTTP_OPTIONAL</name></expr>, <expr pos:start="272:68" pos:end="272:73"><name pos:start="272:68" pos:end="272:73">SRP_ON</name></expr>, <expr pos:start="272:76" pos:end="272:78"><literal type="number" pos:start="272:76" pos:end="272:78">200</literal></expr>}</block></expr>,
    <expr pos:start="273:5" pos:end="273:77"><block pos:start="273:5" pos:end="273:77">{<expr pos:start="273:6" pos:end="273:8"><literal type="string" pos:start="273:6" pos:end="273:8">"5"</literal></expr>, <expr pos:start="273:11" pos:end="273:14"><name pos:start="273:11" pos:end="273:14">NULL</name></expr>, <expr pos:start="273:17" pos:end="273:20"><name pos:start="273:17" pos:end="273:20">NULL</name></expr>, <expr pos:start="273:23" pos:end="273:40"><name pos:start="273:23" pos:end="273:40">US1060_UIDPWD_GOOD</name></expr>, <expr pos:start="273:43" pos:end="273:49"><name pos:start="273:43" pos:end="273:49">SRP_BAD</name></expr>,  <expr pos:start="273:53" pos:end="273:65"><name pos:start="273:53" pos:end="273:65">HTTP_OPTIONAL</name></expr>, <expr pos:start="273:68" pos:end="273:73"><name pos:start="273:68" pos:end="273:73">SRP_ON</name></expr>, <expr pos:start="273:76" pos:end="273:76"><literal type="number" pos:start="273:76" pos:end="273:76">0</literal></expr>}</block></expr>,
    <expr pos:start="274:5" pos:end="274:79"><block pos:start="274:5" pos:end="274:79">{<expr pos:start="274:6" pos:end="274:8"><literal type="string" pos:start="274:6" pos:end="274:8">"6"</literal></expr>, <expr pos:start="274:11" pos:end="274:14"><name pos:start="274:11" pos:end="274:14">NULL</name></expr>, <expr pos:start="274:17" pos:end="274:20"><name pos:start="274:17" pos:end="274:20">NULL</name></expr>, <expr pos:start="274:23" pos:end="274:40"><name pos:start="274:23" pos:end="274:40">US1060_UIDPWD_GOOD</name></expr>, <expr pos:start="274:43" pos:end="274:50"><name pos:start="274:43" pos:end="274:50">SRP_NONE</name></expr>, <expr pos:start="274:53" pos:end="274:65"><name pos:start="274:53" pos:end="274:65">HTTP_OPTIONAL</name></expr>, <expr pos:start="274:68" pos:end="274:73"><name pos:start="274:68" pos:end="274:73">SRP_ON</name></expr>, <expr pos:start="274:76" pos:end="274:78"><literal type="number" pos:start="274:76" pos:end="274:78">200</literal></expr>}</block></expr>,
    <expr pos:start="275:5" pos:end="275:79"><block pos:start="275:5" pos:end="275:79">{<expr pos:start="275:6" pos:end="275:8"><literal type="string" pos:start="275:6" pos:end="275:8">"7"</literal></expr>, <expr pos:start="275:11" pos:end="275:14"><name pos:start="275:11" pos:end="275:14">NULL</name></expr>, <expr pos:start="275:17" pos:end="275:20"><name pos:start="275:17" pos:end="275:20">NULL</name></expr>, <expr pos:start="275:23" pos:end="275:40"><name pos:start="275:23" pos:end="275:40">US1060_UIDPWD_GOOD</name></expr>, <expr pos:start="275:43" pos:end="275:50"><name pos:start="275:43" pos:end="275:50">SRP_GOOD</name></expr>, <expr pos:start="275:53" pos:end="275:60"><name pos:start="275:53" pos:end="275:60">HTTP_OFF</name></expr>,      <expr pos:start="275:68" pos:end="275:73"><name pos:start="275:68" pos:end="275:73">SRP_ON</name></expr>, <expr pos:start="275:76" pos:end="275:78"><literal type="number" pos:start="275:76" pos:end="275:78">200</literal></expr>}</block></expr>,
    <expr pos:start="276:5" pos:end="276:77"><block pos:start="276:5" pos:end="276:77">{<expr pos:start="276:6" pos:end="276:8"><literal type="string" pos:start="276:6" pos:end="276:8">"8"</literal></expr>, <expr pos:start="276:11" pos:end="276:14"><name pos:start="276:11" pos:end="276:14">NULL</name></expr>, <expr pos:start="276:17" pos:end="276:20"><name pos:start="276:17" pos:end="276:20">NULL</name></expr>, <expr pos:start="276:23" pos:end="276:40"><name pos:start="276:23" pos:end="276:40">US1060_UIDPWD_GOOD</name></expr>, <expr pos:start="276:43" pos:end="276:49"><name pos:start="276:43" pos:end="276:49">SRP_BAD</name></expr>,  <expr pos:start="276:53" pos:end="276:60"><name pos:start="276:53" pos:end="276:60">HTTP_OFF</name></expr>,      <expr pos:start="276:68" pos:end="276:73"><name pos:start="276:68" pos:end="276:73">SRP_ON</name></expr>, <expr pos:start="276:76" pos:end="276:76"><literal type="number" pos:start="276:76" pos:end="276:76">0</literal></expr>}</block></expr>,
    <expr pos:start="277:5" pos:end="277:79"><block pos:start="277:5" pos:end="277:79">{<expr pos:start="277:6" pos:end="277:8"><literal type="string" pos:start="277:6" pos:end="277:8">"9"</literal></expr>, <expr pos:start="277:11" pos:end="277:14"><name pos:start="277:11" pos:end="277:14">NULL</name></expr>, <expr pos:start="277:17" pos:end="277:20"><name pos:start="277:17" pos:end="277:20">NULL</name></expr>, <expr pos:start="277:23" pos:end="277:40"><name pos:start="277:23" pos:end="277:40">US1060_UIDPWD_GOOD</name></expr>, <expr pos:start="277:43" pos:end="277:50"><name pos:start="277:43" pos:end="277:50">SRP_NONE</name></expr>, <expr pos:start="277:53" pos:end="277:60"><name pos:start="277:53" pos:end="277:60">HTTP_OFF</name></expr>,      <expr pos:start="277:68" pos:end="277:73"><name pos:start="277:68" pos:end="277:73">SRP_ON</name></expr>, <expr pos:start="277:76" pos:end="277:78"><literal type="number" pos:start="277:76" pos:end="277:78">401</literal></expr>}</block></expr>,

    <expr pos:start="279:5" pos:end="279:79"><block pos:start="279:5" pos:end="279:79">{<expr pos:start="279:6" pos:end="279:9"><literal type="string" pos:start="279:6" pos:end="279:9">"11"</literal></expr>, <expr pos:start="279:12" pos:end="279:15"><name pos:start="279:12" pos:end="279:15">NULL</name></expr>, <expr pos:start="279:18" pos:end="279:21"><name pos:start="279:18" pos:end="279:21">NULL</name></expr>, <expr pos:start="279:24" pos:end="279:40"><name pos:start="279:24" pos:end="279:40">US1060_UIDPWD_BAD</name></expr>, <expr pos:start="279:43" pos:end="279:50"><name pos:start="279:43" pos:end="279:50">SRP_GOOD</name></expr>, <expr pos:start="279:53" pos:end="279:65"><name pos:start="279:53" pos:end="279:65">HTTP_REQUIRED</name></expr>, <expr pos:start="279:68" pos:end="279:73"><name pos:start="279:68" pos:end="279:73">SRP_ON</name></expr>, <expr pos:start="279:76" pos:end="279:78"><literal type="number" pos:start="279:76" pos:end="279:78">401</literal></expr>}</block></expr>,
    <expr pos:start="280:5" pos:end="280:77"><block pos:start="280:5" pos:end="280:77">{<expr pos:start="280:6" pos:end="280:9"><literal type="string" pos:start="280:6" pos:end="280:9">"12"</literal></expr>, <expr pos:start="280:12" pos:end="280:15"><name pos:start="280:12" pos:end="280:15">NULL</name></expr>, <expr pos:start="280:18" pos:end="280:21"><name pos:start="280:18" pos:end="280:21">NULL</name></expr>, <expr pos:start="280:24" pos:end="280:40"><name pos:start="280:24" pos:end="280:40">US1060_UIDPWD_BAD</name></expr>, <expr pos:start="280:43" pos:end="280:49"><name pos:start="280:43" pos:end="280:49">SRP_BAD</name></expr>,  <expr pos:start="280:53" pos:end="280:65"><name pos:start="280:53" pos:end="280:65">HTTP_REQUIRED</name></expr>, <expr pos:start="280:68" pos:end="280:73"><name pos:start="280:68" pos:end="280:73">SRP_ON</name></expr>, <expr pos:start="280:76" pos:end="280:76"><literal type="number" pos:start="280:76" pos:end="280:76">0</literal></expr>}</block></expr>,
    <expr pos:start="281:5" pos:end="281:79"><block pos:start="281:5" pos:end="281:79">{<expr pos:start="281:6" pos:end="281:9"><literal type="string" pos:start="281:6" pos:end="281:9">"13"</literal></expr>, <expr pos:start="281:12" pos:end="281:15"><name pos:start="281:12" pos:end="281:15">NULL</name></expr>, <expr pos:start="281:18" pos:end="281:21"><name pos:start="281:18" pos:end="281:21">NULL</name></expr>, <expr pos:start="281:24" pos:end="281:40"><name pos:start="281:24" pos:end="281:40">US1060_UIDPWD_BAD</name></expr>, <expr pos:start="281:43" pos:end="281:50"><name pos:start="281:43" pos:end="281:50">SRP_NONE</name></expr>, <expr pos:start="281:53" pos:end="281:65"><name pos:start="281:53" pos:end="281:65">HTTP_REQUIRED</name></expr>, <expr pos:start="281:68" pos:end="281:73"><name pos:start="281:68" pos:end="281:73">SRP_ON</name></expr>, <expr pos:start="281:76" pos:end="281:78"><literal type="number" pos:start="281:76" pos:end="281:78">401</literal></expr>}</block></expr>,
    <expr pos:start="282:5" pos:end="282:79"><block pos:start="282:5" pos:end="282:79">{<expr pos:start="282:6" pos:end="282:9"><literal type="string" pos:start="282:6" pos:end="282:9">"14"</literal></expr>, <expr pos:start="282:12" pos:end="282:15"><name pos:start="282:12" pos:end="282:15">NULL</name></expr>, <expr pos:start="282:18" pos:end="282:21"><name pos:start="282:18" pos:end="282:21">NULL</name></expr>, <expr pos:start="282:24" pos:end="282:40"><name pos:start="282:24" pos:end="282:40">US1060_UIDPWD_BAD</name></expr>, <expr pos:start="282:43" pos:end="282:50"><name pos:start="282:43" pos:end="282:50">SRP_GOOD</name></expr>, <expr pos:start="282:53" pos:end="282:65"><name pos:start="282:53" pos:end="282:65">HTTP_OPTIONAL</name></expr>, <expr pos:start="282:68" pos:end="282:73"><name pos:start="282:68" pos:end="282:73">SRP_ON</name></expr>, <expr pos:start="282:76" pos:end="282:78"><literal type="number" pos:start="282:76" pos:end="282:78">200</literal></expr>}</block></expr>,
    <expr pos:start="283:5" pos:end="283:77"><block pos:start="283:5" pos:end="283:77">{<expr pos:start="283:6" pos:end="283:9"><literal type="string" pos:start="283:6" pos:end="283:9">"15"</literal></expr>, <expr pos:start="283:12" pos:end="283:15"><name pos:start="283:12" pos:end="283:15">NULL</name></expr>, <expr pos:start="283:18" pos:end="283:21"><name pos:start="283:18" pos:end="283:21">NULL</name></expr>, <expr pos:start="283:24" pos:end="283:40"><name pos:start="283:24" pos:end="283:40">US1060_UIDPWD_BAD</name></expr>, <expr pos:start="283:43" pos:end="283:49"><name pos:start="283:43" pos:end="283:49">SRP_BAD</name></expr>,  <expr pos:start="283:53" pos:end="283:65"><name pos:start="283:53" pos:end="283:65">HTTP_OPTIONAL</name></expr>, <expr pos:start="283:68" pos:end="283:73"><name pos:start="283:68" pos:end="283:73">SRP_ON</name></expr>, <expr pos:start="283:76" pos:end="283:76"><literal type="number" pos:start="283:76" pos:end="283:76">0</literal></expr>}</block></expr>,
    <expr pos:start="284:5" pos:end="284:79"><block pos:start="284:5" pos:end="284:79">{<expr pos:start="284:6" pos:end="284:9"><literal type="string" pos:start="284:6" pos:end="284:9">"16"</literal></expr>, <expr pos:start="284:12" pos:end="284:15"><name pos:start="284:12" pos:end="284:15">NULL</name></expr>, <expr pos:start="284:18" pos:end="284:21"><name pos:start="284:18" pos:end="284:21">NULL</name></expr>, <expr pos:start="284:24" pos:end="284:40"><name pos:start="284:24" pos:end="284:40">US1060_UIDPWD_BAD</name></expr>, <expr pos:start="284:43" pos:end="284:50"><name pos:start="284:43" pos:end="284:50">SRP_NONE</name></expr>, <expr pos:start="284:53" pos:end="284:65"><name pos:start="284:53" pos:end="284:65">HTTP_OPTIONAL</name></expr>, <expr pos:start="284:68" pos:end="284:73"><name pos:start="284:68" pos:end="284:73">SRP_ON</name></expr>, <expr pos:start="284:76" pos:end="284:78"><literal type="number" pos:start="284:76" pos:end="284:78">401</literal></expr>}</block></expr>,
    <expr pos:start="285:5" pos:end="285:79"><block pos:start="285:5" pos:end="285:79">{<expr pos:start="285:6" pos:end="285:9"><literal type="string" pos:start="285:6" pos:end="285:9">"17"</literal></expr>, <expr pos:start="285:12" pos:end="285:15"><name pos:start="285:12" pos:end="285:15">NULL</name></expr>, <expr pos:start="285:18" pos:end="285:21"><name pos:start="285:18" pos:end="285:21">NULL</name></expr>, <expr pos:start="285:24" pos:end="285:40"><name pos:start="285:24" pos:end="285:40">US1060_UIDPWD_BAD</name></expr>, <expr pos:start="285:43" pos:end="285:50"><name pos:start="285:43" pos:end="285:50">SRP_GOOD</name></expr>, <expr pos:start="285:53" pos:end="285:60"><name pos:start="285:53" pos:end="285:60">HTTP_OFF</name></expr>,      <expr pos:start="285:68" pos:end="285:73"><name pos:start="285:68" pos:end="285:73">SRP_ON</name></expr>, <expr pos:start="285:76" pos:end="285:78"><literal type="number" pos:start="285:76" pos:end="285:78">200</literal></expr>}</block></expr>,
    <expr pos:start="286:5" pos:end="286:77"><block pos:start="286:5" pos:end="286:77">{<expr pos:start="286:6" pos:end="286:9"><literal type="string" pos:start="286:6" pos:end="286:9">"18"</literal></expr>, <expr pos:start="286:12" pos:end="286:15"><name pos:start="286:12" pos:end="286:15">NULL</name></expr>, <expr pos:start="286:18" pos:end="286:21"><name pos:start="286:18" pos:end="286:21">NULL</name></expr>, <expr pos:start="286:24" pos:end="286:40"><name pos:start="286:24" pos:end="286:40">US1060_UIDPWD_BAD</name></expr>, <expr pos:start="286:43" pos:end="286:49"><name pos:start="286:43" pos:end="286:49">SRP_BAD</name></expr>,  <expr pos:start="286:53" pos:end="286:60"><name pos:start="286:53" pos:end="286:60">HTTP_OFF</name></expr>,      <expr pos:start="286:68" pos:end="286:73"><name pos:start="286:68" pos:end="286:73">SRP_ON</name></expr>, <expr pos:start="286:76" pos:end="286:76"><literal type="number" pos:start="286:76" pos:end="286:76">0</literal></expr>}</block></expr>,
    <expr pos:start="287:5" pos:end="287:79"><block pos:start="287:5" pos:end="287:79">{<expr pos:start="287:6" pos:end="287:9"><literal type="string" pos:start="287:6" pos:end="287:9">"19"</literal></expr>, <expr pos:start="287:12" pos:end="287:15"><name pos:start="287:12" pos:end="287:15">NULL</name></expr>, <expr pos:start="287:18" pos:end="287:21"><name pos:start="287:18" pos:end="287:21">NULL</name></expr>, <expr pos:start="287:24" pos:end="287:40"><name pos:start="287:24" pos:end="287:40">US1060_UIDPWD_BAD</name></expr>, <expr pos:start="287:43" pos:end="287:50"><name pos:start="287:43" pos:end="287:50">SRP_NONE</name></expr>, <expr pos:start="287:53" pos:end="287:60"><name pos:start="287:53" pos:end="287:60">HTTP_OFF</name></expr>,      <expr pos:start="287:68" pos:end="287:73"><name pos:start="287:68" pos:end="287:73">SRP_ON</name></expr>, <expr pos:start="287:76" pos:end="287:78"><literal type="number" pos:start="287:76" pos:end="287:78">401</literal></expr>}</block></expr>,

    <expr pos:start="289:5" pos:end="289:79"><block pos:start="289:5" pos:end="289:79">{<expr pos:start="289:6" pos:end="289:9"><literal type="string" pos:start="289:6" pos:end="289:9">"21"</literal></expr>, <expr pos:start="289:12" pos:end="289:15"><name pos:start="289:12" pos:end="289:15">NULL</name></expr>, <expr pos:start="289:18" pos:end="289:21"><name pos:start="289:18" pos:end="289:21">NULL</name></expr>, <expr pos:start="289:24" pos:end="289:41"><name pos:start="289:24" pos:end="289:41">US1060_UIDPWD_GOOD</name></expr>, <expr pos:start="289:44" pos:end="289:51"><name pos:start="289:44" pos:end="289:51">SRP_GOOD</name></expr>, <expr pos:start="289:54" pos:end="289:66"><name pos:start="289:54" pos:end="289:66">HTTP_REQUIRED</name></expr>, <expr pos:start="289:69" pos:end="289:75"><name pos:start="289:69" pos:end="289:75">SRP_OFF</name></expr>, <expr pos:start="289:78" pos:end="289:78"><literal type="number" pos:start="289:78" pos:end="289:78">0</literal></expr>}</block></expr>,
    <expr pos:start="290:5" pos:end="290:79"><block pos:start="290:5" pos:end="290:79">{<expr pos:start="290:6" pos:end="290:9"><literal type="string" pos:start="290:6" pos:end="290:9">"22"</literal></expr>, <expr pos:start="290:12" pos:end="290:15"><name pos:start="290:12" pos:end="290:15">NULL</name></expr>, <expr pos:start="290:18" pos:end="290:21"><name pos:start="290:18" pos:end="290:21">NULL</name></expr>, <expr pos:start="290:24" pos:end="290:41"><name pos:start="290:24" pos:end="290:41">US1060_UIDPWD_GOOD</name></expr>, <expr pos:start="290:44" pos:end="290:50"><name pos:start="290:44" pos:end="290:50">SRP_BAD</name></expr>,  <expr pos:start="290:54" pos:end="290:66"><name pos:start="290:54" pos:end="290:66">HTTP_REQUIRED</name></expr>, <expr pos:start="290:69" pos:end="290:75"><name pos:start="290:69" pos:end="290:75">SRP_OFF</name></expr>, <expr pos:start="290:78" pos:end="290:78"><literal type="number" pos:start="290:78" pos:end="290:78">0</literal></expr>}</block></expr>,
    <expr pos:start="291:5" pos:end="291:81"><block pos:start="291:5" pos:end="291:81">{<expr pos:start="291:6" pos:end="291:9"><literal type="string" pos:start="291:6" pos:end="291:9">"23"</literal></expr>, <expr pos:start="291:12" pos:end="291:15"><name pos:start="291:12" pos:end="291:15">NULL</name></expr>, <expr pos:start="291:18" pos:end="291:21"><name pos:start="291:18" pos:end="291:21">NULL</name></expr>, <expr pos:start="291:24" pos:end="291:41"><name pos:start="291:24" pos:end="291:41">US1060_UIDPWD_GOOD</name></expr>, <expr pos:start="291:44" pos:end="291:51"><name pos:start="291:44" pos:end="291:51">SRP_NONE</name></expr>, <expr pos:start="291:54" pos:end="291:66"><name pos:start="291:54" pos:end="291:66">HTTP_REQUIRED</name></expr>, <expr pos:start="291:69" pos:end="291:75"><name pos:start="291:69" pos:end="291:75">SRP_OFF</name></expr>, <expr pos:start="291:78" pos:end="291:80"><literal type="number" pos:start="291:78" pos:end="291:80">200</literal></expr>}</block></expr>,
    <expr pos:start="292:5" pos:end="292:79"><block pos:start="292:5" pos:end="292:79">{<expr pos:start="292:6" pos:end="292:9"><literal type="string" pos:start="292:6" pos:end="292:9">"24"</literal></expr>, <expr pos:start="292:12" pos:end="292:15"><name pos:start="292:12" pos:end="292:15">NULL</name></expr>, <expr pos:start="292:18" pos:end="292:21"><name pos:start="292:18" pos:end="292:21">NULL</name></expr>, <expr pos:start="292:24" pos:end="292:41"><name pos:start="292:24" pos:end="292:41">US1060_UIDPWD_GOOD</name></expr>, <expr pos:start="292:44" pos:end="292:51"><name pos:start="292:44" pos:end="292:51">SRP_GOOD</name></expr>, <expr pos:start="292:54" pos:end="292:66"><name pos:start="292:54" pos:end="292:66">HTTP_OPTIONAL</name></expr>, <expr pos:start="292:69" pos:end="292:75"><name pos:start="292:69" pos:end="292:75">SRP_OFF</name></expr>, <expr pos:start="292:78" pos:end="292:78"><literal type="number" pos:start="292:78" pos:end="292:78">0</literal></expr>}</block></expr>,
    <expr pos:start="293:5" pos:end="293:79"><block pos:start="293:5" pos:end="293:79">{<expr pos:start="293:6" pos:end="293:9"><literal type="string" pos:start="293:6" pos:end="293:9">"25"</literal></expr>, <expr pos:start="293:12" pos:end="293:15"><name pos:start="293:12" pos:end="293:15">NULL</name></expr>, <expr pos:start="293:18" pos:end="293:21"><name pos:start="293:18" pos:end="293:21">NULL</name></expr>, <expr pos:start="293:24" pos:end="293:41"><name pos:start="293:24" pos:end="293:41">US1060_UIDPWD_GOOD</name></expr>, <expr pos:start="293:44" pos:end="293:50"><name pos:start="293:44" pos:end="293:50">SRP_BAD</name></expr>,  <expr pos:start="293:54" pos:end="293:66"><name pos:start="293:54" pos:end="293:66">HTTP_OPTIONAL</name></expr>, <expr pos:start="293:69" pos:end="293:75"><name pos:start="293:69" pos:end="293:75">SRP_OFF</name></expr>, <expr pos:start="293:78" pos:end="293:78"><literal type="number" pos:start="293:78" pos:end="293:78">0</literal></expr>}</block></expr>,
    <expr pos:start="294:5" pos:end="294:81"><block pos:start="294:5" pos:end="294:81">{<expr pos:start="294:6" pos:end="294:9"><literal type="string" pos:start="294:6" pos:end="294:9">"26"</literal></expr>, <expr pos:start="294:12" pos:end="294:15"><name pos:start="294:12" pos:end="294:15">NULL</name></expr>, <expr pos:start="294:18" pos:end="294:21"><name pos:start="294:18" pos:end="294:21">NULL</name></expr>, <expr pos:start="294:24" pos:end="294:41"><name pos:start="294:24" pos:end="294:41">US1060_UIDPWD_GOOD</name></expr>, <expr pos:start="294:44" pos:end="294:51"><name pos:start="294:44" pos:end="294:51">SRP_NONE</name></expr>, <expr pos:start="294:54" pos:end="294:66"><name pos:start="294:54" pos:end="294:66">HTTP_OPTIONAL</name></expr>, <expr pos:start="294:69" pos:end="294:75"><name pos:start="294:69" pos:end="294:75">SRP_OFF</name></expr>, <expr pos:start="294:78" pos:end="294:80"><literal type="number" pos:start="294:78" pos:end="294:80">200</literal></expr>}</block></expr>,
    <expr pos:start="295:5" pos:end="295:79"><block pos:start="295:5" pos:end="295:79">{<expr pos:start="295:6" pos:end="295:9"><literal type="string" pos:start="295:6" pos:end="295:9">"27"</literal></expr>, <expr pos:start="295:12" pos:end="295:15"><name pos:start="295:12" pos:end="295:15">NULL</name></expr>, <expr pos:start="295:18" pos:end="295:21"><name pos:start="295:18" pos:end="295:21">NULL</name></expr>, <expr pos:start="295:24" pos:end="295:41"><name pos:start="295:24" pos:end="295:41">US1060_UIDPWD_GOOD</name></expr>, <expr pos:start="295:44" pos:end="295:51"><name pos:start="295:44" pos:end="295:51">SRP_GOOD</name></expr>, <expr pos:start="295:54" pos:end="295:61"><name pos:start="295:54" pos:end="295:61">HTTP_OFF</name></expr>,      <expr pos:start="295:69" pos:end="295:75"><name pos:start="295:69" pos:end="295:75">SRP_OFF</name></expr>, <expr pos:start="295:78" pos:end="295:78"><literal type="number" pos:start="295:78" pos:end="295:78">0</literal></expr>}</block></expr>,
    <expr pos:start="296:5" pos:end="296:79"><block pos:start="296:5" pos:end="296:79">{<expr pos:start="296:6" pos:end="296:9"><literal type="string" pos:start="296:6" pos:end="296:9">"28"</literal></expr>, <expr pos:start="296:12" pos:end="296:15"><name pos:start="296:12" pos:end="296:15">NULL</name></expr>, <expr pos:start="296:18" pos:end="296:21"><name pos:start="296:18" pos:end="296:21">NULL</name></expr>, <expr pos:start="296:24" pos:end="296:41"><name pos:start="296:24" pos:end="296:41">US1060_UIDPWD_GOOD</name></expr>, <expr pos:start="296:44" pos:end="296:50"><name pos:start="296:44" pos:end="296:50">SRP_BAD</name></expr>,  <expr pos:start="296:54" pos:end="296:61"><name pos:start="296:54" pos:end="296:61">HTTP_OFF</name></expr>,      <expr pos:start="296:69" pos:end="296:75"><name pos:start="296:69" pos:end="296:75">SRP_OFF</name></expr>, <expr pos:start="296:78" pos:end="296:78"><literal type="number" pos:start="296:78" pos:end="296:78">0</literal></expr>}</block></expr>,
    <expr pos:start="297:5" pos:end="297:81"><block pos:start="297:5" pos:end="297:81">{<expr pos:start="297:6" pos:end="297:9"><literal type="string" pos:start="297:6" pos:end="297:9">"29"</literal></expr>, <expr pos:start="297:12" pos:end="297:15"><name pos:start="297:12" pos:end="297:15">NULL</name></expr>, <expr pos:start="297:18" pos:end="297:21"><name pos:start="297:18" pos:end="297:21">NULL</name></expr>, <expr pos:start="297:24" pos:end="297:41"><name pos:start="297:24" pos:end="297:41">US1060_UIDPWD_GOOD</name></expr>, <expr pos:start="297:44" pos:end="297:51"><name pos:start="297:44" pos:end="297:51">SRP_NONE</name></expr>, <expr pos:start="297:54" pos:end="297:61"><name pos:start="297:54" pos:end="297:61">HTTP_OFF</name></expr>,      <expr pos:start="297:69" pos:end="297:75"><name pos:start="297:69" pos:end="297:75">SRP_OFF</name></expr>, <expr pos:start="297:78" pos:end="297:80"><literal type="number" pos:start="297:78" pos:end="297:80">401</literal></expr>}</block></expr>,

    <expr pos:start="299:5" pos:end="299:78"><block pos:start="299:5" pos:end="299:78">{<expr pos:start="299:6" pos:end="299:9"><literal type="string" pos:start="299:6" pos:end="299:9">"31"</literal></expr>, <expr pos:start="299:12" pos:end="299:15"><name pos:start="299:12" pos:end="299:15">NULL</name></expr>, <expr pos:start="299:18" pos:end="299:21"><name pos:start="299:18" pos:end="299:21">NULL</name></expr>, <expr pos:start="299:24" pos:end="299:40"><name pos:start="299:24" pos:end="299:40">US1060_UIDPWD_BAD</name></expr>, <expr pos:start="299:43" pos:end="299:50"><name pos:start="299:43" pos:end="299:50">SRP_GOOD</name></expr>, <expr pos:start="299:53" pos:end="299:65"><name pos:start="299:53" pos:end="299:65">HTTP_REQUIRED</name></expr>, <expr pos:start="299:68" pos:end="299:74"><name pos:start="299:68" pos:end="299:74">SRP_OFF</name></expr>, <expr pos:start="299:77" pos:end="299:77"><literal type="number" pos:start="299:77" pos:end="299:77">0</literal></expr>}</block></expr>,
    <expr pos:start="300:5" pos:end="300:78"><block pos:start="300:5" pos:end="300:78">{<expr pos:start="300:6" pos:end="300:9"><literal type="string" pos:start="300:6" pos:end="300:9">"32"</literal></expr>, <expr pos:start="300:12" pos:end="300:15"><name pos:start="300:12" pos:end="300:15">NULL</name></expr>, <expr pos:start="300:18" pos:end="300:21"><name pos:start="300:18" pos:end="300:21">NULL</name></expr>, <expr pos:start="300:24" pos:end="300:40"><name pos:start="300:24" pos:end="300:40">US1060_UIDPWD_BAD</name></expr>, <expr pos:start="300:43" pos:end="300:49"><name pos:start="300:43" pos:end="300:49">SRP_BAD</name></expr>,  <expr pos:start="300:53" pos:end="300:65"><name pos:start="300:53" pos:end="300:65">HTTP_REQUIRED</name></expr>, <expr pos:start="300:68" pos:end="300:74"><name pos:start="300:68" pos:end="300:74">SRP_OFF</name></expr>, <expr pos:start="300:77" pos:end="300:77"><literal type="number" pos:start="300:77" pos:end="300:77">0</literal></expr>}</block></expr>,
    <expr pos:start="301:5" pos:end="301:80"><block pos:start="301:5" pos:end="301:80">{<expr pos:start="301:6" pos:end="301:9"><literal type="string" pos:start="301:6" pos:end="301:9">"33"</literal></expr>, <expr pos:start="301:12" pos:end="301:15"><name pos:start="301:12" pos:end="301:15">NULL</name></expr>, <expr pos:start="301:18" pos:end="301:21"><name pos:start="301:18" pos:end="301:21">NULL</name></expr>, <expr pos:start="301:24" pos:end="301:40"><name pos:start="301:24" pos:end="301:40">US1060_UIDPWD_BAD</name></expr>, <expr pos:start="301:43" pos:end="301:50"><name pos:start="301:43" pos:end="301:50">SRP_NONE</name></expr>, <expr pos:start="301:53" pos:end="301:65"><name pos:start="301:53" pos:end="301:65">HTTP_REQUIRED</name></expr>, <expr pos:start="301:68" pos:end="301:74"><name pos:start="301:68" pos:end="301:74">SRP_OFF</name></expr>, <expr pos:start="301:77" pos:end="301:79"><literal type="number" pos:start="301:77" pos:end="301:79">401</literal></expr>}</block></expr>,
    <expr pos:start="302:5" pos:end="302:78"><block pos:start="302:5" pos:end="302:78">{<expr pos:start="302:6" pos:end="302:9"><literal type="string" pos:start="302:6" pos:end="302:9">"34"</literal></expr>, <expr pos:start="302:12" pos:end="302:15"><name pos:start="302:12" pos:end="302:15">NULL</name></expr>, <expr pos:start="302:18" pos:end="302:21"><name pos:start="302:18" pos:end="302:21">NULL</name></expr>, <expr pos:start="302:24" pos:end="302:40"><name pos:start="302:24" pos:end="302:40">US1060_UIDPWD_BAD</name></expr>, <expr pos:start="302:43" pos:end="302:50"><name pos:start="302:43" pos:end="302:50">SRP_GOOD</name></expr>, <expr pos:start="302:53" pos:end="302:65"><name pos:start="302:53" pos:end="302:65">HTTP_OPTIONAL</name></expr>, <expr pos:start="302:68" pos:end="302:74"><name pos:start="302:68" pos:end="302:74">SRP_OFF</name></expr>, <expr pos:start="302:77" pos:end="302:77"><literal type="number" pos:start="302:77" pos:end="302:77">0</literal></expr>}</block></expr>,
    <expr pos:start="303:5" pos:end="303:78"><block pos:start="303:5" pos:end="303:78">{<expr pos:start="303:6" pos:end="303:9"><literal type="string" pos:start="303:6" pos:end="303:9">"35"</literal></expr>, <expr pos:start="303:12" pos:end="303:15"><name pos:start="303:12" pos:end="303:15">NULL</name></expr>, <expr pos:start="303:18" pos:end="303:21"><name pos:start="303:18" pos:end="303:21">NULL</name></expr>, <expr pos:start="303:24" pos:end="303:40"><name pos:start="303:24" pos:end="303:40">US1060_UIDPWD_BAD</name></expr>, <expr pos:start="303:43" pos:end="303:49"><name pos:start="303:43" pos:end="303:49">SRP_BAD</name></expr>,  <expr pos:start="303:53" pos:end="303:65"><name pos:start="303:53" pos:end="303:65">HTTP_OPTIONAL</name></expr>, <expr pos:start="303:68" pos:end="303:74"><name pos:start="303:68" pos:end="303:74">SRP_OFF</name></expr>, <expr pos:start="303:77" pos:end="303:77"><literal type="number" pos:start="303:77" pos:end="303:77">0</literal></expr>}</block></expr>,
    <expr pos:start="304:5" pos:end="304:80"><block pos:start="304:5" pos:end="304:80">{<expr pos:start="304:6" pos:end="304:9"><literal type="string" pos:start="304:6" pos:end="304:9">"36"</literal></expr>, <expr pos:start="304:12" pos:end="304:15"><name pos:start="304:12" pos:end="304:15">NULL</name></expr>, <expr pos:start="304:18" pos:end="304:21"><name pos:start="304:18" pos:end="304:21">NULL</name></expr>, <expr pos:start="304:24" pos:end="304:40"><name pos:start="304:24" pos:end="304:40">US1060_UIDPWD_BAD</name></expr>, <expr pos:start="304:43" pos:end="304:50"><name pos:start="304:43" pos:end="304:50">SRP_NONE</name></expr>, <expr pos:start="304:53" pos:end="304:65"><name pos:start="304:53" pos:end="304:65">HTTP_OPTIONAL</name></expr>, <expr pos:start="304:68" pos:end="304:74"><name pos:start="304:68" pos:end="304:74">SRP_OFF</name></expr>, <expr pos:start="304:77" pos:end="304:79"><literal type="number" pos:start="304:77" pos:end="304:79">401</literal></expr>}</block></expr>,
    <expr pos:start="305:5" pos:end="305:78"><block pos:start="305:5" pos:end="305:78">{<expr pos:start="305:6" pos:end="305:9"><literal type="string" pos:start="305:6" pos:end="305:9">"37"</literal></expr>, <expr pos:start="305:12" pos:end="305:15"><name pos:start="305:12" pos:end="305:15">NULL</name></expr>, <expr pos:start="305:18" pos:end="305:21"><name pos:start="305:18" pos:end="305:21">NULL</name></expr>, <expr pos:start="305:24" pos:end="305:40"><name pos:start="305:24" pos:end="305:40">US1060_UIDPWD_BAD</name></expr>, <expr pos:start="305:43" pos:end="305:50"><name pos:start="305:43" pos:end="305:50">SRP_GOOD</name></expr>, <expr pos:start="305:53" pos:end="305:60"><name pos:start="305:53" pos:end="305:60">HTTP_OFF</name></expr>,      <expr pos:start="305:68" pos:end="305:74"><name pos:start="305:68" pos:end="305:74">SRP_OFF</name></expr>, <expr pos:start="305:77" pos:end="305:77"><literal type="number" pos:start="305:77" pos:end="305:77">0</literal></expr>}</block></expr>,
    <expr pos:start="306:5" pos:end="306:78"><block pos:start="306:5" pos:end="306:78">{<expr pos:start="306:6" pos:end="306:9"><literal type="string" pos:start="306:6" pos:end="306:9">"38"</literal></expr>, <expr pos:start="306:12" pos:end="306:15"><name pos:start="306:12" pos:end="306:15">NULL</name></expr>, <expr pos:start="306:18" pos:end="306:21"><name pos:start="306:18" pos:end="306:21">NULL</name></expr>, <expr pos:start="306:24" pos:end="306:40"><name pos:start="306:24" pos:end="306:40">US1060_UIDPWD_BAD</name></expr>, <expr pos:start="306:43" pos:end="306:49"><name pos:start="306:43" pos:end="306:49">SRP_BAD</name></expr>,  <expr pos:start="306:53" pos:end="306:60"><name pos:start="306:53" pos:end="306:60">HTTP_OFF</name></expr>,      <expr pos:start="306:68" pos:end="306:74"><name pos:start="306:68" pos:end="306:74">SRP_OFF</name></expr>, <expr pos:start="306:77" pos:end="306:77"><literal type="number" pos:start="306:77" pos:end="306:77">0</literal></expr>}</block></expr>,
    <expr pos:start="307:5" pos:end="307:80"><block pos:start="307:5" pos:end="307:80">{<expr pos:start="307:6" pos:end="307:9"><literal type="string" pos:start="307:6" pos:end="307:9">"39"</literal></expr>, <expr pos:start="307:12" pos:end="307:15"><name pos:start="307:12" pos:end="307:15">NULL</name></expr>, <expr pos:start="307:18" pos:end="307:21"><name pos:start="307:18" pos:end="307:21">NULL</name></expr>, <expr pos:start="307:24" pos:end="307:40"><name pos:start="307:24" pos:end="307:40">US1060_UIDPWD_BAD</name></expr>, <expr pos:start="307:43" pos:end="307:50"><name pos:start="307:43" pos:end="307:50">SRP_NONE</name></expr>, <expr pos:start="307:53" pos:end="307:60"><name pos:start="307:53" pos:end="307:60">HTTP_OFF</name></expr>,      <expr pos:start="307:68" pos:end="307:74"><name pos:start="307:68" pos:end="307:74">SRP_OFF</name></expr>, <expr pos:start="307:77" pos:end="307:79"><literal type="number" pos:start="307:77" pos:end="307:79">401</literal></expr>}</block></expr>,

    <expr pos:start="309:5" pos:end="309:112"><block pos:start="309:5" pos:end="309:112">{<expr pos:start="309:6" pos:end="309:9"><literal type="string" pos:start="309:6" pos:end="309:9">"40"</literal></expr>, <expr pos:start="309:12" pos:end="309:31"><name pos:start="309:12" pos:end="309:31">US1060_EXPLICIT_CERT</name></expr>, <expr pos:start="309:34" pos:end="309:52"><name pos:start="309:34" pos:end="309:52">US1060_EXPLICIT_KEY</name></expr>, <expr pos:start="309:55" pos:end="309:72"><name pos:start="309:55" pos:end="309:72">US1060_UIDPWD_GOOD</name></expr>, <expr pos:start="309:75" pos:end="309:82"><name pos:start="309:75" pos:end="309:82">SRP_NONE</name></expr>, <expr pos:start="309:85" pos:end="309:97"><name pos:start="309:85" pos:end="309:97">HTTP_REQUIRED</name></expr>, <expr pos:start="309:100" pos:end="309:105"><name pos:start="309:100" pos:end="309:105">SRP_ON</name></expr>,  <expr pos:start="309:109" pos:end="309:111"><literal type="number" pos:start="309:109" pos:end="309:111">200</literal></expr>}</block></expr>,
    <expr pos:start="310:5" pos:end="310:112"><block pos:start="310:5" pos:end="310:112">{<expr pos:start="310:6" pos:end="310:9"><literal type="string" pos:start="310:6" pos:end="310:9">"41"</literal></expr>, <expr pos:start="310:12" pos:end="310:31"><name pos:start="310:12" pos:end="310:31">US1060_EXPLICIT_CERT</name></expr>, <expr pos:start="310:34" pos:end="310:52"><name pos:start="310:34" pos:end="310:52">US1060_EXPLICIT_KEY</name></expr>, <expr pos:start="310:55" pos:end="310:71"><name pos:start="310:55" pos:end="310:71">US1060_UIDPWD_BAD</name></expr>,  <expr pos:start="310:75" pos:end="310:82"><name pos:start="310:75" pos:end="310:82">SRP_NONE</name></expr>, <expr pos:start="310:85" pos:end="310:97"><name pos:start="310:85" pos:end="310:97">HTTP_REQUIRED</name></expr>, <expr pos:start="310:100" pos:end="310:105"><name pos:start="310:100" pos:end="310:105">SRP_ON</name></expr>,  <expr pos:start="310:109" pos:end="310:111"><literal type="number" pos:start="310:109" pos:end="310:111">401</literal></expr>}</block></expr>,
    <expr pos:start="311:5" pos:end="311:112"><block pos:start="311:5" pos:end="311:112">{<expr pos:start="311:6" pos:end="311:9"><literal type="string" pos:start="311:6" pos:end="311:9">"42"</literal></expr>, <expr pos:start="311:12" pos:end="311:31"><name pos:start="311:12" pos:end="311:31">US1060_EXPLICIT_CERT</name></expr>, <expr pos:start="311:34" pos:end="311:52"><name pos:start="311:34" pos:end="311:52">US1060_EXPLICIT_KEY</name></expr>, <expr pos:start="311:55" pos:end="311:72"><name pos:start="311:55" pos:end="311:72">US1060_UIDPWD_GOOD</name></expr>, <expr pos:start="311:75" pos:end="311:82"><name pos:start="311:75" pos:end="311:82">SRP_NONE</name></expr>, <expr pos:start="311:85" pos:end="311:97"><name pos:start="311:85" pos:end="311:97">HTTP_OPTIONAL</name></expr>, <expr pos:start="311:100" pos:end="311:105"><name pos:start="311:100" pos:end="311:105">SRP_ON</name></expr>,  <expr pos:start="311:109" pos:end="311:111"><literal type="number" pos:start="311:109" pos:end="311:111">200</literal></expr>}</block></expr>,
    <expr pos:start="312:5" pos:end="312:112"><block pos:start="312:5" pos:end="312:112">{<expr pos:start="312:6" pos:end="312:9"><literal type="string" pos:start="312:6" pos:end="312:9">"43"</literal></expr>, <expr pos:start="312:12" pos:end="312:31"><name pos:start="312:12" pos:end="312:31">US1060_EXPLICIT_CERT</name></expr>, <expr pos:start="312:34" pos:end="312:52"><name pos:start="312:34" pos:end="312:52">US1060_EXPLICIT_KEY</name></expr>, <expr pos:start="312:55" pos:end="312:71"><name pos:start="312:55" pos:end="312:71">US1060_UIDPWD_BAD</name></expr>,  <expr pos:start="312:75" pos:end="312:82"><name pos:start="312:75" pos:end="312:82">SRP_NONE</name></expr>, <expr pos:start="312:85" pos:end="312:97"><name pos:start="312:85" pos:end="312:97">HTTP_OPTIONAL</name></expr>, <expr pos:start="312:100" pos:end="312:105"><name pos:start="312:100" pos:end="312:105">SRP_ON</name></expr>,  <expr pos:start="312:109" pos:end="312:111"><literal type="number" pos:start="312:109" pos:end="312:111">200</literal></expr>}</block></expr>,
    <expr pos:start="313:5" pos:end="313:112"><block pos:start="313:5" pos:end="313:112">{<expr pos:start="313:6" pos:end="313:9"><literal type="string" pos:start="313:6" pos:end="313:9">"44"</literal></expr>, <expr pos:start="313:12" pos:end="313:31"><name pos:start="313:12" pos:end="313:31">US1060_EXPLICIT_CERT</name></expr>, <expr pos:start="313:34" pos:end="313:52"><name pos:start="313:34" pos:end="313:52">US1060_EXPLICIT_KEY</name></expr>, <expr pos:start="313:55" pos:end="313:72"><name pos:start="313:55" pos:end="313:72">US1060_UIDPWD_GOOD</name></expr>, <expr pos:start="313:75" pos:end="313:82"><name pos:start="313:75" pos:end="313:82">SRP_NONE</name></expr>, <expr pos:start="313:85" pos:end="313:92"><name pos:start="313:85" pos:end="313:92">HTTP_OFF</name></expr>,      <expr pos:start="313:100" pos:end="313:105"><name pos:start="313:100" pos:end="313:105">SRP_ON</name></expr>,  <expr pos:start="313:109" pos:end="313:111"><literal type="number" pos:start="313:109" pos:end="313:111">200</literal></expr>}</block></expr>,
    <expr pos:start="314:5" pos:end="314:112"><block pos:start="314:5" pos:end="314:112">{<expr pos:start="314:6" pos:end="314:9"><literal type="string" pos:start="314:6" pos:end="314:9">"45"</literal></expr>, <expr pos:start="314:12" pos:end="314:31"><name pos:start="314:12" pos:end="314:31">US1060_EXPLICIT_CERT</name></expr>, <expr pos:start="314:34" pos:end="314:52"><name pos:start="314:34" pos:end="314:52">US1060_EXPLICIT_KEY</name></expr>, <expr pos:start="314:55" pos:end="314:71"><name pos:start="314:55" pos:end="314:71">US1060_UIDPWD_BAD</name></expr>,  <expr pos:start="314:75" pos:end="314:82"><name pos:start="314:75" pos:end="314:82">SRP_NONE</name></expr>, <expr pos:start="314:85" pos:end="314:92"><name pos:start="314:85" pos:end="314:92">HTTP_OFF</name></expr>,      <expr pos:start="314:100" pos:end="314:105"><name pos:start="314:100" pos:end="314:105">SRP_ON</name></expr>,  <expr pos:start="314:109" pos:end="314:111"><literal type="number" pos:start="314:109" pos:end="314:111">200</literal></expr>}</block></expr>,
    <expr pos:start="315:5" pos:end="315:112"><block pos:start="315:5" pos:end="315:112">{<expr pos:start="315:6" pos:end="315:9"><literal type="string" pos:start="315:6" pos:end="315:9">"46"</literal></expr>, <expr pos:start="315:12" pos:end="315:31"><name pos:start="315:12" pos:end="315:31">US1060_EXPLICIT_CERT</name></expr>, <expr pos:start="315:34" pos:end="315:52"><name pos:start="315:34" pos:end="315:52">US1060_EXPLICIT_KEY</name></expr>, <expr pos:start="315:55" pos:end="315:72"><name pos:start="315:55" pos:end="315:72">US1060_UIDPWD_GOOD</name></expr>, <expr pos:start="315:75" pos:end="315:82"><name pos:start="315:75" pos:end="315:82">SRP_NONE</name></expr>, <expr pos:start="315:85" pos:end="315:97"><name pos:start="315:85" pos:end="315:97">HTTP_REQUIRED</name></expr>, <expr pos:start="315:100" pos:end="315:106"><name pos:start="315:100" pos:end="315:106">SRP_OFF</name></expr>, <expr pos:start="315:109" pos:end="315:111"><literal type="number" pos:start="315:109" pos:end="315:111">200</literal></expr>}</block></expr>,
    <expr pos:start="316:5" pos:end="316:112"><block pos:start="316:5" pos:end="316:112">{<expr pos:start="316:6" pos:end="316:9"><literal type="string" pos:start="316:6" pos:end="316:9">"47"</literal></expr>, <expr pos:start="316:12" pos:end="316:31"><name pos:start="316:12" pos:end="316:31">US1060_EXPLICIT_CERT</name></expr>, <expr pos:start="316:34" pos:end="316:52"><name pos:start="316:34" pos:end="316:52">US1060_EXPLICIT_KEY</name></expr>, <expr pos:start="316:55" pos:end="316:71"><name pos:start="316:55" pos:end="316:71">US1060_UIDPWD_BAD</name></expr>,  <expr pos:start="316:75" pos:end="316:82"><name pos:start="316:75" pos:end="316:82">SRP_NONE</name></expr>, <expr pos:start="316:85" pos:end="316:97"><name pos:start="316:85" pos:end="316:97">HTTP_REQUIRED</name></expr>, <expr pos:start="316:100" pos:end="316:106"><name pos:start="316:100" pos:end="316:106">SRP_OFF</name></expr>, <expr pos:start="316:109" pos:end="316:111"><literal type="number" pos:start="316:109" pos:end="316:111">401</literal></expr>}</block></expr>,
    <expr pos:start="317:5" pos:end="317:112"><block pos:start="317:5" pos:end="317:112">{<expr pos:start="317:6" pos:end="317:9"><literal type="string" pos:start="317:6" pos:end="317:9">"48"</literal></expr>, <expr pos:start="317:12" pos:end="317:31"><name pos:start="317:12" pos:end="317:31">US1060_EXPLICIT_CERT</name></expr>, <expr pos:start="317:34" pos:end="317:52"><name pos:start="317:34" pos:end="317:52">US1060_EXPLICIT_KEY</name></expr>, <expr pos:start="317:55" pos:end="317:72"><name pos:start="317:55" pos:end="317:72">US1060_UIDPWD_GOOD</name></expr>, <expr pos:start="317:75" pos:end="317:82"><name pos:start="317:75" pos:end="317:82">SRP_NONE</name></expr>, <expr pos:start="317:85" pos:end="317:97"><name pos:start="317:85" pos:end="317:97">HTTP_OPTIONAL</name></expr>, <expr pos:start="317:100" pos:end="317:106"><name pos:start="317:100" pos:end="317:106">SRP_OFF</name></expr>, <expr pos:start="317:109" pos:end="317:111"><literal type="number" pos:start="317:109" pos:end="317:111">200</literal></expr>}</block></expr>,
    <expr pos:start="318:5" pos:end="318:112"><block pos:start="318:5" pos:end="318:112">{<expr pos:start="318:6" pos:end="318:9"><literal type="string" pos:start="318:6" pos:end="318:9">"49"</literal></expr>, <expr pos:start="318:12" pos:end="318:31"><name pos:start="318:12" pos:end="318:31">US1060_EXPLICIT_CERT</name></expr>, <expr pos:start="318:34" pos:end="318:52"><name pos:start="318:34" pos:end="318:52">US1060_EXPLICIT_KEY</name></expr>, <expr pos:start="318:55" pos:end="318:71"><name pos:start="318:55" pos:end="318:71">US1060_UIDPWD_BAD</name></expr>,  <expr pos:start="318:75" pos:end="318:82"><name pos:start="318:75" pos:end="318:82">SRP_NONE</name></expr>, <expr pos:start="318:85" pos:end="318:97"><name pos:start="318:85" pos:end="318:97">HTTP_OPTIONAL</name></expr>, <expr pos:start="318:100" pos:end="318:106"><name pos:start="318:100" pos:end="318:106">SRP_OFF</name></expr>, <expr pos:start="318:109" pos:end="318:111"><literal type="number" pos:start="318:109" pos:end="318:111">200</literal></expr>}</block></expr>,
    <expr pos:start="319:5" pos:end="319:112"><block pos:start="319:5" pos:end="319:112">{<expr pos:start="319:6" pos:end="319:9"><literal type="string" pos:start="319:6" pos:end="319:9">"50"</literal></expr>, <expr pos:start="319:12" pos:end="319:31"><name pos:start="319:12" pos:end="319:31">US1060_EXPLICIT_CERT</name></expr>, <expr pos:start="319:34" pos:end="319:52"><name pos:start="319:34" pos:end="319:52">US1060_EXPLICIT_KEY</name></expr>, <expr pos:start="319:55" pos:end="319:72"><name pos:start="319:55" pos:end="319:72">US1060_UIDPWD_GOOD</name></expr>, <expr pos:start="319:75" pos:end="319:82"><name pos:start="319:75" pos:end="319:82">SRP_NONE</name></expr>, <expr pos:start="319:85" pos:end="319:92"><name pos:start="319:85" pos:end="319:92">HTTP_OFF</name></expr>,      <expr pos:start="319:100" pos:end="319:106"><name pos:start="319:100" pos:end="319:106">SRP_OFF</name></expr>, <expr pos:start="319:109" pos:end="319:111"><literal type="number" pos:start="319:109" pos:end="319:111">200</literal></expr>}</block></expr>,
    <expr pos:start="320:5" pos:end="320:112"><block pos:start="320:5" pos:end="320:112">{<expr pos:start="320:6" pos:end="320:9"><literal type="string" pos:start="320:6" pos:end="320:9">"51"</literal></expr>, <expr pos:start="320:12" pos:end="320:31"><name pos:start="320:12" pos:end="320:31">US1060_EXPLICIT_CERT</name></expr>, <expr pos:start="320:34" pos:end="320:52"><name pos:start="320:34" pos:end="320:52">US1060_EXPLICIT_KEY</name></expr>, <expr pos:start="320:55" pos:end="320:71"><name pos:start="320:55" pos:end="320:71">US1060_UIDPWD_BAD</name></expr>,  <expr pos:start="320:75" pos:end="320:82"><name pos:start="320:75" pos:end="320:82">SRP_NONE</name></expr>, <expr pos:start="320:85" pos:end="320:92"><name pos:start="320:85" pos:end="320:92">HTTP_OFF</name></expr>,      <expr pos:start="320:100" pos:end="320:106"><name pos:start="320:100" pos:end="320:106">SRP_OFF</name></expr>, <expr pos:start="320:109" pos:end="320:111"><literal type="number" pos:start="320:109" pos:end="320:111">200</literal></expr>}</block></expr>,

    <expr pos:start="322:5" pos:end="322:110"><block pos:start="322:5" pos:end="322:110">{<expr pos:start="322:6" pos:end="322:9"><literal type="string" pos:start="322:6" pos:end="322:9">"60"</literal></expr>, <expr pos:start="322:12" pos:end="322:31"><name pos:start="322:12" pos:end="322:31">US1060_SELFSIGN_CERT</name></expr>, <expr pos:start="322:34" pos:end="322:52"><name pos:start="322:34" pos:end="322:52">US1060_SELFSIGN_KEY</name></expr>, <expr pos:start="322:55" pos:end="322:72"><name pos:start="322:55" pos:end="322:72">US1060_UIDPWD_GOOD</name></expr>, <expr pos:start="322:75" pos:end="322:82"><name pos:start="322:75" pos:end="322:82">SRP_NONE</name></expr>, <expr pos:start="322:85" pos:end="322:97"><name pos:start="322:85" pos:end="322:97">HTTP_REQUIRED</name></expr>, <expr pos:start="322:100" pos:end="322:105"><name pos:start="322:100" pos:end="322:105">SRP_ON</name></expr>,  <expr pos:start="322:109" pos:end="322:109"><literal type="number" pos:start="322:109" pos:end="322:109">0</literal></expr>}</block></expr>,
    <expr pos:start="323:5" pos:end="323:110"><block pos:start="323:5" pos:end="323:110">{<expr pos:start="323:6" pos:end="323:9"><literal type="string" pos:start="323:6" pos:end="323:9">"61"</literal></expr>, <expr pos:start="323:12" pos:end="323:31"><name pos:start="323:12" pos:end="323:31">US1060_SELFSIGN_CERT</name></expr>, <expr pos:start="323:34" pos:end="323:52"><name pos:start="323:34" pos:end="323:52">US1060_SELFSIGN_KEY</name></expr>, <expr pos:start="323:55" pos:end="323:71"><name pos:start="323:55" pos:end="323:71">US1060_UIDPWD_BAD</name></expr>,  <expr pos:start="323:75" pos:end="323:82"><name pos:start="323:75" pos:end="323:82">SRP_NONE</name></expr>, <expr pos:start="323:85" pos:end="323:97"><name pos:start="323:85" pos:end="323:97">HTTP_REQUIRED</name></expr>, <expr pos:start="323:100" pos:end="323:105"><name pos:start="323:100" pos:end="323:105">SRP_ON</name></expr>,  <expr pos:start="323:109" pos:end="323:109"><literal type="number" pos:start="323:109" pos:end="323:109">0</literal></expr>}</block></expr>,
    <expr pos:start="324:5" pos:end="324:110"><block pos:start="324:5" pos:end="324:110">{<expr pos:start="324:6" pos:end="324:9"><literal type="string" pos:start="324:6" pos:end="324:9">"62"</literal></expr>, <expr pos:start="324:12" pos:end="324:31"><name pos:start="324:12" pos:end="324:31">US1060_SELFSIGN_CERT</name></expr>, <expr pos:start="324:34" pos:end="324:52"><name pos:start="324:34" pos:end="324:52">US1060_SELFSIGN_KEY</name></expr>, <expr pos:start="324:55" pos:end="324:72"><name pos:start="324:55" pos:end="324:72">US1060_UIDPWD_GOOD</name></expr>, <expr pos:start="324:75" pos:end="324:82"><name pos:start="324:75" pos:end="324:82">SRP_NONE</name></expr>, <expr pos:start="324:85" pos:end="324:97"><name pos:start="324:85" pos:end="324:97">HTTP_OPTIONAL</name></expr>, <expr pos:start="324:100" pos:end="324:105"><name pos:start="324:100" pos:end="324:105">SRP_ON</name></expr>,  <expr pos:start="324:109" pos:end="324:109"><literal type="number" pos:start="324:109" pos:end="324:109">0</literal></expr>}</block></expr>,
    <expr pos:start="325:5" pos:end="325:110"><block pos:start="325:5" pos:end="325:110">{<expr pos:start="325:6" pos:end="325:9"><literal type="string" pos:start="325:6" pos:end="325:9">"63"</literal></expr>, <expr pos:start="325:12" pos:end="325:31"><name pos:start="325:12" pos:end="325:31">US1060_SELFSIGN_CERT</name></expr>, <expr pos:start="325:34" pos:end="325:52"><name pos:start="325:34" pos:end="325:52">US1060_SELFSIGN_KEY</name></expr>, <expr pos:start="325:55" pos:end="325:71"><name pos:start="325:55" pos:end="325:71">US1060_UIDPWD_BAD</name></expr>,  <expr pos:start="325:75" pos:end="325:82"><name pos:start="325:75" pos:end="325:82">SRP_NONE</name></expr>, <expr pos:start="325:85" pos:end="325:97"><name pos:start="325:85" pos:end="325:97">HTTP_OPTIONAL</name></expr>, <expr pos:start="325:100" pos:end="325:105"><name pos:start="325:100" pos:end="325:105">SRP_ON</name></expr>,  <expr pos:start="325:109" pos:end="325:109"><literal type="number" pos:start="325:109" pos:end="325:109">0</literal></expr>}</block></expr>,
    <expr pos:start="326:5" pos:end="326:110"><block pos:start="326:5" pos:end="326:110">{<expr pos:start="326:6" pos:end="326:9"><literal type="string" pos:start="326:6" pos:end="326:9">"64"</literal></expr>, <expr pos:start="326:12" pos:end="326:31"><name pos:start="326:12" pos:end="326:31">US1060_SELFSIGN_CERT</name></expr>, <expr pos:start="326:34" pos:end="326:52"><name pos:start="326:34" pos:end="326:52">US1060_SELFSIGN_KEY</name></expr>, <expr pos:start="326:55" pos:end="326:72"><name pos:start="326:55" pos:end="326:72">US1060_UIDPWD_GOOD</name></expr>, <expr pos:start="326:75" pos:end="326:82"><name pos:start="326:75" pos:end="326:82">SRP_NONE</name></expr>, <expr pos:start="326:85" pos:end="326:92"><name pos:start="326:85" pos:end="326:92">HTTP_OFF</name></expr>,      <expr pos:start="326:100" pos:end="326:105"><name pos:start="326:100" pos:end="326:105">SRP_ON</name></expr>,  <expr pos:start="326:109" pos:end="326:109"><literal type="number" pos:start="326:109" pos:end="326:109">0</literal></expr>}</block></expr>,
    <expr pos:start="327:5" pos:end="327:110"><block pos:start="327:5" pos:end="327:110">{<expr pos:start="327:6" pos:end="327:9"><literal type="string" pos:start="327:6" pos:end="327:9">"65"</literal></expr>, <expr pos:start="327:12" pos:end="327:31"><name pos:start="327:12" pos:end="327:31">US1060_SELFSIGN_CERT</name></expr>, <expr pos:start="327:34" pos:end="327:52"><name pos:start="327:34" pos:end="327:52">US1060_SELFSIGN_KEY</name></expr>, <expr pos:start="327:55" pos:end="327:71"><name pos:start="327:55" pos:end="327:71">US1060_UIDPWD_BAD</name></expr>,  <expr pos:start="327:75" pos:end="327:82"><name pos:start="327:75" pos:end="327:82">SRP_NONE</name></expr>, <expr pos:start="327:85" pos:end="327:92"><name pos:start="327:85" pos:end="327:92">HTTP_OFF</name></expr>,      <expr pos:start="327:100" pos:end="327:105"><name pos:start="327:100" pos:end="327:105">SRP_ON</name></expr>,  <expr pos:start="327:109" pos:end="327:109"><literal type="number" pos:start="327:109" pos:end="327:109">0</literal></expr>}</block></expr>,
    <expr pos:start="328:5" pos:end="328:110"><block pos:start="328:5" pos:end="328:110">{<expr pos:start="328:6" pos:end="328:9"><literal type="string" pos:start="328:6" pos:end="328:9">"66"</literal></expr>, <expr pos:start="328:12" pos:end="328:31"><name pos:start="328:12" pos:end="328:31">US1060_SELFSIGN_CERT</name></expr>, <expr pos:start="328:34" pos:end="328:52"><name pos:start="328:34" pos:end="328:52">US1060_SELFSIGN_KEY</name></expr>, <expr pos:start="328:55" pos:end="328:72"><name pos:start="328:55" pos:end="328:72">US1060_UIDPWD_GOOD</name></expr>, <expr pos:start="328:75" pos:end="328:82"><name pos:start="328:75" pos:end="328:82">SRP_NONE</name></expr>, <expr pos:start="328:85" pos:end="328:97"><name pos:start="328:85" pos:end="328:97">HTTP_REQUIRED</name></expr>, <expr pos:start="328:100" pos:end="328:106"><name pos:start="328:100" pos:end="328:106">SRP_OFF</name></expr>, <expr pos:start="328:109" pos:end="328:109"><literal type="number" pos:start="328:109" pos:end="328:109">0</literal></expr>}</block></expr>,
    <expr pos:start="329:5" pos:end="329:110"><block pos:start="329:5" pos:end="329:110">{<expr pos:start="329:6" pos:end="329:9"><literal type="string" pos:start="329:6" pos:end="329:9">"67"</literal></expr>, <expr pos:start="329:12" pos:end="329:31"><name pos:start="329:12" pos:end="329:31">US1060_SELFSIGN_CERT</name></expr>, <expr pos:start="329:34" pos:end="329:52"><name pos:start="329:34" pos:end="329:52">US1060_SELFSIGN_KEY</name></expr>, <expr pos:start="329:55" pos:end="329:71"><name pos:start="329:55" pos:end="329:71">US1060_UIDPWD_BAD</name></expr>,  <expr pos:start="329:75" pos:end="329:82"><name pos:start="329:75" pos:end="329:82">SRP_NONE</name></expr>, <expr pos:start="329:85" pos:end="329:97"><name pos:start="329:85" pos:end="329:97">HTTP_REQUIRED</name></expr>, <expr pos:start="329:100" pos:end="329:106"><name pos:start="329:100" pos:end="329:106">SRP_OFF</name></expr>, <expr pos:start="329:109" pos:end="329:109"><literal type="number" pos:start="329:109" pos:end="329:109">0</literal></expr>}</block></expr>,
    <expr pos:start="330:5" pos:end="330:110"><block pos:start="330:5" pos:end="330:110">{<expr pos:start="330:6" pos:end="330:9"><literal type="string" pos:start="330:6" pos:end="330:9">"68"</literal></expr>, <expr pos:start="330:12" pos:end="330:31"><name pos:start="330:12" pos:end="330:31">US1060_SELFSIGN_CERT</name></expr>, <expr pos:start="330:34" pos:end="330:52"><name pos:start="330:34" pos:end="330:52">US1060_SELFSIGN_KEY</name></expr>, <expr pos:start="330:55" pos:end="330:72"><name pos:start="330:55" pos:end="330:72">US1060_UIDPWD_GOOD</name></expr>, <expr pos:start="330:75" pos:end="330:82"><name pos:start="330:75" pos:end="330:82">SRP_NONE</name></expr>, <expr pos:start="330:85" pos:end="330:97"><name pos:start="330:85" pos:end="330:97">HTTP_OPTIONAL</name></expr>, <expr pos:start="330:100" pos:end="330:106"><name pos:start="330:100" pos:end="330:106">SRP_OFF</name></expr>, <expr pos:start="330:109" pos:end="330:109"><literal type="number" pos:start="330:109" pos:end="330:109">0</literal></expr>}</block></expr>,
    <expr pos:start="331:5" pos:end="331:110"><block pos:start="331:5" pos:end="331:110">{<expr pos:start="331:6" pos:end="331:9"><literal type="string" pos:start="331:6" pos:end="331:9">"69"</literal></expr>, <expr pos:start="331:12" pos:end="331:31"><name pos:start="331:12" pos:end="331:31">US1060_SELFSIGN_CERT</name></expr>, <expr pos:start="331:34" pos:end="331:52"><name pos:start="331:34" pos:end="331:52">US1060_SELFSIGN_KEY</name></expr>, <expr pos:start="331:55" pos:end="331:71"><name pos:start="331:55" pos:end="331:71">US1060_UIDPWD_BAD</name></expr>,  <expr pos:start="331:75" pos:end="331:82"><name pos:start="331:75" pos:end="331:82">SRP_NONE</name></expr>, <expr pos:start="331:85" pos:end="331:97"><name pos:start="331:85" pos:end="331:97">HTTP_OPTIONAL</name></expr>, <expr pos:start="331:100" pos:end="331:106"><name pos:start="331:100" pos:end="331:106">SRP_OFF</name></expr>, <expr pos:start="331:109" pos:end="331:109"><literal type="number" pos:start="331:109" pos:end="331:109">0</literal></expr>}</block></expr>,
    <expr pos:start="332:5" pos:end="332:110"><block pos:start="332:5" pos:end="332:110">{<expr pos:start="332:6" pos:end="332:9"><literal type="string" pos:start="332:6" pos:end="332:9">"70"</literal></expr>, <expr pos:start="332:12" pos:end="332:31"><name pos:start="332:12" pos:end="332:31">US1060_SELFSIGN_CERT</name></expr>, <expr pos:start="332:34" pos:end="332:52"><name pos:start="332:34" pos:end="332:52">US1060_SELFSIGN_KEY</name></expr>, <expr pos:start="332:55" pos:end="332:72"><name pos:start="332:55" pos:end="332:72">US1060_UIDPWD_GOOD</name></expr>, <expr pos:start="332:75" pos:end="332:82"><name pos:start="332:75" pos:end="332:82">SRP_NONE</name></expr>, <expr pos:start="332:85" pos:end="332:92"><name pos:start="332:85" pos:end="332:92">HTTP_OFF</name></expr>,      <expr pos:start="332:100" pos:end="332:106"><name pos:start="332:100" pos:end="332:106">SRP_OFF</name></expr>, <expr pos:start="332:109" pos:end="332:109"><literal type="number" pos:start="332:109" pos:end="332:109">0</literal></expr>}</block></expr>,
    <expr pos:start="333:5" pos:end="333:110"><block pos:start="333:5" pos:end="333:110">{<expr pos:start="333:6" pos:end="333:9"><literal type="string" pos:start="333:6" pos:end="333:9">"71"</literal></expr>, <expr pos:start="333:12" pos:end="333:31"><name pos:start="333:12" pos:end="333:31">US1060_SELFSIGN_CERT</name></expr>, <expr pos:start="333:34" pos:end="333:52"><name pos:start="333:34" pos:end="333:52">US1060_SELFSIGN_KEY</name></expr>, <expr pos:start="333:55" pos:end="333:71"><name pos:start="333:55" pos:end="333:71">US1060_UIDPWD_BAD</name></expr>,  <expr pos:start="333:75" pos:end="333:82"><name pos:start="333:75" pos:end="333:82">SRP_NONE</name></expr>, <expr pos:start="333:85" pos:end="333:92"><name pos:start="333:85" pos:end="333:92">HTTP_OFF</name></expr>,      <expr pos:start="333:100" pos:end="333:106"><name pos:start="333:100" pos:end="333:106">SRP_OFF</name></expr>, <expr pos:start="333:109" pos:end="333:109"><literal type="number" pos:start="333:109" pos:end="333:109">0</literal></expr>}</block></expr>,
}</block></expr></init></decl>;</decl_stmt>

<comment type="block" pos:start="336:1" pos:end="342:3">/*
 * This is our worker for each entry in the test matrix above.
 * We read the configuration from the entry, configure the
 * server and client as needed, and attempt a simple enroll
 * using Curl as the client.
 * The argument i is the index of the entry in the table above.
 */</comment>
<function pos:start="343:1" pos:end="417:1"><type pos:start="343:1" pos:end="343:11"><specifier pos:start="343:1" pos:end="343:6">static</specifier> <name pos:start="343:8" pos:end="343:11">void</name></type> <name pos:start="343:13" pos:end="343:35">us1060_test_matrix_item</name> <parameter_list pos:start="343:37" pos:end="343:43">(<parameter pos:start="343:38" pos:end="343:42"><decl pos:start="343:38" pos:end="343:42"><type pos:start="343:38" pos:end="343:40"><name pos:start="343:38" pos:end="343:40">int</name></type> <name pos:start="343:42" pos:end="343:42">i</name></decl></parameter>)</parameter_list>
<block pos:start="344:1" pos:end="417:1">{<block_content pos:start="345:5" pos:end="416:5">
    <decl_stmt pos:start="345:5" pos:end="345:12"><decl pos:start="345:5" pos:end="345:11"><type pos:start="345:5" pos:end="345:8"><name pos:start="345:5" pos:end="345:8">long</name></type> <name pos:start="345:10" pos:end="345:11">rv</name></decl>;</decl_stmt>

    <expr_stmt pos:start="347:5" pos:end="348:5"><expr pos:start="347:5" pos:end="347:15"><name pos:start="347:5" pos:end="347:15">LOG_FUNC_NM</name></expr>
    ;</expr_stmt>

    <expr_stmt pos:start="350:5" pos:end="350:67"><expr pos:start="350:5" pos:end="350:66"><call pos:start="350:5" pos:end="350:66"><name pos:start="350:5" pos:end="350:10">printf</name><argument_list pos:start="350:11" pos:end="350:66">(<argument pos:start="350:12" pos:end="350:39"><expr pos:start="350:12" pos:end="350:39"><literal type="string" pos:start="350:12" pos:end="350:39">"\nRunning matrix test %s\n"</literal></expr></argument>, <argument pos:start="350:42" pos:end="350:65"><expr pos:start="350:42" pos:end="350:65"><name pos:start="350:42" pos:end="350:55"><name pos:start="350:42" pos:end="350:52">test_matrix</name><index pos:start="350:53" pos:end="350:55">[<expr pos:start="350:54" pos:end="350:54"><name pos:start="350:54" pos:end="350:54">i</name></expr>]</index></name><operator pos:start="350:56" pos:end="350:56">.</operator><name pos:start="350:57" pos:end="350:65">test_name</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <comment type="block" pos:start="352:5" pos:end="355:7">/*
     * Stop the server and restart it to make sure
     * it's in the correct mode.
     */</comment>
    <expr_stmt pos:start="356:5" pos:end="356:14"><expr pos:start="356:5" pos:end="356:13"><call pos:start="356:5" pos:end="356:13"><name pos:start="356:5" pos:end="356:11">st_stop</name><argument_list pos:start="356:12" pos:end="356:13">()</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="357:5" pos:end="357:13"><expr pos:start="357:5" pos:end="357:12"><call pos:start="357:5" pos:end="357:12"><name pos:start="357:5" pos:end="357:9">SLEEP</name><argument_list pos:start="357:10" pos:end="357:12">(<argument pos:start="357:11" pos:end="357:11"><expr pos:start="357:11" pos:end="357:11"><literal type="number" pos:start="357:11" pos:end="357:11">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <if_stmt pos:start="358:5" pos:end="364:5"><if pos:start="358:5" pos:end="361:5">if <condition pos:start="358:8" pos:end="358:44">(<expr pos:start="358:9" pos:end="358:43"><name pos:start="358:9" pos:end="358:22"><name pos:start="358:9" pos:end="358:19">test_matrix</name><index pos:start="358:20" pos:end="358:22">[<expr pos:start="358:21" pos:end="358:21"><name pos:start="358:21" pos:end="358:21">i</name></expr>]</index></name><operator pos:start="358:23" pos:end="358:23">.</operator><name pos:start="358:24" pos:end="358:33">server_srp</name> <operator pos:start="358:35" pos:end="358:36">==</operator> <name pos:start="358:38" pos:end="358:43">SRP_ON</name></expr>)</condition> <block pos:start="358:46" pos:end="361:5">{<block_content pos:start="359:9" pos:end="360:21">
        <expr_stmt pos:start="359:9" pos:end="360:21"><expr pos:start="359:9" pos:end="360:20"><name pos:start="359:9" pos:end="359:10">rv</name> <operator pos:start="359:12" pos:end="359:12">=</operator> <call pos:start="359:14" pos:end="360:20"><name pos:start="359:14" pos:end="359:32">us1060_start_server</name><argument_list pos:start="359:33" pos:end="360:20">(<argument pos:start="359:34" pos:end="359:54"><expr pos:start="359:34" pos:end="359:54"><name pos:start="359:34" pos:end="359:54">US1060_SERVER_CERTKEY</name></expr></argument>, <argument pos:start="359:57" pos:end="359:77"><expr pos:start="359:57" pos:end="359:77"><name pos:start="359:57" pos:end="359:77">US1060_SERVER_CERTKEY</name></expr></argument>,
            <argument pos:start="360:13" pos:end="360:13"><expr pos:start="360:13" pos:end="360:13"><literal type="number" pos:start="360:13" pos:end="360:13">0</literal></expr></argument>, <argument pos:start="360:16" pos:end="360:16"><expr pos:start="360:16" pos:end="360:16"><literal type="number" pos:start="360:16" pos:end="360:16">0</literal></expr></argument>, <argument pos:start="360:19" pos:end="360:19"><expr pos:start="360:19" pos:end="360:19"><literal type="number" pos:start="360:19" pos:end="360:19">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></if> <else pos:start="361:7" pos:end="364:5">else <block pos:start="361:12" pos:end="364:5">{<block_content pos:start="362:9" pos:end="363:21">
        <expr_stmt pos:start="362:9" pos:end="363:21"><expr pos:start="362:9" pos:end="363:20"><name pos:start="362:9" pos:end="362:10">rv</name> <operator pos:start="362:12" pos:end="362:12">=</operator> <call pos:start="362:14" pos:end="363:20"><name pos:start="362:14" pos:end="362:32">us1060_start_server</name><argument_list pos:start="362:33" pos:end="363:20">(<argument pos:start="362:34" pos:end="362:54"><expr pos:start="362:34" pos:end="362:54"><name pos:start="362:34" pos:end="362:54">US1060_SERVER_CERTKEY</name></expr></argument>, <argument pos:start="362:57" pos:end="362:77"><expr pos:start="362:57" pos:end="362:77"><name pos:start="362:57" pos:end="362:77">US1060_SERVER_CERTKEY</name></expr></argument>,
            <argument pos:start="363:13" pos:end="363:13"><expr pos:start="363:13" pos:end="363:13"><literal type="number" pos:start="363:13" pos:end="363:13">0</literal></expr></argument>, <argument pos:start="363:16" pos:end="363:16"><expr pos:start="363:16" pos:end="363:16"><literal type="number" pos:start="363:16" pos:end="363:16">0</literal></expr></argument>, <argument pos:start="363:19" pos:end="363:19"><expr pos:start="363:19" pos:end="363:19"><literal type="number" pos:start="363:19" pos:end="363:19">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></else></if_stmt>
    <expr_stmt pos:start="365:5" pos:end="365:23"><expr pos:start="365:5" pos:end="365:22"><call pos:start="365:5" pos:end="365:22"><name pos:start="365:5" pos:end="365:13">CU_ASSERT</name><argument_list pos:start="365:14" pos:end="365:22">(<argument pos:start="365:15" pos:end="365:21"><expr pos:start="365:15" pos:end="365:21"><name pos:start="365:15" pos:end="365:16">rv</name> <operator pos:start="365:18" pos:end="365:19">==</operator> <literal type="number" pos:start="365:21" pos:end="365:21">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <comment type="block" pos:start="367:5" pos:end="369:7">/*
     * Set the server HTTP auth configuration
     */</comment>
    <switch pos:start="370:5" pos:end="382:5">switch <condition pos:start="370:12" pos:end="370:39">(<expr pos:start="370:13" pos:end="370:38"><name pos:start="370:13" pos:end="370:26"><name pos:start="370:13" pos:end="370:23">test_matrix</name><index pos:start="370:24" pos:end="370:26">[<expr pos:start="370:25" pos:end="370:25"><name pos:start="370:25" pos:end="370:25">i</name></expr>]</index></name><operator pos:start="370:27" pos:end="370:27">.</operator><name pos:start="370:28" pos:end="370:38">server_http</name></expr>)</condition> <block pos:start="370:41" pos:end="382:5">{<block_content pos:start="371:5" pos:end="381:14">
    <case pos:start="371:5" pos:end="371:18">case <expr pos:start="371:10" pos:end="371:17"><name pos:start="371:10" pos:end="371:17">HTTP_OFF</name></expr>:</case>
        <expr_stmt pos:start="372:9" pos:end="372:31"><expr pos:start="372:9" pos:end="372:30"><call pos:start="372:9" pos:end="372:30"><name pos:start="372:9" pos:end="372:28">st_disable_http_auth</name><argument_list pos:start="372:29" pos:end="372:30">()</argument_list></call></expr>;</expr_stmt>
        <break pos:start="373:9" pos:end="373:14">break;</break>
    <case pos:start="374:5" pos:end="374:23">case <expr pos:start="374:10" pos:end="374:22"><name pos:start="374:10" pos:end="374:22">HTTP_OPTIONAL</name></expr>:</case>
        <expr_stmt pos:start="375:9" pos:end="375:30"><expr pos:start="375:9" pos:end="375:29"><call pos:start="375:9" pos:end="375:29"><name pos:start="375:9" pos:end="375:27">st_enable_http_auth</name><argument_list pos:start="375:28" pos:end="375:29">()</argument_list></call></expr>;</expr_stmt>
        <expr_stmt pos:start="376:9" pos:end="376:36"><expr pos:start="376:9" pos:end="376:35"><call pos:start="376:9" pos:end="376:35"><name pos:start="376:9" pos:end="376:33">st_set_http_auth_optional</name><argument_list pos:start="376:34" pos:end="376:35">()</argument_list></call></expr>;</expr_stmt>
        <break pos:start="377:9" pos:end="377:14">break;</break>
    <case pos:start="378:5" pos:end="378:23">case <expr pos:start="378:10" pos:end="378:22"><name pos:start="378:10" pos:end="378:22">HTTP_REQUIRED</name></expr>:</case>
        <expr_stmt pos:start="379:9" pos:end="379:30"><expr pos:start="379:9" pos:end="379:29"><call pos:start="379:9" pos:end="379:29"><name pos:start="379:9" pos:end="379:27">st_enable_http_auth</name><argument_list pos:start="379:28" pos:end="379:29">()</argument_list></call></expr>;</expr_stmt>
        <expr_stmt pos:start="380:9" pos:end="380:36"><expr pos:start="380:9" pos:end="380:35"><call pos:start="380:9" pos:end="380:35"><name pos:start="380:9" pos:end="380:33">st_set_http_auth_required</name><argument_list pos:start="380:34" pos:end="380:35">()</argument_list></call></expr>;</expr_stmt>
        <break pos:start="381:9" pos:end="381:14">break;</break>
    </block_content>}</block></switch>

    <switch pos:start="384:5" pos:end="411:5">switch <condition pos:start="384:12" pos:end="384:36">(<expr pos:start="384:13" pos:end="384:35"><name pos:start="384:13" pos:end="384:26"><name pos:start="384:13" pos:end="384:23">test_matrix</name><index pos:start="384:24" pos:end="384:26">[<expr pos:start="384:25" pos:end="384:25"><name pos:start="384:25" pos:end="384:25">i</name></expr>]</index></name><operator pos:start="384:27" pos:end="384:27">.</operator><name pos:start="384:28" pos:end="384:35">curl_srp</name></expr>)</condition> <block pos:start="384:38" pos:end="411:5">{<block_content pos:start="385:5" pos:end="410:14">
    <case pos:start="385:5" pos:end="385:18">case <expr pos:start="385:10" pos:end="385:17"><name pos:start="385:10" pos:end="385:17">SRP_GOOD</name></expr>:</case>
        <expr_stmt pos:start="386:9" pos:end="388:53"><expr pos:start="386:9" pos:end="388:52"><name pos:start="386:9" pos:end="386:10">rv</name> <operator pos:start="386:12" pos:end="386:12">=</operator> <call pos:start="386:14" pos:end="388:52"><name pos:start="386:14" pos:end="386:31">curl_http_post_srp</name><argument_list pos:start="386:32" pos:end="388:52">(<argument pos:start="386:33" pos:end="386:49"><expr pos:start="386:33" pos:end="386:49"><name pos:start="386:33" pos:end="386:49">US1060_ENROLL_URL</name></expr></argument>, <argument pos:start="386:52" pos:end="386:67"><expr pos:start="386:52" pos:end="386:67"><name pos:start="386:52" pos:end="386:67">US1060_PKCS10_CT</name></expr></argument>,
        <argument pos:start="387:9" pos:end="387:25"><expr pos:start="387:9" pos:end="387:25"><name pos:start="387:9" pos:end="387:25">US1060_PKCS10_REQ</name></expr></argument>, <argument pos:start="387:28" pos:end="387:56"><expr pos:start="387:28" pos:end="387:56"><name pos:start="387:28" pos:end="387:41"><name pos:start="387:28" pos:end="387:38">test_matrix</name><index pos:start="387:39" pos:end="387:41">[<expr pos:start="387:40" pos:end="387:40"><name pos:start="387:40" pos:end="387:40">i</name></expr>]</index></name><operator pos:start="387:42" pos:end="387:42">.</operator><name pos:start="387:43" pos:end="387:56">curl_http_auth</name></expr></argument>, <argument pos:start="387:59" pos:end="387:62"><expr pos:start="387:59" pos:end="387:62"><name pos:start="387:59" pos:end="387:62">NULL</name></expr></argument>, <argument pos:start="387:65" pos:end="387:78"><expr pos:start="387:65" pos:end="387:78"><name pos:start="387:65" pos:end="387:78">CURLAUTH_BASIC</name></expr></argument>,
            <argument pos:start="388:13" pos:end="388:16"><expr pos:start="388:13" pos:end="388:16"><name pos:start="388:13" pos:end="388:16">NULL</name></expr></argument>, <argument pos:start="388:19" pos:end="388:28"><expr pos:start="388:19" pos:end="388:28"><literal type="string" pos:start="388:19" pos:end="388:28">"srp_user"</literal></expr></argument>, <argument pos:start="388:31" pos:end="388:39"><expr pos:start="388:31" pos:end="388:39"><literal type="string" pos:start="388:31" pos:end="388:39">"srp_pwd"</literal></expr></argument>, <argument pos:start="388:42" pos:end="388:45"><expr pos:start="388:42" pos:end="388:45"><name pos:start="388:42" pos:end="388:45">NULL</name></expr></argument>, <argument pos:start="388:48" pos:end="388:51"><expr pos:start="388:48" pos:end="388:51"><name pos:start="388:48" pos:end="388:51">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <break pos:start="389:9" pos:end="389:14">break;</break>
    <case pos:start="390:5" pos:end="390:17">case <expr pos:start="390:10" pos:end="390:16"><name pos:start="390:10" pos:end="390:16">SRP_BAD</name></expr>:</case>
        <expr_stmt pos:start="391:9" pos:end="393:54"><expr pos:start="391:9" pos:end="393:53"><name pos:start="391:9" pos:end="391:10">rv</name> <operator pos:start="391:12" pos:end="391:12">=</operator> <call pos:start="391:14" pos:end="393:53"><name pos:start="391:14" pos:end="391:31">curl_http_post_srp</name><argument_list pos:start="391:32" pos:end="393:53">(<argument pos:start="391:33" pos:end="391:49"><expr pos:start="391:33" pos:end="391:49"><name pos:start="391:33" pos:end="391:49">US1060_ENROLL_URL</name></expr></argument>, <argument pos:start="391:52" pos:end="391:67"><expr pos:start="391:52" pos:end="391:67"><name pos:start="391:52" pos:end="391:67">US1060_PKCS10_CT</name></expr></argument>,
        <argument pos:start="392:9" pos:end="392:25"><expr pos:start="392:9" pos:end="392:25"><name pos:start="392:9" pos:end="392:25">US1060_PKCS10_REQ</name></expr></argument>, <argument pos:start="392:28" pos:end="392:56"><expr pos:start="392:28" pos:end="392:56"><name pos:start="392:28" pos:end="392:41"><name pos:start="392:28" pos:end="392:38">test_matrix</name><index pos:start="392:39" pos:end="392:41">[<expr pos:start="392:40" pos:end="392:40"><name pos:start="392:40" pos:end="392:40">i</name></expr>]</index></name><operator pos:start="392:42" pos:end="392:42">.</operator><name pos:start="392:43" pos:end="392:56">curl_http_auth</name></expr></argument>, <argument pos:start="392:59" pos:end="392:62"><expr pos:start="392:59" pos:end="392:62"><name pos:start="392:59" pos:end="392:62">NULL</name></expr></argument>, <argument pos:start="392:65" pos:end="392:78"><expr pos:start="392:65" pos:end="392:78"><name pos:start="392:65" pos:end="392:78">CURLAUTH_BASIC</name></expr></argument>,
            <argument pos:start="393:13" pos:end="393:16"><expr pos:start="393:13" pos:end="393:16"><name pos:start="393:13" pos:end="393:16">NULL</name></expr></argument>, <argument pos:start="393:19" pos:end="393:28"><expr pos:start="393:19" pos:end="393:28"><literal type="string" pos:start="393:19" pos:end="393:28">"srp_user"</literal></expr></argument>, <argument pos:start="393:31" pos:end="393:40"><expr pos:start="393:31" pos:end="393:40"><literal type="string" pos:start="393:31" pos:end="393:40">"boguspwd"</literal></expr></argument>, <argument pos:start="393:43" pos:end="393:46"><expr pos:start="393:43" pos:end="393:46"><name pos:start="393:43" pos:end="393:46">NULL</name></expr></argument>, <argument pos:start="393:49" pos:end="393:52"><expr pos:start="393:49" pos:end="393:52"><name pos:start="393:49" pos:end="393:52">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <break pos:start="394:9" pos:end="394:14">break;</break>
    <case pos:start="395:5" pos:end="395:18">case <expr pos:start="395:10" pos:end="395:17"><name pos:start="395:10" pos:end="395:17">SRP_NONE</name></expr>:</case>
        <comment type="block" pos:start="396:9" pos:end="399:11">/*
         * Some of the SRP disabled test cases use a client
         * certificate.
         */</comment>
        <if_stmt pos:start="400:9" pos:end="409:9"><if pos:start="400:9" pos:end="405:9">if <condition pos:start="400:12" pos:end="400:37">(<expr pos:start="400:13" pos:end="400:36"><name pos:start="400:13" pos:end="400:26"><name pos:start="400:13" pos:end="400:23">test_matrix</name><index pos:start="400:24" pos:end="400:26">[<expr pos:start="400:25" pos:end="400:25"><name pos:start="400:25" pos:end="400:25">i</name></expr>]</index></name><operator pos:start="400:27" pos:end="400:27">.</operator><name pos:start="400:28" pos:end="400:36">curl_cert</name></expr>)</condition> <block pos:start="400:39" pos:end="405:9">{<block_content pos:start="401:13" pos:end="404:38">
            <expr_stmt pos:start="401:13" pos:end="404:38"><expr pos:start="401:13" pos:end="404:37"><name pos:start="401:13" pos:end="401:14">rv</name> <operator pos:start="401:16" pos:end="401:16">=</operator> <call pos:start="401:18" pos:end="404:37"><name pos:start="401:18" pos:end="401:39">curl_http_post_certuid</name><argument_list pos:start="401:40" pos:end="404:37">(<argument pos:start="401:41" pos:end="401:57"><expr pos:start="401:41" pos:end="401:57"><name pos:start="401:41" pos:end="401:57">US1060_ENROLL_URL</name></expr></argument>, <argument pos:start="401:60" pos:end="401:75"><expr pos:start="401:60" pos:end="401:75"><name pos:start="401:60" pos:end="401:75">US1060_PKCS10_CT</name></expr></argument>,
            <argument pos:start="402:13" pos:end="402:29"><expr pos:start="402:13" pos:end="402:29"><name pos:start="402:13" pos:end="402:29">US1060_PKCS10_REQ</name></expr></argument>, <argument pos:start="402:32" pos:end="402:60"><expr pos:start="402:32" pos:end="402:60"><name pos:start="402:32" pos:end="402:45"><name pos:start="402:32" pos:end="402:42">test_matrix</name><index pos:start="402:43" pos:end="402:45">[<expr pos:start="402:44" pos:end="402:44"><name pos:start="402:44" pos:end="402:44">i</name></expr>]</index></name><operator pos:start="402:46" pos:end="402:46">.</operator><name pos:start="402:47" pos:end="402:60">curl_http_auth</name></expr></argument>,
                <argument pos:start="403:17" pos:end="403:40"><expr pos:start="403:17" pos:end="403:40"><name pos:start="403:17" pos:end="403:30"><name pos:start="403:17" pos:end="403:27">test_matrix</name><index pos:start="403:28" pos:end="403:30">[<expr pos:start="403:29" pos:end="403:29"><name pos:start="403:29" pos:end="403:29">i</name></expr>]</index></name><operator pos:start="403:31" pos:end="403:31">.</operator><name pos:start="403:32" pos:end="403:40">curl_cert</name></expr></argument>, <argument pos:start="403:43" pos:end="403:65"><expr pos:start="403:43" pos:end="403:65"><name pos:start="403:43" pos:end="403:56"><name pos:start="403:43" pos:end="403:53">test_matrix</name><index pos:start="403:54" pos:end="403:56">[<expr pos:start="403:55" pos:end="403:55"><name pos:start="403:55" pos:end="403:55">i</name></expr>]</index></name><operator pos:start="403:57" pos:end="403:57">.</operator><name pos:start="403:58" pos:end="403:65">curl_key</name></expr></argument>,
                <argument pos:start="404:17" pos:end="404:30"><expr pos:start="404:17" pos:end="404:30"><name pos:start="404:17" pos:end="404:30">US1060_CACERTS</name></expr></argument>, <argument pos:start="404:33" pos:end="404:36"><expr pos:start="404:33" pos:end="404:36"><name pos:start="404:33" pos:end="404:36">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></if> <else pos:start="405:11" pos:end="409:9">else <block pos:start="405:16" pos:end="409:9">{<block_content pos:start="406:13" pos:end="408:62">
            <expr_stmt pos:start="406:13" pos:end="408:62"><expr pos:start="406:13" pos:end="408:61"><name pos:start="406:13" pos:end="406:14">rv</name> <operator pos:start="406:16" pos:end="406:16">=</operator> <call pos:start="406:18" pos:end="408:61"><name pos:start="406:18" pos:end="406:31">curl_http_post</name><argument_list pos:start="406:32" pos:end="408:61">(<argument pos:start="406:33" pos:end="406:49"><expr pos:start="406:33" pos:end="406:49"><name pos:start="406:33" pos:end="406:49">US1060_ENROLL_URL</name></expr></argument>, <argument pos:start="406:52" pos:end="406:67"><expr pos:start="406:52" pos:end="406:67"><name pos:start="406:52" pos:end="406:67">US1060_PKCS10_CT</name></expr></argument>,
            <argument pos:start="407:13" pos:end="407:29"><expr pos:start="407:13" pos:end="407:29"><name pos:start="407:13" pos:end="407:29">US1060_PKCS10_REQ</name></expr></argument>, <argument pos:start="407:32" pos:end="407:60"><expr pos:start="407:32" pos:end="407:60"><name pos:start="407:32" pos:end="407:45"><name pos:start="407:32" pos:end="407:42">test_matrix</name><index pos:start="407:43" pos:end="407:45">[<expr pos:start="407:44" pos:end="407:44"><name pos:start="407:44" pos:end="407:44">i</name></expr>]</index></name><operator pos:start="407:46" pos:end="407:46">.</operator><name pos:start="407:47" pos:end="407:60">curl_http_auth</name></expr></argument>,
            <argument pos:start="408:13" pos:end="408:26"><expr pos:start="408:13" pos:end="408:26"><name pos:start="408:13" pos:end="408:26">US1060_CACERTS</name></expr></argument>, <argument pos:start="408:29" pos:end="408:42"><expr pos:start="408:29" pos:end="408:42"><name pos:start="408:29" pos:end="408:42">CURLAUTH_BASIC</name></expr></argument>, <argument pos:start="408:45" pos:end="408:48"><expr pos:start="408:45" pos:end="408:48"><name pos:start="408:45" pos:end="408:48">NULL</name></expr></argument>, <argument pos:start="408:51" pos:end="408:54"><expr pos:start="408:51" pos:end="408:54"><name pos:start="408:51" pos:end="408:54">NULL</name></expr></argument>, <argument pos:start="408:57" pos:end="408:60"><expr pos:start="408:57" pos:end="408:60"><name pos:start="408:57" pos:end="408:60">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></else></if_stmt>
        <break pos:start="410:9" pos:end="410:14">break;</break>
    </block_content>}</block></switch>
    <expr_stmt pos:start="412:5" pos:end="412:57"><expr pos:start="412:5" pos:end="412:56"><call pos:start="412:5" pos:end="412:56"><name pos:start="412:5" pos:end="412:13">CU_ASSERT</name><argument_list pos:start="412:14" pos:end="412:56">(<argument pos:start="412:15" pos:end="412:55"><expr pos:start="412:15" pos:end="412:55"><name pos:start="412:15" pos:end="412:16">rv</name> <operator pos:start="412:18" pos:end="412:19">==</operator> <name pos:start="412:21" pos:end="412:34"><name pos:start="412:21" pos:end="412:31">test_matrix</name><index pos:start="412:32" pos:end="412:34">[<expr pos:start="412:33" pos:end="412:33"><name pos:start="412:33" pos:end="412:33">i</name></expr>]</index></name><operator pos:start="412:35" pos:end="412:35">.</operator><name pos:start="412:36" pos:end="412:55">expected_http_result</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <if_stmt pos:start="413:5" pos:end="416:5"><if pos:start="413:5" pos:end="416:5">if <condition pos:start="413:8" pos:end="413:50">(<expr pos:start="413:9" pos:end="413:49"><name pos:start="413:9" pos:end="413:10">rv</name> <operator pos:start="413:12" pos:end="413:13">!=</operator> <name pos:start="413:15" pos:end="413:28"><name pos:start="413:15" pos:end="413:25">test_matrix</name><index pos:start="413:26" pos:end="413:28">[<expr pos:start="413:27" pos:end="413:27"><name pos:start="413:27" pos:end="413:27">i</name></expr>]</index></name><operator pos:start="413:29" pos:end="413:29">.</operator><name pos:start="413:30" pos:end="413:49">expected_http_result</name></expr>)</condition> <block pos:start="413:52" pos:end="416:5">{<block_content pos:start="414:9" pos:end="415:48">
        <expr_stmt pos:start="414:9" pos:end="415:48"><expr pos:start="414:9" pos:end="415:47"><call pos:start="414:9" pos:end="415:47"><name pos:start="414:9" pos:end="414:14">printf</name><argument_list pos:start="414:15" pos:end="415:47">(<argument pos:start="414:16" pos:end="414:55"><expr pos:start="414:16" pos:end="414:55"><literal type="string" pos:start="414:16" pos:end="414:55">"\nMatrix test %s failed with rv = %d\n"</literal></expr></argument>,
            <argument pos:start="415:13" pos:end="415:36"><expr pos:start="415:13" pos:end="415:36"><name pos:start="415:13" pos:end="415:26"><name pos:start="415:13" pos:end="415:23">test_matrix</name><index pos:start="415:24" pos:end="415:26">[<expr pos:start="415:25" pos:end="415:25"><name pos:start="415:25" pos:end="415:25">i</name></expr>]</index></name><operator pos:start="415:27" pos:end="415:27">.</operator><name pos:start="415:28" pos:end="415:36">test_name</name></expr></argument>, <argument pos:start="415:39" pos:end="415:46"><expr pos:start="415:39" pos:end="415:46"><operator pos:start="415:39" pos:end="415:39">(</operator><name pos:start="415:40" pos:end="415:42">int</name><operator pos:start="415:43" pos:end="415:43">)</operator> <name pos:start="415:45" pos:end="415:46">rv</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></if></if_stmt>
</block_content>}</block></function>

<comment type="block" pos:start="419:1" pos:end="421:3">/*
 * This test case runs all the tests in the matrix
 */</comment>
<function pos:start="422:1" pos:end="430:1"><type pos:start="422:1" pos:end="422:11"><specifier pos:start="422:1" pos:end="422:6">static</specifier> <name pos:start="422:8" pos:end="422:11">void</name></type> <name pos:start="422:13" pos:end="422:24">us1060_test0</name> <parameter_list pos:start="422:26" pos:end="422:31">(<parameter pos:start="422:27" pos:end="422:30"><decl pos:start="422:27" pos:end="422:30"><type pos:start="422:27" pos:end="422:30"><name pos:start="422:27" pos:end="422:30">void</name></type></decl></parameter>)</parameter_list>
<block pos:start="423:1" pos:end="430:1">{<block_content pos:start="424:5" pos:end="429:5">
    <decl_stmt pos:start="424:5" pos:end="424:10"><decl pos:start="424:5" pos:end="424:9"><type pos:start="424:5" pos:end="424:7"><name pos:start="424:5" pos:end="424:7">int</name></type> <name pos:start="424:9" pos:end="424:9">i</name></decl>;</decl_stmt>
    <decl_stmt pos:start="425:5" pos:end="425:64"><decl pos:start="425:5" pos:end="425:63"><type pos:start="425:5" pos:end="425:7"><name pos:start="425:5" pos:end="425:7">int</name></type> <name pos:start="425:9" pos:end="425:16">test_cnt</name> <init pos:start="425:18" pos:end="425:63">= <expr pos:start="425:20" pos:end="425:63"><sizeof pos:start="425:20" pos:end="425:38">sizeof<argument_list pos:start="425:26" pos:end="425:38">(<argument pos:start="425:27" pos:end="425:37"><expr pos:start="425:27" pos:end="425:37"><name pos:start="425:27" pos:end="425:37">test_matrix</name></expr></argument>)</argument_list></sizeof> <operator pos:start="425:40" pos:end="425:40">/</operator> <sizeof pos:start="425:42" pos:end="425:63">sizeof<argument_list pos:start="425:48" pos:end="425:63">(<argument pos:start="425:49" pos:end="425:62"><expr pos:start="425:49" pos:end="425:62"><name pos:start="425:49" pos:end="425:62"><name pos:start="425:49" pos:end="425:59">test_matrix</name><index pos:start="425:60" pos:end="425:62">[<expr pos:start="425:61" pos:end="425:61"><literal type="number" pos:start="425:61" pos:end="425:61">0</literal></expr>]</index></name></expr></argument>)</argument_list></sizeof></expr></init></decl>;</decl_stmt>

    <for pos:start="427:5" pos:end="429:5">for <control pos:start="427:9" pos:end="427:34">(<init pos:start="427:10" pos:end="427:15"><expr pos:start="427:10" pos:end="427:14"><name pos:start="427:10" pos:end="427:10">i</name> <operator pos:start="427:12" pos:end="427:12">=</operator> <literal type="number" pos:start="427:14" pos:end="427:14">0</literal></expr>;</init> <condition pos:start="427:17" pos:end="427:29"><expr pos:start="427:17" pos:end="427:28"><name pos:start="427:17" pos:end="427:17">i</name> <operator pos:start="427:19" pos:end="427:19">&lt;</operator> <name pos:start="427:21" pos:end="427:28">test_cnt</name></expr>;</condition> <incr pos:start="427:31" pos:end="427:33"><expr pos:start="427:31" pos:end="427:33"><name pos:start="427:31" pos:end="427:31">i</name><operator pos:start="427:32" pos:end="427:33">++</operator></expr></incr>)</control> <block pos:start="427:36" pos:end="429:5">{<block_content pos:start="428:9" pos:end="428:35">
        <expr_stmt pos:start="428:9" pos:end="428:35"><expr pos:start="428:9" pos:end="428:34"><call pos:start="428:9" pos:end="428:34"><name pos:start="428:9" pos:end="428:31">us1060_test_matrix_item</name><argument_list pos:start="428:32" pos:end="428:34">(<argument pos:start="428:33" pos:end="428:33"><expr pos:start="428:33" pos:end="428:33"><name pos:start="428:33" pos:end="428:33">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></for>
</block_content>}</block></function>

<comment type="block" pos:start="432:1" pos:end="438:3">/*
 * This test case is verifies the happy path when EST
 * proxy is configured in SRP mode.  The client will attempt
 * to use SRP.  The connection between the proxy and
 * server does not use SRP.  We perform a simple enroll
 * operation.
 */</comment>
<function pos:start="439:1" pos:end="464:1"><type pos:start="439:1" pos:end="439:11"><specifier pos:start="439:1" pos:end="439:6">static</specifier> <name pos:start="439:8" pos:end="439:11">void</name></type> <name pos:start="439:13" pos:end="439:26">us1060_test200</name> <parameter_list pos:start="439:28" pos:end="439:33">(<parameter pos:start="439:29" pos:end="439:32"><decl pos:start="439:29" pos:end="439:32"><type pos:start="439:29" pos:end="439:32"><name pos:start="439:29" pos:end="439:32">void</name></type></decl></parameter>)</parameter_list>
<block pos:start="440:1" pos:end="464:1">{<block_content pos:start="441:5" pos:end="463:25">
    <decl_stmt pos:start="441:5" pos:end="441:12"><decl pos:start="441:5" pos:end="441:11"><type pos:start="441:5" pos:end="441:8"><name pos:start="441:5" pos:end="441:8">long</name></type> <name pos:start="441:10" pos:end="441:11">rv</name></decl>;</decl_stmt>

    <expr_stmt pos:start="443:5" pos:end="444:5"><expr pos:start="443:5" pos:end="443:15"><name pos:start="443:5" pos:end="443:15">LOG_FUNC_NM</name></expr>
    ;</expr_stmt>

    <comment type="block" pos:start="446:5" pos:end="448:7">/*
     * Restart the EST server with SRP disabled
     */</comment>
    <expr_stmt pos:start="449:5" pos:end="449:14"><expr pos:start="449:5" pos:end="449:13"><call pos:start="449:5" pos:end="449:13"><name pos:start="449:5" pos:end="449:11">st_stop</name><argument_list pos:start="449:12" pos:end="449:13">()</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="450:5" pos:end="450:13"><expr pos:start="450:5" pos:end="450:12"><call pos:start="450:5" pos:end="450:12"><name pos:start="450:5" pos:end="450:9">SLEEP</name><argument_list pos:start="450:10" pos:end="450:12">(<argument pos:start="450:11" pos:end="450:11"><expr pos:start="450:11" pos:end="450:11"><literal type="number" pos:start="450:11" pos:end="450:11">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="451:5" pos:end="452:11"><expr pos:start="451:5" pos:end="452:10"><name pos:start="451:5" pos:end="451:6">rv</name> <operator pos:start="451:8" pos:end="451:8">=</operator> <call pos:start="451:10" pos:end="452:10"><name pos:start="451:10" pos:end="451:28">us1060_start_server</name><argument_list pos:start="451:29" pos:end="452:10">(<argument pos:start="451:30" pos:end="451:50"><expr pos:start="451:30" pos:end="451:50"><name pos:start="451:30" pos:end="451:50">US1060_SERVER_CERTKEY</name></expr></argument>, <argument pos:start="451:53" pos:end="451:73"><expr pos:start="451:53" pos:end="451:73"><name pos:start="451:53" pos:end="451:73">US1060_SERVER_CERTKEY</name></expr></argument>, <argument pos:start="451:76" pos:end="451:76"><expr pos:start="451:76" pos:end="451:76"><literal type="number" pos:start="451:76" pos:end="451:76">0</literal></expr></argument>, <argument pos:start="451:79" pos:end="451:79"><expr pos:start="451:79" pos:end="451:79"><literal type="number" pos:start="451:79" pos:end="451:79">0</literal></expr></argument>,
        <argument pos:start="452:9" pos:end="452:9"><expr pos:start="452:9" pos:end="452:9"><literal type="number" pos:start="452:9" pos:end="452:9">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="453:5" pos:end="453:23"><expr pos:start="453:5" pos:end="453:22"><call pos:start="453:5" pos:end="453:22"><name pos:start="453:5" pos:end="453:13">CU_ASSERT</name><argument_list pos:start="453:14" pos:end="453:22">(<argument pos:start="453:15" pos:end="453:21"><expr pos:start="453:15" pos:end="453:21"><name pos:start="453:15" pos:end="453:16">rv</name> <operator pos:start="453:18" pos:end="453:19">==</operator> <literal type="number" pos:start="453:21" pos:end="453:21">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="455:5" pos:end="458:14"><expr pos:start="455:5" pos:end="458:13"><name pos:start="455:5" pos:end="455:6">rv</name> <operator pos:start="455:8" pos:end="455:8">=</operator> <call pos:start="455:10" pos:end="458:13"><name pos:start="455:10" pos:end="455:27">curl_http_post_srp</name><argument_list pos:start="455:28" pos:end="458:13">(<argument pos:start="455:29" pos:end="455:51"><expr pos:start="455:29" pos:end="455:51"><name pos:start="455:29" pos:end="455:51">US1060_PROXY_ENROLL_URL</name></expr></argument>, <argument pos:start="455:54" pos:end="455:69"><expr pos:start="455:54" pos:end="455:69"><name pos:start="455:54" pos:end="455:69">US1060_PKCS10_CT</name></expr></argument>,
    <argument pos:start="456:5" pos:end="456:21"><expr pos:start="456:5" pos:end="456:21"><name pos:start="456:5" pos:end="456:21">US1060_PKCS10_REQ</name></expr></argument>,
    <argument pos:start="457:5" pos:end="457:22"><expr pos:start="457:5" pos:end="457:22"><name pos:start="457:5" pos:end="457:22">US1060_UIDPWD_GOOD</name></expr></argument>, <argument pos:start="457:25" pos:end="457:28"><expr pos:start="457:25" pos:end="457:28"><name pos:start="457:25" pos:end="457:28">NULL</name></expr></argument>, <argument pos:start="457:31" pos:end="457:44"><expr pos:start="457:31" pos:end="457:44"><name pos:start="457:31" pos:end="457:44">CURLAUTH_BASIC</name></expr></argument>, <argument pos:start="457:47" pos:end="457:50"><expr pos:start="457:47" pos:end="457:50"><name pos:start="457:47" pos:end="457:50">NULL</name></expr></argument>, <argument pos:start="457:53" pos:end="457:62"><expr pos:start="457:53" pos:end="457:62"><literal type="string" pos:start="457:53" pos:end="457:62">"srp_user"</literal></expr></argument>, <argument pos:start="457:65" pos:end="457:73"><expr pos:start="457:65" pos:end="457:73"><literal type="string" pos:start="457:65" pos:end="457:73">"srp_pwd"</literal></expr></argument>, <argument pos:start="457:76" pos:end="457:79"><expr pos:start="457:76" pos:end="457:79"><name pos:start="457:76" pos:end="457:79">NULL</name></expr></argument>,
        <argument pos:start="458:9" pos:end="458:12"><expr pos:start="458:9" pos:end="458:12"><name pos:start="458:9" pos:end="458:12">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <comment type="block" pos:start="459:5" pos:end="462:7">/*
     * Since we passed in a valid SRP userID/password,
     * we expect the server to respond with success
     */</comment>
    <expr_stmt pos:start="463:5" pos:end="463:25"><expr pos:start="463:5" pos:end="463:24"><call pos:start="463:5" pos:end="463:24"><name pos:start="463:5" pos:end="463:13">CU_ASSERT</name><argument_list pos:start="463:14" pos:end="463:24">(<argument pos:start="463:15" pos:end="463:23"><expr pos:start="463:15" pos:end="463:23"><name pos:start="463:15" pos:end="463:16">rv</name> <operator pos:start="463:18" pos:end="463:19">==</operator> <literal type="number" pos:start="463:21" pos:end="463:23">200</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<comment type="block" pos:start="466:1" pos:end="471:3">/*
 * This test case is verifies the simple enroll fails
 * when the EST client provides a bad SRP password.
 * The connection between the proxy and server does not
 * use SRP.
 */</comment>
<function pos:start="472:1" pos:end="484:1"><type pos:start="472:1" pos:end="472:11"><specifier pos:start="472:1" pos:end="472:6">static</specifier> <name pos:start="472:8" pos:end="472:11">void</name></type> <name pos:start="472:13" pos:end="472:26">us1060_test201</name> <parameter_list pos:start="472:28" pos:end="472:33">(<parameter pos:start="472:29" pos:end="472:32"><decl pos:start="472:29" pos:end="472:32"><type pos:start="472:29" pos:end="472:32"><name pos:start="472:29" pos:end="472:32">void</name></type></decl></parameter>)</parameter_list>
<block pos:start="473:1" pos:end="484:1">{<block_content pos:start="474:5" pos:end="483:23">
    <decl_stmt pos:start="474:5" pos:end="474:12"><decl pos:start="474:5" pos:end="474:11"><type pos:start="474:5" pos:end="474:8"><name pos:start="474:5" pos:end="474:8">long</name></type> <name pos:start="474:10" pos:end="474:11">rv</name></decl>;</decl_stmt>

    <expr_stmt pos:start="476:5" pos:end="477:5"><expr pos:start="476:5" pos:end="476:15"><name pos:start="476:5" pos:end="476:15">LOG_FUNC_NM</name></expr>
    ;</expr_stmt>

    <expr_stmt pos:start="479:5" pos:end="482:20"><expr pos:start="479:5" pos:end="482:19"><name pos:start="479:5" pos:end="479:6">rv</name> <operator pos:start="479:8" pos:end="479:8">=</operator> <call pos:start="479:10" pos:end="482:19"><name pos:start="479:10" pos:end="479:27">curl_http_post_srp</name><argument_list pos:start="479:28" pos:end="482:19">(<argument pos:start="479:29" pos:end="479:51"><expr pos:start="479:29" pos:end="479:51"><name pos:start="479:29" pos:end="479:51">US1060_PROXY_ENROLL_URL</name></expr></argument>, <argument pos:start="479:54" pos:end="479:69"><expr pos:start="479:54" pos:end="479:69"><name pos:start="479:54" pos:end="479:69">US1060_PKCS10_CT</name></expr></argument>,
    <argument pos:start="480:5" pos:end="480:21"><expr pos:start="480:5" pos:end="480:21"><name pos:start="480:5" pos:end="480:21">US1060_PKCS10_REQ</name></expr></argument>,
    <argument pos:start="481:5" pos:end="481:22"><expr pos:start="481:5" pos:end="481:22"><name pos:start="481:5" pos:end="481:22">US1060_UIDPWD_GOOD</name></expr></argument>, <argument pos:start="481:25" pos:end="481:28"><expr pos:start="481:25" pos:end="481:28"><name pos:start="481:25" pos:end="481:28">NULL</name></expr></argument>, <argument pos:start="481:31" pos:end="481:44"><expr pos:start="481:31" pos:end="481:44"><name pos:start="481:31" pos:end="481:44">CURLAUTH_BASIC</name></expr></argument>, <argument pos:start="481:47" pos:end="481:50"><expr pos:start="481:47" pos:end="481:50"><name pos:start="481:47" pos:end="481:50">NULL</name></expr></argument>, <argument pos:start="481:53" pos:end="481:62"><expr pos:start="481:53" pos:end="481:62"><literal type="string" pos:start="481:53" pos:end="481:62">"srp_user"</literal></expr></argument>, <argument pos:start="481:65" pos:end="481:74"><expr pos:start="481:65" pos:end="481:74"><literal type="string" pos:start="481:65" pos:end="481:74">"boguspwd"</literal></expr></argument>,
        <argument pos:start="482:9" pos:end="482:12"><expr pos:start="482:9" pos:end="482:12"><name pos:start="482:9" pos:end="482:12">NULL</name></expr></argument>, <argument pos:start="482:15" pos:end="482:18"><expr pos:start="482:15" pos:end="482:18"><name pos:start="482:15" pos:end="482:18">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="483:5" pos:end="483:23"><expr pos:start="483:5" pos:end="483:22"><call pos:start="483:5" pos:end="483:22"><name pos:start="483:5" pos:end="483:13">CU_ASSERT</name><argument_list pos:start="483:14" pos:end="483:22">(<argument pos:start="483:15" pos:end="483:21"><expr pos:start="483:15" pos:end="483:21"><name pos:start="483:15" pos:end="483:16">rv</name> <operator pos:start="483:18" pos:end="483:19">==</operator> <literal type="number" pos:start="483:21" pos:end="483:21">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<comment type="block" pos:start="486:1" pos:end="491:3">/*
 * This test case is verifies the simple enroll fails
 * when the EST client provides a bad HTTP password
 * and SRP is used.  The connection between the proxy
 * and server does not use SRP.
 */</comment>
<function pos:start="492:1" pos:end="504:1"><type pos:start="492:1" pos:end="492:11"><specifier pos:start="492:1" pos:end="492:6">static</specifier> <name pos:start="492:8" pos:end="492:11">void</name></type> <name pos:start="492:13" pos:end="492:26">us1060_test202</name> <parameter_list pos:start="492:28" pos:end="492:33">(<parameter pos:start="492:29" pos:end="492:32"><decl pos:start="492:29" pos:end="492:32"><type pos:start="492:29" pos:end="492:32"><name pos:start="492:29" pos:end="492:32">void</name></type></decl></parameter>)</parameter_list>
<block pos:start="493:1" pos:end="504:1">{<block_content pos:start="494:5" pos:end="503:25">
    <decl_stmt pos:start="494:5" pos:end="494:12"><decl pos:start="494:5" pos:end="494:11"><type pos:start="494:5" pos:end="494:8"><name pos:start="494:5" pos:end="494:8">long</name></type> <name pos:start="494:10" pos:end="494:11">rv</name></decl>;</decl_stmt>

    <expr_stmt pos:start="496:5" pos:end="497:5"><expr pos:start="496:5" pos:end="496:15"><name pos:start="496:5" pos:end="496:15">LOG_FUNC_NM</name></expr>
    ;</expr_stmt>

    <expr_stmt pos:start="499:5" pos:end="502:14"><expr pos:start="499:5" pos:end="502:13"><name pos:start="499:5" pos:end="499:6">rv</name> <operator pos:start="499:8" pos:end="499:8">=</operator> <call pos:start="499:10" pos:end="502:13"><name pos:start="499:10" pos:end="499:27">curl_http_post_srp</name><argument_list pos:start="499:28" pos:end="502:13">(<argument pos:start="499:29" pos:end="499:51"><expr pos:start="499:29" pos:end="499:51"><name pos:start="499:29" pos:end="499:51">US1060_PROXY_ENROLL_URL</name></expr></argument>, <argument pos:start="499:54" pos:end="499:69"><expr pos:start="499:54" pos:end="499:69"><name pos:start="499:54" pos:end="499:69">US1060_PKCS10_CT</name></expr></argument>,
    <argument pos:start="500:5" pos:end="500:21"><expr pos:start="500:5" pos:end="500:21"><name pos:start="500:5" pos:end="500:21">US1060_PKCS10_REQ</name></expr></argument>,
    <argument pos:start="501:5" pos:end="501:21"><expr pos:start="501:5" pos:end="501:21"><name pos:start="501:5" pos:end="501:21">US1060_UIDPWD_BAD</name></expr></argument>, <argument pos:start="501:24" pos:end="501:27"><expr pos:start="501:24" pos:end="501:27"><name pos:start="501:24" pos:end="501:27">NULL</name></expr></argument>, <argument pos:start="501:30" pos:end="501:43"><expr pos:start="501:30" pos:end="501:43"><name pos:start="501:30" pos:end="501:43">CURLAUTH_BASIC</name></expr></argument>, <argument pos:start="501:46" pos:end="501:49"><expr pos:start="501:46" pos:end="501:49"><name pos:start="501:46" pos:end="501:49">NULL</name></expr></argument>, <argument pos:start="501:52" pos:end="501:61"><expr pos:start="501:52" pos:end="501:61"><literal type="string" pos:start="501:52" pos:end="501:61">"srp_user"</literal></expr></argument>, <argument pos:start="501:64" pos:end="501:72"><expr pos:start="501:64" pos:end="501:72"><literal type="string" pos:start="501:64" pos:end="501:72">"srp_pwd"</literal></expr></argument>, <argument pos:start="501:75" pos:end="501:78"><expr pos:start="501:75" pos:end="501:78"><name pos:start="501:75" pos:end="501:78">NULL</name></expr></argument>,
        <argument pos:start="502:9" pos:end="502:12"><expr pos:start="502:9" pos:end="502:12"><name pos:start="502:9" pos:end="502:12">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="503:5" pos:end="503:25"><expr pos:start="503:5" pos:end="503:24"><call pos:start="503:5" pos:end="503:24"><name pos:start="503:5" pos:end="503:13">CU_ASSERT</name><argument_list pos:start="503:14" pos:end="503:24">(<argument pos:start="503:15" pos:end="503:23"><expr pos:start="503:15" pos:end="503:23"><name pos:start="503:15" pos:end="503:16">rv</name> <operator pos:start="503:18" pos:end="503:19">==</operator> <literal type="number" pos:start="503:21" pos:end="503:23">401</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<comment type="block" pos:start="506:1" pos:end="512:3">/*
 * This test case is verifies the simple enroll works
 * when the EST client provides no HTTP password
 * and SRP is used.  The connection between the proxy
 * and server does not use SRP.  HTTP auth is disabled
 * on the proxy.
 */</comment>
<function pos:start="513:1" pos:end="526:1"><type pos:start="513:1" pos:end="513:11"><specifier pos:start="513:1" pos:end="513:6">static</specifier> <name pos:start="513:8" pos:end="513:11">void</name></type> <name pos:start="513:13" pos:end="513:26">us1060_test203</name> <parameter_list pos:start="513:28" pos:end="513:33">(<parameter pos:start="513:29" pos:end="513:32"><decl pos:start="513:29" pos:end="513:32"><type pos:start="513:29" pos:end="513:32"><name pos:start="513:29" pos:end="513:32">void</name></type></decl></parameter>)</parameter_list>
<block pos:start="514:1" pos:end="526:1">{<block_content pos:start="515:5" pos:end="525:25">
    <decl_stmt pos:start="515:5" pos:end="515:12"><decl pos:start="515:5" pos:end="515:11"><type pos:start="515:5" pos:end="515:8"><name pos:start="515:5" pos:end="515:8">long</name></type> <name pos:start="515:10" pos:end="515:11">rv</name></decl>;</decl_stmt>

    <expr_stmt pos:start="517:5" pos:end="518:5"><expr pos:start="517:5" pos:end="517:15"><name pos:start="517:5" pos:end="517:15">LOG_FUNC_NM</name></expr>
    ;</expr_stmt>

    <expr_stmt pos:start="520:5" pos:end="520:29"><expr pos:start="520:5" pos:end="520:28"><call pos:start="520:5" pos:end="520:28"><name pos:start="520:5" pos:end="520:25">st_proxy_http_disable</name><argument_list pos:start="520:26" pos:end="520:28">(<argument pos:start="520:27" pos:end="520:27"><expr pos:start="520:27" pos:end="520:27"><literal type="number" pos:start="520:27" pos:end="520:27">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="522:5" pos:end="524:20"><expr pos:start="522:5" pos:end="524:19"><name pos:start="522:5" pos:end="522:6">rv</name> <operator pos:start="522:8" pos:end="522:8">=</operator> <call pos:start="522:10" pos:end="524:19"><name pos:start="522:10" pos:end="522:27">curl_http_post_srp</name><argument_list pos:start="522:28" pos:end="524:19">(<argument pos:start="522:29" pos:end="522:51"><expr pos:start="522:29" pos:end="522:51"><name pos:start="522:29" pos:end="522:51">US1060_PROXY_ENROLL_URL</name></expr></argument>, <argument pos:start="522:54" pos:end="522:69"><expr pos:start="522:54" pos:end="522:69"><name pos:start="522:54" pos:end="522:69">US1060_PKCS10_CT</name></expr></argument>,
    <argument pos:start="523:5" pos:end="523:21"><expr pos:start="523:5" pos:end="523:21"><name pos:start="523:5" pos:end="523:21">US1060_PKCS10_REQ</name></expr></argument>, <argument pos:start="523:24" pos:end="523:27"><expr pos:start="523:24" pos:end="523:27"><name pos:start="523:24" pos:end="523:27">NULL</name></expr></argument>, <argument pos:start="523:30" pos:end="523:33"><expr pos:start="523:30" pos:end="523:33"><name pos:start="523:30" pos:end="523:33">NULL</name></expr></argument>, <argument pos:start="523:36" pos:end="523:48"><expr pos:start="523:36" pos:end="523:48"><name pos:start="523:36" pos:end="523:48">CURLAUTH_NONE</name></expr></argument>, <argument pos:start="523:51" pos:end="523:54"><expr pos:start="523:51" pos:end="523:54"><name pos:start="523:51" pos:end="523:54">NULL</name></expr></argument>, <argument pos:start="523:57" pos:end="523:66"><expr pos:start="523:57" pos:end="523:66"><literal type="string" pos:start="523:57" pos:end="523:66">"srp_user"</literal></expr></argument>, <argument pos:start="523:69" pos:end="523:77"><expr pos:start="523:69" pos:end="523:77"><literal type="string" pos:start="523:69" pos:end="523:77">"srp_pwd"</literal></expr></argument>,
        <argument pos:start="524:9" pos:end="524:12"><expr pos:start="524:9" pos:end="524:12"><name pos:start="524:9" pos:end="524:12">NULL</name></expr></argument>, <argument pos:start="524:15" pos:end="524:18"><expr pos:start="524:15" pos:end="524:18"><name pos:start="524:15" pos:end="524:18">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="525:5" pos:end="525:25"><expr pos:start="525:5" pos:end="525:24"><call pos:start="525:5" pos:end="525:24"><name pos:start="525:5" pos:end="525:13">CU_ASSERT</name><argument_list pos:start="525:14" pos:end="525:24">(<argument pos:start="525:15" pos:end="525:23"><expr pos:start="525:15" pos:end="525:23"><name pos:start="525:15" pos:end="525:16">rv</name> <operator pos:start="525:18" pos:end="525:19">==</operator> <literal type="number" pos:start="525:21" pos:end="525:23">200</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function pos:start="528:1" pos:end="565:1"><type pos:start="528:1" pos:end="528:3"><name pos:start="528:1" pos:end="528:3">int</name></type> <name pos:start="528:5" pos:end="528:20">us1060_add_suite</name> <parameter_list pos:start="528:22" pos:end="528:27">(<parameter pos:start="528:23" pos:end="528:26"><decl pos:start="528:23" pos:end="528:26"><type pos:start="528:23" pos:end="528:26"><name pos:start="528:23" pos:end="528:26">void</name></type></decl></parameter>)</parameter_list>
<block pos:start="529:1" pos:end="565:1">{<block_content pos:start="531:5" pos:end="565:0">
<cpp:ifdef pos:start="530:1" pos:end="530:17">#<cpp:directive pos:start="530:2" pos:end="530:6">ifdef</cpp:directive> <name pos:start="530:8" pos:end="530:17">HAVE_CUNIT</name></cpp:ifdef>
    <decl_stmt pos:start="531:5" pos:end="531:28"><decl pos:start="531:5" pos:end="531:27"><type pos:start="531:5" pos:end="531:13"><name pos:start="531:5" pos:end="531:13">CU_pSuite</name></type> <name pos:start="531:15" pos:end="531:20">pSuite</name> <init pos:start="531:22" pos:end="531:27">= <expr pos:start="531:24" pos:end="531:27"><name pos:start="531:24" pos:end="531:27">NULL</name></expr></init></decl>;</decl_stmt>

    <comment type="block" pos:start="533:5" pos:end="533:37">/* add a suite to the registry */</comment>
    <expr_stmt pos:start="534:5" pos:end="536:34"><expr pos:start="534:5" pos:end="536:33"><name pos:start="534:5" pos:end="534:10">pSuite</name> <operator pos:start="534:12" pos:end="534:12">=</operator> <call pos:start="534:14" pos:end="536:33"><name pos:start="534:14" pos:end="534:25">CU_add_suite</name><argument_list pos:start="534:26" pos:end="536:33">(<argument pos:start="534:27" pos:end="534:57"><expr pos:start="534:27" pos:end="534:57"><literal type="string" pos:start="534:27" pos:end="534:57">"us1060_tls_srp (server/proxy)"</literal></expr></argument>,
            <argument pos:start="535:13" pos:end="535:29"><expr pos:start="535:13" pos:end="535:29"><name pos:start="535:13" pos:end="535:29">us1060_init_suite</name></expr></argument>,
            <argument pos:start="536:13" pos:end="536:32"><expr pos:start="536:13" pos:end="536:32"><name pos:start="536:13" pos:end="536:32">us1060_destroy_suite</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <if_stmt pos:start="537:5" pos:end="540:5"><if pos:start="537:5" pos:end="540:5">if <condition pos:start="537:8" pos:end="537:23">(<expr pos:start="537:9" pos:end="537:22"><name pos:start="537:9" pos:end="537:12">NULL</name> <operator pos:start="537:14" pos:end="537:15">==</operator> <name pos:start="537:17" pos:end="537:22">pSuite</name></expr>)</condition> <block pos:start="537:25" pos:end="540:5">{<block_content pos:start="538:9" pos:end="539:30">
        <expr_stmt pos:start="538:9" pos:end="538:30"><expr pos:start="538:9" pos:end="538:29"><call pos:start="538:9" pos:end="538:29"><name pos:start="538:9" pos:end="538:27">CU_cleanup_registry</name><argument_list pos:start="538:28" pos:end="538:29">()</argument_list></call></expr>;</expr_stmt>
        <return pos:start="539:9" pos:end="539:30">return <expr pos:start="539:16" pos:end="539:29"><call pos:start="539:16" pos:end="539:29"><name pos:start="539:16" pos:end="539:27">CU_get_error</name><argument_list pos:start="539:28" pos:end="539:29">()</argument_list></call></expr>;</return>
    </block_content>}</block></if></if_stmt>

    <comment type="block" pos:start="542:5" pos:end="552:7">/*
     * Add the tests to the suite
     *
     * ********************IMPORTANT*********************
     * Do not change the order of these tests.
     * Some of the tests stop the EST server and restart
     * it using different certs.  If you change the order
     * then false negatives may occur.
     * **************************************************
     *
     */</comment>
    <if_stmt pos:start="553:5" pos:end="561:5"><if pos:start="553:5" pos:end="561:5">if <condition pos:start="553:8" pos:end="557:93">(<expr pos:start="553:9" pos:end="557:92"><operator pos:start="553:9" pos:end="553:9">(</operator><name pos:start="553:10" pos:end="553:13">NULL</name> <operator pos:start="553:15" pos:end="553:16">==</operator> <call pos:start="553:18" pos:end="553:83"><name pos:start="553:18" pos:end="553:28">CU_add_test</name><argument_list pos:start="553:29" pos:end="553:83">(<argument pos:start="553:30" pos:end="553:35"><expr pos:start="553:30" pos:end="553:35"><name pos:start="553:30" pos:end="553:35">pSuite</name></expr></argument>, <argument pos:start="553:38" pos:end="553:68"><expr pos:start="553:38" pos:end="553:68"><literal type="string" pos:start="553:38" pos:end="553:68">"TLS-SRP server: matrix master"</literal></expr></argument>, <argument pos:start="553:71" pos:end="553:82"><expr pos:start="553:71" pos:end="553:82"><name pos:start="553:71" pos:end="553:82">us1060_test0</name></expr></argument>)</argument_list></call><operator pos:start="553:84" pos:end="553:84">)</operator> <operator pos:start="553:86" pos:end="553:87">||</operator>
        <operator pos:start="554:9" pos:end="554:9">(</operator><name pos:start="554:10" pos:end="554:13">NULL</name> <operator pos:start="554:15" pos:end="554:16">==</operator> <call pos:start="554:18" pos:end="554:83"><name pos:start="554:18" pos:end="554:28">CU_add_test</name><argument_list pos:start="554:29" pos:end="554:83">(<argument pos:start="554:30" pos:end="554:35"><expr pos:start="554:30" pos:end="554:35"><name pos:start="554:30" pos:end="554:35">pSuite</name></expr></argument>, <argument pos:start="554:38" pos:end="554:66"><expr pos:start="554:38" pos:end="554:66"><literal type="string" pos:start="554:38" pos:end="554:66">"TLS-SRP proxy: enroll w/SRP"</literal></expr></argument>, <argument pos:start="554:69" pos:end="554:82"><expr pos:start="554:69" pos:end="554:82"><name pos:start="554:69" pos:end="554:82">us1060_test200</name></expr></argument>)</argument_list></call><operator pos:start="554:84" pos:end="554:84">)</operator> <operator pos:start="554:86" pos:end="554:87">||</operator>
        <operator pos:start="555:9" pos:end="555:9">(</operator><name pos:start="555:10" pos:end="555:13">NULL</name> <operator pos:start="555:15" pos:end="555:16">==</operator> <call pos:start="555:18" pos:end="555:89"><name pos:start="555:18" pos:end="555:28">CU_add_test</name><argument_list pos:start="555:29" pos:end="555:89">(<argument pos:start="555:30" pos:end="555:35"><expr pos:start="555:30" pos:end="555:35"><name pos:start="555:30" pos:end="555:35">pSuite</name></expr></argument>, <argument pos:start="555:38" pos:end="555:72"><expr pos:start="555:38" pos:end="555:72"><literal type="string" pos:start="555:38" pos:end="555:72">"TLS-SRP proxy: enroll bad SRP pwd"</literal></expr></argument>, <argument pos:start="555:75" pos:end="555:88"><expr pos:start="555:75" pos:end="555:88"><name pos:start="555:75" pos:end="555:88">us1060_test201</name></expr></argument>)</argument_list></call><operator pos:start="555:90" pos:end="555:90">)</operator> <operator pos:start="555:92" pos:end="555:93">||</operator>
        <operator pos:start="556:9" pos:end="556:9">(</operator><name pos:start="556:10" pos:end="556:13">NULL</name> <operator pos:start="556:15" pos:end="556:16">==</operator> <call pos:start="556:18" pos:end="556:90"><name pos:start="556:18" pos:end="556:28">CU_add_test</name><argument_list pos:start="556:29" pos:end="556:90">(<argument pos:start="556:30" pos:end="556:35"><expr pos:start="556:30" pos:end="556:35"><name pos:start="556:30" pos:end="556:35">pSuite</name></expr></argument>, <argument pos:start="556:38" pos:end="556:73"><expr pos:start="556:38" pos:end="556:73"><literal type="string" pos:start="556:38" pos:end="556:73">"TLS-SRP proxy: enroll bad HTTP pwd"</literal></expr></argument>, <argument pos:start="556:76" pos:end="556:89"><expr pos:start="556:76" pos:end="556:89"><name pos:start="556:76" pos:end="556:89">us1060_test202</name></expr></argument>)</argument_list></call><operator pos:start="556:91" pos:end="556:91">)</operator> <operator pos:start="556:93" pos:end="556:94">||</operator>
        <operator pos:start="557:9" pos:end="557:9">(</operator><name pos:start="557:10" pos:end="557:13">NULL</name> <operator pos:start="557:15" pos:end="557:16">==</operator> <call pos:start="557:18" pos:end="557:91"><name pos:start="557:18" pos:end="557:28">CU_add_test</name><argument_list pos:start="557:29" pos:end="557:91">(<argument pos:start="557:30" pos:end="557:35"><expr pos:start="557:30" pos:end="557:35"><name pos:start="557:30" pos:end="557:35">pSuite</name></expr></argument>, <argument pos:start="557:38" pos:end="557:74"><expr pos:start="557:38" pos:end="557:74"><literal type="string" pos:start="557:38" pos:end="557:74">"TLS-SRP proxy: enroll w/o HTTP auth"</literal></expr></argument>, <argument pos:start="557:77" pos:end="557:90"><expr pos:start="557:77" pos:end="557:90"><name pos:start="557:77" pos:end="557:90">us1060_test203</name></expr></argument>)</argument_list></call><operator pos:start="557:92" pos:end="557:92">)</operator></expr>)</condition>
    <block pos:start="558:5" pos:end="561:5">{<block_content pos:start="559:9" pos:end="560:30">
        <expr_stmt pos:start="559:9" pos:end="559:30"><expr pos:start="559:9" pos:end="559:29"><call pos:start="559:9" pos:end="559:29"><name pos:start="559:9" pos:end="559:27">CU_cleanup_registry</name><argument_list pos:start="559:28" pos:end="559:29">()</argument_list></call></expr>;</expr_stmt>
        <return pos:start="560:9" pos:end="560:30">return <expr pos:start="560:16" pos:end="560:29"><call pos:start="560:16" pos:end="560:29"><name pos:start="560:16" pos:end="560:27">CU_get_error</name><argument_list pos:start="560:28" pos:end="560:29">()</argument_list></call></expr>;</return>
    </block_content>}</block></if></if_stmt>

    <return pos:start="563:5" pos:end="565:0">return <expr pos:start="563:12" pos:end="563:22"><name pos:start="563:12" pos:end="563:22">CUE_SUCCESS</name></expr>;</return>
<cpp:endif pos:start="564:1" pos:end="564:6">#<cpp:directive pos:start="564:2" pos:end="564:6">endif</cpp:directive></cpp:endif>
</block_content>}</block></function>

</unit>
